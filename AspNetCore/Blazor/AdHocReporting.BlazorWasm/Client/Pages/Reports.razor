@page "/reports"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication.Internal
@attribute [Authorize]
@implements IAsyncDisposable

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAccessTokenProviderAccessor AccessTokenProviderAccessor

<style>
    .eqv-chart-panel {
        margin-left: 5px;
    }
</style>

<div class="container-fluid px-5">
    <div class="row" id="ReportsContainer" style="visibility: hidden">
        <div class="col-md-3">
            <div class="card">
                <div class="card-header">
                    <div class="card-title float-left">Reports</div>
                    <div class="dropdown float-right card-header-button">
                        <button id="dropdownMenuButton" class="btn btn-default btn-sm dropdown-toggle"
                                type="button" data-toggle="dropdown"
                                aria-haspopup="true"
                                aria-expanded="false">
                            <i class="fas fa-cog"></i>
                        </button>
                        @if (IsManager)
                        {
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" id="NewReportButton" href="javascript:void(0)">New report</a>
                                <a class="dropdown-item" id="SaveReportButton" href="javascript:void(0)">Save as...</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" id="RemoveReportButton" href="javascript:void(0)">Remove report</a>
                            </div>
                        }
                        else
                        {
                            <!-- Disable all menu items if the curren user has no rights to manager reports -->
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" data-toggle="tooltip" data-html="true" data-placement="bottom"
                                 title="@TooltipContent">
                                <a class="dropdown-item disabled" href="javascript:void(0)">New report</a>
                                <a class="dropdown-item disabled" href="javascript:void(0)">Save as...</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item disabled" href="javascript:void(0)">Remove report</a>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <div id="ReportList" class="panel-body">
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-9">
            <div id="ReportPanel" class="card">
                <div class="card-header">
                    <div id="ReportTitle" class="card-title float-left">Report title</div>
                </div>
                <div class="card-body">
                    <div class="columns-block mb-3" data-hide-on-max>
                        <div class="block-caption">Columns:</div>
                        <div id="ColumnsBar"></div>
                    </div>
                    <div class="aggregations-block mb-3" data-hide-on-max>
                        <div class="block-caption mb-1">Aggregations:</div>
                        <div id="AggregationBar"></div>
                    </div>
                    <div class="conditions-block mb-3" data-hide-on-max>
                        <div class="block-caption">Conditions:</div>
                        <div id="QueryPanel" class="query-panel"></div>
                    </div>
                    <div class="result-block">
                        <div class="block-caption">Result:</div>
                        <!--<div id="ResultPanel" class="eqv-result-panel-content"></div>-->
                        <div id="ResultFacetsPanel"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row " id="NoReportPanel" style="visibility:hidden;">
        <div class="col-md-12">
            @if (IsManager)
            {
                <h3 class="text-center">
                    No reports are defined. <a id="FirstReportButton" href="javascript:document.AdhocReportingView.newReport()">Create the first one</a> to start.
                </h3>
            }
            else
            {
                <h3 class="text-center">
                    No reports are defined. Please login to a manager account to create reports.
                </h3>
            }
        </div>
    </div>
</div>

@code {
    public string TooltipContent { get; } = "You are logged with a 'consumer' role that is not allowed to manage reports.<br />"
        + "To test this functionlity - please log out and sign in again with another account.";

    public bool IsManager { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        IsManager = authState.User.IsInRole("eq-manager");

        await base.OnParametersSetAsync();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) {
            var result = await AccessTokenProviderAccessor.TokenProvider.RequestAccessToken();
            if (result.Status == AccessTokenResultStatus.Success && result.TryGetToken(out var token)) {
                await JSRuntime.InvokeVoidAsync("easyquery.blazor.startAdhocReporting", token.Value);
            }
            else {
                await JSRuntime.InvokeVoidAsync("consloe.error", "Unable to get access token");
            }
        }

        await base.OnAfterRenderAsync(firstRender);
    }


    private bool _disposed = false;

    public async ValueTask DisposeAsync()
    {
        if (!_disposed) {
            _disposed = true;

            await JSRuntime.InvokeVoidAsync("easyquery.blazor.stopAdhocReporting");
        }
    }
}
