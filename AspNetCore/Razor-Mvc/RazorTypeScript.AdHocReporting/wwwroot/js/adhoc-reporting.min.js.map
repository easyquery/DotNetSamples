{"version":3,"file":"adhoc-reporting.min.js","sources":["../../node_modules/@easydata/core/dist/easydata.core.esm.js","../../node_modules/@easyquery/core/dist/easyquery.core.esm.js","../../node_modules/@easydata/ui/dist/easydata.ui.esm.js","../../node_modules/@easyquery/ui/dist/easyquery.ui.esm.js","../../node_modules/@easyquery/enterprise/dist/easyquery.enterprise.esm.js","../../ts/adhoc-reporting.ts"],"sourcesContent":["\n/*\n * EasyData.JS Core v1.4.21\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nconst EditorTag = {\n    /** Unknown tag value */\n    Unknown: \"Unknown\",\n    /** Edit tag value */\n    Edit: \"EDIT\",\n    /** DateTime tag value  */\n    DateTime: \"DATETIME\",\n    /** List tag value */\n    List: \"LIST\",\n    /** CustomList tag value */\n    CustomList: \"CUSTOMLIST\",\n    /** File tag value */\n    File: \"FILE\"\n};\n\n/**\n * Represents a date/time value that can return either a date itself or a special date name\n */\nclass TimeValue {\n    constructor(dt) {\n        if (dt instanceof Date) {\n            this.date = dt;\n        }\n        else {\n            this._name = dt;\n        }\n    }\n    asTime(settings) {\n        if (this.date) {\n            return this.date;\n        }\n        else {\n            specialDatesResolver.getDateByName(this._name);\n        }\n    }\n    get name() {\n        return this.name;\n    }\n}\nclass SpecialDatesResolver {\n    getDateByName(name, settings) {\n        if (this[name]) {\n            return this[name](settings);\n        }\n        else {\n            return undefined;\n        }\n    }\n    Today(settings) {\n        return new Date();\n    }\n    Yesterday(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() - 1);\n        return d;\n    }\n    Tomorrow(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() + 1);\n        return d;\n    }\n    FirstDayOfMonth(settings) {\n        let d = new Date();\n        d.setDate(1);\n        return d;\n    }\n    LastDayOfMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 0);\n        return d;\n    }\n    FirstDayOfNextMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 1);\n        return d;\n    }\n    FirstDayOfPrevMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() - 1, 1);\n        return d;\n    }\n    FirstDayOfYear(settings) {\n        const d = new Date();\n        d.setMonth(0, 1);\n        return d;\n    }\n    FirstDayOfPrevYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() - 1, 0, 1);\n        return d;\n    }\n    FirstDayOfNextYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() + 1, 0, 1);\n        return d;\n    }\n    FirstDayOfWeek(settings) {\n        const d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfPrevWeek(settings) {\n        let d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfNextWeek(settings) {\n        let d = new Date();\n        var day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() + day);\n        return d;\n    }\n}\nvar specialDatesResolver = new SpecialDatesResolver();\nfunction registerSpecialDatesResolver(resolver) {\n    specialDatesResolver = resolver;\n}\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nclass HttpRequest {\n    constructor(xhr, descriptor) {\n        this.xhr = xhr;\n        this.method = descriptor.method;\n        this.url = descriptor.url;\n        this.headers = descriptor.headers;\n        this.queryParams = descriptor.queryParams;\n        this.data = descriptor.data;\n    }\n    setHeader(name, value) {\n        this.headers[name] = value;\n    }\n    setQueryParam(name, value) {\n        this.queryParams[name] = value;\n    }\n    getXMLHttpRequest() {\n        return this.xhr;\n    }\n    getResponseHeaders() {\n        if (this.xhr.readyState == this.xhr.HEADERS_RECEIVED) {\n            const headers = this.xhr.getAllResponseHeaders();\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            // Create a map of header names to values\n            const headerMap = {};\n            for (const line of arr) {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n                headerMap[header] = value;\n            }\n            return headerMap;\n        }\n        return {};\n    }\n    open() {\n        if (this.xhr.readyState !== this.xhr.UNSENT)\n            return;\n        let url = this.url;\n        if (this.queryParams && Object.keys(this.queryParams).length > 0) {\n            url += encodeURI('?' + Object.keys(this.queryParams)\n                .map(param => param + '=' + this.queryParams[param])\n                .join('&'));\n        }\n        this.xhr.open(this.method, url, true);\n        this.xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        for (const header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header]);\n        }\n    }\n    abort() {\n        this.xhr.abort();\n    }\n}\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        if (sourceVal !== null && typeof sourceVal === 'object') {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part \n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\nclass HttpActionResult {\n    constructor(request, promise) {\n        this.request = request;\n        this.promise = promise;\n    }\n    getPromise() {\n        return this.promise;\n    }\n    getRequest() {\n        return this.request;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n}\n\nclass HttpResponseError extends Error {\n    constructor(status, message) {\n        super(message);\n        this.status = status;\n    }\n}\nclass HttpClient {\n    /** Gets the response body for the latest request  */\n    get responseBody() {\n        return this._responseBody;\n    }\n    constructor() {\n        this.defaultHeaders = {};\n        this.customPayload = undefined;\n    }\n    get(url, options) {\n        return this.send(HttpMethod.Get, url, null, options);\n    }\n    post(url, data, options) {\n        return this.send(HttpMethod.Post, url, data, options);\n    }\n    put(url, data, options) {\n        return this.send(HttpMethod.Put, url, data, options);\n    }\n    delete(url, data, options) {\n        return this.send(HttpMethod.Delete, url, data, options);\n    }\n    send(method, url, data, options) {\n        options = options || {};\n        const dataType = options.dataType || 'json';\n        const contentType = options.contentType || (dataType !== 'form-data')\n            ? 'application/json'\n            : null;\n        if (data && dataType != 'form-data' && this.customPayload) {\n            data.data = utils.assignDeep(data.data || {}, this.customPayload);\n        }\n        const XHR = ('onload' in new XMLHttpRequest())\n            ? XMLHttpRequest\n            : window[\"XDomainRequest\"]; //IE support\n        const xhr = new XHR();\n        const desc = {\n            method: method,\n            url: url,\n            headers: Object.assign(Object.assign({}, this.defaultHeaders), options.headers || {}),\n            queryParams: options.queryParams || {},\n            data: data\n        };\n        if (contentType)\n            desc.headers['Content-Type'] = contentType;\n        const request = new HttpRequest(xhr, desc);\n        if (this.beforeEachRequest) {\n            console.warn(`HttpClient: 'beforeEachRequest' is deprecated and will be removed in future updates.\r\n            Use 'onRequest' instead`);\n            this.beforeEachRequest(request);\n        }\n        if (this.onRequest) {\n            this.onRequest(request);\n        }\n        const dataToSend = (request.data && typeof request.data !== 'string'\n            && dataType == 'json')\n            ? JSON.stringify(request.data)\n            : request.data;\n        request.open();\n        return new HttpActionResult(request, new Promise((resolve, reject) => {\n            if (options.responseType)\n                xhr.responseType = options.responseType;\n            xhr.onerror = (error) => {\n                reject(new HttpResponseError(xhr.status, xhr.responseText));\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState != 4)\n                    return; //we process only the state change to DONE(4)\n                const responseContentType = xhr.getResponseHeader('Content-Type') || '';\n                const status = xhr.status;\n                if (status === 0) {\n                    reject(new HttpResponseError(status, \"Network error or the request was aborted\"));\n                }\n                else if (status >= 200 && status < 400) {\n                    //Success\n                    const responseObj = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? xhr.response\n                        : (responseContentType.indexOf('application/json') == 0\n                            ? JSON.parse(xhr.responseText)\n                            : xhr.responseText);\n                    this._responseBody = responseObj;\n                    if (this.onResponse) {\n                        this.onResponse(xhr);\n                    }\n                    resolve(responseObj);\n                }\n                else {\n                    //Error\n                    const rtPromise = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? HttpClient.decodeArrayBuffer(xhr.response)\n                        : Promise.resolve(xhr.responseText);\n                    rtPromise.then(responseText => {\n                        const responseObj = (responseContentType.indexOf('application/json') == 0)\n                            ? JSON.parse(responseText)\n                            : responseText;\n                        this._responseBody = responseObj;\n                        const message = responseObj.message ||\n                            (status == 404\n                                ? `No such endpoint: ${url}`\n                                : responseObj);\n                        reject(new HttpResponseError(status, message));\n                    });\n                }\n            };\n            xhr.send(dataToSend);\n        }));\n    }\n    static decodeArrayBuffer(uintArray) {\n        var reader = new FileReader();\n        return new Promise((resolve) => {\n            reader.onloadend = function () {\n                if (reader.readyState == FileReader.DONE) {\n                    resolve(reader.result);\n                }\n            };\n            reader.readAsText(new Blob([uintArray]));\n        });\n    }\n}\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    /**\n     * Updates the default texts for the current locale and all other locales available now\n     * This function does rewrite the texts in the locales, it just adds new textual resources if they didn't exists previously\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeData) {\n        mapInfo(localeData);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeData.localeId) {\n                localeData.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeData);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param value - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(number, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(number, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return number.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(number), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return number.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\n/**\n * Represents one entity.\n */\nclass MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        /** Returns false if this entity is read-only */\n        this.isEditable = true;\n        this.name = \"\";\n        this.caption = \"\";\n        this.description = \"\";\n        this.parent = parent;\n        this.attributes = new Array();\n        this.subEntities = new Array();\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param dto The JSON representation object.\n    */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.name = dto.name;\n            this.captionPlural = dto.namePlur;\n            this.caption = dto.name;\n            this.description = dto.desc;\n            if (typeof (dto.ied) !== 'undefined')\n                this.isEditable = dto.ied;\n            this.subEntities = new Array();\n            if (dto.ents) {\n                for (let i = 0; i < dto.ents.length; i++) {\n                    let newEntity = model.createEntity(this);\n                    newEntity.loadFromData(model, dto.ents[i]);\n                    this.subEntities.push(newEntity);\n                }\n            }\n            this.attributes = new Array();\n            if (dto.attrs) {\n                for (let i = 0; i < dto.attrs.length; i++) {\n                    let newAttr = model.createEntityAttr(this);\n                    newAttr.loadFromData(model, dto.attrs[i]);\n                    this.attributes.push(newAttr);\n                }\n            }\n        }\n    }\n    scan(processAttribute, processEntity) {\n        let opts = { stop: false };\n        let internalProcessEntity = (entity) => {\n            if (processEntity)\n                processEntity(entity, opts);\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; (i < attrCount) && !opts.stop; i++) {\n                    let attr = entity.attributes[i];\n                    if (processAttribute) {\n                        processAttribute(attr, opts);\n                    }\n                    if (opts.stop)\n                        return;\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; (i < subEntityCount) && !opts.stop; i++) {\n                    internalProcessEntity(entity.subEntities[i]);\n                }\n            }\n        };\n        internalProcessEntity(this);\n    }\n    getFirstPrimaryAttr() {\n        return this.getPrimaryAttrs()[0];\n    }\n    getPrimaryAttrs() {\n        return this.attributes.filter(attr => attr.isPrimaryKey);\n    }\n}\nclass MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        this.id = \"\";\n        this.caption = \"{Unrecognized attribute}\";\n        this.dataType = DataType.String;\n        this.size = 0;\n        this.isPrimaryKey = false;\n        this.isForeignKey = false;\n        this.isNullable = true;\n        this.showOnView = true;\n        this.isEditable = true;\n        this.showOnCreate = true;\n        this.showOnEdit = true;\n        this.showInLookup = false;\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n        this.entity = entity;\n        this.kind = EntityAttrKind.Data;\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param dto The JSON representation object.\n     */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.description = dto.desc;\n            this.caption = dto.cptn;\n            this.dataType = dto.dtype;\n            this.isPrimaryKey = dto.ipk;\n            this.isForeignKey = dto.ifk;\n            this.size = dto.size;\n            this.lookupAttr = dto.lattr;\n            this.lookupEntity = dto.lent;\n            this.dataAttr = dto.dattr;\n            this.lookupDataAttr = dto.ldattr;\n            const isDataType = utils.getDateDataTypes().indexOf(this.dataType);\n            this.defaultValue = dto.defVal && isDataType ? new Date(dto.defVal) : dto.defVal;\n            this.isNullable = utils.getIfDefined(dto.nul, this.isNullable);\n            this.isEditable = utils.getIfDefined(dto.ied, this.isEditable);\n            this.showOnView = utils.getIfDefined(dto.ivis || dto.sov, this.showOnView);\n            this.showOnCreate = utils.getIfDefined(dto.soc, this.showOnCreate);\n            this.showOnEdit = utils.getIfDefined(dto.soe, this.showOnEdit);\n            this.showInLookup = utils.getIfDefined(dto.sil, this.showInLookup);\n            this.kind = dto.kind;\n            this.displayFormat = dto.dfmt;\n            if (dto.udata)\n                this.userData = dto.udata;\n            if (dto.edtr) {\n                this.defaultEditor = model.getEditorById(dto.edtr) || model.createValueEditor();\n            }\n        }\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.tag = EditorTag.Unknown;\n        this.resType = DataType.Unknown;\n        this.defValue = \"\";\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        if (data) {\n            this.id = data.id;\n            this.tag = data.tag;\n            this.defValue = data.defval;\n            this.resType = data.rtype;\n            this.accept = data.accept;\n            this.multiline = data.multiline;\n            if (data.subType) {\n                this.resType = data.subType;\n            }\n            if (data.name) {\n                this.name = data.name;\n            }\n            if (data.values) {\n                this.values = data.values;\n            }\n        }\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (!this.values)\n            return result;\n        if (Array.isArray(value)) {\n            for (let item of this.values) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.values) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n}\n\n/**\n * Represents a data model\n */\nclass MetaData {\n    /** The default constructor. */\n    constructor() {\n        this.mainEntity = null;\n        this.id = '__none';\n        this.name = 'Empty model';\n        this.rootEntity = this.createEntity();\n        this.displayFormats = new Map();\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    createEntity(parent) {\n        return new MetaEntity(parent);\n    }\n    createEntityAttr(parent) {\n        return new MetaEntityAttr(parent);\n    }\n    createValueEditor() {\n        return new ValueEditor();\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.version = data.vers;\n        //Editors\n        this.editors = new Array();\n        if (data.editors) {\n            for (let i = 0; i < data.editors.length; i++) {\n                let newEditor = this.createValueEditor();\n                newEditor.loadFromData(data.editors[i]);\n                this.editors.push(newEditor);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //DataFormats\n        this.displayFormats = new Map();\n        if (data.displayFormats) {\n            for (const dtypeStr in data.displayFormats) {\n                const dtype = DataType[dtypeStr];\n                const formats = data.displayFormats[dtypeStr] || new Array();\n                this.displayFormats.set(dtype, formats);\n            }\n        }\n    }\n    /**\n     * Gets the display formats.\n     * @returns The display formats.\n     */\n    getDisplayFormats() {\n        return this.displayFormats;\n    }\n    /**\n     * Gets the display formats for type\n     * @param type The type\n     * @returns An array of display formats\n     */\n    getDisplayFormatsForType(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type);\n        }\n        return [];\n    }\n    /**\n     * Gets the default display format for the provided type\n     * @param type The type\n     * @returns The default type format or null\n     */\n    getDefaultFormat(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type).filter(f => f.isdef)[0];\n        }\n        return null;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Checks wether the data model is empty.\n     * @returns `true` if the data model is empty, otherwise `false`.\n     */\n    isEmpty() {\n        return this.rootEntity.subEntities.length === 0 && this.rootEntity.attributes.length === 0;\n    }\n    /**\n     * Gets ID of the data model.\n     * @returns The ID.\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Gets name of the data model.\n     * @returns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        for (let editor of this.editors) {\n            if (editor.id === editorId) {\n                return editor;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        let idx;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (idx = 0; idx < attrCount; idx++) {\n                if (entity.attributes[idx].id == attrId) {\n                    return entity.attributes[idx];\n                }\n            }\n        }\n        let res;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (idx = 0; idx < subEntityCount; idx++) {\n                res = this.getEntityAttrById(entity.subEntities[idx], attrId);\n                if (res)\n                    return res;\n            }\n        }\n        return null;\n    }\n    listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(this.createEntity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this.listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(this.createEntity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name) || ent.caption;\n                    let newEnt = utils.assign(this.createEntity(), {\n                        id: ent.name,\n                        text: caption,\n                        items: [],\n                        isEntity: true,\n                        description: ent.description\n                    });\n                    let newOpts = utils.assign({}, opts);\n                    newOpts.includeRootData = false;\n                    newEnt.items = this.listByEntity(ent, newOpts, filterFunc);\n                    if (newEnt.items.length > 0) {\n                        resultEntities.push(newEnt);\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                    resultAttributes.push(utils.assign(this.createEntityAttr(entity), {\n                        id: attr.id, text: caption,\n                        dataType: attr.dataType, lookupAttr: attr.lookupAttr,\n                        description: attr.description\n                    }));\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        this.rootEntity = this.createEntity();\n        this.editors = [];\n        this.version = '';\n    }\n    /**\n     * Add default value editors.\n     */\n    addDefaultValueEditors() {\n        let ve;\n        ve = this.addOrUpdateValueEditor('_DTE', EditorTag.Edit, DataType.String);\n        ve.defValue = '';\n        this.addOrUpdateValueEditor('_DPDE', EditorTag.DateTime, DataType.DateTime);\n        this.addOrUpdateValueEditor('_DPTE', EditorTag.DateTime, DataType.DateTime);\n    }\n    /**\n    * Add or update a value editor.\n    * @param id The id.\n    * @param tag The tag.\n    * @param resType The result type.\n    * @returns The value editor.\n    */\n    addOrUpdateValueEditor(id, tag, resType) {\n        let ve = utils.findItemById(this.editors, id);\n        if (!ve) {\n            ve = this.createValueEditor();\n            ve.id = id;\n            this.editors.push(ve);\n        }\n        ve.tag = tag;\n        ve.resType = resType;\n        return ve;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this.listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this.listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        if (!entity)\n            return '';\n        sep = sep || ' ';\n        let entityCaption = '';\n        if (entity.caption && !root) {\n            let entityText = i18n.getText('Entities', entity.caption);\n            entityCaption = entityText ? entityText : entity.caption;\n        }\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let i = 0; i < attrCount; i++) {\n                if (entity.attributes[i].id == attrId) {\n                    return entityCaption;\n                }\n            }\n        }\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let i = 0; i < subEntityCount; i++) {\n                let ent = entity.subEntities[i];\n                let res = this.getEntityPathByAttr(ent, attrId, sep, false);\n                if (res !== '') {\n                    if (entityCaption !== '')\n                        res = entityCaption + sep + res;\n                    return res;\n                }\n            }\n        }\n        return '';\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        let attrText = i18n.getText('Attributes', attr.id);\n        if (!attrText) {\n            attrText = attr.caption;\n        }\n        if (!format) {\n            return attrText;\n        }\n        let result = '';\n        let entityPath = this.getFullEntityPathByAttr(attr.id, ' ');\n        if (entityPath) {\n            result = format.replace(new RegExp('{attr}', 'g'), attrText);\n            result = result.replace(new RegExp('{entity}', 'g'), entityPath);\n        }\n        else {\n            result = attrText;\n        }\n        return result.trim();\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n}\n\n/**\n * Defines aggregations settings for the current context.\n * Group, aggregate columns, grand totals, etc.\n */\nclass AggregationSettings {\n    constructor(colStore) {\n        this.colStore = colStore;\n        this.aggregates = [];\n        this.groups = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this._caseSensitiveGroups = false;\n        this.COUNT_FIELD_NAME = 'GRPRECCNT';\n    }\n    get caseSensitiveGroups() {\n        return this._caseSensitiveGroups;\n    }\n    set caseSensitiveGroups(value) {\n        this._caseSensitiveGroups = value;\n        this.updateCompareProc();\n    }\n    updateCompareProc() {\n        this.compareValues = this._caseSensitiveGroups\n            ? this.strictCompare\n            : this.caseInsensitiveCompare;\n    }\n    addGroup(settings) {\n        const cols = settings.columns || this.colStore.getColumnIds(settings.from, settings.to);\n        if (!this.colStore.validateColumns(cols))\n            throw \"Invalid columns: \" + cols;\n        if (this.hasColumnsInUse(cols))\n            throw \"Can't add same columns to different groups/aggregates\";\n        this.groups.push(Object.assign({ columns: cols }, settings));\n        return this;\n    }\n    addAggregateColumn(colIndexOrId, funcId) {\n        const colId = typeof colIndexOrId == 'string'\n            ? colIndexOrId\n            : this.colStore.getColumnIds(colIndexOrId, colIndexOrId)[0];\n        if (this.hasColumnsInUse([colId]) || !this.colStore.validateAggregate(colId, funcId))\n            throw 'Invalid aggregation function for the column: ' + colId;\n        this.aggregates.push({ colId, funcId });\n        return this;\n    }\n    addGrandTotals() {\n        this.useGrandTotals = true;\n        return this;\n    }\n    addCounts() {\n        this.useRecordCount = true;\n        return this;\n    }\n    getGroups() {\n        let cols = [];\n        const mappedGrops = this.groups.map(grp => {\n            cols = cols.concat(grp.columns);\n            return Object.assign(Object.assign({}, grp), { columns: Array.from(cols), aggregates: Array.from(this.aggregates) });\n        });\n        return mappedGrops;\n    }\n    getInternalGroups() {\n        return this.groups;\n    }\n    lastGroup() {\n        const groups = this.getGroups();\n        return groups[groups.length - 1];\n    }\n    getAggregates() {\n        return this.aggregates;\n    }\n    hasAggregates() {\n        return this.aggregates.length > 0;\n    }\n    hasGroups() {\n        return this.groups.length > 0;\n    }\n    hasGrandTotals() {\n        return this.useGrandTotals;\n    }\n    hasRecordCount() {\n        return this.useRecordCount;\n    }\n    isEmpty() {\n        return !(this.hasAggregates() || this.hasGroups() ||\n            this.hasAggregates() || this.hasRecordCount());\n    }\n    drop() {\n        console.warn('\"drop()\" method is obsolete. Use \"clear()\" instead');\n        this.clear();\n    }\n    clear() {\n        this.groups = [];\n        this.aggregates = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this.caseSensitiveGroups = false;\n        return this;\n    }\n    /**\n     * Checks if all columns from the list passed in the parameter are \"unused\".\n     * Here \"unused column\" means a column that is included neither in any group nor in the aggregates list.\n     * @param cols - the array of column IDs\n     * @returns true if all columns in the list are not used anywhere, othervise - fals\n     */\n    hasColumnsInUse(cols) {\n        for (const group of this.groups) {\n            const interCols = group.columns\n                .filter(c => cols.indexOf(c) >= 0);\n            if (interCols.length > 0)\n                return true;\n        }\n        for (const aggr of this.aggregates) {\n            if (cols.indexOf(aggr.colId) >= 0)\n                return true;\n        }\n        return false;\n    }\n    needAggrCalculation() {\n        return (this.hasAggregates() || this.hasRecordCount())\n            && (this.hasGrandTotals() || this.hasGroups());\n    }\n    saveToData() {\n        return {\n            groups: Array.from(this.groups),\n            ugt: this.useGrandTotals,\n            urc: this.useRecordCount,\n            csg: this.caseSensitiveGroups,\n            aggregates: Array.from(this.aggregates)\n        };\n    }\n    loadFromData(data) {\n        if (data) {\n            if (typeof data.ugt !== 'undefined')\n                this.useGrandTotals = data.ugt;\n            if (typeof data.urc !== 'undefined')\n                this.useRecordCount = data.urc;\n            if (typeof data.csg !== 'undefined')\n                this.caseSensitiveGroups = data.csg;\n            if (data.groups) {\n                this.groups = Array.from(data.groups);\n            }\n            if (data.aggregates) {\n                this.aggregates = Array.from(data.aggregates);\n            }\n        }\n    }\n    buildGroupKey(group, row) {\n        const caseInsensitive = !this.caseSensitiveGroups;\n        let result = {};\n        if (group) {\n            for (const colId of group.columns) {\n                let keyVal = row.getValue(colId);\n                if (caseInsensitive && typeof (keyVal) === 'string') {\n                    keyVal = keyVal.toLowerCase();\n                }\n                result[colId] = keyVal;\n            }\n        }\n        return result;\n    }\n    //returns true if value1 == value2\n    strictCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else\n            return value1 === value2;\n    }\n    //makes a case insensative comparision of two values and return true if there are equal\n    caseInsensitiveCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else {\n            const val1 = (typeof value1 === 'string') ? value1.toLowerCase() : value1;\n            const val2 = (typeof value2 === 'string') ? value2.toLowerCase() : value2;\n            return val1 === val2;\n        }\n    }\n}\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\nclass DataColumn {\n    constructor(desc) {\n        if (!desc)\n            throw Error(\"Options are required\");\n        if (!desc.id)\n            throw Error(\"Field Id is required\");\n        if (!desc.label)\n            throw Error(\"Label is required\");\n        this.id = desc.id;\n        this.type = utils.getIfDefined(desc.type, DataType.String);\n        this.label = desc.label;\n        this.originAttrId = desc.originAttrId;\n        this.isAggr = desc.isAggr || false;\n        this.displayFormat = desc.dfmt;\n        this.groupFooterColumnTemplate = desc.gfct;\n        this.style = desc.style || {};\n        this.description = desc.description;\n        this.calculatedWidth = 0;\n    }\n}\nclass DataColumnList {\n    constructor() {\n        this.items = [];\n        this.mapper = {};\n        this._dateColumnIdx = [];\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(colOrDesc) {\n        let col;\n        if (colOrDesc instanceof DataColumn) {\n            col = colOrDesc;\n        }\n        else {\n            col = new DataColumn(colOrDesc);\n        }\n        const index = this.items.length;\n        this.items.push(col);\n        this.mapper[col.id] = index;\n        if ([DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0) {\n            this._dateColumnIdx.push(index);\n        }\n        return index;\n    }\n    updateDateColumnIdx() {\n        this._dateColumnIdx = this.getItems()\n            .filter(col => [DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0)\n            .map((col, index) => index);\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.count) {\n            this.items[index] = col;\n            this.updateDateColumnIdx();\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex) {\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n            this.updateDateColumnIdx();\n        }\n    }\n    get(index) {\n        if (index >= 0 && index < this.count) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    getIndex(id) {\n        return this.mapper[id];\n    }\n    getItems() {\n        return this.items;\n    }\n    getDateColumnIndexes() {\n        return this._dateColumnIdx;\n    }\n    removeAt(index) {\n        const col = this.get(index);\n        this.items.splice(index, 1);\n        const removeDate = this._dateColumnIdx.indexOf(index);\n        if (removeDate >= 0) {\n            this._dateColumnIdx.splice(removeDate, 1);\n        }\n        delete this.mapper[col.id];\n    }\n    clear() {\n        this.items = [];\n        this._dateColumnIdx = [];\n        this.mapper = {};\n    }\n}\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\nclass EasyDataTable {\n    constructor(options) {\n        this._chunkSize = 1000;\n        this._elasticChunks = false;\n        this.cachedRows = [];\n        this.total = 0;\n        this.loader = null;\n        this.needTotal = true;\n        this.isInMemory = false;\n        options = options || {};\n        this._chunkSize = options.chunkSize || this._chunkSize;\n        this._elasticChunks = options.elasticChunks || this._elasticChunks;\n        this.loader = options.loader;\n        if (typeof options.inMemory !== 'undefined') {\n            this.isInMemory = options.inMemory;\n        }\n        if (this.isInMemory) {\n            this.needTotal = false;\n        }\n        this._columns = new DataColumnList();\n        this.onUpdate = options.onUpdate;\n        if (options.columns) {\n            for (const colDesc of options.columns) {\n                this._columns.add(colDesc);\n            }\n        }\n        if (options.rows) {\n            for (const rowData of options.rows) {\n                const row = this.createRow(rowData);\n                this.addRow(row);\n            }\n        }\n        this.needTotal = !this._elasticChunks;\n    }\n    get columns() {\n        return this._columns;\n    }\n    get chunkSize() {\n        return this._chunkSize;\n    }\n    set chunkSize(value) {\n        this._chunkSize = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    get elasticChunks() {\n        return this._elasticChunks;\n    }\n    set elasticChunks(value) {\n        this._elasticChunks = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    getRows(params) {\n        let fromIndex = 0, count = this._chunkSize;\n        if (params) {\n            if ('page' in params) {\n                fromIndex = params.pageSize * (params.page - 1);\n                count = params.pageSize;\n            }\n            else {\n                fromIndex = params.offset;\n                count = params.limit;\n            }\n        }\n        let endIndex = fromIndex + count; //the first index of the next page\n        //if we don't calculate total on this request\n        if (!this.needTotal && !this.elasticChunks) {\n            if (fromIndex >= this.total) {\n                return Promise.resolve([]);\n            }\n            if (endIndex > this.total) {\n                endIndex = this.total;\n            }\n        }\n        if (this.isInMemory && endIndex > this.cachedRows.length) {\n            endIndex = this.cachedRows.length;\n        }\n        let allChunksCached = endIndex <= this.cachedRows.length;\n        if (allChunksCached) {\n            return Promise.resolve(this.cachedRows.slice(fromIndex, endIndex));\n        }\n        //if loader is not defined\n        if (!this.loader) {\n            throw `Loader is not defined. Can't get the rows from ${fromIndex} to ${endIndex}`;\n        }\n        // we need total only for the first request\n        const needTotal = this.needTotal;\n        if (this.needTotal) {\n            this.needTotal = false;\n        }\n        let offset = this.cachedRows.length;\n        let limit = endIndex - offset;\n        if (limit < this._chunkSize) {\n            limit = this._chunkSize;\n        }\n        const resultPromise = this.loader.loadChunk({\n            offset: offset,\n            limit: limit,\n            needTotal: needTotal\n        })\n            .then(result => {\n            if (needTotal) {\n                this.total = result.total;\n            }\n            Array.prototype.push.apply(this.cachedRows, result.table.getCachedRows());\n            if (endIndex > this.cachedRows.length) {\n                endIndex = this.cachedRows.length;\n            }\n            if (this.elasticChunks) {\n                const count = result.table.getCachedCount();\n                if (count < limit) {\n                    this.total = this.cachedRows.length;\n                }\n            }\n            this.fireUpdated();\n            return this.cachedRows.slice(fromIndex, endIndex);\n        });\n        return resultPromise;\n    }\n    getRow(index) {\n        return this.getRows({ offset: index, limit: 1 })\n            .then(rows => rows.length > 0 ? rows[0] : null);\n    }\n    getTotal() {\n        return this.total;\n    }\n    setTotal(total) {\n        this.total = total;\n        this.needTotal = false;\n    }\n    getCachedCount() {\n        return this.cachedRows.length;\n    }\n    clear() {\n        this.columns.clear();\n        this.cachedRows = [];\n        this.total = 0;\n        this.needTotal = !this._elasticChunks;\n        this.fireUpdated();\n    }\n    createRow(dataOrRow) {\n        const dateIdx = this._columns.getDateColumnIndexes();\n        const values = new Array(this._columns.count);\n        const getValue = dataOrRow instanceof DataRow\n            ? (colId) => dataOrRow.getValue(colId)\n            : (colId) => dataOrRow[colId];\n        if (dataOrRow) {\n            this.columns.getItems().forEach((column) => {\n                const value = getValue(column.id);\n                const index = this.columns.getIndex(column.id);\n                values[index] = (dateIdx.indexOf(index) >= 0)\n                    ? this.mapDate(value, column.type)\n                    : value;\n            });\n        }\n        return new DataRow(this._columns, values);\n    }\n    mapDate(value, dtype) {\n        if (value) {\n            let result = new Date(value);\n            if (isNaN(result.getTime())\n                && dtype == DataType.Time) {\n                result = utils.strToTime(value);\n            }\n            return result;\n        }\n        return null;\n    }\n    addRow(rowOrValues) {\n        let newRow;\n        if (Array.isArray(rowOrValues)) {\n            let values = rowOrValues;\n            const dateIdx = this._columns.getDateColumnIndexes();\n            if (dateIdx.length > 0) {\n                for (const idx of dateIdx) {\n                    if (values[idx]) {\n                        values[idx] = this.mapDate(values[idx], this._columns.get(idx).type);\n                    }\n                }\n            }\n            newRow = new DataRow(this._columns, values);\n        }\n        else {\n            newRow = this.createRow(rowOrValues);\n        }\n        this.cachedRows.push(newRow);\n        const cachedTotal = this.getCachedCount();\n        if (cachedTotal > this.total) {\n            this.total = cachedTotal;\n        }\n        return newRow;\n    }\n    getCachedRows() {\n        return this.cachedRows;\n    }\n    totalIsKnown() {\n        if (this.elasticChunks) {\n            const count = this.getCachedCount();\n            return count === this.total;\n        }\n        return !this.needTotal;\n    }\n    fireUpdated() {\n        if (this.onUpdate) {\n            this.onUpdate(this);\n        }\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nfunction repeatString(str, times) {\n    return str.repeat(times);\n}\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction strEndsWith(str, symbol) {\n    return str && str.lastIndexOf(symbol) == (str.length - symbol.length);\n}\n/**\n * Adds two paths and returns the result\n * Correctly processes leading and trailing slashes\n * @param path1\n * @param path2\n */\nfunction combinePath(path1, path2) {\n    let result = path1;\n    if (result != null && result.length > 0) {\n        if (result.charAt(result.length - 1) != '/')\n            result += \"/\";\n        result += path2;\n    }\n    else {\n        result = path2;\n    }\n    return result;\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nexport { AggregationSettings, ColumnAlignment, DataColumn, DataColumnList, DataRow, DataType, EasyDataTable, EasyGuid, EditorTag, EntityAttrKind, EventEmitter, HttpClient, HttpMethod, HttpRequest, HttpResponseError, MetaData, MetaEntity, MetaEntityAttr, SpecialDatesResolver, TimeValue, ValueEditor, combinePath, i18n, liquid, registerSpecialDatesResolver, repeatString, reverseString, strEndsWith, utils };\n","\n/*\n * EasyQuery.JS Core v7.2.5\n * Copyright 2024 Korzh.com\n * Licensed under MIT\n *\n * Build time: 1/18/2024 1:26:55 PM\n */\n\nimport { i18n, DataType, utils, ValueEditor, MetaEntity, MetaEntityAttr, EditorTag, MetaData, EventEmitter, AggregationSettings, HttpClient, EasyDataTable } from '@easydata/core';\nexport { i18n } from '@easydata/core';\n\n/**\n * Represents a parser for format expressions in operators\n */\nclass FormatParser {\n    constructor(format) {\n        this.start(format);\n    }\n    /**\n     * Starts parsing of the format string passed in the parameter\n     * @param format\n     */\n    start(format) {\n        this.formatStr = format;\n        this.pos = 0;\n        this.exprNum = 0;\n        this.tokenText = '';\n    }\n    /**\n     * Skips all spcaes till the beginning of next token\n     */\n    skipSpaces() {\n        while (this.pos < this.formatStr.length && this.formatStr.charAt(this.pos) === ' ')\n            this.pos++;\n    }\n    /**\n     * Scans the source and gets the next token\n     */\n    next() {\n        this.skipSpaces();\n        if (this.pos >= this.formatStr.length)\n            return false;\n        var npos = 0;\n        if (this.formatStr.charAt(this.pos) === '{') {\n            npos = this.formatStr.indexOf('}', this.pos);\n            if (npos < 0)\n                return false;\n            this.tokenText = this.formatStr.substring(this.pos, npos + 1);\n            if (this.tokenText.indexOf('{expr') === 0) {\n                this.token = 'expression';\n                this.exprNum = parseInt(this.tokenText.substring(5, this.tokenText.length));\n            }\n            this.pos = npos + 1;\n        }\n        else if (this.formatStr.charAt(this.pos) === '[' && this.pos < this.formatStr.length - 1 && this.formatStr.charAt(this.pos + 1) === '[') {\n            this.pos += 2;\n            npos = this.formatStr.indexOf(']]', this.pos);\n            this.token = 'operator';\n            this.tokenText = this.formatStr.substring(this.pos, npos);\n            this.pos = npos + 2;\n        }\n        else {\n            this.token = 'text';\n            var npos1 = this.formatStr.indexOf('{', this.pos);\n            if (npos1 < 0)\n                npos1 = this.formatStr.length;\n            var npos2 = this.formatStr.indexOf('[[', this.pos);\n            if (npos2 < 0)\n                npos2 = this.formatStr.length;\n            npos = Math.min(npos1, npos2);\n            this.tokenText = this.formatStr.substring(this.pos, npos).trim();\n            this.pos = npos;\n        }\n        return true;\n    }\n    /**\n     * Returns current token\n     */\n    getToken() {\n        return {\n            type: this.token,\n            text: this.tokenText,\n            index: this.exprNum - 1\n        };\n    }\n    /**\n     * Parses all source string passed in constructor and returns the list of tokens\n     */\n    parse() {\n        let result = [];\n        while (this.next()) {\n            result.push(this.getToken());\n        }\n        return result;\n    }\n}\n\n/** Represents type of linking of conditions in group (predicate).*/\nvar LinkType;\n(function (LinkType) {\n    /**\n     * None of the conditions must be truth (all must be false).\n     * In SQL it will look like: `NOT (Condition1 OR Condition2 OR ...)`.\n     */\n    LinkType[LinkType[\"None\"] = 0] = \"None\";\n    /** At least one condition must be truth. In SQL they are connected by `OR` operator.*/\n    LinkType[LinkType[\"Any\"] = 1] = \"Any\";\n    /**\n     * Not all conditions must be truth (at least one must false).\n     * In SQL it will look like: `NOT(Condition1 AND Condition2 AND ...)`.\n     */\n    LinkType[LinkType[\"NotAll\"] = 2] = \"NotAll\";\n    /** All conditions must be truth, in result SQL they are connected by `AND` operator;*/\n    LinkType[LinkType[\"All\"] = 3] = \"All\";\n})(LinkType || (LinkType = {}));\n\nvar equtils;\n(function (equtils) {\n    /**\n     * Adds two paths and returns the result\n     * Correctly processes leading and trailing slashes\n     * @param path1\n     * @param path2\n     */\n    function combinePath(path1, path2) {\n        let result = path1;\n        if (result != null && result.length > 0) {\n            if (result.charAt(result.length - 1) != '/')\n                result += \"/\";\n            result += path2;\n        }\n        else {\n            result = path2;\n        }\n        return result;\n    }\n    equtils.combinePath = combinePath;\n    /**\n     * Converts a string to a `LinkType` value\n     * @param str\n     */\n    function strToLinkType(str) {\n        if (str == \"All\") {\n            return LinkType.All;\n        }\n        else if (str == \"NotAll\") {\n            return LinkType.NotAll;\n        }\n        else if (str == \"Any\") {\n            return LinkType.Any;\n        }\n        else {\n            return LinkType.None;\n        }\n    }\n    equtils.strToLinkType = strToLinkType;\n    /**\n     * Converts a `LinkType` value to a string\n     * @param type\n     */\n    function linkTypeToStr(type) {\n        if (type === LinkType.All) {\n            return \"All\";\n        }\n        else if (type === LinkType.NotAll) {\n            return \"NotAll\";\n        }\n        else if (type == LinkType.Any) {\n            return \"Any\";\n        }\n        else {\n            return \"None\";\n        }\n    }\n    equtils.linkTypeToStr = linkTypeToStr;\n    /**\n     * Parses the operator's format string and returns a list of tokens\n     * @param operator\n     */\n    function parseOperatorFormat(operator) {\n        let format = i18n.getText('Operators', operator.id, 'format');\n        if (!format) {\n            format = i18n.getText('Operators', operator.id, 'displayFormat');\n        }\n        if (!format) {\n            format = operator.displayFormat;\n        }\n        const parser = new FormatParser(format);\n        return parser.parse();\n    }\n    equtils.parseOperatorFormat = parseOperatorFormat;\n    //----------- value converstion utils --------------\n    /**\n     * Converts a value from one DataType to another\n     * @param value\n     * @param fromDataType - the original data type\n     * @param toDataType - the data type we want to get\n     */\n    function convertValue(value, fromDataType, toDataType) {\n        switch (toDataType) {\n            case DataType.String:\n                return value;\n            case DataType.Autoinc, DataType.Byte, DataType.Int32, DataType.Int64, DataType.Word:\n                let resInt = parseInt(value);\n                return isNaN(resInt) ? '' : resInt.toString();\n            case DataType.Currency, DataType.Float:\n                let resFloat = parseFloat(value);\n                return isNaN(resFloat) ? '' : resFloat.toString();\n            default:\n                return '';\n        }\n    }\n    equtils.convertValue = convertValue;\n})(equtils || (equtils = {}));\n\n/**\n * Represents an aggregate function\n */\nclass AggrFunction {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.caption = \"\";\n        this.sqlExpr = \"\";\n        this.displayFormat = \"\";\n        this.appliedTypes = [];\n    }\n    /**\n     * Loads an aggregate function from its JSON representation object\n     * @param aggrFunction The JSON representation object\n     */\n    loadFromData(aggrFunction) {\n        if (aggrFunction) {\n            this.id = aggrFunction.id;\n            this.caption = aggrFunction.cptn;\n            this.displayFormat = aggrFunction.fmt;\n            this.sqlExpr = aggrFunction.expr;\n            this.appliedTypes = aggrFunction.dtypes || this.appliedTypes;\n        }\n    }\n    getAppliedTypesOrDefault() {\n        if (this.appliedTypes.length > 0)\n            return this.appliedTypes;\n        if (this.id === 'SUM' || this.id === 'AVG') {\n            return [DataType.Autoinc, DataType.Byte, DataType.Currency, DataType.Float, DataType.Int32,\n                DataType.Int64, DataType.Word];\n        }\n        else if (this.id === 'MIN' || this.id === 'MAX') {\n            return [DataType.Autoinc, DataType.BCD, DataType.Byte, DataType.Currency, DataType.Date, DataType.DateTime, DataType.Time,\n                DataType.Float, DataType.Int32, DataType.Int64, DataType.Word];\n        }\n        return utils.getAllDataTypes();\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass EqValueEditor extends ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        super();\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            if (data.sql) {\n                this.statement = data.sql;\n            }\n            if (data.extraParams) {\n                this.extraParams = data.extraParams;\n            }\n        }\n    }\n}\n\n/** Represents expression kinds.*/\nvar DataKind;\n(function (DataKind) {\n    /** Represents one value of some type: one constant or one attribute (field).*/\n    DataKind[DataKind[\"Scalar\"] = 0] = \"Scalar\";\n    /** The same as Scalar but represents only one constant value of some type.*/\n    DataKind[DataKind[\"Const\"] = 1] = \"Const\";\n    /** The same as Scalar but represents only one attribute.*/\n    DataKind[DataKind[\"Attribute\"] = 2] = \"Attribute\";\n    /** Represents a list of scalar values. */\n    DataKind[DataKind[\"List\"] = 4] = \"List\";\n    /** Special expression kind which represents a sub query.*/\n    DataKind[DataKind[\"Query\"] = 5] = \"Query\";\n    /** Special expression kind which represents a binding to parent column.*/\n    DataKind[DataKind[\"ParentColumn\"] = 6] = \"ParentColumn\";\n})(DataKind || (DataKind = {}));\n\n/**\n * Represents a logical expression or predicate, like comparisions or `LIKE` predicate.\n */\nclass Operator {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.expr = \"\";\n        this.constValueFormat = \"{const}\";\n        this.caption = \"{Unrecognized operator}\";\n        this.displayFormat = \"{expr1} [[{unrecognized operator}]] {expr2}\";\n        this.isRange = false;\n        this.caseIns = false;\n        this.paramCount = 2;\n        this.defaultOperand = new Operand();\n        this.appliedTypes = [];\n        this.operands = new Array();\n    }\n    /**\n    * Loads operator from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        if (data) {\n            this.id = data.id;\n            this.caption = data.cptn;\n            this.caseIns = data.caseIns;\n            this.isRange = data.isRange;\n            this.displayFormat = data.fmt;\n            this.paramCount = data.pcnt;\n            this.expr = data.expr;\n            this.appliedTypes = data.dtypes || this.appliedTypes;\n            if (data.defOperand) {\n                this.defaultOperand.loadFromData(model, data.defOperand);\n            }\n            if (data.editor) {\n                this.defaultOperand.editor = model.getEditorById(data.editor) || new EqValueEditor();\n            }\n            if (data.operands) {\n                for (let i = 0; i < data.operands.length; i++) {\n                    let newOperand = new Operand();\n                    newOperand.loadFromData(model, data.operands[i]);\n                    if (data.editor) {\n                        newOperand.editor = model.getEditorById(data.editor) || new EqValueEditor();\n                    }\n                    this.operands.push(newOperand);\n                }\n            }\n        }\n    }\n}\n/**\n * Represents one operand in some operator's expression\n */\nclass Operand {\n    /** The default constructor. */\n    constructor() {\n        this.kind = DataKind.Scalar;\n        this.dataType = DataType.Unknown;\n        this.editor = new EqValueEditor();\n        this.defValue = \"\";\n    }\n    /**\n     * Loads operand from its JSON representation object.\n     * @param model The Data Model.\n     * @param operand A plain JS object that represents the operand.\n     */\n    loadFromData(model, operand) {\n        this.kind = operand.kind;\n        this.dataType = operand.dtype;\n        this.defValue = operand.val;\n        this.defText = operand.txt;\n        if (operand.editor) {\n            this.editor = model.getEditorById(operand.editor) || new EqValueEditor();\n        }\n    }\n    /**\n     * Copies operand from other operand.\n     * @param src The source operand.\n     */\n    copyFrom(src) {\n        utils.assign(this, src);\n    }\n}\n\n/**\n * Represents one entity.\n */\nclass Entity extends MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        super(parent);\n        this.useInConditions = false;\n        this.useInResult = false;\n        this.useInSorting = false;\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (data) {\n            this.useInConditions = data.uic;\n            this.useInResult = data.uir;\n            this.useInSorting = data.uis;\n        }\n    }\n    scan(processAttribute, processEntity) {\n        super.scan((attr, opts) => processAttribute && processAttribute(attr, opts), (entity, opts) => processEntity && processEntity(entity, opts));\n    }\n}\n/**\n * Represents entity attribute.\n */\nclass EntityAttr extends MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        super(entity);\n        /**\n         * The parameters associated with this entity attribute\n         */\n        this.params = [];\n        this.useInConditions = true;\n        this.useInResult = true;\n        this.useInSorting = true;\n        this.defaultOperator = \"\";\n        this.operators = new Array();\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param data The JSON representation object.\n     */\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (data) {\n            this.useInConditions = data.uic;\n            this.useInResult = data.uir;\n            this.useInSorting = data.uis;\n            this.expr = data.sql;\n            this.defaultOperator = data.defOperator;\n            this.operators = data.ops;\n            if (data.udata)\n                this.userData = data.udata;\n        }\n    }\n}\n\n/** Represents editor tags*/\nconst EqEditorTag = Object.assign(Object.assign({}, EditorTag), { \n    /** SqlList tag value */\n    SqlList: \"SQLLIST\", \n    /** SubQuery tag value */\n    SubQuery: \"SUBQUERY\", \n    /** Bind to parent column tag value */\n    BindToParentColumn: \"BINDTOPARENTCOLUMN\" });\n\n/**\n * Represents a data model\n */\nclass DataModel extends MetaData {\n    /** The default constructor. */\n    constructor() {\n        super();\n        this.mainEntity = null;\n        this.nullAttribute = new EntityAttr(null);\n        this.nullOperator = new Operator();\n        this.operators = new Array();\n        this.rootEntity = new Entity();\n        this.aggrFunctions = new Array();\n        this.dateMacros = ['Today', 'Yesterday',\n            'Tomorrow', 'FirstDayOfMonth', 'LastDayOfMonth',\n            'FirstDayOfWeek', 'FirstDayOfYear', 'FirstDayOfNextWeek', 'FirstDayOfPrevMonth',\n            'FirstDayOfNextMonth', 'FirstDayOfNextYear', 'FirstDayOfPrevYear', 'FirstDayOfPrevWeek'];\n        this.timeMacros = ['Now', 'HourStart', 'Midnight', 'Noon'];\n        this.links = [];\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        super.loadFromData(data);\n        //Operators\n        this.operators = new Array();\n        if (data.operators) {\n            for (let i = 0; i < data.operators.length; i++) {\n                let newOperator = new Operator();\n                newOperator.loadFromData(this, data.operators[i]);\n                this.operators.push(newOperator);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //Aggr Functions\n        this.aggrFunctions = new Array();\n        if (data.aggrfuncs) {\n            for (let i = 0; i < data.aggrfuncs.length; i++) {\n                let newAggrFunc = new AggrFunction();\n                newAggrFunc.loadFromData(data.aggrfuncs[i]);\n                this.aggrFunctions.push(newAggrFunc);\n            }\n        }\n    }\n    /**\n     * Gets the data model object.\n     * @returns Tha data model.\n     */\n    getObject() {\n        return this;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Creates entity.\n     * @param parent The parent entity.\n     * @returns The Entity.\n     */\n    createEntity(parent) {\n        return new Entity(parent);\n    }\n    /**\n     * Creates entity attribute.\n     * @param parent The parent entity.\n     * @returns The entity attribute.\n     */\n    createEntityAttr(parent) {\n        return new EntityAttr(parent);\n    }\n    /**\n     * Creates new EqValueEditor\n     * @returns An instance of EqValueEditor class\n     */\n    createValueEditor() {\n        return new EqValueEditor();\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        return super.getEditorById(editorId);\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n    * Gets entity attribute by its ID.\n    * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n    * @param attrId The attribute ID.\n    * @returns The attribute or `nullAttribute`.\n    */\n    getAttributeByIdSafe(attrId) {\n        const attr = this.getAttributeById(attrId);\n        if (!attr)\n            return this.nullAttribute;\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        return super.getEntityAttrById(entity, attrId);\n    }\n    _listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(new Entity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this._listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(new Entity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    _listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    if (opts.addUIC !== false && ent.useInConditions !== false ||\n                        opts.addUIR !== false && ent.useInResult !== false ||\n                        opts.addUIS !== false && ent.useInSorting !== false) {\n                        caption = i18n.getText('Entities', ent.name) || ent.caption;\n                        let newEnt = utils.assign(new Entity(), {\n                            id: ent.name,\n                            text: caption,\n                            items: [],\n                            isEntity: true,\n                            description: ent.description\n                        });\n                        let newOpts = utils.assign({}, opts);\n                        newOpts.includeRootData = false;\n                        newEnt.items = this._listByEntity(ent, newOpts, filterFunc);\n                        if (newEnt.items.length > 0) {\n                            resultEntities.push(newEnt);\n                        }\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    if (opts.addUIC !== false && attr.useInConditions !== false ||\n                        opts.addUIR !== false && attr.useInResult !== false ||\n                        opts.addUIS !== false && attr.useInSorting !== false) {\n                        caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                        resultAttributes.push(utils.assign(new EntityAttr(entity), { id: attr.id, text: caption, dataType: attr.dataType, lookupAttr: attr.lookupAttr, description: attr.description }));\n                    }\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        super.clear();\n        this.operators = [];\n        this.aggrFunctions = [];\n    }\n    /**\n     * Add or update an operator.\n     * @param desc The operator descriptor.\n     * @returns The operator.\n     */\n    addOrUpdateOperator(desc) {\n        let op = utils.findItemById(this.operators, desc.id);\n        if (!op) {\n            op = new Operator();\n            op.id = desc.id;\n            this.operators.push(op);\n        }\n        op.caption = desc.caption;\n        op.expr = desc.expr || '';\n        op.displayFormat = desc.format;\n        op.defaultOperand = new Operand();\n        op.defaultOperand.kind = desc.kind || DataKind.Scalar;\n        if (desc.appliedTypes)\n            op.appliedTypes = desc.appliedTypes;\n        if (desc.paramCount > 0) {\n            op.paramCount = desc.paramCount;\n        }\n        this.runThroughEntities((attr, opts) => {\n            if (attr.operators.indexOf(op.id) < 0 && op.appliedTypes.indexOf(attr.dataType) >= 0) {\n                attr.operators.push(op.id);\n            }\n        });\n        return op;\n    }\n    /**\n     * Removes an operator.\n     * @param id The id.\n     * @param soft If `false` - removes operators from model and attributes. Otherwise only\n     * from attributes.\n     */\n    removeOperator(id, soft = false) {\n        let op = utils.findItemById(this.operators, id);\n        if (op) {\n            if (!soft)\n                utils.removeArrayItem(this.operators, op);\n            this.runThroughEntities((attr, opts) => {\n                utils.removeArrayItem(attr.operators, op.id);\n            });\n        }\n    }\n    /**\n     * Get operators for data type.\n     * @param type The data type\n     * @return The array of operator ids.\n     */\n    getOperatorIdsByDataType(type) {\n        switch (type) {\n            case DataType.String:\n            case DataType.Memo:\n                return 'StartsWith,EndsWith,Contains,Equal,InList,NotStartsWith,NotEndsWith,NotContains,NotEqual,NotInList,IsNull,IsNotNull'.split(',');\n            case DataType.Guid:\n                return 'Equal,NotEqual'.split(',');\n            case DataType.Date:\n            case DataType.DateTime:\n                return 'DateWithinToday,DateWithinThisWeek,DateWithinPrevWeek,DateWithinThisMonth,DateWithinPrevMonth,DateWithinThisYear,DateWithinPrevYear,DateBeforePrecise,DateAfterPrecise,DatePeriodPrecise,IsNull,IsNotNull'.split(',');\n            case DataType.Time:\n                return 'TimeBeforePrecise,TimeAfterPrecise,TimePeriodPrecise,IsNull,IsNotNull'.split(',');\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Int32:\n            case DataType.Int64:\n            case DataType.Float:\n            case DataType.Currency:\n            case DataType.BCD:\n            case DataType.Autoinc:\n            case DataType.Unknown:\n                return 'Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,InList,NotEqual,NotBetween,NotInList,IsNull,IsNotNull'.split(',');\n            case DataType.Bool:\n                return 'IsTrue,NotTrue'.split(',');\n            default:\n                const result = [];\n                for (let op of this.operators)\n                    if (op.appliedTypes.indexOf(type) >= 0)\n                        result.push(op.id);\n                return result;\n        }\n    }\n    findAggrFunctionById(funcId) {\n        for (const func of this.aggrFunctions) {\n            if (func.id === funcId)\n                return func;\n        }\n        return null;\n    }\n    /**\n     * Finds link between two entities.\n     * @param entityFrom The entity `from`.\n     * @param entityTo The entity `to`.\n     * @return The link.\n     */\n    findLink(entityFrom, entityTo) {\n        for (let link of this.links) {\n            if (link.entityFrom == entityFrom\n                && link.entityTo == entityTo)\n                return link;\n        }\n        return null;\n    }\n    /**\n     * Get links with the entity.\n     * @param entity The entity.\n     * @return The link.\n     */\n    getLinksByEntity(entity) {\n        const result = [];\n        for (let link of this.links) {\n            if (link.entityFrom == entity || link.entityTo == entity) {\n                result.push(link);\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this._listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this._listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        return super.getEntityPathByAttr(entity, attrId, sep, root);\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        return super.getAttributeText(attr, format);\n    }\n    getFirstUICAttr() {\n        return this.getFirstUICAttrInEntity(this.getRootEntity());\n    }\n    /**\n     * Gets first `UIC` attribute in specified entity\n     * (`UIC` stands for `use in conditions` - so such attribute can be used in conditions)\n     * @param entity Entity object to search our attribute in.\n     * @returns The entity attribute or `null`\n     */\n    getFirstUICAttrInEntity(entity) {\n        if (entity.useInConditions !== false) {\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; i < attrCount; i++) {\n                    if (entity.attributes[i].useInConditions) {\n                        return entity.attributes[i];\n                    }\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; i < subEntityCount; i++) {\n                    let result = this.getFirstUICAttrInEntity(entity.subEntities[i]);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n    /**\n     * Finds operator in model by its ID.\n     * This function runs through all operators inside specified model and returns the one with specified ID.\n     * @param operatorId An operator ID.\n     * @returns The operator or `null`.\n     */\n    findOperatorById(operatorId) {\n        if (this.operators.length > 0) {\n            let opCount = this.operators.length;\n            for (let idx = 0; idx < opCount; idx++) {\n                if (this.operators[idx].id == operatorId) {\n                    return this.operators[idx];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Finds operator in model by its ID.\n     * his function runs through all operators inside specified model and returns the one with specified ID.\n     * @param operatorId Operator ID.\n     * @returns The operator or special `NullOperator` object if operator is not found.\n     */\n    getOperatorById(operatorId) {\n        let op = this.findOperatorById(operatorId);\n        if (!op)\n            return this.nullOperator;\n        return op;\n    }\n    getDefaultOperatorIdForAttr(attr) {\n        if (attr.defaultOperator) {\n            return attr.defaultOperator;\n        }\n        else if (attr.operators.length > 0) {\n            return attr.operators[0];\n        }\n        else {\n            return this.nullOperator.id;\n        }\n    }\n    /**\n     * Gets caption of the aggregate function.\n     * @param funcId The function id.\n     * @returns The caption.\n     */\n    getAggrFunctionCaption(funcId) {\n        let funcTexts = i18n.getText('AggregateFunctions', funcId);\n        let funcCaption = funcTexts ? funcTexts.caption : i18n.getText('Aggr' + funcId.replace(' ', '') + '_Caption');\n        if (funcCaption) {\n            return funcCaption;\n        }\n        let func = utils.findItemById(this.aggrFunctions, funcId);\n        if (!func || !func.caption)\n            return funcId;\n        return func.caption;\n    }\n    /**\n     * Gets format of the aggregate function.\n     * @param funcId The function id.\n     * @returns The caption.\n     */\n    getAggrFunctionFormat(funcId) {\n        let funcTexts = i18n.getText('AggregateFunctions', funcId);\n        let funcFormat = funcTexts ? funcTexts.displayFormat : i18n.getText('Aggr' + funcId.replace(' ', '') + '_Format');\n        if (funcFormat) {\n            return funcFormat;\n        }\n        let func = utils.findItemById(this.aggrFunctions, funcId);\n        if (!func || !func.displayFormat)\n            return '';\n        return func.displayFormat;\n    }\n    /**\n     * Gets default operator for an attribute.\n     * @param attr The attribute.\n     * @returns The operator.\n     */\n    getDefaultOperatorForAttr(attr) {\n        let operatorId = this.getDefaultOperatorIdForAttr(attr);\n        return this.getOperatorById(operatorId);\n    }\n    /**\n     * Gets operand.\n     * @param attr The attribute.\n     * @param operator The operator.\n     * @param index The index.\n     * @returns The operand.\n     */\n    getOperand(attr, operator, index) {\n        let defOperand = new Operand();\n        if (operator && operator.defaultOperand) {\n            defOperand.copyFrom(operator.defaultOperand);\n            if (!defOperand.defValue) {\n                defOperand.defValue = '';\n            }\n            if (!defOperand.defText) {\n                defOperand.defText = '';\n            }\n        }\n        else {\n            defOperand.kind = DataKind.Scalar;\n            defOperand.dataType = attr.dataType;\n            defOperand.defValue = '';\n            defOperand.defText = '';\n            defOperand.editor = null;\n        }\n        let result = defOperand;\n        if (result.dataType === DataType.Unknown && attr) {\n            result.dataType = attr.dataType;\n        }\n        if (operator && (index >= 0)) {\n            if (operator.operands && operator.operands[index - 1]) {\n                result = utils.assign(result, operator.operands[index - 1]);\n            }\n        }\n        if (!result.editor) {\n            if (defOperand.editor) {\n                result.editor = defOperand.editor;\n            }\n            else if (defOperand.kind === DataKind.Query) {\n                result.editor.tag = EqEditorTag.SubQuery;\n            }\n            else if (attr && attr.defaultEditor) {\n                result.editor = attr.defaultEditor;\n            }\n            else if (result.dataType === DataType.Date || result.dataType === DataType.DateTime\n                || result.dataType === DataType.Time) {\n                result.editor.tag = EqEditorTag.DateTime;\n            }\n            else {\n                result.editor.tag = EqEditorTag.Edit;\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets the list of aggegate functions.\n     * @returns AN array of aggregate functions.\n     */\n    getAggrFunctions() {\n        return this.aggrFunctions;\n    }\n    /**\n     * Checks wether macro value is date.\n     * @param macroExpr The macro value.\n     * @retruns `true` if the macro value is date, otherwise `false`.\n     */\n    isDateMacro(macroExpr, macroProcessor) {\n        const match = macroExpr.match(/\\${{?(.*?)}?}/);\n        if (match != null) {\n            const macroId = match[1];\n            if (utils.indexOfArrayItem(this.dateMacros, macroId) >= 0) {\n                if (macroProcessor) {\n                    macroProcessor(macroId);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks whether the expression passed in the parameter is an time macro.\n     * @param macroExpr The macro expression\n     * @retruns `true` if the expression is a time macro (like Now), otherwise `false`.\n     */\n    isTimeMacro(macroExpr, macroProcessor) {\n        const match = macroExpr.match(/\\${{?(.*?)}?}/);\n        if (match != null) {\n            const macroId = match[1];\n            if (utils.indexOfArrayItem(this.timeMacros, macroId) >= 0) {\n                if (macroProcessor) {\n                    macroProcessor(macroId);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Gets date by its macro value.\n     * @param macroExpr The macro value.\n     * @returns The date or `null`\n     */\n    getDateMacroValue(macroExpr) {\n        let d = new Date();\n        const res = this.isDateMacro(macroExpr, macroId => {\n            switch (macroId) {\n                case 'Today':\n                    break;\n                case 'Yesterday':\n                    d.setDate(d.getDate() - 1);\n                    break;\n                case 'Tomorrow':\n                    d.setDate(d.getDate() + 1);\n                    break;\n                case 'FirstDayOfMonth':\n                    d.setDate(1);\n                    break;\n                case 'LastDayOfMonth':\n                    d.setMonth(d.getMonth() + 1, 0);\n                    break;\n                case 'FirstDayOfPrevWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() - day);\n                    break;\n                case 'FirstDayOfWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() - day);\n                    break;\n                case 'FirstDayOfYear':\n                    d.setMonth(0, 1);\n                    break;\n                case 'FirstDayOfNextWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() + day);\n                    break;\n                case 'FirstDayOfNextMonth':\n                    d.setMonth(d.getMonth() + 1, 1);\n                    break;\n                case 'FirstDayOfPrevMonth':\n                    d.setMonth(d.getMonth() - 1, 1);\n                    break;\n                case 'FirstDayOfPrevYear':\n                    d.setFullYear(d.getFullYear() - 1, 0, 1);\n                    break;\n                case 'FirstDayOfNextYear':\n                    d.setFullYear(d.getFullYear() + 1, 0, 1);\n                    break;\n            }\n        });\n        return res ? d : null;\n    }\n    /**\n    * Gets the date value by a macro expression of the expression itself.\n    * @param macroExpr The macro value.\n    * @returns The date or macro valu.\n    */\n    getDateOrMacroValue(macroExpr) {\n        let d = this.getDateMacroValue(macroExpr);\n        return d ? d : macroExpr;\n    }\n    /**\n    * Gets time by its macro value.\n    * @param macroExpr The macro value.\n    * @returns The date or `null`.\n    */\n    getTimeMacroValue(macroExpr) {\n        let d = new Date();\n        const res = this.isDateMacro(macroExpr, macroId => {\n            switch (macroId) {\n                case 'Now':\n                    break;\n                case 'HourStart':\n                    d.setMinutes(0, 0, 0);\n                    break;\n                case 'Midnight':\n                    d.setHours(0, 0, 0, 0);\n                    break;\n                case 'Noon':\n                    d.setHours(12, 0, 0, 0);\n                    break;\n            }\n        });\n        return res ? d : null;\n    }\n    /**\n     * Gets a time value by macor or the macro itself.\n     * @param time The macro or time value.\n     * @returns The time value or a macro that represents a particular time.\n     */\n    getTimeOrMacroValue(time) {\n        var t = this.getTimeMacroValue(time);\n        return t ? t : time;\n    }\n    // /**\n    //  * Gets all date marcos.\n    //  * @returns The array of marcos\n    //  */\n    getAllDateMacros() {\n        return this.dateMacros;\n    }\n    /**\n     * Gets all time marcos.\n     * @returns The array of marcos\n     */\n    getAllTimeMacros() {\n        return this.timeMacros;\n    }\n}\n\n/** Contains several constant definitions for expressions tag */\nvar ExprTag;\n(function (ExprTag) {\n    /** Unknown expression */\n    ExprTag[ExprTag[\"Unknown\"] = 0] = \"Unknown\";\n    /** Constant expression */\n    ExprTag[ExprTag[\"Constant\"] = 1] = \"Constant\";\n    /** Entity attributre expression */\n    ExprTag[ExprTag[\"EntityAttribute\"] = 2] = \"EntityAttribute\";\n    /** Parent entity attribute expression */\n    ExprTag[ExprTag[\"ParentEntityAttribute\"] = 3] = \"ParentEntityAttribute\";\n    /** Agrregate function expression */\n    ExprTag[ExprTag[\"AggregateFunction\"] = 4] = \"AggregateFunction\";\n    /** Parent column expression */\n    ExprTag[ExprTag[\"ParentColumn\"] = 5] = \"ParentColumn\";\n    /** Query expression */\n    ExprTag[ExprTag[\"Query\"] = 11] = \"Query\";\n    /** Custom sql expression */\n    ExprTag[ExprTag[\"CustomSql\"] = 21] = \"CustomSql\";\n})(ExprTag || (ExprTag = {}));\n\n/**\n * Represents expression object.\n */\nclass Expression {\n    /** The default constructor. */\n    constructor(parent) {\n        this.parent = parent;\n        /** The tag. */\n        this.tag = ExprTag.Constant;\n        /** The data kind. */\n        this.kind = DataKind.Scalar;\n        /** The data type. */\n        this.dataType = DataType.Unknown;\n        /** The value. */\n        this._value = ''; //DO NOT forget remove any\n        /**\n         * The distinct option. (e.g `SELECT DISTINCT`)\n         */\n        this.distinct = false;\n        this._isDefaultValue = false;\n        this.getText = () => this.text || this._value;\n        this.args = new Array();\n    }\n    getParent() {\n        return this.parent;\n    }\n    getModel() {\n        return this.parent.getQuery().getModel();\n    }\n    /**\n     * Loads expression from its JSON representation object.\n     * @param model The Data Model.\n     * @param data The JSON representation object.\n     */\n    loadFromData(model, data) {\n        if (data) {\n            this.tag = data.tag;\n            if (data.val) {\n                this._value = data.val;\n                this.text = data.txt;\n            }\n            else if (data.id) {\n                this.kind = DataKind.Attribute;\n                this._value = data.id;\n                this.text = data.txt;\n            }\n            if (typeof data.dtype !== 'undefined') {\n                this.dataType = data.dtype;\n            }\n            if (this.tag == ExprTag.EntityAttribute\n                || this.tag == ExprTag.ParentEntityAttribute) {\n                this.kind = DataKind.Attribute;\n                //We don't load other info for EntityAttr\n            }\n            else {\n                if (typeof data.kind !== 'undefined') {\n                    this.kind = data.kind;\n                }\n                if (data.query) {\n                    this.subQuery = this.parent.getQuery().createSubQuery();\n                    this.subQuery.loadFromDataOrJson(data.query);\n                }\n                if (typeof data.distinct !== 'undefined') {\n                    this.distinct = data.distinct;\n                }\n                if (data.func) {\n                    this.func = data.func;\n                    if (data.args) {\n                        for (let i = 0; i < data.args.length; i++) {\n                            const arg = new Expression(this.parent);\n                            arg.loadFromData(model, data.args[i]);\n                            this.args.push(arg);\n                        }\n                    }\n                }\n                if (data.sql) {\n                    this.sql = data.sql;\n                    this.baseAttrId = data.baseAttrId;\n                }\n            }\n        }\n    }\n    /**\n    * Saves expression from JSON representation object.\n    * @returns The JSON representation object.\n    */\n    saveToData() {\n        let obj = {\n            tag: this.tag\n        };\n        obj.dtype = this.dataType;\n        //Do not save other info for EntityAttr\n        if (this.tag == ExprTag.EntityAttribute || this.tag == ExprTag.ParentEntityAttribute) {\n            if (this._value) {\n                obj.id = this._value;\n                obj.val = this._value;\n            }\n            if (this.text) {\n                obj.txt = this.text;\n            }\n            //Do not save other info for EntityAttr\n        }\n        else {\n            if (this.subQuery) {\n                obj.query = this.subQuery.toJSONData();\n            }\n            if (typeof this.kind !== \"undefined\") {\n                obj.kind = this.kind;\n            }\n            if (this._value) {\n                obj.val = this._value;\n            }\n            if (this.text) {\n                obj.txt = this.text;\n            }\n            if (this.distinct) {\n                obj.distinct = this.distinct;\n            }\n            if (this.func) {\n                obj.func = this.func;\n                obj.args = [];\n                for (let i = 0; i < this.args.length; i++) {\n                    obj.args.push(this.args[i].saveToData());\n                }\n            }\n            if (this.sql) {\n                obj.sql = this.sql;\n                obj.baseAttrId = this.baseAttrId;\n            }\n        }\n        return obj;\n    }\n    getIndex() {\n        return this.parent.getExpressionIndex(this);\n    }\n    get value() {\n        return this._value;\n    }\n    setValue(val, silent = false) {\n        this.setContent(val, undefined, silent);\n    }\n    setContent(val, txt, silent = false) {\n        let oldValue = this.value;\n        if (this.kind == DataKind.Attribute && val) {\n            const attr = this.getModel().getAttributeById(val);\n            if (!attr) {\n                throw \"No such entity attribute:\" + val;\n            }\n            this.dataType = attr.dataType;\n        }\n        this._value = val;\n        if (typeof txt !== 'undefined') {\n            this.text = txt;\n        }\n        else if (typeof this.text !== 'undefined') {\n            this.text = val;\n        }\n        this._isDefaultValue = false;\n        if (!silent) {\n            this.parent.expressionChanged(this, oldValue);\n        }\n    }\n    isEmpty() {\n        return !(this.text || this._value);\n    }\n    hasText() {\n        return this.text && this.text.length > 0;\n    }\n    tryCopyValueFrom(expr) {\n        if (this.kind == expr.kind) {\n            if (this.dataType == expr.dataType) {\n                this.setContent(expr.value.length ? expr.value : this._value, (expr.text && expr.text.length) ? expr.text : this.text, true);\n            }\n            else {\n                const val = equtils.convertValue(expr.value, expr.dataType, this.dataType);\n                this.setContent(val.length ? val : this._value, (expr.text && expr.text.length) ? expr.text : this.text, true);\n            }\n            this.subQuery = expr.subQuery;\n            this.sql = expr.sql;\n            this.baseAttrId = expr.baseAttrId;\n        }\n        else if (!this._isDefaultValue) {\n            this.setContent('', '', true);\n            this.subQuery = null;\n            this.sql = null;\n            this.baseAttrId = null;\n        }\n    }\n}\n\nvar QueryChangePart;\n(function (QueryChangePart) {\n    QueryChangePart[QueryChangePart[\"Conditions\"] = 1] = \"Conditions\";\n    QueryChangePart[QueryChangePart[\"Columns\"] = 2] = \"Columns\";\n    QueryChangePart[QueryChangePart[\"SortingColumns\"] = 4] = \"SortingColumns\";\n    QueryChangePart[QueryChangePart[\"Properties\"] = 32] = \"Properties\";\n    QueryChangePart[QueryChangePart[\"ExtraData\"] = 64] = \"ExtraData\";\n    QueryChangePart[QueryChangePart[\"Facets\"] = 128] = \"Facets\";\n    QueryChangePart[QueryChangePart[\"Aggregation\"] = 256] = \"Aggregation\";\n    QueryChangePart[QueryChangePart[\"All\"] = 511] = \"All\";\n})(QueryChangePart || (QueryChangePart = {}));\nvar QueryChangeAction;\n(function (QueryChangeAction) {\n    QueryChangeAction[QueryChangeAction[\"Add\"] = 1] = \"Add\";\n    QueryChangeAction[QueryChangeAction[\"Modify\"] = 2] = \"Modify\";\n    QueryChangeAction[QueryChangeAction[\"Delete\"] = 4] = \"Delete\";\n    QueryChangeAction[QueryChangeAction[\"Activate\"] = 8] = \"Activate\";\n    QueryChangeAction[QueryChangeAction[\"All\"] = 127] = \"All\";\n})(QueryChangeAction || (QueryChangeAction = {}));\n\n/** Represents sorting direction. */\nvar SortDirection;\n(function (SortDirection) {\n    /** No sorting. */\n    SortDirection[SortDirection[\"None\"] = 0] = \"None\";\n    /** Ascending order. */\n    SortDirection[SortDirection[\"Ascending\"] = 1] = \"Ascending\";\n    /** Descending order. */\n    SortDirection[SortDirection[\"Descending\"] = 2] = \"Descending\";\n})(SortDirection || (SortDirection = {}));\n/**\n * Represents some column which will be queried\n */\nclass QueryColumn {\n    get id() {\n        return this._id;\n    }\n    /** Column sorting direction */\n    get sorting() {\n        if (this.query) {\n            return this.query.getColumnSorting(this);\n        }\n        else {\n            return this._sorting;\n        }\n    }\n    ;\n    set sorting(direction) {\n        if (this.query) {\n            this.query.setColumnSorting(this, direction);\n        }\n        else {\n            this._sorting = direction;\n        }\n    }\n    /** The index of the column in the sorting list. */\n    get sortIndex() {\n        if (this.query) {\n            return this.query.getColumnSortIndex(this);\n        }\n        else {\n            return this._sortIndex;\n        }\n    }\n    ;\n    set sortIndex(index) {\n        if (this.query) {\n            this.query.setColumnSortIndex(this, index);\n        }\n        else {\n            this._sortIndex = index;\n        }\n    }\n    ;\n    /** the default constructor. */\n    constructor(query, justsorted = false) {\n        this.query = query;\n        this.justsorted = justsorted;\n        /** Column is enabled */\n        this.enabled = true;\n        /** The parameters associated with this column */\n        this.params = [];\n        this._isHidden = false;\n        this.query = query;\n        this._id = utils.generateId('col');\n        this.caption = '';\n        this._sorting = SortDirection.None;\n        this._sortIndex = -1;\n        this.expr = new Expression(this);\n        this.blockId = '';\n        this.justsorted = justsorted;\n    }\n    getModel() {\n        return this.query.getModel();\n    }\n    getQuery() {\n        return this.query;\n    }\n    /** Indicates whether this column is read-only */\n    isReadOnly() {\n        return false;\n    }\n    /** Indicates whether this column is just-sorted */\n    isJustSorted() {\n        return this.justsorted;\n    }\n    setReadOnly(value) {\n        //do nothing. Read-only columns are not supported here\n    }\n    /** Indicates whether this column is invisible */\n    isHidden() {\n        return this._isHidden;\n    }\n    setHidden(value) {\n        this._isHidden = value;\n    }\n    getDataType() {\n        if (this.expr.dataType === DataType.Unknown) {\n            let attrId = null;\n            if (this.expr.func) {\n                if (this.expr.func == \"COUNT\" || this.expr.func == \"CNTDST\")\n                    return DataType.Int64;\n                attrId = this.expr.args[0].value;\n            }\n            else {\n                attrId = this.expr.value;\n            }\n            const attr = this.query.getModel()\n                .getAttributeById(attrId);\n            if (attr)\n                return attr.dataType;\n        }\n        return this.expr.dataType;\n    }\n    /**\n      * Loads column from its JSON representation object.\n      * @param model The Data Model.\n      * @param colData The JSON representation object.\n      */\n    loadFromData(model, colData) {\n        if (colData) {\n            if (colData.id) {\n                this._id = colData.id;\n            }\n            this.caption = colData.cptn;\n            if (typeof colData.srt !== 'undefined') {\n                this._sorting = colData.srt;\n                this._sortIndex = (typeof colData.srtidx !== 'undefined')\n                    ? colData.srtidx\n                    : -1;\n            }\n            if (colData.enabled === false) {\n                this.enabled = colData.enabled;\n            }\n            this.expr.loadFromData(model, colData.expr);\n            this.blockId = colData.blockId;\n            this.displayFormat = colData.dfmt;\n            this.groupFooterColumnTemlate = colData.gfct;\n            if (colData.hidden) {\n                this.setHidden(true);\n            }\n        }\n    }\n    /**\n     * Saves the column to a data transfer object (ready for sending to the server-side) .\n     * @returns An plain object that represents the column.\n     */\n    saveToData() {\n        let obj = {};\n        obj.id = this._id;\n        if (typeof this.caption !== 'undefined') {\n            obj.cptn = this.caption;\n        }\n        if (this.sorting != SortDirection.None) {\n            obj.srt = this.sorting;\n            obj.srtidx = this.sortIndex;\n        }\n        obj.expr = this.expr.saveToData();\n        if (this.blockId) {\n            obj.blockId = this.blockId;\n        }\n        if (this.enabled === false) {\n            obj.enabled = this.enabled;\n        }\n        obj.dfmt = this.displayFormat;\n        obj.gfct = this.groupFooterColumnTemlate;\n        if (this.isHidden()) {\n            obj.hidden = true;\n        }\n        return obj;\n    }\n    fireChangedEvent() {\n        this.query.fireChangedEvent({\n            part: (this.justsorted)\n                ? QueryChangePart.SortingColumns\n                : QueryChangePart.Columns,\n            action: QueryChangeAction.Modify,\n            changee: this\n        });\n    }\n    getExpressionIndex(expr) {\n        return 0;\n    }\n    expressionChanged(expr, oldValue) {\n    }\n}\n\n/**\n * Represents a type of condition.\n * Current we have 2 possible types: a simple condition or a predicate - a group of conditions\n*/\nvar CondTag;\n(function (CondTag) {\n    /** An unknown type of condition (just in case).*/\n    CondTag[CondTag[\"Unknown\"] = 0] = \"Unknown\";\n    /** A simple condition (e.g. SomeField > SomeValue).*/\n    CondTag[CondTag[\"Simple\"] = 1] = \"Simple\";\n    /** A predicate (a group of conditions).*/\n    CondTag[CondTag[\"Group\"] = 51] = \"Group\";\n})(CondTag || (CondTag = {}));\n\nvar ConditionPart;\n(function (ConditionPart) {\n    ConditionPart[ConditionPart[\"EntityAttr\"] = 2] = \"EntityAttr\";\n    ConditionPart[ConditionPart[\"Operator\"] = 4] = \"Operator\";\n    ConditionPart[ConditionPart[\"Value\"] = 8] = \"Value\";\n    ConditionPart[ConditionPart[\"All\"] = 14] = \"All\";\n})(ConditionPart || (ConditionPart = {}));\n\n/**\n * Represents some condition.\n */\nclass Condition {\n    get id() {\n        return this._id;\n    }\n    get enabled() {\n        return this._enabled && (!this.getParent() || this.getParent().enabled);\n    }\n    set enabled(value) {\n        this._enabled = value && (!this.getParent() || this.getParent().enabled);\n        this.conditions && this.conditions.forEach((cond) => {\n            cond.enabled = value;\n        });\n    }\n    /**\n     * The default constructor.\n     * @param tag The condition tag\n     */\n    constructor(query, tag) {\n        this.query = query;\n        /**\n         *  The linking type.\n         */\n        this.linkType = LinkType.All; //only for predicates\n        this.parent = null;\n        this._id = utils.generateId('cond');\n        this.justAdded = false;\n        this.tag = tag || CondTag.Unknown;\n        this.enabled = true;\n        this.operatorId = '';\n        this.blockId = '';\n        this.expressions = new Array();\n        this.conditions = new Array();\n    }\n    getQuery() {\n        return this.query;\n    }\n    getModel() {\n        return this.query.getModel();\n    }\n    getParent() {\n        return this.parent;\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getConditions() {\n        return this.conditions;\n    }\n    isEmpty() {\n        return this.conditions.length === 0;\n    }\n    isGroup() {\n        return (this.tag == CondTag.Group) || (this.parent == null);\n    }\n    getLevel() {\n        const parent = this.getParent();\n        return parent ? parent.getLevel() + 1 : 0;\n    }\n    /**\n     * Indicates whether this condition is read-only.\n     */\n    isReadOnly() {\n        return false;\n    }\n    setReadOnly(value) {\n    }\n    /**\n     * The value indicating whether this condition is parameterized.\n     */\n    isParameterized() {\n        return false;\n    }\n    setParameterized(value) {\n    }\n    /**\n     * Indicates whether this condition must be placed into `JOIN` clause in result `SQL`.\n     */\n    isInJoin() {\n        return false;\n    }\n    setInJoin(value) {\n    }\n    clearConditions() {\n        this.conditions = [];\n    }\n    addCondition(cond) {\n        cond.setParent(this);\n        return this.conditions.push(cond);\n    }\n    removeConditionAt(index) {\n        this.conditions.splice(index, 1);\n    }\n    /**\n    * Loads condtion from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        if (data) {\n            this.tag = data.tag;\n            if (!this.tag) {\n                this.tag = (!this.parent || this.conditions.length > 0) ? CondTag.Group : CondTag.Simple;\n            }\n            if (typeof data.enabled !== 'undefined') {\n                this.enabled = data.enabled;\n            }\n            if (typeof data.disabled !== 'undefined') {\n                this.enabled = !data.disabled;\n            }\n            if (this.tag == CondTag.Simple) {\n                this.operatorId = data.op;\n                if (data.exprs) {\n                    for (let i = 0; i < data.exprs.length; i++) {\n                        let newExpr = new Expression(this);\n                        newExpr.loadFromData(model, data.exprs[i]);\n                        this.expressions.push(newExpr);\n                    }\n                }\n            }\n            this.linkType = data.linking;\n        }\n    }\n    /**\n     * Saves condition to JSON representation object.\n     * @returns The JSON representation object.\n     */\n    saveToData() {\n        let obj = {};\n        obj.tag = this.tag;\n        if (!this.enabled) {\n            obj.enabled = this.enabled;\n        }\n        if (this.tag == CondTag.Simple) {\n            obj.op = this.operatorId;\n            obj.exprs = [];\n            for (let i = 0; i < this.expressions.length; i++) {\n                obj.exprs.push(this.expressions[i].saveToData());\n            }\n        }\n        if (this.tag == CondTag.Group) {\n            //if condition group\n            obj.linking = this.linkType;\n        }\n        return obj;\n    }\n    fireChangedEvent(condPart = ConditionPart.All) {\n        this.query.fireChangedEvent({\n            part: QueryChangePart.Conditions,\n            action: QueryChangeAction.Modify,\n            changee: this,\n            condPart: condPart\n        });\n    }\n    getExpressionIndex(expr) {\n        return this.expressions.indexOf(expr, 0);\n    }\n    expressionChanged(expr, oldValue) {\n        if (expr.getIndex() == 0 && expr.tag == ExprTag.EntityAttribute) {\n            //this is a base entity attribute, we need to re-pack the whole condition\n            this.tuneOperatorForAttr(expr.value);\n        }\n    }\n    getOperatorId() {\n        return this.operatorId;\n    }\n    setOperatorId(newOperatorId, silent = false) {\n        const oldOperatorId = this.operatorId;\n        this.operatorId = newOperatorId;\n        if (!silent) {\n            const model = this.getModel();\n            const operator = model.getOperatorById(newOperatorId);\n            const attrId = this.expressions[0].value;\n            const attr = model.getAttributeById(attrId);\n            this.tuneValueExpressions(attr, operator, attr.id, oldOperatorId);\n        }\n    }\n    tuneOperatorForAttr(oldAttrId) {\n        const model = this.getModel();\n        const attrId = this.expressions[0].value;\n        const attr = model.getAttributeById(attrId);\n        if (attr != null) {\n            let newOperator = this.getModel().getDefaultOperatorForAttr(attr);\n            let oldOperatorId = this.operatorId;\n            this.operatorId = newOperator.id;\n            this.tuneValueExpressions(attr, newOperator, oldAttrId, oldOperatorId);\n        }\n    }\n    tuneValueExpressions(attr, operator, oldAttrId, oldOperatorId) {\n        const model = this.getModel();\n        if (!operator)\n            return;\n        let exprCount = this.expressions.length;\n        oldAttrId ? model.getAttributeById(oldAttrId) : null;\n        let oldOperator = null;\n        if (oldOperatorId) {\n            oldOperator = model.getOperatorById(oldOperatorId);\n        }\n        if (oldOperator && oldOperator.paramCount == operator.paramCount) {\n            //add  necessary expressions\n            let i = 1;\n            while (i < operator.paramCount) {\n                let oldOperand = model.getOperand(attr, oldOperator, i);\n                let operand = model.getOperand(attr, operator, i);\n                if (operand.dataType == DataType.Unknown) {\n                    operand.dataType = attr.dataType;\n                }\n                const editor = operand.editor && operand.editor.tag !== EditorTag.Unknown\n                    ? operand.editor\n                    : (attr.defaultEditor && attr.defaultEditor.tag !== EditorTag.Unknown\n                        ? attr.defaultEditor\n                        : new EqValueEditor());\n                if (i >= exprCount) {\n                    var valExpr = this.createValueExpr(operand);\n                    this.expressions.push(valExpr);\n                }\n                else {\n                    var oldExpr = this.expressions[i];\n                    //create new value expression according to the corresponding operand\n                    var newExpr = this.createValueExpr(operand);\n                    if (this.areCompitableEditors(oldOperand.editor, editor)) {\n                        newExpr.tryCopyValueFrom(oldExpr);\n                    }\n                    this.expressions[i] = newExpr;\n                }\n                i++;\n            }\n            if (exprCount > i) {\n                //remove all redundant expressions\n                this.expressions.splice(i, exprCount - i);\n            }\n        }\n        else {\n            this.expressions.splice(1, this.expressions.length - 1);\n            for (let i = 1; i < operator.paramCount; i++) {\n                let operand = model.getOperand(attr, operator, i);\n                if (operand.dataType == DataType.Unknown) {\n                    operand.dataType = attr.dataType;\n                }\n                var valExpr = this.createValueExpr(operand);\n                this.expressions.push(valExpr);\n            }\n        }\n    }\n    areCompitableEditors(oldEditor, newEditor) {\n        if (newEditor.tag == EqEditorTag.CustomList || newEditor.tag == EqEditorTag.List\n            || newEditor.tag == EqEditorTag.SqlList || newEditor.tag == EditorTag.Unknown) {\n            return false;\n        }\n        return true;\n    }\n    addExpressionByOperand(operand, val = null) {\n        let expr = this.createValueExpr(operand, val);\n        this.expressions.push(expr);\n        return expr;\n    }\n    createValueExpr(operand, val = null) {\n        let valueNotDefined = val === null || typeof val === 'undefined';\n        let value = val ? val : operand.defValue;\n        let text = val ? val : operand.defText;\n        let result = new Expression(this);\n        if (operand.kind === DataKind.Query) {\n            result.tag = ExprTag.Query;\n            result.dataType = operand.dataType;\n            result.kind = operand.kind;\n            result.setContent(value, text, true);\n        }\n        else if (operand.kind === DataKind.Attribute) {\n            if (!valueNotDefined) {\n                let defAttr = this.getModel().getFirstAttributeByFilter((attr) => {\n                    return attr.useInConditions == true && (!operand.dataType || attr.dataType == operand.dataType);\n                });\n                value = defAttr ? defAttr.id : null;\n            }\n            result.tag = ExprTag.EntityAttribute;\n            result.kind = operand.kind;\n            result.dataType = operand.dataType;\n            result.setContent(value, text, true);\n        }\n        else {\n            if (valueNotDefined) {\n                if (operand.defValue && operand.defValue != \"\") {\n                    value = operand.defValue;\n                }\n                else {\n                    if (operand.editor && operand.editor.defValue) {\n                        value = operand.editor.defValue;\n                    }\n                    else {\n                        value = '';\n                    }\n                }\n                if (operand.editor) {\n                    text = operand.editor.getValueText(value);\n                }\n            }\n            result.tag = ExprTag.Constant;\n            result.dataType = operand.dataType;\n            result.kind = operand.kind;\n            result.setContent(value, text, true);\n            result._isDefaultValue = valueNotDefined;\n        }\n        return result;\n    }\n}\n\nclass Tree {\n    constructor(value = null) {\n        this.childs = [];\n        this.value = null;\n        this.parent = null;\n        if (value) {\n            if (Array.isArray(value)) {\n                this.value = value[0];\n                if (value.length > 1) {\n                    this.addChild(new Tree(value.slice(1)));\n                }\n            }\n            else if (value instanceof Tree) {\n                this.value = value.value;\n                this.childs = value.childs;\n            }\n            else {\n                this.value = value;\n            }\n        }\n    }\n    contains(value) {\n        if (this.value === value)\n            return true;\n        for (let child of this.childs) {\n            if (child.contains(value))\n                return true;\n        }\n        return false;\n    }\n    findNode(value) {\n        if (this.value === value)\n            return this;\n        for (let child of this.childs) {\n            let result = child.findNode(value);\n            if (result)\n                return result;\n        }\n        return null;\n    }\n    addChild(child) {\n        child.parent = this;\n        this.childs.push(child);\n    }\n    setParents() {\n        for (let child of this.childs) {\n            child.parent = this;\n            child.setParents();\n        }\n    }\n}\n\n/**\n * The error that appears when the query is not valid\n */\nclass InvalidQueryError extends Error {\n    /**\n     * Creates an instance of error type.\n     * @param message The error message\n     */\n    constructor(message) {\n        super(message);\n        if (typeof Error[\"captureStackTrace\"] === \"function\") {\n            Error[\"captureStackTrace\"].apply(this, [InvalidQueryError]);\n        }\n        this.name = 'InvalidQueryError';\n    }\n}\n/**\n * Represents Query.\n */\nclass Query {\n    isModified() {\n        return this._isModified;\n    }\n    resetModified() {\n        this._isModified = false;\n    }\n    get enableAggregation() {\n        return this._enableAggregation;\n    }\n    set enableAggregation(value) {\n        const oldValue = this._enableAggregation;\n        this._enableAggregation = value;\n        if (!oldValue && value) {\n            this.processQueryForAggregation();\n            this.columns.filter(c => c.enabled\n                && c.expr.tag == ExprTag.AggregateFunction);\n        }\n        if (!this._enableAggregation) {\n            this.aggrSettings.clear();\n        }\n    }\n    /**\n     * The default constructor.\n     * @param model The data model.\n     * @param data JSON representation object.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    constructor(model, data, options) {\n        /**\n         * Contains user-defined extra data for current query.\n         */\n        this.extraData = {};\n        this.innerData = {};\n        this.isNewbie = true;\n        this._isModified = false;\n        this._enableAggregation = false;\n        this.parentQuery = null;\n        this.drillDowns = [];\n        this.syncSortOrderWithColumnsOrder = true;\n        if (options) {\n            this.context = options.context;\n            if (this.context) {\n                this.syncSortOrderWithColumnsOrder = this.context.options.syncSortOrderWithColumnsOrder;\n            }\n        }\n        this.eventEmitter = new EventEmitter(this);\n        this.root = new Condition(this, CondTag.Group);\n        this.extraConditions = new Condition(this, CondTag.Group);\n        this.columns = new Array();\n        //this.justsorted = new Array<QueryColumn>();\n        this.sortedColumns = new Array();\n        if (!this.id) {\n            this.regenerateId();\n        }\n        this.setDefaultName();\n        this.description = \"\";\n        this.model = (model) ? model : new DataModel();\n        if (data) {\n            this.loadFromData(data);\n        }\n        this.attributeExprTag = (options) ? options.attrTag || ExprTag.EntityAttribute : ExprTag.EntityAttribute;\n        this.clientListRequestHandler = (options) ? options.clientListRequestHandler : new Array();\n        this.serverListRequestHandler = (options) ? options.serverListRequestHandler : new Array();\n        this.timezoneOffset = (new Date()).getTimezoneOffset();\n        this.aggrSettings = new AggregationSettings(this);\n        if (options) {\n            this.parentQuery = options.parent;\n        }\n        this.addChangedCallback(ev => {\n            if (ev.data\n                && ((ev.data.part & QueryChangePart.Columns) > 0)\n                && !ev.data.aggregation) {\n                if (this._enableAggregation && this.updateAggregationSettings()) {\n                    this.fireChangedEvent({\n                        part: QueryChangePart.Aggregation\n                    });\n                }\n            }\n        });\n    }\n    updateAggregationSettings() {\n        let hasChanged = false;\n        const aggrSettings = this.getAggregationSettings();\n        for (let i = aggrSettings.groups.length - 1; i >= 0; i--) {\n            const group = aggrSettings.groups[i];\n            for (let j = group.columns.length - 1; j >= 0; j--) {\n                const colId = group.columns[j];\n                if (!this.columns.find(col => col.id === colId)) {\n                    group.columns.splice(j, 1);\n                    hasChanged = true;\n                }\n            }\n            if (group.columns.length == 0) {\n                aggrSettings.groups.splice(i, 1);\n            }\n        }\n        const aggregates = aggrSettings.getAggregates();\n        for (let i = aggregates.length - 1; i >= 0; i--) {\n            const aggr = aggregates[i];\n            if (!this.columns.find(col => col.id === aggr.colId)) {\n                aggregates.splice(i, 1);\n                hasChanged = true;\n            }\n        }\n        // const isValidAggration = (aggrSettings.hasGroups() && (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())) \n        //                          || (aggrSettings.hasAggregates && aggrSettings.hasGrandTotals());\n        // if (!isValidAggration) {\n        //     this.enableAggregation = false;\n        // }\n        return hasChanged;\n    }\n    createSubQuery() {\n        return new Query(this.model, null, { parent: this, context: this.context });\n    }\n    useAggregation(settingsTuner, silent = false) {\n        this.aggrSettings.clear();\n        settingsTuner(this.aggrSettings);\n        if (this.enableAggregation) {\n            this.processQueryForAggregation(silent);\n        }\n        else if (!silent) {\n            console.warn('Aggregation is turned off. Turn it on with query.enableAggregation = true');\n            return;\n        }\n    }\n    useDefaultAggregation() {\n        this._enableAggregation = true;\n        this.useAggregation((settings) => {\n            const aggrCols = this.columns.filter(c => c.enabled\n                && c.expr.tag == ExprTag.AggregateFunction);\n            if (aggrCols.length) {\n                // query contains aggregate columns\n                const colsToGroup = this.columns.filter(c => c.enabled\n                    && c.expr.tag == ExprTag.EntityAttribute);\n                const aggrsToAdd = [];\n                for (const col of aggrCols) {\n                    aggrsToAdd.push({ id: col.id, func: col.expr.func });\n                    this.changeColumnType(col, ExprTag.EntityAttribute);\n                }\n                for (const aggr of aggrsToAdd) {\n                    settings.addAggregateColumn(aggr.id, aggr.func);\n                }\n                for (const col of colsToGroup) {\n                    settings.addGroup({ columns: [col.id], name: col.caption });\n                }\n                settings.addGrandTotals();\n                this.fireChangedEvent({\n                    part: QueryChangePart.Columns,\n                    wasModified: false\n                });\n            }\n            else {\n                // query does not has any aggr columns\n                const colToAggr = this.getColumns()\n                    .filter(c => c.enabled && c.expr.tag == ExprTag.EntityAttribute\n                    && this.model.getAttributeById(c.expr.value).dataType === DataType.Currency)[0];\n                const colToGroup = this.getColumns()\n                    .filter(c => c.enabled && c.expr.tag == ExprTag.EntityAttribute\n                    && this.model.getAttributeById(c.expr.value).dataType === DataType.String)[0];\n                if ((!colToAggr && !settings.hasAggregates()) || !colToGroup)\n                    return;\n                settings.addGrandTotals()\n                    .addAggregateColumn(colToAggr.id, 'SUM')\n                    .addGroup({ columns: [colToGroup.id], name: 'Default' });\n            }\n        });\n    }\n    processQueryForAggregation(silent = false) {\n        const aggrSettings = this.getAggregationSettings();\n        const groups = aggrSettings.getGroups();\n        if (groups.length > 0) {\n            const groupColIds = groups[groups.length - 1].columns;\n            //take the list of grouped columns from the latest group\n            let groupedCols = [];\n            let sortedCols = [];\n            for (const col of this.getColumns()) {\n                if (groupColIds.indexOf(col.id) >= 0) {\n                    groupedCols.push(col);\n                }\n                else if (this.getColumnSorting(col) != SortDirection.None) {\n                    sortedCols.push(col);\n                }\n            }\n            let sortIndex = 0;\n            groupedCols.forEach(col => {\n                if (this.getColumnSorting(col) == SortDirection.None) {\n                    this.setColumnSorting(col, SortDirection.Ascending);\n                }\n                this.setColumnSortIndex(col, sortIndex++);\n                //col.sortIndex = sortIndex++;\n            });\n            sortedCols.forEach(col => {\n                this.setColumnSortIndex(col, sortIndex++);\n                //     col.sortIndex = sortIndex++;\n            });\n            if (!silent) {\n                this.fireChangedEvent({\n                    part: QueryChangePart.Columns,\n                    aggregation: true,\n                    wasModified: false\n                });\n            }\n        }\n    }\n    getAggregationSettings() {\n        return this.aggrSettings;\n    }\n    getColumnIds(from, to) {\n        to = to || from;\n        return this.columns.slice(from, to - from + 1)\n            .map(c => c.id);\n    }\n    /**\n     * Checks if the columns with IDs passed in function's parameter exist and are valid\n     */\n    validateColumns(colIds) {\n        const enabledColIds = this.columns.filter(c => c.enabled).map(c => c.id);\n        let prevIndex = -1;\n        for (const col of colIds) {\n            const index = enabledColIds.indexOf(col);\n            if (index < 0)\n                return false;\n            if (prevIndex > index)\n                return false;\n            prevIndex = index;\n        }\n        return true;\n    }\n    validateAggregate(colId, funcId) {\n        const col = this.columns.filter(c => c.enabled && c.id === colId)[0];\n        const func = this.model.findAggrFunctionById(funcId);\n        if (!func || !col || func.appliedTypes.indexOf(col.expr.dataType) < 0)\n            return false;\n        return true;\n    }\n    isEx() {\n        return false;\n    }\n    /**\n     * Resets the query: clears all its conditions and columns, regenerate the ID and sets the default name.\n     * @param clearQuery Indicates whether we need to clear the content of the query on reset (default: true)\n     */\n    reset(clearQuery = true) {\n        if (clearQuery) {\n            this.clear();\n        }\n        this.regenerateId();\n        this.setDefaultName();\n        this._isModified = false;\n        this.isNewbie = true;\n    }\n    hasEnabledAggrColumns() {\n        return this.columns.filter(col => col.enabled\n            && col.expr.tag === ExprTag.AggregateFunction).length > 0;\n    }\n    setDefaultName() {\n        this.setName(i18n.getText('NewQueryName'));\n        return this.getName();\n    }\n    /**\n     * Validates wether the query corresponds to the model.\n     * @param options Validate options.\n     * @throws {InvalidQueryError} If query is not valid.\n     */\n    validate(options) {\n        options = options || {};\n        const entityAttrNotExistError = \"EntityAttribute isn't declared in the model: \";\n        const wrongExprTag = \"The expression has wrond tag: \";\n        if (!this.model) {\n            throw new InvalidQueryError(\"Model is not declared\");\n        }\n        if (this.columns) {\n            for (let column of this.columns) {\n                if (column.expr.tag == ExprTag.EntityAttribute\n                    || column.expr.tag === ExprTag.ParentEntityAttribute) {\n                    const attr = this.model.getAttributeById(column.expr.value);\n                    if (!attr) {\n                        throw new InvalidQueryError(entityAttrNotExistError + column.expr.value);\n                    }\n                }\n                else if (column.expr.tag === ExprTag.AggregateFunction) {\n                    const attr = this.model.getAttributeById(column.expr.args[0].value);\n                    if (!attr) {\n                        throw new InvalidQueryError(entityAttrNotExistError + column.expr.args[0].value);\n                    }\n                }\n                else if (column.expr.tag === ExprTag.Unknown) {\n                    throw new InvalidQueryError(wrongExprTag + column.expr.tag);\n                }\n            }\n        }\n        if (this.root && this.root.getConditions()) {\n            this.validateConditionGroup(this.root, options);\n        }\n    }\n    getAggregatedColumns() {\n        return this.getColumns().filter(col => col.enabled\n            && col.expr.tag === ExprTag.AggregateFunction);\n    }\n    /**\n     * Validates wether the query corresponds to the model.\n     * @param options Validate options.\n     * @returns `true` if it is valid, otherwise `false`\n     */\n    tryValidate(options) {\n        try {\n            this.validate(options);\n            return true;\n        }\n        catch (e) {\n            if (e instanceof InvalidQueryError) {\n                return false;\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    validateConditionGroup(curCond, options) {\n        if (curCond.isGroup()) {\n            for (let condition of curCond.getConditions()) {\n                if (!condition.enabled)\n                    continue;\n                this.validateConditionGroup(condition, options);\n            }\n        }\n        else if (curCond.expressions[0].tag === ExprTag.EntityAttribute) {\n            const attrId = curCond.expressions[0].value;\n            const attr = this.model.getAttributeById(attrId);\n            if (!attr) {\n                throw new InvalidQueryError(\"EntityAttribute isn't declared in the model: \" + attrId);\n            }\n            if (!options.checkExpressions)\n                return;\n            for (let i = 1; i < curCond.expressions.length; i++) {\n                const expr = curCond.expressions[i];\n                if (expr.tag !== ExprTag.Constant)\n                    continue;\n                //validate number exprs\n                if (utils.isNumericType(expr.dataType)) {\n                    if (!expr.value)\n                        continue;\n                    let values = [];\n                    if (expr.kind === DataKind.List) {\n                        values = expr.value.split(/\\s*,\\s*/);\n                    }\n                    else {\n                        values = [expr.value];\n                    }\n                    for (let value of values) {\n                        const parsedVal = +value;\n                        if (isNaN(parsedVal)) {\n                            throw new InvalidQueryError(\"Expression constant is NaN in condition:\" + curCond.id);\n                        }\n                        if (utils.isIntType(expr.dataType) && parsedVal != parseInt(value, 10)) {\n                            throw new InvalidQueryError(\"Expression constant is wrong interger in condition: \" + curCond.id);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Sets data to the query.\n     * @param data A plain JS object that represents the query or a JSON string\n     * @param options An instance of LoadQueryFromDataOptions interface that can contain different loading options\n     */\n    loadFromDataOrJson(data, options) {\n        if (data) {\n            if (typeof data === \"string\") {\n                this.loadFromJson(data, options);\n            }\n            else {\n                this.loadFromData(data, options);\n            }\n        }\n    }\n    /**\n     * Loads query from JSON.\n     * @param json The JSON string.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    loadFromJson(json, options) {\n        let data = JSON.parse(json);\n        this.loadFromData(data, options);\n    }\n    /**\n     * Loads query from data representation.\n     * @param data The query DTO.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    loadFromData(data, options) {\n        options = utils.assign({\n            changeStatus: true,\n            validate: true\n        }, options || {});\n        let noErrors = false;\n        this.clear();\n        this.clearDrillDowns();\n        if (data) {\n            this.id = data.id;\n            this.root.loadFromData(this.model, data.root);\n            if (data.root && data.root.conds) {\n                for (let i = 0; i < data.root.conds.length; i++) {\n                    const condData = data.root.conds[i];\n                    if (condData.conds && !this.isEx()) {\n                        console.error(\"Community version doesn't support working with groups.\");\n                        continue;\n                    }\n                    const cond = this.createCondition();\n                    cond.loadFromData(this.model, condData);\n                    this.root.addCondition(cond);\n                }\n            }\n            this.name = data.name;\n            this.description = data.desc;\n            //this.justsorted = [];\n            this.sortedColumns = [];\n            if (data.justsortcols) {\n                for (let i = 0; i < data.justsortcols.length; i++) {\n                    let newCol = this.createColumn(true);\n                    newCol.loadFromData(this.model, data.justsortcols[i]);\n                    //this.justsorted.push(newCol);\n                    this.addColumnToSorted(newCol);\n                }\n            }\n            if (data.cols) {\n                for (let i = 0; i < data.cols.length; i++) {\n                    let newCol = this.createColumn();\n                    newCol.loadFromData(this.model, data.cols[i]);\n                    this.columns.push(newCol);\n                    if (newCol._sorting != SortDirection.None) {\n                        this.addColumnToSorted(newCol);\n                    }\n                }\n            }\n            this.sortedColumns.sort((col1, col2) => {\n                return col1._sortIndex - col2._sortIndex;\n            });\n            this.fixupSortingIndices();\n            if (data.extraData) {\n                this.extraData = data.extraData;\n            }\n            this.innerData = data.innerData || this.innerData;\n            if (this.innerData && this.innerData.aggr) {\n                this._enableAggregation = this.innerData.aggr.enabled || false;\n                this.useAggregation(settings => {\n                    settings.loadFromData(this.innerData.aggr);\n                }, true);\n            }\n            if (data.dds && data.dds.length) {\n                for (let dd of data.dds) {\n                    const query = this.addDrillDown();\n                    query.loadFromData(dd);\n                }\n            }\n        }\n        if (this._enableAggregation) {\n            this.updateAggregationSettings();\n        }\n        noErrors = true;\n        if (noErrors) {\n            if (options.changeStatus) {\n                this.isNewbie = false;\n                this._isModified = false;\n            }\n        }\n        if (options.validate) {\n            this.validate();\n        }\n    }\n    /**\n     *\n     */\n    addDrillDown() {\n        const query = this.context.createQuery();\n        query.parentQuery = this;\n        this.drillDowns.push(query);\n        return query;\n    }\n    getDrillDowns() {\n        return this.drillDowns;\n    }\n    getParentQuery() {\n        return this.parentQuery;\n    }\n    /**\n     *\n     */\n    findColumnById(colId) {\n        for (let col of this.columns) {\n            if (col.id === colId)\n                return col;\n        }\n        return null;\n    }\n    /**\n     * Gets DataModel object associated with this query.\n     * @retruns The data model.\n     */\n    getModel() {\n        return this.model;\n    }\n    /**\n     * Sets DataModel object associated with this query.\n     * @param model The data model.\n     */\n    setModel(model) {\n        this.model = model;\n    }\n    /**\n     * Loads data model.\n     * @param model JSON representation object or JSON string.\n     */\n    loadModelData(model) {\n        this.model.setData(model);\n    }\n    /**\n     * Returns JSON representation of this query.\n     * @retruns JSON string.\n     */\n    toJSON() {\n        return JSON.stringify(this.toJSONData());\n    }\n    /**\n     * Returns JSON representation of this query.\n     * @retruns JSON representation object.\n     */\n    toJSONData() {\n        this.fixupSortingIndices();\n        let obj = {\n            modelId: this.model ? this.model.getId() : null,\n            modelName: this.model ? this.model.getName() : null\n        };\n        obj.id = this.id;\n        obj.name = this.name;\n        if (this.description) {\n            obj.desc = this.description;\n        }\n        obj.cols = [];\n        for (let i = 0; i < this.columns.length; i++) {\n            obj.cols.push(this.columns[i].saveToData());\n        }\n        obj.justsortcols = [];\n        // for (let i = 0; i < this.justsorted.length; i++) {\n        //     obj.justsortcols.push(this.justsorted[i].saveToData());\n        // }\n        this.sortedColumns.forEach(col => {\n            if (col.isJustSorted()) {\n                obj.justsortcols.push(col.saveToData());\n            }\n        });\n        if (this.extraData) {\n            obj.extraData = this.extraData;\n        }\n        if (this.innerData) {\n            obj.innerData = this.innerData;\n            obj.innerData.aggr = this.aggrSettings.saveToData();\n            obj.innerData.aggr.enabled = this._enableAggregation;\n        }\n        const rootCondToData = (condGroup) => {\n            const result = condGroup.saveToData();\n            result.conds = [];\n            const conditions = condGroup.getConditions();\n            for (let i = 0; i < conditions.length; i++) {\n                if (conditions[i].isGroup() && !this.isEx()) {\n                    console.error(\"Community version doesn't support working with groups.\");\n                    continue;\n                }\n                result.conds.push(conditions[i].saveToData());\n            }\n            return result;\n        };\n        obj.root = rootCondToData(this.root);\n        obj.extraConds = rootCondToData(this.extraConditions);\n        if (this.drillDowns.length > 0) {\n            obj.dds = [];\n            for (let dd of this.drillDowns) {\n                obj.dds.push(dd.toJSONData());\n            }\n        }\n        obj.timezoneOffset = this.timezoneOffset;\n        obj.locale = i18n.getCurrentLocale();\n        return obj;\n    }\n    /**\n     * Checks wether query does not contains any condtion.\n     * @retruns `true` if query does not contain any condition, otherwise `false`.\n     */\n    isEmptyConditions() {\n        return this.root.isEmpty();\n    }\n    /**\n     * Checks wether query does not contains any column.\n     * @retruns `true` if query does not contain any column, otherwise `false`.\n     */\n    isEmptyColumns() {\n        return !this.columns || this.columns.length === 0;\n    }\n    /**\n     * Checks wether query does not contains any column and any condition.\n     * @retruns `true` if query does not contain any column and any condition, otherwise `false`.\n     */\n    isEmpty() {\n        return this.isEmptyColumns() && this.isEmptyConditions();\n    }\n    /**\n     * Clears the query (all conditions, columns, extraData, etc).\n     */\n    clear() {\n        this._enableAggregation = false;\n        this.aggrSettings.clear();\n        this.clearColumns();\n        this.clearConditions();\n        this.clearExtraConditions();\n        this.innerData = {};\n        this.extraData = {};\n    }\n    /**\n     * Clears all columns in query\n     */\n    clearColumns() {\n        this.columns = [];\n        //this.justsorted = [];\n        this.sortedColumns = [];\n    }\n    /**\n     * Clears all conditions in query.\n     */\n    clearConditions() {\n        this.root.clearConditions();\n        this.root.linkType = LinkType.All;\n        this.root.enabled = true;\n    }\n    /**\n     * Clears all extra conditions in query\n     */\n    clearExtraConditions() {\n        this.extraConditions.clearConditions();\n    }\n    /**\n     * Clears all drill downs\n     */\n    clearDrillDowns() {\n        this.drillDowns = [];\n    }\n    /**\n     * Gets query ID.\n     * @returns The ID>\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Sets query ID.\n     * @param id New Query ID.\n     */\n    setId(id) {\n        this.id = id;\n    }\n    /**\n     * Regenerates the query ID.\n     */\n    regenerateId() {\n        this.id = utils.generateId(\"quer\");\n    }\n    /**\n     * Gets name of the query.\n     * @retruns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Sets name of the query\n     * @param name New name.\n     */\n    setName(name) {\n        this.name = name;\n    }\n    /**\n     * Gets description of the query.\n     * @retruns The description.\n     */\n    getDescription() {\n        return this.description;\n    }\n    /**\n     * Sets description of the query\n     * @param description New description.\n     */\n    setDescription(description) {\n        this.description = description;\n    }\n    /**\n     * Get array of columns.\n     * @retruns Columns.\n     */\n    getColumns() {\n        return this.columns;\n    }\n    /**\n     * Gets array of columns that are used as keys\n     * for totals.\n     */\n    getUsedInTotalsColumns() {\n        const aggrs = this.getAggregatedColumns();\n        if (aggrs.length === 0)\n            return [];\n        const cols = this.getColumns()\n            .filter(col => col.enabled && col.expr.tag === ExprTag.EntityAttribute);\n        if (cols.length)\n            cols.pop();\n        return cols;\n    }\n    addColumnToSorted(col) {\n        const colJson = JSON.stringify(col.expr.saveToData());\n        let isUnique = true;\n        this.sortedColumns.forEach(scol => {\n            const qcolJson = JSON.stringify(scol.expr.saveToData());\n            if (qcolJson === colJson) {\n                isUnique = false;\n            }\n        });\n        if (isUnique) {\n            this.sortedColumns.push(col);\n        }\n    }\n    /**\n     * Get array of columns used only in sorting.\n     * @retruns Columns.\n     */\n    getJustSortedColumns() {\n        return this.sortedColumns.filter(col => {\n            return col.isJustSorted();\n        });\n    }\n    /**\n     * Gets array of columns used in sorting\n     * @retruns Columns\n     */\n    getSortedColumns() {\n        return this.sortedColumns;\n    }\n    /**\n     * Gets Colummn sorting index.\n     * @param col The column.\n     * @retruns The index.\n     */\n    getColumnSortIndex(col) {\n        return this.sortedColumns.indexOf(col);\n    }\n    setColumnSortIndex(col, index) {\n        if (index < 0)\n            return;\n        let colIdx = this.getColumnSortIndex(col);\n        if (colIdx < 0) {\n            this.addColumnToSorted(col);\n            colIdx = this.sortedColumns.length - 1;\n        }\n        utils.moveArrayItem(this.sortedColumns, colIdx, index);\n        this.fixupSortingIndices();\n    }\n    getColumnSorting(col) {\n        const idx = this.getColumnSortIndex(col);\n        if (idx >= 0) {\n            return col._sorting != SortDirection.None ? col._sorting : SortDirection.Ascending;\n        }\n        else {\n            return SortDirection.None;\n        }\n    }\n    setColumnSorting(col, direction) {\n        const idx = this.getColumnSortIndex(col);\n        col._sorting = direction;\n        if (idx >= 0) {\n            if (direction == SortDirection.None) {\n                utils.removeArrayItem(this.sortedColumns, col);\n                this.fixupSortingIndices();\n            }\n        }\n        else {\n            if (direction != SortDirection.None) {\n                this.addColumnToSorted(col);\n                this.fixupSortingIndices();\n            }\n        }\n        this.adjustColumnsSorting();\n    }\n    fixupSortingIndices() {\n        this.sortedColumns.forEach((col, index) => {\n            col._sortIndex = index;\n        });\n    }\n    adjustColumnsSorting() {\n        if (!this.syncSortOrderWithColumnsOrder) {\n            return;\n        }\n        if (this.getJustSortedColumns().length > 0) {\n            return;\n        }\n        let idx = 0;\n        this.columns.forEach(col => {\n            if (col.sorting != SortDirection.None) {\n                const colIdx = this.getColumnSortIndex(col);\n                if (colIdx >= 0) {\n                    utils.moveArrayItem(this.sortedColumns, colIdx, idx);\n                    idx++;\n                }\n            }\n        });\n        this.fixupSortingIndices();\n    }\n    createColumn(justsorted = false) {\n        return new QueryColumn(this, justsorted);\n    }\n    getColumnById(id) {\n        return utils.findItemById(this.columns, id);\n    }\n    /**\n     * Adds a new column with specified parameters\n     * @param descriptor The descriptor of the new column. Can contain different parameters like:\n     * `attribute` - a reference to a EntityAttr object,\n     * `attributeId` - an ID of the entity attribute we need (if we don't indicate `attribute`),\n     * `index`, sorting`, 'sortIndex` and other\n     *\n     * @param silent Indicates if we should raise a queryChanged event. If true - the operation will be performed silently, so no event is raised.\n     * @retruns The column.\n     * @example\n     * query.addColumn({\n     *     attributeId: 'Customers.CompanyName',\n     *     sortIndex: SortDirection.Ascending\n     * }});\n     */\n    addColumn(descriptor, silent = false) {\n        let newColumn;\n        const justsorted = descriptor.justsorted || (descriptor.column && descriptor.column.isJustSorted());\n        if (descriptor.column) {\n            newColumn = descriptor.column;\n        }\n        else {\n            newColumn = this.createColumn(descriptor.justsorted);\n            let attr;\n            if (descriptor.attribute) {\n                attr = descriptor.attribute;\n            }\n            else if (descriptor.attributeId) {\n                attr = this.model.getAttributeById(descriptor.attributeId);\n                if (!attr) {\n                    throw new Error(`Incorrect attribute id (${descriptor.attributeId}): addColumn`);\n                }\n            }\n            else if (typeof descriptor.constValue === 'undefined' && !descriptor.customSql) {\n                throw new Error('Not enought data for addColumn operation. One of the following options must be defined: attribute, attributeId, constValue or customSlq');\n            }\n            if (attr) {\n                let checkedOption = justsorted ? attr.useInSorting : attr.useInResult;\n                if (!checkedOption) {\n                    if (attr.lookupAttr) {\n                        attr = this.model.getAttributeById(attr.lookupAttr);\n                        checkedOption = justsorted ? attr.useInSorting : attr.useInResult;\n                    }\n                    if (!checkedOption) {\n                        throw new Error(`Can't use this attribute for a column`);\n                    }\n                }\n            }\n            if (descriptor.aggrFuncId && descriptor.customSql) {\n                console.warn(\"Column cannot be created using aggrFuncId and customSql at the same time. \" +\n                    \"cusomSql will be used.\");\n            }\n            if (typeof descriptor.constValue !== 'undefined') {\n                newColumn.expr.tag = ExprTag.Constant;\n                newColumn.expr.setValue(descriptor.constValue);\n                newColumn.expr.kind = DataKind.Scalar;\n                newColumn.expr.dataType = descriptor.constType || DataType.String;\n            }\n            else if (descriptor.customSql) {\n                newColumn.caption = 'Custom SQL Column';\n                newColumn.expr.tag = ExprTag.CustomSql;\n                newColumn.expr.sql = descriptor.customSql;\n                newColumn.expr.kind = DataKind.Query;\n                newColumn.expr.dataType = DataType.Unknown;\n                newColumn.expr.baseAttrId = descriptor.attributeId;\n                if (!this.context.options.allowCustomExpressions) {\n                    newColumn.enabled = false;\n                }\n            }\n            else if (descriptor.aggrFuncId) {\n                const funcId = descriptor.aggrFuncId;\n                newColumn.expr.tag = ExprTag.AggregateFunction;\n                newColumn.expr.func = descriptor.aggrFuncId;\n                newColumn.expr.kind = DataKind.Scalar;\n                newColumn.expr.dataType = funcId == 'COUNT' || funcId == 'CNTDST' ? 4 : attr.dataType;\n                newColumn.expr.distinct = false;\n                const arg = new Expression(newColumn);\n                arg.setValue(attr.id, true);\n                arg.tag = ExprTag.EntityAttribute;\n                arg.kind = DataKind.Attribute;\n                arg.dataType = attr.dataType;\n                newColumn.expr.args.push(arg);\n            }\n            else {\n                newColumn.expr.setValue(attr.id, true);\n                newColumn.expr.tag = ExprTag.EntityAttribute;\n                newColumn.expr.kind = DataKind.Attribute;\n                newColumn.expr.dataType = attr.dataType;\n                newColumn.params.concat(attr.params);\n            }\n            newColumn.caption = descriptor.caption || this.context.getDefaultColumnCaption(newColumn);\n            newColumn._sorting = descriptor.sorting || SortDirection.None;\n            newColumn._sortIndex = descriptor.sortIndex || -1;\n            newColumn.enabled = utils.getIfDefined(descriptor.enabled, true);\n            newColumn.setReadOnly(utils.getIfDefined(descriptor.readonly, false));\n        }\n        if (!justsorted) {\n            if (descriptor.index && descriptor.index >= 0 && descriptor.index < this.columns.length) {\n                this.columns.splice(descriptor.index, 0, newColumn);\n            }\n            else {\n                this.columns.push(newColumn);\n            }\n        }\n        this.setColumnSorting(newColumn, newColumn._sorting);\n        if (!silent) {\n            this.fireColumnsChangedEvent(QueryChangeAction.Add, newColumn, justsorted);\n        }\n        return newColumn;\n    }\n    /**\n     * Adds a new column with specified index.\n     * @param column The column or array of columns\n     * @param index The index of new column\n     * @param author The author.\n     * @example\n     * const column = new Column();\n     * column.caption = \"Company name\";\n     *\n     * query.addColumnObj(column, 1)\n     */\n    addColumnObj(column, index, author) {\n        let columns = this.columns;\n        if (typeof column.length == \"undefined\") {\n            if (typeof index == \"number\") {\n                columns.splice(index, 0, column);\n            }\n            else {\n                columns.push(column);\n            }\n            if (column.sorting != SortDirection.None) {\n                this.addColumnToSorted(column);\n            }\n            this.fixupSortingIndices();\n        }\n        else {\n            if (typeof index == \"number\") {\n                columns.push.apply(columns, [index, 0].concat(column));\n            }\n            else {\n                columns.push.apply(columns, [].concat(column));\n            }\n            column.forEach(col => {\n                if (col.sorting != SortDirection.None) {\n                    this.addColumnToSorted(col);\n                }\n            });\n            this.fixupSortingIndices();\n        }\n    }\n    /**\n     * Changes column to Aggregate function, custom expression or simple column.\n     * @param column The column to change.\n     * @param tag New column expression tag.\n     * @param args The arguments (Contains aggregate function id)\n     */\n    changeColumnType(column, tag, args) {\n        if (column.isJustSorted())\n            return;\n        args = args || {};\n        if (tag === ExprTag.AggregateFunction) {\n            if (!args.funcId)\n                throw Error('\"funcId\" argument is not defined');\n            if (column.expr.tag == ExprTag.AggregateFunction) {\n                column.expr.func = args.funcId;\n                return;\n            }\n            const expr = new Expression(column);\n            expr.tag = ExprTag.AggregateFunction;\n            expr.func = args.funcId;\n            expr.distinct = false;\n            expr.dataType = args.funcId == 'COUNT' || args.funcId == 'CNTDST' ? 4 : column.expr.dataType;\n            const arg = new Expression(column);\n            arg.loadFromData(this.model, column.expr.saveToData());\n            expr.args.push(arg);\n            column.expr = expr;\n        }\n        else if (tag === ExprTag.CustomSql) {\n            const attrId = (column.expr.tag == ExprTag.AggregateFunction)\n                ? column.expr.args[0].value\n                : column.expr.value;\n            let sqlText = '';\n            if (this.model) {\n                sqlText = this.model.getAttributeById(attrId).expr;\n            }\n            const customSqlExpr = new Expression(column);\n            customSqlExpr.tag = ExprTag.CustomSql;\n            customSqlExpr.dataType = DataType.String; //the default data type\n            customSqlExpr.sql = sqlText;\n            customSqlExpr.baseAttrId = attrId;\n            column.expr = customSqlExpr;\n        }\n        else if (tag === ExprTag.EntityAttribute) {\n            if (column.expr.tag === ExprTag.EntityAttribute\n                || column.expr.tag === ExprTag.ParentEntityAttribute) {\n                return;\n            }\n            const attrId = (column.expr.tag == ExprTag.AggregateFunction)\n                ? column.expr.args[0].value\n                : column.expr.baseAttrId;\n            const attr = attrId\n                ? this.model.getAttributeById(attrId)\n                : this.model.getFirstUICAttr();\n            const expr = new Expression(column);\n            expr.tag = ExprTag.EntityAttribute;\n            expr.dataType = attr.dataType;\n            expr.setValue(attr.id, true);\n            column.expr = expr;\n        }\n        column.caption = this.context.getDefaultColumnCaption(column);\n    }\n    /**\n     * Moves the column with specified index to another position.\n     * @param index1 The index of the column that should be moved.\n     * @param index2 The index of the position the column should be moved to\n     */\n    moveColumn(index1, index2) {\n        const columns = this.getColumns();\n        utils.moveArrayItem(columns, index1, index2);\n        this.adjustColumnsSorting();\n    }\n    /**\n     * Removes a column.\n     * @param column The column to be removed.\n     */\n    removeColumn(column) {\n        utils.removeArrayItem(this.columns, column);\n        utils.removeArrayItem(this.sortedColumns, column);\n    }\n    /**\n     * Adds a condition group - a group of simple conditions (predicates) linked by AND or OR\n     * @param descriptor The descriptor of the new condition group.\n     * @returns The new search condition.\n     */\n    addConditionGroup(descriptor, addChildCondition = true) {\n        console.error(\"Community version doesn't support working with groups.\");\n        return null;\n    }\n    addExtraConditionGroup(descriptor, addChildCondition = true) {\n        console.error(\"Community version doesn't support working with groups.\");\n        return null;\n    }\n    createCondition(tag = CondTag.Simple) {\n        return new Condition(this, tag);\n    }\n    /**\n     *  Adds a new simple condition (a predicate)\n     * @param descriptor The descriptor which defines different parameters of the new condition\n     * @returns The new condition.\n     */\n    addSimpleCondition(descriptor) {\n        let parent = descriptor.parent || this.getRootCondition();\n        let model = this.getModel();\n        if (!model)\n            return null;\n        if (!descriptor.attribute && !descriptor.attributeId) {\n            throw new Error(\"Either `attribute` or `attributeId` parameter must have a value\");\n        }\n        if (!descriptor.attribute) {\n            descriptor.attribute = model.getAttributeById(descriptor.attributeId);\n            if (!descriptor.attribute) {\n                throw new Error(\"Could not find this attribute: \" + descriptor.attributeId);\n            }\n        }\n        if (!descriptor.operator && descriptor.operatorId) {\n            descriptor.operator = model.getOperatorById(descriptor.operatorId);\n        }\n        if (!descriptor.operator) {\n            descriptor.operator = model.getDefaultOperatorForAttr(descriptor.attribute);\n        }\n        let cond = this.createSimpleConditionObject(descriptor.attribute, descriptor.operator, descriptor.value);\n        parent.addCondition(cond);\n        cond.enabled = utils.getIfDefined(descriptor.enabled, true);\n        cond.setReadOnly(utils.getIfDefined(descriptor.readonly, false));\n        return cond;\n    }\n    addSimpleExtraCondition(descriptor) {\n        descriptor.parent = descriptor.parent || this.extraConditions;\n        return this.addSimpleCondition(descriptor);\n    }\n    createSimpleConditionObject(attr, operator, inputValues) {\n        if (!attr || !attr.useInConditions) {\n            let attrCaption = attr ? attr.caption : 'NULL';\n            throw \"Can't add a condition with such attribute: \" + attrCaption;\n        }\n        let cond = this.createCondition(CondTag.Simple);\n        cond.setOperatorId(operator.id, true);\n        let attrExpr = new Expression(cond);\n        attrExpr.setValue(attr.id, true);\n        attrExpr.tag = this.attributeExprTag;\n        attrExpr.kind = DataKind.Attribute;\n        attrExpr.dataType = attr.dataType;\n        cond.expressions.push(attrExpr);\n        let model = this.getModel();\n        const valCount = operator.paramCount;\n        let values = utils.fillArray(new Array(valCount - 1), null);\n        if (inputValues !== null && typeof inputValues !== \"undefined\") {\n            if (Array.isArray(inputValues)) {\n                utils.copyArrayTo(inputValues, values);\n            }\n            else if (valCount > 0) {\n                values[0] = inputValues;\n            }\n        }\n        var valLength = values.length;\n        for (var i = 0; i < valLength; i++) {\n            let operand = model.getOperand(attr, operator, i + 1);\n            cond.addExpressionByOperand(operand, values[i]);\n        }\n        return cond;\n    }\n    /**\n     * Removes several columns passed as array.\n     * @param columnsToRemove The list of columns to be removed.\n     * @param author The author.\n     */\n    removeColumns(columnsToRemove, author) {\n        let justSortedColumns = columnsToRemove.filter(c => c.isJustSorted());\n        let columns = columnsToRemove.filter(c => !c.isJustSorted());\n        function removeFromArray(arr, arrToRemove) {\n            let ctrLen = arrToRemove.length;\n            for (let i = 0; i < ctrLen; i++) {\n                let index = arr.indexOf(arrToRemove[i]);\n                if (index >= 0) {\n                    arr.splice(index, 1);\n                }\n            }\n        }\n        if (columns.length > 0) {\n            removeFromArray(this.getColumns(), columns);\n            removeFromArray(this.sortedColumns, columns);\n        }\n        if (justSortedColumns.length > 0) {\n            //removeFromArray(this.getJustSortedColumns(), justSortedColumns);\n            removeFromArray(this.sortedColumns, justSortedColumns);\n        }\n        this.fixupSortingIndices();\n    }\n    /**\n     * Fires process event.\n     * @param data The data.\n     */\n    fireProcessEvent(data) {\n        this.eventEmitter.fire('query.process', data);\n    }\n    fireChangedEvent(params, postpone, wasModified) {\n        params = params || { part: QueryChangePart.All };\n        if (typeof (postpone) != 'undefined' || typeof (wasModified) != 'undefined') {\n            params.postpone = postpone || 0;\n            params.wasModified = wasModified;\n            console.warn('Method with \\'postpone\\' and \\'wasModified\\' args is deprecated. Pass params in data object');\n        }\n        this._isModified = typeof (params.wasModified) != 'undefined'\n            ? params.wasModified\n            : true;\n        const eventData = params || {\n            part: QueryChangePart.All\n        };\n        this.eventEmitter.fire('query.change', eventData, params.postpone || 0);\n    }\n    fireColumnsChangedEvent(action, column, justsorted = false) {\n        this.fireChangedEvent({\n            part: (justsorted)\n                ? QueryChangePart.SortingColumns\n                : QueryChangePart.Columns,\n            action: action,\n            changee: column\n        });\n    }\n    fireConditionsChangedEvent(action, condition) {\n        this.fireChangedEvent({\n            part: QueryChangePart.Conditions,\n            action: action,\n            changee: condition\n        });\n    }\n    /**\n     * Runs through condition with this callback.\n     * @param processCondition The function to process condition.\n     */\n    runThroughConditions(processCondition) {\n        let processGroup = function (predicate) {\n            for (let i = 0; i < predicate.getConditions().length; i++) {\n                let cond = predicate.getConditions()[i];\n                if (cond.isGroup()) {\n                    processGroup(cond);\n                }\n                else {\n                    if (processCondition)\n                        processCondition(cond);\n                }\n            }\n        };\n        processGroup(this.getRootCondition());\n    }\n    /**\n     * Gets one value for the attribute\n     * @param attrId The attribute ID.\n     * @retruns The value.\n     */\n    getOneValueForAttr(attrId) {\n        let res = null;\n        this.runThroughConditions(function (cond) {\n            if (cond.enabled) {\n                const expr = cond.expressions[0];\n                const opid = cond.getOperatorId();\n                if (expr.value == attrId && cond.expressions[1] &&\n                    (opid == \"Equal\" || opid == \"InList\" || opid == \"StartsWith\")) {\n                    res = cond.expressions[1].value;\n                }\n            }\n        });\n        return res;\n    }\n    /**\n     * Gets root predicate\n     * @retruns The condition.\n     */\n    getRootCondition() {\n        return this.root;\n    }\n    /**\n     * Add process callback\n     * @param callback The callback.\n     * @retruns The callback ID.\n     */\n    addProcessCallback(callback) {\n        return this.eventEmitter.subscribe('query.process', callback);\n    }\n    /**\n     * Remove process callback\n     * @param callbackId The callback ID.\n     */\n    removeProcessCallback(callbackId) {\n        this.eventEmitter.unsubscribe('query.process', callbackId);\n    }\n    /**\n     * Add changed callback\n     * @param callback The callback ID.\n     */\n    addChangedCallback(callback) {\n        return this.eventEmitter.subscribe('query.change', callback);\n    }\n    /**\n     * Remove changed callback\n     * @param callbackId The callback ID.\n     */\n    removeChangedCallback(callbackId) {\n        this.eventEmitter.unsubscribe('query.change', callbackId);\n    }\n    /**\n     * Retruns conditions text\n     */\n    getConditionsText() {\n        const model = this.getModel();\n        if (!model)\n            return '';\n        const getConditionGroupText = (group) => {\n            let result = '', conjKey = \"Conj\" + equtils.linkTypeToStr(group.linkType), conjText = i18n.getText(conjKey), condText, i;\n            for (i = 0; i < group.getConditions().length; i++) {\n                condText = \"\";\n                let cond = group.getConditions()[i];\n                if (cond.enabled || typeof (cond.enabled) === \"undefined\") {\n                    if (cond.isGroup()) {\n                        condText = getConditionGroupText(cond);\n                        if (condText) {\n                            condText = \"(\" + condText + \")\";\n                        }\n                    }\n                    else {\n                        let opId = cond.getOperatorId();\n                        let operator = model.getOperatorById(opId);\n                        let parts = equtils.parseOperatorFormat(operator);\n                        let plen = parts.length;\n                        for (let pi = 0; pi < plen; pi++) {\n                            let part = parts[pi];\n                            let txt = part.text;\n                            if (part.type == \"expression\") {\n                                let expr = cond.expressions[part.index];\n                                if (expr.kind == DataKind.Attribute || expr.tag == ExprTag.EntityAttribute) {\n                                    let attr = model.getAttributeById(expr.value);\n                                    if (attr != null) {\n                                        txt = model.getAttributeText(attr, \"{entity} {attr}\");\n                                    }\n                                }\n                                else {\n                                    txt = expr.getText();\n                                    if (this.model.isDateMacro(txt) || this.model.isTimeMacro(txt)) {\n                                        const macroText = txt.substring(3, txt.length - 2);\n                                        const res = i18n.getText(macroText);\n                                        txt = res || txt;\n                                    }\n                                }\n                            }\n                            if (pi > 0)\n                                condText += \" \";\n                            condText += txt;\n                        }\n                    }\n                }\n                if (condText) {\n                    if (i > 0 && result) {\n                        result += \" \" + conjText + \" \";\n                    }\n                    result += condText;\n                }\n            }\n            if (group.linkType == LinkType.None || group.linkType == LinkType.NotAll) {\n                result = \"not ( \" + result + \" )\";\n            }\n            return result;\n        };\n        return getConditionGroupText(this.getRootCondition());\n    }\n    /**\n    * Retruns conditions text\n    */\n    getConditionsTextAsHtml() {\n        const model = this.getModel();\n        if (!model)\n            return '<div class=\"eqjs-query-text\"></div>';\n        const quoteExprText = (expr) => {\n            if (expr.kind == DataKind.Query) {\n                return `&lt;${expr.getText()}&gt;`;\n            }\n            else if (expr.kind == DataKind.List) {\n                return `[${expr.getText()}]`;\n            }\n            else if (expr.dataType == DataType.String\n                || expr.dataType == DataType.Memo\n                || expr.dataType == DataType.FixedChar) {\n                return `&quot;${expr.getText()}&quot;`;\n            }\n            else {\n                let txt = expr.getText();\n                if (this.model.isDateMacro(txt) || this.model.isTimeMacro(txt)) {\n                    const macroText = txt.substring(3, txt.length - 2);\n                    const res = i18n.getText(macroText);\n                    txt = res || txt;\n                }\n                return txt;\n            }\n        };\n        const getConditionGroupText = (group) => {\n            let result = '', conjKey = \"Conj\" + equtils.linkTypeToStr(group.linkType), conjText = `<span class=\"eqjs-query-text-conj\">${i18n.getText(conjKey)}</span>`, condText, i;\n            for (i = 0; i < group.getConditions().length; i++) {\n                condText = \"\";\n                let cond = group.getConditions()[i];\n                if (cond.enabled || typeof (cond.enabled) === \"undefined\") {\n                    if (cond.isGroup()) {\n                        condText = getConditionGroupText(cond);\n                        if (condText) {\n                            condText = \"(\" + condText + \")\";\n                        }\n                    }\n                    else {\n                        let opId = cond.getOperatorId();\n                        let operator = model.getOperatorById(opId);\n                        let parts = equtils.parseOperatorFormat(operator);\n                        let plen = parts.length;\n                        for (let pi = 0; pi < plen; pi++) {\n                            let part = parts[pi];\n                            let txt = part.text;\n                            if (part.type == \"expression\") {\n                                let expr = cond.expressions[part.index];\n                                if (expr.kind == DataKind.Attribute || expr.tag == ExprTag.EntityAttribute) {\n                                    let attr = model.getAttributeById(expr.value);\n                                    txt = `<span class=\"eqjs-query-text-attr\">${model.getAttributeText(attr, \"{entity} {attr}\")}</span>`;\n                                }\n                                else {\n                                    txt = `<span class=\"eqjs-query-text-expr\">${quoteExprText(expr)}</span>`;\n                                }\n                            }\n                            else if (part.type == \"operator\") {\n                                txt = `<span class=\"eqjs-query-text-op\">${txt}</span>`;\n                            }\n                            if (pi > 0)\n                                condText += \" \";\n                            condText += txt;\n                        }\n                    }\n                }\n                if (condText) {\n                    if (i > 0 && result) {\n                        result += \" \" + conjText + \" \";\n                    }\n                    result += condText;\n                }\n            }\n            if (group.linkType == LinkType.None || group.linkType == LinkType.NotAll) {\n                result = \"<span class=\\\"eqjs-query-text-conj\\\">not</span> ( \" + result + \" )\";\n            }\n            return result;\n        };\n        return `<div class=\"eqjs-query-text\">${getConditionGroupText(this.getRootCondition())}</div>`;\n    }\n    /**\n     * Gets an array of all entities used in the query.\n     */\n    getEntitiesInQuery() {\n        if (this.model.id !== this.id)\n            throw Error('Model mithmatch');\n        const entities = [];\n        const columns = this.getColumns();\n        for (let column of columns) {\n            if (!column.enabled)\n                continue;\n            this.addEntityByExpression(entities, column.expr);\n        }\n        const rootCond = this.getRootCondition();\n        this.fillEntitiesByCondtionGroup(entities, rootCond);\n        return entities;\n    }\n    fillEntitiesByCondtionGroup(entities, root) {\n        for (let condition of root.getConditions()) {\n            if (!condition.isGroup()) {\n                for (let expr of condition.expressions) {\n                    this.addEntityByExpression(entities, expr);\n                    if (expr.args) {\n                        for (let arg of expr.args) {\n                            this.addEntityByExpression(entities, arg);\n                        }\n                    }\n                }\n            }\n            else {\n                this.fillEntitiesByCondtionGroup(entities, condition);\n            }\n        }\n    }\n    addEntityByExpression(entities, expr) {\n        if (expr.tag !== ExprTag.EntityAttribute)\n            return;\n        const attrId = expr.baseAttrId || expr.value;\n        if (attrId) {\n            const attr = this.model.getAttributeById(attrId);\n            if (attr) {\n                if (attr.entity && utils.indexOfArrayItem(entities, attr.entity) < 0) {\n                    entities.push(attr.entity);\n                }\n            }\n        }\n    }\n    /**\n     * Builds and returns the path (actually the tree) between the entities used in the query.\n     */\n    buildQueryPath() {\n        let entity = this.model.getMainEntity() || this.model.rootEntity;\n        const tree = this.createTreeNodeFromEntity(entity);\n        tree.setParents();\n        return tree;\n    }\n    createTreeNodeFromEntity(entity) {\n        let tree = new Tree(entity);\n        for (let subEnentity of entity.subEntities) {\n            tree.addChild(this.createTreeNodeFromEntity(subEnentity));\n        }\n        return tree;\n    }\n}\n\nclass BrowserQueryStorage {\n    constructor(context) {\n        this.context = context;\n        console.warn('BrowserQueryStorage is used for managing queries');\n    }\n    init(options) {\n        let keyPrefix = 'eq';\n        if (options && options.keyPrefix) {\n            keyPrefix = options.keyPrefix;\n        }\n        this.queryListKey = keyPrefix + '-querylist';\n        this.queryKeyPrefix = keyPrefix;\n    }\n    getQueryList(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const itemsString = localStorage.getItem(this.queryListKey);\n                if (itemsString) {\n                    resolve(JSON.parse(itemsString));\n                }\n                resolve([]);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    newQuery(options) {\n        return new Promise((resolve, reject) => {\n            const query = new Query(this.context.getModel(), null, { context: this.context });\n            query.reset();\n            query.setDefaultName();\n            if (options) {\n                if (options.query) {\n                    query.loadFromData(options.query.toJSONData());\n                }\n                if (options.queryId) {\n                    query.setId(options.queryId);\n                }\n                if (options.name) {\n                    query.setName(options.name);\n                }\n                if (options.description) {\n                    query.setDescription(options.description);\n                }\n            }\n            this._saveQuery(query);\n            resolve(query.toJSONData());\n        });\n    }\n    loadQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const queryItem = localStorage.getItem(this.queryKeyPrefix + '-' + options.queryId);\n                if (queryItem) {\n                    resolve(JSON.parse(queryItem));\n                }\n                throw new Error('Query is not found: ' + options.queryId);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    saveQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const modelId = options.modelId || this.context.getModel().getId();\n                const query = options.query || this.context.getQuery();\n                this._saveQuery(query);\n                resolve(null);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    _saveQuery(query) {\n        let queryList = [];\n        const itemsString = localStorage.getItem(this.queryListKey);\n        if (itemsString) {\n            queryList = JSON.parse(itemsString);\n        }\n        let item = utils.findItemById(queryList, query.getId());\n        if (!item) {\n            item = { id: query.getId(), name: query.getName(), text: query.getDescription() };\n            queryList.push(item);\n        }\n        item.name = query.getName();\n        item.text = query.getDescription();\n        localStorage.setItem(this.queryListKey, JSON.stringify(queryList));\n        localStorage.setItem(this.queryKeyPrefix + '-' + query.getId(), query.toJSON());\n    }\n    removeQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const modelId = options.modelId || this.context.getModel().getId();\n                const queryId = options.queryId || this.context.getQuery().getId();\n                let queryList = [];\n                const itemsString = localStorage.getItem(this.queryListKey);\n                if (itemsString) {\n                    queryList = JSON.parse(itemsString);\n                }\n                queryList = queryList.filter(item => item.id != queryId);\n                localStorage.setItem(this.queryListKey, JSON.stringify(queryList));\n                localStorage.removeItem(this.queryKeyPrefix + '-' + queryId);\n                resolve();\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n}\n\nclass EqModelLoader {\n    constructor(context) {\n        this.context = context;\n        this.modelPromise = null;\n    }\n    init(options) {\n    }\n    getContext() {\n        return this.context;\n    }\n    createModelLoadingPromise() {\n        this.modelPromise = new Promise((resolve, reject) => {\n            this.modelLoadingResolveFunc = resolve;\n            this.modelLoadingRejectFunc = reject;\n        });\n    }\n    /**\n     * Returns the `Promise` of the model loading process\n     */\n    getModelPromise() {\n        return this.modelPromise\n            || Promise.reject(new Error(\"Model has been never loaded.\"));\n    }\n    startModelLoading(options) {\n        this.createModelLoadingPromise();\n        this.sendLoadModelRequest(options);\n        return this.modelPromise;\n    }\n}\n\nclass EqServerModelLoader extends EqModelLoader {\n    constructor(context) {\n        super(context);\n    }\n    init() {\n    }\n    sendLoadModelRequest(options) {\n        const context = this.getContext();\n        const http = context.getServices().getHttpClient();\n        const url = context.resolveEndpoint('GetModel', { modelId: options.modelId });\n        http.get(url)\n            .then((responseData) => {\n            if (!responseData.model) {\n                this.modelLoadingRejectFunc(new Error('Wrong response format for \"GetModel\" request'));\n            }\n            this.modelLoadingResolveFunc(responseData.model);\n        })\n            .catch(error => {\n            this.modelLoadingRejectFunc(error);\n        });\n    }\n}\n\nclass EqServerDataFetcher {\n    constructor(context) {\n        this.context = context;\n    }\n    fetchData(fetchOptions) {\n        const query = fetchOptions.query || this.context.getQuery();\n        const queryId = query.getId();\n        let requestData = {\n            'options': fetchOptions.options\n        };\n        if (typeof (fetchOptions.queryId) !== 'undefined') {\n            requestData.queryId = fetchOptions.queryId;\n        }\n        else {\n            requestData.query = query.toJSONData();\n        }\n        if (fetchOptions.debug) {\n            requestData.debug = fetchOptions.debug;\n        }\n        if (fetchOptions.chunk) {\n            requestData.chunk = fetchOptions.chunk;\n        }\n        if (fetchOptions.data) {\n            requestData.data = fetchOptions.data;\n        }\n        if (typeof (fetchOptions.aux) != 'undefined') {\n            requestData.aux = fetchOptions.aux;\n        }\n        const url = this.context.resolveEndpoint('FetchData', { modelId: query.getModel().getId(), queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then(data => data);\n    }\n}\n\nclass EqServerQuerySynchronizer {\n    constructor(context) {\n        this.context = context;\n    }\n    syncQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const ops = options.options || {};\n        let requestData = {\n            'query': query.toJSONData(),\n            'options': ops,\n        };\n        if (options.data) {\n            requestData.data = options.data;\n        }\n        const url = this.context.resolveEndpoint('SyncQuery', { modelId: query.getModel().getId(), queryId: query.getId() });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then(responseData => responseData);\n    }\n}\n\nclass EqServerValueListResolver {\n    constructor(context) {\n        this.context = context;\n    }\n    loadValueList(options) {\n        const modelId = options.modelId || this.context.getModel().getId();\n        const requestData = utils.assign({ modelId: modelId }, options.params);\n        const editorId = requestData.editorId;\n        const http = this.context.getServices().getHttpClient();\n        const url = this.context.resolveEndpoint('GetValueList', { modelId: modelId, listId: editorId });\n        let queryParams = {};\n        if (options && options.params && options.params.queryParams) {\n            queryParams = options.params.queryParams;\n        }\n        return http.get(url, { queryParams: queryParams })\n            .then((responseData) => {\n            if (responseData && responseData.values) {\n                return responseData.values;\n            }\n            else {\n                throw new Error('Wrong response format. No \"values\" property');\n            }\n        });\n    }\n}\n\nclass EqQueryFileLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    getQueryFile(options) {\n        const query = options.query || this.context.getQuery();\n        const url = this.context.resolveEndpoint('GetQueryFile', { modelId: query.getModel().getId(),\n            format: options.format || 'xml' });\n        const http = this.context.getServices().getHttpClient();\n        const actionResult = http.post(url, {\n            query: query.toJSONData()\n        });\n        const request = actionResult.getRequest();\n        return actionResult.then((responseData) => {\n            const blob = new Blob([responseData]);\n            const dispositionHeader = request.getXMLHttpRequest().getResponseHeader(\"Content-Disposition\");\n            let fileName = dispositionHeader\n                ? dispositionHeader.match(/filename=\"(.*)\"/)[1]\n                : 'query.json';\n            if (options.fileName) {\n                fileName = options.fileName\n                    + fileName.substring(fileName.lastIndexOf('.'));\n            }\n            if (window.navigator['msSaveOrOpenBlob']) {\n                // Internet Explorer\n                window.navigator['msSaveOrOpenBlob'](blob, fileName);\n            }\n            else {\n                const a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style.display = \"none\";\n                a.href = window.URL.createObjectURL(blob);\n                a.download = fileName;\n                a.click();\n                window.URL.revokeObjectURL(a.href);\n                document.body.removeChild(a);\n            }\n        });\n    }\n    uploadQueryFile(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const url = this.context.resolveEndpoint('UploadQueryFile', { modelId: query.getModel().getId() });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, options.data, {\n            dataType: 'form-data'\n        })\n            .then(responseData => {\n            return responseData.query;\n        });\n    }\n}\n\nclass EqAggregatesContainer {\n    constructor(context) {\n        this.context = context;\n        this.levels = {};\n    }\n    getAggregateData(level, groupKey) {\n        return new Promise((resolve, reject) => {\n            const processFunc = (data) => {\n                // map values\n                const keyStr = this.groupKeyToStr(groupKey);\n                const value = data.get(keyStr);\n                if (value) {\n                    resolve(value);\n                }\n                else {\n                    reject(`Can't find data for ${keyStr}`);\n                }\n            };\n            const desc = this.getLevelDesc(level, false);\n            if (desc && desc.data) {\n                processFunc(desc.data);\n            }\n            else {\n                desc.receivedCallbacks.push(processFunc);\n            }\n        });\n    }\n    setAggregateData(level, data) {\n        const desc = this.getLevelDesc(level, true);\n        desc.data = data;\n        if (desc.receivedCallbacks) {\n            for (const callback of desc.receivedCallbacks) {\n                callback(desc.data);\n            }\n        }\n        desc.receivedCallbacks = [];\n    }\n    updateAggregateData(level, groupKey, values) {\n        const desc = this.getLevelDesc(level, true);\n        const key = this.groupKeyToStr(groupKey);\n        desc.data.set(key, values);\n    }\n    groupKeyToStr(groupKey) {\n        return JSON.stringify(groupKey);\n    }\n    getLevelDesc(level, createIfNotExists) {\n        let desc = this.levels[level];\n        if (!desc && createIfNotExists) {\n            desc = {\n                receivedCallbacks: [],\n                data: new Map()\n            };\n            this.levels[level] = desc;\n        }\n        return desc;\n    }\n    clear() {\n        this.levels = [];\n    }\n}\nclass DefaultAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        this.aggrs = null;\n    }\n    getAggrContainer() {\n        return this.aggrs;\n    }\n    calculate(options) {\n        console.warn(\"Grand totals and sub totals aggregation calculation can be used in Enterprise version only\");\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        this.aggrs = new EqAggregatesContainer(this.context);\n        const query = this.context.createQuery();\n        query.loadFromData(this.context.getQuery().toJSONData());\n        const settings = this.context.getQuery().getAggregationSettings();\n        const aggrColId = settings.getAggregates().map(a => a.colId);\n        const columns = query.getColumns()\n            .filter(col => aggrColId.indexOf(col.id) < 0);\n        for (let i = 0; i < columns.length; i++) {\n            columns[i].enabled = false;\n        }\n        if (settings.hasGrandTotals()) {\n            this.aggrs.setAggregateData(0, new Map());\n            if (options.resultObtained)\n                options.resultObtained({}, 0);\n        }\n        const groups = settings.getGroups();\n        for (let level = 1; level <= groups.length && level <= options.maxLevel; level++) {\n            this.aggrs.setAggregateData(level, new Map());\n            if (options.resultObtained)\n                options.resultObtained({}, level);\n        }\n        return Promise.resolve();\n    }\n    needRecalculation() {\n        return true;\n    }\n    reset() {\n    }\n}\n\nclass EqServiceProvider {\n    static getInstance() {\n        if (!EqServiceProvider._instance) {\n            EqServiceProvider._instance = new EqServiceProvider();\n        }\n        return EqServiceProvider._instance;\n    }\n    constructor() {\n        this.modelLoader = null;\n        this.queryStorage = null;\n        this.querySynchronizer = null;\n        this.dataFetcher = null;\n        this.valueListResolver = null;\n        this.queryFileLoader = null;\n        this.aggrCalculator = null;\n        this.services = {};\n        this.httpClient = new HttpClient();\n        this.httpClient.defaultHeaders['x-eqjs-version'] = '7.2.0';\n        this.modelResolver = (_) => new DataModel();\n        this.modelStorageResolver = null;\n        this.queryResolver = (context) => new Query(context.getModel(), null, { context: context });\n        this.modelLoaderResolver = (context) => new EqServerModelLoader(context);\n        this.queryStorageResolver = (context) => new BrowserQueryStorage(context);\n        this.querySynchronizerResolver = (context) => new EqServerQuerySynchronizer(context);\n        this.vlrResolver = (context) => new EqServerValueListResolver(context);\n        this.dataFetcherResolver = (context) => new EqServerDataFetcher(context);\n        this.queryFileLoaderResolver = (context) => new EqQueryFileLoader(context);\n        this.aggrCalculatoResolver = (context) => new DefaultAggregatesCalculator(context);\n    }\n    reset() {\n        this.modelStorage = null;\n        this.modelLoader = null;\n        this.queryStorage = null;\n        this.querySynchronizer = null;\n    }\n    getHttpClient() {\n        return this.httpClient;\n    }\n    createDataModel(context) {\n        if (!this.modelResolver) {\n            throw 'Model resolver is not defined';\n        }\n        return this.modelResolver(context);\n    }\n    createQuery(context) {\n        if (!this.queryResolver) {\n            throw 'Query resolver is not defined';\n        }\n        return this.queryResolver(context);\n    }\n    getModelLoader(context) {\n        if (!this.modelLoader) {\n            if (!this.modelLoaderResolver) {\n                throw 'ModelLoaderResolver is not defined';\n            }\n            this.modelLoader = this.modelLoaderResolver(context);\n        }\n        return this.modelLoader;\n    }\n    getModelStorage(context) {\n        if (!this.modelStorage) {\n            if (!this.modelStorageResolver) {\n                throw 'ModelStorageResolver is not defined';\n            }\n            this.modelStorage = this.modelStorageResolver(context);\n        }\n        return this.modelStorage;\n    }\n    getQueryStorage(context) {\n        if (!this.queryStorage) {\n            if (!this.queryStorageResolver) {\n                throw 'QueryStorageResolver is not defined';\n            }\n            this.queryStorage = this.queryStorageResolver(context);\n        }\n        return this.queryStorage;\n    }\n    getQuerySynchronizer(context) {\n        if (!this.querySynchronizer) {\n            if (!this.querySynchronizerResolver) {\n                throw 'QuerySynchronizerResolver is not defined';\n            }\n            this.querySynchronizer = this.querySynchronizerResolver(context);\n        }\n        return this.querySynchronizer;\n    }\n    getDataFetcher(context) {\n        if (!this.dataFetcher) {\n            if (!this.dataFetcherResolver) {\n                throw 'DataFetcherResolver is not defined';\n            }\n            this.dataFetcher = this.dataFetcherResolver(context);\n        }\n        return this.dataFetcher;\n    }\n    getValueListResolver(context) {\n        if (!this.valueListResolver) {\n            if (!this.vlrResolver) {\n                throw 'Resolver for ValueListResolver is not defined';\n            }\n            this.valueListResolver = this.vlrResolver(context);\n        }\n        return this.valueListResolver;\n    }\n    getQueryFileLoader(context) {\n        if (!this.queryFileLoader) {\n            if (!this.queryFileLoaderResolver) {\n                throw 'Resolver for QueryFileLoader is not defined';\n            }\n            this.queryFileLoader = this.queryFileLoaderResolver(context);\n        }\n        return this.queryFileLoader;\n    }\n    getAggregatesCalculator(context) {\n        if (!this.aggrCalculator) {\n            if (!this.aggrCalculatoResolver) {\n                throw 'Resolver for AggregatesCalculator is not defined';\n            }\n            this.aggrCalculator = this.aggrCalculatoResolver(context);\n        }\n        return this.aggrCalculator;\n    }\n    registerDataModelResolver(resolver) {\n        this.modelResolver = resolver;\n    }\n    registerQueryResolver(resolver) {\n        this.queryResolver = resolver;\n    }\n    registerModelLoaderResolver(resolver) {\n        this.modelLoaderResolver = resolver;\n    }\n    registerModelStorageResolver(resolver) {\n        this.modelStorageResolver = resolver;\n    }\n    registerQueryStorageResolver(resolver) {\n        this.queryStorageResolver = resolver;\n    }\n    registerDataFetcherResolver(resolver) {\n        this.dataFetcherResolver = resolver;\n    }\n    registerQuerySyncronizerResolver(resolver) {\n        this.querySynchronizerResolver = resolver;\n    }\n    registerValueListResolver(resolver) {\n        this.vlrResolver = resolver;\n    }\n    registerQueryFileLoaderResolver(resolver) {\n        this.queryFileLoaderResolver = resolver;\n    }\n    registerAggregatesCalculator(resolver) {\n        this.aggrCalculatoResolver = resolver;\n    }\n    registerService(serviceId, serviceResolver) {\n        this.services[serviceId] = serviceResolver;\n    }\n    getService(serviceId) {\n        const serviceResolver = this.services[serviceId];\n        if (serviceResolver) {\n            return serviceResolver();\n        }\n    }\n}\n\n/** Represents groups of widgets. Used to identify widgets */\nvar WidgetGroup;\n(function (WidgetGroup) {\n    /** None widget group. */\n    WidgetGroup[WidgetGroup[\"None\"] = 0] = \"None\";\n    /** The group of widgets responsible for the Model. */\n    WidgetGroup[WidgetGroup[\"Model\"] = 1] = \"Model\";\n    /** The group of widgets responsible for the Query. */\n    WidgetGroup[WidgetGroup[\"Query\"] = 2] = \"Query\";\n    /** The group of widgets responsible for the Result. */\n    WidgetGroup[WidgetGroup[\"Result\"] = 4] = \"Result\";\n    /** The group of widgets responsible for the statement. */\n    WidgetGroup[WidgetGroup[\"Statement\"] = 8] = \"Statement\";\n    /** The group of widgets responsible for tracking Query status. */\n    WidgetGroup[WidgetGroup[\"QueryStatus\"] = 16] = \"QueryStatus\";\n    /** All. */\n    WidgetGroup[WidgetGroup[\"All\"] = 65535] = \"All\";\n})(WidgetGroup || (WidgetGroup = {}));\n\n//possibly move it to the EasyData lib on the next update\nvar EmptyChunk = {\n    offset: 0,\n    limit: 0,\n    needTotal: false\n};\n\nclass EqServerExporter {\n    constructor(context) {\n        this.context = context;\n    }\n    setFormat(format, responseType) {\n        this.format = format;\n        this.responseType = responseType;\n    }\n    export(exportOptions) {\n        exportOptions = exportOptions || {};\n        const http = this.context.getServices().getHttpClient();\n        const format = this.format || \"csv\";\n        const query = exportOptions.query || this.context.getQuery();\n        const modelId = query.getModel().getId();\n        let requestData = {\n            'settings': exportOptions.settings,\n            'chunk': EmptyChunk\n        };\n        if (typeof (exportOptions.queryId) !== 'undefined') {\n            requestData.queryId = exportOptions.queryId;\n        }\n        else {\n            requestData.query = query.toJSONData();\n        }\n        if (exportOptions.data) {\n            requestData.data = exportOptions.data;\n        }\n        if (exportOptions.options) {\n            requestData.options = exportOptions.options;\n        }\n        const url = this.context.resolveEndpoint('ExportResult', { modelId: modelId, format: format });\n        const actionResult = http.post(url, requestData, { responseType: this.responseType });\n        const request = actionResult.getRequest();\n        return actionResult.then((responseData) => {\n            const blob = new Blob([responseData]);\n            const dispositionHeader = request.getXMLHttpRequest().getResponseHeader(\"Content-Disposition\");\n            const filename = dispositionHeader\n                ? dispositionHeader.match(/filename=\"(.*)\"/)[1]\n                : 'export-data.' + format;\n            if (window.navigator['msSaveOrOpenBlob']) {\n                // Internet Explorer\n                window.navigator['msSaveOrOpenBlob'](blob, filename);\n            }\n            else {\n                var a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style.display = \"none\";\n                a.href = window.URL.createObjectURL(blob);\n                a.download = filename;\n                a.click();\n                window.URL.revokeObjectURL(a.href);\n                document.body.removeChild(a);\n            }\n        });\n    }\n}\n\nclass EasyQueryDataLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    loadChunk(chunk) {\n        // We have to refactor page logic in view to make it simplier to integrate \n        // different grids\n        this.dataLoadPromise = new Promise((resolve, reject) => {\n            const fetchOptions = {\n                chunk: chunk,\n                success: (result) => {\n                    const dataTable = new EasyDataTable({\n                        loader: this.context.dataLoader, //TODO: Why not just `this`?\n                        chunkSize: this.context.resultTable.chunkSize\n                    });\n                    const resultSet = result.resultSet;\n                    for (const col of resultSet.cols) {\n                        dataTable.columns.add(col);\n                    }\n                    dataTable.setTotal(result.meta.totalRecords);\n                    for (const row of resultSet.rows) {\n                        dataTable.addRow(row);\n                    }\n                    let totalRecords = 0;\n                    if (result.meta && result.meta.totalRecords) {\n                        totalRecords = result.meta.totalRecords;\n                    }\n                    resolve({\n                        table: dataTable,\n                        total: totalRecords,\n                        hasNext: !chunk.needTotal || chunk.offset + chunk.limit < totalRecords\n                    });\n                },\n                error: (error) => reject(error)\n            };\n            if (this.context.debugMode) {\n                fetchOptions.debug = `Data Chunk. Offset: ${chunk.offset}`;\n            }\n            this.context.fetchDataChunk(fetchOptions);\n        });\n        return this.dataLoadPromise;\n    }\n}\n\nvar EqActionResult;\n(function (EqActionResult) {\n    EqActionResult[EqActionResult[\"Error\"] = 0] = \"Error\";\n    EqActionResult[EqActionResult[\"Success\"] = 1] = \"Success\";\n})(EqActionResult || (EqActionResult = {}));\n\nvar EqAction;\n(function (EqAction) {\n    EqAction[\"LoadModel\"] = \"LoadModel\";\n    EqAction[\"LoadQuery\"] = \"LoadQuery\";\n    EqAction[\"LoadQueryList\"] = \"LoadQueryList\";\n    EqAction[\"NewQuery\"] = \"NewQuery\";\n    EqAction[\"SaveQuery\"] = \"SaveQuery\";\n    EqAction[\"RemoveQuery\"] = \"RemoveQuery\";\n    EqAction[\"SyncQuery\"] = \"SyncQuery\";\n    EqAction[\"FetchData\"] = \"FetchData\";\n    EqAction[\"GetValueList\"] = \"GetValueList\";\n    EqAction[\"ExportResult\"] = \"ExportResult\";\n    EqAction[\"GetQueryFile\"] = \"GetQueryFile\";\n    EqAction[\"UploadQueryFile\"] = \"UploadQueryFile\";\n})(EqAction || (EqAction = {}));\n\n/**\n * Encapsulates all information about EasyQuery components on some webpage\n * and provides some basic operation over those components\n * Each context includes the following main components:\n *  - one data model,\n *  - one query,\n *  - one result set\n *  - several UI widgets.\n */\nclass EqContext {\n    constructor() {\n        this.options = {\n            syncSortOrderWithColumnsOrder: true,\n            attributeFormat: '{entity} {attr}',\n            columnTitleFormat: null //means it will be the same as attributeFormat\n        };\n        this.servicesInitialized = false;\n        this.internalListCache = {};\n        this.loadModelOnStart = true;\n        this.loadQueryOnStart = false;\n        this.useStoredQueryOnFetch = false;\n        this.debugMode = false;\n        this._backendInfo = {\n            type: 'EQN-ANC',\n            subType: 'asp-net-core-razor'\n        };\n        //----------- endpoint processing functions --------------\n        this.endpointVarsRegex = /\\{.*?\\}/g;\n        this.elasticPaging = false;\n        this._predefinedListRequestHandlers = {\n            '_DSDE': (params, onResult) => {\n                const data = this.getModel().getAllDateMacros()\n                    .map(macroId => {\n                    return { id: '${{' + macroId + '}}', text: i18n.getText(macroId) };\n                });\n                onResult(data);\n                return true;\n            },\n            '_DSTE': (params, onResult) => {\n                const data = this.getModel().getAllTimeMacros()\n                    .map(macroId => {\n                    return { id: '${{' + macroId + '}}', text: i18n.getText(macroId) };\n                });\n                onResult(data);\n                return true;\n            }\n        };\n        this._listRequestHandler = (options, onResult) => {\n            if (options == null || !options.listName)\n                return;\n            const query = this.getQuery();\n            const params = utils.assign({ listName: options.listName }, options.editorParams);\n            const reqParams = {};\n            const attrPattern = /@{{(.+?)}}/;\n            for (const prop in params) {\n                if (!params[prop])\n                    continue;\n                let match = params[prop].match(attrPattern);\n                if (match) {\n                    let paramValue = query.getOneValueForAttr(match[1]);\n                    if (!paramValue) {\n                        paramValue = '';\n                    }\n                    reqParams[prop] = params[prop].replace(attrPattern, paramValue);\n                }\n            }\n            const requestParams = {\n                listName: reqParams.listName,\n                editorId: options.editorId,\n                queryParams: reqParams\n            };\n            let list = this.getListFromCache(options);\n            if (list && list.length > 0) {\n                onResult(list);\n                return;\n            }\n            let processed = false;\n            const predefinedHandler = this._predefinedListRequestHandlers[options.editorId];\n            if (predefinedHandler) {\n                processed = predefinedHandler(options, onResult);\n            }\n            if (!processed && this.clientListRequestHandler) {\n                processed = this.clientListRequestHandler(options, onResult);\n            }\n            if (!processed) {\n                this.loadValueList({\n                    params: requestParams,\n                    success: (data) => {\n                        if (data) {\n                            this.addListToCache(options, data);\n                        }\n                        onResult(data);\n                    },\n                    error: (message) => {\n                        onResult(null);\n                    }\n                });\n            }\n        };\n        this.baseEndpoint = 'api/easyquery';\n        this.eqServices = EqServiceProvider.getInstance();\n        this.widgets = new Array();\n        this.eventEmitter = new EventEmitter(this);\n        this.exporters = new Map();\n        this.endpoints = new Map();\n        this.dataLoader = new EasyQueryDataLoader(this);\n        this.resultTable = new EasyDataTable({\n            loader: this.dataLoader,\n            onUpdate: this.onResultTableUpdate.bind(this)\n        });\n        this.resultTable.id = 'ResultTable';\n        this.errorHandlerId = this.addEventListener('error', (context, status) => {\n            status.result = EqActionResult.Error;\n            const msgTitle = status.action ? status.action + ' error' : 'Error';\n            let msgText = status.text ? status.text : '';\n            if (status.sourceError && status.sourceError.message !== msgText) {\n                msgText += '\\n' + status.sourceError;\n            }\n            console.error(msgTitle + ': ' + msgText);\n        });\n    }\n    getServices() {\n        return this.eqServices;\n    }\n    /**\n    * Activates `Enterprise` functionality of the library. Works only with @easyquery/enterprise packag and a proper license key.\n    * @param keyOrInitCallback The license key or a callback wich is called after\n    * loading the license key from the back-end.\n    * If the callback function is called useEnterprise will try to get the license key from {base}/lck endpoint\n    *\n    * @example\n    * context.useEnterprise('license key');\n    * //or\n    * context.useEnterprise(() => {\n    *   //further logic\n    *\tview.init(options);\n    * });\n    */\n    useEnterprise(keyOrInitCallback) {\n        console.warn('This method does nothing and should not be called in the Community version of the library');\n    }\n    registerExporter(format, resolver) {\n        this.exporters.set(format, resolver);\n    }\n    registerServerExporter(format, responseType) {\n        this.registerExporter(format, (context) => {\n            const exporter = new EqServerExporter(context);\n            exporter.setFormat(format, responseType);\n            return exporter;\n        });\n    }\n    getExporter(format) {\n        const resolver = this.exporters.get(format);\n        if (resolver) {\n            return resolver(this);\n        }\n        return null;\n    }\n    getExportFormats() {\n        return Array.from(this.exporters.keys());\n    }\n    addDefaultExporters() {\n        this.registerServerExporter('csv', 'arraybuffer');\n        this.registerServerExporter('excel-html', 'arraybuffer');\n    }\n    resolveEndpoint(endpointKey, options) {\n        options = options || {};\n        let result = this.endpoints.get(endpointKey);\n        if (!result) {\n            throw endpointKey + ' endpoint is not defined';\n        }\n        let matches = result.match(this.endpointVarsRegex);\n        if (matches) {\n            for (let match of matches) {\n                let opt = match.substring(1, match.length - 1);\n                let optVal = options[opt];\n                if (!optVal) {\n                    if (opt == 'modelId') {\n                        optVal = this.getModel().getId();\n                    }\n                    else if (opt == 'queryId') {\n                        optVal = this.getQuery().getId();\n                    }\n                    else {\n                        throw `Parameter [${opt}] is not defined`;\n                    }\n                }\n                result = result.replace(match, optVal);\n            }\n        }\n        return result;\n    }\n    setEndpoint(key, value) {\n        this.endpoints.set(key, value);\n    }\n    setEndpointIfNotExist(key, value) {\n        if (!this.endpoints.has(key))\n            this.endpoints.set(key, value);\n    }\n    setDefaultEndpoints(endpointBase) {\n        this.setEndpointIfNotExist('GetModel', equtils.combinePath(endpointBase, 'models/{modelId}'));\n        this.setEndpointIfNotExist('GetQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('SaveQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('SyncQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}/sync'));\n        this.setEndpointIfNotExist('NewQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries'));\n        this.setEndpointIfNotExist('RemoveQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('GetQueryList', equtils.combinePath(endpointBase, 'models/{modelId}/queries'));\n        this.setEndpointIfNotExist('FetchData', equtils.combinePath(endpointBase, 'models/{modelId}/fetch'));\n        this.setEndpointIfNotExist('GetValueList', equtils.combinePath(endpointBase, 'models/{modelId}/valuelists/{listId}'));\n        this.setEndpointIfNotExist('ExportResult', equtils.combinePath(endpointBase, 'models/{modelId}/export/{format}'));\n        this.setEndpointIfNotExist('GetQueryFile', equtils.combinePath(endpointBase, 'models/{modelId}/getqueryfile/{format}'));\n        this.setEndpointIfNotExist('UploadQueryFile', equtils.combinePath(endpointBase, 'models/{modelId}/uploadqueryfile'));\n    }\n    initStart() {\n        this.servicesInitialized = true;\n    }\n    /**\n     * Initializes the context\n     * @param options\n     */\n    init(options) {\n        if (!this.servicesInitialized)\n            this.initStart();\n        options = options || {};\n        this.setOptions(options);\n        if (typeof (options.debugMode) !== 'undefined') {\n            this.debugMode = options.debugMode;\n        }\n        if (typeof (options.chunkSize) !== 'undefined') {\n            this.resultTable.chunkSize = options.chunkSize;\n        }\n        if (typeof (options.elasticPaging) !== 'undefined') {\n            this.elasticPaging = options.elasticPaging;\n        }\n        if (options.listCache) {\n            this.setExternalListCache(options.listCache);\n        }\n        if (options.locale) {\n            i18n.setCurrentLocale(options.locale);\n        }\n        if (options.localeSettings) {\n            i18n.updateLocaleSettings(options.localeSettings);\n        }\n        if (options.endpoint) {\n            this.baseEndpoint = options.endpoint;\n            console.warn('The `endpoint` option is deprecated.\\n'\n                + 'Please use `context.useEndpoint(endpointURL)` function instead.');\n        }\n        this.setDefaultEndpoints(this.baseEndpoint);\n        if (options.modelStorageResolver) {\n            const eqServices = this.getServices();\n            eqServices.registerModelStorageResolver(options.modelStorageResolver);\n        }\n        this.loadQueryOnStart = false;\n        if (options.loadQueryOnStart) {\n            this.loadQueryOnStart = options.loadQueryOnStart;\n        }\n        this.loadModelOnStart = true;\n        if (typeof options.loadModelOnStart !== 'undefined') {\n            this.loadModelOnStart = options.loadModelOnStart;\n        }\n        if (options.handlers) {\n            if (options.handlers.onInit) {\n                this.addEventListener('ready', options.handlers.onInit);\n            }\n            if (options.handlers.afterLoadModel) {\n                this.addEventListener('loadModel', options.handlers.afterLoadModel);\n            }\n            if (options.handlers.afterLoadQuery) {\n                this.addEventListener('loadQuery', options.handlers.afterLoadQuery);\n            }\n            if (options.handlers.afterSyncQuery) {\n                this.addEventListener('syncQuery', options.handlers.afterSyncQuery);\n            }\n            if (options.handlers.afterFetchData) {\n                this.addEventListener('fetchData', options.handlers.afterFetchData);\n            }\n            if (options.handlers.afterExportResult) {\n                this.addEventListener('exportResult', options.handlers.afterExportResult);\n            }\n            if (options.handlers.onProcessStart) {\n                this.addEventListener('processStart', options.handlers.onProcessStart);\n            }\n            if (options.handlers.onProcessEnd) {\n                this.addEventListener('processEnd', options.handlers.onProcessEnd);\n            }\n            if (options.handlers.onError) {\n                this.removeEventListener('error', this.errorHandlerId);\n                this.addEventListener('error', options.handlers.onError);\n            }\n            if (options.handlers.onListRequest) {\n                this.clientListRequestHandler = options.handlers.onListRequest;\n            }\n            if (options.handlers.beforeLoadModel) {\n                this.beforeLoadModel = options.handlers.beforeLoadModel;\n            }\n            if (options.handlers.beforeLoadQuery) {\n                this.beforeLoadQuery = options.handlers.beforeLoadQuery;\n            }\n            if (options.handlers.beforeSyncQuery) {\n                this.beforeSyncQuery = options.handlers.beforeSyncQuery;\n            }\n            if (options.handlers.beforeFetchData) {\n                this.beforeFetchData = options.handlers.beforeFetchData;\n            }\n            if (options.handlers.beforeExportResult) {\n                this.beforeExportResult = options.handlers.beforeExportResult;\n            }\n        }\n        this.initialQuery = options.initialQuery;\n        this.defaultQueryId = options.defaultQueryId || '';\n        this.defaultModelId = options.defaultModelId || '__default';\n        const modelLoader = this.eqServices.getModelLoader(this);\n        modelLoader.init(options);\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        queryStorage.init(options);\n        if (options.useDefaultExporters !== false) {\n            this.addDefaultExporters();\n        }\n        if (options.serverExporters) {\n            this.exporters.clear();\n            for (const format of options.serverExporters) {\n                this.registerServerExporter(format, \"arraybuffer\");\n            }\n        }\n        const query = this.getQuery();\n        if (options.defaultQueryId) {\n            query.setId(options.defaultQueryId);\n        }\n        //init widgets\n        this.widgets.forEach((widget) => {\n            let widgetOptions = {};\n            if (options.widgets && options.widgets[widget.getWidgetType()]) {\n                widgetOptions = options.widgets[widget.getWidgetType()];\n            }\n            widget.init(this, widgetOptions);\n        });\n        if (this.loadModelOnStart) {\n            this.loadDefaultModel();\n        }\n        else {\n            this.fireEvent('ready');\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    get backendInfo() {\n        return this._backendInfo;\n    }\n    /**\n     * Sets endpoint for all EasyQuery actions. Should be called before `init` and\n     * `useEnterprise` methods\n     * @param endpoint\n     * @example\n     * ```\n     * view.getContext()\n     *     .useEndpoint('/api/easyquery')\n     *     .useEnterprise(function () {\n     *          view.init();\n     *     });\n     * ```\n     */\n    useEndpoint(endpoint) {\n        this.baseEndpoint = endpoint;\n        return this;\n    }\n    /**\n     * Allows to specify the type of backend service.\n     *\n     * @param backendInfo - the structure that contains information about the app used on the backend\n     * Possible values for `ptag` property: 'EQN-ANC' - ASP.NET Core or 'EQN-ASP' - for ASP.NET 4 backend\n     */\n    useBackend(backendInfo) {\n        if (backendInfo.type) {\n            this._backendInfo.type = backendInfo.type;\n        }\n        if (backendInfo.subType) {\n            this._backendInfo.subType = backendInfo.subType;\n        }\n        else {\n            switch (this._backendInfo.type) {\n                case 'EQN-ANC':\n                    this._backendInfo.subType = 'asp-net-core-razor';\n                    break;\n                case 'EQN-ASP':\n                    this._backendInfo.subType = 'asp-net-4-mvc';\n                    break;\n                default:\n                    this._backendInfo.subType = 'other';\n                    break;\n            }\n        }\n        return this;\n    }\n    /**\n     * Add a new widget to the context.\n     * After that the widget will start to receive messages from other context components.\n     * @param widget\n     */\n    addWidget(widget) {\n        this.widgets.push(widget);\n    }\n    /**\n     * Returns all widgets with current type.\n     * @param widgetType The widget type\n     */\n    getAllWidgetsByType(widgetType) {\n        return this.widgets\n            .filter(widget => widget.getWidgetType() === widgetType);\n    }\n    /**\n     * Returns first registerd widget with current type\n     * @param widgetType The widget type\n     */\n    getWidgetByType(widgetType) {\n        const widgets = this.getAllWidgetsByType(widgetType);\n        return widgets.length > 0 ? widgets[0] : null;\n    }\n    /**\n     * This method is called automatically when some change was made either in context's data model or query\n     * @param groups\n     */\n    refreshWidgets(groups = WidgetGroup.All) {\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.refresh();\n            }\n        });\n    }\n    /**\n     * Register a new handler for 'query changed' event\n     * @param callback\n     */\n    addQueryChangedCallback(callback) {\n        this.getQuery().addChangedCallback(callback);\n    }\n    /**\n     * Removes the function from the list of registerd handlers for 'query changed' event\n     * @param callback\n     */\n    removeQueryChangedCallback(callback) {\n        this.getQuery().removeChangedCallback(callback);\n    }\n    /**\n     * Creates a new query object using the current instance of EqServices\n     */\n    createQuery() {\n        return this.eqServices.createQuery(this);\n    }\n    /**\n     * Gets the current query\n     */\n    getQuery() {\n        if (!this.query) {\n            if (!this.servicesInitialized) {\n                throw new Error(\"Can't create query until the context is initialized\");\n            }\n            this.query = this.createQuery();\n        }\n        return this.query;\n    }\n    /**\n     * Gets the current data model\n     */\n    getModel() {\n        if (!this.dataModel) {\n            this.dataModel = this.eqServices.createDataModel(this);\n        }\n        return this.dataModel;\n    }\n    /**\n     * Sets the content of the current data model\n     */\n    loadModelFromData(modelPlainData) {\n        this.getQuery().loadModelData(modelPlainData);\n        this.dataModel = this.getQuery().getModel();\n    }\n    /**\n     * Sets the ID of the default model\n     * @param modelId\n     */\n    setDefaultModelId(modelId) {\n        this.defaultModelId = modelId;\n    }\n    /**\n     * Notifies context components about starting of some long process (e.g. model loading)\n     * This method raises onProcessStart event in the context and all its widgets\n     * @param message\n     * @param groups\n     */\n    startProcess(message, groups) {\n        this.eventEmitter.fire('processStart', message);\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.onProcessStart();\n            }\n        });\n    }\n    /**\n     * Notifies all context components about the finishing of some long process\n     * @param status\n     * @param groups\n     */\n    endProcess(status, groups) {\n        this.eventEmitter.fire('processEnd', status);\n        if (status.result === EqActionResult.Error) {\n            this.throwError(status);\n        }\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.onProcessEnd();\n            }\n        });\n    }\n    /**\n     * Throws the error passed in the function parameter.\n     * If onError event handler is defined - we call that method.\n     * Otherwise - just place the error message to the browser console.\n     * @param status an instance of ActionStatus inteface that represents the action on which the error occurred\n     */\n    throwError(status) {\n        status.result = EqActionResult.Error;\n        this.eventEmitter.fire('error', status);\n    }\n    /**\n     * If `defaultModelId` property is define - this method calls `loadModel` function in the broker\n     * to load the model with such ID.\n     */\n    loadDefaultModel() {\n        this.loadModel({\n            modelId: this.defaultModelId,\n            silent: true,\n            success: () => {\n                this.refreshWidgets(WidgetGroup.Model);\n                let query = this.getQuery();\n                this.fireEvent('initialModelLoad');\n                if (this.initialQuery) {\n                    query.loadFromData(this.initialQuery, {\n                        changeStatus: false\n                    });\n                }\n                if (this.loadQueryOnStart) {\n                    this.loadQuery({\n                        queryId: this.defaultQueryId,\n                        modelId: this.defaultModelId,\n                        success: () => {\n                            this.refreshWidgets(WidgetGroup.Query);\n                            //if we load query on start - then we should call 'ready' event only after its successful loading\n                            this.fireEvent('ready');\n                        }\n                    });\n                }\n                else {\n                    this.refreshWidgets(WidgetGroup.Query);\n                    this.fireEvent('ready');\n                }\n            }\n        });\n    }\n    /**\n     * Clears the content of the current query\n     */\n    clearQuery() {\n        const query = this.getQuery();\n        query.clear();\n        query.fireChangedEvent({\n            part: QueryChangePart.All\n        });\n    }\n    /**\n     * Clears all query results (the data set and the statement, if any)\n     */\n    clearResult() {\n        this.resultTable.clear(); // do not set resultTable to null. Just clear\n        this.resultStatement = null;\n        this.resultContent = null;\n    }\n    /**\n     * Sets the external 'list cache' provider - an object which implements `ExternalListCache` inteface\n     * @param cache\n     */\n    setExternalListCache(cache) {\n        this.externalListCache = cache;\n    }\n    getListFromCache(params) {\n        const key = this.getListCacheKey(params);\n        if (this.externalListCache) {\n            return this.externalListCache.get(key);\n        }\n        else {\n            return this.internalListCache[key];\n        }\n    }\n    getListCacheKey(params) {\n        let key = params.listName == 'SQL' ? 'SQL_' + params.editorId : params.listName;\n        if (params.queryParams) {\n            key += '_' + Object.keys(params.queryParams).filter(k => k != 'listName')\n                .map(k => params.queryParams[k])\n                .join('_');\n        }\n        return key;\n    }\n    addListToCache(params, list) {\n        const key = this.getListCacheKey(params);\n        if (this.externalListCache) {\n            this.externalListCache.set(key, list);\n        }\n        else {\n            this.internalListCache[key] = list;\n        }\n    }\n    /**\n     * Clears the current list cache.\n     */\n    resetListCache() {\n        if (this.externalListCache) {\n            this.externalListCache.clear();\n        }\n        else {\n            this.internalListCache = {};\n        }\n    }\n    /**\n     * Gets the handler for 'GetList' requests\n     */\n    getListRequestHandler() {\n        return this._listRequestHandler;\n    }\n    /**\n     * Adds the translations of the EasyQuery messages for some locale\n     * @param locale - the ISO code of the locale (like `en` or `uk`)\n     * @param localeInfo - Locale settings and translations of EasyQuery texts and messages.\n     * We expected an object with the struture of LocaleInfo interface here.\n     */\n    addLocale(locale, localeInfo) {\n        i18n.addLocale(locale, localeInfo);\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, (event) => handler(this, event.data));\n    }\n    /**\n     * Remove event handler for event type .\n     * @param eventType The event type.\n     * @param handlerId The handler id.\n     */\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    fireEvent(eventType, data) {\n        this.eventEmitter.fire(eventType, data);\n    }\n    getBaseEndpoint() {\n        return this.baseEndpoint;\n    }\n    /**\n     * Sends a `loadValueList` requesthe server and processes the response.\n     * @param options A map of options to pass to `loadValueList` function.\n     */\n    loadValueList(options) {\n        options = options || {};\n        this.startProcess({\n            action: EqAction.GetValueList,\n            text: 'Loading values'\n        }, WidgetGroup.Result);\n        const valueListResolver = this.eqServices.getValueListResolver(this);\n        valueListResolver.loadValueList(options)\n            .then((values) => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.GetValueList,\n                text: 'Values loaded'\n            }, WidgetGroup.Result);\n            if (options.success) {\n                options.success(values);\n            }\n        })\n            .catch((error) => {\n            const editorId = options && options.params ? options.params.editorId : 'undefined';\n            const errorMessage = `Can't load the value list for editor ${editorId}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.GetValueList,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Result);\n            if (options.error) {\n                options.error(errorMessage, 'GetValueList');\n            }\n        });\n    }\n    /**\n     * Starts the process of the model loading.\n     * This method can initiate a request to EasyQueryServer backend or get the model from OData or GraphQL endpoint\n     * The content of the `options` parameter depends on concrete loader implementation.\n     * @param options A map of options to pass to `loadModel` function (can be ommited)\n     * @example\n     * context.loadModel()\n     *    .then(model => {\n     *       alert(\"Model loaded!\");\n     *    });\n     */\n    loadModel(options) {\n        if (this.beforeLoadModel) {\n            this.beforeLoadModel(this, options);\n        }\n        const modelId = options.modelId || '__default';\n        const silent = options.silent || false;\n        this.startProcess({\n            action: EqAction.LoadModel,\n            text: 'Loading model: ' + modelId\n        }, WidgetGroup.Model);\n        const modelLoader = this.eqServices.getModelLoader(this);\n        return modelLoader.startModelLoading(options)\n            .then((value) => {\n            if (value) {\n                this.loadModelFromData(value);\n                if (this.dataModel.isEmpty()) {\n                    console.warn(`Empty model has been loaded. Model ID: ${this.dataModel.getId()}`);\n                }\n            }\n            else {\n                console.warn('Model has not been changed.');\n            }\n            this.fireEvent('loadModel');\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.LoadModel,\n                text: 'Model loaded: ' + modelId\n            }, WidgetGroup.Model);\n            if (!silent) {\n                this.clearQuery();\n                this.clearResult();\n                this.refreshWidgets();\n            }\n            if (options.success) {\n                options.success(this.getModel());\n            }\n            return this.getModel();\n        })\n            .catch(error => {\n            const errorMessage = `Can't load model ${modelId}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.LoadModel,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Model);\n            if (options.error) {\n                options.error(errorMessage, \"LoadModel\");\n            }\n            return this.getModel();\n        });\n    }\n    callWhenModelLoaded(callFunc) {\n        const modelLoader = this.eqServices.getModelLoader(this);\n        modelLoader.getModelPromise().then(() => {\n            callFunc();\n        });\n    }\n    /**\n     * Loads the query\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks and `queryId` property of the query to load.\n     * @example\n     * context.loadQuery({\n     *      queryId: \"query-id\"\n     * });\n     */\n    loadQuery(options) {\n        options = options || {};\n        const modelLoader = this.eqServices.getModelLoader(this);\n        this.clearResult();\n        modelLoader.getModelPromise()\n            .then(() => {\n            options = options || {};\n            const queryId = options.queryId;\n            const silent = options.silent || false;\n            if (this.beforeLoadQuery) {\n                this.beforeLoadQuery(this, options);\n            }\n            this.startProcess({\n                action: EqAction.LoadQuery,\n                text: \"Query loading: \" + queryId\n            }, WidgetGroup.Query);\n            const queryStorage = this.eqServices.getQueryStorage(this);\n            queryStorage.loadQuery(options)\n                .then((data) => {\n                if (data) {\n                    this.query.loadFromData(data, {\n                        validate: false\n                    });\n                }\n                this.limitCustomSqlColumns();\n                this.fireEvent('loadQuery');\n                this.endProcess({\n                    result: EqActionResult.Success,\n                    action: EqAction.LoadQuery,\n                    text: 'Query loaded: ' + queryId\n                }, WidgetGroup.Query);\n                this.query.resetModified();\n                if (!silent) {\n                    this.query.fireChangedEvent({\n                        part: QueryChangePart.Properties,\n                        wasModified: this.query.isModified()\n                    });\n                    this.refreshWidgets();\n                }\n                if (options.success) {\n                    options.success(this.query);\n                }\n            })\n                .catch((error) => {\n                const query = this.getQuery();\n                error.message = \"Can't load query [\" + query.getId() + \"]\\n\" + (error.message || \"\");\n                if (options.error) {\n                    options.error(error.message, EqAction.LoadQuery);\n                }\n                this.endProcess({\n                    result: EqActionResult.Error,\n                    action: EqAction.LoadQuery,\n                    text: error.message,\n                    sourceError: error\n                }, WidgetGroup.Query);\n            });\n        })\n            .catch((error) => {\n            console.error(error);\n        });\n    }\n    /**\n     * Loads the list of queries available for the current user.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks\n     */\n    loadQueryList(options) {\n        const modelLoader = this.eqServices.getModelLoader(this);\n        modelLoader.getModelPromise()\n            .then(() => {\n            this.startQueryListLoading(options);\n        })\n            .catch((error) => {\n            const errorMessage = `Can't load the list of available queries.\\n ${error.message}`;\n            this.throwError({\n                action: EqAction.LoadQueryList,\n                text: errorMessage,\n                sourceError: error\n            });\n        });\n    }\n    startQueryListLoading(options) {\n        options = options || {};\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        const queryListLoadingPromise = queryStorage.getQueryList(options);\n        queryListLoadingPromise\n            .then((queries) => {\n            if (options.success) {\n                options.success(queries);\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't load the list of available queries.\\n ${error.message}`;\n            if (options.error) {\n                options.error(errorMessage, 'LoadQueryList');\n            }\n            else {\n                this.throwError({\n                    action: EqAction.LoadQueryList,\n                    text: errorMessage,\n                    sourceError: error\n                });\n            }\n        });\n    }\n    /**\n     * Creates a new query and returns its content back to the client-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks and `silent` option\n     * @example\n     * context.newQuery({\n     *    silent: true\n     * });\n     */\n    newQuery(options) {\n        options = options || {};\n        const clearQuery = typeof options.clearQuery !== 'undefined' ? options.clearQuery : true;\n        this.query.reset(clearQuery);\n        if (options.queryId) {\n            this.query.setId(options.queryId);\n        }\n        if (options.name) {\n            this.query.setName(options.name);\n        }\n        if (options.description) {\n            this.query.setDescription(options.description);\n        }\n        const silent = options.silent || false;\n        let useStorage = true;\n        if (typeof options.useStorage !== 'undefined') {\n            useStorage = options.useStorage;\n        }\n        const onNewQuery = () => {\n            const query = this.getQuery();\n            query.isNewbie = true;\n            if (!silent) {\n                query.fireChangedEvent({\n                    part: QueryChangePart.All,\n                    wasModified: query.isModified()\n                });\n            }\n        };\n        if (useStorage) {\n            this.startProcess({\n                action: EqAction.NewQuery,\n                text: 'New query creation...'\n            }, WidgetGroup.Query);\n            const queryStorage = this.eqServices.getQueryStorage(this);\n            queryStorage.newQuery(options)\n                .then((queryData) => {\n                if (queryData) {\n                    this.query.loadFromData(queryData);\n                }\n                this.endProcess({\n                    result: EqActionResult.Success,\n                    action: EqAction.NewQuery,\n                    text: 'A new query has been created'\n                }, WidgetGroup.Query);\n                onNewQuery();\n                if (options.success) {\n                    options.success();\n                }\n            })\n                .catch((error) => {\n                const errorMessage = `Can't create a new query.\\n${error.message}`;\n                this.endProcess({\n                    result: EqActionResult.Error,\n                    action: EqAction.NewQuery,\n                    text: errorMessage,\n                    sourceError: error\n                }, WidgetGroup.Query);\n                if (options.error) {\n                    options.error(errorMessage, \"NewQuery\");\n                }\n            });\n        }\n        else {\n            onNewQuery();\n        }\n        return this.query;\n    }\n    /**\n     * Saves the current query to some storage on the server-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    saveQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.SaveQuery,\n            text: 'Query saving: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        queryStorage.saveQuery(options)\n            .then((data) => {\n            this.endProcess({\n                action: EqAction.SaveQuery,\n                result: EqActionResult.Success,\n                text: \"Query saved: \" + query.getId()\n            }, WidgetGroup.Query);\n            if (data) {\n                query.loadFromData(data);\n            }\n            query.resetModified();\n            query.isNewbie = false;\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't save query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                action: EqAction.SaveQuery,\n                result: EqActionResult.Error,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, EqAction.SaveQuery);\n            }\n        });\n    }\n    /**\n     * Removes the current query from some storage on the server-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    removeQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.RemoveQuery,\n            text: 'Query deleting: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        queryStorage.removeQuery(options)\n            .then(() => {\n            query.reset();\n            this.endProcess({\n                action: EqAction.RemoveQuery,\n                result: EqActionResult.Success,\n                text: \"Query deleted: \" + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't remove query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                action: EqAction.RemoveQuery,\n                result: EqActionResult.Error,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'RemoveQuery');\n            }\n        });\n    }\n    /**\n     * Syncronizes the current query.\n     * @param options\n     * The content of the `options` parameter depends on `QuerySyncronizer` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    syncQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        if (this.beforeSyncQuery) {\n            this.beforeSyncQuery(this, options);\n        }\n        this.startProcess({\n            action: EqAction.SyncQuery,\n            text: 'Query syncing: ' + query.getId()\n        }, WidgetGroup.Query);\n        const querySyncrhonizer = this.eqServices.getQuerySynchronizer(this);\n        querySyncrhonizer.syncQuery(options)\n            .then((result) => {\n            this.resultStatement = result && result.statement\n                ? result.statement\n                : '';\n            this.fireEvent('syncQuery');\n            this.refreshWidgets(WidgetGroup.Statement);\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.SyncQuery,\n                text: 'Query synced: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (result) {\n                if (result.querySaved) {\n                    const q = result.query;\n                    if (q) {\n                        query.setId(q.id);\n                        query.setName(q.name);\n                        query.setDescription(q.desc);\n                        query.extraData = q.extraData;\n                    }\n                    query.resetModified();\n                    this.refreshWidgets(WidgetGroup.QueryStatus);\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't synchronize query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.SyncQuery,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'SyncQuery');\n            }\n        });\n    }\n    /**\n     * Fetches the data (usuall by executing current query) and processes the result.\n     * @param options\n     * The `options` parameter in addition to the options defined in FetchDataOptions structure may also contain `success` and `error` callbacks.\n     * @example\n     * context.fetchData({ success: function(result) {\n     *   //do whatever you want with the result\n     * }})\n     *\n     */\n    fetchData(options) {\n        options = options || {};\n        const elasticPaging = typeof (options.elasticPaging) !== 'undefined'\n            ? options.elasticPaging\n            : this.elasticPaging;\n        this.resultTable.elasticChunks = elasticPaging;\n        options.chunk = options.chunk ||\n            {\n                offset: 0,\n                limit: this.resultTable.chunkSize,\n                needTotal: !elasticPaging\n            };\n        if (this.debugMode) {\n            options.debug = 'Fetching the result set. Initial chunk';\n        }\n        if (!this.query.tryValidate({\n            checkExpressions: true\n        })) {\n            return;\n        }\n        //just to support the old way of catching \"group fetch\" operation finish\n        if (options.groupFetchSuccess) {\n            this.afterGroupFetch = options.groupFetchSuccess;\n        }\n        if (this.resultTable.elasticChunks) {\n            options.chunk.limit++;\n        }\n        this.fetchDataChunk(Object.assign(Object.assign({}, options), { success: (result) => {\n                if (result.statement) {\n                    this.resultStatement = result.statement;\n                    this.refreshWidgets(WidgetGroup.Statement);\n                }\n                const aggrCalculator = this.getServices().getAggregatesCalculator(this);\n                aggrCalculator.reset();\n                this.resultContent = result;\n                if (result.resultSet) {\n                    this.resultTable.clear();\n                    this.resultTable.id = this.query.getId();\n                    const resultSet = result.resultSet;\n                    for (const col of resultSet.cols) {\n                        this.resultTable.columns.add(col);\n                    }\n                    if (result.meta && typeof (result.meta.totalRecords) !== 'undefined') {\n                        this.resultTable.setTotal(result.meta.totalRecords);\n                    }\n                    const count = resultSet.rows.length;\n                    if (this.resultTable.elasticChunks && count === options.chunk.limit) {\n                        resultSet.rows.splice(resultSet.rows.length - 1, 1);\n                    }\n                    for (const row of resultSet.rows) {\n                        this.resultTable.addRow(row);\n                    }\n                    if (this.resultTable.elasticChunks) {\n                        this.resultTable['total'] = (count < options.chunk.limit)\n                            ? resultSet.rows.length\n                            : 0;\n                    }\n                    this.resultTable.fireUpdated();\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            } }));\n    }\n    getQueryFile(options) {\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.GetQueryFile,\n            text: 'Getting query file: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryFileLoader = this.getServices().getQueryFileLoader(this);\n        queryFileLoader.getQueryFile(options)\n            .then(() => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.GetQueryFile,\n                text: 'Getting query file: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch(error => {\n            const errorMessage = `Can't get file for query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.GetQueryFile,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'GetQueryFile');\n            }\n        });\n    }\n    uploadQueryFile(options) {\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.UploadQueryFile,\n            text: 'Uploading query file: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryFileLoader = this.getServices().getQueryFileLoader(this);\n        queryFileLoader.uploadQueryFile(options)\n            .then((data) => {\n            query.loadFromData(data);\n            this.fireEvent('loadQuery');\n            this.refreshWidgets();\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.UploadQueryFile,\n                text: 'Uploading query file: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch(error => {\n            const errorMessage = `Can't upload a file for query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.UploadQueryFile,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'UploadQueryFile');\n            }\n        });\n    }\n    fetchDataChunk(options) {\n        const queryId = this.getQuery().getId();\n        let fetchOptions = options || {};\n        if (this.useStoredQueryOnFetch) {\n            fetchOptions.queryId = this.query.getId();\n        }\n        if (this.beforeFetchData) {\n            this.beforeFetchData(this, fetchOptions);\n        }\n        this.startProcess({\n            action: EqAction.FetchData,\n            text: 'Fetching data for the query: ' + queryId\n        }, WidgetGroup.Result);\n        const dataFetcher = this.eqServices.getDataFetcher(this);\n        dataFetcher.fetchData(fetchOptions)\n            .then((result) => {\n            if (result.statement) {\n                this.resultStatement = result.statement;\n            }\n            this.resultContent = result;\n            // we need to call success callback before firing fetchData,\n            // because otherwise, it won't update the result table \n            // in the context before afterFetchData callback is called.\n            if (fetchOptions.success) {\n                fetchOptions.success(result);\n            }\n            this.fireEvent('fetchData');\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.FetchData,\n                text: 'Data fetching is finished for the query: ' + queryId\n            }, WidgetGroup.Result);\n        })\n            .catch((error) => {\n            const errorMessage = `Data fetching error for the query ${queryId}. \\n${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.FetchData,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Result);\n            if (fetchOptions.error) {\n                fetchOptions.error(errorMessage, EqAction.FetchData);\n            }\n        });\n    }\n    onResultTableUpdate() {\n        const aggrSettings = this.query.getAggregationSettings();\n        const calculator = this.getServices().getAggregatesCalculator(this);\n        if (aggrSettings.needAggrCalculation() && calculator.needRecalculation()) {\n            calculator.calculate({\n                maxLevel: aggrSettings.getGroups().length + 1,\n                resultObtained: (result, level) => {\n                    if (this.afterGroupFetch) {\n                        this.afterGroupFetch(result);\n                    }\n                },\n                errorOccurred: error => {\n                    const errorMessage = `Data fetching error on group level ${error.level} query. \\n${error.message}`;\n                    this.throwError({\n                        action: EqAction.FetchData,\n                        text: errorMessage,\n                        sourceError: error\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Fetches the data for a drill-down query (if defined) and processes the result.\n     * @param options\n     */\n    fetchDrillDownData(options) {\n        options = options || {};\n        options.chunk = options.chunk ||\n            {\n                offset: 0,\n                limit: this.resultTable.chunkSize,\n                needTotal: true\n            };\n        const query = options.query;\n        const queryId = query.getId();\n        this.startProcess({\n            action: EqAction.FetchData,\n            text: 'DrillDown executing: ' + queryId\n        }, WidgetGroup.Result);\n        const queryExecutor = this.eqServices.getDataFetcher(this);\n        queryExecutor.fetchData(options)\n            .then((result) => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.FetchData,\n                text: 'DrillDown execution error: ' + queryId\n            }, WidgetGroup.Result);\n            if (options.success) {\n                options.success(result);\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Drill-down data fetching error for query ${queryId}. \\n${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.FetchData,\n                text: errorMessage,\n            }, WidgetGroup.Result);\n            if (options.error) {\n                options.error(errorMessage, 'DrillDown');\n            }\n            else {\n                this.throwError({\n                    action: EqAction.FetchData,\n                    text: errorMessage\n                });\n            }\n        });\n    }\n    /**\n     * Fetches the data for defined by this context and exports them to the specified format.\n     * @param options\n     * The content of the `options` parameter depends on `EqExporter` implementation.\n     * Usually it contains `format` property which defines the format of the exported data (e.g. `csv`),\n     * and `success` and `error` callbacks\n     * @example\n     * context.exportResult({\n     *      format: csv\n     * });\n     *\n     */\n    exportResult(options) {\n        options = options || {};\n        options.chunk = options.chunk || EmptyChunk;\n        if (this.beforeExportResult) {\n            this.beforeExportResult(this, options);\n        }\n        const format = options.format;\n        if (format) {\n            const exporter = this.getExporter(format);\n            if (exporter) {\n                const queryId = this.getQuery().getId();\n                if (this.useStoredQueryOnFetch) {\n                    options.queryId = queryId;\n                }\n                this.startProcess({\n                    action: EqAction.ExportResult,\n                    text: 'Exporting result for query: ' + queryId\n                }, WidgetGroup.Result);\n                const localeSettings = i18n.getLocaleSettings();\n                options.settings = localeSettings;\n                const aggrSettings = this.query.getAggregationSettings();\n                if (aggrSettings.hasAggregates()\n                    && (aggrSettings.hasGrandTotals() || aggrSettings.hasGroups())) {\n                    options.aggregates = aggrSettings.saveToData();\n                }\n                exporter.export(options)\n                    .then((result) => {\n                    this.fireEvent('exportResult');\n                    this.endProcess({\n                        result: EqActionResult.Success,\n                        action: EqAction.ExportResult,\n                        text: `The result set for query [${queryId}] has been successfully exported`\n                    }, WidgetGroup.Result);\n                    if (options.success) {\n                        options.success();\n                    }\n                })\n                    .catch((error) => {\n                    const errorMessage = `Error on exporting data for query  ${queryId}. \\n${error.message}`;\n                    this.endProcess({\n                        result: EqActionResult.Error,\n                        action: EqAction.ExportResult,\n                        text: errorMessage,\n                        sourceError: error\n                    }, WidgetGroup.Result);\n                    if (options.error) {\n                        options.error(errorMessage, 'ExportResult');\n                    }\n                });\n            }\n        }\n    }\n    limitCustomSqlColumns() {\n        if (!this.options.allowCustomExpressions) {\n            this.query.getColumns().forEach(col => {\n                if (col.expr.tag === ExprTag.CustomSql) {\n                    col.enabled = false;\n                }\n            });\n        }\n    }\n    getAttributeTitle(attr) {\n        const format = this.options.attributeFormat;\n        return this.getModel().getAttributeText(attr, format);\n    }\n    getColumnTitle(attr) {\n        const format = this.options.columnTitleFormat || this.options.attributeFormat;\n        return this.getModel().getAttributeText(attr, format);\n    }\n    getDefaultColumnCaption(column) {\n        let attr;\n        const model = this.getModel();\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return \"Contant Column\";\n            case ExprTag.CustomSql:\n                return \"SQL Column\";\n            case ExprTag.ParentColumn:\n                return \"Parent Column\";\n            case ExprTag.Query:\n                return \"Query Column\";\n            case ExprTag.EntityAttribute:\n            case ExprTag.ParentEntityAttribute:\n                attr = model.getAttributeById(column.expr.value);\n                return this.getColumnTitle(attr);\n            case ExprTag.AggregateFunction:\n                attr = model.getAttributeById(column.expr.args[0].value);\n                return this.getColumnTitle(attr) + ' ' + model.getAggrFunctionCaption(column.expr.func);\n            default:\n                return 'Column';\n        }\n    }\n}\n\nlet eqContextResolver;\nfunction registerEqContextResolver(resolver) {\n    eqContextResolver = resolver;\n}\nfunction createEqContext() {\n    if (!eqContextResolver) {\n        throw Error('No context resolver');\n    }\n    return eqContextResolver();\n}\n\nregisterEqContextResolver(() => new EqContext());\n\nvar eqconsts;\n(function (eqconsts) {\n    /**\n     * Defines some commonly used constants\n     */\n    class ConstLists {\n        constructor() {\n            /**\n             * Contains macros for the special dates (like Today, First day of the month, etc)\n             */\n            this.SpecDateValues = [\n                { id: '${Today}', key: 'Today', isDefault: true },\n                { id: '${Yesterday}', key: 'Yesterday' },\n                { id: '${Tomorrow}', key: 'Tomorrow' },\n                { id: '${FirstDayOfMonth}', key: 'FirstDayOfMonth' },\n                { id: '${FirstDayOfYear}', key: 'FirstDayOfYear' }\n            ];\n            /**\n             * Contains macros for the special times (like Now, Noon, etc)\n             */\n            this.SpecTimeValues = [\n                { id: '${Now}', key: 'Now', isDefault: true },\n                { id: '${HourStart}', key: 'HourStart' },\n                { id: '${Midnight}', key: 'Midnight' },\n                { id: '${Noon}', key: 'Noon' }\n            ];\n            /**\n             * Boolean values macros (true and false)\n             */\n            this.BooleanValues = [\n                { id: '${false}', key: 'False' },\n                { id: '${true}', key: 'True', isDefault: true }\n            ];\n        }\n    }\n    /**\n     * Contains some constants (macros) with special date/time and boolean values.\n     */\n    eqconsts.constLists = new ConstLists();\n    /**\n     * Constants representing various types of relationships between conditions\n     */\n    eqconsts.predicateLinkTypeList = [\n        { id: 'All', key: 'LinkTypeAll' },\n        { id: 'Any', key: 'LinkTypeAny' },\n        { id: 'None', key: 'LinkTypeNone' },\n        { id: 'NotAll', key: 'LinkTypeNotAll' }\n    ];\n})(eqconsts || (eqconsts = {}));\n\n/**\n * Represents Google data table class\n */\nclass GoogleDataConverter {\n    /**\n     * The default constructor.\n     * @param data The table instance or its JSON representation.\n     */\n    constructor(data) {\n        if (!data) {\n            data = {\n                cols: [],\n                rows: []\n            };\n        }\n        if (typeof data === \"string\") {\n            this.loadFromJSON(data);\n        }\n        else {\n            this.tableObj = data;\n        }\n    }\n    /**\n     * Loads data table from JSON.\n     * @param json The JSON representation.\n     */\n    loadFromJSON(json) {\n        this.tableObj = JSON.parse(json);\n    }\n    /**\n     * Saves data table to JSON.\n     * @returns The JSON representation.\n     */\n    toJSON() {\n        return JSON.stringify(this.tableObj);\n    }\n    /**\n     * Gets the google data table object.\n     * @returns The data table.\n     */\n    getObject() {\n        return this.tableObj;\n    }\n    /**\n     * Cheсks wether the table is empty\n     * @returns `true` if the table is empty, `false` if it is not.\n     */\n    isEmpty() {\n        return this.getNumberOfColumns() == 0 || this.getNumberOfRows() == 0;\n    }\n    /**\n     * Gets the number of columns\n     * @returns The number.\n     */\n    getNumberOfColumns() {\n        return this.tableObj.cols.length;\n    }\n    /**\n     * Gets the column object.\n     * @param colIndex The column index.\n     * @returns The column object.\n     */\n    getColumnObject(colIndex) {\n        return colIndex < this.tableObj.cols.length ? this.tableObj.cols[colIndex] : null;\n    }\n    /**\n     * Gets the column ID.\n     * @param colIndex The column index.\n     * @returns The column ID.\n     */\n    getColumnId(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.id : null;\n    }\n    /**\n     * Gets the column LABEL.\n     * @param colIndex The column index.\n     * @returns The column ID.\n     */\n    getColumnLabel(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.label : null;\n    }\n    /**\n     *  Gets the column type.\n     * @param colIndex The column index.\n     * @returns The column type.\n     */\n    getColumnType(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.type : null;\n    }\n    /**\n     * Gets the column properties.\n     * @param colIndex The column index.\n     * @returns The column properties.\n     */\n    getColumnProperties(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.p : null;\n    }\n    /**\n     * Gets the number of rows.\n     * @returns The number.\n     */\n    getNumberOfRows() {\n        return this.tableObj.rows.length;\n    }\n    convertValue(value, colIndex) {\n        const colType = this.googleDataTypeToDataType(this.getColumnType(colIndex));\n        if ([DataType.Date, DataType.DateTime, DataType.Time].includes(colType)) {\n            // return eval(`new ${value}`)\n            return new Function(value, 'return new value');\n        }\n        return value;\n    }\n    /**\n     *  Gets the value.\n     * @param rowIndex\n     * @param colIndex\n     */\n    getValue(rowIndex, colIndex) {\n        const row = rowIndex < this.tableObj.rows.length ? this.tableObj.rows[rowIndex] : null;\n        if (row) {\n            const cell = colIndex < this.tableObj.cols.length ? row.c[colIndex] : null;\n            if (cell) {\n                return this.convertValue(cell.v, colIndex);\n            }\n        }\n        return null;\n    }\n    getRow(rowIndex) {\n        const googleRow = rowIndex < this.tableObj.rows.length ? this.tableObj.rows[rowIndex] : null;\n        const googleCells = googleRow.c;\n        const row = googleCells.map((obj, idx) => this.convertValue(obj.v, idx), this);\n        return row;\n    }\n    convertTo(dataTable) {\n        const colCount = this.getNumberOfColumns();\n        for (let i = 0; i < colCount; i++) {\n            dataTable.columns.add({\n                id: this.getColumnId(i),\n                label: this.getColumnLabel(i),\n                type: this.googleDataTypeToDataType(this.getColumnType(i))\n            });\n        }\n        const rowCount = this.getNumberOfRows();\n        for (let i = 0; i < rowCount; i++) {\n            dataTable.addRow(this.getRow(i));\n        }\n    }\n    googleDataTypeToDataType(googleDataType) {\n        switch (googleDataType) {\n            case 'string':\n                return DataType.String;\n            case 'number':\n                return DataType.Float;\n            case 'boolean':\n                return DataType.Bool;\n            case 'date':\n                return DataType.Date;\n            case 'datetime':\n                return DataType.DateTime;\n            case 'timeofday':\n                return DataType.Time;\n            default:\n                return DataType.String;\n        }\n    }\n}\n\nclass InMemoryModelStorage {\n    constructor(models) {\n        this.models = [];\n        if (models) {\n            utils.assign(this.models, [], models);\n        }\n    }\n    getModels() {\n        return new Promise((resolve, reject) => {\n            resolve(this.models);\n        });\n    }\n}\n\n/**\n * Represents a widget - a visual element with \"knows\" how to render itself.\n * Some widgets just display some information from the context (like the generated SQL or the result set).\n * Others - allow user to interact with them to define query conditions or columns.\n */\nclass Widget {\n    /**\n     Initializes a new instance of the `Widget` class\n     * @param slot - an HTML element in which we should place our widget.\n     */\n    constructor(slot) {\n        this.slot = slot;\n        this._id = utils.generateId(this.getWidgetType());\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Initializes the widget and assign it to some context\n     * @param context\n     * @param options\n     */\n    init(context, options) {\n        this.context = context;\n    }\n    /**\n     * Returns current context (the one this widget belongs to)\n     */\n    getContext() {\n        return this.context;\n    }\n    /**\n     * Refreshes the widget's content\n     */\n    refresh() {\n        this.refreshCore();\n    }\n    /**\n     * This function is called from `refresh` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget\n     */\n    refreshCore() {\n    }\n    /**\n     * This function is called on the start of some process this widget participates in.\n     * For example, some widgets can show a spinner or a progress bar\n     * at the beginning of some long process (e.g. model loading).\n     */\n    onProcessStart() {\n        this.onProcessStartCore();\n    }\n    /**\n     * This function is called from `onProcessStart` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget.\n     */\n    onProcessStartCore() {\n    }\n    /**\n     * This function is called on the end of some process this widget participates in.\n     * For example, some widgets should be updated on model loading\n     * or after the execution of the current query\n     */\n    onProcessEnd() {\n        this.onProcessEndCore();\n    }\n    /**\n     * This function is called from `onProcessEnd` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget.\n     */\n    onProcessEndCore() {\n    }\n    /**\n     * Returns `true` if the widget belongs to one of the groups specified in the parameter\n     * @param groups\n     */\n    belongsToGroup(groups) {\n        if (typeof groups != 'undefined' && groups != null) {\n            if ((groups & this.group) === 0)\n                return false;\n        }\n        return true;\n    }\n    destroy() {\n        this.destroyCore();\n    }\n    destroyCore() {\n    }\n}\n\nclass EqVersionInfo {\n    constructor(major, minor, update) {\n        this.major = major;\n        this.minor = minor;\n        this.update = update;\n    }\n    toString() {\n        return `${this.major}.${this.minor}.${this.update}`;\n    }\n}\nconst versionInfo = new EqVersionInfo(6, 2, 0);\n\nfunction addEasyQueryCoreTexts() {\n    i18n.updateDefaultTexts({\n        NewQueryName: '[New query]',\n        //DateTime macroses\n        Today: 'Today',\n        Yesterday: 'Yesterday',\n        Tomorrow: 'Tomorrow',\n        FirstDayOfMonth: 'First day of the month',\n        LastDayOfMonth: 'Last day of the month',\n        FirstDayOfWeek: 'First day of the week',\n        FirstDayOfYear: 'First day of the year',\n        FirstDayOfNextWeek: 'First day of the next week',\n        FirstDayOfNextMonth: 'First day of the next month',\n        FirstDayOfNextYear: 'First day of the next year',\n        Now: 'Now',\n        HourStart: 'This hour start',\n        Midnight: 'Midnight',\n        Noon: 'Noon',\n        Entities: {},\n        Attributes: {},\n        Operators: {},\n        AggregateFunctions: {}\n    });\n}\naddEasyQueryCoreTexts();\n\nexport { AggrFunction, BrowserQueryStorage, CondTag, Condition, ConditionPart, DataKind, DataModel, DefaultAggregatesCalculator, EasyQueryDataLoader, EmptyChunk, Entity, EntityAttr, EqAction, EqActionResult, EqAggregatesContainer, EqContext, EqEditorTag, EqModelLoader, EqQueryFileLoader, EqServerDataFetcher, EqServerExporter, EqServerModelLoader, EqServerQuerySynchronizer, EqServerValueListResolver, EqServiceProvider, EqValueEditor, ExprTag, Expression, FormatParser, GoogleDataConverter, InMemoryModelStorage, InvalidQueryError, LinkType, Operand, Operator, Query, QueryChangeAction, QueryChangePart, QueryColumn, SortDirection, Tree, Widget, WidgetGroup, createEqContext, eqconsts, equtils, registerEqContextResolver, versionInfo };\n","\n/*\n * EasyData.JS UI v1.4.21\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\nimport { utils, ColumnAlignment, DataType, i18n, EventEmitter, DataRow, liquid } from '@easydata/core';\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    let _isIE = null;\n    function IsIE() {\n        if (_isIE === null) {\n            const ua = navigator.userAgent;\n            /* MSIE used to detect old browsers and Trident used to newer ones*/\n            _isIE = ua.indexOf(\"MSIE \") > -1 || ua.indexOf(\"Trident/\") > -1;\n        }\n        return _isIE;\n    }\n    browserUtils.IsIE = IsIE;\n    function IsEdge() {\n        const ua = window.navigator.userAgent;\n        return !IsIE() && ua.includes('Edge/');\n    }\n    browserUtils.IsEdge = IsEdge;\n    function IsFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().indexOf('firefox') > -1;\n        }\n        return _isFirefox;\n    }\n    browserUtils.IsFirefox = IsFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    let mobileModeChangeHandler;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n    function getMobileCssClass() {\n        return isMobileMode() ? 'k-mobile' : null;\n    }\n    browserUtils.getMobileCssClass = getMobileCssClass;\n})(browserUtils || (browserUtils = {}));\n\n/**\n * Wraps all the elements inside \"parent\" by \"wrapper\" element\n * @param parent The element to add wrapper to.\n * @param wrapper The element that will wrap child elements.\n */\nfunction wrapInner(parent, wrapper) {\n    parent.appendChild(wrapper);\n    while (parent.firstChild !== wrapper) {\n        wrapper.appendChild(parent.firstChild);\n    }\n}\n/**\n * Creates ands adds a new [[HTMLElement]] to \"parent\"\n * @param parent The element to add new element to.\n * @param tag Html tag of the new element.\n * @param options The options. In particular, options.cssClass sets the new element class.\n * @returns New element.\n */\nfunction addElement(parent, tag, options) {\n    let element = document.createElement(tag);\n    let opts = options || {};\n    if (opts.cssClass) {\n        element.className = opts.cssClass;\n    }\n    parent.appendChild(element);\n    return element;\n}\n/**\n * Adds css class to the html element.\n * @param element The element to add css class to.\n * @param className The name of the css class to be added.\n */\nfunction addCssClass(element, className) {\n    element.className = (element.className)\n        ? element.className + ' ' + className\n        : className;\n}\n/**\n * Hides the html element.\n * @param element The element to be hidden.\n */\nfunction hideElement(element) {\n    element.style.display = 'none';\n}\n/**\n * Shows the html element.\n * @param element The element to be shown.\n * @param display The value of \"display\" style to be set. Default value is \"block\".\n */\nfunction showElement(element, display) {\n    if (!display) {\n        display = '';\n    }\n    element.style.display = display;\n}\n/**\n * Hides the \"first\" element and shows the \"second\".\n * @param first The element to be hidden.\n * @param second The element to be shown.\n * @param options The options. The following options are applied:\n * - display - the value of \"display\" style to be set. Default value is \"block\"\n * - duration - the duration of fading in and out\n * - complete - the callback to be called when toggle is complete\n */\nfunction toggleVisibility(first, second, options) {\n    if (!options) {\n        options = {};\n    }\n    if (!options.display) {\n        options.display = '';\n    }\n    if (!options.duration) {\n        options.duration = 200;\n    }\n    //TODO: later we need to make it fading in and out\n    hideElement(first);\n    showElement(second, options.display);\n    if (options.complete) {\n        options.complete();\n    }\n}\n/**\n * Checks if element is visible\n * @param element The element to check.\n * @returns `true` if visible, otherwise - `false`.\n */\nfunction isVisible(element) {\n    return element.style.display != 'none'\n        && element.offsetWidth != 0\n        && element.offsetHeight != 0;\n}\nfunction createBrowserEvent(eventName) {\n    var event;\n    if (typeof (Event) === 'function') {\n        event = new Event(eventName);\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    }\n    return event;\n}\nfunction getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getDocSize() {\n    if (browserUtils.IsIE())\n        return getWinSize();\n    const width = Math.max(document.documentElement.clientWidth, document.body.clientWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight, document.body.clientHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getScrollPos() {\n    const body = document.body;\n    const docElem = document.documentElement;\n    return {\n        top: window.pageYOffset || docElem.scrollTop || body.scrollTop,\n        left: window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n    };\n}\nfunction getElementAbsolutePos(element) {\n    let res = { x: 0, y: 0 };\n    if (element !== null) {\n        const position = offset(element);\n        res = { x: position.left, y: position.top };\n    }\n    return res;\n}\nfunction offset(element) {\n    const defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };\n    let box;\n    try {\n        box = element.getBoundingClientRect();\n    }\n    catch (_a) {\n        box = defaultBoundingClientRect;\n    }\n    const body = document.body;\n    const docElem = document.documentElement;\n    const scollPos = getScrollPos();\n    const scrollTop = scollPos.top;\n    const scrollLeft = scollPos.left;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return { top: Math.round(top), left: Math.round(left) };\n}\nfunction getWinSize() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\nfunction slideDown(target, duration, callback) {\n    target.style.removeProperty('display');\n    let display = window.getComputedStyle(target).display;\n    if (display === 'none')\n        display = 'block';\n    target.style.display = display;\n    let height = target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    target.offsetHeight;\n    target.style.boxSizing = 'border-box';\n    target.style.transitionProperty = \"height, margin, padding\";\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = height + 'px';\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    window.setTimeout(() => {\n        target.style.removeProperty('height');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nfunction slideUp(target, duration, callback) {\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.boxSizing = 'border-box';\n    target.style.height = target.offsetHeight + 'px';\n    target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    window.setTimeout(() => {\n        target.style.display = 'none';\n        target.style.removeProperty('height');\n        target.style.removeProperty('padding-top');\n        target.style.removeProperty('padding-bottom');\n        target.style.removeProperty('margin-top');\n        target.style.removeProperty('margin-bottom');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\n\nfunction mask(input, maskPattern) {\n    const d = { 9: '[0-9]', a: '[a-z]' };\n    const mask = maskPattern.split('');\n    const keyDownHandler = (e) => {\n        // backspace key or delete key\n        if (e.keyCode === 8 || e.keyCode === 46) {\n            e.preventDefault();\n            let mskd = [];\n            let startSelection = input.selectionStart;\n            if (startSelection == 0)\n                return;\n            let selection = startSelection;\n            let onlyLodash = true;\n            for (let index = mask.length - 1; index >= 0; index--) {\n                const el = mask[index];\n                if (d[el]) {\n                    let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                    if (t && index != startSelection - 1) {\n                        onlyLodash = false;\n                    }\n                    if (index === startSelection - 1)\n                        selection--;\n                    mskd.push(t && index != startSelection - 1\n                        ? input.value.charAt(index)\n                        : '_');\n                }\n                else {\n                    if (index === selection - 1)\n                        selection--;\n                    if (startSelection - 1 === index)\n                        startSelection--;\n                    mskd.push(el);\n                }\n            }\n            input.value = !onlyLodash ? mskd.reverse().join('') : '';\n            input.selectionStart = input.selectionEnd = selection < 0 ? 0 : selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const keyPressHandler = (e) => {\n        const char = String.fromCharCode(e.charCode);\n        if (char) {\n            e.preventDefault();\n            let mskd = [];\n            let selectionStart = input.selectionStart;\n            let selection = selectionStart;\n            mask.forEach((el, index) => {\n                if (d[el]) {\n                    const ch = (index != selectionStart)\n                        ? input.value.charAt(index)\n                        : char;\n                    let t = new RegExp(d[el], 'i').test(ch);\n                    mskd.push(t ? ch : '_');\n                    if (t && selectionStart === index)\n                        selection++;\n                }\n                else {\n                    mskd.push(el);\n                    if (selection === index)\n                        selection++;\n                    if (selectionStart === index)\n                        selectionStart++;\n                }\n            });\n            input.value = mskd.join('');\n            input.selectionStart = input.selectionEnd = selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const inputHandler = (e) => {\n        if (e.type === 'focus' && input.value !== '')\n            return;\n        let mskd = [];\n        let startSelection = input.selectionStart;\n        mask.forEach((el, index) => {\n            if (d[el]) {\n                let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                mskd.push(t ? input.value.charAt(index) : '_');\n            }\n            else {\n                mskd.push(el);\n            }\n        });\n        input.value = mskd.join('');\n        input.selectionStart = input.selectionEnd = startSelection;\n    };\n    input.addEventListener('keydown', keyDownHandler);\n    input.addEventListener('keypress', keyPressHandler);\n    input.addEventListener('input', inputHandler);\n    input.addEventListener('focus', inputHandler);\n}\n\nclass DomElementBuilder {\n    constructor(tag, parent) {\n        if (typeof tag === \"string\") {\n            this.element = document.createElement(tag);\n        }\n        else {\n            this.element = tag;\n        }\n        if (parent && this.element.parentElement !== parent) {\n            parent.appendChild(this.element);\n        }\n    }\n    addChild(tag, childBuilder) {\n        const builder = domel(tag, this.element);\n        if (childBuilder) {\n            childBuilder(builder);\n        }\n        return this;\n    }\n    addChildElement(element) {\n        if (element) {\n            this.element.appendChild(element);\n        }\n        return this;\n    }\n    attr(attrId, attrValue) {\n        this.element.setAttribute(attrId, attrValue);\n        return this;\n    }\n    id(value) {\n        return this.attr(\"id\", value);\n    }\n    focus() {\n        this.element.focus();\n        return this;\n    }\n    title(value) {\n        return this.attr('title', value);\n    }\n    data(dataId, dataValue = null) {\n        if (dataValue === null) {\n            this.element.removeAttribute('data-' + dataId);\n            return this;\n        }\n        else {\n            return this.attr('data-' + dataId, dataValue);\n        }\n    }\n    show() {\n        return this.removeStyle('display');\n    }\n    hide(toHide = true) {\n        return (toHide) ? this.setStyle('display', 'none') : this;\n    }\n    visible(isVisible = true) {\n        return isVisible ? this.setStyle('visibility', 'visible') : this.setStyle('visibility', 'hidden');\n    }\n    isVisible() {\n        return !!(this.element.offsetWidth || this.element.offsetHeight || this.element.getClientRects().length);\n    }\n    addClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.add(fullList[i]);\n        }\n        return this;\n    }\n    removeClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.remove(fullList[i]);\n        }\n        return this;\n    }\n    toggleClass(className, force = undefined) {\n        if (className) {\n            this.element.classList.toggle(className, force);\n        }\n        return this;\n    }\n    on(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.addEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    off(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.removeEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    setStyle(styleId, styleValue) {\n        this.element.style.setProperty(styleId, styleValue);\n        return this;\n    }\n    removeStyle(styleId) {\n        this.element.style.removeProperty(styleId);\n        return this;\n    }\n    text(text) {\n        this.element.innerText = text;\n        return this;\n    }\n    html(html) {\n        this.element.innerHTML = html;\n        return this;\n    }\n    clear() {\n        const oldElem = this.element;\n        this.element = document.createElement(this.element.tagName);\n        oldElem.replaceWith(this.element);\n    }\n    addText(text) {\n        const textEl = document.createTextNode(text);\n        this.element.appendChild(textEl);\n        return this;\n    }\n    addHtml(html) {\n        this.element.innerHTML += html;\n        return this;\n    }\n    toDOM() {\n        return this.element;\n    }\n    appendTo(parent) {\n        if (parent) {\n            parent.appendChild(this.element);\n        }\n        return this;\n    }\n}\nclass DomTextAreaElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"textarea\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    rows(rows) {\n        this.element.rows = rows;\n        return this;\n    }\n    cols(cols) {\n        this.element.cols = cols;\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nclass DomInputElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"input\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    type(value) {\n        this.element.type = value;\n        return this;\n    }\n    size(value) {\n        this.element.size = value;\n        return this;\n    }\n    value(value) {\n        if (value instanceof Date) {\n            this.element.valueAsDate = value;\n        }\n        else if (typeof value === \"number\") {\n            this.element.valueAsNumber = value;\n        }\n        else {\n            this.element.value = value;\n        }\n        return this;\n    }\n    mask(maskPattern) {\n        mask(this.element, maskPattern);\n        return this;\n    }\n}\nclass DomSelectElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"select\", parent);\n        }\n    }\n    addOption(value) {\n        const option = document.createElement('option');\n        if (typeof value === \"string\") {\n            option.value = value;\n            option.innerHTML = value;\n        }\n        else {\n            option.value = value.value;\n            option.innerHTML = value.title || value.value;\n            option.selected = value.selected || false;\n        }\n        this.element.appendChild(option);\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nfunction domel(tag, parent) {\n    if (tag === \"div\" || tag instanceof HTMLDivElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    if (tag === \"span\" || tag instanceof HTMLSpanElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"a\" || tag instanceof HTMLAnchorElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"button\" || tag instanceof HTMLButtonElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"img\" || tag instanceof HTMLImageElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"input\" || tag instanceof HTMLInputElement) {\n        return new DomInputElementBuilder(tag instanceof HTMLInputElement ? tag : null, parent);\n    }\n    else if (tag === \"textarea\" || tag instanceof HTMLTextAreaElement) {\n        return new DomTextAreaElementBuilder(tag instanceof HTMLTextAreaElement ? tag : null, parent);\n    }\n    else if (tag === \"select\" || tag instanceof HTMLSelectElement) {\n        return new DomSelectElementBuilder(tag instanceof HTMLSelectElement ? tag : null, parent);\n    }\n    return new DomElementBuilder(tag, parent);\n}\n\nconst touchEventIsDefined = typeof TouchEvent !== 'undefined';\nvar DropEffect;\n(function (DropEffect) {\n    DropEffect[\"None\"] = \"none\";\n    DropEffect[\"Allow\"] = \"allow\";\n    DropEffect[\"Forbid\"] = \"forbid\";\n})(DropEffect || (DropEffect = {}));\nclass EqDragEvent {\n    constructor(item, dragImage, sourceEvent) {\n        this.dropEffect = DropEffect.Allow;\n        this.pageX = 0;\n        this.pageY = 0;\n        this.item = item;\n        this.dragImage = dragImage;\n        this.data = item.data;\n        this.sourceEvent = sourceEvent;\n        if (sourceEvent && sourceEvent instanceof MouseEvent) {\n            this.pageX = sourceEvent.pageX,\n                this.pageY = sourceEvent.pageY;\n        }\n        if (sourceEvent && touchEventIsDefined && sourceEvent instanceof TouchEvent\n            && sourceEvent.touches[0]) {\n            this.pageX = sourceEvent.touches[0].pageX,\n                this.pageY = sourceEvent.touches[0].pageY;\n        }\n    }\n}\nclass Position {\n    constructor(ev) {\n        if (ev && ev instanceof MouseEvent) {\n            this.x = ev.pageX,\n                this.y = ev.pageY;\n        }\n        if (ev && touchEventIsDefined && ev instanceof TouchEvent && ev.touches[0]) {\n            this.x = ev.touches[0].pageX,\n                this.y = ev.touches[0].pageY;\n        }\n    }\n}\nclass DragManager {\n    constructor() {\n        this.delta = 5;\n        this.draggableItem = null;\n        this.dragImage = null;\n        this.finishedSuccessfully = false;\n        this.mouseDownPosition = null;\n        this.containerDescriptors = [];\n        this.containerDescriptorIndex = -1;\n        this.dropEffect = DropEffect.None;\n        this.classPrefix = 'eqjs-drop';\n        this.DRAG_DISABLED_ATTR = 'drag-disabled';\n    }\n    registerDraggableItem(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in draggle item is null or undefined\");\n        }\n        element.ondragstart = function () {\n            return false;\n        };\n        const detectDragging = (ev) => {\n            if (element.hasAttribute(this.DRAG_DISABLED_ATTR)) {\n                return;\n            }\n            ev.preventDefault();\n            if (ev instanceof MouseEvent) {\n                ev.stopPropagation();\n            }\n            const cursorPosition = new Position(ev);\n            if (Math.abs(cursorPosition.x - this.mouseDownPosition.x) > this.delta\n                || Math.abs(cursorPosition.y - this.mouseDownPosition.y) > this.delta) {\n                startDragging(ev);\n            }\n        };\n        const mouseMoveEventListener = (ev) => {\n            this.mouseMoveDragListener(ev);\n        };\n        const startDragging = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            this.finishedSuccessfully = false;\n            if (descriptor.beforeDragStart)\n                descriptor.beforeDragStart();\n            this.dragImage = domel('div')\n                .setStyle('position', 'absolute')\n                .setStyle('z-index', '65530')\n                .toDOM();\n            document.body.appendChild(this.dragImage);\n            this.dragImage.appendChild(element.cloneNode(true));\n            if (descriptor.renderer) {\n                descriptor.renderer(this.dragImage);\n            }\n            this.dropEffect = DropEffect.None;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n            this.draggableItem = {\n                element: element,\n                scope: descriptor.scope,\n                data: descriptor.data\n            };\n            this.updateDragItemPosition(ev);\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = this.dropEffect;\n            if (descriptor.onDragStart) {\n                descriptor.onDragStart(event);\n            }\n            if (this.dropEffect !== event.dropEffect) {\n                this.dropEffect = event.dropEffect;\n                this.updateImageClass(this.dropEffect);\n            }\n            document.addEventListener('mousemove', mouseMoveEventListener, true);\n            document.addEventListener('touchmove', mouseMoveEventListener, true);\n        };\n        const mouseDownListener = (ev) => {\n            if (touchEventIsDefined && ev instanceof TouchEvent) {\n                ev.preventDefault();\n            }\n            this.mouseDownPosition = new Position(ev);\n            element.addEventListener('mousemove', detectDragging);\n            element.addEventListener('touchmove', detectDragging);\n            document.addEventListener('mouseup', mouseUpListener);\n            document.addEventListener('touchend', mouseUpListener);\n        };\n        element.addEventListener('mousedown', mouseDownListener);\n        element.addEventListener('touchstart', mouseDownListener);\n        const mouseUpListener = (ev) => {\n            this.mouseDownPosition = null;\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            document.removeEventListener('mousemove', mouseMoveEventListener, true);\n            document.removeEventListener('touchmove', mouseMoveEventListener, true);\n            if (this.draggableItem) {\n                endDraggind(ev);\n            }\n        };\n        const endDraggind = (ev) => {\n            try {\n                if (this.containerDescriptorIndex >= 0) {\n                    const dropContDesc = this.containerDescriptors[this.containerDescriptorIndex];\n                    const container = {\n                        element: dropContDesc.element,\n                        scopes: dropContDesc.scopes,\n                        data: dropContDesc.data\n                    };\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    try {\n                        if (container.scopes.indexOf(this.draggableItem.scope) >= 0\n                            && this.dropEffect === DropEffect.Allow) {\n                            this.finishedSuccessfully = true;\n                            if (dropContDesc.onDrop) {\n                                dropContDesc.onDrop(container, event);\n                            }\n                        }\n                    }\n                    finally {\n                        if (dropContDesc.onDragLeave) {\n                            dropContDesc.onDragLeave(container, event);\n                        }\n                    }\n                }\n            }\n            finally {\n                try {\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    event.data.finishedSuccessfully = this.finishedSuccessfully;\n                    if (descriptor.onDragEnd) {\n                        descriptor.onDragEnd(event);\n                    }\n                }\n                finally {\n                    this.draggableItem = null;\n                    if (this.dragImage && this.dragImage.parentElement) {\n                        this.dragImage.parentElement.removeChild(this.dragImage);\n                    }\n                    this.dragImage = null;\n                    this.finishedSuccessfully = false;\n                    document.removeEventListener('mouseup', mouseUpListener);\n                    document.removeEventListener('touchend', mouseUpListener);\n                }\n            }\n        };\n    }\n    registerDropContainer(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in drop container is null or undefined\");\n        }\n        this.containerDescriptors.push(descriptor);\n    }\n    removeDropContainer(descriptorOrSlot) {\n        const descs = this.containerDescriptors\n            .filter(desc => desc === descriptorOrSlot\n            || desc.element == descriptorOrSlot);\n        if (descs) {\n            for (const desc of descs) {\n                utils.removeArrayItem(this.containerDescriptors, desc);\n            }\n        }\n    }\n    mouseMoveDragListener(ev) {\n        if (ev instanceof MouseEvent) {\n            ev.preventDefault();\n        }\n        ev.stopPropagation();\n        this.updateDragItemPosition(ev);\n        if (this.containerDescriptorIndex == -1) {\n            for (let i = 0; i < this.containerDescriptors.length; i++) {\n                const descriptor = this.containerDescriptors[i];\n                if (this.detectDragEnterEvent(descriptor.element, ev)) {\n                    this.containerDescriptorIndex = i;\n                    break;\n                }\n            }\n            if (this.containerDescriptorIndex >= 0) {\n                this.dragEnterEvent(ev);\n            }\n        }\n        else {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            if (this.detectDragLeaveEvent(descriptor.element, ev)) {\n                this.dragLeaveEvent(ev);\n                this.containerDescriptorIndex = -1;\n            }\n        }\n        if (this.containerDescriptorIndex >= 0) {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            const container = {\n                element: descriptor.element,\n                scopes: descriptor.scopes,\n                data: descriptor.data\n            };\n            if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n                const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                event.dropEffect = this.dropEffect;\n                if (descriptor.onDragOver) {\n                    descriptor.onDragOver(container, event);\n                }\n            }\n        }\n    }\n    updateCusror(dropEffect) {\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n            case DropEffect.Forbid:\n                this.setCursorStyle(this.dragImage, 'no-drop');\n                break;\n            default:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n        }\n    }\n    updateImageClass(dropEffect) {\n        this.dragImage.classList.remove(`${this.classPrefix}-allow`);\n        this.dragImage.classList.remove(`${this.classPrefix}-forbid`);\n        this.dragImage.classList.remove(`${this.classPrefix}-none`);\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.dragImage.classList.add(`${this.classPrefix}-allow`);\n                break;\n            case DropEffect.None:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n            case DropEffect.Forbid:\n                this.dragImage.classList.add(`${this.classPrefix}-forbid`);\n                break;\n            default:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n        }\n    }\n    setCursorStyle(element, cursor) {\n        if (element) {\n            element.style.cursor = cursor;\n            for (let i = 0; i < element.children.length; i++) {\n                this.setCursorStyle(element.children[i], cursor);\n            }\n        }\n    }\n    updateDragItemPosition(ev) {\n        if (this.dragImage) {\n            const pos = new Position(ev);\n            this.dragImage.style.top = (pos.y - this.dragImage.offsetHeight / 2) + 'px';\n            this.dragImage.style.left = (pos.x - this.dragImage.offsetWidth / 2) + 'px';\n        }\n    }\n    dragEnterEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.Allow;\n            if (descriptor.onDragEnter) {\n                descriptor.onDragEnter(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n        else {\n            if (this.dropEffect !== DropEffect.Forbid) {\n                this.dropEffect = DropEffect.None;\n                this.updateCusror(this.dropEffect);\n                this.updateImageClass(this.dropEffect);\n            }\n        }\n    }\n    dragLeaveEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.None;\n            if (descriptor.onDragLeave) {\n                descriptor.onDragLeave(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n    }\n    detectDragEnterEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y < containerPos.y || pos.y > containerPos.y + container.offsetHeight) {\n            return false;\n        }\n        if (pos.x < containerPos.x || pos.x > containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n    detectDragLeaveEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y > containerPos.y && pos.y < containerPos.y + container.offsetHeight\n            && pos.x > containerPos.x && pos.x < containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n}\n//global variable\nconst eqDragManager = new DragManager();\n\nvar AutoResizeColumns;\n(function (AutoResizeColumns) {\n    AutoResizeColumns[AutoResizeColumns[\"Always\"] = 0] = \"Always\";\n    AutoResizeColumns[AutoResizeColumns[\"Once\"] = 1] = \"Once\";\n    AutoResizeColumns[AutoResizeColumns[\"Never\"] = 2] = \"Never\";\n})(AutoResizeColumns || (AutoResizeColumns = {}));\n\n//import { CellRendererType } from \"./easy_grid_cell_renderer\";\n//import { GridCellRenderer } from './easy_grid_cell_renderer';\nconst DEFAULT_WIDTH_STRING = 250;\nconst ROW_NUM_WIDTH = 60;\nvar GridColumnAlign;\n(function (GridColumnAlign) {\n    GridColumnAlign[GridColumnAlign[\"NONE\"] = 1] = \"NONE\";\n    GridColumnAlign[GridColumnAlign[\"LEFT\"] = 2] = \"LEFT\";\n    GridColumnAlign[GridColumnAlign[\"CENTER\"] = 3] = \"CENTER\";\n    GridColumnAlign[GridColumnAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(GridColumnAlign || (GridColumnAlign = {}));\nfunction MapAlignment(alignment) {\n    switch (alignment) {\n        case ColumnAlignment.Left:\n            return GridColumnAlign.LEFT;\n        case ColumnAlignment.Center:\n            return GridColumnAlign.CENTER;\n        case ColumnAlignment.Right:\n            return GridColumnAlign.RIGHT;\n        default:\n            return GridColumnAlign.NONE;\n    }\n}\nclass GridColumn {\n    constructor(column, grid, isRowNum = false) {\n        this._label = null;\n        this._description = null;\n        //public left: number;\n        this.align = GridColumnAlign.NONE;\n        this.isVisible = true;\n        this.isRowNum = false;\n        this.dataColumn = column;\n        this.grid = grid;\n        const widthOptions = grid.options.columnWidths || {};\n        if (column) {\n            if (column.style.alignment) {\n                this.align = MapAlignment(column.style.alignment);\n            }\n            this.width = (widthOptions && widthOptions[this.type]) ? widthOptions[this.type].default : DEFAULT_WIDTH_STRING;\n            this._description = column.description;\n        }\n        else if (isRowNum) {\n            this.isRowNum = true;\n            this.width = (widthOptions && widthOptions.rowNumColumn) ? widthOptions.rowNumColumn.default : ROW_NUM_WIDTH;\n            this._label = '';\n        }\n    }\n    get label() {\n        return this._label ? this._label : this.isRowNum ? '' : this.dataColumn.label;\n    }\n    ;\n    set label(value) {\n        this._label = this.label;\n    }\n    /** Get column description. */\n    get description() {\n        return this._description;\n    }\n    get type() {\n        return this.dataColumn ? this.dataColumn.type : null;\n    }\n}\nclass GridColumnList {\n    constructor(columnList, grid) {\n        this.items = [];\n        this.grid = grid;\n        this.sync(columnList);\n    }\n    sync(columnList, hasRowNumCol = true) {\n        this.clear();\n        const rowNumCol = new GridColumn(null, this.grid, true);\n        this.add(rowNumCol);\n        if (!hasRowNumCol) {\n            rowNumCol.isVisible = false;\n        }\n        if (columnList) {\n            for (let column of columnList.getItems()) {\n                const col = new GridColumn(column, this.grid);\n                if (this.grid.options.onSyncGridColumn) {\n                    this.grid.options.onSyncGridColumn(col);\n                }\n                this.add(col);\n            }\n        }\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(col) {\n        const index = this.items.length;\n        this.items.push(col);\n        return index;\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.items.length) {\n            this.items[index] = col;\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex)\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n    }\n    get(index) {\n        if (index >= 0 && index < this.items.length) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    //    public getIndex(name: string) : number {\n    //        return this.mapper[name];\n    //    }\n    getItems() {\n        return this.items;\n    }\n    removeAt(index) {\n        this.get(index);\n        this.items.splice(index, 1);\n        //delete this.mapper[col.name];\n    }\n    clear() {\n        this.items = [];\n        //this.mapper = {};\n    }\n}\n\nconst cssPrefix$1 = \"keg\";\nconst DFMT_REGEX = /{0:(.*?)}/g;\nvar CellRendererType;\n(function (CellRendererType) {\n    CellRendererType[CellRendererType[\"STRING\"] = 1] = \"STRING\";\n    CellRendererType[CellRendererType[\"NUMBER\"] = 2] = \"NUMBER\";\n    CellRendererType[CellRendererType[\"DATETIME\"] = 3] = \"DATETIME\";\n    CellRendererType[CellRendererType[\"BOOL\"] = 4] = \"BOOL\";\n})(CellRendererType || (CellRendererType = {}));\nconst StringCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const text = value ? value.toString().replace(/\\n/g, '\\u21B5 ') : '';\n    cellValueElement.innerText = text;\n    cellValueElement.title = text;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-left`);\n    }\n};\nconst NumberCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    let strValue = (value || '').toString();\n    if (typeof value == 'number') {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.numberToStr(value, $1);\n            });\n        }\n        else {\n            strValue = value.toLocaleString();\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst DateTimeCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const isDate = Object.prototype.toString.call(value) === '[object Date]';\n    let strValue = (value || '').toString();\n    if (isDate) {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.dateTimeToStrEx(value, column.type, $1);\n            });\n        }\n        else {\n            const locale = i18n.getCurrentLocale();\n            const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n            switch (column.type) {\n                case DataType.Date:\n                    strValue = value.toLocaleDateString(locale);\n                    break;\n                case DataType.Time:\n                    strValue = value.toLocaleTimeString(locale, timeOptions);\n                    break;\n                case DataType.DateTime:\n                    strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                    break;\n            }\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst BoolCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    if (column.dataColumn && column.dataColumn.displayFormat\n        && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n        const strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n            return i18n.booleanToStr(value, $1);\n        });\n        return StringCellRendererDefault(strValue, column, cellValueElement);\n    }\n    else {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-bool`);\n        cellValueElement.classList.add(`${cssPrefix$1}-${value ? 'cell-value-true' : 'cell-value-false'}`);\n    }\n};\nclass GridCellRendererStore {\n    constructor(options) {\n        this.renderers = {};\n        this.defaultRenderers = {};\n        this.registerRenderer('StringDefault', StringCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.STRING, StringCellRendererDefault);\n        this.registerRenderer('NumberDefault', NumberCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.NUMBER, NumberCellRendererDefault);\n        this.registerRenderer('DateTimeDefault', DateTimeCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.DATETIME, DateTimeCellRendererDefault);\n        this.registerRenderer('BoolDefault', BoolCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.BOOL, BoolCellRendererDefault);\n    }\n    getDefaultRenderer(columnType) {\n        const cellType = this.getCellType(columnType);\n        return this.defaultRenderers[CellRendererType[cellType]];\n    }\n    getDefaultRendererByType(rendererType) {\n        return this.defaultRenderers[CellRendererType[rendererType]];\n    }\n    setDefaultRenderer(cellType, renderer) {\n        if (renderer) {\n            this.defaultRenderers[CellRendererType[cellType]] = renderer;\n        }\n    }\n    getRenderer(name) {\n        return this.renderers[name];\n    }\n    registerRenderer(name, renderer) {\n        this.renderers[name] = renderer;\n    }\n    getCellType(dataType) {\n        switch (dataType) {\n            case DataType.Autoinc:\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Currency:\n            case DataType.Float:\n            case DataType.Int32:\n            case DataType.Int64:\n                return CellRendererType.NUMBER;\n            case DataType.Date:\n            case DataType.DateTime:\n            case DataType.Time:\n                return CellRendererType.DATETIME;\n            case DataType.Bool:\n                return CellRendererType.BOOL;\n            default:\n                return CellRendererType.STRING;\n        }\n    }\n}\n\nconst DEFAULT_ROW_HEIGHT = 36;\n/** Represents a grid widget with columns rows, paging, custom rendering and more */\nclass EasyGrid {\n    /** Creates and initializes all internal properties of the grid object */\n    constructor(options) {\n        this.cssPrefix = \"keg\";\n        this.pagination = { page: 1, pageSize: 30, total: 0 };\n        this.paginationOptions = {\n            maxButtonCount: 10,\n            useBootstrap: false //true\n        };\n        this.defaultDataGridOptions = {\n            slot: null,\n            dataTable: null,\n            fixHeightOnFirstRender: false,\n            syncGridColumns: true,\n            useRowNumeration: true,\n            allowDragDrop: false,\n            aggregates: {\n                settings: null,\n                calculator: null\n            },\n            paging: {\n                enabled: true,\n                pageSize: 30,\n                pageSizeItems: [20, 30, 50, 100, 200]\n            },\n            columnWidths: {\n                autoResize: AutoResizeColumns.Always,\n                stringColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                numberColumns: {\n                    min: 60,\n                    default: 120\n                },\n                boolColumns: {\n                    min: 50,\n                    default: 80\n                },\n                dateColumns: {\n                    min: 80,\n                    default: 200\n                },\n                otherColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                rowNumColumn: {\n                    min: 40,\n                    default: 60\n                }\n            },\n            showPlusButton: false,\n            viewportRowsCount: null,\n            showActiveRow: true\n        };\n        this.rowsOnPagePromise = null;\n        this.containerInitialHeight = 0;\n        this.firstRender = true;\n        this.prevRowTotals = null;\n        this.landingIndex = -1;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this._activeRowIndex = -1;\n        if (options && options.paging) {\n            options.paging = utils.assign(this.defaultDataGridOptions.paging, options.paging);\n        }\n        this.options = this.mergeOptions(options);\n        this.processColumnWidthsOptions();\n        if (!this.options.slot)\n            throw Error('\"slot\" parameter is required to initialize EasyDataGrid');\n        if (!this.options.dataTable)\n            throw Error('\"dataTable\" parameter is required to initialize EasyDataGrid');\n        this.dataTable = options.dataTable;\n        this.eventEmitter = new EventEmitter(this);\n        this.cellRendererStore = new GridCellRendererStore(options);\n        this.columns = new GridColumnList(this.dataTable.columns, this);\n        this.setSlot(this.options.slot);\n        this.init(this.options);\n    }\n    mergeOptions(options) {\n        const colWidthOptions = utils.assignDeep({}, this.defaultDataGridOptions.columnWidths, options.columnWidths);\n        const pagingOptions = utils.assignDeep({}, this.defaultDataGridOptions.paging, options.paging);\n        const result = utils.assign({}, this.defaultDataGridOptions, options);\n        result.columnWidths = colWidthOptions;\n        result.paging = pagingOptions;\n        return result;\n    }\n    processColumnWidthsOptions() {\n        const widthOptions = this.options.columnWidths;\n        if (!widthOptions)\n            return;\n        //string columns\n        utils.getStringDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.stringColumns), widthOptions[dataType]);\n        });\n        //numeric columns\n        utils.getNumericDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.numberColumns), widthOptions[dataType]);\n        });\n        //bool columns\n        widthOptions[DataType.Bool] = Object.assign(Object.assign({}, widthOptions.boolColumns), widthOptions[DataType.Bool]);\n        //date columns\n        utils.getDateDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.dateColumns), widthOptions[dataType]);\n        });\n        //other columns\n        const knownTypes = [\n            ...utils.getStringDataTypes(),\n            ...utils.getNumericDataTypes(),\n            ...utils.getDateDataTypes(),\n            DataType.Bool\n        ];\n        utils.getAllDataTypes().forEach(dataType => {\n            if (!(dataType in knownTypes)) {\n                widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.otherColumns), widthOptions[dataType]);\n            }\n        });\n        widthOptions[DataType.Unknown] = widthOptions.otherColumns;\n    }\n    setSlot(slot) {\n        if (typeof slot === 'string') {\n            if (slot.length) {\n                if (slot[0] === '#') {\n                    this.slot = document.getElementById(slot.substring(1));\n                }\n                else if (slot[0] === '.') {\n                    const result = document.getElementsByClassName(slot.substring(1));\n                    if (result.length)\n                        this.slot = result[0];\n                }\n                else {\n                    throw Error('Unrecognized slot parameter ' +\n                        '(Must be id, class or HTMLElement): ' + slot);\n                }\n            }\n        }\n        else {\n            this.slot = slot;\n        }\n    }\n    /** Initializes grid widget according to the options passed in the parameter */\n    init(options) {\n        if (options.onInit) {\n            this.addEventListener('init', options.onInit);\n        }\n        if (options.onRowClick) {\n            this.addEventListener('rowClick', options.onRowClick);\n        }\n        if (options.onRowDbClick) {\n            this.addEventListener('rowDbClick', options.onRowDbClick);\n        }\n        if (options.onPlusButtonClick) {\n            this.addEventListener('plusButtonClick', options.onPlusButtonClick);\n        }\n        if (options.onColumnChanged) {\n            this.addEventListener('columnChanged', options.onColumnChanged);\n        }\n        if (options.onColumnDeleted) {\n            this.addEventListener('columnDeleted', options.onColumnDeleted);\n        }\n        if (options.onColumnMoved) {\n            this.addEventListener('columnMoved', options.onColumnMoved);\n        }\n        if (options.onPageChanged) {\n            this.addEventListener('pageChanged', options.onPageChanged);\n        }\n        if (options.onActiveRowChanged) {\n            this.addEventListener('activeRowChanged', options.onActiveRowChanged);\n        }\n        this.addEventListener('pageChanged', ev => this.activeRowIndex = -1);\n        utils.assignDeep(this.paginationOptions, options.pagination);\n        this.pagination.pageSize = this.options.paging.pageSize\n            || this.pagination.pageSize;\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"gridColumnMove\"],\n                onDragEnter: (_, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (_, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (_, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (_, ev) => {\n                    this.dataTable.columns.move(ev.data.column, this.landingIndex);\n                    this.refresh();\n                    this.fireEvent({\n                        type: 'columnMoved',\n                        columnId: ev.data.column.id,\n                        newIndex: this.landingIndex\n                    });\n                }\n            });\n        }\n        this.refresh();\n        this.fireEvent('init');\n    }\n    /** Fires a grid event. You can pass either an event type\n     * (like 'init', 'rowClick', 'pageChanged', etc )\n     * or a ready-to-use grid event object\n     * */\n    fireEvent(event) {\n        if (typeof event === \"string\") {\n            this.eventEmitter.fire(event);\n        }\n        else {\n            this.eventEmitter.fire(event.type, event);\n        }\n    }\n    /** Allows to set the data (represented by a EasyDataTable object)\n     *  or to replace the existing one associated with the grid */\n    setData(data) {\n        this.dataTable = data;\n        this.clear();\n        this.refresh();\n    }\n    /** Returns the EasyDataTable object associated with the grid via `setData()` call */\n    getData() {\n        return this.dataTable;\n    }\n    /** Gets the list of grid columns */\n    getColumns() {\n        return this.columns;\n    }\n    /** This function is called when the grid is destroyed */\n    destroy() {\n        this.slot.innerHTML = \"\";\n    }\n    /** Clears the current DOM object and re-renders everything from the scratch */\n    refresh() {\n        this.clearDOM();\n        this.render();\n    }\n    clearDOM() {\n        this.slot.innerHTML = '';\n    }\n    /** Clears all DOM object in the grid and return it to its initial state */\n    clear() {\n        this.pagination.page = 1;\n        this.clearDOM();\n    }\n    /** Renders the grid */\n    render() {\n        if (!this.hasData() && !this.options.showPlusButton)\n            return;\n        this.containerInitialHeight = this.slot.clientHeight;\n        this.rootDiv = document.createElement('div');\n        this.rootDiv.style.width = '100%';\n        this.rootDiv.classList.add(`${this.cssPrefix}-root`);\n        this.columns.sync(this.dataTable.columns, this.options.useRowNumeration);\n        this.renderHeader();\n        this.rootDiv.appendChild(this.headerDiv);\n        this.renderBody();\n        this.rootDiv.appendChild(this.bodyDiv);\n        this.renderFooter();\n        this.rootDiv.appendChild(this.footerDiv);\n        let gridContainer = document.createElement('div');\n        gridContainer.classList.add(`${this.cssPrefix}-container`);\n        gridContainer.appendChild(this.rootDiv);\n        this.slot.appendChild(gridContainer);\n        const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise\n                .then(() => this.updateHeight())\n                .then(() => {\n                this.firstRender = false;\n                this.rowsOnPagePromise = null;\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.updateHeight()\n                    .then(() => {\n                    this.firstRender = false;\n                    if (needAutoResize) {\n                        this.resizeColumns();\n                    }\n                });\n            }, 100);\n        }\n    }\n    updateHeight() {\n        return new Promise((resolve) => {\n            if (this.options.viewportRowsCount) {\n                const firstRow = this.bodyCellContainerDiv.firstElementChild;\n                const rowHeight = firstRow ? firstRow.offsetHeight : DEFAULT_ROW_HEIGHT;\n                const rowCount = this.options.viewportRowsCount; // || DEFAULT_ROW_COUNT;\n                let viewportHeight = rowHeight * rowCount;\n                domel(this.bodyViewportDiv)\n                    .setStyle('height', `${viewportHeight}px`);\n                setTimeout(() => {\n                    const sbHeight = this.bodyViewportDiv.offsetHeight - this.bodyViewportDiv.clientHeight;\n                    viewportHeight = viewportHeight + sbHeight;\n                    domel(this.bodyViewportDiv)\n                        .setStyle('height', `${viewportHeight}px`);\n                    resolve();\n                }, 100);\n                return;\n            }\n            else if (this.containerInitialHeight > 0) ;\n            resolve();\n        })\n            .then(() => {\n            if (this.options.fixHeightOnFirstRender && this.firstRender) {\n                this.slot.style.height = `${this.slot.offsetHeight}px`;\n            }\n        });\n    }\n    getContainerWidth() {\n        return this.columns.getItems()\n            .filter(col => col.isVisible)\n            .map(col => col.width)\n            .reduce((sum, current) => { return sum + current; });\n    }\n    renderHeader() {\n        this.headerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.headerViewportDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-header-viewport`)\n            .toDOM();\n        this.headerCellContainerDiv = domel('div', this.headerViewportDiv)\n            .addClass(`${this.cssPrefix}-header-cell-container`)\n            .toDOM();\n        this.headerRowDiv = domel('div', this.headerCellContainerDiv)\n            .addClass(`${this.cssPrefix}-header-row`)\n            .toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let hd = this.renderColumnHeader(column, index);\n            this.headerRowDiv.appendChild(hd);\n            if (column.isRowNum) {\n                domel(hd)\n                    .addChildElement(this.renderHeaderButtons());\n            }\n        });\n        const containerWidth = this.getContainerWidth();\n        domel(this.headerCellContainerDiv)\n            .setStyle('width', `${containerWidth}px`);\n    }\n    hasData() {\n        return this.dataTable.columns.count > 0;\n    }\n    renderColumnHeader(column, index) {\n        let colBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-header-cell`)\n            .data('col-idx', `${index}`)\n            .setStyle('width', `${column.width}px`);\n        if (column.dataColumn) {\n            colBuilder\n                .data('col-id', `${column.dataColumn.id}`);\n        }\n        let colDiv = colBuilder.toDOM();\n        domel('div', colDiv)\n            .addClass(`${this.cssPrefix}-header-cell-resize`);\n        if (!column.isRowNum) {\n            domel('div', colDiv)\n                .addClass(`${this.cssPrefix}-header-cell-label`)\n                .text(column.label);\n        }\n        if (column.description) {\n            domel('div', colDiv)\n                .addClass('question-mark')\n                .title(column.description);\n        }\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: colDiv,\n                scope: \"gridColumnMove\",\n                data: { column: column },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('div');\n                    attrLabel.innerText = column.label;\n                    dragImage.classList.add(`${this.cssPrefix}-sortable-helper`);\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    ev.dropEffect = DropEffect.Allow;\n                }\n            });\n        }\n        return colDiv;\n    }\n    renderBody() {\n        this.bodyDiv = domel('div')\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n        this.bodyViewportDiv = domel('div', this.bodyDiv)\n            .addClass(`${this.cssPrefix}-body-viewport`)\n            .attr('tabIndex', '0')\n            .toDOM();\n        this.bodyCellContainerDiv = domel('div', this.bodyViewportDiv)\n            .addClass(`${this.cssPrefix}-cell-container`)\n            .toDOM();\n        const showAggrs = this.canShowAggregates();\n        if (this.dataTable) {\n            this.showProgress();\n            this.rowsOnPagePromise = this.getRowsToRender()\n                .then((rows) => {\n                this.pagination.total = this.dataTable.getTotal();\n                this.hideProgress();\n                //prevent double rendering (bad solution, we have to figure out how to avoid this behavior properly)\n                this.bodyCellContainerDiv.innerHTML = '';\n                this.prevRowTotals = null;\n                let rowsToRender = 0;\n                if (rows.length) {\n                    const groups = showAggrs\n                        ? this.options.aggregates.settings.getGroups()\n                        : [];\n                    rowsToRender = (rows.length < this.pagination.pageSize)\n                        ? rows.length\n                        : this.pagination.pageSize;\n                    rows.forEach((row, index) => {\n                        if (showAggrs)\n                            this.updateTotalsState(groups, row);\n                        //we don't actually render the last row\n                        if (index < rowsToRender) {\n                            const tr = this.renderRow(row, index);\n                            this.bodyCellContainerDiv.appendChild(tr);\n                        }\n                    });\n                    const showGrandTotalsOnEachPage = this.options.aggregates && this.options.aggregates.showGrandTotalsOnEachPage;\n                    if (showAggrs && (this.isLastPage() || showGrandTotalsOnEachPage)) {\n                        const row = new DataRow(this.dataTable.columns, new Array(this.dataTable.columns.count));\n                        this.updateTotalsState(groups, row, true);\n                    }\n                }\n                const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n                if (needAutoResize) {\n                    this.resizeColumns();\n                }\n                else {\n                    const containerWidth = this.getContainerWidth();\n                    domel(this.bodyCellContainerDiv)\n                        .setStyle('width', `${containerWidth}px`);\n                }\n                return rowsToRender;\n            })\n                .catch(error => { console.error(error); return 0; });\n        }\n        this.bodyViewportDiv.addEventListener('scroll', ev => {\n            domel(this.headerViewportDiv)\n                .setStyle('margin-left', `-${this.bodyViewportDiv.scrollLeft}px`);\n        });\n        this.bodyViewportDiv.addEventListener('keydown', this.onViewportKeydown.bind(this));\n    }\n    isLastPage() {\n        if (this.dataTable.elasticChunks) {\n            return this.dataTable.totalIsKnown()\n                && (this.pagination.page * this.pagination.pageSize) >= this.pagination.total;\n        }\n        return this.pagination.page * this.pagination.pageSize >= this.pagination.total;\n    }\n    canShowAggregates() {\n        if (!this.options || !this.options.aggregates || !this.options.aggregates.settings)\n            return false;\n        const aggrSettings = this.options.aggregates.settings;\n        const result = (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())\n            && (aggrSettings.hasGroups() || aggrSettings.hasGrandTotals());\n        return result;\n    }\n    updateTotalsState(groups, newRow, isLast = false) {\n        const aggrSettings = this.options.aggregates.settings;\n        if (this.prevRowTotals && aggrSettings.hasGroups()) {\n            let changeLevel = -1;\n            for (let level = 1; level <= groups.length; level++) {\n                const group = groups[level - 1];\n                for (const col of group.columns) {\n                    if (!aggrSettings.compareValues(this.prevRowTotals.getValue(col), newRow.getValue(col))) {\n                        changeLevel = level;\n                        break;\n                    }\n                }\n                if (changeLevel !== -1)\n                    break;\n            }\n            if (changeLevel !== -1) {\n                for (let level = groups.length; level >= changeLevel; level--) {\n                    const row = new DataRow(this.dataTable.columns, this.prevRowTotals.toArray());\n                    const tr = this.renderTotalsRow(level, row);\n                    this.bodyCellContainerDiv.appendChild(tr);\n                }\n            }\n        }\n        if (isLast && aggrSettings.hasGrandTotals() && aggrSettings.hasAggregates()) {\n            const tr = this.renderTotalsRow(0, newRow);\n            this.bodyCellContainerDiv.appendChild(tr);\n        }\n        this.prevRowTotals = newRow;\n    }\n    applyGroupColumnTemplate(template, value, count) {\n        let result = template.replace(/{{\\s*GroupValue\\s*}}/g, value ? `${value}` : '-');\n        result = result.replace(/{{\\s*GroupCount\\s*}}/g, count ? `${count}` : '-');\n        return result;\n    }\n    renderTotalsRow(level, row) {\n        const aggrSettings = this.options.aggregates.settings;\n        const group = (level > 0)\n            ? aggrSettings.getGroups()[level - 1]\n            : { columns: [], aggregates: aggrSettings.getAggregates() };\n        const rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-totals`)\n            .addClass(`${this.cssPrefix}-totals-lv${level}`)\n            .data('totals-level', `${level}`)\n            .attr('tabindex', '-1');\n        const rowElement = rowBuilder.toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let val = '';\n            const colIndex = !column.isRowNum\n                ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                : -1;\n            if (!column.isRowNum && column.dataColumn) {\n                if (group.columns.indexOf(column.dataColumn.id) >= 0) {\n                    val = row.getValue(colIndex);\n                }\n            }\n            if (colIndex == this.dataTable.columns.count - 1) {\n                val = '.  .  .  .  .  .';\n            }\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        const aggrContainer = this.options.aggregates.calculator.getAggrContainer();\n        const aggrCols = aggrSettings.getAggregates().map(c => c.colId);\n        const key = aggrSettings.buildGroupKey(group, row);\n        aggrContainer.getAggregateData(level, key)\n            .then((values) => {\n            for (const aggrColId of aggrCols) {\n                row.setValue(aggrColId, values[aggrColId]);\n            }\n            rowElement.innerHTML = '';\n            this.columns.getItems().forEach((column, index) => {\n                if (!column.isVisible) {\n                    return;\n                }\n                let val = '';\n                const colIndex = !column.isRowNum\n                    ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                    : -1;\n                if (!column.isRowNum) {\n                    let isLastGroupColumn = false;\n                    if (column.dataColumn) {\n                        const groupColIndex = group.columns.indexOf(column.dataColumn.id);\n                        const aggrColIndex = aggrCols.indexOf(column.dataColumn.id);\n                        if (level > 0) {\n                            isLastGroupColumn = groupColIndex == group.columns.length - 1;\n                        }\n                        else {\n                            //if it's a grand total row consider first column as the last group column\n                            isLastGroupColumn = colIndex == 0;\n                        }\n                        if (groupColIndex >= 0 || aggrColIndex >= 0) {\n                            val = row.getValue(colIndex);\n                        }\n                    }\n                    let groupFooterTemplate = '';\n                    if (level > 0) {\n                        groupFooterTemplate = column.dataColumn.groupFooterColumnTemplate;\n                        //set the default template for the last grouping column\n                        if (!groupFooterTemplate && aggrSettings.hasRecordCount() && isLastGroupColumn) {\n                            groupFooterTemplate = '{{GroupValue}} ({{GroupCount}})';\n                        }\n                    }\n                    if (groupFooterTemplate) {\n                        const cellDiv = this.renderCell(column, index, val, rowElement);\n                        const innerCell = cellDiv.firstChild;\n                        val = innerCell.innerHTML;\n                        val = this.applyGroupColumnTemplate(groupFooterTemplate, val, values[aggrSettings.COUNT_FIELD_NAME]);\n                    }\n                }\n                const cellDiv = this.renderCell(column, index, val, rowElement);\n                rowElement.appendChild(cellDiv);\n            });\n        })\n            .catch((error) => console.error(error));\n        return rowElement;\n    }\n    onViewportKeydown(ev) {\n        if (this.options.showActiveRow) {\n            const rowCount = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row`).length;\n            let newValue;\n            switch (ev.key) {\n                case 'ArrowLeft':\n                    break;\n                case 'ArrowRight':\n                    break;\n                case 'ArrowUp':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? rowCount - 1 : this.activeRowIndex - 1;\n                    this.activeRowIndex = newValue >= 0 ? newValue : 0;\n                    break;\n                case 'ArrowDown':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? 0 : this.activeRowIndex + 1;\n                    this.activeRowIndex = newValue < rowCount ? newValue : rowCount - 1;\n                    break;\n            }\n        }\n    }\n    ensureRowVisibility(rowOrIndex) {\n        const row = typeof rowOrIndex === 'number'\n            ? this.getDataRow(rowOrIndex)\n            : rowOrIndex;\n        if (row) {\n            let rowRect = row.getBoundingClientRect();\n            const viewportRect = this.bodyViewportDiv.getBoundingClientRect();\n            const rowTop = rowRect.top - viewportRect.top;\n            const rowBottom = rowRect.bottom - viewportRect.top;\n            const viewportHeight = this.bodyViewportDiv.clientHeight;\n            const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n            if (rowTop > 0 &&\n                rowBottom <= viewportHeight &&\n                rowRect.top > 0 &&\n                rowRect.bottom < windowHeight) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowTop;\n            }\n            else if (rowBottom > viewportHeight) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowBottom - viewportHeight;\n            }\n            rowRect = row.getBoundingClientRect();\n            if (rowRect.top < 0) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.top;\n            }\n            else if (rowRect.bottom > windowHeight) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.bottom - windowHeight;\n            }\n        }\n    }\n    /** Returns a promise with the list of the rows to render on one page.\n     * The list contains pageSize+1 row to make it possible\n     * to render the totals row (if it appears to be on the edge between pages)\n     */\n    getRowsToRender() {\n        if (this.options.paging.enabled === false) {\n            return Promise.resolve(this.dataTable.getCachedRows());\n        }\n        return this.dataTable.getRows({\n            offset: (this.pagination.page - 1) * this.pagination.pageSize,\n            limit: this.pagination.pageSize + 1\n        })\n            .catch(error => {\n            console.error(error);\n            return [];\n        });\n    }\n    renderFooter() {\n        this.footerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-footer`)\n            .toDOM();\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise.then(count => {\n                this.footerDiv.innerHTML = '';\n                this.footerPaginateDiv = this.renderPageNavigator();\n                this.footerDiv.appendChild(this.footerPaginateDiv);\n                const pageInfoBlock = this.renderPageInfoBlock(count);\n                this.footerDiv.appendChild(pageInfoBlock);\n            });\n        }\n    }\n    renderPageInfoBlock(count) {\n        const pageInfoDiv = domel('div')\n            .addClass(`${this.cssPrefix}-page-info`)\n            .toDOM();\n        const rowCount = this.dataTable.getTotal();\n        if (rowCount > 0) {\n            const fistPageRecordNum = count\n                ? (this.pagination.page - 1) * this.pagination.pageSize + 1\n                : 0;\n            const lastPageRecordNum = count\n                ? fistPageRecordNum + count - 1\n                : 0;\n            let totalStr = this.dataTable.getTotal().toString();\n            if (this.dataTable.elasticChunks) {\n                const count = this.dataTable.getCachedCount();\n                const total = this.dataTable.getTotal();\n                if (count !== total)\n                    totalStr = '?';\n            }\n            pageInfoDiv.innerHTML = i18n.getText('GridPageInfo')\n                .replace('{FirstPageRecordNum}', `<span>${fistPageRecordNum.toString()}</span>`)\n                .replace('{LastPageRecordNum}', `<span>${lastPageRecordNum.toString()}</span>`)\n                .replace('{Total}', `<span>${totalStr}</span>`);\n        }\n        return pageInfoDiv;\n    }\n    showProgress() {\n    }\n    hideProgress() {\n    }\n    getLocalIndexByGlobal(index) {\n        if (this.pagination) {\n            return index % this.pagination.pageSize;\n        }\n        else {\n            return index;\n        }\n    }\n    getGlobalIndexByLocal(index) {\n        if (this.pagination) {\n            return (this.pagination.page - 1) * this.pagination.pageSize + index;\n        }\n        else {\n            return index;\n        }\n    }\n    renderRow(row, index) {\n        let indexGlobal = this.getGlobalIndexByLocal(index);\n        let rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-${index % 2 == 1 ? 'odd' : 'even'}`)\n            .data('row-idx', `${indexGlobal}`)\n            .attr('tabindex', '-1')\n            .on('click', (ev) => {\n            this.activeRowIndex = index;\n            this.fireEvent({\n                type: 'rowClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        })\n            .on('dblclick', (ev) => {\n            this.fireEvent({\n                type: 'rowDbClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        });\n        if (index == 0) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-first`);\n        }\n        let rowElement = rowBuilder.toDOM();\n        if (this.options.showActiveRow && index == this.activeRowIndex) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-active`);\n        }\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            const colindex = column.isRowNum ? -1 : this.dataTable.columns.getIndex(column.dataColumn.id);\n            let val = column.isRowNum ? indexGlobal + 1 : row.getValue(colindex);\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        return rowElement;\n    }\n    renderCell(column, colIndex, value, rowElement) {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-cell`)\n            .data('col-idx', `${colIndex}`)\n            .attr('tabindex', '-1')\n            .setStyle('width', `${column.width}px`);\n        if (column.align == GridColumnAlign.LEFT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-left`);\n        }\n        else if (column.align == GridColumnAlign.RIGHT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-right`);\n        }\n        else if (column.align == GridColumnAlign.CENTER) {\n            builder.addClass(`${this.cssPrefix}-cell-align-center`);\n        }\n        const cellElement = builder.toDOM();\n        const valueCell = cellElement.appendChild(domel('div')\n            .addClass(`${this.cssPrefix}-cell-value`)\n            .toDOM());\n        const cellRenderer = this.getCellRenderer(column);\n        if (cellRenderer) {\n            cellRenderer(value, column, valueCell, rowElement);\n        }\n        return cellElement;\n    }\n    getCellRenderer(column) {\n        let cellRenderer;\n        if (column.isRowNum) {\n            cellRenderer = this.cellRendererStore.getDefaultRendererByType(CellRendererType.NUMBER);\n        }\n        else {\n            cellRenderer = this.cellRendererStore.getDefaultRenderer(column.type);\n        }\n        if (this.options && this.options.onGetCellRenderer) {\n            cellRenderer = this.options.onGetCellRenderer(column, cellRenderer) || cellRenderer;\n        }\n        return cellRenderer;\n    }\n    /** Sets current grid pages (if paging is used) */\n    setPage(page) {\n        this.pagination.page = page;\n        this.fireEvent({ type: \"pageChanged\", page: page });\n        this.refresh();\n        this.bodyViewportDiv.focus();\n    }\n    renderPageNavigator() {\n        let paginateDiv = document.createElement('div');\n        paginateDiv.className = `${this.cssPrefix}-pagination-wrapper`;\n        const rowCount = this.dataTable.getTotal();\n        if (this.options.paging && this.options.paging.enabled && rowCount > 0) {\n            const prefix = this.paginationOptions.useBootstrap ? '' : `${this.cssPrefix}-`;\n            const buttonClickHandler = (ev) => {\n                const element = ev.target;\n                if (element.hasAttribute('data-page')) {\n                    const page = parseInt(element.getAttribute('data-page'));\n                    this.setPage(page);\n                }\n            };\n            const renderPageCell = (pageIndex, content, disabled, extreme, active) => {\n                const li = document.createElement('li');\n                li.className = `${prefix}page-item`;\n                if (!extreme) {\n                    if (active) {\n                        li.className += ' active';\n                    }\n                    const a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.innerHTML = content || pageIndex.toString();\n                    a.setAttribute(\"data-page\", `${pageIndex}`);\n                    a.className = `${prefix}page-link`;\n                    a.addEventListener(\"click\", buttonClickHandler);\n                    li.appendChild(a);\n                    return li;\n                }\n                let a = document.createElement('span');\n                a.setAttribute('aria-hidden', 'true');\n                a.className = `${prefix}page-link`;\n                if (disabled) {\n                    li.className += ' disabled';\n                }\n                else {\n                    if (this.paginationOptions.useBootstrap) {\n                        a = document.createElement('a');\n                        a.setAttribute('href', 'javascript:void(0)');\n                        a.setAttribute(\"data-page\", `${pageIndex}`);\n                    }\n                    else {\n                        let newA = document.createElement('a');\n                        newA.setAttribute('href', 'javascript:void(0)');\n                        newA.setAttribute('data-page', `${pageIndex}`);\n                        a = newA;\n                    }\n                    a.className = `${prefix}page-link`;\n                    a.addEventListener(\"click\", buttonClickHandler);\n                }\n                a.innerHTML = content;\n                li.appendChild(a);\n                return li;\n            };\n            if (this.dataTable.elasticChunks) {\n                const pageIndex = this.pagination.page || 1;\n                let ul = document.createElement('ul');\n                ul.className = `${prefix}pagination`;\n                let cell = renderPageCell(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n                ul.appendChild(cell);\n                cell = renderPageCell(pageIndex + 1, '&raquo;', this.isLastPage(), true, false);\n                ul.appendChild(cell);\n                paginateDiv.appendChild(ul);\n            }\n            else {\n                if (this.pagination.total > this.pagination.pageSize) {\n                    const pageIndex = this.pagination.page || 1;\n                    const pageCount = Math.ceil(this.pagination.total / this.pagination.pageSize) || 1;\n                    const maxButtonCount = this.paginationOptions.maxButtonCount || 10;\n                    const zeroBasedIndex = pageIndex - 1;\n                    let firstPageIndex = zeroBasedIndex - (zeroBasedIndex % maxButtonCount) + 1;\n                    let lastPageIndex = firstPageIndex + maxButtonCount - 1;\n                    if (lastPageIndex > pageCount) {\n                        lastPageIndex = pageCount;\n                    }\n                    let ul = document.createElement('ul');\n                    ul.className = `${prefix}pagination`;\n                    let cell = renderPageCell(firstPageIndex - 1, '&laquo;', firstPageIndex == 1, true, false);\n                    ul.appendChild(cell);\n                    for (let i = firstPageIndex; i <= lastPageIndex; i++) {\n                        cell = renderPageCell(i, i.toString(), false, false, i == pageIndex);\n                        ul.appendChild(cell);\n                    }\n                    cell = renderPageCell(lastPageIndex + 1, '&raquo;', lastPageIndex == pageCount, true, false);\n                    ul.appendChild(cell);\n                    paginateDiv.appendChild(ul);\n                }\n            }\n            if (this.options.paging.allowPageSizeChange) {\n                const selectChangeHandler = (ev) => {\n                    const newValue = parseInt(ev.target.value);\n                    this.pagination.pageSize = newValue;\n                    this.pagination.page = 1;\n                    this.refresh();\n                };\n                const pageSizes = document.createElement('div');\n                pageSizes.className = `${this.cssPrefix}-page-sizes`;\n                const selectSize = document.createElement('div');\n                selectSize.className = `kfrm-select ${this.cssPrefix}-page-sizes-select`;\n                pageSizes.appendChild(selectSize);\n                const sel = document.createElement('select');\n                const selOptions = this.options.paging.pageSizeItems || [];\n                const selSet = new Set(selOptions);\n                selSet.add(this.options.paging.pageSize || 20);\n                Array.from(selSet).forEach(el => {\n                    const option = document.createElement(\"option\");\n                    option.value = el.toString();\n                    option.text = el.toString();\n                    sel.appendChild(option);\n                });\n                sel.value = (this.pagination.pageSize || 20).toString();\n                selectSize.appendChild(sel);\n                sel.addEventListener('change', selectChangeHandler);\n                const labelDiv = document.createElement('div');\n                labelDiv.className = `${this.cssPrefix}-page-sizes-label`;\n                pageSizes.appendChild(labelDiv);\n                const label = document.createElement('span');\n                label.innerText = i18n.getText('GridItemsPerPage');\n                labelDiv.appendChild(label);\n                paginateDiv.appendChild(pageSizes);\n            }\n        }\n        return paginateDiv;\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, event => handler(event.data));\n    }\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    renderHeaderButtons() {\n        if (this.options.showPlusButton) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-header-btn-plus`)\n                .title(this.options.plusButtonTitle || 'Add')\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .on('click', (e) => {\n                e.preventDefault();\n                this.fireEvent({\n                    type: 'plusButtonClick',\n                    sourceEvent: e\n                });\n            }))\n                .toDOM();\n        }\n        return domel('span')\n            .addText('#')\n            .toDOM();\n    }\n    showLandingSlot(pageX, pageY) {\n        const colElems = this.headerRowDiv.querySelectorAll(`[class*=${this.cssPrefix}-table-col]`);\n        const cols = [];\n        for (let i = 1; i < colElems.length; i++) {\n            const rowElem = colElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            cols.push(rowElem);\n        }\n        if (cols.length === 0) {\n            this.landingIndex = 0;\n            this.headerRowDiv.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let col of cols) {\n            const colPos = getElementAbsolutePos(col);\n            const width = col.offsetWidth;\n            if (pageX > colPos.x && pageX < colPos.x + width) {\n                // -1 as we don't need to count add button here\n                newLandingIndex = parseInt(col.getAttribute('data-col-idx')) - 1;\n            }\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < cols.length) {\n                this.headerRowDiv.insertBefore(this.landingSlot, cols[this.landingIndex]);\n            }\n            else {\n                this.headerRowDiv.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    get activeRowIndex() {\n        return this._activeRowIndex;\n    }\n    set activeRowIndex(value) {\n        if (value !== this._activeRowIndex) {\n            const oldValue = this._activeRowIndex;\n            this._activeRowIndex = value;\n            this.updateActiveRow();\n            this.fireEvent({\n                type: 'activeRowChanged',\n                oldValue,\n                newValue: this.activeRowIndex,\n                rowIndex: this.getGlobalIndexByLocal(this.activeRowIndex)\n            });\n        }\n    }\n    updateActiveRow() {\n        if (this.options.showActiveRow) {\n            const rows = this.bodyCellContainerDiv.querySelectorAll(`[class*=${this.cssPrefix}-row-active]`);\n            rows.forEach(el => { el.classList.remove(`${this.cssPrefix}-row-active`); });\n            const activeRow = this.getActiveRow();\n            if (activeRow) {\n                activeRow.classList.add(`${this.cssPrefix}-row-active`);\n                this.ensureRowVisibility(this.activeRowIndex);\n            }\n        }\n    }\n    getActiveRow() {\n        return this.getDataRow(this.activeRowIndex);\n    }\n    getDataRow(index) {\n        const rows = Array.from(this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row:not(.${this.cssPrefix}-row-totals)`));\n        if (index >= 0 && index < rows.length)\n            return rows[index];\n        return null;\n    }\n    /** Makes the grid focused for keyboard events */\n    focus() {\n        this.bodyViewportDiv.focus();\n    }\n    /** Resizes columns according to the data they represent */\n    resizeColumns() {\n        if (this.options.columnWidths.autoResize === AutoResizeColumns.Never)\n            return;\n        const containerWidth = this.bodyCellContainerDiv.style.width;\n        this.bodyCellContainerDiv.style.visibility = 'hidden';\n        this.bodyCellContainerDiv.style.width = '1px';\n        //this.headerRowDiv.style.visibility = 'hidden';\n        this.headerRowDiv.style.width = '1px';\n        let sumWidth = 0;\n        const columns = this.columns.getItems();\n        const headerCells = this.headerCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-header-cell`);\n        let headerIdx = 0;\n        for (let idx = 0; idx < this.columns.count; idx++) {\n            const column = columns[idx];\n            if (!column.isVisible)\n                continue;\n            const calculatedWidth = this.options.columnWidths.autoResize !== AutoResizeColumns.Always && column.dataColumn\n                ? column.dataColumn.calculatedWidth\n                : 0;\n            const cellValues = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-cell[data-col-idx=\"${idx}\"] > .${this.cssPrefix}-cell-value`);\n            let maxWidth = 0;\n            if (calculatedWidth > 0) {\n                sumWidth += calculatedWidth;\n                column.width = calculatedWidth;\n                cellValues.forEach(value => {\n                    value.parentElement.style.width = `${calculatedWidth}px`;\n                });\n                headerCells[headerIdx].style.width = `${calculatedWidth}px`;\n            }\n            else {\n                if (cellValues.length == 0) {\n                    headerCells[headerIdx].style.width = null;\n                    headerCells[headerIdx].style.whiteSpace = 'nowrap';\n                }\n                maxWidth = headerCells[headerIdx].offsetWidth;\n                if (cellValues.length > 0) {\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = null;\n                        const width = value.parentElement.offsetWidth;\n                        if (width > maxWidth) {\n                            maxWidth = width;\n                        }\n                    });\n                    maxWidth += 3;\n                    const maxOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.max || 500\n                        : this.options.columnWidths[column.dataColumn.type].max || 2000;\n                    const minOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.min || 0\n                        : this.options.columnWidths[column.dataColumn.type].min || 20;\n                    if (maxWidth > maxOption) {\n                        maxWidth = maxOption;\n                    }\n                    if (maxWidth < minOption) {\n                        maxWidth = minOption;\n                    }\n                    if (utils.isNumericType(column.type)) {\n                        //increase the calculated width in 1.3 times for numeric columns\n                        maxWidth = Math.round(maxWidth * 1.3);\n                    }\n                    sumWidth += maxWidth;\n                    column.width = maxWidth;\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = `${maxWidth}px`;\n                    });\n                    headerCells[headerIdx].style.width = `${maxWidth}px`;\n                    if (column.dataColumn) {\n                        column.dataColumn.calculatedWidth = maxWidth;\n                    }\n                }\n                else {\n                    sumWidth += maxWidth;\n                }\n            }\n            headerIdx++;\n        }\n        if (sumWidth > 0) {\n            this.bodyCellContainerDiv.style.width = `${sumWidth}px`;\n            this.headerCellContainerDiv.style.width = `${sumWidth}px`;\n        }\n        else {\n            this.bodyCellContainerDiv.style.width = containerWidth;\n            this.headerCellContainerDiv.style.width = containerWidth;\n        }\n        this.bodyCellContainerDiv.style.visibility = null;\n        this.headerRowDiv.removeAttribute('style');\n    }\n}\n\nclass Calendar {\n    get cssPrefix() {\n        return 'kdtp-cal';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n        if (!this.options.yearRange) {\n            this.options.yearRange = 'c-10:c+10';\n        }\n    }\n    setDate(date) {\n        this.currentDate = new Date(date);\n    }\n    getDate() {\n        return new Date(this.currentDate);\n    }\n    dateChanged(apply) {\n        if (this.options.onDateChanged) {\n            this.options.onDateChanged(this.currentDate, apply);\n        }\n    }\n}\n\nclass DateTimePicker {\n    get cssPrefix() {\n        return 'kdtp';\n    }\n    constructor(options) {\n        this.calendar = null;\n        this.timePicker = null;\n        this.options = options;\n        this.render();\n    }\n    setDateTime(dateTime) {\n        this.currentDateTime = new Date(dateTime);\n        if (this.calendar) {\n            this.calendar.setDate(this.currentDateTime);\n        }\n        if (this.timePicker) {\n            this.timePicker.setTime(this.currentDateTime);\n        }\n    }\n    getDateTime() {\n        return new Date(this.currentDateTime);\n    }\n    render() {\n        if (this.options.showCalendar) {\n            this.calendar = this.createCalendar({\n                yearRange: this.options.yearRange,\n                showDateTimeInput: this.options.showDateTimeInput,\n                timePickerIsUsed: this.options.showTimePicker,\n                oneClickDateSelection: this.options.oneClickDateSelection,\n                onDateChanged: (date, apply) => {\n                    this.currentDateTime = date;\n                    if (this.timePicker) {\n                        this.timePicker.setTime(this.currentDateTime);\n                    }\n                    if (this.options.showTimePicker) {\n                        this.dateTimeChanged();\n                    }\n                    if (apply) {\n                        this.apply(this.currentDateTime);\n                    }\n                }\n            });\n            if (this.calendar)\n                this.calendar.render();\n        }\n        if (this.options.showTimePicker) {\n            this.timePicker = this.createTimePicker({\n                onTimeChanged: (time) => {\n                    this.currentDateTime.setHours(time.getHours());\n                    this.currentDateTime.setMinutes(time.getMinutes());\n                    if (this.calendar) {\n                        this.calendar.setDate(this.currentDateTime);\n                    }\n                    this.dateTimeChanged();\n                }\n            });\n            if (this.timePicker)\n                this.timePicker.render();\n        }\n        this.setDateTime(new Date());\n    }\n    createCalendar(options) {\n        return null;\n    }\n    createTimePicker(options) {\n        return null;\n    }\n    show(anchor) {\n        if (this.options.beforeShow) {\n            this.options.beforeShow();\n        }\n        const pos = getElementAbsolutePos(anchor || document.body);\n        this.slot.style.top = pos.y + anchor.clientHeight + 'px';\n        this.slot.style.left = pos.x + 'px';\n    }\n    apply(date) {\n        if (this.options.onApply) {\n            this.options.onApply(date);\n        }\n        this.destroy();\n    }\n    cancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n        this.destroy();\n    }\n    destroy() {\n        if (this.slot && this.slot.parentElement) {\n            this.slot.parentElement.removeChild(this.slot);\n        }\n    }\n    dateTimeChanged() {\n        if (this.options.onDateTimeChanged) {\n            this.options.onDateTimeChanged(this.currentDateTime);\n        }\n    }\n}\n\nclass DefaultCalendar extends Calendar {\n    constructor(slot, options) {\n        super(slot, options);\n        this.daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.calendarBody = null;\n        this.isManualInputChanging = false;\n        for (let i = 0; i < this.daysOfWeek.length; i++) {\n            this.daysOfWeek[i] = i18n.getShortWeekDayName(i + 1);\n        }\n        for (let i = 0; i < this.months.length; i++) {\n            this.months[i] = i18n.getLongMonthName(i + 1);\n        }\n    }\n    setDate(date) {\n        super.setDate(date);\n        this.selectedMonth = this.currentDate.getMonth();\n        this.selectedYear = this.currentDate.getFullYear();\n        this.rerenderMonth();\n    }\n    render() {\n        const header = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`);\n        if (this.options.showDateTimeInput) {\n            header\n                .addChildElement(this.renderManualDateInput());\n        }\n        else {\n            header\n                .addChild('span', builder => this.headerTextElem = builder.toDOM());\n        }\n        domel(this.slot)\n            .addChildElement(this.renderCalendarButtons());\n        this.calendarBody = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n    }\n    getInputDateFormat() {\n        const settings = i18n.getLocaleSettings();\n        return (this.options.timePickerIsUsed)\n            ? `${settings.editDateFormat} ${settings.editTimeFormat}`\n            : settings.editDateFormat;\n    }\n    renderManualDateInput() {\n        const format = this.getInputDateFormat();\n        const builder = domel('input')\n            .attr('placeholder', format)\n            .addClass(`${this.cssPrefix}-header-input`);\n        builder\n            .mask(format.replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99'))\n            .on('input', ev => {\n            builder.removeClass('error');\n            try {\n                this.isManualInputChanging = true;\n                const newDate = utils.strToDateTime(this.manualInputElem.value, format);\n                this.currentDate = newDate;\n                this.jump(this.currentDate.getFullYear(), this.currentDate.getMonth());\n                this.dateChanged(false);\n            }\n            catch (e) {\n                builder.addClass('error');\n            }\n            finally {\n                this.isManualInputChanging = false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.manualInputElem.className.indexOf('error') < 0\n                    && !this.isManualInputChanging)\n                    this.dateChanged(true);\n            }\n        })\n            .on('focus', () => {\n            setTimeout(() => {\n                this.manualInputElem.selectionStart = 0;\n                this.manualInputElem.selectionEnd = 0;\n            }, 50);\n        });\n        this.manualInputElem = builder.toDOM();\n        return this.manualInputElem;\n    }\n    updateDisplayedDateValue() {\n        if (this.manualInputElem) {\n            if (!this.isManualInputChanging) {\n                const format = this.getInputDateFormat();\n                this.manualInputElem.value = i18n.dateTimeToStr(this.currentDate, format);\n                this.manualInputElem.focus();\n            }\n        }\n        else if (this.headerTextElem) {\n            const locale = i18n.getCurrentLocale();\n            this.headerTextElem.innerText = this.currentDate.toLocaleString(locale == 'en' ? undefined : locale, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            });\n        }\n    }\n    renderCalendarButtons() {\n        const builder = domel('nav')\n            .addClass(`${this.cssPrefix}-nav`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-prev`)\n            .on('click', () => {\n            this.prev();\n        })\n            .addChild('span', builder => builder.html('&lsaquo;')))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-selectors`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-month`)\n            .addChild('select', builder => {\n            builder\n                .on('change', () => {\n                this.jump(this.selectedYear, parseInt(this.selectMonthElem.value));\n            });\n            for (let i = 0; i < this.months.length; i++) {\n                builder.addChild('option', builder => builder\n                    .attr('value', i.toString())\n                    .text(this.months[i]));\n            }\n            this.selectMonthElem = builder.toDOM();\n        }))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-year`)\n            .addChild('select', builder => this.selectYearElem = builder\n            .on('change', () => {\n            this.jump(parseInt(this.selectYearElem.value), this.selectedMonth);\n        })\n            .toDOM())))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-next`)\n            .on('click', () => {\n            this.next();\n        })\n            .addChild('span', builder => builder.html('&rsaquo;')));\n        return builder.toDOM();\n    }\n    prev() {\n        this.selectedYear = (this.selectedMonth === 0) ? this.selectedYear - 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth === 0) ? 11 : this.selectedMonth - 1;\n        this.rerenderMonth();\n    }\n    next() {\n        this.selectedYear = (this.selectedMonth === 11) ? this.selectedYear + 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth + 1) % 12;\n        this.rerenderMonth();\n    }\n    rerenderSelectYear() {\n        const match = /c-(\\d*):c\\+(\\d*)/g.exec(this.options.yearRange);\n        let minusYear = 0;\n        let plusYear = 1;\n        if (match !== null) {\n            minusYear = parseInt(match[1]);\n            plusYear = parseInt(match[2]);\n        }\n        this.selectYearElem.innerHTML = '';\n        for (let i = 0; i <= minusYear + plusYear; i++) {\n            let op = document.createElement(\"option\");\n            let year = this.selectedYear - minusYear + i;\n            op.value = year.toString();\n            op.innerText = year.toString();\n            this.selectYearElem.appendChild(op);\n        }\n    }\n    jump(year, month) {\n        this.selectedYear = year;\n        this.selectedMonth = month;\n        this.rerenderMonth();\n    }\n    rerenderMonth() {\n        //header text\n        this.updateDisplayedDateValue();\n        this.rerenderSelectYear();\n        let firstDay = (new Date(this.selectedYear, this.selectedMonth)).getDay();\n        let daysInMonth = new Date(this.selectedYear, this.selectedMonth + 1, 0).getDate();\n        this.calendarBody.innerHTML = \"\";\n        this.selectYearElem.value = this.selectedYear.toString();\n        this.selectMonthElem.value = this.selectedMonth.toString();\n        this.daysOfWeek.forEach((day, idx) => {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-weekday`)\n                .addClass(idx == 0 || idx == 6 ? `${this.cssPrefix}-weekend` : '')\n                .text(day);\n        });\n        // Add empty cells before first day\n        for (let i = 0; i < firstDay; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n        // Add all month days\n        const today = new Date();\n        for (let day = 1; day <= daysInMonth; day++) {\n            const builder = domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day`)\n                .attr('data-date', day.toString())\n                .text(day.toString())\n                .on('click', (e) => {\n                this.currentDate.setFullYear(this.selectedYear);\n                this.currentDate.setMonth(this.selectedMonth);\n                this.currentDate.setDate(parseInt(e.target.getAttribute('data-date')));\n                this.dateChanged(this.options.oneClickDateSelection);\n            });\n            if (day === today.getDate() && this.selectedYear === today.getFullYear() && this.selectedMonth === today.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-current`);\n            }\n            if (day === this.currentDate.getDate() && this.selectedYear === this.currentDate.getFullYear() && this.selectedMonth === this.currentDate.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-selected`);\n            }\n            const dayOfWeek = (firstDay + day - 1) % 7;\n            if (dayOfWeek == 0 || dayOfWeek == 6) {\n                builder.addClass(`${this.cssPrefix}-weekend`);\n            }\n            if (typeof this.options.onDrawDay === \"function\") {\n                this.options.onDrawDay.apply(builder.toDOM(), [\n                    builder.toDOM(),\n                    new Date(this.selectedYear, this.selectedMonth, day)\n                ]);\n            }\n        }\n        // Add empty cells after last day\n        const cellsDrawnInLastRow = (firstDay + daysInMonth) % 7;\n        const cellsToDraw = cellsDrawnInLastRow == 0 ? 0 : 7 - cellsDrawnInLastRow;\n        for (let i = 0; i < cellsToDraw; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n    }\n    dateChanged(apply) {\n        super.dateChanged(apply);\n        this.rerenderMonth();\n    }\n}\n\nclass TimePicker {\n    get cssPrefix() {\n        return 'kdtp-tp';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n    }\n    setTime(time) {\n        this.currentTime = new Date(time);\n    }\n    getTime() {\n        return new Date(this.currentTime);\n    }\n    timeChanged() {\n        if (this.options.onTimeChanged) {\n            this.options.onTimeChanged(this.currentTime);\n        }\n    }\n}\n\nclass DefaultTimePicker extends TimePicker {\n    setTime(time) {\n        super.setTime(time);\n        this.updateDisplayedTime();\n        this.hoursInput.valueAsNumber = time.getHours();\n        this.minutesInput.valueAsNumber = time.getMinutes();\n    }\n    render() {\n        domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-time`)\n            .addChild('span', builder => this.timeText = builder.toDOM())\n            .toDOM();\n        const slidersBuilder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-sliders`);\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Hours')\n            .addChild('input', builder => this.hoursInput = builder\n            .addClass(`${this.cssPrefix}-input-hours`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '23')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setHours(this.hoursInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Minutes')\n            .addChild('input', builder => this.minutesInput = builder\n            .addClass(`${this.cssPrefix}-input-minutes`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '59')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setMinutes(this.minutesInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        return this.slot;\n    }\n    updateDisplayedTime() {\n        const locale = i18n.getCurrentLocale();\n        const timeToDraw = this.currentTime.toLocaleString(locale == 'en' ? undefined : locale, {\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        this.timeText.innerText = timeToDraw;\n    }\n}\n\nclass DefaultDateTimePicker extends DateTimePicker {\n    render() {\n        const sb = domel('div', document.body)\n            .addClass(`${this.cssPrefix}`)\n            .attr('tabIndex', '0')\n            .setStyle('position', 'absolute')\n            .setStyle('top', '-1000px')\n            .setStyle('left', '-1000px')\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.cancel();\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                this.apply(this.getDateTime());\n            }\n            return false;\n        });\n        if (this.options.zIndex) {\n            sb.setStyle('z-index', `${this.options.zIndex}`);\n        }\n        this.slot = sb.toDOM();\n        super.render();\n        this.renderButtons();\n        this.globalMouseDownHandler = (e) => {\n            let event = window.event || e;\n            event.srcElement || event.target;\n            let isOutside = !this.slot.contains(event.target);\n            if (isOutside) {\n                document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n                this.cancel();\n            }\n            return true;\n        };\n    }\n    renderButtons() {\n        const builder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-buttons`)\n            .addChild('button', b => this.nowButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-now`)\n            .text(i18n.getText('ButtonNow'))\n            .on('click', () => {\n            this.setDateTime(new Date());\n            this.dateTimeChanged();\n            return false;\n        })\n            .toDOM());\n        if (this.options.showTimePicker || !this.options.oneClickDateSelection) {\n            builder.addChild('button', b => this.submitButton = b\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', () => {\n                this.apply(this.getDateTime());\n                return false;\n            })\n                .toDOM());\n        }\n        builder.addChild('button', b => this.submitButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-cancel`)\n            .text(i18n.getText('ButtonCancel'))\n            .on('click', () => {\n            this.cancel();\n            return false;\n        })\n            .toDOM());\n    }\n    createCalendar(options) {\n        this.calendarSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-cal`)\n                .toDOM();\n        return new DefaultCalendar(this.calendarSlot, options);\n    }\n    createTimePicker(options) {\n        this.timePickerSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-tp`)\n                .toDOM();\n        return new DefaultTimePicker(this.timePickerSlot, options);\n    }\n    show(anchor) {\n        if (this.options.showDateTimeInput) {\n            if (this.options.beforeShow) {\n                this.options.beforeShow();\n            }\n            const anchorPos = getElementAbsolutePos(anchor || document.body);\n            const parentPos = getElementAbsolutePos(anchor ? anchor.parentElement || anchor : document.body);\n            this.slot.style.top = parentPos.y + 'px';\n            this.slot.style.left = anchorPos.x + 'px';\n        }\n        else {\n            super.show(anchor);\n            this.slot.focus();\n        }\n        setTimeout(() => {\n            document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n        }, 1);\n    }\n}\n\nvar DialogFooterAlignment;\n(function (DialogFooterAlignment) {\n    DialogFooterAlignment[DialogFooterAlignment[\"Left\"] = 1] = \"Left\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Center\"] = 2] = \"Center\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Right\"] = 3] = \"Right\";\n})(DialogFooterAlignment || (DialogFooterAlignment = {}));\n\nconst cssPrefix = \"kdlg\";\nclass DefaultDialogService {\n    openConfirm(title, content, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-confirm\">${content}</div>`;\n        const options = {\n            title: title,\n            closable: false,\n            submitable: true,\n            cancelable: true,\n            body: template\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                callback(true);\n            };\n            options.onCancel = () => {\n                callback(false);\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                resolve(true);\n            };\n            options.onCancel = () => {\n                resolve(false);\n            };\n            this.open(options);\n        });\n    }\n    openPrompt(title, content, defVal, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-content\">${content}</label>\r\n                <input type=\"text\" name=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        const options = {\n            title: title,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            body: template,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                input.focus();\n            }\n        };\n        const processInput = (callback) => {\n            const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n            const result = input.value;\n            if (result && result.replace(/\\s/g, '').length > 0) {\n                callback(result);\n                return true;\n            }\n            input.classList.add('eqjs-invalid');\n            return false;\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                return processInput(callback);\n            };\n            options.onCancel = () => {\n                callback(\"\");\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                return processInput(resolve);\n            };\n            options.onCancel = () => {\n                resolve(\"\");\n            };\n            this.open(options);\n        });\n    }\n    open(options, data) {\n        const dialog = new DefaultDialog(options, data);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    createSet(options) {\n        return new DefaultDialogSet(options, this);\n    }\n    untrack(dlg) {\n        const index = DefaultDialogService.openDialogs.indexOf(dlg);\n        if (index >= 0) {\n            DefaultDialogService.openDialogs.splice(index, 1);\n        }\n    }\n    track(dlg) {\n        DefaultDialogService.openDialogs.push(dlg);\n    }\n    openProgress(options) {\n        const dialog = new DefaultProgressDialog(options);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    getAllDialogs() {\n        return Array.from(DefaultDialogService.openDialogs);\n    }\n    closeAllDialogs() {\n        for (const dialog of Array.from(DefaultDialogService.openDialogs)) {\n            dialog.close();\n        }\n    }\n}\nDefaultDialogService.openDialogs = [];\nclass DefaultDialog {\n    constructor(options, data) {\n        this.options = options;\n        this.submitHandler = (token) => {\n            if (this.options.onSubmit && this.options.onSubmit(this, token) === false) {\n                return false;\n            }\n            this.destroy();\n            return true;\n        };\n        this.cancelHandler = () => {\n            if (this.options.onCancel) {\n                this.options.onCancel(this);\n            }\n            this.destroy();\n        };\n        this.keydownHandler = (ev) => {\n            if (ev.keyCode == 13 && this.isActiveDialog()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.submitHandler()) {\n                    window.removeEventListener('keydown', this.keydownHandler, false);\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.dialogId = utils.generateId('dlg');\n        this.data = data;\n        this.slot =\n            domel('div', document.body)\n                .attr('tab-index', '-1')\n                .data('dialog-id', this.dialogId)\n                .addClass(`${cssPrefix}-modal`, 'is-active')\n                .focus()\n                .addChild('div', b => b\n                .addClass('kdlg-modal-background'))\n                .addChild('div', b => this.windowElement = b\n                .addClass(`${cssPrefix}-modal-window`)\n                .addChild('header', b => {\n                this.headerElement = b\n                    .addClass(`${cssPrefix}-header`)\n                    .addChild('p', b => b\n                    .addClass(`${cssPrefix}-header-title`)\n                    .addText(options.title))\n                    .toDOM();\n                if (options.closable !== false)\n                    b.addChild('button', b => b\n                        .addClass(`${cssPrefix}-modal-close`)\n                        .on('click', () => {\n                        this.cancelHandler();\n                    })\n                        .focus());\n            })\n                .addChild('div', b => {\n                b.addClass(`${cssPrefix}-alert-container`);\n                this.alertElement = b.toDOM();\n            })\n                .addChild('section', b => {\n                this.bodyElement = b\n                    .addClass(`${cssPrefix}-body`)\n                    .toDOM();\n                if (typeof options.body === 'string') {\n                    const html = liquid.renderLiquidTemplate(options.body, data);\n                    b.addHtml(html);\n                }\n                else {\n                    b.addChildElement(options.body);\n                }\n            })\n                .addChild('footer', b => {\n                let alignClass = null;\n                if (options.footerAlignment && options.footerAlignment == DialogFooterAlignment.Center) {\n                    alignClass = 'align-center';\n                }\n                else {\n                    alignClass = 'align-right';\n                }\n                this.footerElement = b\n                    .addClass(`${cssPrefix}-footer`)\n                    .toDOM();\n                b.addClass(alignClass);\n                if (options.submitable === false)\n                    return;\n                b.addChild('button', bb => {\n                    bb.id(this.dialogId + '-btn-submit')\n                        .addClass('kfrm-button', 'is-info')\n                        .addText(options.submitButtonText || i18n.getText('ButtonOK'));\n                    if (options.recaptchaSiteKey) {\n                        bb.data('sitekey', options.recaptchaSiteKey);\n                        bb.addClass('g-recaptcha');\n                        bb.on('click', (e) => {\n                            if (grecaptcha) {\n                                grecaptcha.ready(() => {\n                                    grecaptcha.execute(options.recaptchaSiteKey, { action: 'submit' })\n                                        .then((token) => {\n                                        this.submitHandler(token);\n                                    });\n                                });\n                            }\n                            else {\n                                this.submitHandler();\n                            }\n                        });\n                    }\n                    else {\n                        bb.on('click', (e) => {\n                            this.submitHandler();\n                        });\n                    }\n                    bb.focus();\n                });\n                if (options.cancelable !== false)\n                    b.addChild('button', bb => bb\n                        .id(this.dialogId + '-btn-cancel')\n                        .addClass('kfrm-button')\n                        .addText(options.cancelButtonText || i18n.getText('ButtonCancel'))\n                        .on('click', (e) => {\n                        this.cancelHandler();\n                    }));\n            })\n                .toDOM())\n                .toDOM();\n    }\n    getData() {\n        return this.data;\n    }\n    getRootElement() {\n        return this.slot;\n    }\n    getSubmitButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-submit');\n    }\n    getCancelButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-cancel');\n    }\n    open() {\n        if (this.options.beforeOpen) {\n            this.options.beforeOpen(this);\n        }\n        domel(this.slot).show();\n        if (this.options.arrangeParents) {\n            this.arrangeParents(true);\n        }\n        const windowDiv = this.slot\n            .querySelector(`.${cssPrefix}-modal-window`);\n        if (this.options.height) {\n            windowDiv.style.height = typeof this.options.height === 'string'\n                ? this.options.height\n                : `${this.options.height}px`;\n        }\n        if (this.options.width) {\n            windowDiv.style.width = typeof this.options.width === 'string'\n                ? this.options.width\n                : `${this.options.width}px`;\n        }\n        if (this.options.submitOnEnter) {\n            window.addEventListener('keydown', this.keydownHandler, false);\n        }\n        //clear alert on change in any input element \n        this.slot.querySelectorAll('input')\n            .forEach(element => element.addEventListener('input', () => {\n            this.clearAlert();\n            if (this.options.onInput) {\n                this.options.onInput(this);\n            }\n        }));\n        if (this.options.onShow) {\n            this.options.onShow(this);\n        }\n    }\n    submit() {\n        this.submitHandler();\n    }\n    cancel() {\n        this.cancelHandler();\n    }\n    close() {\n        this.destroy();\n    }\n    disableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = true);\n    }\n    enableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = false);\n    }\n    showAlert(text, reason, replace) {\n        let alert = domel('div')\n            .addClass(`${cssPrefix}-alert ${reason || ''}`)\n            .addChild('span', b => b\n            .addClass(`${cssPrefix}-alert-closebtn`)\n            .text('×')\n            .on('click', (ev) => {\n            const alert = ev.target.parentElement;\n            alert.parentElement.removeChild(alert);\n        }))\n            .addText(text)\n            .toDOM();\n        if (replace === true) {\n            this.clearAlert();\n        }\n        this.alertElement.appendChild(alert);\n    }\n    clearAlert() {\n        this.alertElement.innerHTML = '';\n    }\n    destroy() {\n        const elem = document.querySelectorAll(`[data-dialog-id=\"${this.dialogId}\"]`);\n        if (elem.length <= 0)\n            return;\n        if (this.options.arrangeParents) {\n            this.arrangeParents(false);\n        }\n        document.body.removeChild(this.slot);\n        if (this.options.submitOnEnter) {\n            window.removeEventListener('keydown', this.keydownHandler, false);\n        }\n        if (this.options.onDestroy) {\n            this.options.onDestroy(this);\n        }\n    }\n    isActiveDialog() {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal');\n        return windowDivs[windowDivs.length - 1] === this.slot;\n    }\n    arrangeParents(turnOn) {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal-window');\n        for (let i = 0; i < windowDivs.length - 1; i++) {\n            if (turnOn) {\n                const offset = i == 0 ? 20 : i * 40 + 20;\n                domel(windowDivs[i])\n                    .setStyle('margin-top', `${offset}px`)\n                    .setStyle('margin-left', `${offset}px`);\n            }\n            else {\n                domel(windowDivs[i])\n                    .removeStyle('margin-top')\n                    .removeStyle('margin-left');\n            }\n        }\n    }\n}\nclass DefaultProgressDialog extends DefaultDialog {\n    constructor(options, data) {\n        let contentElement;\n        let progressElement;\n        const body = domel('div')\n            .addChild('div', b => contentElement = b\n            .text(options.content || '')\n            .toDOM())\n            .addChild('div', b => {\n            b\n                .addClass(`${cssPrefix}-progress-line`)\n                .addChild('div', b => {\n                progressElement = b\n                    .addClass('fill')\n                    .toDOM();\n                if (options.determinated) {\n                    b.setStyle('width', '0%');\n                }\n                else {\n                    b.addClass('indeterminate');\n                }\n            });\n        })\n            .toDOM();\n        super({\n            title: options.title,\n            body: body,\n            beforeOpen: options.beforeOpen,\n            onSubmit: options.onSubmit,\n            width: options.width,\n            height: options.height,\n            submitable: false,\n            cancelable: false,\n            closable: false,\n            onDestroy: options.onDestroy\n        }, data);\n        this.contentElement = contentElement;\n        this.progressElement = progressElement;\n    }\n    updateContent(content) {\n        this.contentElement.innerText = content;\n    }\n    updateProgress(progress) {\n        progress = this.in01(progress);\n        this.progressElement.style.width = `${progress * 100}%`;\n        if (progress === 1) {\n            // postpone for 0.5s for smooth closing\n            setTimeout(() => {\n                this.submit();\n            }, 500);\n        }\n    }\n    in01(num) {\n        if (num > 1)\n            return 1;\n        if (num < 0)\n            return 0;\n        return num;\n    }\n}\nclass DefaultDialogSet {\n    constructor(options, dialogService) {\n        this.options = options;\n        this.dialogService = dialogService;\n        this.currentDialog = null;\n        this.currentIndex = 0;\n        this.options = options;\n        this.dialogService = dialogService;\n    }\n    getCurrent() {\n        return this.currentDialog;\n    }\n    openNext(data) {\n        return this.open(this.currentIndex + 1, data);\n    }\n    openPrev(data) {\n        return this.open(this.currentIndex - 1, data);\n    }\n    open(page, data) {\n        if (page < 0) {\n            this.currentIndex = 0;\n        }\n        else if (page >= this.options.length) {\n            this.currentIndex = this.options.length - 1;\n        }\n        else {\n            this.currentIndex = page;\n        }\n        if (this.currentDialog) {\n            try {\n                this.currentDialog.close();\n            }\n            catch (e) { }\n        }\n        const dlgOptions = this.options[this.currentIndex];\n        this.currentDialog = this.dialogService.open(dlgOptions, data);\n        return this.currentDialog;\n    }\n    close() {\n        if (this.currentDialog) {\n            this.currentDialog.close();\n            this.currentDialog = null;\n        }\n    }\n}\n\nfunction addEasyDataUITexts() {\n    i18n.updateDefaultTexts({\n        GridPageInfo: '{FirstPageRecordNum} - {LastPageRecordNum} of {Total} records',\n        GridItemsPerPage: 'items per page',\n        ButtonOK: \"OK\",\n        ButtonCancel: \"Cancel\",\n        ButtonApply: 'Apply',\n        ButtonNow: 'Now',\n        LblTotal: 'Total'\n    });\n}\naddEasyDataUITexts();\n\nvar PRE_SELECT;\n(function (PRE_SELECT) {\n    PRE_SELECT[PRE_SELECT[\"THIS_WEEK\"] = 0] = \"THIS_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"LAST_WEEK\"] = 1] = \"LAST_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"THIS_MONTH\"] = 2] = \"THIS_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"FIRST_MONTH\"] = 3] = \"FIRST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"LAST_MONTH\"] = 4] = \"LAST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"THIS_YEAR\"] = 5] = \"THIS_YEAR\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_1\"] = 6] = \"QUARTER_1\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_2\"] = 7] = \"QUARTER_2\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_3\"] = 8] = \"QUARTER_3\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_4\"] = 9] = \"QUARTER_4\";\n})(PRE_SELECT || (PRE_SELECT = {}));\nvar JUMP_TO;\n(function (JUMP_TO) {\n    JUMP_TO[\"UNDEF\"] = \"-1\";\n    JUMP_TO[\"TODAY\"] = \"1\";\n    JUMP_TO[\"YESTERDAY\"] = \"2\";\n    JUMP_TO[\"TOMORROW\"] = \"3\";\n    JUMP_TO[\"WEEK_START\"] = \"4\";\n    JUMP_TO[\"WEEK_END\"] = \"5\";\n    JUMP_TO[\"MONTH_START\"] = \"6\";\n    JUMP_TO[\"MONTH_END\"] = \"7\";\n    JUMP_TO[\"YEAR_START\"] = \"8\";\n    JUMP_TO[\"YEAR_END\"] = \"9\";\n})(JUMP_TO || (JUMP_TO = {}));\nconst DEFAULT_WEEK_START = 0;\nclass TimeSpanPicker extends DefaultDialog {\n    constructor(options) {\n        super({\n            title: options.title || `Select a period`,\n            body: \"\",\n            submitButtonText: options.submitButtonText || `OK`,\n            cancelButtonText: options.cancelButtonText || `Cancel`,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            beforeOpen: (dlg) => {\n                this.setupDialog();\n            },\n            onSubmit: (dlg) => {\n                if (typeof options.onSubmit === \"function\") {\n                    options.onSubmit.apply(dlg, [this.result(this.from), this.result(this.to)]);\n                }\n            }\n        });\n        this.yearRange = options.yearRange;\n        this.weekStart = options.weekStart || DEFAULT_WEEK_START;\n        this.bodyElement.append(this.drawDialog());\n        this.calendar1.render();\n        this.calendar2.render();\n        this.from = this.alignDate(options.start ? options.start : new Date());\n        this.to = this.alignDate(options.finish && this.alignDate(options.finish) > this.from ? options.finish : new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 1));\n        this.represent();\n    }\n    alignDate(date) {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }\n    drawDialog() {\n        const body = domel('div')\n            .addClass('tsp__container')\n            .addChild('div', b => {\n            b\n                .addClass('tsp__intervals')\n                .addChild('button', b => b.addClass('tsp__button').addText('This Week').on('click', () => { this.select(PRE_SELECT.THIS_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Week').on('click', () => { this.select(PRE_SELECT.LAST_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Month').on('click', () => { this.select(PRE_SELECT.THIS_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('First Month').on('click', () => { this.select(PRE_SELECT.FIRST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Month').on('click', () => { this.select(PRE_SELECT.LAST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Year').on('click', () => { this.select(PRE_SELECT.THIS_YEAR); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 1').on('click', () => { this.select(PRE_SELECT.QUARTER_1); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 2').on('click', () => { this.select(PRE_SELECT.QUARTER_2); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 3').on('click', () => { this.select(PRE_SELECT.QUARTER_3); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 4').on('click', () => { this.select(PRE_SELECT.QUARTER_4); }));\n        })\n            .addChild('div', b => {\n            b\n                .addClass('tsp__form')\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Start');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(1, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar1 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            this.from = this.alignDate(date);\n                            this.calendar1.setDate(this.from);\n                            if (this.to < this.from) {\n                                this.to = this.from;\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            })\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Finish');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(2, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar2 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            if (this.alignDate(date) >= this.from) {\n                                this.to = this.alignDate(date);\n                            }\n                            else {\n                                this.calendar2.setDate(this.to);\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            });\n        })\n            .toDOM();\n        return body;\n    }\n    setupDialog() {\n    }\n    jump(cal, to, select) {\n        let target = cal === 1 ? 'from' : 'to';\n        let jumpTo;\n        const curr = new Date();\n        switch (to) {\n            case JUMP_TO.TODAY: {\n                jumpTo = curr;\n                break;\n            }\n            case JUMP_TO.YESTERDAY: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1);\n                break;\n            }\n            case JUMP_TO.TOMORROW: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1);\n                break;\n            }\n            case JUMP_TO.WEEK_START: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart));\n                break;\n            }\n            case JUMP_TO.WEEK_END: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6 + this.weekStart));\n                break;\n            }\n            case JUMP_TO.MONTH_START: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                break;\n            }\n            case JUMP_TO.MONTH_END: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case JUMP_TO.YEAR_START: {\n                jumpTo = new Date(curr.getFullYear(), 0, 1);\n                break;\n            }\n            case JUMP_TO.YEAR_END: {\n                jumpTo = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        jumpTo = this.alignDate(jumpTo);\n        select.value = JUMP_TO.UNDEF;\n        if (target === \"from\") {\n            this.from = jumpTo;\n            if (this.to < this.from) {\n                this.to = this.from;\n            }\n        }\n        else {\n            if (jumpTo >= this.from) {\n                this[target] = jumpTo;\n            }\n        }\n        this.represent();\n    }\n    represent() {\n        this.calendar1.setDate(this.from);\n        this.calendar2.setDate(this.to);\n    }\n    select(interval) {\n        switch (interval) {\n            case PRE_SELECT.THIS_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay());\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.LAST_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay() - 7);\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.THIS_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case PRE_SELECT.FIRST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 1, 0);\n                break;\n            }\n            case PRE_SELECT.LAST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth() - 1, 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth(), 0);\n                break;\n            }\n            case PRE_SELECT.THIS_YEAR: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_1: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 3, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_2: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 3, 1);\n                this.to = new Date(curr.getFullYear(), 6, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_3: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 6, 1);\n                this.to = new Date(curr.getFullYear(), 9, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_4: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 9, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        this.represent();\n    }\n    result(date) {\n        const curr = this.alignDate(new Date());\n        const constants = {\n            \"Today\": this.alignDate(new Date()),\n            \"Yesterday\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1)),\n            \"Tomorrow\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1)),\n            \"FirstDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), 1)),\n            \"LastDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 0)),\n            \"FirstDayOfWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart))),\n            \"FirstDayOfYear\": this.alignDate(new Date(curr.getFullYear(), 0, 1)),\n            \"FirstDayOfNextWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart + 7))),\n            \"FirstDayOfNextMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 1)),\n            \"FirstDayOfNextYear\": this.alignDate(new Date(curr.getFullYear() + 1, 0, 1)),\n        };\n        for (let k in constants) {\n            console.log(constants[k], date);\n            if (constants[k].getTime() === date.getTime()) {\n                return `\\${{${k}}}`;\n            }\n        }\n        return i18n.dateTimeToStr(date, i18n.getLocaleSettings().editDateFormat);\n    }\n}\nconst showTimeSpanPicker = (options) => new TimeSpanPicker(options).open();\n\n// grid\n// export dialogs to use outside of context as global\nconst dialogs = new DefaultDialogService();\n\nexport { AutoResizeColumns, Calendar, CellRendererType, DFMT_REGEX, DateTimePicker, DefaultCalendar, DefaultDateTimePicker, DefaultDialog, DefaultDialogService, DefaultDialogSet, DefaultProgressDialog, DefaultTimePicker, DialogFooterAlignment, DomElementBuilder, DomInputElementBuilder, DomSelectElementBuilder, DomTextAreaElementBuilder, DragManager, DropEffect, EasyGrid, EqDragEvent, GridCellRendererStore, GridColumn, GridColumnAlign, GridColumnList, JUMP_TO, PRE_SELECT, TimePicker, TimeSpanPicker, addCssClass, addElement, browserUtils, createBrowserEvent, dialogs, domel, eqCssMobile, eqCssPrefix, eqDragManager, getDocSize, getElementAbsolutePos, getScrollPos, getViewportSize, getWinSize, hideElement, isVisible, mask, showElement, showTimeSpanPicker, slideDown, slideUp, toggleVisibility, wrapInner };\n","import { utils, i18n, DataType, EasyDataTable, AggregationSettings } from '@easydata/core';\nimport { Widget, WidgetGroup, QueryChangePart, QueryChangeAction, ExprTag, SortDirection, i18n as i18n$1, equtils, eqconsts, ConditionPart, DataKind, Query, Expression, CondTag, EqEditorTag, EqValueEditor, EqServiceProvider, createEqContext } from '@easyquery/core';\nimport { eqDragManager, getElementAbsolutePos, getScrollPos, getWinSize, getViewportSize, domel, DropEffect, createBrowserEvent, DomElementBuilder, DefaultDateTimePicker, slideDown, slideUp, EasyGrid, addCssClass, hideElement, showElement, isVisible, toggleVisibility, addElement, DefaultDialogService } from '@easydata/ui';\n\nfunction findHighestZIndex(elem) {\n    let highest = 0;\n    while (elem !== null) {\n        const zindex = document.defaultView.getComputedStyle(elem, null)\n            .getPropertyValue(\"z-index\");\n        if (zindex != 'auto') {\n            const numZIndex = parseInt(zindex);\n            if (numZIndex > highest) {\n                highest = numZIndex;\n            }\n        }\n        elem = elem.parentElement;\n    }\n    return highest;\n}\n// simetimes setting focus in the main thread doesn't work correctly (in Firefox). So we need to 'hack' it.\nfunction safeFocus(element) {\n    setTimeout(_ => {\n        if (element) {\n            element.focus();\n        }\n    }, 100);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    function isIE() {\n        const ua = window.navigator.userAgent;\n        return ua.includes('MSIE') || ua.includes('Trident');\n    }\n    browserUtils.isIE = isIE;\n    function isFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().indexOf('firefox') > -1;\n        }\n        return _isFirefox;\n    }\n    browserUtils.isFirefox = isFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    let mobileModeChangeHandler;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n    function getMobileCssClass() {\n        return isMobileMode() ? eqCssMobile : null;\n    }\n    browserUtils.getMobileCssClass = getMobileCssClass;\n})(browserUtils || (browserUtils = {}));\n\n/**\n * The entities panel wiget, implemented without JQuery.\n */\nclass EntitiesPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-ep';\n    }\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.queryChangedCallbackId = null;\n        this.group = WidgetGroup.Model | WidgetGroup.Query;\n        this.panel = slot;\n    }\n    getWidgetType() {\n        return 'entitiesPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n    }\n    /**\n    * Refresh widget implementation\n    */\n    refreshCore() {\n        this.render();\n        if (this.options.syncWithColumns) {\n            this.refreshCheckedStateByColumns();\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.panel.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.panel.removeChild(this.progressBlock);\n        }\n    }\n    destroyCore() {\n        this.slot.innerHTML = '';\n    }\n    setOptions(options) {\n        this.options = {\n            showToolbar: true,\n            syncWithColumns: false,\n            showSelectAllButton: false,\n            showClearSelectionButton: true,\n            showAddColumnButton: true,\n            showAddConditionButton: true,\n            showCheckboxes: true,\n            showTooltips: true,\n            draggableAttributes: true,\n            showAttributes: { useInConditions: true, useInResult: true, useInSorting: false },\n            showFilterBox: false,\n            filterBoxMode: 0,\n            showIndicatorOnLoad: true,\n            attrPlacement: 0,\n            sortEntities: false,\n            autoClearSelection: true,\n            entityRenderedCallback: null,\n            attributeRenderedCallback: null,\n        };\n        if (options) {\n            utils.assignDeep(this.options, options);\n        }\n        if (this.queryChangedCallbackId) {\n            const query = this.context.getQuery();\n            query.removeChangedCallback(this.queryChangedCallbackId);\n        }\n        if (this.options.syncWithColumns) {\n            const query = this.context.getQuery();\n            this.queryChangedCallbackId = query.addChangedCallback((ev) => {\n                const edata = ev.data;\n                if (!edata || (edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                    return;\n                }\n                this.refreshCheckedStateByColumns();\n            });\n        }\n    }\n    render() {\n        let model = this.context.getModel();\n        this.clear();\n        this.panel.classList.add(`${this.cssPrefix}-panel`);\n        this.panel.classList.add(browserUtils.getMobileCssClass());\n        this.rootEntityBlock = document.createElement('div');\n        if (model != null && !model.isEmpty()) {\n            let entTree = model.getEntitiesTree({\n                addUIC: this.options.showAttributes.useInConditions && !this.options.syncWithColumns,\n                addUIR: this.options.showAttributes.useInResult,\n                addUIS: this.options.showAttributes.useInSorting && !this.options.syncWithColumns,\n                attrPlacement: this.options.attrPlacement,\n                sortEntities: this.options.sortEntities,\n                includeRootData: true\n            });\n            this.entityTreeBlock = this.renderEntity(entTree, this.rootEntityBlock, 0);\n            this.panel.appendChild(this.entityTreeBlock);\n        }\n        if (this.options.showFilterBox) {\n            this.createFilterBox();\n        }\n        else {\n            this.rootEntityBlock.style.top = '0';\n        }\n        if (this.options.showToolbar && !this.options.syncWithColumns) {\n            this.createToolPanel();\n        }\n        else {\n            this.rootEntityBlock.style.bottom = '0';\n        }\n    }\n    renderEntity(entity, block, offset) {\n        let entityBlock;\n        let entityNode = document.createElement('div');\n        entityNode.classList.add(`${this.cssPrefix}-entity-node`);\n        entityNode.classList.add(browserUtils.getMobileCssClass());\n        let entityChildren = document.createElement('div');\n        entityChildren.classList.add(`${this.cssPrefix}-entity-children`);\n        entityChildren.classList.add(browserUtils.getMobileCssClass());\n        let nodeLabel = document.createElement('label');\n        nodeLabel.classList.add(`${this.cssPrefix}-entity-node-label`);\n        let nodeInput = document.createElement('input');\n        nodeInput.type = 'checkbox';\n        nodeInput.title = entity.text;\n        let nodeToggleButton = document.createElement('a');\n        nodeToggleButton.href = 'javascript:void(0)';\n        nodeToggleButton.title = `${i18n.getText(\"EntityToggle\")} ${entity.text}`;\n        nodeToggleButton.classList.add(`${this.cssPrefix}-entity-node-button`);\n        let attrNode, attrLabel, attrInput;\n        let currentOffset = offset;\n        let isAttributeInTree = (attrId, entityBlock) => {\n            let res = entityBlock.querySelectorAll(`.${this.cssPrefix}-entity-attr[data-id=\"${attrId}\"]`);\n            return res.length > 0;\n        };\n        if (block) {\n            entityBlock = block;\n            entityBlock.innerHTML = '';\n        }\n        else {\n            entityBlock = document.createElement('div');\n        }\n        entityBlock.classList.add(`${this.cssPrefix}-entity`);\n        entityBlock.classList.add(browserUtils.getMobileCssClass());\n        if (entity.id && entity.id != \"\") {\n            nodeLabel.innerText = entity.text;\n            entityNode.appendChild(nodeLabel); //caption\n            if (this.options.showCheckboxes) {\n                nodeLabel.insertBefore(nodeInput, nodeLabel.firstChild);\n            }\n            entityNode.insertBefore(nodeToggleButton, entityNode.firstChild);\n            if (this.options.showTooltips && entity.description) {\n                nodeLabel.setAttribute('title', entity.description);\n            }\n            for (let i = 0; i < currentOffset; i++) {\n                let divElem = document.createElement('div');\n                divElem.classList.add(`${this.cssPrefix}-entity-offset`);\n                entityNode.insertBefore(divElem, entityNode.firstChild);\n            }\n            entityBlock.appendChild(entityNode);\n            entityChildren.hidden = true;\n            currentOffset++;\n        }\n        let itemsLength = entity.items ? entity.items.length : 0;\n        for (let i = 0; i < itemsLength; i++) {\n            let item = entity.items[i];\n            if (item.isEntity) {\n                entityChildren.appendChild(this.renderEntity(item, null, currentOffset));\n            }\n            else {\n                if (!item.lookupAttr || !(isAttributeInTree(item.lookupAttr, entityChildren))) {\n                    attrLabel = document.createElement('label');\n                    attrLabel.innerText = item.text;\n                    attrLabel.classList.add(`${this.cssPrefix}-entity-attr-label`);\n                    if (this.options.showCheckboxes) {\n                        attrInput = document.createElement('input');\n                        attrInput.type = 'checkbox';\n                        attrInput.title = item.text;\n                        attrLabel.insertBefore(attrInput, attrLabel.firstChild);\n                        if (this.options.syncWithColumns) {\n                            attrInput.addEventListener('change', (ev) => {\n                                const model = this.context.getModel();\n                                const query = this.context.getQuery();\n                                const checkbox = ev.currentTarget;\n                                const attrId = checkbox.parentElement.parentElement.getAttribute('data-id');\n                                if (model.checkAttrProperty(attrId, \"useInResult\")) {\n                                    if (checkbox.checked) {\n                                        const attr = model.getAttributeById(attrId);\n                                        const column = query.addColumn({\n                                            attribute: attr\n                                        }, true);\n                                        query.fireColumnsChangedEvent(QueryChangeAction.Add, column);\n                                    }\n                                    else {\n                                        const columns = query.getColumns()\n                                            .filter(col => col.expr.tag === ExprTag.EntityAttribute\n                                            && col.expr.value === attrId);\n                                        if (columns.length > 0) {\n                                            query.removeColumn(columns[0]);\n                                            query.fireColumnsChangedEvent(QueryChangeAction.Delete, columns[0]);\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    if (this.options.showTooltips && item.description) {\n                        attrLabel.setAttribute('title', item.description);\n                    }\n                    for (let j = 0; j < currentOffset + 1; j++) {\n                        let divElem = document.createElement('div');\n                        divElem.classList.add(`${this.cssPrefix}-entity-offset`);\n                        attrLabel.insertBefore(divElem, attrLabel.firstChild);\n                    }\n                    attrNode = document.createElement('div');\n                    attrNode.classList.add(`${this.cssPrefix}-entity-attr`);\n                    if (entityNode.innerHTML.length == 0) {\n                        attrNode.classList.add(`${this.cssPrefix}-entity-attr-root`);\n                    }\n                    attrNode.innerHTML = \"\";\n                    attrNode.appendChild(attrLabel);\n                    attrNode.setAttribute('data-id', item.id);\n                    if (this.options.draggableAttributes && !this.options.syncWithColumns) {\n                        eqDragManager.registerDraggableItem({\n                            element: attrNode,\n                            scope: \"entityAttr\",\n                            data: { attrId: item.id },\n                            renderer: (dragImage) => {\n                                dragImage.innerHTML = '';\n                                const attrLabel = document.createElement('span');\n                                attrLabel.innerText = item.text;\n                                dragImage.appendChild(attrLabel);\n                            }\n                        });\n                    }\n                    if (this.options.attributeRenderedCallback) {\n                        this.options.attributeRenderedCallback(attrNode);\n                    }\n                    entityChildren.appendChild(attrNode);\n                }\n            }\n        }\n        if (entityChildren.innerHTML.length) {\n            entityBlock.appendChild(entityChildren);\n            nodeToggleButton.addEventListener('click', (event) => {\n                entityChildren.hidden = !entityChildren.hidden;\n                let element = event.target;\n                let className = `${this.cssPrefix}-entity-node-button-open`;\n                if (element.classList.contains(className)) {\n                    element.classList.remove(className);\n                }\n                else {\n                    element.classList.add(className);\n                }\n                event.preventDefault();\n            });\n        }\n        if (entityChildren) {\n            const checkboxes = entityChildren.querySelectorAll(`.${this.cssPrefix}-entity-attr > label > input`);\n            for (let i = 0; i < checkboxes.length; i++) {\n                const checkbox = checkboxes[i];\n                checkbox.addEventListener('click', (event) => {\n                    let element = event.target;\n                    if (element.checked && !nodeInput.checked) {\n                        nodeInput.checked = true;\n                    }\n                    else if (entityChildren.querySelectorAll('input:checked').length === 0) {\n                        nodeInput.checked = false;\n                    }\n                    event.stopPropagation();\n                });\n            }\n        }\n        nodeInput.addEventListener('click', (event) => {\n            let element = event.target;\n            const entities = entityChildren.querySelectorAll('label input');\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                entity.checked = element.checked;\n            }\n            if (this.options.syncWithColumns) {\n                const query = this.context.getQuery();\n                const model = this.context.getModel();\n                const attrList = [];\n                const attrElems = Array.from(entityChildren.querySelectorAll(`.${this.cssPrefix}-entity-attr`));\n                for (const elem of attrElems) {\n                    const attrId = elem.getAttribute('data-id');\n                    if (model.checkAttrProperty(attrId, 'useInResult')) {\n                        attrList.push(attrId);\n                    }\n                }\n                if (element.checked) {\n                    for (const attrId of attrList) {\n                        query.addColumn({ attributeId: attrId }, true);\n                    }\n                }\n                else {\n                    const columns = query.getColumns()\n                        .filter(col => col.expr.tag === ExprTag.EntityAttribute\n                        && attrList.indexOf(col.expr.value) >= 0);\n                    query.removeColumns(columns, null);\n                }\n                query.fireColumnsChangedEvent();\n            }\n            event.stopPropagation();\n        });\n        if (block != this.rootEntityBlock && this.options.entityRenderedCallback) {\n            this.options.entityRenderedCallback(entityBlock);\n        }\n        return entityBlock;\n    }\n    createFilterBox() {\n        this.filterBoxBlock = document.createElement('div');\n        this.filterBoxBlock.classList.add(`${this.cssPrefix}-filter-box`);\n        this.filterBoxBlock.classList.add(browserUtils.getMobileCssClass());\n        this.filterBoxInput = document.createElement('input');\n        this.filterBoxInput.classList.add(`${this.cssPrefix}-filter-box-input`);\n        this.filterBoxInput.addEventListener('input', (e) => {\n            const attrs = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n            for (let i = 0; i < attrs.length; i++) {\n                const attr = attrs[i];\n                attr.hidden = !this.checkFilterAttribute(attr);\n            }\n            const entities = this.panel.querySelectorAll(`:scope > .${this.cssPrefix}-entity`);\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                let attrs = entity.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let displayAttrCount = 0;\n                for (let i = 0; i < attrs.length; i++) {\n                    if (attrs[i].style.display !== 'None') {\n                        displayAttrCount++;\n                    }\n                }\n                entity.hidden = displayAttrCount === 0;\n            }\n            if (this.filterBoxInput.value === '')\n                this.collapseAll();\n            else\n                this.expandAll();\n        });\n        this.filterBoxBlock.appendChild(this.filterBoxInput);\n        this.panel.insertBefore(this.filterBoxBlock, this.panel.firstChild);\n    }\n    createToolPanel() {\n        let defClass = `${this.cssPrefix}-tool-panel`;\n        let toolPanelBlock = document.createElement('div');\n        toolPanelBlock.classList.add(defClass);\n        toolPanelBlock.classList.add(browserUtils.getMobileCssClass());\n        let toolSelectAll = document.createElement('div');\n        toolSelectAll.classList.add(`${defClass}-select-all`);\n        toolSelectAll.title = 'Select all';\n        let toolDeselectAll = document.createElement('div');\n        toolDeselectAll.classList.add(`${defClass}-deselect-all`);\n        toolDeselectAll.title = 'Clear selection';\n        let toolAddColumns = document.createElement('div');\n        toolAddColumns.classList.add(`${defClass}-add-columns`);\n        toolAddColumns.title = 'Add column';\n        let toolAddCond = document.createElement('div');\n        toolAddCond.classList.add(`${defClass}-add-cond`);\n        toolAddCond.title = 'Add condition';\n        let toolLeftBlock = document.createElement('div');\n        toolLeftBlock.classList.add(`${defClass}-left-side`);\n        let toolRightBlock = document.createElement('div');\n        toolRightBlock.classList.add(`${defClass}-right-side`);\n        let model = this.context.getModel();\n        if (this.options.showSelectAllButton) {\n            toolSelectAll.title = i18n.getText(\"ButtonSelectAll\");\n            toolLeftBlock.appendChild(toolSelectAll);\n            toolSelectAll.addEventListener('click', () => {\n                this.selectAll();\n            });\n        }\n        if (this.options.showClearSelectionButton) {\n            toolDeselectAll.title = i18n.getText(\"ButtonDeselectAll\");\n            toolLeftBlock.appendChild(toolDeselectAll);\n            toolDeselectAll.addEventListener('click', () => {\n                this.deselectAll();\n            });\n        }\n        if (this.options.showAddColumnButton) {\n            toolAddColumns.title = i18n.getText(\"ButtonAddColumns\");\n            toolRightBlock.appendChild(toolAddColumns);\n            toolAddColumns.addEventListener('click', () => {\n                const attrElements = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let attrList = [];\n                let attrId;\n                const query = this.context.getQuery();\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"start\"\n                });\n                for (let i = 0; i < attrElements.length; i++) {\n                    const attrElement = attrElements[i];\n                    let input = attrElement.getElementsByTagName('input')[0];\n                    if (input.checked) {\n                        attrId = attrElement.getAttribute('data-id');\n                        if (model.checkAttrProperty(attrId, \"useInResult\")) {\n                            attrList.push(attrId);\n                        }\n                    }\n                }\n                for (let attrId of attrList) {\n                    const attr = model.getAttributeById(attrId);\n                    query.addColumn({\n                        attribute: attr\n                    }, true);\n                }\n                query.fireChangedEvent();\n                if (this.options.autoClearSelection) {\n                    this.deselectAll();\n                }\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"finish\"\n                });\n            });\n        }\n        if (this.options.showAddConditionButton) {\n            toolAddCond.title = i18n.getText(\"ButtonAddConditions\");\n            toolRightBlock.appendChild(toolAddCond);\n            toolAddCond.addEventListener('click', () => {\n                let attrElements = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let attrList = [];\n                let attrId;\n                let query = this.context.getQuery();\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"start\"\n                });\n                for (let i = 0; i < attrElements.length; i++) {\n                    const attrElement = attrElements[i];\n                    let input = attrElement.getElementsByTagName('input')[0];\n                    if (input.checked) {\n                        attrId = attrElement.getAttribute('data-id');\n                        if (model.checkAttrProperty(attrId, \"useInConditions\")) {\n                            attrList.push(attrId);\n                        }\n                    }\n                }\n                for (let attrId of attrList) {\n                    query.addSimpleCondition({\n                        attributeId: attrId\n                    });\n                }\n                query.fireChangedEvent();\n                if (this.options.autoClearSelection) {\n                    this.deselectAll();\n                }\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"finish\"\n                });\n            });\n        }\n        toolPanelBlock.appendChild(toolLeftBlock);\n        toolPanelBlock.appendChild(toolRightBlock);\n        this.panel.appendChild(toolPanelBlock);\n    }\n    checkFilterAttribute(attr) {\n        const inputElem = attr.querySelector('label input');\n        if (inputElem.checked) {\n            return true;\n        }\n        const labelElem = attr.querySelector('label');\n        const attrCaption = labelElem.textContent;\n        if (this.checkFilterText(attrCaption)) {\n            return true;\n        }\n        const entityNode = attr.parentElement.parentElement.querySelector(`.${this.cssPrefix}-entity-node`);\n        const entityCaption = entityNode.querySelector('label').textContent;\n        if (this.checkFilterText(entityCaption)) {\n            return true;\n        }\n        return false;\n    }\n    checkFilterText(value) {\n        let filterText = this.filterBoxInput.value;\n        if (filterText == \"\")\n            return true;\n        if (this.options.filterBoxMode == 0 && value.toLowerCase().indexOf(filterText.toLowerCase()) >= 0)\n            return true;\n        if (this.options.filterBoxMode == 1 && value.toLowerCase().indexOf(filterText.toLowerCase()) == 0)\n            return true;\n        return false;\n    }\n    refreshCheckedStateByColumns() {\n        this.deselectAll();\n        const query = this.context.getQuery();\n        const exprColumns = query.getColumns()\n            .filter(col => col.expr.tag === ExprTag.EntityAttribute);\n        for (const column of exprColumns) {\n            const attrNode = this.rootEntityBlock\n                .querySelector(`.${this.cssPrefix}-entity-attr[data-id=\"${column.expr.value}\"]`);\n            let checkbox = attrNode.querySelector(`label > input`);\n            checkbox.checked = true;\n            let entChildren = attrNode.parentElement;\n            while (entChildren\n                && entChildren.classList\n                    .contains(`${this.cssPrefix}-entity-children`)) {\n                entChildren.hidden = false;\n                const entElem = entChildren.parentElement;\n                if (entElem && entChildren !== entElem.firstElementChild) {\n                    checkbox = entElem.firstElementChild\n                        .querySelector(`label > input`);\n                    checkbox.checked = true;\n                    entChildren = entElem.parentElement;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n    }\n    expandAll() {\n        for (let i = 0; i < this.rootEntityBlock.childNodes.length; i++) {\n            const child = this.rootEntityBlock.childNodes[0];\n            const childs = child.querySelectorAll(`.${this.cssPrefix}-entity-children`);\n            for (let j = 0; j < childs.length; j++) {\n                const elem = childs[j];\n                elem.hidden = false;\n            }\n        }\n        const nodeButtons = this.rootEntityBlock.querySelectorAll(`.${this.cssPrefix}-entity-node-button`);\n        for (let i = 0; i < nodeButtons.length; i++) {\n            const elem = nodeButtons[i];\n            elem.classList.add(`${this.cssPrefix}-entity-node-button-open`);\n        }\n    }\n    collapseAll() {\n        for (let i = 0; i < this.rootEntityBlock.childNodes.length; i++) {\n            const child = this.rootEntityBlock.childNodes[0];\n            const childs = child.querySelectorAll(`.${this.cssPrefix}-entity-children`);\n            for (let j = 0; j < childs.length; j++) {\n                const elem = childs[j];\n                elem.hidden = true;\n            }\n        }\n        const nodeButtons = this.rootEntityBlock.querySelectorAll(`.${this.cssPrefix}-entity-node-button`);\n        for (let i = 0; i < nodeButtons.length; i++) {\n            const elem = nodeButtons[i];\n            elem.classList.remove(`${this.cssPrefix}-entity-node-button-open`);\n        }\n    }\n    selectAll() {\n        const inputs = this.entityTreeBlock.querySelectorAll('input');\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            input.checked = true;\n        }\n    }\n    deselectAll() {\n        const inputs = this.entityTreeBlock.querySelectorAll('input');\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            input.checked = false;\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(browserUtils.getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n    clear() {\n        this.panel.innerHTML = \"\";\n    }\n}\n\nclass MenuLevel {\n    get applyItem() {\n        return this._applyItem;\n    }\n    get cssPrefix() {\n        return 'eqjs-menu';\n    }\n    constructor(options) {\n        this.isFilteringMode = false;\n        this.showSelected = false;\n        //menu, items, levelIndex\n        this.parentMenu = options.menu || null;\n        this.parentLevel = options.parent || null;\n        this.parentElement = options.container || document.body;\n        this.levelIndex = options.levelIndex || 0;\n        this.levelDiv = null;\n        this.domWriteItemsId = options.domWriteItemsId || false;\n        this.menuId = options.menuId || '';\n        this.itemRenderedCallback = options.itemRenderedCallback || null;\n        //we need to define special \"apply\" item for this level\n        this._applyItem = { id: null, text: null, itemDiv: null };\n        this.items = options.items || [];\n        this.activeItem = null;\n        this.selectedItem = null;\n        this.initialized = false;\n        this.showSelected = options.showSelected;\n        this.updated = 0;\n        this.renderContent();\n    }\n    getItems() {\n        return this.items;\n    }\n    setItems(items) {\n        this.items = items;\n    }\n    renderContent() {\n        if (!this.items) {\n            return;\n        }\n        //define internal variables used in this function\n        const itemBgColor = this.parentMenu.style.colors.bgON || \"white\";\n        const itemFgColor = this.parentMenu.style.colors.fgON || \"black\";\n        this.parentMenu.style.colors.bgOVER || \"LightSteelBlue\";\n        const itemFontFamily = this.parentMenu.style.itemStyle.fontFamily || \"\";\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || \"14px\";\n        const multiselect = this.parentMenu.options.multiselect;\n        const isSubQuery = this.parentMenu.options.isSubQuery;\n        //add base DIV element which is also used to show the shadow\n        const baseDivBuilder = domel('div')\n            .addClass(browserUtils.getMobileCssClass());\n        if (this.parentMenu.options.useDefaultStyles) {\n            baseDivBuilder\n                .setStyle('backgroundColor', itemBgColor)\n                .setStyle('border', '1px solid')\n                .setStyle('borderColor', itemBgColor)\n                .setStyle('backgroundColor', this.parentMenu.style.colors.border)\n                .setStyle('margin', '-2px 2px 2px -2px')\n                .setStyle('width', 'auto')\n                .setStyle('height', 'auto');\n        }\n        baseDivBuilder\n            .setStyle('z-index', this.parentMenu.zIndex)\n            .setStyle('position', 'absolute')\n            .setStyle('display', 'none');\n        let baseDiv = baseDivBuilder.toDOM();\n        baseDiv['menuLevel'] = this;\n        const applyItem = this._applyItem;\n        //if multiselect option is on - then we should add special \"apply\" item\n        if (multiselect && this.levelIndex === 0 && this.parentMenu.options.hideButtons !== true) {\n            const applyDiv = document.createElement(\"div\");\n            applyDiv.classList.add(`${this.cssPrefix}-applyDiv`);\n            applyDiv['menuItem'] = applyItem;\n            this.applyBtn = document.createElement('button');\n            if (this.parentMenu.options.useDefaultStyles) {\n                applyDiv.style.borderBottom = '1px solid';\n                applyDiv.style.padding = '5px';\n                applyDiv.style.marginBottom = '5px';\n                this.applyBtn.style.padding = '0 5px';\n                this.applyBtn.style.cursor = \"pointer\";\n            }\n            const applyTextNode = document.createTextNode(this.parentMenu.options.buttons.submit);\n            this.applyBtn.appendChild(applyTextNode);\n            applyDiv.appendChild(this.applyBtn);\n            //cancel btn\n            const cancelBtn = document.createElement('button');\n            cancelBtn.classList.add(`${this.cssPrefix}-cancel`);\n            if (this.parentMenu.options.useDefaultStyles) {\n                cancelBtn.style.padding = '0 5px';\n                cancelBtn.style.cursor = 'pointer';\n                cancelBtn.style.marginLeft = '15px';\n            }\n            const cancelText = document.createTextNode(this.parentMenu.options.buttons.cancel);\n            cancelBtn.appendChild(cancelText);\n            applyDiv.appendChild(cancelBtn);\n            baseDiv.appendChild(applyDiv);\n            applyItem.itemDiv = applyDiv;\n            this.applyBtn.addEventListener('click', () => {\n                this.submit(this._applyItem);\n            });\n            cancelBtn.addEventListener('click', () => {\n                this.parentMenu.hideMenu();\n            });\n        }\n        // if too many items - then we add a special \"search\" item\n        // or there is an options to show always\n        if (this.parentLevel == null\n            && (this.parentMenu.options.searchBoxAlwaysShown || this.items.length >= this.parentMenu.options.showSearchBoxAfter)) {\n            const searchDivBuilder = domel('div')\n                .addClass(`${this.cssPrefix}-searchDiv`);\n            if (this.parentMenu.options.useDefaultStyles) {\n                searchDivBuilder\n                    .setStyle('border-bottom', '1px solid #666')\n                    .setStyle('background-color', itemBgColor)\n                    .setStyle('border-color', this.parentMenu.style.colors.border);\n                if (itemFontFamily != \"\") {\n                    searchDivBuilder.setStyle('font-family', itemFontFamily);\n                }\n                searchDivBuilder\n                    .setStyle('font-size', itemFontSize)\n                    .setStyle('color', itemFgColor)\n                    .setStyle('cursor', 'pointer')\n                    .setStyle('text-align', 'left')\n                    .setStyle('padding', '5px');\n            }\n            const searchEditBoxBuilder = domel('input')\n                .id('searchBox')\n                .name('searchBox')\n                .type('text')\n                .size(16)\n                .addClass(`${this.cssPrefix}-searchBox`)\n                .on('input', (ev) => {\n                this.deactivateItem(this.activeItem);\n                this.renderItems(this.searchBox.value);\n            })\n                .on('keydown', (ev) => {\n                let keyCode = ev.keyCode;\n                switch (keyCode) {\n                    case 13: //enter\n                        if (this.activeItem) {\n                            this.activeItem.itemDiv.click();\n                        }\n                        break;\n                    case 38: // up\n                        this.moveActiveItemUp();\n                        break;\n                    case 40: // down\n                        this.moveActiveItemDown();\n                        break;\n                    case 39: // right\n                        if (!this.searchBox.value) {\n                            this.openSubLevel(this.activeItem);\n                        }\n                        break;\n                }\n            });\n            if (this.parentMenu.options.useDefaultStyles) {\n                searchEditBoxBuilder\n                    .setStyle('font-family', 'monospace')\n                    .setStyle('font-size', '8pt')\n                    .setStyle('width', '100%');\n            }\n            if (isSubQuery) {\n                searchEditBoxBuilder.addClass('eqjs-dialog');\n            }\n            this.searchBox = searchEditBoxBuilder.toDOM();\n            this.searchDiv = searchDivBuilder.toDOM();\n            this.searchDiv.appendChild(this.searchBox);\n            baseDiv.appendChild(this.searchDiv);\n        }\n        const scrollDiv = document.createElement(\"div\");\n        scrollDiv.tabIndex = 1;\n        domel(scrollDiv)\n            .addClass(`${this.cssPrefix}-scrollDiv`)\n            .addClass(browserUtils.getMobileCssClass());\n        scrollDiv.style.overflowX = \"hidden\";\n        scrollDiv.style.overflowY = \"auto\";\n        scrollDiv.style.position = \"relative\";\n        baseDiv.appendChild(scrollDiv);\n        this.levelDiv = baseDiv;\n        this.scrollDiv = scrollDiv;\n        if (this.menuId) {\n            this.levelDiv.id = this.menuId;\n        }\n        if (this.parentLevel) {\n            this.levelDiv.style.zIndex\n                = this.parentLevel.levelDiv.style.zIndex;\n        }\n        this.renderItems();\n        const scrollDivKeyDownHandler = (event) => {\n            switch (event.which) {\n                case 13: // enter\n                    if (this.parentMenu.options.multiselect) {\n                        this.parentMenu.getRootLevel().applyBtn.click();\n                    }\n                    else {\n                        if (this.activeItem) {\n                            this.activeItem.itemDiv.click();\n                        }\n                    }\n                    break;\n                case 32: // space\n                    if (this.activeItem) {\n                        this.activeItem.itemDiv.click();\n                    }\n                    break;\n                case 37: // left\n                    if (this.parentLevel && !this.isFilteringMode) {\n                        this.deactivateItem(this.activeItem);\n                        this.parentLevel.focus();\n                    }\n                    break;\n                case 39: // right\n                    this.openSubLevel(this.activeItem);\n                    break;\n                case 38: // up\n                    this.moveActiveItemUp();\n                    break;\n                case 40: // down\n                    this.moveActiveItemDown();\n                    break;\n                default: return; // exit this handler for other keys\n            }\n            event.preventDefault(); // prevent the default action (scroll / move caret)            \n        };\n        scrollDiv.addEventListener(\"keydown\", scrollDivKeyDownHandler);\n        if (browserUtils.isMobileMode()) {\n            this.closeDiv =\n                domel('div', baseDiv)\n                    .addClass('eqjs-menu-close-btn')\n                    .addText(i18n.getText('ButtonClose'))\n                    .on('click', () => {\n                    this.parentMenu.hideMenu();\n                })\n                    .toDOM();\n        }\n    }\n    moveActiveItemDown() {\n        const items = this.isFilteringMode ? this.filteredItems : this.items;\n        if (this.activeItem) {\n            const idx = items.indexOf(this.activeItem);\n            if (idx < items.length - 1) {\n                this.activateItem(items[idx + 1], false);\n            }\n        }\n        else {\n            this.activateItem(items[0], false);\n        }\n    }\n    moveActiveItemUp() {\n        const items = this.isFilteringMode ? this.filteredItems : this.items;\n        if (this.activeItem) {\n            const idx = items.indexOf(this.activeItem);\n            if (idx > 0) {\n                this.activateItem(items[idx - 1], false);\n            }\n        }\n        else {\n            this.activateItem(items[items.length - 1], false);\n        }\n    }\n    openSubLevel(menuItem) {\n        if (menuItem && menuItem.items && !this.isFilteringMode) {\n            this.showSubLevel(menuItem);\n            menuItem.subLevel.activateItem(menuItem.subLevel.items[0]);\n        }\n    }\n    focusScrollDiv() {\n        this.scrollDiv.focus();\n    }\n    turnCheckboxes(items) {\n        //turn checkboxes on for selected items\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.itemCheckbox)\n                item.itemCheckbox.checked = this.isItemSelected(item);\n            if (item.items) {\n                this.turnCheckboxes(item.items);\n            }\n        }\n    }\n    isItemSelected(item) {\n        if (item.items) {\n            for (var i = 0; i < item.items.length; i++) {\n                if (this.isItemSelected(item.items[i])) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return item.selected;\n        }\n    }\n    setItemSelected(item, value) {\n        if (item.items) {\n            for (let i = 0; i < item.items.length; i++) {\n                this.setItemSelected(item.items[i], value);\n            }\n        }\n        else {\n            item.selected = value;\n        }\n    }\n    submitItems(items, selectedItems) {\n        for (let j = 0; j < items.length; j++) {\n            if (items[j].items) {\n                this.submitItems(items[j].items, selectedItems);\n            }\n            else {\n                if (items[j].selected) {\n                    selectedItems.push(items[j]);\n                }\n            }\n        }\n    }\n    allSubitemsAreFiltered(items, filterCallback) {\n        for (let i = 0; i < items.length; i++) {\n            if (filterCallback(items[i]))\n                return false;\n        }\n        return true;\n    }\n    isItemDiv(element) {\n        return element['menuItem'] ? true : false;\n    }\n    isLevelDiv(element) {\n        return element['menuLevel'] ? true : false;\n    }\n    getMenuItem(element) {\n        let el = element;\n        while (!this.isItemDiv(el)) {\n            if (this.isLevelDiv(el)) {\n                throw \"Can't get menu item\";\n            }\n            el = el.parentElement;\n        }\n        return el['menuItem'];\n    }\n    renderItemsWithoutFilter() {\n        this.isFilteringMode = false;\n        const scrollDiv = this.scrollDiv;\n        const multiselect = this.parentMenu.options.multiselect;\n        const activateOnMouseOver = this.parentMenu.options.activateOnMouseOver;\n        const itemFgColor = this.parentMenu.style.colors.fgON || 'black';\n        this.parentMenu.style.colors.bgOVER || 'LightSteelBlue';\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || '14px';\n        const itemFilterCallback = this.parentMenu.getItemFilterCallback();\n        scrollDiv.innerHTML = \"\";\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (!item || !item.text)\n                continue;\n            if (itemFilterCallback) {\n                if (!itemFilterCallback(item))\n                    continue;\n                if (item.items && this.allSubitemsAreFiltered(item.items, itemFilterCallback))\n                    continue;\n            }\n            item.data = (propName) => {\n                return this[propName];\n            };\n            if (typeof (item.selected) == \"undefined\") {\n                item.selected = false;\n            }\n            if (item.selected && this.selectedItem == null) {\n                this.selectedItem = item;\n            }\n            const itemDiv = document.createElement(\"div\");\n            domel(itemDiv)\n                .addClass(`${this.cssPrefix}-itemDiv`)\n                .addClass(browserUtils.getMobileCssClass());\n            if (item.selected && this.showSelected && !multiselect) {\n                itemDiv.classList.add(`${this.cssPrefix}-selected`);\n            }\n            if (this.domWriteItemsId && this.menuId) {\n                itemDiv.id = 'item-' + this.menuId + '-' + item.id;\n            }\n            scrollDiv.appendChild(itemDiv);\n            itemDiv['menuItem'] = item;\n            itemDiv['menuLevel'] = this;\n            item.itemDiv = itemDiv;\n            if (this.parentMenu.options.useDefaultStyles) {\n                itemDiv.style.fontSize = itemFontSize;\n                itemDiv.style.color = itemFgColor;\n                itemDiv.style.paddingLeft = \"15px\";\n                itemDiv.style.paddingRight = \"6px\";\n                itemDiv.style.cursor = \"pointer\";\n            }\n            if (item.text == '---') {\n                itemDiv.appendChild(document.createElement('hr'));\n            }\n            else {\n                if (multiselect) {\n                    var cb = document.createElement(\"input\");\n                    cb.type = \"checkbox\";\n                    cb.id = \"cb\" + item.id;\n                    cb.checked = this.isItemSelected(item);\n                    cb.defaultChecked = this.isItemSelected(item);\n                    itemDiv.appendChild(cb);\n                    item.itemCheckbox = cb;\n                    if (this.parentMenu.options.useDefaultStyles) {\n                        cb.style.margin = \"4px 10px 0 0\";\n                        cb.style.verticalAlign = \"top\";\n                    }\n                }\n                let itemText = item.text;\n                if (this.parentMenu.options.showItemIds) {\n                    itemText = item.id + ':' + itemText;\n                }\n                const itemTextNode = document.createTextNode(itemText);\n                itemDiv.appendChild(itemTextNode);\n                if (item.items && item.items.length > 0) {\n                    itemDiv.classList.add(`${this.cssPrefix}-itemDiv-hasChildren`);\n                    const arrowSpan = document.createElement('span');\n                    arrowSpan.classList.add(`${this.cssPrefix}-itemDiv-arrow`);\n                    itemDiv.appendChild(arrowSpan);\n                    const arrowText = document.createTextNode('>');\n                    arrowSpan.appendChild(arrowText);\n                }\n                const itemClickHandler = (ev) => {\n                    const menuItem = this.getMenuItem(ev.target);\n                    if (multiselect) {\n                        if (!menuItem.items || ev.target == menuItem.itemCheckbox) {\n                            const itemSelected = this.isItemSelected(menuItem);\n                            this.setItemSelected(menuItem, !itemSelected);\n                            menuItem.itemCheckbox.checked = !itemSelected;\n                            this.parentMenu.refreshCheckboxes();\n                        }\n                        else {\n                            this.activateItem(menuItem);\n                        }\n                    }\n                    else {\n                        this.activateItem(menuItem);\n                        this.submit(menuItem);\n                    }\n                    return false;\n                };\n                itemDiv.removeEventListener(\"click\", itemClickHandler);\n                itemDiv.addEventListener('click', itemClickHandler);\n                itemDiv.addEventListener('mouseenter', (ev) => {\n                    const item = this.getMenuItem(ev.target);\n                    this.parentMenu.isCursorInside = true;\n                    if (activateOnMouseOver) {\n                        this.activateItem(item);\n                    }\n                });\n                itemDiv.addEventListener('mouseleave', (ev) => {\n                    const item = this.getMenuItem(ev.target);\n                    this.parentMenu.isCursorInside = false;\n                    setTimeout(() => {\n                        if (!this.parentMenu.isCursorInside) {\n                            if (activateOnMouseOver && item == this.activeItem && !item.subLevel) {\n                                this.deactivateItem(item);\n                            }\n                        }\n                    }, 200);\n                });\n            }\n            if (this.itemRenderedCallback) {\n                this.itemRenderedCallback(this.menuId, itemDiv);\n            }\n        }\n    }\n    renderItemsWithFilter(filter) {\n        this.isFilteringMode = true;\n        const scrollDiv = this.scrollDiv;\n        scrollDiv.innerHTML = \"\";\n        const filterSections = filter.split('>');\n        const pureFilterTexts = filterSections.map(section => section.replace(/\\*/g, ''));\n        const items = this.filterItems(this.items, filterSections);\n        this.filteredItems = [];\n        for (let i = 0; i < items.length; i++) {\n            this.renderItemWithFilter(items[i], pureFilterTexts, 0);\n        }\n    }\n    matchesFilter(text, regexp) {\n        if (text && regexp) {\n            return regexp.test(text);\n        }\n        else {\n            return true;\n        }\n    }\n    filterItems(items, filterSections) {\n        const resultItems = [];\n        const filter = filterSections.length > 0 ? filterSections[0] : '';\n        const restFilterSections = filterSections.length > 1 ? filterSections.slice(1) : filterSections;\n        const filterRegexp = filter ? new RegExp(filter.replace(/\\*/g, '.+?'), 'i') : null;\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.items) {\n                const groupItem = utils.assign({}, item);\n                const groupItemMatches = this.matchesFilter(item.text, filterRegexp);\n                //if we have only one filter section (or an empty filter)\n                if (filterSections.length < 2) {\n                    //if current group item matches the filter -> show all sub-items\n                    if (groupItemMatches && filterSections.length < 2) {\n                        groupItem.items = utils.createArrayFrom(item.items);\n                    }\n                    else {\n                        groupItem.items = this.filterItems(item.items, restFilterSections);\n                    }\n                }\n                //if we have more than 1 filter section and there is a match -> filter sub-items as well\n                else if (groupItemMatches) {\n                    groupItem.items = this.filterItems(item.items, restFilterSections);\n                }\n                //otherwise we skip this group at all\n                else {\n                    groupItem.items = [];\n                }\n                if (groupItem.items.length > 0) {\n                    resultItems.push(groupItem);\n                }\n            }\n            else {\n                if (this.matchesFilter(item.text, filterRegexp)) {\n                    resultItems.push(item);\n                }\n            }\n        }\n        return resultItems;\n    }\n    renderItemWithFilter(item, filterTexts, level) {\n        const scrollDiv = this.scrollDiv;\n        const levelFilterText = level < filterTexts.length ? filterTexts[level] : filterTexts[filterTexts.length - 1];\n        const multiselect = this.parentMenu.options.multiselect;\n        const activateOnMouseOver = this.parentMenu.options.activateOnMouseOver;\n        const itemFgColor = this.parentMenu.style.colors.fgON || 'black';\n        this.parentMenu.style.colors.bgOVER || 'LightSteelBlue';\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || '14px';\n        const itemFilterCallback = this.parentMenu.getItemFilterCallback();\n        if (!item || !item.text)\n            return;\n        if (itemFilterCallback) {\n            if (!itemFilterCallback(item))\n                return;\n            if (item.items && this.allSubitemsAreFiltered(item.items, itemFilterCallback))\n                return;\n        }\n        item.data = function (propName) {\n            return this[propName];\n        };\n        if (typeof (item.selected) == \"undefined\") {\n            item.selected = false;\n        }\n        if (item.selected && this.selectedItem == null) {\n            this.selectedItem = item;\n        }\n        const itemDiv = document.createElement(\"div\");\n        domel(itemDiv)\n            .addClass(`${this.cssPrefix}-itemDiv`)\n            .addClass(browserUtils.getMobileCssClass());\n        itemDiv.style.marginLeft = `${level * 10}px`;\n        if (item.selected && !multiselect) {\n            itemDiv.classList.add(`${this.cssPrefix}-selected`);\n        }\n        if (this.domWriteItemsId && this.menuId) {\n            itemDiv.id = 'item-' + this.menuId + '-' + item.id;\n        }\n        scrollDiv.appendChild(itemDiv);\n        itemDiv['menuItem'] = item;\n        itemDiv['menuLevel'] = this;\n        item.itemDiv = itemDiv;\n        if (this.parentMenu.options.useDefaultStyles) {\n            itemDiv.style.fontSize = itemFontSize;\n            itemDiv.style.color = itemFgColor;\n            itemDiv.style.paddingLeft = \"15px\";\n            itemDiv.style.paddingRight = \"6px\";\n            itemDiv.style.cursor = \"pointer\";\n        }\n        if (item.text == '---') {\n            itemDiv.appendChild(document.createElement('hr'));\n        }\n        else {\n            if (multiselect) {\n                var cb = document.createElement(\"input\");\n                cb.type = \"checkbox\";\n                cb.id = \"cb\" + item.id;\n                cb.checked = this.isItemSelected(item);\n                cb.defaultChecked = this.isItemSelected(item);\n                itemDiv.appendChild(cb);\n                item.itemCheckbox = cb;\n                if (this.parentMenu.options.useDefaultStyles) {\n                    cb.style.margin = \"4px 10px 0 0\";\n                    cb.style.verticalAlign = \"top\";\n                }\n            }\n            const itemText = document.createElement('span');\n            itemText.innerHTML = this.highlightText(item.text, levelFilterText);\n            itemDiv.appendChild(itemText);\n            if (item.items && item.items.length > 0) {\n                itemDiv.classList.add(`${this.cssPrefix}-itemDiv-filter-hasChildren`);\n            }\n            else {\n                this.filteredItems.push(item);\n                const itemClickHandler = (event) => {\n                    if (multiselect) {\n                        if (!item.items || event.target == item.itemCheckbox) {\n                            const itemSelected = this.isItemSelected(item);\n                            this.setItemSelected(item, !itemSelected);\n                            item.itemCheckbox.checked = !itemSelected;\n                            this.parentMenu.refreshCheckboxes();\n                        }\n                        else {\n                            this.activateItem(item);\n                        }\n                    }\n                    else {\n                        this.activateItem(item);\n                        this.submit(item);\n                    }\n                    return false;\n                };\n                itemDiv.removeEventListener(\"click\", itemClickHandler);\n                itemDiv.addEventListener('click', itemClickHandler);\n                itemDiv.addEventListener('mouseenter', (ev) => {\n                    this.parentMenu.isCursorInside = true;\n                    if (activateOnMouseOver) {\n                        this.activateItem(item);\n                    }\n                });\n                itemDiv.addEventListener('mouseleave', (ev) => {\n                    this.parentMenu.isCursorInside = false;\n                    setTimeout(() => {\n                        if (!this.parentMenu.isCursorInside) {\n                            if (activateOnMouseOver && item == this.activeItem && !item.subLevel) {\n                                this.deactivateItem(item);\n                            }\n                        }\n                    }, 200);\n                });\n            }\n        }\n        if (item.items) {\n            for (let i = 0; i < item.items.length; i++) {\n                this.renderItemWithFilter(item.items[i], filterTexts, level + 1);\n            }\n        }\n        if (this.itemRenderedCallback) {\n            this.itemRenderedCallback(this.menuId, itemDiv);\n        }\n    }\n    highlightText(content, text) {\n        if (text && text.length > 0) {\n            const lowerText = text.toLowerCase();\n            const lowerContent = content.toLowerCase();\n            const insertValue1 = `<span class='eqjs-menu-itemDiv-highlight'>`;\n            const insertValue2 = `</span>`;\n            const startIndex = lowerContent.indexOf(lowerText);\n            if (startIndex >= 0) {\n                let pos = 0;\n                const value = content;\n                const indexInMas = [];\n                while (true) {\n                    const index = lowerContent.indexOf(lowerText, pos);\n                    if (index >= 0) {\n                        indexInMas.push(index);\n                        pos = index + text.length;\n                    }\n                    else {\n                        pos++;\n                    }\n                    if (pos >= value.length - 1) {\n                        break;\n                    }\n                }\n                if (indexInMas.length > 0) {\n                    content = '';\n                    for (let i = 0; i < indexInMas.length; i++) {\n                        if (i === 0) {\n                            content += value.substring(0, indexInMas[i]);\n                        }\n                        content += insertValue1 + value.substring(indexInMas[i], indexInMas[i] + text.length) + insertValue2;\n                        if (i < indexInMas.length - 1) {\n                            content += value.substring(indexInMas[i] + text.length, indexInMas[i + 1]);\n                        }\n                        else {\n                            content += value.substring(indexInMas[i] + text.length);\n                        }\n                    }\n                }\n            }\n        }\n        return content;\n    }\n    renderItems(filter) {\n        if (!filter && !browserUtils.isMobileMode()) {\n            this.renderItemsWithoutFilter();\n        }\n        else {\n            filter = filter || '';\n            this.renderItemsWithFilter(filter.toLowerCase());\n        }\n    }\n    activateItem(menuItem, openSubLevel = true) {\n        if (this.activeItem != null) {\n            this.deactivateItem(this.activeItem);\n        }\n        this.activeItem = menuItem;\n        const rowElement = menuItem.itemDiv;\n        rowElement.classList.add('active');\n        if (this.parentMenu.options.useDefaultStyles) {\n            this.parentMenu.style.colors.bgON;\n            this.parentMenu.style.colors.fgON;\n            const itemOverBgColor = this.parentMenu.style.colors.bgOVER;\n            const itemOverFgColor = this.parentMenu.style.colors.fgOVER || \"\";\n            this.parentMenu.style.itemClass || \"\";\n            const itemClassOver = this.parentMenu.style.itemClassOver || \"\";\n            if (itemClassOver != \"\") {\n                rowElement.style.backgroundColor = \"\";\n                rowElement.style.color = \"\";\n            }\n            else {\n                rowElement.style.backgroundColor = itemOverBgColor;\n                rowElement.style.color = itemOverFgColor;\n            }\n        }\n        if (menuItem.items && !this.isFilteringMode && openSubLevel) {\n            this.showSubLevel(menuItem);\n        }\n    }\n    deactivateItem(menuItem) {\n        if (!menuItem)\n            return;\n        const rowElement = menuItem.itemDiv;\n        rowElement.classList.remove('active');\n        if (this.parentMenu.options.useDefaultStyles) {\n            const itemBgColor = this.parentMenu.style.colors.bgON;\n            const itemFgColor = this.parentMenu.style.colors.fgON;\n            const itemClass = this.parentMenu.style.itemClass || \"\";\n            if (itemClass != \"\") {\n                rowElement.style.backgroundColor = \"\";\n                rowElement.style.color = \"\";\n            }\n            else {\n                rowElement.style.backgroundColor = itemBgColor;\n                rowElement.style.color = itemFgColor;\n            }\n        }\n        if (menuItem.subLevel) {\n            menuItem.subLevel.hide();\n        }\n        this.activeItem = null;\n    }\n    showSubLevel(menuItem) {\n        if (!menuItem.subLevel) {\n            let levelId = '';\n            if (this.menuId) {\n                levelId = this.menuId + \"-\" + menuItem.id;\n            }\n            menuItem.subLevel = new MenuLevel({\n                showSelected: this.showSelected,\n                menu: this.parentMenu,\n                parent: this,\n                container: this.parentElement,\n                items: menuItem.items,\n                levelIndex: this.levelIndex + 1,\n                domWriteItemsId: this.domWriteItemsId,\n                menuId: levelId,\n                itemRenderedCallback: this.itemRenderedCallback\n            });\n        }\n        const pos = getElementAbsolutePos(menuItem.itemDiv);\n        const scroll = getScrollPos();\n        const winSize = getWinSize();\n        //show menu to the side that have more space available\n        const leftSpace = pos.x - scroll.left;\n        const rightSpace = winSize.width - leftSpace - menuItem.itemDiv.offsetWidth;\n        pos.x += menuItem.itemDiv.offsetParent.offsetWidth;\n        pos.y += 1;\n        menuItem.subLevel.showAt(pos.x, pos.y, true, true);\n        menuItem.subLevel.levelDiv.style.width = '';\n        menuItem.subLevel.levelDiv.style.right = '';\n        if ((rightSpace >= menuItem.subLevel.levelDiv.offsetWidth) || (rightSpace >= leftSpace)) { //show level to the right\n            if (rightSpace < menuItem.subLevel.levelDiv.offsetWidth) {\n                menuItem.subLevel.levelDiv.style.right = -scroll.left + 'px';\n            }\n        }\n        else { //show level to the left\n            if (leftSpace < menuItem.subLevel.levelDiv.offsetWidth) {\n                menuItem.subLevel.levelDiv.style.left = scroll.left + 4 + 'px';\n            }\n            else {\n                menuItem.subLevel.levelDiv.style.left = '';\n            }\n            menuItem.subLevel.levelDiv.style.right = getViewportSize().width - pos.x + menuItem.itemDiv.offsetWidth - 6 + 'px';\n        }\n        menuItem.subLevel.levelDiv.style.visibility = 'visible';\n        menuItem.subLevel.focus();\n    }\n    adjustTopPos(top) {\n        const winSize = getWinSize();\n        const levelBottom = top - getScrollPos().top + this.levelDiv.offsetHeight;\n        let res = top;\n        if (levelBottom > winSize.height - 5) {\n            res -= levelBottom - winSize.height + 5;\n            if (res < getScrollPos().top) {\n                res = getScrollPos().top + 10;\n            }\n        }\n        return res;\n    }\n    showAt(x, y, adjustTopPos, hidden) {\n        if (!this.items) {\n            return;\n        }\n        this.initLevelDiv();\n        //crocodile\n        this.turnCheckboxes(this.items);\n        this.renderItems();\n        const levelStyle = this.levelDiv.style;\n        if (hidden) {\n            this.levelDiv.style.visibility = 'hidden';\n        }\n        levelStyle.display = 'block';\n        levelStyle.left = x + 'px';\n        levelStyle.top = y + 'px';\n        this.scrollDiv.style.width = \"auto\";\n        this.scrollDiv.style.height = \"auto\";\n        //adjusting level top position\n        if (adjustTopPos) {\n            y = this.adjustTopPos(y);\n            levelStyle.top = y + 'px';\n        }\n        //setting minimal level width if it is defined\n        let minItemWidth = this.parentMenu.minItemWidth;\n        if (minItemWidth > 0 && this.scrollDiv.offsetWidth < minItemWidth) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].itemDiv.style.width = minItemWidth + \"px\";\n            }\n        }\n        let maxItemWidth = this.parentMenu.maxItemWidth;\n        if (maxItemWidth > 0 && this.scrollDiv.offsetWidth > maxItemWidth) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].itemDiv.style.width = maxItemWidth + \"px\";\n                this.items[i].itemDiv.style.overflowX = \"hidden\";\n            }\n        }\n        const winSize = getWinSize();\n        //adjustinng maximum height of the menu level if it does not fit to browser window\n        let maxHeight = winSize.height - (y - getScrollPos().top) - 15; //document.documentElement.scrollTop\n        if (this.parentMenu.maxHeight > 0 && maxHeight > this.parentMenu.maxHeight) {\n            maxHeight = this.parentMenu.maxHeight;\n        }\n        if (this._applyItem != null && this._applyItem.itemDiv != null) {\n            maxHeight -= this._applyItem.itemDiv.offsetHeight + 5;\n        }\n        if (this.searchDiv != null) {\n            maxHeight -= this.searchDiv.offsetHeight;\n        }\n        if (this.closeDiv != null) {\n            maxHeight -= this.closeDiv.offsetHeight;\n        }\n        if (this.levelDiv.offsetHeight > maxHeight) {\n            let newHeight = maxHeight;\n            if (newHeight < 50) {\n                newHeight = 50;\n            }\n            this.scrollDiv.style.height = newHeight + \"px\";\n        }\n        else {\n            this.scrollDiv.style.height = \"auto\";\n        }\n        this.activeItem = null;\n    }\n    focus() {\n        window.setTimeout(() => {\n            this.scrollDiv.focus();\n            if (this.searchBox != null) {\n                if (this.parentMenu.options.searchBoxAutoFocus) {\n                    this.searchBox.focus();\n                }\n                this.searchBox.value = \"\";\n            }\n        }, 100);\n    }\n    hide() {\n        if (this.activeItem !== null) {\n            if (this.activeItem.subLevel) {\n                this.activeItem.subLevel.hide();\n            }\n        }\n        if (this.levelDiv) {\n            var levelStyle = this.levelDiv.style;\n            levelStyle.display = 'none';\n            if (this.initialized) {\n                this.parentElement.removeChild(this.levelDiv);\n                this.initialized = false;\n            }\n        }\n    }\n    initLevelDiv() {\n        if (!this.initialized) {\n            this.parentElement.appendChild(this.levelDiv);\n            domel(this.levelDiv)\n                .addClass(`${this.cssPrefix}-levelDiv`)\n                .addClass(browserUtils.getMobileCssClass());\n            this.initialized = true;\n        }\n    }\n    submit(menuItem) {\n        if (menuItem != null) {\n            if (!menuItem.items) {\n                this.parentMenu.hideMenu();\n                let selectedItems = [];\n                if (menuItem == this._applyItem) {\n                    this.submitItems(this.items, selectedItems);\n                }\n                this.parentMenu.submitMenu(menuItem, selectedItems);\n            }\n        }\n    }\n    remove() {\n        //remove old level elements\n        for (let i = 0; i < this.items.length; i++) {\n            let item = this.items[i];\n            if (item.subLevel) {\n                item.subLevel.remove();\n            }\n        }\n        if (this.levelDiv) {\n            this.levelDiv.innerHTML = \"\";\n            const parentNode = this.levelDiv.parentNode;\n            if (parentNode != null) {\n                parentNode.removeChild(this.levelDiv);\n            }\n        }\n        this.levelDiv = null;\n    }\n    update(newItems) {\n        this.remove();\n        //create new level\n        this.items = newItems;\n        this.activeItem = null;\n        this.selectedItem = null;\n        this._applyItem.itemDiv = null;\n        this.initialized = false;\n        this.updated++;\n        this.renderContent();\n    }\n    refreshCheckboxes() {\n        for (var i = 0; i < this.items.length; i++) {\n            var item = this.items[i];\n            if (item.itemCheckbox) {\n                item.itemCheckbox.checked = this.isItemSelected(item);\n            }\n            if (item.subLevel) {\n                item.subLevel.refreshCheckboxes();\n            }\n        }\n    }\n    refreshItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (item.itemDiv) {\n                if (item.hidden) {\n                    item.itemDiv.style.display = \"none\";\n                }\n                else {\n                    item.itemDiv.style.display = \"block\";\n                }\n            }\n            if (item.subLevel) {\n                item.subLevel.refreshItems();\n            }\n        }\n    }\n    findItem(searchedText) {\n        const txt = searchedText.toLowerCase();\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (item.text.toLowerCase().indexOf(txt) == 0) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\nclass PopupMenu {\n    get cssPrefix() {\n        return 'eqjs-menu';\n    }\n    constructor(options) {\n        this.isCursorInside = false;\n        this.mouseIsOverBlock = false;\n        this.mouseIsOverLink = false;\n        this.toId = null;\n        this.active = false;\n        this.ancorFocused = null;\n        this.options = {\n            items: [],\n            buttons: {\n                submit: i18n.getText('ButtonApply'),\n                cancel: i18n.getText('ButtonCancel')\n            },\n            itemFilterCallback: null,\n            useDefaultStyles: false,\n            multiselect: false,\n            adjustHeight: true,\n            showSearchBoxAfter: 30,\n            activateOnMouseOver: true,\n            container: document.body,\n            domWriteItemsId: false,\n            itemRenderedCallback: null,\n            showItemIds: false\n        };\n        if (options) {\n            utils.assign(this.options, options);\n            utils.assign(this.options.buttons, options.buttons);\n        }\n        if (this.options.hideButtons) {\n            this.options.submitOnBlur = true;\n        }\n        this.menuId = PopupMenu.lastMenuID++;\n        this.updateProps();\n        this.rootLevel = new MenuLevel({\n            menu: this,\n            items: this.options.items,\n            levelIndex: 0,\n            container: this.options.container,\n            domWriteItemsId: this.options.domWriteItemsId,\n            menuId: this.options.id,\n            itemRenderedCallback: this.options.itemRenderedCallback,\n            showSelected: this.options.showSelected,\n        });\n        this.rootLevel.levelDiv.classList.add(`${this.cssPrefix}-rootLevel`);\n        if (this.options.zIndex)\n            this.rootLevel.levelDiv.style.zIndex = `${this.options.zIndex}`;\n        this.menuKeyUpHandler = (e) => {\n            if (e.which == 27) {\n                this.hideMenu();\n                e.stopImmediatePropagation();\n            }\n        };\n        this.globalMouseDownHandler = (e) => {\n            if (!this.active)\n                return true;\n            let event = window.event || e;\n            let o = event.srcElement || event.target;\n            let isOutside = true;\n            while (o) {\n                if (o.tagName && o.tagName.toLowerCase() == 'div') {\n                    // it is added in renderContent of MenuLevel class\n                    if (o.menuLevel) {\n                        if (o.menuLevel.parentMenu == this) {\n                            isOutside = false;\n                            break;\n                        }\n                    }\n                }\n                o = o.parentNode || o.parentElement;\n            }\n            if (isOutside) {\n                if (this.options.submitOnBlur) {\n                    this.rootLevel.submit(this.rootLevel.applyItem);\n                }\n                this.hideMenu();\n            }\n            return true;\n        };\n        this.render();\n    }\n    getItems() {\n        return this.rootLevel.getItems();\n    }\n    updateProps() {\n        this.style = {};\n        this.style.colors = { border: \"#666666\", shadow: \"#888888\", bgON: \"white\", fgON: \"black\", bgOVER: \"#B6BDD2\", fgOVER: \"black\" };\n        this.style.itemStyle = { fontSize: \"14px\" };\n        this.minItemWidth = 0;\n        this.maxItemWidth = 0;\n        this.maxHeight = 0;\n        this.zIndex = `${this.options.zIndex}`;\n        this.commandTemplate = \"\";\n        this.args = [];\n        this.active = false;\n    }\n    render() {\n    }\n    clearItemsMenuProps(items) {\n        if (!items)\n            return;\n        for (var i = 0; i < items.length; i++) {\n            this.clearItemMenuProps(items[i]);\n        }\n    }\n    clearItemMenuProps(item) {\n        //don't clear properties they belong this menu\n        if (item.subLevel && item.subLevel.parentMenu == this)\n            return;\n        if (item.subLevel) {\n            item.subLevel.remove();\n            item.subLevel = null;\n        }\n        if (item.itemDiv) {\n            item.itemDiv = null;\n        }\n        if (item.items) {\n            this.clearItemsMenuProps(item.items);\n        }\n    }\n    setSelectedItems(items, selectedIds) {\n        const itemsLength = items ? items.length : 0;\n        for (let i = 0; i < itemsLength; i++) {\n            const item = items[i];\n            if (item.items) {\n                this.setSelectedItems(item.items, selectedIds);\n            }\n            else {\n                item.selected = selectedIds.indexOf(item.id) >= 0;\n            }\n        }\n    }\n    getRootLevel() {\n        return this.rootLevel;\n    }\n    getItemFilterCallback() {\n        return this.itemFilterCallback;\n    }\n    showMenu(options) {\n        this.ancorFocused = options.anchor == document.activeElement ? options.anchor : null;\n        this.clearItemsMenuProps(this.options.items);\n        this.itemSelectedCallback = options.itemSelectedCallback || null;\n        this.menuClosedCallback = options.menuClosedCallback || null;\n        this.itemFilterCallback = options.itemFilterCallback || null;\n        if (options.items) {\n            this.options.items = options.items;\n            this.rootLevel.setItems(options.items);\n        }\n        if (options.onMenuItemSelected) {\n            this.options.onMenuItemSelected = options.onMenuItemSelected;\n        }\n        let selectedIds = options.selectedIds || null;\n        if (selectedIds) {\n            if (typeof selectedIds === \"string\") {\n                selectedIds = selectedIds.split(\",\");\n            }\n        }\n        else {\n            selectedIds = [];\n        }\n        this.active = true;\n        this.setSelectedItems(this.options.items, selectedIds);\n        if (browserUtils.isMobileMode()) {\n            this.rootLevel.showAt(0, 0, true, true);\n            this.rootLevel.levelDiv.style.top = '0px';\n            this.rootLevel.levelDiv.style.bottom = '0px';\n            this.rootLevel.levelDiv.style.right = '0px';\n            this.rootLevel.levelDiv.style.position = 'fixed';\n            this.rootLevel.levelDiv.style.fontSize = '20px';\n        }\n        else {\n            const anchor = options.anchor || document.documentElement;\n            const srcPos = getElementAbsolutePos(anchor);\n            const anchorHeight = anchor.offsetHeight;\n            const anchorWidth = anchor.offsetWidth;\n            const pos = {\n                x: srcPos.x,\n                y: srcPos.y + anchorHeight + 2\n            };\n            const scroll = getScrollPos();\n            const winSize = getWinSize();\n            //show menu to the side that have more space available\n            const leftSpace = pos.x + anchorWidth - scroll.left;\n            const rightSpace = winSize.width - leftSpace + anchorWidth;\n            pos.x += 2;\n            this.rootLevel.showAt(pos.x, pos.y, true, true);\n            this.rootLevel.levelDiv.style.width = '';\n            this.rootLevel.levelDiv.style.right = '';\n            if (!this.rootLevel.levelDiv.style.zIndex) {\n                // z-index is at least 10000 and more if anchor has bigger\n                this.rootLevel.levelDiv.style.zIndex = `${Math.max(10000, findHighestZIndex(anchor) + 1)}`;\n            }\n            if ((rightSpace >= this.rootLevel.levelDiv.offsetWidth) || (rightSpace >= leftSpace)) {\n                //show level to the right\n                if (rightSpace < this.rootLevel.levelDiv.offsetWidth) {\n                    this.rootLevel.levelDiv.style.right = -scroll.left + 'px';\n                }\n            }\n            else {\n                //show level to the left\n                if (leftSpace < this.rootLevel.levelDiv.offsetWidth) {\n                    this.rootLevel.levelDiv.style.left = scroll.left + 4 + 'px';\n                }\n                else {\n                    this.rootLevel.levelDiv.style.left = '';\n                }\n                this.rootLevel.levelDiv.style.right = getViewportSize().width - pos.x - anchorWidth + 'px';\n            }\n            this.rootLevel.levelDiv.style.fontSize = '14px';\n        }\n        this.rootLevel.levelDiv.style.visibility = 'visible';\n        this.rootLevel.focus();\n        document.addEventListener('keyup', this.menuKeyUpHandler);\n        document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n    }\n    hideMenu() {\n        document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n        document.removeEventListener('keyup', this.menuKeyUpHandler);\n        this.rootLevel.hide();\n        if (this.ancorFocused) {\n            this.ancorFocused.focus();\n        }\n        if (this.menuClosedCallback) {\n            this.menuClosedCallback();\n        }\n    }\n    submitMenu(menuItem, selectedItems) {\n        if (this.itemSelectedCallback) {\n            this.itemSelectedCallback(menuItem, selectedItems);\n        }\n    }\n    knockMenuStyle(menu) {\n        menu.removeAttribute('style');\n        const ul = menu.querySelectorAll('ul').item(0);\n        var hasUlStyle = ul && ul.style ? true : false;\n        if (hasUlStyle !== false) {\n            ul.setAttribute('style', '');\n        }\n    }\n    refreshItems() {\n        this.rootLevel.refreshItems();\n    }\n    refreshCheckboxes() {\n        this.rootLevel.refreshCheckboxes();\n    }\n}\nPopupMenu.lastMenuID = 0;\n\nclass DisplayFormatParser {\n    constructor() {\n        this.formatStr = '';\n        this.pos = 0;\n        this.token = 'text';\n        this.tokenText = '';\n    }\n    start(s) {\n        this.formatStr = s;\n        this.pos = 0;\n        this.tokenText = '';\n    }\n    skipSpaces() {\n        while (this.pos < this.formatStr.length && this.formatStr.charAt(this.pos) === ' ')\n            this.pos++;\n    }\n    getToken() {\n        return this.token;\n    }\n    getTokenText() {\n        return this.tokenText;\n    }\n    next() {\n        this.skipSpaces();\n        if (this.pos >= this.formatStr.length)\n            return false;\n        let npos = 0;\n        if (this.formatStr.charAt(this.pos) === '{') {\n            npos = this.formatStr.indexOf('}', this.pos);\n            if (npos < 0)\n                return false;\n            this.tokenText = this.formatStr.substring(this.pos, npos + 1);\n            if (this.tokenText.indexOf('{expr') === 0 || this.tokenText.indexOf('{attr') === 0) {\n                this.token = 'expression';\n            }\n            this.pos = npos + 1;\n        }\n        else if (this.formatStr.charAt(this.pos) === '[' && this.pos < this.formatStr.length - 1 && this.formatStr.charAt(this.pos + 1) === '[') {\n            this.pos += 2;\n            npos = this.formatStr.indexOf(']]', this.pos);\n            this.token = 'function';\n            this.tokenText = this.formatStr.substring(this.pos, npos);\n            this.pos = npos + 2;\n        }\n        else {\n            this.token = 'text';\n            let npos1 = this.formatStr.indexOf('{', this.pos);\n            if (npos1 < 0)\n                npos1 = this.formatStr.length;\n            let npos2 = this.formatStr.indexOf('[[', this.pos);\n            if (npos2 < 0)\n                npos2 = this.formatStr.length;\n            npos = Math.min(npos1, npos2);\n            this.tokenText = this.formatStr.substring(this.pos, npos).trim();\n            this.pos = npos;\n        }\n        return true;\n    }\n}\n\nvar ColumnAction;\n(function (ColumnAction) {\n    ColumnAction[ColumnAction[\"Enable\"] = 0] = \"Enable\";\n    ColumnAction[ColumnAction[\"Delete\"] = 1] = \"Delete\";\n    ColumnAction[ColumnAction[\"Hidden\"] = 2] = \"Hidden\";\n    ColumnAction[ColumnAction[\"SortingNone\"] = 3] = \"SortingNone\";\n    ColumnAction[ColumnAction[\"SortingAsc\"] = 4] = \"SortingAsc\";\n    ColumnAction[ColumnAction[\"SortingDesc\"] = 5] = \"SortingDesc\";\n    ColumnAction[ColumnAction[\"MoveTop\"] = 6] = \"MoveTop\";\n    ColumnAction[ColumnAction[\"MoveUp\"] = 7] = \"MoveUp\";\n    ColumnAction[ColumnAction[\"MoveDown\"] = 8] = \"MoveDown\";\n    ColumnAction[ColumnAction[\"MoveBottom\"] = 9] = \"MoveBottom\";\n    ColumnAction[ColumnAction[\"Menu\"] = 10] = \"Menu\";\n    ColumnAction[ColumnAction[\"Type\"] = 11] = \"Type\";\n    ColumnAction[ColumnAction[\"Format\"] = 12] = \"Format\";\n})(ColumnAction || (ColumnAction = {}));\nclass ColumnRendererCP {\n    constructor(panel, column, slot) {\n        this.functionMenu = null;\n        this.formatsMenu = null;\n        this.buttonMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.panel = panel;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-qc';\n    }\n    get columnEnabled() {\n        return this.column.enabled;\n    }\n    set columnEnabled(value) {\n        this.column.enabled = value;\n    }\n    render() {\n        if (this.getButtonsToShow().indexOf(\"sorting\") >= 0 && this.columnEnabled) {\n            this.sortingButton = this.renderSoringButton(this.column.sorting);\n            if (this.column.sorting !== SortDirection.None) {\n                this.sortingButton.style.display = 'block';\n            }\n        }\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.panel.options.allowDragDrop && !browserUtils.isMobileMode()) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSort\",\n                data: { column: this.column },\n                beforeDragStart: () => {\n                    this.hideButtons();\n                },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('span');\n                    attrLabel.innerText = this.column.caption;\n                    dragImage.classList.add('eqjs-sortable-helper');\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    if (!ev.data.finishedSuccessfully) {\n                        this.element.style.removeProperty('display');\n                    }\n                }\n            });\n        }\n        if (this.isEditable()) {\n            this.createFunctionMenu();\n            this.createFormatsMenu();\n        }\n        this.createButtonMenu();\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.renderCheckbox())\n            //start sort button\n            .addChild('div', builder => builder\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortbutton-placeholder`)\n            .addChildElement(this.sortingButton))\n            // end sort button\n            .addChildElement(this.renderExpressionBlock());\n        if (this.panel.options.showColumnTitles !== false && !browserUtils.isMobileMode()) {\n            builder\n                .addChildElement(this.renderCaptionBlock());\n        }\n        builder\n            //start buttons\n            .addChild('div', builder => {\n            builder\n                .addClass(`${eqCssPrefix}-column-buttonsBlock`, `${this.cssPrefix}-buttonsBlock`)\n                .addClass(browserUtils.getMobileCssClass());\n            //start enable button\n            if (this.getButtonsToShow().indexOf(\"enable\") >= 0 && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderEnabledButton());\n            }\n            //end enable button\n            //start aggr func button\n            if (this.getButtonsToShow().indexOf(\"type\") >= 0 && this.columnEnabled) {\n                builder.addChildElement(this.renderColumnTypeButton());\n            }\n            //end aggr func button\n            //start format selector button\n            if (this.getButtonsToShow().indexOf(\"format\") >= 0 && this.columnEnabled) {\n                builder.addChildElement(this.renderColumnFormatButton());\n            }\n            //end format selector button\n            //start delete button\n            if (this.getButtonsToShow().indexOf(\"delete\") >= 0 && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderDeleteButton());\n            }\n            //end delete button\n            //start menu button\n            if (this.getButtonsToShow().indexOf(\"menu\") >= 0 && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderMenuButton());\n            }\n            //end menu button\n        });\n        //end buttons \n        if (!browserUtils.isMobileMode()) {\n            //start event listeners\n            builder\n                .on('mouseenter', this.onMouseEnter.bind(this))\n                .on('mouseleave', this.onMouseLeave.bind(this));\n            //end event listeners\n        }\n        if (this.panel.options.accentActiveColumn || browserUtils.isMobileMode()) {\n            builder\n                .on('click', this.onMouseClick.bind(this)); //touchstart\n        }\n        if (this.panel.options.alwaysShowButtons) {\n            this.showButtons();\n        }\n        return this.element;\n    }\n    onMouseClick(ev) {\n        ev.stopPropagation();\n        this.panel.toggleColumnPicked(this.column);\n        this.adjustButtonsVisibility();\n        if (!browserUtils.isMobileMode()) {\n            this.element.dispatchEvent(createBrowserEvent(\"mouseenter\"));\n        }\n        return false;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    renderCaptionBlock() {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(browserUtils.getMobileCssClass());\n        if (this.isEditable()) {\n            builder\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .title(this.column.caption)\n                .text(this.column.caption)\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                const element = ev.target;\n                const inputEl = element.parentElement.querySelector('input');\n                if (inputEl) {\n                    element.style.display = 'none';\n                    inputEl.style.removeProperty('display');\n                    inputEl.style.minWidth = `${element.clientWidth}`;\n                    inputEl.focus();\n                    this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n                }\n                return false;\n            }) //TO DO:add localization and input field\n            )\n                .addChild('input', builder => builder\n                .hide()\n                .value(this.column.caption)\n                .on('blur keydown', (ev) => {\n                let isEndEvent = false;\n                let save = true;\n                if (ev instanceof KeyboardEvent) {\n                    // Enter\n                    if (ev.keyCode === 13) {\n                        isEndEvent = true;\n                        //ESC\n                    }\n                    else if (ev.keyCode === 27) {\n                        isEndEvent = true;\n                        save = false;\n                    }\n                }\n                else if (ev instanceof FocusEvent) {\n                    isEndEvent = true;\n                }\n                if (isEndEvent) {\n                    const inputEl = ev.target;\n                    const aEl = inputEl.parentElement.querySelector('a');\n                    if (aEl) {\n                        aEl.style.removeProperty('display');\n                        inputEl.style.display = 'none';\n                    }\n                    if (save && this.column.caption !== inputEl.value) {\n                        this.column.caption = inputEl.value;\n                        this.fireColumnChanged();\n                    }\n                    else {\n                        inputEl.value = this.column.caption;\n                        safeFocus(aEl);\n                    }\n                    this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                }\n                return true;\n            }));\n        }\n        else {\n            builder.addChild('span', b => {\n                b.text(this.column.caption)\n                    .title(this.column.caption);\n            });\n        }\n        return builder.toDOM();\n    }\n    renderSoringButton(sorting) {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass;\n        switch (sorting) {\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n            default:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-none`;\n                break;\n        }\n        if (!this.isEditable()) {\n            if (sorting === SortDirection.Ascending\n                || sorting === SortDirection.Descending)\n                return domel('div')\n                    .addClass(sortButtonCssClass, `${eqCssPrefix}-button`, sortButtonDirectionCssClass)\n                    .title(i18n$1.getText('ButtonSorting'))\n                    .toDOM();\n            return null;\n        }\n        return domel('div')\n            .addClass(sortButtonCssClass, `${eqCssPrefix}-button`, sortButtonDirectionCssClass)\n            .data(\"btnplaceholder\", \"\")\n            .title(i18n$1.getText('ButtonSorting'))\n            .attr('tabIndex', '0')\n            .on('click', (ev) => {\n            ev.stopPropagation();\n            this.keepShowingButtons = true;\n            const menu = this.getUIS() ? this.panel.sortMenu || this.panel.moveMenu : this.panel.moveMenu;\n            menu.showMenu({\n                anchor: this.sortingButton,\n                selectedIds: this.column.isHidden() ? ['IsHidden'] : null,\n                itemSelectedCallback: (data, items) => {\n                    let action;\n                    switch (data.id) {\n                        case \"IsHidden\":\n                            action = ColumnAction.Hidden;\n                            break;\n                        case \"MoveTop\":\n                            action = ColumnAction.MoveTop;\n                            break;\n                        case \"MoveDown\":\n                            action = ColumnAction.MoveDown;\n                            break;\n                        case \"MoveUp\":\n                            action = ColumnAction.MoveUp;\n                            break;\n                        case \"MoveBottom\":\n                            action = ColumnAction.MoveBottom;\n                            break;\n                        case \"None\":\n                            action = ColumnAction.SortingNone;\n                            break;\n                        case \"Ascending\":\n                            action = ColumnAction.SortingAsc;\n                            break;\n                        case \"Descending\":\n                            action = ColumnAction.SortingDesc;\n                            break;\n                    }\n                    this.buttonMenuHandler(action, null);\n                },\n                menuClosedCallback: () => {\n                    this.keepShowingButtons = false;\n                    if (!this.isMouseOverBlock) {\n                        this.leaveButtonBlock();\n                    }\n                }\n            });\n        })\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderCheckbox() {\n        if (this.panel.options.showCheckboxes && !this.column.isReadOnly()) {\n            return domel(\"div\")\n                .title(i18n$1.getText('CmdToggleEnable'))\n                .attr('tabIndex', '0')\n                .addClass(`${this.cssPrefix}-colelement ${this.cssPrefix}-column-checkbox`)\n                .addClass(`${this.columnEnabled ? 'enabled' : ''}`)\n                .on('click', () => {\n                this.columnEnabled = !this.columnEnabled;\n                this.column.fireChangedEvent();\n                return false;\n            })\n                .on('keypress', evt => { if ([13, 32].includes(evt.keyCode)) {\n                evt.target.click();\n            } })\n                .toDOM();\n        }\n        else {\n            return null;\n        }\n    }\n    renderDeleteButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-deletebutton-placeholder`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-delete`)\n            .title(i18n$1.getText('CmdDelete'))\n            .attr('tabIndex', '0')\n            .on('click', ev => this.buttonMenuHandler(ColumnAction.Delete, ev)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } }))\n            .toDOM();\n    }\n    renderMenuButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-menubutton-placeholder`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-menu`)\n            .title(i18n$1.getText('ButtonMenu'))\n            .attr('tabIndex', '0')\n            .on('click', evt => this.buttonMenuHandler(ColumnAction.Menu, evt)) //touchstart \n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } }))\n            .toDOM();\n    }\n    getClassesToAdd() {\n        let result = \"\";\n        result += this.columnEnabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.columnEnabled) {\n            result += this.column.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        result += this.column.isHidden() ? ` ${this.cssPrefix}-hidden` : '';\n        return result;\n    }\n    renderColumnTypeButton() {\n        return (this.isEditable() && this.panel.options.allowAggrColumns !== false)\n            ? domel('div')\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-typebutton-placeholder`, `${this.cssPrefix}-button-active`)\n                .data(\"btnplaceholder\", \"\")\n                .addChild('div', b => b\n                .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-type`)\n                .title(i18n$1.getText('ButtonToAggr'))\n                .attr('tabIndex', '0')\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.keepShowingButtons = true;\n                this.changeTypeHandler(ev);\n            })\n                .on('keypress', evt => { if (evt.keyCode == 13) {\n                evt.target.click();\n            } }))\n                .toDOM()\n            : null;\n    }\n    renderColumnFormatButton() {\n        const formatItems = this.getFormatsMenuItems();\n        return (this.isEditable() && this.panel.options.allowDisplayFormatChange !== false && formatItems.length > 1)\n            ? domel('div')\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-formatbutton-placeholder`, `${this.cssPrefix}-button-active`)\n                .data(\"btnplaceholder\", \"\")\n                .addChild('div', b => b\n                .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-format`)\n                .title(i18n$1.getText('ButtonFormat'))\n                .attr('tabIndex', '0')\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.keepShowingButtons = true;\n                this.changeFormatHandler(ev);\n            })\n                .on('keypress', evt => { if (evt.keyCode == 13) {\n                evt.target.click();\n            } }))\n                .toDOM()\n            : null;\n    }\n    renderEnabledButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-enablebutton-placeholder`, `${this.cssPrefix}-button-active`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-enable`)\n            .title(i18n$1.getText('CmdToggleEnable'))\n            .addClass(this.columnEnabled ? 'enabled' : '')\n            .attr('tabIndex', '0')\n            .on('click', evt => this.buttonMenuHandler(ColumnAction.Enable, evt)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })).toDOM();\n    }\n    isEditable() {\n        return this.columnEnabled && !this.column.isReadOnly();\n    }\n    changeFormatHandler(ev) {\n        const formats = this.panel\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let itemId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            itemId = this.column.displayFormat;\n        }\n        this.formatsMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: itemId,\n            itemSelectedCallback: (data, items) => {\n                if (data.id != itemId) {\n                    if (data.id == '{0:__default}') {\n                        this.column.displayFormat = '';\n                    }\n                    else {\n                        this.column.displayFormat = data.id;\n                    }\n                    this.column.fireChangedEvent();\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    getUIS() {\n        return this.panel\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n    onMouseEnter(e) {\n        this.isMouseOverBlock = true;\n        this.enterButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    onMouseLeave(e) {\n        this.isMouseOverBlock = false;\n        this.leaveButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    isColumnActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        domel(this.element).data(\"show-buttons\", null);\n    }\n    showButtons() {\n        domel(this.element).data(\"show-buttons\", \"\");\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtons ||\n            ((this.panel.options.accentActiveColumn || browserUtils.isMobileMode())\n                && this.isColumnActive())) {\n            this.showButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (!this.keepShowingButtons && this.panel.options.alwaysShowButtons !== true && (!this.isColumnActive() || this.panel.options.accentActiveColumn != true)) {\n            this.hideButtons();\n        }\n    }\n    createFunctionMenu() {\n        const items = [];\n        const funcs = this.panel.getContext().getModel().getAggrFunctions();\n        let funcAllowed = true;\n        let item = null;\n        const colDataType = this.column.getDataType();\n        let funcCaption;\n        for (const func of funcs) {\n            if (!func)\n                continue;\n            const toInclude = func.getAppliedTypesOrDefault().indexOf(colDataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.panel.getContext().getModel()\n                    .getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        if (!funcAllowed) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.panel;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n$1.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n    createFormatsMenu() {\n        if (this.panel.options.allowDisplayFormatChange == false)\n            return;\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FormatsMenu';\n        }\n        const items = this.getFormatsMenuItems();\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            showSelected: true,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.formatsMenu = new PopupMenu(menuOptions);\n    }\n    getFormatsMenuItems() {\n        const formats = this.panel.getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        return [{ id: '{0:__default}', text: \"Default\" }]\n            .concat(formats.map(format => ({ id: format.format, text: i18n$1.getText(\"DisplayFormats\", format.name) || format.name })));\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && Array.isArray(this.panel.options.buttons) ? this.panel.options.buttons : [\"enable\", \"delete\", \"type\", \"sorting\", \"format\"];\n    }\n    buttonMenuHandler(action, evt) {\n        switch (action) {\n            case ColumnAction.Delete:\n                const curQuery = this.column.getQuery();\n                curQuery.removeColumn(this.column);\n                curQuery.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column);\n                break;\n            case ColumnAction.Enable:\n                this.columnEnabled = !this.columnEnabled;\n                this.fireColumnChanged();\n                break;\n            case ColumnAction.Hidden:\n                this.column.setHidden(!this.column.isHidden());\n                this.fireColumnChanged();\n                break;\n            case ColumnAction.MoveTop:\n                this.panel.moveColumn(this.column, \"MoveTop\");\n                break;\n            case ColumnAction.MoveBottom:\n                this.panel.moveColumn(this.column, \"MoveBottom\");\n                break;\n            case ColumnAction.MoveUp:\n                this.panel.moveColumn(this.column, \"MoveUp\");\n                break;\n            case ColumnAction.MoveDown:\n                this.panel.moveColumn(this.column, \"MoveDown\");\n                break;\n            case ColumnAction.SortingAsc:\n                this.column.sorting = SortDirection.Ascending;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.SortingDesc:\n                this.column.sorting = SortDirection.Descending;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.SortingNone:\n                this.column.sorting = SortDirection.None;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.Menu:\n                const colMenu = this.buttonMenu;\n                this.keepShowingButtons = true;\n                colMenu.showMenu({\n                    anchor: evt ? evt.target : null,\n                    selectedIds: this.getButtonMenuSelectedItems(),\n                    itemSelectedCallback: (item) => {\n                        let action = item.id;\n                        switch (item.id) {\n                            case \"enable\":\n                                action = ColumnAction.Enable;\n                                break;\n                            case \"delete\":\n                                action = ColumnAction.Delete;\n                                break;\n                            case \"hidden\":\n                                action = ColumnAction.Hidden;\n                                break;\n                            case \"MoveTop\":\n                                action = ColumnAction.MoveTop;\n                                break;\n                            case \"MoveBottom\":\n                                action = ColumnAction.MoveBottom;\n                                break;\n                            case \"MoveUp\":\n                                action = ColumnAction.MoveUp;\n                                break;\n                            case \"MoveDown\":\n                                action = ColumnAction.MoveDown;\n                                break;\n                            case \"None\":\n                                action = ColumnAction.SortingNone;\n                                break;\n                            case \"Ascending\":\n                                action = ColumnAction.SortingAsc;\n                                break;\n                            case \"Descending\":\n                                action = ColumnAction.SortingAsc;\n                                break;\n                        }\n                        this.buttonMenuHandler(action, evt);\n                    },\n                    itemFilterCallback: (item) => {\n                        let result = this.columnEnabled || item.id === \"__group\" || item.id === \"enable\" || item.id === \"delete\";\n                        return result;\n                    },\n                    menuClosedCallback: () => {\n                        this.keepShowingButtons = false;\n                        if (!this.isMouseOverBlock)\n                            this.leaveButtonBlock();\n                    }\n                });\n                break;\n            default:\n                if (!this.processFormatsButtonMenuItems(action, evt))\n                    this.processExtraButtonMenuItems(action, evt);\n                break;\n        }\n        evt && evt.stopPropagation();\n        return false;\n    }\n    createButtonMenu() {\n        if (!this.buttonMenu) {\n            let menuId = this.column.id;\n            if (menuId) {\n                menuId += '-ButtonMenu';\n            }\n            const common = [];\n            common.push({\n                id: \"enable\",\n                text: i18n$1.getText('MenuEnable')\n            });\n            if (this.panel.options.allowHiddenColumns) {\n                common.push({\n                    id: \"hidden\",\n                    text: i18n$1.getText('CmdHiddenColumn')\n                });\n            }\n            common.push({\n                id: \"delete\",\n                text: i18n$1.getText('CmdDelete')\n            });\n            let items = [];\n            items.push({\n                id: '__group',\n                text: ' ',\n                items: common\n            });\n            const sortItems = this.panel.options.allowSorting ?\n                [\n                    ...this.panel.getSortMenuList(),\n                    ...this.panel.getMoveMenuList()\n                ] :\n                this.panel.getMoveMenuList();\n            items.push({\n                id: '__group',\n                text: i18n$1.getText('CmdGroupSort'),\n                items: sortItems\n            });\n            const extra = this.getExtraButtonMenuItems();\n            if (extra && Array.isArray(extra)) {\n                items = [...items, ...extra];\n            }\n            const formatItems = this.getFormatsMenuItems();\n            if (formatItems.length > 1) {\n                items.push({\n                    id: '__group',\n                    text: i18n$1.getText('CmdGroupFormat'),\n                    items: formatItems\n                });\n            }\n            const menuOptions = {\n                items: items,\n                id: menuId,\n                searchBoxAlwaysShown: false,\n                domWriteItemsId: true, //this.panel.options.domWriteItemsId\n                showSelected: true\n            };\n            this.buttonMenu = new PopupMenu(menuOptions);\n        }\n    }\n    processFormatsButtonMenuItems(action, evt) {\n        const formats = this.panel\n            .getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        if (action == '{0:__default}') {\n            this.column.displayFormat = '';\n        }\n        else if (formats.filter(f => f.format == action).length > 0) {\n            this.column.displayFormat = action;\n        }\n        else {\n            return false;\n        }\n        this.column.fireChangedEvent();\n        return true;\n    }\n    getButtonMenuSelectedItems() {\n        let arrSelected = [];\n        if (this.columnEnabled) {\n            arrSelected.push(\"enable\");\n        }\n        if (this.column.isHidden()) {\n            arrSelected.push(\"hidden\");\n        }\n        const formats = this.panel\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let formatId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            formatId = this.column.displayFormat;\n        }\n        arrSelected.push(formatId);\n        return arrSelected;\n    }\n}\n\nclass AttrColumnRendererCP extends ColumnRendererCP {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    renderExpressionBlock() {\n        return domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.renderBaseExpression()))\n            .toDOM();\n    }\n    getAttribute() {\n        const model = this.panel.getContext().getModel();\n        return model.getAttributeByIdSafe(this.column.expr.value);\n    }\n    renderBaseExpression() {\n        const baseAttr = this.getAttribute();\n        const attrCaption = this.panel.getContext().getAttributeTitle(baseAttr);\n        if (this.isEditable()) {\n            return domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(attrCaption)\n                .text(attrCaption) //TO DO:add localization\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.panel.showEntitiesMenu({\n                    anchor: ev.target,\n                    selectedIds: null,\n                    itemSelectedCallback: this.baseExpressionItemSelectedCallback.bind(this),\n                    itemFilterCallback: item => item.id !== '__AddAll__'\n                });\n                return false;\n            })\n                .toDOM();\n        }\n        return domel('span')\n            .text(attrCaption)\n            .title(attrCaption)\n            .toDOM();\n    }\n    baseExpressionItemSelectedCallback(data, item) {\n        const attrid = data.id;\n        const context = this.panel.getContext();\n        var attr = context.getModel().getAttributeById(attrid);\n        this.updateBaseAttr(attr);\n        this.column.caption = context.getDefaultColumnCaption(this.column);\n        this.fireColumnChanged();\n        return false;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n        this.column.expr.dataType = attr.dataType;\n    }\n    getUIS() {\n        const arg = this.column.expr.args[0];\n        if (arg) {\n            const model = this.panel.getContext().getModel();\n            return model.checkAttrProperty(arg.value, \"useInSorting\");\n        }\n        else {\n            return true;\n        }\n    }\n    changeTypeHandler(ev) {\n        this.keepShowingButtons = true;\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                this.processExtraButtonMenuItems(data.id, null);\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    changeTypeToCustomSql() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.CustomSql);\n        const parentElement = this.element.parentElement;\n        setTimeout(() => {\n            //focus CustomSQL Edit\n            const newElement = parentElement.querySelector(`div[data-id='${this.column.id}']  div[class*='${this.cssPrefix}-expr-block']  div[class*='${this.cssPrefix}-colelement']  a`);\n            if (newElement)\n                newElement.click();\n        }, 500);\n        this.fireColumnChanged();\n    }\n    changeTypeToAggr(funcId) {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.AggregateFunction, { funcId: funcId });\n        this.fireColumnChanged();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        if (action === \"CUSTOMSQL\") {\n            this.changeTypeToCustomSql();\n        }\n        else {\n            this.changeTypeToAggr(action);\n        }\n        return true;\n    }\n    getExtraButtonMenuItems() {\n        const items = [];\n        const funcs = this.panel.getContext().getModel().getAggrFunctions();\n        let toInclude = true;\n        let funcAllowed = true;\n        var item = null;\n        const attribute = this.getAttribute();\n        let funcCaption;\n        for (const func of funcs) {\n            toInclude = func.getAppliedTypesOrDefault().indexOf(attribute.dataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.panel.getContext().getModel().getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        for (let idx = 0; idx < funcs.length; idx++) {\n            if (!funcs[idx])\n                continue;\n        }\n        if (!funcAllowed) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.panel;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: items\n            }];\n    }\n}\n\nclass AggrFuncColumnRendererCP extends AttrColumnRendererCP {\n    constructor() {\n        super(...arguments);\n        this.displayFormatParser = new DisplayFormatParser();\n    }\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-aggr`;\n    }\n    getAttribute() {\n        return this.panel\n            .getContext()\n            .getModel()\n            .getAttributeByIdSafe(this.column.expr.args[0].value);\n    }\n    renderExpressionBlock() {\n        const model = this.panel.getContext().getModel();\n        const exprBlockBuilder = domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`, `${this.cssPrefix}-expr-block-aggr`)\n            .addClass(browserUtils.getMobileCssClass());\n        const format = model.getAggrFunctionFormat(this.column.expr.func);\n        if (!format || format === '')\n            return;\n        const arrFormat = this.parseDisplayFormat(format);\n        if (arrFormat.length === 0)\n            return;\n        let item = null;\n        const arrLength = arrFormat.length;\n        for (let idx = 0; idx < arrLength; idx++) {\n            item = arrFormat[idx];\n            if (item.type === 1) {\n                if (this.isEditable()) {\n                    const functionLink = domel('a')\n                        .attr('href', 'javascript:void(0)')\n                        .text(item.text)\n                        .on('click', (ev) => {\n                        ev.stopPropagation();\n                        this.functionMenu.showMenu({\n                            anchor: functionLink.toDOM(),\n                            selectedIds: null,\n                            itemSelectedCallback: (data, items) => {\n                                if (data.id === \"CUSTOMSQL\") {\n                                    this.changeTypeToCustomSql();\n                                }\n                                else {\n                                    this.column.expr.func = data.id;\n                                    this.column.caption = '';\n                                    this.fireColumnChanged();\n                                }\n                            }\n                        });\n                    });\n                    exprBlockBuilder\n                        .addChild('div', builder => builder\n                        .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-aggrfuncelement`)\n                        .addClass(browserUtils.getMobileCssClass())\n                        .addChildElement(functionLink.toDOM()));\n                }\n                else {\n                    exprBlockBuilder\n                        .addChild('div', b => b\n                        .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-aggrfuncelement`)\n                        .addClass(browserUtils.getMobileCssClass())\n                        .addChild('span', b => b\n                        .text(item.text)\n                        .title(item.text)));\n                }\n            }\n            else if (item.type === 2) {\n                exprBlockBuilder\n                    .addChild('div', builder => builder\n                    .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n                    .addClass(browserUtils.getMobileCssClass())\n                    .addChildElement(this.renderBaseExpression()));\n            }\n            else if (item.type === 3) {\n                exprBlockBuilder\n                    .addChild('span', builder => builder\n                    .addClass(`${this.cssPrefix}-colelement`)\n                    .addClass(browserUtils.getMobileCssClass())\n                    .text(item.text)\n                    .title(item.text));\n            }\n        }\n        return exprBlockBuilder.toDOM();\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    parseDisplayFormat(format) {\n        if (!format)\n            return [];\n        let result = [];\n        const parser = this.displayFormatParser;\n        parser.start(format);\n        while (parser.next()) {\n            const token = parser.getToken();\n            const tokenText = parser.getTokenText();\n            if (token === 'function') {\n                result.push({ type: 1, text: tokenText });\n            }\n            else if (token === 'expression') {\n                result.push({ type: 2 });\n            }\n            else if (token === 'text') {\n                result.push({ type: 3, text: tokenText });\n            }\n        }\n        return result;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.args[0].setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n    }\n    changeTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        this.changeTypeToSimple();\n        return true;\n    }\n    getExtraButtonMenuItems() {\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: [{\n                        id: 'type',\n                        text: i18n.getText('ColTypeSimple')\n                    }]\n            }];\n    }\n}\n\nclass EditableColumnRendererCP extends AttrColumnRendererCP {\n    constructor() {\n        super(...arguments);\n        this.dataTypeMenu = null;\n    }\n    renderEnabledButton() {\n        const elem = super.renderEnabledButton();\n        const child = elem.children[0];\n        child.title = i18n.getText('CmdToggleEnableCustom');\n        return elem;\n    }\n    ;\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr` + super.getClassesToAdd();\n    }\n    renderExpressionBlock() {\n        const exprBlock = domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`)\n            .addClass(browserUtils.getMobileCssClass())\n            .toDOM();\n        //Attribute element\n        let builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(browserUtils.getMobileCssClass());\n        if (this.isEditable()) {\n            builder\n                .addChild('a', b => b\n                .attr('href', 'javascript:void(0)')\n                .title(this.column.caption)\n                .text(this.column.caption)\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                const element = ev.target;\n                const inputEl = element.parentElement.querySelector('input');\n                if (inputEl) {\n                    element.style.display = 'none';\n                    inputEl.style.removeProperty('display');\n                    inputEl.style.width = `100%`;\n                    inputEl.focus();\n                    this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n                }\n            }) //TO DO:add localization and input field\n            )\n                .addChild('input', b => b\n                .hide()\n                .value(this.getColumnValue())\n                .on('blur keydown', (ev) => {\n                let isEndEvent = false;\n                let save = true;\n                if (ev instanceof KeyboardEvent) {\n                    // Enter\n                    if (ev.keyCode === 13) {\n                        isEndEvent = true;\n                        //ESC\n                    }\n                    else if (ev.keyCode === 27) {\n                        isEndEvent = true;\n                        save = false;\n                    }\n                }\n                else if (ev instanceof FocusEvent) {\n                    isEndEvent = true;\n                }\n                if (isEndEvent) {\n                    const inputEl = ev.target;\n                    const aEl = inputEl.parentElement.querySelector('a');\n                    if (aEl) {\n                        aEl.style.removeProperty('display');\n                        inputEl.style.display = 'none';\n                    }\n                    const colVal = this.getColumnValue();\n                    if (save && colVal !== inputEl.value) {\n                        this.setColumnValue(inputEl.value);\n                        this.fireColumnChanged();\n                    }\n                    else {\n                        inputEl.value = colVal;\n                    }\n                    this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                }\n            }));\n        }\n        else {\n            builder\n                .addChild('span', b => {\n                b.text(this.column.caption)\n                    .title(this.column.caption);\n            });\n        }\n        // Colon element\n        builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`)\n            .addChild('span', b => {\n            b.text(':')\n                .title(':');\n        });\n        // DataType element\n        builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(browserUtils.getMobileCssClass());\n        if (this.isEditable()) {\n            this.createDataTypeMenu();\n            builder\n                .addChild('a', dataTypeLink => dataTypeLink\n                .attr('href', 'javascript:void(0)')\n                .title(DataType[this.column.expr.dataType])\n                .text(DataType[this.column.expr.dataType])\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                this.dataTypeMenu.showMenu({\n                    anchor: dataTypeLink.toDOM(),\n                    selectedIds: null,\n                    itemSelectedCallback: (data, items) => {\n                        this.column.expr.dataType = data.id;\n                        this.fireColumnChanged();\n                    }\n                });\n            }));\n        }\n        else {\n            this.column.expr.dataType;\n            builder\n                .addChild('span', b => {\n                b.text(DataType[this.column.expr.dataType])\n                    .title(DataType[this.column.expr.dataType]);\n            });\n        }\n        return exprBlock;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    getColumnValue() {\n        return '';\n    }\n    setColumnValue(value) {\n    }\n    getUIS() {\n        return true;\n    }\n    changeTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        this.changeTypeToSimple();\n        return true;\n    }\n    createFunctionMenu() {\n        // Nothing TO DO\n    }\n    getExtraButtonMenuItems() {\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: [{\n                        id: 'type',\n                        text: i18n.getText('ColTypeSimple')\n                    }]\n            }];\n    }\n    createDataTypeMenu() {\n        const items = [];\n        for (let typeItem in DataType) {\n            if (!isNaN(Number(typeItem))) {\n                const item = {\n                    id: typeItem,\n                    text: DataType[typeItem]\n                };\n                items.push(item);\n            }\n        }\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-DataTypeMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true\n        };\n        this.dataTypeMenu = new PopupMenu(menuOptions);\n    }\n}\nclass CustomSqlColumnRendererCP extends EditableColumnRendererCP {\n    get columnEnabled() {\n        return this.panel.areCustomExpressionsAllowed() ? this.column.enabled : false;\n    }\n    set columnEnabled(value) {\n        if (this.panel.areCustomExpressionsAllowed()) {\n            this.column.enabled = value;\n        }\n        else {\n            this.column.enabled = false;\n        }\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    getColumnValue() {\n        return this.column.expr.sql;\n    }\n    setColumnValue(value) {\n        this.column.expr.sql = value;\n    }\n    getDefaultValue() {\n        return this.column.expr.sql;\n    }\n}\nclass ConstColumnRendererCP extends EditableColumnRendererCP {\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    getColumnValue() {\n        return this.column.expr.value;\n    }\n    setColumnValue(value) {\n        this.column.expr.setValue(value);\n    }\n    getDefaultValue() {\n        return this.column.expr.value;\n    }\n}\n\nclass ColumnsPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-qc';\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            isSubQuery: false,\n            activeColumn: null,\n            showAddRow: true,\n            showHeader: true,\n            showColumnTitles: true,\n            allowAggrColumns: true,\n            allowDuplicates: true,\n            allowCustomExpressions: false,\n            allowSorting: true,\n            attrElementFormat: '{entity} {attr}',\n            titleElementFormat: null,\n            buttons: null,\n            alwaysShowButtons: false,\n            accentActiveColumn: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n            attrPlacement: 0,\n            sortEntities: false,\n            columnRenderedCallback: null,\n            customExpressionText: 0,\n            allowHiddenColumns: false,\n            showAddAllForEntity: false,\n            showIndicatorOnLoad: true\n        };\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this.landingIndex = -1;\n        this.slot.classList.add(`${this.cssPrefix}-panel`);\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'columnsPanel';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n        const model = context.getModel();\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttr\", \"entityAttrSort\"],\n                onDragEnter: (container, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    if (ev.item.scope === \"entityAttrSort\") {\n                        this.showLandingSlot(ev.pageX, ev.pageY);\n                    }\n                    else {\n                        const attrId = ev.data.attrId;\n                        if (!model.checkAttrProperty(attrId, \"useInResult\")) {\n                            ev.dropEffect = DropEffect.Forbid;\n                        }\n                        ev.dragImage.classList.add('eqjs-sortable-helper');\n                    }\n                },\n                onDragOver: (container, ev) => {\n                    const attrId = ev.data.attrId;\n                    if (ev.item.scope === \"entityAttrSort\" ||\n                        model.checkAttrProperty(attrId, \"useInResult\")) {\n                        this.showLandingSlot(ev.pageX, ev.pageY);\n                    }\n                },\n                onDragLeave: (container, ev) => {\n                    if (ev.item.scope === \"entityAttrSort\") {\n                        ev.dropEffect = DropEffect.Forbid;\n                    }\n                    else {\n                        ev.dragImage.classList.remove('eqjs-sortable-helper');\n                        ev.dragImage.style.removeProperty('width');\n                    }\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (ev.item.scope == \"entityAttrSort\") {\n                        const query = this.getQuery();\n                        const columns = query.getColumns();\n                        const index = columns.indexOf(ev.data.column);\n                        this.moveColumnCore(index, this.landingIndex);\n                    }\n                    else {\n                        const attrId = ev.data.attrId;\n                        this.addNewColumn(attrId, this.landingIndex);\n                    }\n                }\n            });\n        }\n    }\n    renderBaseElements() {\n        let minusHeight = 0;\n        if (this.options.showHeader) {\n            const headerBuilder = domel('div', this.slot)\n                .hide()\n                .addClass(`${this.cssPrefix}-header`)\n                .addClass(browserUtils.getMobileCssClass())\n                .addChild('div', builder => builder\n                .addClass(`${this.cssPrefix}-header-expression`)\n                .text(i18n.getText('HeaderExpression')));\n            if (this.options.showColumnTitles !== false) {\n                headerBuilder\n                    .addChild('div', builder => builder\n                    .addClass(`${this.cssPrefix}-header-title`)\n                    .text(i18n.getText('HeaderTitle')));\n            }\n            this.headerElement = headerBuilder.toDOM();\n            minusHeight += this.headerElement.offsetHeight;\n        }\n        this.columnsBlock =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(browserUtils.getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowElement =\n                domel('div', this.slot)\n                    .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n                    .addClass(browserUtils.getMobileCssClass())\n                    .addChild('a', builder => builder\n                    .attr('href', 'javascript:void(0)')\n                    .text(i18n.getText('CmdClickToAddColumn'))\n                    .on('click', (e) => {\n                    e.preventDefault();\n                    this.showEntitiesMenu({\n                        anchor: e.target,\n                        selectedIds: null,\n                        itemSelectedCallback: (data, items) => {\n                            if (data.id === '__AddAll__' && data.extra && Array.isArray(data.extra.ids)) {\n                                data.extra.ids.forEach(attrId => this.addNewColumn(attrId));\n                            }\n                            else {\n                                const attrid = data.id;\n                                this.addNewColumn(attrid);\n                            }\n                            return false;\n                        }\n                    });\n                }))\n                    .toDOM();\n            minusHeight += this.addRowElement.offsetHeight;\n        }\n        this.columnsBlock.style.maxHeight = `${this.slot.offsetHeight - minusHeight - 25}px`;\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Columns\n                && edata.part != QueryChangePart.Aggregation\n                && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const columns = edata.changee;\n                    const modifyColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const renderer = this.getColumnRenderer(column, colEl);\n                            if (renderer) {\n                                const newEl = renderer.render();\n                                if (isFocusInside) {\n                                    const focusElem = newEl.querySelector('a') || newEl.querySelector('.eqjs-column-button');\n                                    if (focusElem) {\n                                        focusElem.focus();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => modifyColumn(col));\n                    }\n                    else {\n                        modifyColumn(columns);\n                    }\n                    this.agjustHeaderVisibility();\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const columns = edata.changee;\n                    const addColumn = (column) => {\n                        const index = query.getColumns().indexOf(column);\n                        const newEl = this.addColumnElement(column, index);\n                        if (isFocusInside) {\n                            const focusElem = newEl.querySelector('a');\n                            if (focusElem) {\n                                try {\n                                    focusElem.focus();\n                                }\n                                catch (_a) {\n                                    //do nothing\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => addColumn(col));\n                    }\n                    else {\n                        addColumn(columns);\n                    }\n                    this.agjustHeaderVisibility();\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const columns = edata.changee;\n                    const deleteColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const next = colEl.nextSibling;\n                            const prev = colEl.previousSibling;\n                            this.columnsBlock.removeChild(colEl);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || this.addRowElement;\n                                const focusElem = focusCond.querySelector('a') || focusCond.querySelector('.eqjs-column-button');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    this.agjustHeaderVisibility();\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => deleteColumn(col));\n                    }\n                    else {\n                        deleteColumn(columns);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    showLandingSlot(pageX, pageY) {\n        const rowElems = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const rows = [];\n        for (let i = 0; i < rowElems.length; i++) {\n            const rowElem = rowElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            rows.push(rowElem);\n        }\n        if (rows.length === 0) {\n            this.landingIndex = 0;\n            this.columnsBlock.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        const firstRow = rows[0];\n        const rowHeight = firstRow.offsetHeight;\n        const absPos = getElementAbsolutePos(firstRow);\n        let newLandingIndex = (pageY > absPos.y + rowHeight / 2) ? Math.round((pageY - absPos.y + rowHeight / 2) / rowHeight) : 0;\n        if (newLandingIndex > rows.length) {\n            newLandingIndex = rows.length;\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < rows.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, rows[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n            this.landingSlot.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        this.context.options.allowCustomExpressions = options.allowCustomExpressions;\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        if (browserUtils.isMobileMode()) {\n            this.options.buttons = [\"menu\"];\n            this.options.showHeader = false;\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.slot.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.slot.removeChild(this.progressBlock);\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    render() {\n        try {\n            this.renderBaseElements();\n            this.createEntitiesMenu();\n            this.createColumnMenus();\n            this.agjustHeaderVisibility();\n            domel(this.slot)\n                .removeClass(eqCssMobile)\n                .addClass(browserUtils.getMobileCssClass());\n            const query = this.context.getQuery();\n            const columns = query.getColumns();\n            for (let column of columns) {\n                this.columnsBlock.appendChild(this.renderColumn(column));\n            }\n        }\n        catch (err) {\n            let error = err;\n            this.context.throwError({\n                action: \"ColumnsPanel rendering\",\n                text: error.message,\n                sourceError: error\n            });\n        }\n    }\n    agjustHeaderVisibility() {\n        if (this.headerElement) {\n            const query = this.context.getQuery();\n            const columns = query.getColumns();\n            this.headerElement.style.display = (columns.length) ? '' : 'none';\n        }\n    }\n    renderColumn(column) {\n        const renderer = this.getColumnRenderer(column);\n        if (renderer)\n            return renderer.render();\n        return null;\n    }\n    toggleColumnPicked(column) {\n        let el;\n        let isActive;\n        if (column) {\n            el = this.columnsBlock.querySelector(`div[data-id=${column.id}]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.columnsBlock.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            domel(row)\n                .removeClass('active');\n            if (!this.options.alwaysShowButtons) {\n                domel(row)\n                    .data(\"show-buttons\", null);\n            }\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    addNewColumn(attrs, index) {\n        this.getContext().getModel();\n        const query = this.getQuery();\n        if (Array.isArray(attrs)) {\n            let col = null;\n            let cols = [];\n            for (let i = 0; i < attrs.length; i++) {\n                col = query.addColumn({\n                    attributeId: attrs[i],\n                    index: index\n                }, true);\n                if (col) {\n                    cols.push(col);\n                }\n            }\n            query.fireChangedEvent({\n                part: QueryChangePart.Columns,\n                action: QueryChangeAction.Add,\n                changee: cols,\n                source: this\n            });\n            return cols;\n        }\n        else {\n            const col = query.addColumn({\n                attributeId: attrs,\n                index: index\n            });\n            return col;\n        }\n    }\n    //adds one column to the panel on the specified position\n    addColumnElement(column, index) {\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const newColBlock = this.renderColumn(column);\n        if (rows.length > 0) {\n            if (index < rows.length) {\n                this.columnsBlock.insertBefore(newColBlock, rows[index]);\n            }\n            else {\n                this.columnsBlock.appendChild(newColBlock);\n                this.scrollToBottom();\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(newColBlock);\n            this.scrollToBottom();\n        }\n        if (this.options.columnRenderedCallback) {\n            this.options.columnRenderedCallback(newColBlock);\n        }\n        return newColBlock;\n    }\n    scrollToBottom() {\n        this.columnsBlock.scrollTop = this.columnsBlock.scrollHeight - this.columnsBlock.clientHeight;\n    }\n    checkColumnsArray(cols) {\n        let len = cols.length;\n        const result = [];\n        for (let i = 0; i < len; i++) {\n            if (this.checkColumn(cols[i]))\n                result.push(cols[i]);\n        }\n        return result;\n    }\n    checkColumn(col) {\n        if (!this.options.allowDuplicates) {\n            const query = this.getQuery();\n            const columns = query.getColumns();\n            for (let i = 0; i < columns.length; i++) {\n                if ((col.expr.tag === ExprTag.EntityAttribute && columns[i].expr.tag === ExprTag.EntityAttribute\n                    || col.expr.tag === ExprTag.ParentEntityAttribute && columns[i].expr.tag === ExprTag.ParentEntityAttribute)\n                    && col.expr.value === columns[i].expr.value) {\n                    return null;\n                }\n            }\n        }\n        return col;\n    }\n    getColumnsBlock() {\n        return this.columnsBlock;\n    }\n    getColumnRenderer(column, slot) {\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return new ConstColumnRendererCP(this, column, slot);\n            case ExprTag.AggregateFunction:\n                return new AggrFuncColumnRendererCP(this, column, slot);\n            case ExprTag.CustomSql:\n                return new CustomSqlColumnRendererCP(this, column, slot);\n            default:\n                return new AttrColumnRendererCP(this, column, slot);\n        }\n    }\n    areCustomExpressionsAllowed() {\n        const query = this.getQuery();\n        return query.isEx() && this.getContext().options.allowCustomExpressions;\n    }\n    addAllColumnsToEntitiesList(list) {\n        const attrIds = list.filter(item => !item.isEntity).map(item => item.id);\n        if (attrIds.length > 0) {\n            list.unshift({\n                id: '__AddAll__',\n                text: i18n.getText('AddAllForEntityText'),\n                extra: {\n                    ids: attrIds\n                }\n            });\n        }\n        list.forEach(item => {\n            if (item.items) {\n                this.addAllColumnsToEntitiesList(item.items);\n            }\n        });\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false, attrPlacement: this.options.attrPlacement, sortEntities: this.options.sortEntities });\n        // add [Add all columns] items\n        if (this.options.showAddAllForEntity) {\n            this.addAllColumnsToEntitiesList(entitiesList);\n        }\n        const options = {\n            id: menuId,\n            items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight,\n            domWriteItemsId: this.options.domWriteItemsId\n        };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    getSortMenuList() {\n        return [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' }\n        ];\n    }\n    getMoveMenuList() {\n        return [\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n    }\n    createSortMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.getSortMenuList().concat(this.moveMenu.getItems());\n        const menuOptions = {\n            id: menuId,\n            \"items\": items,\n            domWriteItemsId: this.options.domWriteItemsId,\n            showSelected: true\n        };\n        utils.assign(menuOptions, this.options.menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    createMoveMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-MoveMenu';\n        }\n        const items = utils.createArrayFrom(this.getMoveMenuList());\n        if (this.options.allowHiddenColumns) {\n            items.push({ id: '---', text: '---' });\n            items.push({ id: 'IsHidden', text: i18n.getText('CmdHiddenColumn') });\n        }\n        const menuOptions = {\n            \"items\": items,\n            id: menuId,\n            domWriteItemsId: this.options.domWriteItemsId,\n            showSelected: true\n        };\n        utils.assign(menuOptions, this.options.menuOptions);\n        this.moveMenu = new PopupMenu(menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu.showMenu(menuOptions);\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        const index = columns.indexOf(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, 0);\n                    break;\n                case 'MoveUp':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index - 1);\n                    break;\n                case 'MoveDown':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index + 1);\n                    break;\n                case 'MoveBottom':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, columns.length - 1);\n                    break;\n            }\n        }\n    }\n    moveColumnCore(index1, index2) {\n        const query = this.getQuery();\n        if (!query)\n            return;\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const colToMove = rows[index1];\n        if (index2 == 0) {\n            this.columnsBlock.insertBefore(colToMove, this.columnsBlock[0]);\n        }\n        else if (index2 > 0 && index2 < rows.length - 1) {\n            if (index1 < index2) {\n                this.columnsBlock.insertBefore(colToMove, rows[index2 + 1]);\n            }\n            else {\n                this.columnsBlock.insertBefore(colToMove, rows[index2]);\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(colToMove);\n        }\n        query.moveColumn(index1, index2);\n        query.fireColumnsChangedEvent();\n    }\n    createColumnMenus() {\n        this.createMoveMenu();\n        if (this.options.allowSorting) {\n            this.createSortMenu();\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(browserUtils.getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n}\n\nclass ColumnRendererCB {\n    constructor(panel, column, slot) {\n        this.functionMenu = null;\n        this.formatsMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.tapedTwice = false;\n        this.bar = panel;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-cb';\n    }\n    render() {\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            //to remove all event listeners\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.bar.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSort\",\n                beforeDragStart: () => this.element.dispatchEvent(createBrowserEvent('mouseleave')),\n                onDragStart: (ev) => {\n                    this.hideButtons();\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    this.element.removeAttribute('style');\n                },\n                data: { column: this.column }\n            });\n        }\n        if (!this.column.isReadOnly()) {\n            this.createFunctionMenu();\n            this.createFormatsMenu();\n        }\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.renderCaptionBlock())\n            .addChildElement(this.renderSortingImage());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .addChildElement(this.renderButtonsBlock());\n        }\n        //start event listeners\n        builder\n            .on('mouseenter', this.onMouseEnter.bind(this))\n            .on('mouseleave', this.onMouseLeave.bind(this));\n        //end event listeners\n        if (this.bar.options.accentActiveColumn || browserUtils.isMobileMode()) {\n            builder\n                .on('touchstart click', this.onMouseClick.bind(this));\n        }\n        return this.element;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    isEditable() {\n        return this.column.enabled && !this.column.isReadOnly();\n    }\n    renderButtonsBlock() {\n        return domel('div', this.element)\n            .addClass(`${eqCssPrefix}-column-buttonsBlock`, `${this.cssPrefix}-buttonsBlock`)\n            .addChildElement(this.renderSortingButton())\n            .addChildElement(this.renderColumnTypeButton())\n            .addChildElement(this.renderColumnFormatButton())\n            .addChildElement(this.renderDeleteButton())\n            .toDOM();\n    }\n    renderCaptionBlock() {\n        const caption = this.column.caption;\n        if (!this.isEditable()) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n                .addClass(browserUtils.getMobileCssClass())\n                .addChild('div', b => b\n                .title(caption)\n                .text(caption)\n                .attr('tabIndex', '0'))\n                .toDOM();\n        }\n        const tapHandler = (ev) => {\n            if (!this.tapedTwice) {\n                this.tapedTwice = true;\n                setTimeout(() => { this.tapedTwice = false; }, 300);\n            }\n        };\n        let isFocused = false;\n        domel(this.element).on('touchstart dblclick', ev => {\n            if (ev instanceof TouchEvent && !this.tapedTwice) {\n                tapHandler();\n                return true;\n            }\n            ev.stopPropagation();\n            isFocused = this.element.querySelector('a') == document.activeElement;\n            const inputEl = this.element.querySelector(`.${this.cssPrefix}-captionelement input`);\n            const aEl = this.element.querySelector(`.${this.cssPrefix}-captionelement a`);\n            if (inputEl) {\n                inputEl.style.width = `${this.element.clientWidth}px`;\n                aEl.style.display = 'none';\n                inputEl.style.removeProperty('display');\n                inputEl.focus();\n                this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n            }\n            return false;\n        }); //TO DO:add localization and input field);\n        return domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .title(this.column.caption)\n            .text(caption)\n            .on('keydown', e => {\n            const evt = e;\n            const isCtrlEnter = (evt.ctrlKey || evt.metaKey) && (evt.keyCode == 13 || evt.keyCode == 10);\n            if (isCtrlEnter && this.isColumnActive()) {\n                const clickEvent = document.createEvent('MouseEvents');\n                clickEvent.initEvent('dblclick', true, true);\n                this.element.dispatchEvent(clickEvent);\n                evt.stopPropagation();\n                return false;\n            }\n            return true;\n        }))\n            .addChild('input', builder => builder\n            .hide()\n            .value(this.column.caption)\n            .on('blur keydown', (ev) => {\n            let isEndEvent = false;\n            let save = true;\n            if (ev instanceof KeyboardEvent) {\n                // Enter\n                if (ev.keyCode === 13) {\n                    isEndEvent = true;\n                    //ESC\n                }\n                else if (ev.keyCode === 27) {\n                    isEndEvent = true;\n                    save = false;\n                }\n            }\n            else if (ev instanceof FocusEvent) {\n                isEndEvent = true;\n            }\n            if (isEndEvent) {\n                const inputEl = ev.target;\n                const aEl = inputEl.parentElement.querySelector('a');\n                if (aEl) {\n                    aEl.style.removeProperty('display');\n                    inputEl.style.display = 'none';\n                }\n                if (save && this.column.caption !== inputEl.value) {\n                    this.column.caption = inputEl.value;\n                    this.fireColumnChanged();\n                }\n                else {\n                    inputEl.value = this.column.caption;\n                }\n                this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                if (isFocused) {\n                    this.element.querySelector('a').focus();\n                }\n            }\n        }))\n            .toDOM();\n    }\n    renderSortingImage() {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass = sortButtonCssClass;\n        switch (this.column.sorting) {\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n        }\n        if (this.column.sorting == SortDirection.None) {\n            return null;\n        }\n        else {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortimage-placeholder`)\n                .addClass(browserUtils.getMobileCssClass())\n                .addChild('div', builder => builder\n                .addClass(`${this.cssPrefix}-img-sorting`, sortButtonDirectionCssClass)\n                .title(i18n.getText('ButtonSorting')))\n                .toDOM();\n        }\n    }\n    buttonSortingClickHandler(ev, anchor) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        const menu = this.getUIS() ? this.bar.sortMenu || this.bar.moveMenu : this.bar.moveMenu;\n        menu.showMenu({\n            anchor: anchor,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const strToSortDirection = (str) => {\n                    if (str == 'None') {\n                        return SortDirection.None;\n                    }\n                    else if (str == \"Ascending\") {\n                        return SortDirection.Ascending;\n                    }\n                    else if (str == \"Descending\") {\n                        return SortDirection.Descending;\n                    }\n                };\n                if (data.id == 'None' || data.id == \"Ascending\" || data.id == \"Descending\") {\n                    const query = this.bar.getQuery();\n                    this.column.sorting = strToSortDirection(data.id);\n                    this.column._sortIndex = query.getColumnSortIndex(this.column);\n                    this.fireColumnChanged();\n                }\n                else {\n                    this.bar.moveColumn(this.column, data.id);\n                }\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.leaveButtonBlock();\n                }\n            }\n        });\n        return false;\n    }\n    renderSortingButton() {\n        if (!this.isEditable()) {\n            return null;\n        }\n        const builder = domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-sortbutton`, `${eqCssPrefix}-column-sortbutton-none`)\n            .title(i18n.getText('ButtonSorting'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonSortingClickHandler(ev, builder.toDOM()))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } });\n        return builder.toDOM();\n    }\n    buttonDeleteClickHandler(ev) {\n        ev.stopPropagation();\n        const query = this.bar.getQuery();\n        query.removeColumn(this.column);\n        query.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column);\n        return false;\n    }\n    renderDeleteButton() {\n        if (this.column.isReadOnly()) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-delete`)\n            .title(i18n.getText('CmdDelete'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonDeleteClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    getClassesToAdd() {\n        let result = \"\";\n        result += this.column.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.column.enabled) {\n            result += this.column.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        return result;\n    }\n    buttonTypeClickHandler(ev) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        this.changeColumnTypeHandler(ev);\n        return false;\n    }\n    buttonFormatClickHandler(ev) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        this.changeFormatHandler(ev);\n        return false;\n    }\n    formatButtonIsShown() {\n        return this.bar.options.allowDisplayFormatChange !== false &&\n            this.bar\n                .getContext()\n                .getModel()\n                .getDisplayFormatsForType(this.column.getDataType()).length > 0;\n    }\n    changeFormatHandler(ev) {\n        const formats = this.bar\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let itemId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            itemId = this.column.displayFormat;\n        }\n        this.formatsMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: itemId,\n            itemSelectedCallback: (data, items) => {\n                if (data.id != itemId) {\n                    if (data.id == '{0:__default}') {\n                        this.column.displayFormat = '';\n                    }\n                    else {\n                        this.column.displayFormat = data.id;\n                    }\n                    this.column.fireChangedEvent();\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    renderColumnTypeButton() {\n        if (!this.isEditable() || this.bar.options.allowAggrColumns === false) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-type`)\n            .title(i18n.getText('ButtonToAggr'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonTypeClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderColumnFormatButton() {\n        if (!this.isEditable() || !this.formatButtonIsShown()) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-format`)\n            .title(i18n.getText('ButtonFormat'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonFormatClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    getUIS() {\n        return this.bar\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n    onMouseClick(ev) {\n        this.bar.toggleColumnPicked(this.column);\n        this.adjustButtonsVisibility();\n    }\n    onMouseEnter(e) {\n        if (browserUtils.isMobileMode())\n            return;\n        this.isMouseOverBlock = true;\n        this.enterButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    onMouseLeave(e) {\n        if (browserUtils.isMobileMode())\n            return;\n        this.isMouseOverBlock = false;\n        this.leaveButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    isColumnActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        if (browserUtils.isMobileMode()) {\n            if (this.onHideButtonsMobile) {\n                this.onHideButtonsMobile();\n            }\n        }\n        else {\n            domel(this.element).data(\"show-buttons\", null);\n        }\n    }\n    showButtons() {\n        if (browserUtils.isMobileMode()) {\n            if (this.onShowButtonsMobile) {\n                this.onShowButtonsMobile();\n            }\n        }\n        else {\n            domel(this.element).data(\"show-buttons\", \"\");\n        }\n    }\n    adjustButtonsVisibility() {\n        if (this.bar.options.alwaysShowButtons\n            || ((this.bar.options.accentActiveColumn || browserUtils.isMobileMode())\n                && this.isColumnActive())) {\n            this.showButtons();\n        }\n        else {\n            this.hideButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (this.bar.options.alwaysShowButtons != true && (!this.isColumnActive() || this.bar.options.accentActiveColumn != true)) {\n            this.hideButtons();\n        }\n    }\n    createFunctionMenu() {\n        const items = [];\n        const funcs = this.bar.getContext().getModel().getAggrFunctions();\n        let funcAllowed = true;\n        let item = null;\n        const colDataType = this.column.getDataType();\n        let funcCaption;\n        for (const func of funcs) {\n            if (!func)\n                continue;\n            const toInclude = func.getAppliedTypesOrDefault().indexOf(colDataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.bar.getContext().getModel()\n                    .getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        if (!funcAllowed) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.bar;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.element.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n    createFormatsMenu() {\n        if (this.bar.options.allowDisplayFormatChange == false)\n            return;\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FormatsMenu';\n        }\n        const items = this.getFormatsMenuItems();\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            showSelected: true,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.formatsMenu = new PopupMenu(menuOptions);\n    }\n    getFormatsMenuItems() {\n        const formats = this.bar.getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        return [{ id: '{0:__default}', text: \"Default\" }]\n            .concat(formats.map(format => ({ id: format.format, text: i18n.getText(\"DisplayFormats\", format.name) || format.name })));\n    }\n}\n\nclass AttrColumnRendererCB extends ColumnRendererCB {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    baseExpressionItemSelectedCallback(data, item) {\n        const attrid = data.id;\n        const context = this.bar.getContext();\n        var attr = context.getModel().getAttributeById(attrid);\n        this.updateBaseAttr(attr);\n        this.column.caption = context.getDefaultColumnCaption(this.column);\n        this.fireColumnChanged();\n        return false;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n        this.column.expr.dataType = attr.dataType;\n    }\n    getUIS() {\n        const arg = this.column.expr.args[0];\n        if (arg) {\n            const model = this.bar.getContext().getModel();\n            return model.checkAttrProperty(arg.value, \"useInSorting\");\n        }\n        else {\n            return true;\n        }\n    }\n    changeTypeToCustomSql() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.CustomSql);\n        this.fireColumnChanged();\n    }\n    changeTypeToAggr(funcId) {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.AggregateFunction, { funcId: funcId });\n        this.fireColumnChanged();\n    }\n    changeColumnTypeHandler(ev) {\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                if (data.id == \"CUSTOMSQL\") {\n                    this.changeTypeToCustomSql();\n                }\n                else {\n                    this.changeTypeToAggr(data.id);\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n}\n\nclass AggrFuncColumnRendererCB extends AttrColumnRendererCB {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-aggr`;\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.classList.add('aggregated');\n            button.title = i18n.getText('ButtonToSimple');\n        }\n        return button;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.args[0].setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    changeColumnTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n}\n\nclass EditableColumnRendererCB extends ColumnRendererCB {\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr` + super.getClassesToAdd();\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.classList.add('aggregated');\n            button.title = i18n$1.getText('ButtonToSimple');\n        }\n        return button;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    getColumnValue() {\n        return '';\n    }\n    setColumnValue(value) {\n    }\n    getUIS() {\n        return true;\n    }\n    changeColumnTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n}\nclass CustomSqlColumnRendererCB extends EditableColumnRendererCB {\n    get columnEnabled() {\n        return this.bar.areCustomExpressionsAllowed() ? this.column.enabled : false;\n    }\n    set columnEnabled(value) {\n        if (this.bar.areCustomExpressionsAllowed()) {\n            this.column.enabled = value;\n        }\n        else {\n            this.column.enabled = false;\n        }\n    }\n    getColumnValue() {\n        return this.column.expr.sql;\n    }\n    setColumnValue(value) {\n        this.column.expr.sql = value;\n    }\n    getDefaultValue() {\n        return this.column.expr.sql;\n    }\n}\nclass ConstColumnRendererCB extends EditableColumnRendererCB {\n    getColumnValue() {\n        return this.column.expr.value;\n    }\n    setColumnValue(value) {\n        this.column.expr.setValue(value);\n    }\n    getDefaultValue() {\n        return this.column.expr.value;\n    }\n}\n\nclass ColumnsBar extends Widget {\n    get cssPrefix() {\n        return \"eqjs-cb\";\n    }\n    constructor(slot, customQuery) {\n        super(slot);\n        this.options = {\n            isSubQuery: false,\n            activeColumn: null,\n            showAddRow: true,\n            showHeader: true,\n            showColumnTitles: true,\n            allowAggrColumns: true,\n            allowDuplicates: true,\n            allowCustomExpressions: false,\n            allowSorting: true,\n            alwaysShowButtons: false,\n            accentActiveColumn: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n            attrPlacement: 0,\n            sortEntities: false,\n            columnRenderedCallback: null,\n            customExpressionText: 0,\n        };\n        this.landingSlot = domel('div')\n            .addClass(`${eqCssPrefix}-highlight`)\n            .toDOM();\n        this.landingIndex = -1;\n        this.sortMenuList = [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' }\n        ];\n        this.moveMenuList = [\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-panel`)\n            .addClass(browserUtils.getMobileCssClass());\n        this.group = WidgetGroup.Query;\n        this.customQuery = customQuery;\n    }\n    getWidgetType() {\n        return 'columnsBar';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttrSort\"],\n                onDragEnter: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (this.landingIndex >= 0) {\n                        const query = this.getQuery();\n                        const columns = query.getColumns();\n                        const index = columns.indexOf(ev.data.column);\n                        this.moveColumnCore(index, this.landingIndex);\n                    }\n                    else {\n                        ev.item.element.removeAttribute('style');\n                    }\n                }\n            });\n        }\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Columns\n                && edata.part != QueryChangePart.Aggregation\n                && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const columns = edata.changee;\n                    const modifyColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const newEl = this.renderColumn(column, colEl);\n                            if (isFocusInside) {\n                                const focusElem = newEl.querySelector('a');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => modifyColumn(col));\n                    }\n                    else {\n                        modifyColumn(columns);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const columns = edata.changee;\n                    const addColumn = (column) => {\n                        const index = query.getColumns().indexOf(column);\n                        this.addColumnElement(column, index);\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => addColumn(col));\n                    }\n                    else {\n                        addColumn(columns);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const columns = edata.changee;\n                    const deleteColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const next = colEl.nextSibling;\n                            const prev = colEl.previousSibling;\n                            this.columnsBlock.removeChild(colEl);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || this.addRowButton;\n                                const focusElem = focusCond.querySelector('a');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => deleteColumn(col));\n                    }\n                    else {\n                        deleteColumn(columns);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    getQuery() {\n        return this.customQuery\n            ? this.customQuery\n            : this.getContext().getQuery();\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    setOptions(options) {\n        this.options = utils.assignDeep(this.options, options);\n        this.getContext().options.allowCustomExpressions = options.allowCustomExpressions;\n    }\n    showLandingSlot(pageX, pageY) {\n        const elements = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const columnSlots = [];\n        for (let i = 0; i < elements.length; i++) {\n            if (elements[i].style.display !== 'none') {\n                columnSlots.push(elements[i]);\n            }\n        }\n        if (columnSlots.length === 0) {\n            this.landingIndex = 0;\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth\n            && pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let i = 0; i < columnSlots.length; i++) {\n            const colSlot = columnSlots[i];\n            const absPos = getElementAbsolutePos(colSlot);\n            const colWidth = colSlot.offsetWidth;\n            const colHeight = colSlot.offsetHeight;\n            const paddingWidth = 0.2 * colWidth;\n            const paddingHeight = 2;\n            if (pageX >= absPos.x + paddingWidth && pageX <= absPos.x + colWidth - paddingWidth\n                && pageY >= absPos.y + paddingHeight && pageY <= absPos.y + colHeight - paddingHeight) {\n                if (pageX > landingPos.x)\n                    newLandingIndex = i + 1;\n                else\n                    newLandingIndex = i;\n                break;\n            }\n        }\n        if (newLandingIndex != this.landingIndex || this.landingSlot.parentElement) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex <= 0) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[0]);\n            }\n            if (this.landingIndex < columnSlots.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n    onProcessStartCore() {\n    }\n    onProcessEndCore() {\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        // if (this.addRowButton) {\n        //     this.addRowButton.innerHTML = \"\";\n        //     this.addRowButton.className = \"\";\n        // }\n        // this.columnsBlock.innerHTML = \"\";\n        this.slot.innerHTML = '';\n    }\n    renderAddRowButton() {\n        domel(this.addRowButton)\n            .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n            .addClass(browserUtils.getMobileCssClass())\n            .title(i18n.getText('CmdClickToAddColumn'))\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            e.preventDefault();\n            this.showEntitiesMenu({\n                anchor: e.target,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrid = data.id;\n                    this.addNewColumn(attrid);\n                    return false;\n                }\n            });\n        }));\n        if (browserUtils.isMobileMode()) {\n            domel(this.columnsBlock)\n                .addChildElement(this.addRowButton);\n        }\n    }\n    render() {\n        this.createEntitiesMenu();\n        if (this.options.allowSorting) {\n            this.createSortMenu();\n        }\n        this.createMoveMenu();\n        this.columnsBlock =\n            domel('div')\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(browserUtils.getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowButton =\n                domel('div')\n                    .toDOM();\n            if (browserUtils.isMobileMode()) {\n                domel(this.columnsBlock)\n                    .addChildElement(this.addRowButton);\n            }\n            else {\n                domel(this.slot)\n                    .addChildElement(this.addRowButton);\n            }\n            this.renderAddRowButton();\n        }\n        domel(this.slot)\n            .addChildElement(this.columnsBlock)\n            .addChildElement(this.renderColumnButtonsBlockMobile());\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        columns.forEach((column, index) => {\n            const slot = this.renderColumn(column);\n            this.columnsBlock.appendChild(slot);\n        });\n    }\n    renderColumnButtonsBlockMobile() {\n        this.columnButtonsBlockMobileArrow = domel('i').toDOM();\n        this.columnButtonsBlockMobile = domel('div')\n            .addClass(`${this.cssPrefix}-column-buttonsBlock`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.columnButtonsBlockMobileArrow)\n            .hide()\n            .toDOM();\n        this.buttonsBlockSortingButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-sortbutton-none`)\n            .toDOM();\n        domel(this.buttonsBlockSortingButton)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonSortingClickHandler.call(this.currentColumnRenderer, ev, this.buttonsBlockSortingButton);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        });\n        this.buttonsBlockTypeButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-type`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonTypeClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        this.buttonsBlockFormatButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-format`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonFormatClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        this.buttonsBlockDeleteButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-delete`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonDeleteClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button-close-block`)\n            .on('touchstart click', () => {\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n        });\n        return this.columnButtonsBlockMobile;\n    }\n    showColumnButtonsMobile(column, columnRenderer, columnElement) {\n        this.currentActiveColumn = column;\n        this.currentColumnRenderer = columnRenderer;\n        //calculate coordinates\n        const rect = columnElement.getBoundingClientRect();\n        const top = columnElement.offsetTop;\n        const left = columnElement.offsetLeft;\n        domel(this.columnButtonsBlockMobileArrow)\n            .setStyle('left', (left + rect.width / 2).toString() + 'px');\n        if (rect.top > 100) {\n            domel(this.columnButtonsBlockMobile)\n                .removeClass('show-below')\n                .setStyle('top', (top - rect.height).toString() + 'px');\n        }\n        else {\n            domel(this.columnButtonsBlockMobile)\n                .addClass('show-below')\n                .setStyle('top', (top + rect.height).toString() + 'px');\n        }\n        //show/hide separate buttons\n        if (column.enabled && !column.isReadOnly()) {\n            domel(this.buttonsBlockSortingButton).show();\n            domel(this.buttonsBlockTypeButton).show();\n            if (columnRenderer.formatButtonIsShown()) {\n                domel(this.buttonsBlockFormatButton).show();\n            }\n            else {\n                domel(this.buttonsBlockFormatButton).hide();\n            }\n        }\n        else {\n            domel(this.buttonsBlockSortingButton).hide();\n            domel(this.buttonsBlockTypeButton).hide();\n        }\n        //show\n        if (column.isReadOnly()) {\n            domel(this.columnButtonsBlockMobile).hide();\n        }\n        else {\n            domel(this.columnButtonsBlockMobile).show();\n        }\n    }\n    hideColumnButtonsMobile() {\n        domel(this.columnButtonsBlockMobile).hide();\n    }\n    renderColumn(column, elem) {\n        const renderer = this.getColumnRenderer(column, elem);\n        if (renderer) {\n            const columnSlot = renderer.render();\n            renderer.onShowButtonsMobile = () => {\n                this.showColumnButtonsMobile(column, renderer, columnSlot);\n            };\n            renderer.onHideButtonsMobile = () => {\n                this.hideColumnButtonsMobile();\n            };\n            return columnSlot;\n        }\n        return null;\n    }\n    getColumnRenderer(column, slot) {\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return new ConstColumnRendererCB(this, column, slot);\n            case ExprTag.AggregateFunction:\n                return new AggrFuncColumnRendererCB(this, column, slot);\n            case ExprTag.CustomSql:\n                return new CustomSqlColumnRendererCB(this, column, slot);\n            default:\n                return new AttrColumnRendererCB(this, column, slot);\n        }\n    }\n    addNewColumn(attrs, index) {\n        this.getContext().getModel();\n        const query = this.getQuery();\n        if (Array.isArray(attrs)) {\n            let col = null;\n            let cols = [];\n            for (let i = 0; i < attrs.length; i++) {\n                col = query.addColumn({\n                    attributeId: attrs[i],\n                    index: index\n                }, true);\n                if (col) {\n                    cols.push(col);\n                }\n            }\n            return cols;\n        }\n        else {\n            const col = query.addColumn({\n                attributeId: attrs,\n                index: index\n            });\n            return col;\n        }\n    }\n    toggleColumnPicked(column) {\n        let el;\n        let isActive;\n        if (column) {\n            el = this.columnsBlock.querySelector(`div[data-id=${column.id}]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.columnsBlock.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            domel(row)\n                .removeClass('active')\n                .data(\"show-buttons\", null);\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    //adds one column to the bar on the specified position\n    addColumnElement(column, index) {\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const newColBlock = this.renderColumn(column);\n        if (rows.length > 0) {\n            if (index < rows.length - 1) {\n                this.columnsBlock.insertBefore(newColBlock, rows[index]);\n            }\n            else {\n                this.columnsBlock.appendChild(newColBlock);\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(newColBlock);\n        }\n        if (this.options.columnRenderedCallback) {\n            this.options.columnRenderedCallback(newColBlock);\n        }\n    }\n    checkColumnsArray(cols) {\n        let len = cols.length;\n        const result = [];\n        for (let i = 0; i < len; i++) {\n            if (this.checkColumn(cols[i]))\n                result.push(cols[i]);\n        }\n        return result;\n    }\n    checkColumn(col) {\n        if (!this.options.allowDuplicates) {\n            const query = this.getQuery();\n            const columns = query.getColumns();\n            const colJson = JSON.stringify(col.expr);\n            for (let i = 0; i < columns.length; i++) {\n                const qcolJson = JSON.stringify(columns[i].expr);\n                if (qcolJson === colJson) {\n                    return null;\n                }\n            }\n        }\n        return col;\n    }\n    getColumnsBlock() {\n        return this.columnsBlock;\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu && this.entitiesMenu.showMenu(menuOptions);\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false, attrPlacement: this.options.attrPlacement, sortEntities: this.options.sortEntities });\n        const options = { items: entitiesList, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    createSortMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.sortMenuList.concat(this.moveMenuList);\n        const menuOptions = { \"items\": items, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(menuOptions, this.options.menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    createMoveMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-MoveMenu';\n        }\n        const items = this.moveMenuList;\n        const menuOptions = { \"items\": items, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(menuOptions, this.options.menuOptions);\n        this.moveMenu = new PopupMenu(menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        const index = columns.indexOf(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, 0);\n                    break;\n                case 'MoveUp':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index - 1);\n                    break;\n                case 'MoveDown':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index + 1);\n                    break;\n                case 'MoveBottom':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, columns.length - 1);\n                    break;\n            }\n        }\n    }\n    moveColumnCore(index1, index2) {\n        const query = this.getQuery();\n        if (!query)\n            return;\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const colToMove = rows[index1];\n        if (index2 <= 0) {\n            this.columnsBlock.insertBefore(colToMove, this.columnsBlock[0]);\n        }\n        else if (index2 < rows.length) {\n            this.columnsBlock.insertBefore(colToMove, rows[index2]);\n        }\n        else {\n            this.columnsBlock.appendChild(colToMove);\n        }\n        query.moveColumn(index1, index2);\n        query.fireColumnsChangedEvent(QueryChangeAction.All);\n    }\n    areCustomExpressionsAllowed() {\n        const query = this.getQuery();\n        return query.isEx() && this.getContext().options.allowCustomExpressions;\n    }\n}\nColumnsBar.globalCounter = 0;\n\nclass ColumnRendererSB {\n    constructor(bar, column, slot) {\n        this.functionMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.bar = bar;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-sb';\n    }\n    render() {\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            //to remove all event listeners\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.bar.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSortSB\",\n                beforeDragStart: () => this.element.dispatchEvent(createBrowserEvent('mouseleave')),\n                onDragStart: (ev) => {\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    this.element.removeAttribute('style');\n                },\n                data: { column: this.column }\n            });\n        }\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.renderCaptionBlock());\n        if (this.isEditable()) {\n            builder\n                .addChildElement(this.renderSortingButton());\n        }\n        return this.element;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    getAttribute() {\n        const model = this.bar.getContext().getModel();\n        return model.getAttributeById(this.column.expr.value);\n    }\n    isEditable() {\n        return this.column.enabled && !this.column.isReadOnly();\n    }\n    renderCaptionBlock() {\n        function getArrow(sd) {\n            switch (sd) {\n                case SortDirection.Ascending:\n                    return ' ↑';\n                case SortDirection.Descending:\n                    return ' ↓';\n                default:\n                    return '';\n            }\n        }\n        let text = this.column.caption;\n        if (!this.isEditable()) {\n            text += getArrow(this.column.sorting);\n        }\n        return domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChild('div', b => b\n            .title(this.column.caption)\n            .text(text))\n            .toDOM();\n    }\n    renderSortingButton() {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass = sortButtonCssClass;\n        switch (this.column.sorting) {\n            case SortDirection.None:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-none`;\n                break;\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n        }\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortimage-placeholder`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-img-sorting`, sortButtonDirectionCssClass)\n            .title(i18n.getText('ButtonSorting')))\n            .on('touchstart click', (ev) => this.buttonSortingClickHandler(ev, builder.toDOM()));\n        return builder.toDOM();\n    }\n    buttonSortingClickHandler(ev, anchor) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        const menu = this.bar.sortMenu;\n        menu.showMenu({\n            anchor: anchor,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const strToSortDirection = (str) => {\n                    if (str == 'None') {\n                        return SortDirection.None;\n                    }\n                    else if (str == \"Ascending\") {\n                        return SortDirection.Ascending;\n                    }\n                    else if (str == \"Descending\") {\n                        return SortDirection.Descending;\n                    }\n                };\n                if (data.id == 'None' || data.id == \"Ascending\" || data.id == \"Descending\") {\n                    const query = this.bar.getContext().getQuery();\n                    if (this.column.isJustSorted() && data.id == 'None') {\n                        query.removeColumn(this.column);\n                        query.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column, true);\n                    }\n                    else {\n                        this.column.sorting = strToSortDirection(data.id);\n                        this.column._sortIndex = query.getColumnSortIndex(this.column);\n                        this.fireColumnChanged();\n                    }\n                }\n                else {\n                    this.bar.moveColumn(this.column, data.id);\n                }\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n            }\n        });\n        return false;\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    getUIS() {\n        return this.bar\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n}\n\nclass SortingBar extends Widget {\n    get cssPrefix() {\n        return \"eqjs-sb\";\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            showAddRow: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n        };\n        this.sortMenuList = [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' },\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n        this.landingSlot = domel('div')\n            .addClass(`${eqCssPrefix}-highlight`)\n            .toDOM();\n        this.landingIndex = -1;\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-panel`)\n            .addClass(browserUtils.getMobileCssClass());\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'sortingBar';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        this.destroyCore();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttrSortSB\"],\n                onDragEnter: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (this.landingIndex >= 0) {\n                        const query = this.getQuery();\n                        query.setColumnSortIndex(ev.data.column, this.landingIndex);\n                        query.fireColumnsChangedEvent(QueryChangeAction.All);\n                    }\n                    else {\n                        ev.item.element.removeAttribute('style');\n                    }\n                }\n            });\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.SortingColumns\n                && edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            this.refresh();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    getModel() {\n        return this.getContext().getModel();\n    }\n    destroyCore() {\n        this.detachQueryObserver();\n        this.clear();\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    renderAddRowButton() {\n        domel(this.addRowButton)\n            .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n            .addClass(browserUtils.getMobileCssClass())\n            .title(i18n.getText('CmdClickToAddColumn'))\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            e.preventDefault();\n            this.showEntitiesMenu({\n                anchor: e.target,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrid = data.id;\n                    this.addNewColumn(attrid);\n                    return false;\n                }\n            });\n        }));\n        if (browserUtils.isMobileMode()) {\n            domel(this.columnsBlock)\n                .addChildElement(this.addRowButton);\n        }\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu.showMenu(menuOptions);\n    }\n    createEntitiesMenu() {\n        const model = this.getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: false, addUIS: true });\n        const options = { items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    createSortMenu() {\n        const model = this.getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.sortMenuList;\n        const menuOptions = { \"items\": items, id: menuId };\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    render() {\n        this.createEntitiesMenu();\n        this.createSortMenu();\n        this.columnsBlock =\n            domel('div')\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(browserUtils.getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowButton =\n                domel('div')\n                    .toDOM();\n            if (browserUtils.isMobileMode()) {\n                domel(this.columnsBlock)\n                    .addChildElement(this.addRowButton);\n            }\n            else {\n                domel(this.slot)\n                    .addChildElement(this.addRowButton);\n            }\n            this.renderAddRowButton();\n        }\n        domel(this.slot)\n            .addChildElement(this.columnsBlock);\n        const query = this.getQuery();\n        const columns = query.getSortedColumns(); // .getColumns().concat(query.getJustSortedColumns());\n        columns.forEach((column, index) => {\n            const slot = this.renderColumn(column);\n            this.columnsBlock.appendChild(slot);\n        });\n    }\n    addNewColumn(attrId) {\n        this.getModel();\n        const query = this.getQuery();\n        const col = query.addColumn({\n            attributeId: attrId,\n            justsorted: true,\n            sorting: SortDirection.Ascending\n        }, true);\n        query.fireChangedEvent({\n            part: QueryChangePart.SortingColumns,\n            action: QueryChangeAction.Add,\n            changee: col,\n            source: this\n        });\n        return col;\n    }\n    renderColumn(column, elem) {\n        const renderer = new ColumnRendererSB(this, column, elem);\n        if (renderer) {\n            const columnSlot = renderer.render();\n            return columnSlot;\n        }\n        return null;\n    }\n    clear() {\n        this.slot.innerHTML = '';\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getSortedColumns();\n        const index = query.getColumnSortIndex(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    query.setColumnSortIndex(column, 0);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveUp':\n                    query.setColumnSortIndex(column, index > 0 ? index - 1 : 0);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveDown':\n                    query.setColumnSortIndex(column, index < columns.length - 1 ? index + 1 : columns.length - 1);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveBottom':\n                    query.setColumnSortIndex(column, columns.length - 1);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n            }\n        }\n    }\n    showLandingSlot(pageX, pageY) {\n        const elements = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const columnSlots = [];\n        for (let i = 0; i < elements.length; i++) {\n            if (elements[i].style.display !== 'none') {\n                columnSlots.push(elements[i]);\n            }\n        }\n        if (columnSlots.length === 0) {\n            this.landingIndex = 0;\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth\n            && pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let i = 0; i < columnSlots.length; i++) {\n            const colSlot = columnSlots[i];\n            const absPos = getElementAbsolutePos(colSlot);\n            const colWidth = colSlot.offsetWidth;\n            const colHeight = colSlot.offsetHeight;\n            const paddingWidth = 0.2 * colWidth;\n            const paddingHeight = 2;\n            if (pageX >= absPos.x + paddingWidth && pageX <= absPos.x + colWidth - paddingWidth\n                && pageY >= absPos.y + paddingHeight && pageY <= absPos.y + colHeight - paddingHeight) {\n                if (pageX > landingPos.x)\n                    newLandingIndex = i + 1;\n                else\n                    newLandingIndex = i;\n                break;\n            }\n        }\n        if (newLandingIndex != this.landingIndex || this.landingSlot.parentElement) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex <= 0) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[0]);\n            }\n            if (this.landingIndex < columnSlots.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n}\n\n/**\n * Represents parts of Query Panel which can be editable\n */\nvar QPEditablePart;\n(function (QPEditablePart) {\n    QPEditablePart[QPEditablePart[\"None\"] = 0] = \"None\";\n    QPEditablePart[QPEditablePart[\"Value\"] = 1] = \"Value\";\n    QPEditablePart[QPEditablePart[\"Attribute\"] = 2] = \"Attribute\";\n    QPEditablePart[QPEditablePart[\"Operator\"] = 4] = \"Operator\";\n    QPEditablePart[QPEditablePart[\"Addition\"] = 8] = \"Addition\";\n    QPEditablePart[QPEditablePart[\"Removal\"] = 16] = \"Removal\";\n    QPEditablePart[QPEditablePart[\"All\"] = 255] = \"All\";\n    QPEditablePart[QPEditablePart[\"NoAddition\"] = -9] = \"NoAddition\";\n    QPEditablePart[QPEditablePart[\"NoRemoval\"] = -17] = \"NoRemoval\";\n    QPEditablePart[QPEditablePart[\"FixedConditionList\"] = 5] = \"FixedConditionList\";\n})(QPEditablePart || (QPEditablePart = {}));\n\nclass TextRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, text, slot) {\n        this.panel = panel;\n        this.text = text;\n        this.element = slot || domel('div').toDOM();\n    }\n    refresh() {\n        this.render();\n    }\n    render() {\n        domel(this.element)\n            .html('')\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .addChild('span', builder => builder\n            .text(this.text)\n            .title(this.text))\n            .toDOM();\n        return this.element;\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement`;\n    }\n}\n\nvar ConditionAction;\n(function (ConditionAction) {\n    ConditionAction[ConditionAction[\"AddCondition\"] = 0] = \"AddCondition\";\n    ConditionAction[ConditionAction[\"AddGroup\"] = 1] = \"AddGroup\";\n    ConditionAction[ConditionAction[\"Enable\"] = 2] = \"Enable\";\n    ConditionAction[ConditionAction[\"Delete\"] = 4] = \"Delete\";\n    ConditionAction[ConditionAction[\"Menu\"] = 5] = \"Menu\";\n    ConditionAction[ConditionAction[\"Parameterized\"] = 6] = \"Parameterized\";\n    ConditionAction[ConditionAction[\"InJoin\"] = 7] = \"InJoin\";\n})(ConditionAction || (ConditionAction = {}));\nclass ConditionRenderer {\n    constructor(panel, condition, slot) {\n        this.panel = panel;\n        this.condition = condition;\n        this.element = slot || domel('div').toDOM();\n    }\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    refresh() {\n        this.render();\n    }\n    clear() {\n        if (this.element) {\n            this.element.className = '';\n            this.element.removeAttribute('data-id');\n            this.element.removeAttribute('style');\n            domel(this.element)\n                .html('');\n        }\n    }\n    render(autoAppear) {\n        this.clear();\n        //this.preRender();\n        this.coreRender(autoAppear);\n        if (this.panel.options.onConditionRendered) {\n            this.panel.options.onConditionRendered(this.condition, this.element);\n        }\n        return this.element;\n    }\n    isEditable() {\n        return this.condition.enabled && !this.condition.isReadOnly();\n    }\n}\nclass SimpleConditionRenderer extends ConditionRenderer {\n    getClassesToAdd() {\n        let result = `${this.cssPrefix}-row ${this.cssPrefix}-row-condition`;\n        result += this.condition.isInJoin() ? ` ${this.cssPrefix}-condition-injoin` : '';\n        result += this.condition.isParameterized() ? ` ${this.cssPrefix}-condition-parameterized` : '';\n        if (!browserUtils.isMobileMode()) {\n            const level = this.condition.getLevel();\n            if (level > 0)\n                result += ` ${this.cssPrefix}-level-${level}`;\n        }\n        result += this.condition.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.condition.enabled) {\n            result += this.condition.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        const model = this.panel.getContext().getModel();\n        const operator = model.getOperatorById(this.condition.getOperatorId());\n        const arrFormat = equtils.parseOperatorFormat(operator);\n        let item = null;\n        const arrLength = arrFormat.length;\n        const builder = domel('div');\n        if (this.element && this.element.parentNode) {\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .data('id', this.condition.id)\n            .data('condrow', '')\n            .addChildElement(this.renderCheckbox())\n            .addChildElement(this.renderConjunction());\n        let mayAppear = autoAppear;\n        const minLength = operator == model.nullOperator\n            ? Math.min(arrLength, this.condition.expressions.length + 1)\n            : arrLength;\n        for (let idx = 0; idx < minLength; idx++) {\n            item = arrFormat[idx];\n            if (item.type === 'operator') {\n                const renderer = this.panel.getOperatorRenderer(this.condition, item.text);\n                if (renderer) {\n                    builder.addChildElement(renderer.render());\n                }\n            }\n            else if (item.type === 'expression') {\n                const toAppear = mayAppear && (item.index > 0);\n                const exprRenderer = this.panel.getExpressionRenderer(this.condition.expressions[item.index]);\n                if (exprRenderer) {\n                    const el = exprRenderer.render(toAppear);\n                    builder.addChildElement(el);\n                    setTimeout(() => {\n                        exprRenderer.adjustWidth();\n                    }, 100);\n                }\n                mayAppear = mayAppear && !toAppear;\n            }\n            else if (item.type === 'text') {\n                builder.addChildElement(new TextRenderer(this.panel, item.text).render());\n            }\n        }\n        if (this.panel.options.accentActiveCondition || browserUtils.isMobileMode()) {\n            builder.on('click', ev => {\n                ev.stopPropagation();\n                this.panel.toggleConditionPicked(this.condition);\n                this.adjustButtonsVisibility();\n                if (!browserUtils.isMobileMode()) {\n                    this.element.dispatchEvent(createBrowserEvent(\"mouseenter\"));\n                }\n                return false;\n            });\n        }\n        builder\n            .addChildElement(this.renderButtonsBlock());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .on('mouseenter', event => {\n                this.isMouseOverBlock = true;\n                this.enterButtonBlock();\n                event.stopPropagation();\n                return false;\n            })\n                .on('mouseleave', event => {\n                this.isMouseOverBlock = false;\n                if (!this.keepShowingButtons && domel(this.buttonsBlock).isVisible()) {\n                    this.leaveButtonBlock();\n                }\n                event.stopPropagation();\n                return false;\n            });\n        }\n    }\n    setConditionParameterized(value) {\n        this.condition.setParameterized(value);\n        this.condition.fireChangedEvent();\n    }\n    setConditionInJoin(value) {\n        this.condition.setInJoin(value);\n        this.condition.fireChangedEvent();\n    }\n    getConditionMenu() {\n        return this.panel.getConditionMenu();\n    }\n    renderConjunction() {\n        const parent = this.condition.getParent();\n        if (!parent)\n            return null;\n        const isFirstConditionInGroup = utils.findItemIndexById(parent.getConditions(), this.condition.id) == 0;\n        if (this.panel.options.showConjunctions && !isFirstConditionInGroup) {\n            const linkTypeStr = equtils.linkTypeToStr(this.condition.getParent().linkType);\n            const conjuctionText = i18n.getText(\"Conj\" + linkTypeStr);\n            return domel(\"span\")\n                .text(conjuctionText)\n                .title(conjuctionText)\n                .addClass(`${this.cssPrefix}-condelement ${this.cssPrefix}-condition-conjuction`)\n                .toDOM();\n        }\n        return null;\n    }\n    renderCheckbox() {\n        if (this.panel.options.showCheckboxes && !this.condition.isReadOnly()) {\n            return domel(\"div\")\n                .title(i18n.getText('CmdToggleEnable'))\n                .attr('tabIndex', '0')\n                .addClass(`${this.cssPrefix}-condelement ${this.cssPrefix}-condition-checkbox`)\n                .addClass(`${this.condition.enabled ? 'enabled' : ''}`)\n                .on('click', () => {\n                this.condition.enabled = !this.condition.enabled;\n                this.condition.fireChangedEvent();\n                return false;\n            })\n                .on('keypress', evt => { if ([13, 32].includes(evt.keyCode)) {\n                evt.target.click();\n            } })\n                .toDOM();\n        }\n        else {\n            return null;\n        }\n    }\n    isConditionActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        domel(this.element).data(\"show-buttons\", null);\n    }\n    showButtons() {\n        domel(this.element).data(\"show-buttons\", \"\");\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtonsInConditions\n            || (this.panel.options.accentActiveCondition && this.isConditionActive())) {\n            this.showButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (!this.panel.options.alwaysShowButtonsInConditions\n            && (!this.isConditionActive() || !this.panel.options.accentActiveCondition)) {\n            this.hideButtons();\n        }\n    }\n    conditionMenuHandler(action, evt) {\n        switch (action) {\n            case ConditionAction.AddCondition:\n                if (!this.condition.isGroup())\n                    return;\n                const entMenu = this.panel.getEntitiesMenu();\n                if (entMenu) {\n                    entMenu.showMenu({\n                        anchor: evt.target,\n                        itemSelectedCallback: item => {\n                            const query = this.panel.getQuery();\n                            const descr = {\n                                parent: this.condition,\n                                attributeId: item.id\n                            };\n                            const cond = query.addSimpleCondition(descr);\n                            if (cond) {\n                                query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                            }\n                            return false;\n                        }\n                    });\n                }\n                break;\n            case ConditionAction.AddGroup:\n                if (!this.condition.isGroup())\n                    return;\n                const query = this.panel.getQuery();\n                const descr = {\n                    parent: this.condition\n                };\n                const group = this.panel.getQuery().addConditionGroup(descr);\n                if (group) {\n                    query.fireConditionsChangedEvent(QueryChangeAction.Add, group);\n                }\n                break;\n            case ConditionAction.Enable:\n                this.condition.enabled = !this.condition.enabled;\n                this.condition.fireChangedEvent();\n                break;\n            case ConditionAction.Delete:\n                const parent = this.condition.getParent();\n                if (!parent)\n                    return;\n                const conditions = parent.getConditions();\n                const idx = conditions.indexOf(this.condition);\n                if (idx >= 0) {\n                    conditions.splice(idx, 1);\n                    this.condition.getQuery().fireConditionsChangedEvent(QueryChangeAction.Delete, this.condition);\n                }\n                break;\n            case ConditionAction.Menu:\n                const condMenu = this.getConditionMenu();\n                this.keepShowingButtons = true;\n                condMenu.showMenu({\n                    anchor: evt.target,\n                    selectedIds: this.getConditionMenuSelectedItems(),\n                    itemSelectedCallback: (item) => {\n                        let action;\n                        switch (item.id) {\n                            case \"enable\":\n                                action = ConditionAction.Enable;\n                                break;\n                            case \"delete\":\n                                action = ConditionAction.Delete;\n                                break;\n                            case \"param\":\n                                action = ConditionAction.Parameterized;\n                                break;\n                            case \"inJoin\":\n                                action = ConditionAction.InJoin;\n                                break;\n                            case \"addCondition\":\n                                action = ConditionAction.AddCondition;\n                                break;\n                            case \"addGroup\":\n                                action = ConditionAction.AddGroup;\n                                break;\n                        }\n                        this.conditionMenuHandler(action, evt);\n                    },\n                    itemFilterCallback: (item) => {\n                        let result = this.condition.enabled || item.id === \"enable\" || item.id === \"delete\";\n                        if (item.id === \"enable\") {\n                            const parent = this.condition.getParent();\n                            result = result && parent && parent.enabled;\n                        }\n                        else if (item.id === \"delete\") {\n                            result = result && ((this.panel.options.editableParts & QPEditablePart.Removal) === QPEditablePart.Removal);\n                        }\n                        else if (item.id === \"addGroup\" || item.id === \"addCondition\") {\n                            result = result && ((this.panel.options.editableParts & QPEditablePart.Addition) === QPEditablePart.Addition);\n                        }\n                        return result;\n                    },\n                    menuClosedCallback: () => {\n                        this.keepShowingButtons = false;\n                        if (!this.isMouseOverBlock)\n                            this.leaveButtonBlock();\n                    }\n                });\n                break;\n            case ConditionAction.Parameterized:\n                this.condition.setParameterized(!this.condition.isParameterized());\n                this.condition.fireChangedEvent();\n                break;\n            case ConditionAction.InJoin:\n                this.condition.setInJoin(!this.condition.isInJoin());\n                this.condition.fireChangedEvent();\n                break;\n        }\n        evt.stopPropagation();\n        return false;\n    }\n    getConditionMenuSelectedItems() {\n        let arrSelected = [];\n        if (this.condition.enabled) {\n            arrSelected.push(\"enable\");\n        }\n        if (this.condition.isParameterized()) {\n            arrSelected.push(\"param\");\n        }\n        if (this.condition.isInJoin()) {\n            arrSelected.push(\"inJoin\");\n        }\n        return arrSelected;\n    }\n    renderButtonsBlock() {\n        const onButtonMouseEnter = (evt) => {\n            domel(evt.target)\n                .addClass(`${this.cssPrefix}-condition-button-active`);\n        };\n        const onButtonMouseLeave = (evt) => {\n            domel(evt.target)\n                .removeClass(`${this.cssPrefix}-condition-button-active`);\n        };\n        const builder = domel(\"div\")\n            .addClass(`${this.cssPrefix}-condition-buttonsBlock`)\n            .addClass(browserUtils.getMobileCssClass());\n        this.buttonsBlock = builder.toDOM();\n        if (this.condition.isReadOnly()) {\n            return this.buttonsBlock;\n        }\n        const buttonsToShow = this.getButtonsToShow();\n        if (buttonsToShow.indexOf(\"addCondition\") >= 0 && this.condition.enabled\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-addCondition`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdAddCondition'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.AddCondition, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        const showAddGroupBtn = buttonsToShow.indexOf(\"addGroup\") >= 0 || buttonsToShow.indexOf(\"addPredicate\") >= 0;\n        if (showAddGroupBtn && this.condition.enabled\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-addPredicate`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdAddCondGroup'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.AddGroup, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"enable\") >= 0 && this.condition.getParent() && this.condition.getParent().enabled) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-enable`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdToggleEnable'))\n                        .addClass(this.condition.enabled ? 'enabled' : '')\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Enable, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"delete\") >= 0 && this.condition.getParent()\n            && ((this.panel.options.editableParts & QPEditablePart.Removal) == QPEditablePart.Removal)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-delete`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdDelete'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Delete, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"menu\") >= 0) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-menu`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('ButtonMenu'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Menu, evt));\n                    if (!browserUtils.isMobileMode()) {\n                        b\n                            .on('keypress', evt => { if (evt.keyCode == 13) {\n                            evt.target.click();\n                        } })\n                            .on('mouseenter', onButtonMouseEnter)\n                            .on('mouseleave', onButtonMouseLeave);\n                    }\n                });\n            });\n        }\n        this.adjustButtonsVisibility();\n        return this.buttonsBlock;\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && this.panel.options.buttons.condition && Array.isArray(this.panel.options.buttons.condition) ? this.panel.options.buttons.condition : [\"enable\", \"delete\"];\n    }\n}\n\nclass DomDropDownElementBuilder extends DomElementBuilder {\n    constructor(parent) {\n        super('a', parent);\n        this.attr('href', 'javascript:void(0)');\n        this.on('click', ev => {\n            ev.preventDefault();\n            this.appear();\n            return false;\n        });\n    }\n    onGetMenu(onGetMenu) {\n        this._onGetMenu = onGetMenu;\n        return this;\n    }\n    onItemSelected(onItemSelected) {\n        this._onItemSelected = onItemSelected;\n        return this;\n    }\n    appear() {\n        const menu = this._onGetMenu ? this._onGetMenu() : null;\n        if (menu) {\n            menu.showMenu({\n                anchor: this.element,\n                itemSelectedCallback: item => {\n                    if (this._onItemSelected) {\n                        this._onItemSelected(item.id);\n                    }\n                    return false;\n                }\n            });\n        }\n    }\n}\nfunction dropdown(parent) {\n    return new DomDropDownElementBuilder(parent);\n}\n\nclass ConditionGroupRenderer extends ConditionRenderer {\n    constructor(panel, condition, slot) {\n        super(panel, condition, slot);\n        this.isRoot = !condition.getParent();\n    }\n    getClassesToAdd() {\n        let result = `${this.cssPrefix}-group`;\n        if (this.isRoot) {\n            result += ` ${this.cssPrefix}-group-root`;\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        domel(this.element)\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.renderGroupRow())\n            .addChildElement(this.renderConditions(autoAppear))\n            .data('id', this.condition.id)\n            .data('group', '');\n    }\n    renderGroupRow() {\n        if (this.isRoot && !this.panel.options.showRootRow) {\n            return null;\n        }\n        else {\n            return new ConditionGroupRowRenderer(this.panel, this.condition).render();\n        }\n    }\n    renderConditions(autoAppear) {\n        const builder = domel('div');\n        builder\n            .addClass(`${this.cssPrefix}-conditions`)\n            .addClass(`${browserUtils.getMobileCssClass()}`)\n            .data('conditions', '');\n        if (this.isRoot) {\n            builder.addClass(`${this.cssPrefix}-conditions-root`);\n        }\n        this.condition.getConditions().forEach((condition, index, array) => {\n            const renderer = this.panel.getConditionRenderer(condition);\n            if (renderer) {\n                builder.addChildElement(renderer.render(autoAppear && index == array.length - 1));\n            }\n        });\n        return builder.toDOM();\n    }\n}\nclass ConditionGroupRowRenderer extends SimpleConditionRenderer {\n    constructor(panel, condition, slot) {\n        super(panel, condition, slot);\n        this.isRoot = !this.condition.getParent();\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && this.panel.options.buttons.group && Array.isArray(this.panel.options.buttons.group) ? this.panel.options.buttons.group : [\"addCondition\", \"addGroup\", \"enable\", \"delete\"];\n    }\n    getClassesToAdd() {\n        let result;\n        if (this.isRoot) {\n            result = `${this.cssPrefix}-row ${this.cssPrefix}-row-group ${this.cssPrefix}-row-group-root`;\n        }\n        else {\n            result = `${this.cssPrefix}-row ${this.cssPrefix}-row-group`;\n            const level = this.condition.getLevel();\n            if (level > 0)\n                result += ` ${this.cssPrefix}-level-${level}`;\n            result += this.condition.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n            if (this.condition.enabled) {\n                result += this.condition.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n            }\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        const builder = domel(this.element)\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .data('group-row', '')\n            .addChildElement(this.renderCheckbox())\n            .addChildElement(this.renderConjunction());\n        const level = this.condition.getLevel();\n        if (level > 0)\n            builder.addClass(`${this.cssPrefix}-level-${level}`);\n        this.buildGroupElements(builder, this.getGroupTitle());\n        if (this.panel.options.accentActiveCondition) {\n            builder.on('click', ev => {\n                this.panel.toggleConditionPicked(this.condition);\n                this.adjustButtonsVisibility();\n                if (!browserUtils.isMobileMode()) {\n                    builder.toDOM().dispatchEvent(createBrowserEvent(\"mouseenter\"));\n                }\n            });\n        }\n        builder\n            .addChildElement(this.renderButtonsBlock());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .on('mouseenter', event => {\n                this.isMouseOverBlock = true;\n                this.enterButtonBlock();\n                event.stopPropagation();\n                return false;\n            })\n                .on('mouseleave', event => {\n                this.isMouseOverBlock = false;\n                if (!this.keepShowingButtons && domel(this.buttonsBlock).isVisible()) {\n                    this.leaveButtonBlock();\n                }\n                event.stopPropagation();\n                return false;\n            });\n        }\n    }\n    getGroupTitle() {\n        let result;\n        if (this.isRoot && !browserUtils.isMobileMode()) {\n            result = i18n.getText('RootConditionGroupTitle');\n            if (!result) {\n                //to support old text key\n                result = i18n.getText('RootPredicateTitle');\n            }\n        }\n        else {\n            result = i18n.getText('ConditionGroupTitle');\n            if (!result) {\n                //to support old text key\n                result = i18n.getText('PredicateTitle');\n            }\n        }\n        return result;\n    }\n    buildGroupElements(builder, groupTitle) {\n        const pos = groupTitle.indexOf('{lt}');\n        if (pos < 0) {\n            //invalid format\n            builder.addText(i18n.getText('ErrIncorrectGroupTitleFormat'));\n            builder.addClass(`${this.cssPrefix}-error`);\n        }\n        else {\n            if (pos > 0) {\n                builder.addChild('span', b => {\n                    b.addClass(`${this.cssPrefix}-grelement`)\n                        .addText(groupTitle.substring(0, pos));\n                });\n            }\n            const linkTypeStr = equtils.linkTypeToStr(this.condition.linkType);\n            let curType = utils.findItemById(eqconsts.predicateLinkTypeList, linkTypeStr);\n            if (!curType) {\n                curType = eqconsts.predicateLinkTypeList[0];\n            }\n            if (this.isEditable()) {\n                dropdown(builder.toDOM())\n                    .onGetMenu(() => this.getLinkTypeMenu())\n                    .onItemSelected(id => {\n                    this.condition.linkType = equtils.strToLinkType(id);\n                    this.condition.fireChangedEvent();\n                })\n                    .addText(i18n.getText(curType.key))\n                    .title(i18n.getText(curType.key))\n                    .addClass(`${this.cssPrefix}-grelement`);\n            }\n            else {\n                builder.addChild('span', b => {\n                    b.text(i18n.getText(curType.key))\n                        .title(i18n.getText(curType.key))\n                        .addClass(`${this.cssPrefix}-grelement`);\n                });\n            }\n            builder.addChild('span', b => {\n                b.addClass(`${this.cssPrefix}-grelement`)\n                    .addText(groupTitle.substring(pos + 4));\n            });\n        }\n    }\n    getConditionMenu() {\n        return this.panel.getConditionGroupMenu(this.condition.getParent() == null);\n    }\n    getLinkTypeMenu() {\n        return this.panel.getLinkTypeMenu();\n    }\n    renderConjunction() {\n        return this.isRoot ? null : super.renderConjunction();\n    }\n    renderCheckbox() {\n        return this.isRoot ? null : super.renderCheckbox();\n    }\n    leaveButtonBlock() {\n        if (!this.panel.options.alwaysShowButtonsInGroups\n            && (!this.isConditionActive() || !this.panel.options.accentActiveCondition)) {\n            this.hideButtons();\n        }\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtonsInGroups\n            || (this.panel.options.accentActiveCondition && this.isConditionActive())) {\n            this.showButtons();\n        }\n    }\n}\n\nclass BaseElementRenderer {\n    constructor(slot) {\n        this.element = slot || domel('div').toDOM();\n    }\n    refresh() {\n        this.render();\n    }\n    render(isEditMode = false) {\n        this.labelElement = this.renderLabelElement();\n        domel(this.element)\n            .html('')\n            .addClass(this.getClassesToAdd())\n            .addClass(browserUtils.getMobileCssClass())\n            .addChildElement(this.labelElement);\n        if (this.isEditable()) {\n            this.renderEditor();\n            if (isEditMode) {\n                setTimeout(() => this.showEditor(), 50);\n            }\n        }\n        return this.element;\n    }\n    isEditable() {\n        return true;\n    }\n    renderLabelElement() {\n        const displayedText = this.getLabelText();\n        if (this.isEditable()) {\n            return domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(displayedText)\n                .text(displayedText)\n                .on('click', (ev) => {\n                ev.preventDefault();\n                this.showEditor();\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            return domel('span')\n                .title(displayedText)\n                .text(displayedText)\n                .toDOM();\n        }\n    }\n    getClassesToAdd() {\n        return '';\n    }\n    getLabelText() {\n        return this.getEmptyText();\n    }\n    getEmptyText() {\n        return '<empty>';\n    }\n}\n\nclass ExpressionRenderer extends BaseElementRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, expression, valueEditor, slot) {\n        super(slot);\n        this.panel = panel;\n        this.expression = expression;\n        this.valueEditor = valueEditor;\n    }\n    render(isEditMode = false) {\n        super.render(isEditMode);\n        if (this.panel.options.onExpressionRendered) {\n            this.panel.options.onExpressionRendered(this.expression, this.element);\n        }\n        return this.element;\n    }\n    getContext() {\n        return this.panel.getContext();\n    }\n    isReadOnly() {\n        const parent = this.expression.getParent();\n        return !parent.enabled || parent.isReadOnly();\n    }\n    isEditable() {\n        return !this.isReadOnly();\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-valueelement`;\n    }\n    getLabelText() {\n        let result = !this.expression.isEmpty()\n            ? this.expression.value\n            : this.getEmptyText();\n        return result;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextValue || i18n.getText('MsgEmptyScalarValue'); //'[enter value]';\n    }\n    setValue(value, silent) {\n        this.expression.setValue(value);\n        if (!silent) {\n            this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n        }\n    }\n    getValue() {\n        return this.expression.value;\n    }\n    validateInput(value) {\n        return { success: true, value: value };\n    }\n    showValidationError(message, target) {\n        this.getContext().throwError({\n            action: \"ui.validation\",\n            \"text\": message\n        });\n    }\n    isEmptyValue() {\n        let v = this.getValue();\n        return (typeof (v) === \"undefined\" || v === null || !v);\n    }\n    adjustWidth() {\n    }\n}\n\nclass InputExpressionRenderer extends ExpressionRenderer {\n    renderEditor() {\n        this.inputBuilder = domel(\"input\")\n            .hide()\n            .addClass(`${this.cssPrefix}-ve-editbox`)\n            .type('text')\n            .on('blur', (ev) => {\n            if (this.inputBuilder.isVisible() && !this.dontProcessBlur) {\n                const validationResult = this.validateInput(this.inputElement.value);\n                if (validationResult.success) {\n                    this.setValue(this.inputElement.value);\n                    this.closeEditor();\n                }\n                else {\n                    this.dontProcessBlur = true;\n                    this.inputElement.focus();\n                    setTimeout(() => { this.dontProcessBlur = false; }, 200);\n                    this.showValidationError(validationResult.message, ev.target);\n                }\n                ev.stopPropagation();\n                return false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.closeEditor();\n                ev.stopPropagation();\n                return false;\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                if (this.inputBuilder.isVisible()) {\n                    this.dontProcessBlur = true;\n                    const validationResult = this.validateInput(this.inputElement.value);\n                    if (validationResult.success) {\n                        this.setValue(this.inputElement.value);\n                        this.closeEditor();\n                        this.dontProcessBlur = false;\n                    }\n                    else {\n                        this.inputElement.focus();\n                        this.showValidationError(validationResult.message, ev.target);\n                        setTimeout(() => { this.dontProcessBlur = false; }, 200);\n                    }\n                    ev.stopPropagation();\n                    return false;\n                }\n            }\n        });\n        this.inputElement = this.inputBuilder.toDOM();\n        domel(this.element)\n            .addChildElement(this.inputElement);\n    }\n    showEditor() {\n        const MIN_WIDTH = 200;\n        if (!browserUtils.isMobileMode()) {\n            let left = this.element.offsetLeft;\n            let width = this.element.offsetWidth > MIN_WIDTH ? this.element.offsetWidth : MIN_WIDTH;\n            let maxWidth = this.element.parentElement.clientWidth - left - 55;\n            this.inputBuilder\n                .removeStyle('left')\n                .removeStyle('right');\n            if (maxWidth < MIN_WIDTH) {\n                this.inputBuilder\n                    .setStyle('right', '55px')\n                    .setStyle('width', `${MIN_WIDTH}px`);\n            }\n            else if (maxWidth < width) {\n                this.inputBuilder\n                    .setStyle('left', `${left}px`)\n                    .setStyle('width', `${maxWidth}px`);\n            }\n            else {\n                this.inputBuilder\n                    .setStyle('left', `${left}px`)\n                    .setStyle('width', `${width}px`);\n            }\n        }\n        domel(this.labelElement).hide();\n        this.inputBuilder\n            .value(this.getValue())\n            .show();\n        this.inputElement.focus();\n    }\n    closeEditor() {\n        this.inputBuilder.hide();\n        domel(this.labelElement).show();\n        this.labelElement.focus();\n    }\n    validateInput(inputValue) {\n        this.inputBuilder.removeClass(\"eqjs-invalid\");\n        const result = {\n            success: true,\n            value: inputValue\n        };\n        if (this.expression.kind == DataKind.List) {\n            this.validateListInput(inputValue, result);\n        }\n        else {\n            this.validateScalarInput(inputValue, result);\n        }\n        return result;\n    }\n    validateListInput(inputValue, result) {\n        let inputValues = inputValue.split(/\\s*,\\s*/);\n        for (let val of inputValues) {\n            this.validateScalarInput(val, result);\n            if (!result.success) {\n                return;\n            }\n        }\n    }\n    validateScalarInput(inputValue, result) {\n        if (!inputValue)\n            return;\n        if (utils.isNumericType(this.expression.dataType)) {\n            let parsedVal = +inputValue;\n            if (isNaN(parsedVal)) {\n                result.success = false;\n                result.message = '\"' + inputValue + '\" ' + i18n.getText('ErrNotNumber');\n            }\n            if (utils.isIntType(this.expression.dataType) && parsedVal != parseInt(inputValue, 10)) {\n                result.success = false;\n                result.message = '\"' + inputValue + '\" ' + i18n.getText('ErrIncorrectInteger');\n            }\n        }\n    }\n    showValidationError(message, target) {\n        super.showValidationError(message, target);\n        this.inputBuilder.addClass(\"eqjs-invalid\");\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n}\n\nclass ListExpressionRenderer extends ExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.menuItemsList = [];\n        this.showWhenReady = false;\n    }\n    isEditable() {\n        return !this.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    setValue(value, silent = false) {\n        const newValue = this.adjustNewValue(value);\n        if (value !== this.expression.value) {\n            const text = this.getValueText(value);\n            this.expression.setContent(newValue, text);\n            if (!silent) {\n                this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n            }\n        }\n        return true;\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (Array.isArray(value)) {\n            for (let item of this.menuItemsList) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.menuItemsList) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextList || i18n.getText('MsgEmptyListValue');\n    }\n    getListName() {\n        return this.valueEditor.name;\n    }\n    renderEditor() {\n        this.fillMenuItemsList(() => {\n            this.renderMenuBlock();\n        });\n    }\n    getLabelText() {\n        if (!this.expression.isEmpty()) {\n            return this.expression.getText();\n        }\n        else {\n            return this.getEmptyText();\n        }\n    }\n    showLoader() {\n        //NOTHING TO DO\n    }\n    hideLoader() {\n        //NOTHING TO DO\n    }\n    showEditor() {\n        if (this.menu) {\n            this.menu.showMenu({\n                anchor: this.labelElement,\n                selectedIds: this.getValuesAsArray(),\n                itemSelectedCallback: (item, selectedItems) => {\n                    if (!this.menu.options.multiselect) {\n                        this.setValue(item.id);\n                    }\n                    else if (selectedItems) {\n                        let selectedIds = [];\n                        let selLength = selectedItems.length;\n                        for (let i = 0; i < selLength; i++)\n                            selectedIds.push(selectedItems[i].id);\n                        this.setValue(selectedIds);\n                    }\n                    return false;\n                }\n            });\n        }\n        else {\n            this.showWhenReady = true;\n            this.showLoader();\n        }\n    }\n    closeEditor() {\n        this.menu.hideMenu();\n    }\n    renderMenuBlock() {\n        let multiSelect = false;\n        if (this.expression) {\n            multiSelect = this.expression.kind === DataKind.List;\n        }\n        const queryPanel = this.panel;\n        const options = {\n            items: this.menuItemsList,\n            multiselect: multiSelect,\n            container: queryPanel ? queryPanel.options.menuContainer : null,\n            showSelected: true,\n            showItemIds: queryPanel ? queryPanel.options.showIdsForListItems : false\n        };\n        if (queryPanel) {\n            utils.assignDeep(options, queryPanel.options.menuOptions);\n        }\n        let menuId = this.element.id;\n        if (menuId) {\n            options.id = menuId + '-EditorMenu';\n        }\n        if (queryPanel) {\n            options.domWriteItemsId = queryPanel.options.domWriteItemsId;\n        }\n        options.buttons = {\n            submit: i18n.getText('ButtonApply'),\n            cancel: i18n.getText('ButtonCancel')\n        };\n        this.menu = new PopupMenu(options);\n    }\n    getValuesAsArray() {\n        if (this.expression.kind !== DataKind.List) {\n            return [this.expression.value];\n        }\n        else {\n            if (this.expression.value) {\n                //splits value by ',' \n                const res = this.expression.value.match(/\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|[^,]+/g);\n                return res\n                    ? res.map(a => {\n                        if (a.charAt(0) == '\"' && a.charAt(a.length - 1) == '\"') {\n                            a = a.substring(1, a.length - 1);\n                            return a.replace(/\\\"/g, '\"');\n                        }\n                        else {\n                            return a;\n                        }\n                    })\n                    : [];\n            }\n            else\n                return [];\n        }\n    }\n    adjustNewValue(newValue) {\n        if (Array.isArray(newValue)) {\n            return newValue.map((a) => {\n                if (a.indexOf(',') >= 0) {\n                    a = a.replace(/\"/g, '\\\"');\n                    return '\"' + a + '\"';\n                }\n                else {\n                    return a;\n                }\n            }).join(',');\n        }\n        else {\n            return newValue;\n        }\n    }\n    fillMenuItemsList(onComplete) {\n        this.menuItemsList = this.valueEditor.values;\n        if (onComplete) {\n            onComplete();\n        }\n    }\n    takeDefaultValue() {\n        if (!this.menuItemsList)\n            return;\n        let itemLen = this.menuItemsList.length;\n        let defValue = this.valueEditor.defValue;\n        for (let i = 0; i < itemLen; i++) {\n            let item = this.menuItemsList[i];\n            if (item.isDefault || defValue == item.id) {\n                this.setValue(item.id, true);\n                break;\n            }\n        }\n    }\n}\nclass CustomListExpressionRenderer extends ListExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.isLoading = false;\n        this.onClickTemp = null;\n    }\n    renderEditor() {\n        if (this.isLoading)\n            return;\n        this.isLoading = true;\n        this.fillMenuItemsList(() => {\n            this.isLoading = false;\n            if (this.isEmptyValue()) {\n                this.takeDefaultValue();\n            }\n            if (!this.expression.isEmpty() && this.expression._isDefaultValue) {\n                const text = this.getValueText(this.expression.value);\n                this.expression.setContent(this.expression.value, text);\n                this.expression.getParent().fireChangedEvent();\n            }\n            this.renderMenuBlock();\n            if (this.showWhenReady) {\n                this.showWhenReady = false;\n                this.hideLoader();\n                this.showEditor();\n            }\n        });\n    }\n    showLoader() {\n        this.labelElement.style.display = 'none';\n        if (!this.loaderElement) {\n            this.loaderElement = domel('div', this.element)\n                .addClass(`${this.cssPrefix}-ve-loader`)\n                .toDOM();\n        }\n        this.loaderElement.style.display = 'block';\n    }\n    hideLoader() {\n        this.loaderElement.style.display = 'none';\n        this.labelElement.removeAttribute('style');\n    }\n    fillMenuItemsList(onComplete) {\n        const listName = this.getListName();\n        const listRequestHandler = this.panel.getContext().getListRequestHandler();\n        if (eqconsts.constLists[listName]) {\n            this.menuItemsList = eqconsts.constLists[listName];\n            if (onComplete) {\n                onComplete();\n            }\n        }\n        else if (listRequestHandler) {\n            listRequestHandler({\n                listName: listName,\n                editorId: this.valueEditor.id,\n                editorParams: this.valueEditor.extraParams,\n                value: this.getValue()\n            }, (list) => {\n                this.menuItemsList = list;\n                if (onComplete) {\n                    onComplete();\n                }\n            });\n        }\n    }\n}\nclass SqlListExpressionRenderer extends CustomListExpressionRenderer {\n    fillMenuItemsList(onComplete) {\n        const context = this.panel.getContext();\n        this.valueEditor;\n        const listRequestHandler = context.getListRequestHandler();\n        if (listRequestHandler) {\n            let requestData = {\n                listName: \"SQL\",\n                editorId: this.valueEditor.id,\n                editorParams: this.valueEditor.extraParams,\n                value: this.getValue()\n            };\n            //requestData.sql = editor.sql;\n            listRequestHandler(requestData, (list) => {\n                this.menuItemsList = list;\n                if (onComplete) {\n                    onComplete();\n                }\n            });\n        }\n    }\n}\n\nclass AttributeExpressionRenderer extends ListExpressionRenderer {\n    constructor(panel, expression, entitiesMenu, slot) {\n        super(panel, expression, null, slot);\n        this.menu = entitiesMenu;\n    }\n    renderEditor() {\n        //create menu\n    }\n    getLabelText() {\n        const model = this.panel.getContext().getModel();\n        const attrId = this.expression.value;\n        const attrObj = attrId ? model.getAttributeByIdSafe(attrId) : null;\n        const attrFormat = this.panel.options.attrElementFormat;\n        return attrObj ? model.getAttributeText(attrObj, attrFormat) : this.getEmptyText();\n    }\n    setValue(value, silent = false) {\n        silent = silent && value !== this.expression.value;\n        const result = super.setValue(value, true);\n        if (!silent) {\n            this.expression.getParent().fireChangedEvent(ConditionPart.EntityAttr | ConditionPart.Operator);\n        }\n        return result;\n    }\n    isEditable() {\n        return !this.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Attribute) === QPEditablePart.Attribute);\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextAttribute || i18n.getText('MsgEmptyAttrValue');\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-attrelement`;\n    }\n    adjustWidth() {\n        if (browserUtils.isMobileMode()) {\n            return;\n        }\n        const elWidth = this.element.clientWidth;\n        const parWidth = this.element.parentElement.clientWidth;\n        if (elWidth > parWidth / 2) {\n            domel(this.element)\n                .addClass(`${this.cssPrefix}-attrelement-wide`);\n        }\n    }\n}\n\nclass DropDownRenderer extends BaseElementRenderer {\n    constructor(slot) {\n        super(slot);\n    }\n    showEditor() {\n        const menu = this.getMenu();\n        if (menu) {\n            menu.showMenu({\n                anchor: this.labelElement,\n                itemSelectedCallback: item => {\n                    this.itemSelected(item.id);\n                    return false;\n                }\n            });\n        }\n    }\n    closeEditor() {\n        const menu = this.getMenu();\n        if (menu)\n            menu.hideMenu();\n    }\n}\n\nclass AddRowRenderer extends DropDownRenderer {\n    constructor(panel, entitiesMenu, slot) {\n        super(slot);\n        this.panel = panel;\n        this.menu = entitiesMenu;\n    }\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    getLabelText() {\n        return i18n.getText('CmdClickToAddCondition');\n    }\n    getClassesToAdd() {\n        return `${eqCssPrefix}-addrow ${this.cssPrefix}-addrow`;\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) === QPEditablePart.Addition);\n    }\n    renderLabelElement() {\n        const displayedText = this.getLabelText();\n        if (this.isEditable()) {\n            this.labelElement = domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(displayedText)\n                .text(displayedText)\n                .on('click', (ev) => {\n                ev.preventDefault();\n                this.showEditor();\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            this.labelElement = domel('div')\n                .toDOM();\n        }\n        return this.labelElement;\n    }\n    renderEditor() {\n        // do nothing - the menu is alredy created\n    }\n    itemSelected(id) {\n        const query = this.panel.getQuery();\n        const descr = {\n            parent: query.getRootCondition(),\n            attributeId: id\n        };\n        const cond = query.addSimpleCondition(descr);\n        if (cond) {\n            query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n        }\n    }\n    getMenu() {\n        return this.menu;\n    }\n}\n\nclass OperatorRenderer extends DropDownRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, condition, text, slot) {\n        super(slot);\n        this.panel = panel;\n        this.condition = condition;\n        this.displayedText = text;\n    }\n    renderEditor() {\n        //create menu\n        const model = this.panel.getContext().getModel();\n        const query = this.panel.getQuery();\n        const items = [];\n        const isRelatedToSubQuery = (operator) => {\n            return operator.defaultOperand.kind == DataKind.Query;\n        };\n        const attrId = (this.condition && this.condition.expressions && this.condition.expressions[0]) ? this.condition.expressions[0].value : null;\n        const attr = attrId ? model.getAttributeById(this.condition.expressions[0].value) : null;\n        if (attr && attr.operators) {\n            attr.operators.forEach(operId => {\n                const operator = model.getOperatorById(operId);\n                const related = isRelatedToSubQuery(operator);\n                if (!query.isEx() && related) {\n                    return;\n                }\n                if (operator && !(this.panel.options.isSubQuery && related)) {\n                    items.push({\n                        id: operId,\n                        text: i18n.getText('Operators', operId, 'caption') || operator.caption\n                    });\n                }\n            });\n        }\n        const options = {\n            items: items,\n            adjustHeight: this.panel.options.adjustEntitiesMenuHeight,\n            id: utils.generateId('opmn'),\n            domWriteItemsId: this.panel.options.domWriteItemsId\n        };\n        utils.assign(options, this.panel.options.menuOptions);\n        this.menu = new PopupMenu(options);\n    }\n    getLabelText() {\n        return this.displayedText;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextOperator || i18n.getText('MsgEmptyOperator');\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-operelement`;\n    }\n    isEditable() {\n        return this.condition.enabled && !this.condition.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Operator) === QPEditablePart.Operator);\n    }\n    itemSelected(id) {\n        this.condition.setOperatorId(id);\n        this.condition.fireChangedEvent(ConditionPart.Operator);\n    }\n    getMenu() {\n        return this.menu;\n    }\n}\n\nclass DateTimeExpressionRenderer extends ExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.dtp = null;\n        this.internalDateFormat = 'yyyy-MM-dd';\n        this.internalTimeFormat = 'HH:mm';\n    }\n    renderEditor() {\n    }\n    showEditor() {\n        if (this.dtp)\n            return;\n        const pickerOptions = {\n            yearRange: this.panel.options.yearRange,\n            showCalendar: this.expression.dataType !== DataType.Time,\n            showTimePicker: this.expression.dataType !== DataType.Date,\n            oneClickDateSelection: this.panel.options.oneClickDateSelection,\n            showDateTimeInput: this.panel.options.showDateTimeInput,\n            onApply: (dateTime) => {\n                const value = this.convertToInternalFormat(dateTime);\n                this.setValue(value);\n                this.dtp = null;\n                setTimeout(() => this.labelElement.focus(), 100);\n            },\n            onCancel: () => {\n                this.labelElement.innerText = this.getLabelText();\n                this.dtp = null;\n                setTimeout(() => this.labelElement.focus(), 100);\n            },\n            onDateTimeChanged: (dateTime) => {\n                const value = i18n.dateTimeToStrEx(dateTime, this.expression.dataType);\n                this.labelElement.innerText = value;\n            }\n        };\n        this.dtp = this.panel.options.dateTimePickerResolver\n            ? this.panel.options.dateTimePickerResolver(pickerOptions)\n            : new DefaultDateTimePicker(pickerOptions);\n        const model = this.expression.getModel();\n        const value = this.expression.value;\n        let dateTime = new Date();\n        if (this.expression.dataType != DataType.Time && model.isDateMacro(value)) {\n            dateTime = model.getDateMacroValue(value);\n        }\n        else if (this.expression.dataType == DataType.Time && model.isTimeMacro(value)) {\n            dateTime = model.getTimeMacroValue(value);\n        }\n        else {\n            dateTime = this.convertFromInternalFormat(value);\n        }\n        this.dtp.setDateTime(dateTime);\n        this.dtp.show(this.element);\n    }\n    closeEditor() {\n        this.dtp.cancel();\n        this.dtp = null;\n    }\n    getLabelText() {\n        if (!this.expression.value)\n            return this.getEmptyText();\n        const defValue = '${{Today}}';\n        const value = this.expression.value;\n        const model = this.expression.getModel();\n        if (!model) {\n            throw new Error('DataModel is not defined for ' + this.expression.value);\n        }\n        if (model.isDateMacro(value) || model.isTimeMacro(value)) {\n            let macroText = value.substring(3, value.length - 2);\n            let res = i18n.getText(macroText);\n            return res ? res : defValue;\n        }\n        const result = i18n.dateTimeToStrEx(this.convertFromInternalFormat(value), this.expression.dataType);\n        return result;\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    convertFromInternalFormat(dateTime) {\n        return utils.strToDateTime(dateTime, this.internalDateFormat + ' ' + this.internalTimeFormat);\n    }\n    convertToInternalFormat(dateTime) {\n        return i18n.dateTimeToStr(dateTime, this.internalDateFormat + ' ' + this.internalTimeFormat);\n    }\n}\n\nclass SubQueryExpressionRenderer extends ExpressionRenderer {\n    renderEditor() {\n        this.dialogBlockBody = domel('div')\n            .addClass(`kfrm-form`)\n            //.setStyle('height', '100%')\n            .toDOM();\n        this.createEntitiesMenu();\n        this.renderColumnBlock();\n        this.renderQueryPanelBlock();\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    setValue(value, silent) {\n        if (value instanceof Query) {\n            this.expression.subQuery = value;\n            if (!silent) {\n                this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n            }\n        }\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        const exprType = this.expression.dataType;\n        this.colEntitiesList = model.getEntitiesTreeWithFilter((ent, attr) => {\n            if (attr) {\n                return attr.useInConditions && attr.dataType === exprType;\n            }\n            else {\n                //if it's entity\n                return ent.attributes && ent.useInConditions;\n            }\n        });\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.element.getAttribute('data-id');\n        if (menuId) {\n            menuId += '-SubColumnMenu';\n        }\n        const options = {\n            items: this.colEntitiesList,\n            adjustHeight: this.panel.options.adjustEntitiesMenuHeight,\n            id: menuId,\n            isSubQuery: true,\n            domWriteItemsId: this.panel.options.domWriteItemsId\n        };\n        utils.assign(options, this.panel.options.menuOptions);\n        this.colEntitiesMenu = new PopupMenu(options);\n    }\n    renderColumnBlock() {\n        this.columnBlock = domel('div', this.dialogBlockBody)\n            .addClass(`kfrm-field`)\n            .addChild('label', b => b\n            .addText(i18n.getText('SubQueryColumnTitle')))\n            .addChild('a', b => this.columnElement = b\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            this.colEntitiesMenu.showMenu({\n                anchor: this.columnElement,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrId = data.id;\n                    this.setResultAttributeId(attrId);\n                    return false;\n                }\n            });\n        })\n            .toDOM())\n            .toDOM();\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextValue || i18n.getText('MsgSubQueryValue');\n    }\n    renderQueryPanelBlock() {\n        const parentEl = domel('div', this.dialogBlockBody)\n            .addClass(`kfrm-field`)\n            .addChild('label', b => b\n            .addText(i18n.getText('SubQueryQueryPanelCaption')))\n            .toDOM();\n        this.subQueryPanelBlock =\n            domel('div', parentEl)\n                .toDOM();\n        let qpId = this.element.getAttribute('data-id');\n        if (qpId) {\n            this.subQueryPanelBlock.id = qpId + '-SubQueryPanel';\n        }\n    }\n    setResultAttributeId(attrId) {\n        let attrObj = this.getContext().getModel().getAttributeById(attrId);\n        if (attrObj && this.subQuery) {\n            let cols = this.subQuery.getColumns();\n            let column;\n            if (cols.length > 0) {\n                column = cols[0];\n                column.expr.setValue(attrId);\n                column.expr.dataType = attrObj.dataType;\n                column.fireChangedEvent();\n            }\n            else {\n                column = this.subQuery.createColumn();\n                column.sorting = SortDirection.None;\n                column.sortIndex = -1;\n                let expr = new Expression(column);\n                expr.setValue(attrId);\n                expr.tag = ExprTag.EntityAttribute;\n                expr.kind = DataKind.Attribute;\n                expr.dataType = attrObj.dataType;\n                column.expr = expr;\n                cols.push(column);\n                this.subQuery.fireColumnsChangedEvent(QueryChangeAction.Add, column);\n            }\n            this.columnElement.innerText = this.getAttributeText(attrObj);\n        }\n    }\n    getAttributeText(attribute) {\n        if (!attribute)\n            return i18n.getText('SubQueryEmptyColumn');\n        let attrText = i18n.getText('Attributes', attribute.id);\n        if (!attrText)\n            attrText = attribute.caption;\n        let format = this.panel.options.attrElementFormat;\n        if (!format)\n            return attrText;\n        let result = format.replace(new RegExp(\"{attr}\", 'g'), attrText);\n        let entityPath = this.getContext()\n            .getModel()\n            .getFullEntityPathByAttr(attribute.id, '.');\n        return result.replace(new RegExp(\"{entity}\", 'g'), entityPath);\n    }\n    showEditor() {\n        const parentPanel = this.panel;\n        const context = this.getContext();\n        this.subQueryPanelBlock.innerHTML = \"\";\n        this.subQuery = context.createQuery();\n        if (this.expression.subQuery) {\n            this.subQuery.loadFromData(this.expression.subQuery.toJSONData());\n        }\n        let subOptions = utils.assign({}, parentPanel.options);\n        subOptions.isSubQuery = true;\n        subOptions.showAddRow = true;\n        subOptions.menuContainer = document.body;\n        subOptions.menuOptions.isSubQuery = true;\n        subOptions.entitiesListFilter = (listItems, listOptions) => {\n            if (parentPanel.options.entitiesListFilter) {\n                let subQueryPanelListOptions = listOptions || {};\n                subQueryPanelListOptions.isSubQuery = true;\n                parentPanel.options.entitiesListFilter(listItems, subQueryPanelListOptions);\n            }\n        };\n        let subQueryPanel = this.panel.clonePanel(this.subQueryPanelBlock, this.subQuery);\n        subQueryPanel.init(this.panel.getContext(), subOptions);\n        let attrId = null;\n        let cols = this.subQuery.getColumns();\n        if (cols.length == 0) {\n            let condition = this.expression.getParent();\n            if (condition.expressions.length > 0) {\n                let attrExpr = condition.expressions[0];\n                attrId = (attrExpr.tag == ExprTag.EntityAttribute\n                    || attrExpr.kind == DataKind.Attribute) ? attrExpr.value : null;\n            }\n        }\n        else {\n            attrId = cols[0].expr.value;\n        }\n        if (attrId) {\n            this.setResultAttributeId(attrId);\n        }\n        else {\n            this.columnElement.innerText = i18n.getText(\"SubQueryEmptyColumn\");\n        }\n        subQueryPanel.refresh();\n        const rootCondEl = this.subQueryPanelBlock.querySelector('.eqjs-qp-conditions-root');\n        if (rootCondEl) {\n            rootCondEl.style.minHeight = '100px';\n        }\n        const dialogService = this.panel\n            .getContext()\n            .getServices()\n            .getService('DialogService');\n        dialogService.open({\n            title: i18n.getText('SubQueryDialogTitle'),\n            body: this.dialogBlockBody,\n            width: this.panel.options.subQueryDialogWidth,\n            //height: this.panel.options.subQueryDialogHeight,\n            closable: true,\n            cancelable: true,\n            onSubmit: () => {\n                const value = this.subQuery;\n                // validate subquery\n                if (value.tryValidate({ checkExpressions: true })) {\n                    this.setValue(value);\n                    return true;\n                }\n                return false;\n            }\n        });\n    }\n    closeEditor() {\n    }\n}\n\nclass BindToParentColumnExpressionRenderer extends CustomListExpressionRenderer {\n    constructor(panel, expression, editor, slot) {\n        super(panel, expression, editor, slot);\n        this.expression.tag = ExprTag.ParentColumn;\n    }\n    fillMenuItemsList(onComplete) {\n        const query = this.panel.getQuery().getParentQuery();\n        const parent = this.expression.getParent();\n        const attrDataType = parent.expressions[0].dataType;\n        this.menuItemsList = query\n            .getColumns()\n            .filter(col => col.expr.dataType == attrDataType)\n            .map(col => {\n            return { id: col.id, text: col.caption };\n        });\n        if (onComplete) {\n            onComplete();\n        }\n    }\n}\n\n/**\n * The query panel wiget, implemented without JQuery.\n */\nclass QueryPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot, customQuery) {\n        super(slot);\n        this.options = {\n            editableParts: QPEditablePart.All,\n            isSubQuery: false,\n            activeCondition: null,\n            entitiesPopupHandler: null,\n            entitiesListFilter: null,\n            menuContainer: document.body,\n            showRootRow: true,\n            showAddRow: true,\n            showCheckboxes: false,\n            allowParameterization: false,\n            allowInJoinConditions: false,\n            showPoweredBy: false,\n            buttons: {\n                condition: null,\n                group: null\n            },\n            alwaysShowButtonsInGroups: false,\n            alwaysShowButtonsInConditions: false,\n            showConjunctions: true,\n            accentActiveCondition: true,\n            activateRootOnStart: true,\n            yearRange: 'c-10:c+10',\n            oneClickDateSelection: true,\n            showDateTimeInput: false,\n            attrElementFormat: '{entity} {attr}',\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                itemRenderedCallback: null\n            },\n            allowDragDrop: true,\n            attrPlacement: 0,\n            sortEntities: false,\n            subQueryDialogWidth: 600,\n            subQueryDialogHeight: 300,\n            dialogZIndex: 100000,\n            numberListSeparators: [',', ';'],\n            autoEditNewCondition: false,\n            onConditionRendered: null,\n            onGetConditionRenderer: null,\n            onGetExpressionRenderer: null,\n            onGetOperatorRenderer: null,\n            onOperatorRendered: null,\n            onGetAddRowRenderer: null,\n            defaultQuery: null,\n            showIndicatorOnLoad: true\n        };\n        this.customQuery = null;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-cond-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        if (!this.slot.classList.contains(`${this.cssPrefix}-panel`)) {\n            this.slot.classList.add(`${this.cssPrefix}-panel`);\n        }\n        this.group = WidgetGroup.Query;\n        if (customQuery) {\n            this.customQuery = customQuery;\n        }\n    }\n    getWidgetType() {\n        return 'queryPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n        //detach previously defined query observer (if any)\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            const model = this.getContext().getModel();\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttr\"],\n                onDragEnter: (container, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    ev.dragImage.classList.add('eqjs-sortable-helper');\n                    this.showLandingSlot();\n                    const attrId = ev.data.attrId;\n                    if (!model.checkAttrProperty(attrId, \"useInConditions\")) {\n                        ev.dropEffect = DropEffect.Forbid;\n                    }\n                },\n                onDragOver: (container, ev) => {\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dragImage.classList.remove('eqjs-sortable-helper');\n                    ev.dragImage.style.removeProperty('width');\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLangindSlot();\n                },\n                onDrop: (container, ev) => {\n                    const query = this.getQuery();\n                    const descr = {\n                        parent: query.getRootCondition(),\n                        attributeId: ev.data.attrId\n                    };\n                    const cond = query.addSimpleCondition(descr);\n                    if (cond) {\n                        query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                    }\n                }\n            });\n        }\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    getEntitiesMenu() {\n        return this.entitiesMenu;\n    }\n    getConditionMenu() {\n        return this.conditionMenu;\n    }\n    getLinkTypeMenu() {\n        return this.linkTypeMenu;\n    }\n    getConditionGroupMenu(isRoot = false) {\n        return isRoot ? this.rootGroupMenu : this.groupMenu;\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to conditions\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Conditions && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const conds = edata.changee;\n                    const modifyCondition = (cond, autoEdit) => {\n                        const el = this.slot.querySelector(`div[data-id=${cond.id}]`);\n                        if (el) {\n                            autoEdit = autoEdit\n                                && ((edata.condPart & ConditionPart.Operator) === ConditionPart.Operator)\n                                && cond.expressions.length > 1\n                                && (cond.expressions[1]._isDefaultValue || cond.expressions[1].value == '' ||\n                                    cond.expressions[1].value == null);\n                            const isActive = el.classList.contains('active');\n                            const renderer = this.getConditionRenderer(cond, el);\n                            if (renderer) {\n                                const newEl = renderer.render(autoEdit);\n                                if (isActive) {\n                                    this.toggleConditionPicked(cond);\n                                }\n                                if (isFocusInside && !autoEdit) {\n                                    const focusElem = newEl.querySelector('a') || newEl.querySelector('.eqjs-qp-condition-button');\n                                    if (focusElem) {\n                                        safeFocus(focusElem);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    let autoEdit = this.options.autoEditNewCondition;\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => modifyCondition(cond, autoEdit));\n                        autoEdit = false;\n                    }\n                    else {\n                        modifyCondition(conds, autoEdit);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const conds = edata.changee;\n                    const addCondition = (cond) => {\n                        const renderer = this.getConditionRenderer(cond);\n                        if (renderer) {\n                            const parent = cond.getParent();\n                            const parentEl = this.slot.querySelector(`div[data-id=${parent.id}]`);\n                            if (parentEl) {\n                                const newCondContainer = parentEl.lastChild;\n                                if (newCondContainer) {\n                                    const el = renderer.render(this.options.autoEditNewCondition);\n                                    newCondContainer.appendChild(el);\n                                    el.scrollIntoView(false);\n                                    if (isFocusInside && !this.options.autoEditNewCondition) {\n                                        el.querySelector(`a`).focus();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => addCondition(cond));\n                    }\n                    else {\n                        addCondition(conds);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const conds = edata.changee;\n                    const deleteCondition = (cond) => {\n                        const el = this.slot.querySelector(`div[data-id=${cond.id}]`);\n                        if (el) {\n                            const parent = this.slot.querySelector(`div[data-id=${cond.getParent().id}] > .eqjs-qp-row-group`);\n                            const next = el.nextSibling;\n                            const prev = el.previousSibling;\n                            el.parentElement.removeChild(el);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || parent;\n                                const focusElem = focusCond.querySelector('a') || focusCond.querySelector('.eqjs-qp-condition-button');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => deleteCondition(cond));\n                    }\n                    else {\n                        deleteCondition(conds);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        if (this.customQuery) {\n            return this.customQuery;\n        }\n        return this.context.getQuery();\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        // dateFormatValue & dateFormatDisplay back compatibility\n        if (this.options.dateFormatValue) {\n            i18n.updateLocaleSettings({\n                editDateFormat: this.options.dateFormatValue\n            });\n        }\n        if (this.options.dateFormatDisplay) {\n            i18n.updateLocaleSettings({\n                shortDateFormat: this.options.dateFormatDisplay\n            });\n        }\n        if (typeof this.options.editableParts === \"undefined\") {\n            this.options.editableParts = QPEditablePart.All;\n        }\n        if (browserUtils.isMobileMode()) {\n            this.options.buttons = this.options.buttons || {};\n            this.options.buttons.condition = [\"menu\"];\n            this.options.buttons.group = [\"menu\"];\n        }\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    render() {\n        try {\n            this.entitiesMenu = this.createEntitiesMenu();\n            this.createConditionMenus();\n            this.createLinkTypeMenu();\n            this.rootContainer = domel('div', this.slot)\n                .toDOM();\n            domel(this.slot)\n                .removeClass(eqCssMobile)\n                .addClass(browserUtils.getMobileCssClass());\n            const query = this.getQuery();\n            const root = query.getRootCondition();\n            const renderer = this.getConditionRenderer(root, this.rootContainer);\n            if (renderer) {\n                renderer.render();\n            }\n            if (this.options.showAddRow) {\n                this.addRowElement = domel('div', this.slot)\n                    .toDOM();\n                const addrowRenderer = this.getAddRowRenderer(this.addRowElement);\n                if (addrowRenderer)\n                    addrowRenderer.render();\n            }\n        }\n        catch (err) {\n            const error = err;\n            this.context.throwError({\n                action: \"QueryPanel rendering\",\n                text: error.message,\n                sourceError: error\n            });\n        }\n    }\n    getConditionRenderer(condition, slot) {\n        let renderer;\n        if (this.options.onGetConditionRenderer) {\n            renderer = this.options.onGetConditionRenderer(condition, slot);\n            if (renderer) {\n                return renderer;\n            }\n        }\n        switch (condition.tag) {\n            case CondTag.Simple:\n                return new SimpleConditionRenderer(this, condition, slot);\n            case CondTag.Group:\n                return new ConditionGroupRenderer(this, condition, slot);\n        }\n        return null;\n    }\n    getExpressionRenderer(expression, slot) {\n        if (!expression) {\n            throw 'Expression is not defined in the condition';\n        }\n        const model = this.getContext().getModel();\n        const condition = expression.getParent();\n        const operator = model.getOperatorById(condition.getOperatorId());\n        const attribute = model.getAttributeByIdSafe(condition.expressions[0].value);\n        const operand = model.getOperand(attribute, operator, expression.getIndex());\n        let editor;\n        let tag;\n        if (operand && operand.editor && operand.editor.tag !== EqEditorTag.Unknown) {\n            editor = operand.editor;\n        }\n        else if (attribute && attribute.defaultEditor) {\n            editor = attribute.defaultEditor;\n        }\n        else {\n            editor = new EqValueEditor();\n        }\n        tag = editor.tag;\n        let exprType = expression.dataType;\n        if (exprType == DataType.Unknown) {\n            exprType = attribute.dataType;\n        }\n        if (expression.kind === DataKind.Attribute) {\n            if (expression.getIndex() === 0) { // Base attribute expression\n                return new AttributeExpressionRenderer(this, expression, this.entitiesMenu, slot);\n            }\n            else {\n                let attributeMenu = this.createEntitiesMenu((ent, attr) => {\n                    if (attr) {\n                        return attr.useInConditions && attr.dataType === exprType;\n                    }\n                    return true;\n                });\n                return new AttributeExpressionRenderer(this, expression, attributeMenu, slot);\n            }\n        }\n        else if (expression.kind === DataKind.Query) {\n            tag = EqEditorTag.SubQuery;\n        }\n        else if (expression.kind === DataKind.Scalar) {\n            if (tag == EqEditorTag.Unknown && (expression.dataType === DataType.Date\n                || expression.dataType === DataType.DateTime || expression.dataType === DataType.Time)) {\n                tag = EqEditorTag.DateTime;\n            }\n        }\n        else if (expression.kind == DataKind.ParentColumn) {\n            tag = EqEditorTag.BindToParentColumn;\n        }\n        if (this.options.onGetExpressionRenderer) {\n            let renderer = this.options.onGetExpressionRenderer(this, expression, editor, slot);\n            if (renderer) {\n                return renderer;\n            }\n        }\n        switch (tag) {\n            case EqEditorTag.List:\n                return new ListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.SqlList:\n                return new SqlListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.CustomList:\n                return new CustomListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.DateTime:\n                return new DateTimeExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.SubQuery:\n                return new SubQueryExpressionRenderer(this, expression, editor, slot);\n            //move to ERS later\n            case EqEditorTag.BindToParentColumn:\n                return new BindToParentColumnExpressionRenderer(this, expression, editor, slot);\n            default:\n                return new InputExpressionRenderer(this, expression, editor, slot);\n        }\n    }\n    getOperatorRenderer(condition, text, slot) {\n        let renderer;\n        if (this.options.onGetOperatorRenderer)\n            renderer = this.options.onGetOperatorRenderer(condition, text, slot);\n        if (renderer)\n            return renderer;\n        return new OperatorRenderer(this, condition, text, slot);\n    }\n    getAddRowRenderer(slot) {\n        let renderer;\n        if (this.options.onGetAddRowRenderer)\n            renderer = this.options.onGetAddRowRenderer(slot);\n        if (renderer)\n            return renderer;\n        return new AddRowRenderer(this, this.entitiesMenu, slot);\n    }\n    createEntitiesMenu(filterFunc) {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id || \"eq-querypanel\";\n        menuId += '-EntitiesMenu';\n        const entitiesList = model.getEntitiesTree({\n            addUIC: true,\n            addUIR: false,\n            addUIS: false,\n            attrPlacement: this.options.attrPlacement,\n            sortEntities: this.options.sortEntities\n        }, filterFunc);\n        const options = {\n            items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight,\n            id: menuId,\n            domWriteItemsId: this.options.domWriteItemsId\n        };\n        utils.assign(options, this.options.menuOptions);\n        return new PopupMenu(options);\n    }\n    showEntitiesMenu(options) {\n        this.entitiesMenu.showMenu(options);\n    }\n    createConditionMenus() {\n        //ConditionMenu\n        {\n            const query = this.getQuery();\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-ConditionMenu';\n            const items = [\n                {\n                    id: \"enable\",\n                    text: i18n.getText('MenuEnable')\n                },\n                {\n                    id: \"delete\",\n                    text: i18n.getText('CmdDelete')\n                }\n            ];\n            if (query.isEx()) {\n                if (this.options.allowParameterization || this.options.allowInJoinConditions) {\n                    items.push({ id: \"delimiter\", text: \"---\" });\n                }\n                if (this.options.allowParameterization) {\n                    items.push({\n                        id: \"param\",\n                        text: i18n.getText('MenuParameterization')\n                    });\n                }\n                if (this.options.allowInJoinConditions) {\n                    items.push({\n                        id: \"inJoin\",\n                        text: i18n.getText('MenuJoinCond')\n                    });\n                }\n            }\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.conditionMenu = new PopupMenu(options);\n        }\n        //groupMenu\n        {\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-GroupMenu';\n            const items = [\n                {\n                    id: \"enable\",\n                    text: i18n.getText('MenuEnable')\n                },\n                {\n                    id: \"delete\",\n                    text: i18n.getText('CmdDelete')\n                },\n                {\n                    id: \"delimiter\",\n                    text: \"---\"\n                },\n                {\n                    id: \"addCondition\",\n                    text: i18n.getText('CmdAddCondition')\n                },\n                {\n                    id: \"addGroup\",\n                    text: i18n.getText('CmdAddCondGroup')\n                }\n            ];\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.groupMenu = new PopupMenu(options);\n        }\n        //rootGroupMenu\n        {\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-RootGroupMenu';\n            const items = [\n                {\n                    id: \"addCondition\",\n                    text: i18n.getText('CmdAddCondition')\n                },\n                {\n                    id: \"addGroup\",\n                    text: i18n.getText('CmdAddCondGroup')\n                }\n            ];\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.rootGroupMenu = new PopupMenu(options);\n        }\n    }\n    createLinkTypeMenu() {\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-LinkTypeMenu';\n        }\n        const typeList = eqconsts.predicateLinkTypeList;\n        const itemList = typeList.map((item) => {\n            return {\n                id: item.id,\n                text: i18n.getText(item.key)\n            };\n        });\n        const options = { items: itemList, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(options, this.options.menuOptions);\n        this.linkTypeMenu = new PopupMenu(options);\n    }\n    toggleConditionPicked(condition, force = undefined) {\n        let el;\n        let isActive;\n        if (condition) {\n            el = this.slot.querySelector(`div[data-id=${condition.id}][data-condrow], div[data-id=${condition.id}] > div[data-group-row]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.slot.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            if (row.hasAttribute('data-group-row')) {\n                if (!this.options.alwaysShowButtonsInGroups) {\n                    domel(row)\n                        .data(\"show-buttons\", null);\n                }\n            }\n            else {\n                if (!this.options.alwaysShowButtonsInConditions) {\n                    domel(row)\n                        .data(\"show-buttons\", null);\n                }\n            }\n            domel(row)\n                .removeClass('active');\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    showLandingSlot() {\n        const container = this.slot.querySelector('.eqjs-qp-conditions-root');\n        if (container) {\n            container.appendChild(this.landingSlot);\n            this.landingSlot.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n    }\n    hideLangindSlot() {\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.slot.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.slot.removeChild(this.progressBlock);\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(browserUtils.getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n    clonePanel(slot, query) {\n        return new QueryPanel(slot, query);\n    }\n}\n\nclass FilterBar extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            applyOnClose: true,\n            showApplyButton: true,\n            showClearButton: true,\n            queryPanel: {\n                showAddRow: true,\n                showCheckboxes: true,\n                alwaysShowButtonsInGroups: true\n            }\n        };\n        this.headerClickListener = this.headerClickHandler.bind(this);\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'filterBar';\n    }\n    get cssPrefix() {\n        return 'eqjs-fb';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.destroyCore();\n        this.qpElement = domel('div')\n            .addClass(`${this.cssPrefix}-querypanel`)\n            .toDOM();\n        this.queryPanel = new QueryPanel(this.qpElement);\n        this.queryPanel.init(context, this.options.queryPanel || {});\n        this.attachQueryObserver();\n    }\n    setOptions(options) {\n        this.options = utils.assignDeep(this.options, options);\n    }\n    applyBtnClick(ev) {\n        this.applyFilter();\n    }\n    clearBtnClick(ev) {\n        this.clearFilter();\n    }\n    showQueryPanel(callback) {\n        slideDown(this.qpBlock, 200, () => {\n            this.updateHeader();\n            if (callback)\n                callback();\n        });\n    }\n    hideQueryPanel() {\n        slideUp(this.qpBlock, 200, () => {\n            this.updateHeader();\n            if (this.options.applyOnClose) {\n                this.applyFilter();\n            }\n        });\n    }\n    headerClickHandler(ev) {\n        ev.preventDefault();\n        if (domel(this.qpBlock).isVisible()) { // close query panel\n            this.hideQueryPanel();\n        }\n        else { //open query panel\n            this.showQueryPanel();\n        }\n    }\n    updateHeader() {\n        if (!this.headerTextElement)\n            return;\n        let text = '';\n        const query = this.getContext().getQuery();\n        if (query) {\n            text = query.getConditionsText();\n        }\n        if (text == '') {\n            text = i18n.getText('StrNoFilterDefined');\n        }\n        domel(this.headerTextElement)\n            .text(text)\n            .attr('title', text);\n        if (!query || query.isEmptyConditions()) { //empty query, don't show query panel and arrow, show link in header\n            domel(this.headerTextElement).hide();\n            domel(this.headerLinkElement).show();\n            if (!domel(this.qpBlock).isVisible()) {\n                domel(this.headerArrowBlock).hide();\n                this.headerElement.style.cursor = '';\n                this.headerElement.removeEventListener('click', this.headerClickListener);\n            }\n        }\n        else {\n            this.headerElement.style.cursor = 'pointer';\n            this.headerElement.removeEventListener('click', this.headerClickListener);\n            this.headerElement.addEventListener('click', this.headerClickListener);\n            domel(this.headerTextElement).show();\n            domel(this.headerLinkElement).hide();\n            domel(this.headerArrowBlock).show();\n        }\n        if (domel(this.qpBlock).isVisible()) { // close query panel\n            this.headerArrowElement.classList.add(`${this.cssPrefix}-header-arrowUp`);\n        }\n        else {\n            this.headerArrowElement.classList.remove(`${this.cssPrefix}-header-arrowUp`);\n        }\n        this.textResize();\n    }\n    render() {\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-container`)\n            .addClass(browserUtils.getMobileCssClass())\n            .addChild('div', builder => this.headerElement = builder\n            .addClass(`${this.cssPrefix}-header`)\n            .addChild('div', builder => this.headerIconElement = builder\n            .addClass(`${this.cssPrefix}-header-icon`)\n            .toDOM())\n            .addChild('div', builder => this.headerTextBlock = builder\n            .addClass(`${this.cssPrefix}-header-textblock`)\n            .addChild('div', builder => this.headerTextElement = builder\n            .addClass(`${this.cssPrefix}-header-text`)\n            .toDOM())\n            .addChild('div', builder => this.headerLinkElement = builder\n            .addClass(`${this.cssPrefix}-header-text ${this.cssPrefix}-header-link`)\n            .text(i18n.getText('StrNoFilterClickToAdd'))\n            .hide()\n            .on('click', () => {\n            this.queryPanel.showEntitiesMenu({\n                anchor: this.headerLinkElement,\n                selectedIds: null,\n                itemSelectedCallback: (item, items) => {\n                    const attrid = item.id;\n                    this.showQueryPanel(() => {\n                        const query = this.getContext().getQuery();\n                        const descr = {\n                            parent: query.getRootCondition(),\n                            attributeId: attrid\n                        };\n                        const cond = query.addSimpleCondition(descr);\n                        if (cond) {\n                            query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                        }\n                    });\n                }\n            });\n        })\n            .toDOM())\n            .toDOM())\n            .addChild('div', builder => this.headerArrowBlock = builder\n            .addClass(`${this.cssPrefix}-header-arrowblock`)\n            .addChild('div', builder => this.headerArrowElement = builder\n            .addClass(`${this.cssPrefix}-header-arrow`)\n            .toDOM())\n            .toDOM())\n            .toDOM())\n            .addChild('div', builder => this.qpBlock = builder\n            .addClass(`${this.cssPrefix}-querypanelblock`)\n            .addClass(browserUtils.getMobileCssClass())\n            .hide()\n            .addChildElement(this.qpElement)\n            .toDOM());\n        if (this.options.showApplyButton || this.options.showClearButton) {\n            this.buttonsBlock = domel('div', this.qpBlock)\n                .addClass(`${this.cssPrefix}-buttonsblock`)\n                .addClass(browserUtils.getMobileCssClass())\n                .toDOM();\n        }\n        if (this.options.showApplyButton) {\n            domel('a', this.buttonsBlock)\n                .attr('href', 'javascript:void(0)')\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', this.applyBtnClick.bind(this));\n        }\n        if (this.options.showClearButton) {\n            domel('a', this.buttonsBlock)\n                .attr('href', 'javascript:void(0)')\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-clear`)\n                .text(i18n.getText('CmdClear'))\n                .on('click', this.clearBtnClick.bind(this));\n        }\n        window.addEventListener('resize', () => {\n            this.textResize();\n        });\n        this.updateHeader();\n        this.queryPanel.refresh();\n        setTimeout(() => this.textResize(), 500);\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    applyFilter() {\n        if (this.options.applyFilterCallback) {\n            this.options.applyFilterCallback();\n        }\n    }\n    clearFilter() {\n        const query = this.getContext().getQuery();\n        if (query) {\n            query.clearConditions();\n            query.fireConditionsChangedEvent(QueryChangeAction.All);\n        }\n    }\n    textResize() {\n        this.headerTextBlock.style.width = (this.slot.clientWidth - this.headerIconElement.offsetWidth\n            - (domel(this.headerArrowBlock).isVisible() ? this.headerArrowBlock.offsetWidth : 0)) + \"px\";\n    }\n    destroyCore() {\n        if (this.queryPanel)\n            this.queryPanel.destroy();\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    attachQueryObserver() {\n        const query = this.getContext().getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.updateHeader();\n        });\n    }\n    detachQueryObserver() {\n        const query = this.getContext().getQuery();\n        if (query)\n            query.removeChangedCallback(this.queryEventCallbackId);\n    }\n}\n\n/**\n * The widget responsed for rendering html content\n */\nclass HtmlContentWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.contentElement = slot;\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'htmlContent';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        if (!this.context.resultContent)\n            return;\n        this.render();\n    }\n    /**\n     * Renders widget\n     */\n    render() {\n        if (this.context.resultContent) {\n            this.contentElement.innerHTML += this.context.resultContent;\n        }\n    }\n    /**\n     * Clears content.\n     */\n    clear() {\n        this.contentElement.innerHTML = \"\";\n    }\n    destroyCore() {\n        this.clear();\n    }\n}\n\n/**\n * The widget responsed for rendering html grid.\n */\nclass EqHtmlGrid extends HtmlContentWidget {\n    /**\n    * The default constructor.\n    * @param slot The html element.\n    */\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            maxButtonCount: 10,\n            useBootstrap: false\n        };\n    }\n    getWidgetType() {\n        return 'eqHtmlGrid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        super.refreshCore();\n        this.renderPageNavigator();\n    }\n    destroyCore() {\n        this.slot.innerHTML = '';\n    }\n    /**\n     * Renders page navigator.\n     */\n    renderPageNavigator() {\n        const pageNavigatorPlaceholder = document.getElementById(\"PageNavigator\");\n        if (!pageNavigatorPlaceholder) {\n            return;\n        }\n        const pageCount = parseInt(pageNavigatorPlaceholder.getAttribute('data-pagecount'));\n        const pageIndex = parseInt(pageNavigatorPlaceholder.getAttribute('data-pageindex'));\n        if (pageCount > 1) {\n            let buttonClick = (ev) => {\n                let element = ev.target;\n                if (element.hasAttribute('data-page')) {\n                    const pageNum = parseInt(element.getAttribute('data-page'));\n                    this.context.fetchDataChunk({\n                        chunk: {\n                            page: pageNum\n                        },\n                        success: () => {\n                            this.context.refreshWidgets(WidgetGroup.Result);\n                        }\n                    });\n                }\n            };\n            const maxButtonCount = this.options.maxButtonCount || 10;\n            const zeroBasedIndex = pageIndex - 1;\n            let firstPageIndex = zeroBasedIndex - (zeroBasedIndex % maxButtonCount) + 1;\n            let lastPageIndex = firstPageIndex + maxButtonCount - 1;\n            if (lastPageIndex > pageCount) {\n                lastPageIndex = pageCount;\n            }\n            let ul = document.createElement('ul');\n            if (this.options.useBootstrap) {\n                ul.className = \"pagination\";\n            }\n            else {\n                ul.className = \"eqv-pagination\";\n            }\n            if (this.options.pageItemCssClass) {\n                ul.className += \" \" + (this.options.pageItemCssClass);\n            }\n            let li = document.createElement('li');\n            if (this.options.useBootstrap) {\n                li.className = \"page-item\";\n            }\n            let a = document.createElement('span');\n            a.setAttribute(\"aria-hidden\", 'true');\n            if (this.options.useBootstrap) {\n                a.className = \"page-link\";\n            }\n            if (firstPageIndex == 1) {\n                li.className += \" disabled\";\n            }\n            else {\n                if (this.options.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${firstPageIndex - 1}`);\n                    a.className = \"page-link\";\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute(\"data-page\", `${firstPageIndex - 1}`);\n                    a = newA;\n                }\n                a.addEventListener(\"click\", buttonClick);\n            }\n            a.innerHTML = \"&laquo;\";\n            li.appendChild(a);\n            ul.appendChild(li);\n            for (let i = firstPageIndex; i <= lastPageIndex; i++) {\n                li = document.createElement('li');\n                if (this.options.useBootstrap) {\n                    li.className = \"page-item\";\n                }\n                if (i == pageIndex)\n                    li.className += \" active\";\n                a = document.createElement('a');\n                a.setAttribute('href', 'javascript:void(0)');\n                a.innerHTML = i.toString();\n                a.setAttribute('data-page', i.toString());\n                a.className = \"page-link\";\n                a.addEventListener(\"click\", buttonClick);\n                li.appendChild(a);\n                ul.appendChild(li);\n            }\n            li = document.createElement('li');\n            if (this.options.useBootstrap) {\n                li.className = \"page-item\";\n            }\n            a = document.createElement(\"span\");\n            a.setAttribute('aria-hidden', 'true');\n            if (this.options.useBootstrap) {\n                a.className = \"page-link\";\n            }\n            if (lastPageIndex == pageCount) {\n                li.className += \"disabled\";\n            }\n            else {\n                if (this.options.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${lastPageIndex + 1}`);\n                    a.className += \" page-link\";\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute(\"data-page\", `${lastPageIndex + 1}`);\n                    a = newA;\n                }\n                a.addEventListener(\"click\", buttonClick);\n            }\n            a.innerHTML = \"&raquo;\";\n            li.appendChild(a);\n            ul.appendChild(li);\n            pageNavigatorPlaceholder.appendChild(ul);\n        }\n    }\n}\n\n/**\n * Base class for GRID.\n */\nclass Grid extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            useCustomLocaleSettings: false\n        };\n        this.slot = slot;\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'grid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        if (options) {\n            utils.assignDeep(this.options, options);\n        }\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        if (!this.context.resultTable) {\n            return;\n        }\n        this.render();\n    }\n    /**\n     * Renders widget\n     */\n    render() {\n        if (this.options.beforeTableRendering) {\n            this.options.beforeTableRendering(this.context.resultTable);\n        }\n        this.applyDisplayFormats();\n    }\n    applyDisplayFormats() {\n    }\n    /**\n     * Clears GRID.\n     */\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n}\n\nclass EasyGridWidget extends Grid {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.hasCustomTotalsSettings = false;\n        //!!!! DO NOT forget to add types for options\n        this.options = { autoRefresh: true };\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'easyGrid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        const gridOptions = Object.assign(Object.assign({}, options), { slot: this.slot, dataTable: context.resultTable });\n        this.options = utils.assign(this.options, options);\n        gridOptions.onPlusButtonClick = (ev) => this.addColumnClickHandler(ev);\n        gridOptions.onColumnMoved = (ev) => this.columnMovedHandler(ev);\n        if (gridOptions.aggregates) {\n            this.hasCustomTotalsSettings = true;\n        }\n        else {\n            gridOptions.aggregates = { settings: context.getQuery().getAggregationSettings(), calculator: null };\n        }\n        gridOptions.aggregates.calculator = this.context.getServices()\n            .getAggregatesCalculator(this.context);\n        this.destroy();\n        this.grid = new EasyGrid(gridOptions);\n        if (this.options.autoRefresh) {\n            this.attachQueryObserver();\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.updateTotalsSettings();\n        this.render();\n    }\n    render() {\n        this.createEntitiesMenu();\n        this.grid.refresh();\n    }\n    attachQueryObserver() {\n    }\n    destroyCore() {\n        this.detachQueryObserver();\n        if (this.grid)\n            this.grid.destroy();\n        this.slot.innerHTML = '';\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getContext().getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    updateTotalsSettings() {\n        const context = this.getContext();\n        if (!this.hasCustomTotalsSettings) {\n            const settings = context.getQuery().getAggregationSettings();\n            this.grid.options.aggregates.settings = settings;\n        }\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false });\n        const options = { items: entitiesList, id: menuId };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    getModel() {\n        return this.context.getModel();\n    }\n    getQuery() {\n        return this.context.getQuery();\n    }\n    clear() {\n        if (this.grid)\n            this.grid.clear();\n    }\n    addColumnClickHandler(ev) {\n        this.entitiesMenu.showMenu({\n            anchor: ev.sourceEvent.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const attrid = data.id;\n                this.addNewColumn(attrid);\n                return false;\n            }\n        });\n    }\n    columnMovedHandler(ev) {\n        const query = this.getQuery();\n        const oldIndex = utils.findItemIndexById(query.getColumns(), ev.columnId);\n        if (oldIndex >= 0) {\n            query.moveColumn(oldIndex, ev.newIndex);\n            query.fireChangedEvent({\n                part: QueryChangePart.Columns,\n                action: QueryChangeAction.All,\n                source: this\n            });\n        }\n    }\n    addNewColumn(attrId) {\n        this.getContext().getModel();\n        const query = this.getContext().getQuery();\n        const col = query.addColumn({\n            attributeId: attrId\n        }, true);\n        query.fireChangedEvent({\n            part: QueryChangePart.Columns,\n            action: QueryChangeAction.Add,\n            changee: col,\n            source: this\n        });\n        return col;\n    }\n}\n\n/**\n * The widget responsed for rendering statement.\n * It's usually added for demonstration purposes only.\n */\nclass StatementPanel extends Widget {\n    /**\n     * The  default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.panel = slot;\n        this.group = WidgetGroup.Statement;\n        if (this.panel.tagName !== \"TEXTAREA\") {\n            this.panel.innerHTML = '<div class=\"eqv-sql-panel-result\"></div>';\n            this.panel = this.panel.querySelector('div');\n        }\n    }\n    getWidgetType() {\n        return 'statementPanel';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    render() {\n        this.panel.textContent = this.context.resultStatement ? this.context.resultStatement : \"\";\n        var statementText = this.panel.innerHTML.replace(/\\r\\n/g, \"<br />\").replace(/  /g, \"&nbsp;&nbsp;\");\n        this.panel.innerHTML = statementText;\n    }\n    destroyCore() {\n        this.clear();\n    }\n    clear() {\n        this.panel.innerHTML = \"\";\n    }\n}\n\n/**\n * The widget responsed for rendering process bar.\n */\nclass ProcessWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.element = slot;\n        this.element.style.display = 'none';\n        this.group = WidgetGroup.All;\n    }\n    getWidgetType() {\n        return 'processIndicator';\n    }\n    /**\n     * On process start implementation\n     */\n    onProcessStartCore() {\n        this.element.style.display = '';\n    }\n    /**\n    * On process end implementation\n    */\n    onProcessEndCore() {\n        this.element.style.display = 'none';\n    }\n}\n\nclass ManageDrillDownWidget extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.clickHandler = () => this.openDialog();\n        this.columnsBar = null;\n        this.queryPanel = null;\n        this.ddQuery = null;\n        this.cssPrefix = eqCssPrefix;\n        this.group = WidgetGroup.None;\n    }\n    getWidgetType() {\n        return 'manageDrillDown';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.options = options;\n        this.refresh();\n        this.slot.addEventListener('click', this.clickHandler);\n    }\n    destroyCore() {\n        this.slot.removeEventListener('click', this.clickHandler);\n    }\n    openDialog() {\n        const dialogService = this.context.getServices().getService('DialogService');\n        const query = this.context.getQuery();\n        const model = this.context.getModel();\n        const dialogBody = domel('div')\n            .addClass(`${this.cssPrefix}-manage-drilldown`)\n            .addChildElement(this.renderColumnsBarBlock())\n            .addChildElement(this.renderQueryPanelBlock())\n            .toDOM();\n        let op = model.addOrUpdateOperator({\n            id: 'BindToParentColumn',\n            caption: 'is bound to',\n            format: '{expr1} [[is bound to]] {expr2}',\n            paramCount: 2,\n            kind: DataKind.ParentColumn,\n            appliedTypes: [DataType.String, DataType.Bool, DataType.Float, DataType.Int32, DataType.Int64, DataType.Word]\n        });\n        op.defaultOperand.dataType = DataType.String;\n        op.defaultOperand.kind = DataKind.ParentColumn;\n        model.runThroughEntities(attr => {\n            const opIdx = attr.operators.indexOf(op.id);\n            if (opIdx > 0) {\n                utils.moveArrayItem(attr.operators, opIdx, 0);\n            }\n        }, null);\n        this.ddQuery = query.createSubQuery();\n        const dds = this.context.getQuery().getDrillDowns();\n        if (dds.length) {\n            const dd = dds[0];\n            this.ddQuery.loadFromData(dd.toJSONData());\n        }\n        dialogService.open({\n            title: 'Manage Drill Down',\n            body: dialogBody,\n            cancelable: true,\n            closable: false,\n            beforeOpen: () => {\n                const columnsBarSlot = dialogBody.getElementsByClassName(`${this.cssPrefix}-columnsbar-slot`)[0];\n                this.columnsBar = new ColumnsBar(columnsBarSlot, this.ddQuery);\n                this.columnsBar.init(this.context, this.options.columnsBar);\n                const queryPanelSlot = dialogBody.getElementsByClassName(`${this.cssPrefix}-querypanel-slot`)[0];\n                this.queryPanel = new QueryPanel(queryPanelSlot, this.ddQuery);\n                this.queryPanel.init(this.context, this.options.queryPanel);\n                this.columnsBar.refresh();\n                this.queryPanel.refresh();\n            },\n            onSubmit: () => {\n                return this.submitDialog();\n            },\n            onDestroy: () => {\n                this.destroyDialog();\n            }\n        });\n    }\n    renderQueryPanelBlock() {\n        return domel('div')\n            .addClass(`${this.cssPrefix}-querypanel-block`)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-querypanel-caption`))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-querypanel-slot`))\n            .toDOM();\n    }\n    renderColumnsBarBlock() {\n        return domel('div')\n            .addClass(`${this.cssPrefix}-columnsbar-block`)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-columnsbar-caption`))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-columnsbar-slot`))\n            .toDOM();\n    }\n    submitDialog() {\n        if (this.ddQuery.tryValidate({\n            checkExpressions: true\n        })) {\n            const dds = this.context.getQuery().getDrillDowns();\n            if (dds.length) {\n                dds[0].loadFromData(this.ddQuery.toJSONData());\n                this.context.getQuery().fireChangedEvent();\n            }\n            else {\n                if (!this.ddQuery.isEmpty()) {\n                    const dd = this.context.getQuery().addDrillDown();\n                    dd.loadFromData(this.ddQuery.toJSONData());\n                    this.context.getQuery().fireChangedEvent();\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    destroyDialog() {\n        const model = this.context.getModel();\n        model.removeOperator('BindToParentColumn', true);\n        this.ddQuery = null;\n        this.columnsBar && this.columnsBar.destroy();\n        this.columnsBar = null;\n        this.queryPanel && this.queryPanel.destroy();\n        this.queryPanel = null;\n    }\n}\n\nvar FacetType;\n(function (FacetType) {\n    FacetType[\"DataGrid\"] = \"DATA_GRID\";\n    FacetType[\"Chart\"] = \"CHART\";\n    FacetType[\"PivotTable\"] = \"PIVOT_TABLE\";\n})(FacetType || (FacetType = {}));\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nclass ResultFacet {\n    constructor(container, options) {\n        this.container = container;\n        this.title = i18n.getText('Facets', 'DefaultFacetTitle');\n        this.cssPrefix = 'eqjs-facet';\n        this.dialogTitle = i18n.getText('Facets', 'DefaultDlgTitle');\n        this.options = {};\n        this.canDisplayFlag = true;\n        this.downloadAllClickHandler = () => {\n            const resultTable = this.getContext().resultTable;\n            if (!resultTable.elasticChunks) {\n                const nextChunkStart = resultTable.getCachedRows().length;\n                const recordsToLoad = resultTable.getTotal() - resultTable.getCachedCount();\n                const ds = this.getDialogService();\n                const dlg = ds.openProgress({\n                    title: i18n.getText('Facets', 'LoadDataDlgTitle'),\n                    content: i18n.getText('Facets', 'LoadDataDlgContent')\n                        .replace('{loadedRecs}', '0')\n                        .replace('{totalRecs}', `${recordsToLoad}`),\n                    onSubmit: () => this.refresh(),\n                    determinated: true\n                });\n                let loadedRecords = 0;\n                setTimeout(() => {\n                    resultTable.getRows({ offset: nextChunkStart, limit: recordsToLoad })\n                        .then(_ => {\n                        loadedRecords += _.length;\n                        const progress = loadedRecords / recordsToLoad;\n                        dlg.updateContent(i18n.getText('Facets', 'LoadDataDlgContent')\n                            .replace('{loadedRecs}', `${loadedRecords}`)\n                            .replace('{totalRecs}', `${recordsToLoad}`));\n                        dlg.updateProgress(progress);\n                    })\n                        .catch(error => {\n                        dlg.submit();\n                        this.getContext().throwError(error);\n                    });\n                }, 10);\n            }\n            else {\n                const ds = this.getDialogService();\n                const dlg = ds.openProgress({\n                    title: i18n.getText('Facets', 'LoadDataDlgTitle'),\n                    onSubmit: () => this.refresh(),\n                    determinated: false\n                });\n                this.loadElasticChunk()\n                    .then(_ => {\n                    dlg.submit();\n                })\n                    .catch(error => {\n                    dlg.submit();\n                    this.getContext().throwError(error);\n                });\n            }\n        };\n        utils.assignDeep(this.options, options);\n    }\n    init(slot) {\n        this.slot = slot;\n        this.contentDiv = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-content`)\n            .toDOM();\n        this.displayMessageDiv = domel('div', this.slot).hide().toDOM();\n    }\n    showSettingsDialog() {\n        return new Promise((resolve) => {\n            const ds = this.getDialogService();\n            const content = this.renderDialogContent();\n            const dlg = ds.open({\n                title: this.dialogTitle,\n                body: content,\n                cancelable: true,\n                closable: false,\n                onSubmit: () => {\n                    const submited = this.submitSettingsDialog();\n                    if (submited) {\n                        resolve(true);\n                    }\n                    return submited;\n                },\n                onCancel: () => {\n                    resolve(false);\n                }\n            });\n            this.afterDialogOpened(dlg);\n        });\n    }\n    afterDialogOpened(dlg) {\n    }\n    renderDialogContent() {\n        let fieldsContainer;\n        let b = domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => fieldsContainer = b\n            .addClass(`${browserUtils.isIE()\n            ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n            : 'kfrm-fields col-a-1 label-align-right'}`)\n            .toDOM());\n        this.renderFormFields(b.toDOM(), fieldsContainer);\n        return b.toDOM();\n    }\n    renderFormFields(form, fieldsContainer) {\n        let cont = fieldsContainer;\n        if (browserUtils.isIE()) {\n            cont = domel('div', fieldsContainer)\n                .addClass('kfrm-field-ie')\n                .toDOM();\n        }\n        domel(cont)\n            .addChild('label', b => b\n            .attr('for', 'tab_name')\n            .addText(i18n.getText('Facets', 'TabNameLabel')))\n            .addChild('input', b => b\n            .id('facetTabName')\n            .name('tab_name')\n            .type('text')\n            .attr('value', this.title));\n    }\n    submitSettingsDialog() {\n        const tabNameInput = document.querySelector('#facetTabName');\n        if (tabNameInput.value.length == 0)\n            return false;\n        this.title = tabNameInput.value;\n        return true;\n    }\n    getDialogService() {\n        return this.getContext()\n            .getServices()\n            .getService('DialogService');\n    }\n    canDisplay() {\n        const context = this.getContext();\n        const resultTable = context.resultTable;\n        return (resultTable.getCachedCount() == resultTable.getTotal());\n    }\n    showErrorMessage(message) {\n        this.displayMessageDiv.innerHTML = message;\n        this.displayMessageDiv.classList.add(`${this.cssPrefix}-error-message`);\n        domel(this.displayMessageDiv).show();\n    }\n    showUnableDisplayMessage(message) {\n        const context = this.getContext();\n        const resultTable = context.resultTable;\n        this.displayMessageDiv.innerHTML = message || i18n.getText('Facets', 'ErrNotEnoughData')\n            .replace('{totalRecs}', `${resultTable.getTotal()}`)\n            .replace('{cachedRecs}', `${resultTable.getCachedCount()}`)\n            .replace(/\\[(.*)\\]/g, `<a href='javascript:void(0)' class=\"${this.cssPrefix}-download-all-link\">$1</a>`);\n        const link = this.displayMessageDiv.querySelector(`a.${this.cssPrefix}-download-all-link`);\n        if (link) {\n            link.addEventListener('click', this.downloadAllClickHandler);\n        }\n        domel(this.contentDiv).hide();\n        domel(this.displayMessageDiv).show();\n    }\n    hideUnableDisplayMessage() {\n        domel(this.displayMessageDiv).hide();\n        domel(this.contentDiv).show();\n    }\n    getContext() {\n        return this.container.getContext();\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    saveToData() {\n        return { title: this.title, type: this.getType() };\n    }\n    loadFromData(data) {\n        if (data) {\n            this.title = data.title;\n        }\n    }\n    refresh() {\n        this.hideUnableDisplayMessage();\n        if (this.canDisplay()) {\n            this.refreshCore();\n        }\n        else {\n            this.showUnableDisplayMessage();\n        }\n    }\n    loadElasticChunk() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resultTable = this.getContext().resultTable;\n            const nextChunkStart = resultTable.getCachedRows().length;\n            //next chunk\n            return resultTable.getRows({ offset: nextChunkStart, limit: resultTable.chunkSize })\n                .then(_ => {\n                return resultTable.totalIsKnown()\n                    ? Promise.resolve()\n                    : this.loadElasticChunk();\n            });\n        });\n    }\n    onResize() {\n    }\n}\n\n/** Represents chart types. */\nvar ChartType;\n(function (ChartType) {\n    ChartType[ChartType[\"Column\"] = 3] = \"Column\";\n    ChartType[ChartType[\"Histogram\"] = 4] = \"Histogram\";\n    ChartType[ChartType[\"Bar\"] = 5] = \"Bar\";\n    ChartType[ChartType[\"Combo\"] = 6] = \"Combo\";\n    ChartType[ChartType[\"Area\"] = 7] = \"Area\";\n    ChartType[ChartType[\"Line\"] = 9] = \"Line\";\n    ChartType[ChartType[\"Pie\"] = 10] = \"Pie\";\n    ChartType[ChartType[\"Polar\"] = 11] = \"Polar\";\n    ChartType[ChartType[\"Doughnut\"] = 12] = \"Doughnut\";\n    ChartType[ChartType[\"Radar\"] = 13] = \"Radar\";\n    ChartType[ChartType[\"SteppedLine\"] = 14] = \"SteppedLine\";\n})(ChartType || (ChartType = {}));\n\nclass ChartWidget extends Widget {\n    get cssPrefix() {\n        return 'eqjs-chart';\n    }\n    /**\n     Initializes a new instance of the `ChartWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.chartType = ChartType.Pie;\n        this.supportedChartTypes = [];\n        this.dataTable = null;\n        this.potentialLabelColumns = [];\n        this.potentialDataColumns = [];\n        this.labelColumn = -1;\n        this.dataColumns = [];\n        this.options = {\n            chartType: ChartType.Pie,\n            showOnPaging: false,\n            hideSettings: false,\n            legend: {\n                show: false,\n                position: 'right'\n            }\n        };\n        this.element = slotElement;\n        this.group = WidgetGroup.Result;\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.dataTable = context.resultTable;\n        this.setOptions(options);\n    }\n    /**\n     * Checks, if widget has data.\n     * @returns `true` if has data, otherwise - `false`.\n     */\n    hasData() {\n        let result = this.dataTable != null;\n        if (result) {\n            result = this.dataTable.getCachedCount() > 0;\n        }\n        return result;\n    }\n    /**\n     * Checks, if there ara colums for chart\n     * @returns `true` if there are columns, otherwise - `false`.\n     */\n    hasColumnsForChart() {\n        return this.potentialLabelColumns.length > 0 && this.potentialDataColumns.length > 0;\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.prepareChartData();\n        this.render();\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        this.supportedChartTypes = this.getSupportedChartTypes();\n        if (this.supportedChartTypes.length == 0) {\n            throw Error(\"Chart widget should support at least one chart type\");\n        }\n        if (options.chartType && this.supportedChartTypes.indexOf(options.chartType) >= 0) {\n            this.chartType = options.chartType;\n        }\n        else {\n            this.chartType = this.supportedChartTypes[0];\n        }\n    }\n    getOptions() {\n        return this.options;\n    }\n    getChartTypeName(ct) {\n        switch (ct) {\n            case ChartType.Area:\n                return i18n.getText('ChartType', 'Area');\n            case ChartType.Bar:\n                return i18n.getText('ChartType', 'Bar');\n            case ChartType.Column:\n                return i18n.getText('ChartType', 'Column');\n            case ChartType.Combo:\n                return i18n.getText('ChartType', 'Combo');\n            case ChartType.Doughnut:\n                return i18n.getText('ChartType', 'Doughnut');\n            case ChartType.Polar:\n                return i18n.getText('ChartType', 'Polar');\n            case ChartType.Radar:\n                return i18n.getText('ChartType', 'Radar');\n            case ChartType.Histogram:\n                return i18n.getText('ChartType', 'Histogram');\n            case ChartType.Line:\n                return i18n.getText('ChartType', 'Line');\n            case ChartType.SteppedLine:\n                return i18n.getText('ChartType', 'SteppedLine');\n            default:\n                return i18n.getText('ChartType', 'Pie');\n        }\n    }\n    updateSettings(settings, updateColumns = true) {\n        if (typeof settings.showLegend !== 'undefined') {\n            this.options.legend = this.options.legend || {};\n            this.options.legend.show = settings.showLegend;\n        }\n        this.chartType = settings.type;\n        this.labelColumn = settings.labelColumn;\n        this.dataColumns[0] = settings.dataColumn;\n        if (updateColumns)\n            this.updateChartColumns();\n    }\n    /**\n     * Prepares data for chart.\n     */\n    prepareChartData() {\n        if (this.dataTable) {\n            this.potentialLabelColumns = [];\n            this.potentialDataColumns = [];\n            let colNum = this.dataTable.columns.count;\n            for (let i = 0; i < colNum; i++) {\n                const column = this.dataTable.columns.get(i);\n                let colType = column.type;\n                let colLabel = column.label;\n                this.potentialLabelColumns.push({ idx: i, label: colLabel });\n                if (utils.isNumericType(colType)) {\n                    this.potentialDataColumns.push({ idx: i, label: colLabel });\n                }\n            }\n            if (this.labelColumn != -1) {\n                if (!this.potentialLabelColumns\n                    .filter(c => c.idx == this.labelColumn)\n                    .length) {\n                    this.labelColumn = -1;\n                }\n            }\n            else {\n                this.labelColumn = (this.potentialLabelColumns.length > 0)\n                    ? this.potentialLabelColumns[0].idx : -1;\n            }\n            if (this.dataColumns.length) {\n                const ids = this.potentialDataColumns.map(d => d.idx);\n                this.dataColumns = this.dataColumns.filter(v => ids.indexOf(v) >= 0);\n                if (!this.dataColumns.length) {\n                    this.dataColumns = (this.potentialDataColumns.length > 0)\n                        ? [].concat(this.potentialDataColumns[0].idx)\n                        : [];\n                }\n            }\n            else {\n                this.dataColumns = (this.potentialDataColumns.length > 0)\n                    ? [].concat(this.potentialDataColumns[0].idx)\n                    : [];\n            }\n            this.initChart();\n        }\n    }\n    getSupportedChartTypes() {\n        const chartTypes = this.options.supportedChartTypes\n            ? this.options.supportedChartTypes\n            : Object.keys(ChartType).map(key => ChartType[key]);\n        return chartTypes.filter(type => this.hasChartTypes.indexOf(type) >= 0);\n    }\n    getCurrentChartType() {\n        return this.chartType;\n    }\n    render() {\n        this.clear();\n        if (this.hasData() && this.hasColumnsForChart()\n            && (this.context.resultTable.getTotal()\n                == this.context.resultTable.getCachedCount())) {\n            let headerDiv = document.createElement('div');\n            addCssClass(headerDiv, `${this.cssPrefix}-header`);\n            let mainDiv = document.createElement('div');\n            addCssClass(mainDiv, `${this.cssPrefix}-main`);\n            if (this.canDraw()) {\n                let chartTypeSelector = document.createElement('select');\n                for (let ct of this.supportedChartTypes) {\n                    let sopt = document.createElement('option');\n                    sopt.value = ct.toString();\n                    sopt.text = this.getChartTypeName(ct);\n                    chartTypeSelector.appendChild(sopt);\n                }\n                chartTypeSelector.value = this.chartType.toString();\n                headerDiv.appendChild(chartTypeSelector);\n                chartTypeSelector.addEventListener('change', (ev) => {\n                    let ctkey = ev.target.value;\n                    this.chartType = parseInt(ctkey);\n                    this.refresh();\n                });\n                this.settingsDiv = document.createElement('div');\n                addCssClass(this.settingsDiv, `${this.cssPrefix}-settings`);\n                hideElement(this.settingsDiv);\n                mainDiv.appendChild(this.settingsDiv);\n                this.chartDiv = document.createElement('div');\n                addCssClass(this.chartDiv, `${this.cssPrefix}-content`);\n                hideElement(this.chartDiv);\n                mainDiv.appendChild(this.chartDiv);\n                this.initSettingsDiv();\n                let chartSettingsBtn = document.createElement('div');\n                addCssClass(chartSettingsBtn, `${this.cssPrefix}-settings-icon`);\n                chartSettingsBtn.title = \"Settings\";\n                headerDiv.appendChild(chartSettingsBtn);\n                chartSettingsBtn.addEventListener('click', (ev) => {\n                    this.toggleSettings();\n                });\n                this.drawChart(100);\n            }\n            else {\n                this.addContentDiv(mainDiv, 'Unable to render  the chart. None of the supported chart libraries (ChartJS, Google Charts, etc) is found.');\n            }\n            if (!this.options.hideSettings) {\n                this.element.appendChild(headerDiv);\n            }\n            this.element.appendChild(mainDiv);\n            this.element.style.display = \"\";\n        }\n        else {\n            this.element.style.display = \"none\";\n        }\n    }\n    addContentDiv(mainDiv, text) {\n        let contentDiv = document.createElement('div');\n        addCssClass(contentDiv, `${this.cssPrefix}-no-data`);\n        contentDiv.innerText = text;\n        mainDiv.appendChild(contentDiv);\n    }\n    /**\n     * Clears the chart.\n     */\n    clear() {\n        this.element.innerHTML = '';\n    }\n    /**\n     * Draws chart with a delay.\n     * @param delay The delay.\n     */\n    drawChart(delay) {\n        showElement(this.chartDiv);\n        if (delay > 0) {\n            setTimeout(() => this.drawCore(), delay);\n        }\n        else {\n            this.drawCore();\n        }\n    }\n    /**\n     * Inititializes the settings div.\n     */\n    initSettingsDiv() {\n        let settingsHeader = document.createElement('div');\n        settingsHeader.textContent = 'SETTINGS';\n        addCssClass(settingsHeader, `${this.cssPrefix}-settings-header`);\n        this.settingsDiv.appendChild(settingsHeader);\n        // Label column\n        let labelDiv = document.createElement('div');\n        addCssClass(labelDiv, `${this.cssPrefix}-settings-single`);\n        this.settingsDiv.appendChild(labelDiv);\n        let labelColumnSelectorCaption = document.createElement('span');\n        showElement(labelColumnSelectorCaption);\n        labelColumnSelectorCaption.textContent = 'Label column';\n        labelDiv.appendChild(labelColumnSelectorCaption);\n        let labelColumnSelector = document.createElement('select');\n        showElement(labelColumnSelector);\n        labelDiv.appendChild(labelColumnSelector);\n        for (let col of this.potentialLabelColumns) {\n            let sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            labelColumnSelector.appendChild(sopt);\n        }\n        if (this.labelColumn >= 0) {\n            labelColumnSelector.value = this.labelColumn.toString();\n        }\n        labelColumnSelector.addEventListener('change', (ev) => {\n            this.labelColumn = parseInt(ev.target.value);\n            this.updateChartColumns();\n            this.toggleSettings(() => {\n                this.drawChart(100);\n            });\n        });\n        // Data column\n        let dataDiv = document.createElement('div');\n        addCssClass(dataDiv, `${this.cssPrefix}-settings-single`);\n        this.settingsDiv.appendChild(dataDiv);\n        let dataColumnSelectorCaption = document.createElement('span');\n        showElement(dataColumnSelectorCaption);\n        dataColumnSelectorCaption.textContent = 'Data column';\n        dataDiv.appendChild(dataColumnSelectorCaption);\n        let dataColumnSelector = document.createElement('select');\n        showElement(dataColumnSelector);\n        dataDiv.appendChild(dataColumnSelector);\n        for (let col of this.potentialDataColumns) {\n            let sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            dataColumnSelector.appendChild(sopt);\n        }\n        if (this.dataColumns.length > 0 && this.dataColumns[0] >= 0) {\n            dataColumnSelector.value = this.dataColumns[0].toString();\n        }\n        dataColumnSelector.addEventListener('change', (ev) => {\n            this.dataColumns[0] = parseInt(ev.target.value);\n            this.updateChartColumns();\n            this.toggleSettings(() => {\n                this.drawChart(100);\n            });\n        });\n    }\n    getPotentialLabelColumns() {\n        return this.potentialLabelColumns;\n    }\n    getPotentialDataColumns() {\n        return this.potentialDataColumns;\n    }\n    getLabelColumnIndex() {\n        return this.labelColumn;\n    }\n    getDataColumnIndex() {\n        return this.dataColumns[0];\n    }\n    /**\n     * Toggles settings.\n     * @param callback The callback.\n     */\n    toggleSettings(callback) {\n        let first;\n        let second;\n        if (isVisible(this.chartDiv)) {\n            first = this.chartDiv;\n            second = this.settingsDiv;\n        }\n        else {\n            first = this.settingsDiv;\n            second = this.chartDiv;\n        }\n        toggleVisibility(first, second, {\n            complete: callback\n        });\n    }\n}\n\nclass ChartJsWidget extends ChartWidget {\n    /**\n     Initializes a new instance of the `ChartJsWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.colors = [\n            '#4dc9f6',\n            '#f67019',\n            '#f53794',\n            '#537bc4',\n            '#acc236',\n            '#166a8f',\n            '#00a950',\n            '#58595b',\n            '#8549ba'\n        ];\n        this.chartLabels = [];\n        this.chartColumns = [];\n        this.hasChartTypes = [\n            ChartType.Column,\n            ChartType.Bar,\n            ChartType.Area,\n            ChartType.Line,\n            ChartType.SteppedLine,\n            ChartType.Doughnut,\n            ChartType.Polar,\n            ChartType.Radar,\n            ChartType.Pie\n            // ChartType.Bubble,\n            // ChartType.Scatter\n        ];\n        this.options.legend = {\n            show: false,\n            position: 'bottom'\n        };\n    }\n    getWidgetType() {\n        return 'chartChartJs';\n    }\n    static hasChartJs() {\n        return typeof Chart !== 'undefined';\n    }\n    canDraw() {\n        return ChartJsWidget.hasChartJs();\n    }\n    initChart() {\n        if (ChartJsWidget.hasChartJs() && this.labelColumn >= 0\n            && this.dataColumns && this.dataColumns.length > 0) {\n            this.updateChartColumns();\n        }\n    }\n    drawCore() {\n        if (ChartJsWidget.hasChartJs() && this.dataTable\n            && this.dataTable.getCachedCount() > 0) {\n            let config = this.generateConfig();\n            let chartCanvas = this.getChartCanvas(this.chartDiv);\n            let chartContext = chartCanvas.getContext('2d');\n            new Chart(chartContext, config);\n        }\n    }\n    updateChartColumns() {\n        if (this.dataTable) {\n            this.chartLabels = [];\n            this.chartColumns = [];\n            const rows = this.dataTable.getCachedRows();\n            for (let i = 0; i < rows.length; i++) {\n                this.chartLabels.push(rows[i].getValue(this.labelColumn));\n                this.chartColumns.push(rows[i].getValue(this.dataColumns[0]));\n            }\n        }\n    }\n    getChartCanvas(slot) {\n        let result;\n        //find canvas element\n        let canvases = slot.getElementsByTagName('canvas');\n        if (canvases && canvases.length > 0) {\n            result = canvases[0];\n        }\n        else {\n            result = addElement(slot, 'canvas');\n        }\n        return result;\n    }\n    generateConfig() {\n        let dataColors = [];\n        let datasetName = this.dataTable.columns.get(this.dataColumns[0]).label;\n        let fillValue = true;\n        let borderColor;\n        if (this.chartType == ChartType.Pie\n            || this.chartType == ChartType.Doughnut\n            || this.chartType == ChartType.Polar\n            || this.chartType == ChartType.Bar\n            || this.chartType == ChartType.Column) {\n            for (let i = 0; i < this.chartLabels.length; i++) {\n                dataColors.push(this.colors[i % this.colors.length]);\n            }\n        }\n        else {\n            dataColors = [this.colors[3]];\n        }\n        if (this.chartType == ChartType.Line\n            || this.chartType == ChartType.SteppedLine) {\n            fillValue = false;\n            borderColor = this.colors[3];\n        }\n        this.options.legend = this.options.legend || {};\n        const dataset1 = {\n            data: this.chartColumns,\n            backgroundColor: dataColors,\n            borderColor: borderColor,\n            label: datasetName,\n            fill: fillValue\n        };\n        if (this.chartType == ChartType.SteppedLine) {\n            dataset1.stepped = this.chartType === ChartType.SteppedLine, // >= 3.0.0\n                dataset1.steppedLine = this.chartType === ChartType.SteppedLine; // <= 3.0.0\n        }\n        const displayLegend = this.options.legend.show && (this.chartType == ChartType.Pie\n            || this.chartType == ChartType.Radar || this.chartType == ChartType.Polar\n            || this.chartType == ChartType.Doughnut);\n        return {\n            type: this.getChartType(),\n            data: {\n                datasets: [dataset1],\n                labels: this.chartLabels\n            },\n            options: {\n                legend: {\n                    display: displayLegend,\n                    position: this.options.legend.position || 'bottom'\n                },\n                title: {\n                    display: true,\n                    text: datasetName\n                }\n            }\n        };\n    }\n    getChartType() {\n        switch (this.chartType) {\n            case ChartType.Column:\n                return \"bar\";\n            case ChartType.Bar:\n                return \"horizontalBar\";\n            case ChartType.Area:\n            case ChartType.SteppedLine:\n            case ChartType.Line:\n                return \"line\";\n            case ChartType.Doughnut:\n                return \"doughnut\";\n            case ChartType.Polar:\n                return \"polarArea\";\n            case ChartType.Radar:\n                return \"radar\";\n            case ChartType.Pie:\n                return \"pie\";\n            default:\n                return \"pie\";\n        }\n    }\n}\n\nclass GoogleChartWidget extends ChartWidget {\n    /**\n     Initializes a new instance of the `GoogleChartWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.hasChartTypes = [\n            ChartType.Column,\n            ChartType.Bar,\n            ChartType.Histogram,\n            ChartType.Combo,\n            ChartType.Area,\n            ChartType.Line,\n            ChartType.SteppedLine,\n            ChartType.Pie,\n            ChartType.Doughnut\n        ];\n        this.options.legend = {\n            show: true,\n            position: 'right'\n        };\n    }\n    getWidgetType() {\n        return 'chartGoogle';\n    }\n    canDraw() {\n        return GoogleChartWidget.hasGoogleCharts();\n    }\n    static hasGoogleCharts() {\n        return typeof google !== 'undefined' && typeof google.charts !== 'undefined';\n    }\n    initChart() {\n        if (GoogleChartWidget.hasGoogleCharts() && this.labelColumn >= 0\n            && this.dataColumns && this.dataColumns.length > 0) {\n            this.googleDataView =\n                new google.visualization.DataView(this.convertToGoogleFormat());\n            this.updateChartColumns();\n        }\n    }\n    convertToGoogleType(type) {\n        switch (type) {\n            case DataType.Date:\n                return \"date\";\n            case DataType.DateTime:\n                return \"datetime\";\n            case DataType.Time:\n                return \"timeofday\";\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Int32:\n            case DataType.Int64:\n            case DataType.Currency:\n            case DataType.Float:\n                return \"number\";\n            default:\n                return \"string\";\n        }\n    }\n    convertToGoogleValue(value, type) {\n        switch (type) {\n            case DataType.Bool:\n                return value ? value.toString() : null;\n            default:\n                return value;\n        }\n    }\n    convertToGoogleFormat() {\n        const googleTable = new google.visualization.DataTable();\n        const columns = this.dataTable.columns;\n        for (let i = 0; i < columns.count; i++) {\n            const column = columns.get(i);\n            googleTable.addColumn(this.convertToGoogleType(column.type), column.label, column.id);\n        }\n        const rows = this.dataTable.getCachedRows();\n        googleTable.addRows(rows.length);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            for (let j = 0; j < columns.count; j++) {\n                googleTable.setCell(i, j, this.convertToGoogleValue(row.getValue(j), columns.get(j).type));\n            }\n        }\n        return googleTable;\n    }\n    drawCore() {\n        if (this.googleDataView != null) {\n            this.options.legend = this.options.legend || {};\n            let chartOptions = {\n                width: \"100%\",\n                height: \"100%\",\n                chartArea: { width: this.getChartAreaWidth }\n            };\n            if (this.chartType == ChartType.Doughnut) {\n                chartOptions.pieHole = 0.4;\n            }\n            if (!this.options.legend.show) {\n                chartOptions.legend = 'none';\n            }\n            else {\n                chartOptions.legend = { position: this.options.legend.position };\n            }\n            let chart = this.createChart(this.chartDiv);\n            chart.draw(this.googleDataView, chartOptions);\n        }\n    }\n    getChartAreaWidth(chartType) {\n        if (chartType == ChartType.Pie) {\n            return \"100%\";\n        }\n        else {\n            return \"50%\";\n        }\n    }\n    updateChartColumns() {\n        if (this.googleDataView) {\n            this.googleDataView.setColumns([].concat(this.labelColumn).concat(this.dataColumns));\n        }\n    }\n    createChart(slot) {\n        switch (this.chartType) {\n            case ChartType.Column:\n                return new google.visualization.ColumnChart(slot);\n            case ChartType.Histogram:\n                return new google.visualization.Histogram(slot);\n            case ChartType.Bar:\n                return new google.visualization.BarChart(slot);\n            case ChartType.Combo:\n                return new google.visualization.ComboChart(slot);\n            case ChartType.Area:\n                return new google.visualization.AreaChart(slot);\n            case ChartType.Line:\n                return new google.visualization.LineChart(slot);\n            case ChartType.SteppedLine:\n                return new google.visualization.SteppedAreaChart(slot);\n            case ChartType.Pie:\n            case ChartType.Doughnut:\n                return new google.visualization.PieChart(slot);\n            default:\n                return new google.visualization.PieChart(slot);\n        }\n    }\n}\n\nclass ChartFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.title = i18n.getText('Facets', 'Chart', 'FacetTitle');\n        this.dialogTitle = i18n.getText('Facets', 'Chart', 'DlgTitle');\n    }\n    init(slot) {\n        super.init(slot);\n        if (GoogleChartWidget.hasGoogleCharts()) {\n            this.chart = new GoogleChartWidget(this.contentDiv);\n        }\n        else {\n            this.chart = new ChartJsWidget(this.contentDiv);\n        }\n        const supportedChartTypes = this.container.options\n            ? this.container.options.supportedChartTypes\n            : null;\n        this.chart.init(this.getContext(), {\n            legend: {\n                show: false\n            },\n            showOnPaging: true,\n            hideSettings: true,\n            supportedChartTypes: supportedChartTypes\n        });\n        //prevent showing chart tab\n        domel(this.slot).hide();\n    }\n    destroy() {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n    }\n    getType() {\n        return FacetType.Chart;\n    }\n    renderFormFields(form, fieldsContainer) {\n        super.renderFormFields(form, fieldsContainer);\n        const isIE = browserUtils.isIE();\n        const horizClass = isIE ? 'kfrm-fields-ie is-horizontal' : 'kfrm-fields is-horizontal';\n        // Chart type\n        let chartTypeSelector = document.createElement('select');\n        chartTypeSelector.id = 'chart_type_selector';\n        chartTypeSelector.name = 'chart_type_selector';\n        for (let ct of this.chart.getSupportedChartTypes()) {\n            let sopt = document.createElement('option');\n            sopt.value = ct.toString();\n            sopt.text = this.chart.getChartTypeName(ct);\n            chartTypeSelector.appendChild(sopt);\n        }\n        chartTypeSelector.value = this.chart.getCurrentChartType().toString();\n        if (!this.settings) {\n            this.chart.prepareChartData();\n            this.settings = {\n                type: this.chart.getCurrentChartType().toString(),\n                labelColumn: `${this.chart.getLabelColumnIndex() >= 0 ? this.chart.getLabelColumnIndex() : ''}`,\n                dataColumn: `${this.chart.getDataColumnIndex() >= 0 ? this.chart.getDataColumnIndex() : ''}`,\n                showLegend: false\n            };\n        }\n        // Label column\n        const labelColumnSelector = document.createElement('select');\n        labelColumnSelector.name = 'label_column_selector';\n        labelColumnSelector.id = 'label_column_selector';\n        for (const col of this.chart.getPotentialLabelColumns()) {\n            const sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            labelColumnSelector.appendChild(sopt);\n        }\n        labelColumnSelector.value = this.settings.labelColumn;\n        // Data column\n        const dataColumnSelector = document.createElement('select');\n        dataColumnSelector.id = 'data_column_selector';\n        dataColumnSelector.name = 'data_column_selector';\n        for (const col of this.chart.getPotentialDataColumns()) {\n            const sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            dataColumnSelector.appendChild(sopt);\n        }\n        dataColumnSelector.value = this.settings.dataColumn.toString();\n        let current = fieldsContainer;\n        const getCurrent = () => {\n            if (isIE) {\n                return domel('div', fieldsContainer)\n                    .addClass('kfrm-field-ie')\n                    .toDOM();\n            }\n            else {\n                return fieldsContainer;\n            }\n        };\n        if (isIE) {\n            domel(form)\n                .addChildElement(getCurrent());\n        }\n        else {\n            domel(fieldsContainer)\n                .addChild('div')\n                .addChild('div');\n        }\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'chart_type_selector')\n            .text(i18n.getText('Facets', 'Chart', 'ChartTypeSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(chartTypeSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'label_column_selector')\n            .text(i18n.getText('Facets', 'Chart', 'LabelColumnSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(labelColumnSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'data_column_selector')\n            .text(i18n.getText('Facets', 'Chart', 'DataColumnSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(dataColumnSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('div')\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('show_legend')\n                .type('checkbox');\n            if (this.settings.showLegend)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Chart', 'ShowLegendLabel'))));\n    }\n    afterDialogOpened(dlg) {\n        if (this.getContext().resultTable.columns.getItems().filter(col => utils.isNumericType(col.type)).length <= 0) {\n            dlg.showAlert('The dataset should contain at least one numeric column to build a chart', 'error');\n            dlg.getSubmitButtonElement().disabled = true;\n        }\n    }\n    submitSettingsDialog() {\n        const result = super.submitSettingsDialog();\n        const chartTypeSelector = document.getElementById('chart_type_selector');\n        const ct = parseInt(chartTypeSelector.value);\n        const labelColumnSelector = document.getElementById('label_column_selector');\n        const labelColumn = parseInt(labelColumnSelector.value);\n        const dataColumnSelector = document.getElementById('data_column_selector');\n        const dataColumn = parseInt(dataColumnSelector.value);\n        const showLegendInput = document.getElementById('show_legend');\n        const showLegend = showLegendInput.checked;\n        if (result) {\n            this.settings = {\n                type: ct,\n                labelColumn: labelColumn,\n                dataColumn: dataColumn,\n                showLegend: showLegend\n            };\n            if (this.canDisplay()) {\n                this.refresh();\n            }\n        }\n        return result;\n    }\n    getSettings() {\n        return this.settings;\n    }\n    saveToData() {\n        const data = super.saveToData();\n        if (this.settings) {\n            data.chartType = this.settings.type;\n            data.labelCol = this.settings.labelColumn;\n            data.dataCol = this.settings.dataColumn;\n            data.showLeg = this.settings.showLegend;\n        }\n        return data;\n    }\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            this.settings = {\n                type: data.chartType,\n                dataColumn: data.dataCol,\n                labelColumn: data.labelCol,\n                showLegend: data.showLeg\n            };\n        }\n    }\n    refreshCore() {\n        if (this.chart) {\n            if (this.settings) {\n                this.chart.updateSettings(this.settings);\n            }\n            this.chart.prepareChartData();\n            this.chart.refresh();\n        }\n    }\n    onResize() {\n        this.refresh();\n    }\n}\n\nvar AggrFunc;\n(function (AggrFunc) {\n    AggrFunc[\"Sum\"] = \"SUM\";\n    AggrFunc[\"Average\"] = \"AVG\";\n    AggrFunc[\"Min\"] = \"MIN\";\n    AggrFunc[\"Max\"] = \"MAX\";\n    AggrFunc[\"Count\"] = \"COUNT\";\n})(AggrFunc || (AggrFunc = {}));\nvar FormFieldType;\n(function (FormFieldType) {\n    FormFieldType[FormFieldType[\"ColumnField\"] = 0] = \"ColumnField\";\n    FormFieldType[FormFieldType[\"RowField\"] = 1] = \"RowField\";\n    FormFieldType[FormFieldType[\"CellData\"] = 2] = \"CellData\";\n})(FormFieldType || (FormFieldType = {}));\nconst DFMT_REGEX = /{0:(.*?)}/g;\nclass PivotTableFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.title = i18n.getText('Facets', 'Pivot', 'FacetTitle');\n        this.dialogTitle = i18n.getText('Facets', 'Pivot', 'DlgTitle');\n        this.pivotTable = new EasyDataTable();\n    }\n    init(slot) {\n        super.init(slot);\n        this.options.maxRowCount = this.options.maxRowCount || 500;\n        this.options.viewportRowsCount = this.options.viewportRowsCount || 50;\n        this.grid = new EasyGrid({\n            slot: this.contentDiv,\n            dataTable: this.pivotTable,\n            paging: {\n                enabled: false,\n                pageSize: this.options.maxRowCount\n            },\n            viewportRowsCount: this.options.viewportRowsCount,\n            useRowNumeration: false,\n            showPlusButton: false,\n            allowDragDrop: false,\n            onGetCellRenderer: (column, defaultRenderer) => {\n                if (column.dataColumn) {\n                    if (column.dataColumn.id == \"total\") {\n                        return (value, column, cell, rowEl) => {\n                            defaultRenderer(value, column, cell, rowEl);\n                            cell.classList.add('pivot-cell-total');\n                        };\n                    }\n                    if (this.settings.totalsRow) {\n                        const colIndex = this.pivotTable.columns.getIndex(column.dataColumn.id);\n                        const isFirst = colIndex === 0;\n                        if (isFirst) {\n                            return (value, column, cell, rowEl) => {\n                                const idx = Number.parseInt(rowEl.getAttribute('data-row-idx'));\n                                const isLast = idx === this.pivotTable.getCachedCount() - 1;\n                                if (isLast) {\n                                    value = i18n.getText('Facets', 'Pivot', 'TotalGridLabel');\n                                }\n                                defaultRenderer(value, column, cell, rowEl);\n                            };\n                        }\n                    }\n                }\n            }\n        });\n    }\n    getType() {\n        return FacetType.PivotTable;\n    }\n    destroy() {\n        if (this.grid) {\n            this.grid.destroy();\n        }\n    }\n    createAggrFuncSelectBuilder(aggrFunc) {\n        const model = this.getContext().getModel();\n        const csb = domel('select');\n        const aggrfuncs = Object.keys(AggrFunc).map(k => AggrFunc[k]);\n        for (const aggrfunc of aggrfuncs) {\n            csb.addChild('option', b => {\n                b\n                    .attr('value', aggrfunc)\n                    .text(model.getAggrFunctionCaption(aggrfunc));\n            });\n        }\n        const options = csb.toDOM().querySelectorAll('option');\n        if (aggrFunc != undefined) {\n            options.forEach(option => {\n                if (option.value == aggrFunc) {\n                    option.selected = true;\n                }\n            });\n        }\n        else {\n            options[0].selected = true;\n        }\n        return csb;\n    }\n    createColumnsSelectBuilder(allowedTypes, colName, formFieldType) {\n        const dataTable = this.getContextDataTable();\n        const csb = domel('select');\n        let firstNumericColIndex = null;\n        let optionIndex = 0;\n        for (let i = 0; i < dataTable.columns.count; i++) {\n            const column = dataTable.columns.get(i);\n            const colLabel = column.label;\n            const colType = column.type;\n            const colId = column.id;\n            if (allowedTypes && allowedTypes.indexOf(colType) < 0)\n                continue;\n            if (firstNumericColIndex === null && utils.isNumericType(colType)) {\n                firstNumericColIndex = optionIndex;\n            }\n            csb.addChild('option', b => {\n                b\n                    .attr('value', colId)\n                    .text(colLabel);\n            });\n            optionIndex++;\n        }\n        const options = Array.from(csb.toDOM().querySelectorAll('option'));\n        if (options.length > 0) {\n            if (colName != undefined) {\n                for (const option of options) {\n                    if (option.value == colName) {\n                        csb.toDOM().value = option.value;\n                        break;\n                    }\n                }\n            }\n            else {\n                switch (formFieldType) {\n                    case FormFieldType.ColumnField: {\n                        csb.toDOM().value = options[0].value;\n                        break;\n                    }\n                    case FormFieldType.RowField: {\n                        csb.toDOM().value = options.length > 1 ? options[1].value : options[0].value;\n                        break;\n                    }\n                    case FormFieldType.CellData: {\n                        csb.toDOM().value = firstNumericColIndex === null ? options[0].value : options[firstNumericColIndex].value;\n                        break;\n                    }\n                }\n            }\n        }\n        return csb;\n    }\n    renderFormFields(form, fieldsContainer) {\n        super.renderFormFields(form, fieldsContainer);\n        const settings = this.settings || { totalsRow: true, totalsCol: true };\n        const colTypes = [DataType.String, DataType.Date, DataType.DateTime, DataType.Int32,\n            DataType.Int64, DataType.Word, DataType.Byte];\n        const fieldTypes = [DataType.String, DataType.Float, DataType.Int32,\n            DataType.Int64, DataType.Word, DataType.Byte, DataType.Currency];\n        const isIE = browserUtils.isIE();\n        let current = fieldsContainer;\n        const horizClass = isIE ? 'kfrm-fields-ie is-horizontal' : 'kfrm-fields is-horizontal';\n        const getCurrent = () => {\n            if (isIE) {\n                return domel('div', fieldsContainer)\n                    .addClass('kfrm-field-ie')\n                    .toDOM();\n            }\n            else {\n                return fieldsContainer;\n            }\n        };\n        if (isIE) {\n            domel(fieldsContainer)\n                .addChildElement(getCurrent());\n        }\n        else {\n            domel(fieldsContainer)\n                .addChild('div')\n                .addChild('div');\n        }\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'column_field')\n            .text(i18n.getText('Facets', 'Pivot', 'ColumnFieldSelectorLabel')))\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'column_field')\n            .addChildElement(this.createColumnsSelectBuilder(colTypes, settings.colName, FormFieldType.ColumnField)\n            .id('pivotTableColFieldSelector')\n            .toDOM()))\n            .addChild('button', b => b\n            .addClass('kfrm-button')\n            .addClass('eqjs-facets-button-swap')\n            .attr('title', i18n.getText('Facets', 'Pivot', 'SwapBtnTitle'))\n            .on('click', () => {\n            const colSelect = document.getElementById('pivotTableColFieldSelector');\n            const rowSelect = document.getElementById('pivotTableRowFieldSelector');\n            const tmp = colSelect.value;\n            colSelect.value = rowSelect.value;\n            rowSelect.value = tmp;\n        })));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'row_field')\n            .text(i18n.getText('Facets', 'Pivot', 'RowFieldSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'row_field')\n            .addChildElement(this.createColumnsSelectBuilder(colTypes, settings.rowName, FormFieldType.RowField)\n            .id('pivotTableRowFieldSelector')\n            .toDOM()));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'data_function')\n            .text(i18n.getText('Facets', 'Pivot', 'CellDataSelectorLabel')))\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'data_function')\n            .addChildElement(this.createAggrFuncSelectBuilder(settings.aggrFunc)\n            .id('pivotTableAggrFuncSelector')\n            .toDOM()))\n            .addChild('label', b => b.addText('of  '))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'data_column')\n            .addChildElement(this.createColumnsSelectBuilder(fieldTypes, settings.fieldName, FormFieldType.CellData)\n            .on('change', (ev) => {\n            const colId = ev.target.value;\n            this.validateSelectedField(colId);\n        })\n            .id('pivotTableCellFieldSelector')\n            .toDOM())));\n        current = getCurrent();\n        domel(current)\n            .addChild('div')\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('pivotTableHasTotalsRow')\n                .type('checkbox');\n            if (settings.totalsRow)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Pivot', 'TotalsRowLabel')))\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('pivotTableHasTotalsCol')\n                .type('checkbox');\n            if (settings.totalsCol)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Pivot', 'TotalsColLabel'))));\n    }\n    afterDialogOpened(dlg) {\n        const colId = document.getElementById('pivotTableCellFieldSelector').value;\n        if (colId) {\n            this.validateSelectedField(colId);\n        }\n        if (this.getQuery().getColumns().length <= 2) {\n            dlg.showAlert('The dataset should contain at least three columns to build a pivot table', 'error');\n            dlg.getSubmitButtonElement().disabled = true;\n        }\n    }\n    validateSelectedField(colId) {\n        const dataTable = this.getContextDataTable();\n        const colIndex = dataTable.columns.getIndex(colId);\n        const col = dataTable.columns.get(colIndex);\n        const aggrSelector = document.getElementById('pivotTableAggrFuncSelector');\n        if (col.type == DataType.String) {\n            aggrSelector.disabled = true;\n            aggrSelector.value = AggrFunc.Count;\n        }\n        else {\n            aggrSelector.disabled = false;\n        }\n    }\n    submitSettingsDialog() {\n        const result = super.submitSettingsDialog();\n        if (result) {\n            this.settings = {\n                colName: document.getElementById('pivotTableColFieldSelector').value,\n                rowName: document.getElementById('pivotTableRowFieldSelector').value,\n                aggrFunc: document.getElementById('pivotTableAggrFuncSelector').value,\n                fieldName: document.getElementById('pivotTableCellFieldSelector').value,\n                totalsRow: document.getElementById('pivotTableHasTotalsRow').checked,\n                totalsCol: document.getElementById('pivotTableHasTotalsCol').checked\n            };\n            this.refresh();\n        }\n        return result;\n    }\n    saveToData() {\n        const data = super.saveToData();\n        if (this.settings) {\n            utils.assignDeep(data, this.settings);\n        }\n        return data;\n    }\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            this.settings = utils.assignDeep(this.settings, data);\n            if (this.settings.aggrFunc == 'AVERAGE') {\n                this.settings.aggrFunc = AggrFunc.Average;\n            }\n        }\n    }\n    refreshCore() {\n        this.updatePivotData();\n        if (this.grid) {\n            const dataSize = this.pivotTable.getTotal();\n            const maxRow = this.grid.options.paging.pageSize;\n            if (dataSize > maxRow) {\n                this.contentDiv.classList.remove('pivot-grid-with-totals');\n                this.showErrorMessage(i18n.getText('Facets', 'ErrTooMuchData'));\n            }\n            if (this.options.viewportRowsCount > dataSize) {\n                this.grid.options.viewportRowsCount = dataSize;\n            }\n            else {\n                this.grid.options.viewportRowsCount = this.options.viewportRowsCount;\n            }\n            this.grid.refresh();\n        }\n    }\n    getContextDataTable() {\n        const context = this.getContext();\n        return context.resultTable;\n    }\n    updatePivotData() {\n        this.pivotTable.clear();\n        const dataTable = this.getContextDataTable();\n        if (!dataTable || dataTable.getTotal() == 0) {\n            return;\n        }\n        if (!this.settings) {\n            return;\n        }\n        const colName = this.settings.colName;\n        const rowName = this.settings.rowName;\n        const fieldName = this.settings.fieldName;\n        const colIdx = dataTable.columns.getIndex(colName);\n        const rowIdx = dataTable.columns.getIndex(rowName);\n        const fieldIdx = dataTable.columns.getIndex(fieldName);\n        if (colIdx == undefined || rowIdx == undefined || fieldIdx == undefined) {\n            this.showUnableDisplayMessage(i18n.getText('Facets', 'ErrQueryChanged'));\n            return;\n        }\n        const columnField = dataTable.columns.get(fieldIdx);\n        const columnCol = dataTable.columns.get(colIdx);\n        const columnRow = dataTable.columns.get(rowIdx);\n        const rowLabel = columnRow.label;\n        const rowType = columnRow.type;\n        const colLabel = columnCol.label;\n        const colValues = [];\n        const rowValues = [];\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const colValue = rows[i].getValue(colIdx);\n            if (colValues.indexOf(colValue) < 0) {\n                colValues.push(colValue);\n            }\n            const rowValue = rows[i].getValue(rowIdx);\n            if (rowValues.indexOf(rowValue) < 0) {\n                rowValues.push(rowValue);\n            }\n        }\n        this.pivotTable.columns.add({\n            id: rowLabel + '\\\\' + colLabel,\n            label: rowLabel + '\\\\' + colLabel,\n            description: '',\n            type: rowType,\n            dfmt: columnRow.displayFormat,\n            style: columnRow.style\n        });\n        const null_columns = [];\n        let colFieldFormatter = null;\n        if (utils.isNumericType(columnCol.type)) {\n            colFieldFormatter = this.formatNumber;\n        }\n        else if (utils.getDateDataTypes().indexOf(columnCol.type) >= 0) {\n            colFieldFormatter = this.formatDate;\n        }\n        for (let i = 0; i < colValues.length; i++) {\n            const colValue = colValues[i];\n            if (!colValue) {\n                null_columns.push(i);\n            }\n            else {\n                const label = colFieldFormatter\n                    ? colFieldFormatter(columnCol, colValue)\n                    : colValue;\n                this.pivotTable.columns.add({\n                    id: colValue,\n                    label: label,\n                    description: '',\n                    dfmt: columnField.displayFormat,\n                    type: this.settings.aggrFunc !== AggrFunc.Count\n                        ? columnField.type : DataType.Int64,\n                    style: columnField.style\n                });\n            }\n        }\n        let new_rows = [];\n        for (let i = 0; i < rowValues.length; i++) {\n            new_rows.push([]);\n            new_rows[i].push(rowValues[i]);\n        }\n        for (let i = 0; i < rowValues.length; i++) {\n            for (let j = 0; j < colValues.length; j++) {\n                if (null_columns.indexOf(j) >= 0)\n                    continue;\n                new_rows[i].push(this.calcAggrFunc(this.settings.aggrFunc, {\n                    colName: this.settings.colName,\n                    rowName: this.settings.rowName,\n                    fieldName: this.settings.fieldName,\n                    rowValue: rowValues[i],\n                    colValue: colValues[j]\n                }));\n            }\n        }\n        if (this.settings.totalsCol) {\n            this.pivotTable.columns.add({\n                id: \"total\",\n                label: i18n.getText('Facets', 'Pivot', 'TotalGridLabel'),\n                description: '',\n                dfmt: columnField.displayFormat,\n                type: this.settings.aggrFunc !== AggrFunc.Count\n                    ? columnField.type : DataType.Int64\n            });\n            for (let i = 0; i < new_rows.length; i++) {\n                const row = new_rows[i];\n                let totalByRow = 0;\n                if (this.settings.aggrFunc == AggrFunc.Min\n                    || this.settings.aggrFunc == AggrFunc.Max) {\n                    totalByRow = row[1];\n                }\n                for (let j = 1; j < row.length; j++) {\n                    const value = row[j];\n                    if (value !== null) {\n                        if (this.settings.aggrFunc === AggrFunc.Min) {\n                            if (value < totalByRow)\n                                totalByRow = value;\n                        }\n                        else if (this.settings.aggrFunc === AggrFunc.Max) {\n                            if (value > totalByRow)\n                                totalByRow = value;\n                        }\n                        else {\n                            totalByRow += value;\n                        }\n                    }\n                }\n                if (this.settings.aggrFunc === AggrFunc.Average) {\n                    totalByRow /= row.length - 1;\n                }\n                row.push(totalByRow);\n            }\n        }\n        for (const row of new_rows) {\n            this.pivotTable.addRow(row);\n        }\n        if (this.settings.totalsRow) {\n            let total_row = [];\n            // to be able to create date value\n            total_row.push(null);\n            for (let i = 1; i < this.pivotTable.columns.count; i++) {\n                const rows = this.pivotTable.getCachedRows();\n                let totalByCol = 0;\n                if (this.settings.aggrFunc == AggrFunc.Min\n                    || this.settings.aggrFunc == AggrFunc.Max) {\n                    totalByCol = rows[0].getValue(i);\n                }\n                for (let j = 0; j < rows.length; j++) {\n                    const value = rows[j].getValue(i);\n                    if (value !== null) {\n                        if (this.settings.aggrFunc === AggrFunc.Min) {\n                            if (value < totalByCol)\n                                totalByCol = value;\n                        }\n                        else if (this.settings.aggrFunc === AggrFunc.Max) {\n                            if (value > totalByCol)\n                                totalByCol = value;\n                        }\n                        else {\n                            totalByCol += value;\n                        }\n                    }\n                }\n                if (this.settings.aggrFunc === AggrFunc.Average) {\n                    totalByCol /= rows.length;\n                }\n                total_row.push(totalByCol);\n            }\n            this.pivotTable.addRow(total_row);\n            this.contentDiv.classList.add('pivot-grid-with-totals');\n        }\n        else {\n            this.contentDiv.classList.remove('pivot-grid-with-totals');\n        }\n    }\n    calcAggrFunc(func, options) {\n        switch (func) {\n            case AggrFunc.Sum:\n                return this.sum(options);\n            case AggrFunc.Average:\n                return this.average(options);\n            case AggrFunc.Min:\n                return this.min(options);\n            case AggrFunc.Max:\n                return this.max(options);\n            case AggrFunc.Count:\n                return this.count(options);\n            default:\n                return 0;\n        }\n    }\n    getSettings() {\n        return this.settings;\n    }\n    formatDate(column, value) {\n        const isDate = Object.prototype.toString.call(value) === '[object Date]';\n        let strValue = (value || '').toString();\n        if (isDate) {\n            if (column && column.displayFormat\n                && DFMT_REGEX.test(column.displayFormat)) {\n                strValue = column.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                    return i18n.dateTimeToStrEx(value, column.type, $1);\n                });\n            }\n            else {\n                const locale = i18n.getCurrentLocale();\n                const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n                switch (column.type) {\n                    case DataType.Date:\n                        strValue = value.toLocaleDateString(locale);\n                        break;\n                    case DataType.Time:\n                        strValue = value.toLocaleTimeString(locale, timeOptions);\n                        break;\n                    case DataType.DateTime:\n                        strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                        break;\n                }\n            }\n        }\n        return strValue;\n    }\n    formatNumber(column, value) {\n        let strValue = (value || '').toString();\n        if (typeof value == 'number') {\n            if (column && column.displayFormat\n                && DFMT_REGEX.test(column.displayFormat)) {\n                strValue = column.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                    return i18n.numberToStr(value, $1);\n                });\n            }\n            else {\n                strValue = value.toLocaleString();\n            }\n        }\n        return strValue;\n    }\n    sum(options) {\n        let result = 0;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            result += fieldValue;\n        }\n        return result;\n    }\n    average(options) {\n        let result = 0;\n        let count = 0;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            result += fieldValue;\n            count++;\n        }\n        if (count != 0)\n            result = result / count;\n        return result;\n    }\n    min(options) {\n        let min = Number.MAX_SAFE_INTEGER;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            if (fieldValue < min) {\n                min = fieldValue;\n            }\n        }\n        if (min == Number.MAX_SAFE_INTEGER)\n            return null;\n        return min;\n    }\n    max(options) {\n        let max = Number.MIN_SAFE_INTEGER;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            if (fieldValue > max) {\n                max = fieldValue;\n            }\n        }\n        if (max == Number.MIN_SAFE_INTEGER)\n            return null;\n        return max;\n    }\n    count(options) {\n        const dataTable = this.getContextDataTable();\n        let count = 0;\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            count++;\n        }\n        return count;\n    }\n}\n\nclass DataTableFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.grid = null;\n        this.title = i18n$1.getText('Facets', 'DataTable', 'FacetTitle');\n        this.dialogTitle = i18n$1.getText('Facets', 'DataTable', 'DlgTitle');\n    }\n    init(slot) {\n        super.init(slot);\n        this.reinitGrid();\n    }\n    getSettings() {\n        return this.settings;\n    }\n    reinitGrid() {\n        if (this.grid)\n            this.grid.destroy();\n        const options = this.container.options || {};\n        if (options.gridResolver) {\n            this.grid = options.gridResolver(this.contentDiv, this.getType());\n        }\n        if (this.grid == null) {\n            this.grid = new EasyGridWidget(this.contentDiv);\n        }\n        options.grid = options.grid || {};\n        options.grid.autoRefresh = false;\n        options.grid.addColumns = false;\n        const context = this.getContext();\n        options.grid.totals = this.settings;\n        this.grid.init(context, options.grid);\n    }\n    getType() {\n        return FacetType.DataGrid;\n    }\n    canDisplay() {\n        return true;\n    }\n    refreshCore() {\n        if (!this.grid)\n            return;\n        this.grid.refresh();\n    }\n    destroy() {\n        if (this.grid) {\n            this.grid.destroy();\n        }\n    }\n}\n\nclass FacetContainer extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.facets = [];\n        this.options = {};\n        this.group = WidgetGroup.Result;\n    }\n    destroyCore() {\n        for (const facet of this.facets) {\n            facet.destroy();\n        }\n        this.clear();\n    }\n    createFacetTab(type) {\n        const options = this.options[type];\n        switch (type) {\n            case FacetType.Chart:\n                return new ChartFacet(this, options);\n            case FacetType.PivotTable:\n                return new PivotTableFacet(this, options);\n            default:\n                return new DataTableFacet(this, options);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n}\n\nclass ExportDialog {\n    constructor(context) {\n        this.context = context;\n        this.promise = null;\n    }\n    show(defFormat = null) {\n        if (!this.promise) {\n            const formats = this.context.getExportFormats();\n            if (formats.length == 0)\n                throw Error(\"No exporter has been registered.\");\n            defFormat = defFormat || formats[0];\n            this.promise = new Promise((resolve, reject) => {\n                const ds = this.context.getServices().getService('DialogService');\n                const body = domel('div')\n                    .addClass('kdlg-form-section')\n                    .addChild('div', b => b\n                    .addClass('kfrm-form')\n                    .addChild('div', b => b\n                    .addClass('kfrm-fields col-a-1 label-align-right')\n                    .addChild('label', b => b\n                    .addClass('kdlg-form-label', 'kflex-20')\n                    .attr('for', 'export_format')\n                    .addText(i18n$1.getText('ExportDlgFmtLabel')))\n                    .addChild('div', b => b\n                    .addClass('kfrm-select')\n                    .addChild('select', b => {\n                    b\n                        .attr('name', 'export_format')\n                        .id('exportFormat');\n                    for (const format of this.context.getExportFormats()) {\n                        b.addOption({\n                            value: format,\n                            title: i18n$1.getText(format) || format,\n                            selected: defFormat == format\n                        });\n                    }\n                }))))\n                    .toDOM();\n                ds.open({\n                    title: i18n$1.getText('ExportDlgTitle'),\n                    body: body,\n                    onSubmit: () => {\n                        const format = body.querySelector('#exportFormat').value;\n                        this.context.exportResult({\n                            format: format,\n                            success: resolve,\n                            error: reject\n                        });\n                        return true;\n                    }\n                });\n            });\n        }\n        return this.promise.finally(() => this.promise = null);\n    }\n}\n\nclass ResultFacetsPanel extends FacetContainer {\n    constructor(slot) {\n        super(slot);\n        this.activeFacetIndex = -1;\n        this.firstRender = true;\n        this.options = {\n            showExportButton: true,\n            showRefreshButton: true,\n            showMaximizeButton: true,\n            maximize2Window: false,\n            showProcessIndicator: true,\n            facetTypes: [FacetType.DataGrid, FacetType.Chart, FacetType.PivotTable]\n        };\n        this.menuItems = [\n            { id: FacetType.DataGrid, text: i18n.getText('Facets', 'AddMenuItems', 'DataTable') },\n            { id: FacetType.Chart, text: i18n.getText('Facets', 'AddMenuItems', 'Chart') },\n            { id: FacetType.PivotTable, text: i18n.getText('Facets', 'AddMenuItems', 'Pivot') }\n        ];\n        this.menuItemsFilter = (item) => {\n            if (this.options.facetTypes.indexOf(item.id) < 0)\n                return false;\n            if (item.id === FacetType.DataGrid) {\n                return this.facets.filter(facet => facet.getType() == FacetType.DataGrid).length === 0;\n            }\n            return true;\n        };\n        if (!this.slot.classList.contains(`${this.cssPrefix}-panel`)) {\n            this.slot.classList.add(`${this.cssPrefix}-panel`);\n        }\n        this.renderProcessBlock();\n    }\n    get cssPrefix() {\n        return 'eqjs-facets';\n    }\n    getWidgetType() {\n        return 'facetsPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.destroyCore();\n        this.attachQueryObserver();\n        this.loadFacets();\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        if (this.queryEventCallbackId) {\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (edata.part != QueryChangePart.All) {\n                return;\n            }\n            if (edata.source == this) {\n                return;\n            }\n            this.reloadFacets();\n            this.refreshCore(true);\n        });\n    }\n    refreshCore(force = false) {\n        if (this.firstRender || force) {\n            this.clear();\n            this.createAddMenu();\n            this.render();\n        }\n        this.validateAddFacetButton();\n        this.renderActiveFacet();\n        this.updateTotalRecords();\n    }\n    createAddMenu() {\n        this.addMenu = new PopupMenu({\n            items: this.menuItems,\n            id: \"FacetType-List\"\n        });\n    }\n    updateTotalRecords() {\n        const context = this.getContext();\n        const total = context.resultTable.getTotal();\n        this.recordsDiv.innerHTML = i18n.getText('Facets', 'TotalRecordsLabel') + ' ' + total;\n        if (total == 0) {\n            domel(this.exportDiv).hide();\n        }\n        else {\n            domel(this.exportDiv).show();\n        }\n    }\n    renderProcessBlock() {\n        const html = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n        this._processBlock = domel('div')\n            .addClass(`${this.cssPrefix}-spinner`)\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-progress-win8`, browserUtils.getMobileCssClass())\n            .addHtml(html))\n            .toDOM();\n    }\n    onProcessStartCore() {\n        if (this.options.showProcessIndicator) {\n            // FacetsPanel might be not rendered yet, so \n            // it has no body\n            if (!this._processBlock.parentNode && this.bodyDiv) {\n                this.bodyDiv.childNodes.forEach(el => {\n                    domel(el).hide();\n                });\n                this.bodyDiv.appendChild(this._processBlock);\n            }\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showProcessIndicator) {\n            if (this._processBlock.parentNode) {\n                try {\n                    this._processBlock.parentNode\n                        .removeChild(this._processBlock);\n                }\n                catch (e) {\n                }\n                finally {\n                    this.renderActiveFacet(false);\n                }\n            }\n        }\n    }\n    render() {\n        this.firstRender = false;\n        this.headerDiv = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.tabsDiv =\n            domel('div', this.headerDiv)\n                .addClass(`${this.cssPrefix}-tabs`)\n                .toDOM();\n        this.tabsUl = domel('ul', this.tabsDiv)\n            .addClass(`${this.cssPrefix}-nav-tabs`)\n            .toDOM();\n        this.bodyDiv =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-body`)\n                .toDOM();\n        for (const facet of this.facets) {\n            this.renderFacet(facet);\n        }\n        domel(this.tabsDiv)\n            .addChild('div', b => this.addFacetButton = b\n            .addClass(`${this.cssPrefix}-add-button`)\n            .title(i18n.getText('Facets', 'NewFacetTitle'))\n            .addChild('a', b => b\n            .attr('href', 'javascript:void(0)'))\n            .on('click', (e) => this.addClickHandler(e))\n            .toDOM());\n        const manageDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-manage`)\n            .toDOM();\n        this.recordsDiv = domel('div', manageDiv)\n            .addClass(`${this.cssPrefix}-total-recs`)\n            .toDOM();\n        if (this.options.showRefreshButton || this.options.showExportButton || this.options.showMaximizeButton) {\n            const bdb = domel('div', manageDiv)\n                .addClass(`${this.cssPrefix}-total-buttons`)\n                .toDOM();\n            if (this.options.showExportButton) {\n                this.exportDiv = domel('button', bdb)\n                    .on('click', () => this.exportHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-export`)\n                    .title(i18n.getText('Facets', 'ExportBtnTitle'))\n                    .toDOM();\n            }\n            if (this.options.showRefreshButton) {\n                domel('button', bdb)\n                    .on('click', () => this.refreshHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-refresh`)\n                    .title(i18n.getText('Facets', 'RefreshBtnTitle'));\n            }\n            if (this.options.showMaximizeButton) {\n                this.maximizeButton = domel('button', bdb)\n                    .on('click', () => this.options.maximize2Window ? this.maximizeHandler(true) : this.maximizeHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-maximize`)\n                    .title(i18n.getText('Facets', 'MaximizeBtnTitle'))\n                    .toDOM();\n            }\n        }\n    }\n    refreshHandler() {\n        const context = this.getContext();\n        context.fetchData({\n            success: () => {\n                // possibly we should move this logic to context\n                context.refreshWidgets(WidgetGroup.Result);\n            }\n        });\n    }\n    exportHandler() {\n        const context = this.getContext();\n        new ExportDialog(context)\n            .show();\n    }\n    maximizeHandler(toWindow) {\n        let b = domel(this.slot);\n        if (toWindow) {\n            b.toggleClass(`${eqCssPrefix}-maximized-2window`);\n            if (this.slot.classList.contains(`${eqCssPrefix}-maximized-2window`)) {\n                this.maximizeButton.title = i18n.getText('Facets', 'RestoreBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, true);\n            }\n            else {\n                this.maximizeButton.title = i18n.getText('Facets', 'MaximizeBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, true);\n            }\n        }\n        else {\n            const isMaximized = !this.slot.hasAttribute('data-is-maximized');\n            if (isMaximized) {\n                this.slot.setAttribute('data-is-maximized', '');\n                this.maximizeButton.title = i18n.getText('Facets', 'RestoreBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, true);\n            }\n            else {\n                this.slot.removeAttribute('data-is-maximized');\n                this.maximizeButton.title = i18n.getText('Facets', 'MaximizeBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, true);\n            }\n            const arrToHide = document.querySelectorAll('[data-hide-on-max]');\n            arrToHide.forEach(el => {\n                if (isMaximized) {\n                    el.setAttribute('style', 'display: none;');\n                }\n                else {\n                    el.removeAttribute('style');\n                }\n            });\n        }\n        this.facets.forEach(facetTab => facetTab.onResize());\n    }\n    renderActiveFacet(refresh = true) {\n        this.tabsUl.querySelectorAll('li') //`.${this.cssPrefix}-header-item.${this.cssPrefix}-facet`)\n            .forEach((el, index) => {\n            if (el.classList.contains('active')) {\n                el.classList.remove('active');\n            }\n            if (this.activeFacetIndex === index) {\n                el.classList.add('active');\n            }\n        });\n        this.bodyDiv.querySelectorAll(`.${eqCssPrefix}-facet`)\n            .forEach((el, index) => {\n            domel(el).hide();\n            if (this.activeFacetIndex === index) {\n                domel(el).show();\n                if (refresh) {\n                    this.facets[index].refresh();\n                }\n            }\n        });\n    }\n    renderFacet(facet) {\n        this.renderFacetTab(facet);\n        const body = this.renderFacetSlot(facet);\n        facet.init(body);\n    }\n    renderFacetTab(facet) {\n        return domel('li', this.tabsUl)\n            //.addClass(`${this.cssPrefix}-header-item`, `${this.cssPrefix}-facet`)\n            //facet settings button\n            .addChild('span', b => b\n            .addClass(`${eqCssPrefix}-facet-settings`)\n            .on('click', (e) => {\n            e.stopPropagation();\n            this.settingsClickHandler(facet);\n        }))\n            .addChild('a', b => b\n            .addText(facet.title)\n            .attr('href', 'javascript:void(0)'))\n            //facet close button\n            .addChild('span', b => b\n            .addClass(`${eqCssPrefix}-facet-close`)\n            .on('click', (e) => {\n            e.stopPropagation();\n            this.closeClickHandler(facet);\n        }))\n            .on('click', (e) => this.selectClickHandler(facet))\n            .toDOM();\n    }\n    renderFacetSlot(facet) {\n        let element = domel('div', this.bodyDiv)\n            .addClass(`${eqCssPrefix}-facet`)\n            .hide()\n            .toDOM();\n        return element;\n    }\n    refreshFacetTabs() {\n        this.tabsUl.querySelectorAll('li') //`.${this.cssPrefix}-header-item.${this.cssPrefix}-facet`)\n            .forEach((item) => {\n            this.tabsUl.removeChild(item);\n        });\n        for (const facet of this.facets) {\n            this.renderFacetTab(facet);\n        }\n    }\n    removeFacet(facet) {\n        const index = this.facets.indexOf(facet);\n        if (index >= 0) {\n            this.facets.splice(index, 1);\n            const header = this.tabsUl.childNodes[index];\n            this.tabsUl.removeChild(header);\n            const body = this.bodyDiv.childNodes[index];\n            this.bodyDiv.removeChild(body);\n            if (this.facets.length > 0) {\n                this.activeFacetIndex =\n                    index < this.facets.length\n                        ? index\n                        : this.facets.length - 1;\n            }\n            else {\n                this.activeFacetIndex = -1;\n            }\n            this.renderActiveFacet();\n            this.validateAddFacetButton();\n        }\n    }\n    addClickHandler(ev) {\n        this.addMenu.showMenu({\n            anchor: ev.target,\n            itemFilterCallback: this.menuItemsFilter,\n            itemSelectedCallback: (data) => {\n                const facet = this.createFacetTab(data.id);\n                const facetSlot = this.renderFacetSlot(facet);\n                facet.init(facetSlot);\n                facet.showSettingsDialog()\n                    .then(submited => {\n                    if (submited) {\n                        this.facets.push(facet);\n                        this.activeFacetIndex = this.facets.length - 1;\n                        this.renderFacetTab(facet);\n                        this.renderActiveFacet();\n                        this.saveFacets();\n                    }\n                    else {\n                        this.bodyDiv.removeChild(facetSlot);\n                    }\n                    //this.validateAddFacetButton();\n                })\n                    .catch(error => console.error(error));\n            }\n        });\n    }\n    selectClickHandler(facet) {\n        const index = this.facets.indexOf(facet);\n        this.setActiveFacet(index);\n    }\n    settingsClickHandler(facet) {\n        facet.showSettingsDialog()\n            .then(submited => {\n            if (submited) {\n                this.refreshFacetTabs();\n                this.renderActiveFacet();\n                this.saveFacets();\n            }\n        })\n            .catch(error => console.error(error));\n    }\n    closeClickHandler(facet) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('Facets', 'RemoveFacetDlgTitle'), i18n.getText('Facets', 'RemoveFacetDlgContent')\n            .replace('{facetTitle}', facet.title))\n            .then(confirmed => {\n            if (confirmed) {\n                this.removeFacet(facet);\n                this.saveFacets();\n            }\n        })\n            .catch(error => console.error(error));\n    }\n    clear() {\n        this.firstRender = true;\n        this.slot.innerHTML = \"\";\n    }\n    createDefaultFacetIfNotExist() {\n        if (this.facets.length === 0) {\n            const facet = this.createFacetTab(FacetType.DataGrid);\n            this.facets.push(facet);\n            this.activeFacetIndex = 0;\n        }\n    }\n    validateAddFacetButton() {\n        this.addFacetButton.hidden = this.addMenu.getItems()\n            .filter(this.menuItemsFilter).length == 0;\n    }\n    setActiveFacet(index) {\n        if (this.activeFacetIndex != index) {\n            this.activeFacetIndex = index;\n            this.renderActiveFacet();\n            this.saveFacets(true);\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    getDialogService() {\n        return this.getContext()\n            .getServices()\n            .getService('DialogService');\n    }\n    saveFacets(isActivate = false) {\n        const query = this.getQuery();\n        query.innerData = query.innerData || {};\n        query.innerData.facets = {\n            active: this.activeFacetIndex,\n            items: this.facets.map(f => f.saveToData())\n        };\n        query.fireChangedEvent({\n            part: QueryChangePart.Facets,\n            action: isActivate ? QueryChangeAction.Activate : QueryChangeAction.All,\n            source: this\n        });\n    }\n    reloadFacets() {\n        for (const facet of this.facets) {\n            facet.destroy();\n        }\n        this.loadFacets();\n    }\n    loadFacets() {\n        const query = this.getQuery();\n        this.facets = [];\n        if (query.innerData && query.innerData.facets) {\n            const items = query.innerData.facets.items;\n            for (const fd of items) {\n                const facet = this.createFacetTab(fd.type);\n                facet.loadFromData(fd);\n                this.facets.push(facet);\n            }\n            const active = query.innerData.facets.active;\n            this.activeFacetIndex = (active >= 0)\n                ? active\n                : this.facets.length - 1;\n        }\n        else {\n            this.createDefaultFacetIfNotExist();\n        }\n    }\n}\n\nclass ExportWidget extends Widget {\n    getWidgetType() {\n        return 'exportWidget';\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            defFormat: 'csv',\n            enableExport: true\n        };\n        this.clickHandler = (ev) => {\n            if (!this.slot.hasAttribute('disabled'))\n                new ExportDialog(this.context).show(this.options.defFormat);\n        };\n        this.group = WidgetGroup.All;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.options = utils.assignDeep(this.options, options);\n        this.slot.addEventListener('click', this.clickHandler);\n    }\n    refreshCore() {\n        if (this.options.enableExport && this.context.resultTable\n            && this.context.resultTable.getCachedCount() > 0) {\n            this.slot.removeAttribute('disabled');\n        }\n        else {\n            this.slot.setAttribute('disabled', '');\n        }\n    }\n    destroyCore() {\n        this.slot.removeAttribute('disabled');\n        this.slot.removeEventListener('click', this.clickHandler);\n    }\n}\n\nclass AggrSettingsRenderer {\n    get cssPrefix() {\n        return 'eqjs-as';\n    }\n    constructor(options) {\n        this.selectState = {\n            columns: []\n        };\n        this.funcMap = {};\n        if (!options || !options.slot)\n            throw new Error('slot is required');\n        if (!options || !options.query)\n            throw new Error('query is required');\n        this.slot = options.slot;\n        this.query = options.query;\n        this.onChanged = options.onChanged;\n        this.dropSelectState();\n        this.dropState();\n    }\n    render() {\n        this.createFunctionMenu();\n        this.setInitialState();\n        this.changed();\n    }\n    setInitialState() {\n        const aggrSettings = this.query.getAggregationSettings();\n        const groups = aggrSettings.getInternalGroups();\n        const aggrs = aggrSettings.getAggregates();\n        for (const group of groups) {\n            this.state.groups.push({\n                columns: group.columns\n            });\n        }\n        for (const aggr of aggrs) {\n            this.state.aggregates.push({\n                colId: aggr.colId,\n                funcId: aggr.funcId\n            });\n        }\n        this.state.grandTotals = aggrSettings.hasGrandTotals();\n        this.state.recordCount = aggrSettings.hasRecordCount();\n    }\n    getAvailableColumns() {\n        return this.query.getColumns().filter(c => c.enabled);\n    }\n    renderCore() {\n        this.slot.innerHTML = '';\n        const cols = this.getAvailableColumns();\n        const slotb = domel(this.slot);\n        let currentGroup = null;\n        let groupBlockColumns = null;\n        let selectedBlockColumns = null;\n        const aggregates = this.state.aggregates;\n        let groupCounter = -1;\n        for (const col of cols) {\n            if (currentGroup) {\n                if (currentGroup.columns.indexOf(col.id) >= 0) {\n                    // render to current group div\n                    this.renderColumn(groupBlockColumns, col, true);\n                    continue;\n                }\n            }\n            currentGroup = this.getGroupForColumn(col.id);\n            if (currentGroup != null) {\n                groupCounter++;\n                // create groupDiv\n                const groupBlock = domel('div', this.slot)\n                    .addClass(`${this.cssPrefix}-group`)\n                    .data('gindex', `${groupCounter}`);\n                groupBlockColumns = domel('div', groupBlock.toDOM())\n                    .addClass(`${this.cssPrefix}-columns`);\n                this.renderColumn(groupBlockColumns, col, true);\n                continue;\n            }\n            const aggr = aggregates.filter(a => a.colId == col.id)[0];\n            if (aggr) {\n                const aggrBlock = domel('div', this.slot)\n                    .addClass(`${this.cssPrefix}-aggr`);\n                this.renderColumn(aggrBlock, col, true, aggr.funcId);\n                aggrBlock\n                    .addChild('div', b => b\n                    .addClass(`${this.cssPrefix}-buttons`)\n                    .addChild('button', b => b\n                    .addClass(`${this.cssPrefix}-unaggr-btn`)\n                    .title(i18n$1.getText('AggrSettings', 'UnaggrBtn'))\n                    .on('click', this.removeAggrBtnClickHandler.bind(this))));\n                continue;\n            }\n            if (this.selectState.columns.indexOf(col.id) >= 0) {\n                // create selectedDiv\n                if (selectedBlockColumns == null) {\n                    const selectedBlock = domel('div', this.slot)\n                        .addClass(`${this.cssPrefix}-selected`);\n                    selectedBlockColumns = domel('div', selectedBlock.toDOM())\n                        .addClass(`${this.cssPrefix}-columns`);\n                }\n                this.renderColumn(selectedBlockColumns, col, false);\n                continue;\n            }\n            // render column as is\n            this.renderColumn(slotb, col, false);\n        }\n        if (selectedBlockColumns) {\n            const buttonsContainer = domel('div', selectedBlockColumns.toDOM().parentElement)\n                .addClass(`${this.cssPrefix}-buttons`);\n            buttonsContainer.addChild('button', b => b\n                .addClass(`${this.cssPrefix}-group-btn`)\n                .title(i18n$1.getText('AggrSettings', 'GroupBtn'))\n                .on('click', this.groupBtnClickHandler.bind(this)));\n            if (this.selectState.columns.length == 1) {\n                buttonsContainer.addChild('button', b => b\n                    .addClass(`${this.cssPrefix}-aggr-btn`)\n                    .title(i18n$1.getText('AggrSettings', 'AggrBtn'))\n                    .on('click', this.aggrBtnClickHandler.bind(this)));\n            }\n        }\n        domel(this.slot)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-counts`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.state.recordCount) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.countsCheckboxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'GroupCountsLabel')))))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-grandtotals`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.state.grandTotals) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.grandCheckboxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'GrandTotalsLabel')))));\n        const groups = this.slot.querySelectorAll(`.${this.cssPrefix}-group`);\n        groups.forEach(el => {\n            domel(el)\n                .addChild('div', b => b\n                .addClass(`${this.cssPrefix}-buttons`)\n                .addChild('button', b => b\n                .addClass(`${this.cssPrefix}-ungroup-btn`)\n                .title(i18n$1.getText('AggrSettings', 'UngroupBtn'))\n                .on('click', this.removeGroupBtnClickHandler.bind(this))));\n        });\n        this.validateCheckboxes();\n    }\n    validateCheckboxes() {\n        if (this.selectState.columns.length === 0)\n            return;\n        let prevElement, prevInputEl, nextInputEl = null;\n        for (let i = 0; i < this.slot.childNodes.length; i++) {\n            const el = this.slot.childNodes[i];\n            if (el.classList.contains(`${this.cssPrefix}-selected`)) {\n                if (prevElement && prevElement.classList.contains(`${this.cssPrefix}-column`)) {\n                    prevInputEl = prevElement;\n                }\n            }\n            else if (el.classList.contains(`${this.cssPrefix}-column`)) {\n                if (prevElement && prevElement.classList.contains(`${this.cssPrefix}-selected`)) {\n                    nextInputEl = el;\n                }\n            }\n            prevElement = el;\n        }\n        for (let i = 0; i < this.slot.childNodes.length; i++) {\n            const el = this.slot.childNodes[i];\n            if (el.classList.contains(`${this.cssPrefix}-column`) && el != prevInputEl && el != nextInputEl) {\n                el.firstElementChild.firstElementChild.setAttribute('disabled', '');\n            }\n        }\n        const selector = `.${this.cssPrefix}-selected>.${this.cssPrefix}-columns>.${this.cssPrefix}-column`;\n        const selectedCols = this.slot.querySelectorAll(selector);\n        for (let i = 1; i < selectedCols.length - 1; i++) {\n            const el = selectedCols[i];\n            el.firstElementChild.firstElementChild.setAttribute('disabled', '');\n        }\n    }\n    isValid() {\n        const hasSelected = this.selectState.columns.length;\n        const hasAggrs = this.state.aggregates.length > 0;\n        const hasGroups = this.state.groups.length > 0;\n        const hasTotals = this.state.grandTotals;\n        const hasCounts = this.state.recordCount;\n        if (hasSelected)\n            return false;\n        if (hasGroups) {\n            return hasAggrs || hasCounts;\n        }\n        if (hasAggrs) {\n            return hasGroups || hasTotals;\n        }\n        return false;\n    }\n    getValidationMessage() {\n        const hasSelected = this.selectState.columns.length;\n        const hasAggrs = this.state.aggregates.length > 0;\n        const hasGroups = this.state.groups.length > 0;\n        const hasTotals = this.state.grandTotals;\n        const hasRecCount = this.state.recordCount;\n        if (hasSelected)\n            return `${i18n$1.getText('AggrSettings', 'SelectedError')} `;\n        if (hasGroups && !hasAggrs && !hasRecCount)\n            return `${i18n$1.getText('AggrSettings', 'NoAggrOrCountError')} `;\n        if (hasAggrs && !hasGroups && !hasTotals)\n            return `${i18n$1.getText('AggrSettings', 'NoGroupsOrGrandError')} `;\n        return `${i18n$1.getText('AggrSettings', 'NoGroupsOrAggrError')} `;\n    }\n    getSettings() {\n        const settings = new AggregationSettings(this.query);\n        for (const group of this.state.groups) {\n            settings.addGroup({ columns: group.columns });\n        }\n        for (const aggr of this.state.aggregates) {\n            settings.addAggregateColumn(aggr.colId, aggr.funcId);\n        }\n        if (this.state.grandTotals) {\n            settings.addGrandTotals();\n        }\n        if (this.state.recordCount) {\n            settings.addCounts();\n        }\n        return settings;\n    }\n    renderColumn(b, col, isTaken, funcId = null) {\n        b.addChild('div', b => {\n            b.data('colid', col.id);\n            const caption = funcId\n                ? `${col.caption} (${this.funcMap[funcId].caption})`\n                : col.caption;\n            if (!isTaken) {\n                b\n                    .addClass(`${this.cssPrefix}-column`)\n                    .addChild('label', b => b\n                    .addClass('checkbox')\n                    .addChild('input', b => {\n                    b.attr('type', 'checkbox');\n                    if (this.selectState.columns.indexOf(col.id) >= 0) {\n                        b.attr('checked', '');\n                    }\n                    b.on('change', this.colCheckboxChangeHandler.bind(this));\n                })\n                    .addText(caption));\n            }\n            else {\n                b\n                    .addClass(`${this.cssPrefix}-column-used`)\n                    .addText(caption);\n            }\n        });\n    }\n    getGroupForColumn(colId) {\n        const index = this.getGroupIndexForColumn(colId);\n        if (index >= 0)\n            return this.state.groups[index];\n        return null;\n    }\n    getGroupIndexForColumn(colId) {\n        for (var i = 0; i < this.state.groups.length; i++) {\n            const group = this.state.groups[i];\n            if (group.columns.indexOf(colId) >= 0)\n                return i;\n        }\n        return -1;\n    }\n    grandCheckboxChangeHandler(ev) {\n        this.state.grandTotals = !this.state.grandTotals;\n        this.onChanged && this.onChanged();\n    }\n    countsCheckboxChangeHandler(ev) {\n        this.state.recordCount = !this.state.recordCount;\n        this.onChanged && this.onChanged();\n    }\n    colCheckboxChangeHandler(ev) {\n        const input = ev.target;\n        const colId = input.parentElement.parentElement.getAttribute('data-colid');\n        // toggle column to track state\n        const index = this.selectState.columns.indexOf(colId);\n        if (index >= 0) {\n            this.selectState.columns.splice(index, 1);\n        }\n        else {\n            this.selectState.columns.push(colId);\n            const cols = this.getAvailableColumns();\n            this.selectState.columns = this.selectState.columns.sort((col1, col2) => {\n                const index1 = cols.findIndex(c => c.id == col1);\n                const index2 = cols.findIndex(c => c.id == col2);\n                return index1 - index2;\n            });\n        }\n        this.changed();\n    }\n    groupBtnClickHandler() {\n        this.state.groups.push({ columns: this.selectState.columns });\n        const cols = this.getAvailableColumns();\n        this.state.groups = this.state.groups.sort((g1, g2) => {\n            const g1Index = cols.findIndex(c => c.id == g1.columns[0]);\n            const g2Index = cols.findIndex(c => c.id == g2.columns[0]);\n            return g1Index - g2Index;\n        });\n        this.dropSelectState();\n        this.changed();\n    }\n    removeGroupBtnClickHandler(ev) {\n        const btn = ev.target;\n        const index = Number.parseInt(btn.parentElement.parentElement.getAttribute('data-gindex'));\n        this.state.groups.splice(index, 1);\n        this.changed();\n    }\n    removeAggrBtnClickHandler(ev) {\n        const btn = ev.target;\n        const colId = btn.parentElement.parentElement.querySelector(`.${this.cssPrefix}-column-used`)\n            .getAttribute('data-colid');\n        const index = this.state.aggregates.findIndex(a => a.colId == colId);\n        if (index >= 0) {\n            this.state.aggregates.splice(index, 1);\n            this.changed();\n        }\n    }\n    aggrBtnClickHandler(ev) {\n        this.query.getModel();\n        const colId = this.selectState.columns[0];\n        const col = this.getAvailableColumns().filter(c => c.id == colId)[0];\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            itemFilterCallback: (item) => {\n                return this.funcMap[item.id].appliedTypes.indexOf(col.expr.dataType) >= 0;\n            },\n            itemSelectedCallback: (data) => {\n                this.state.aggregates.push({\n                    colId: colId,\n                    funcId: data.id\n                });\n                this.dropSelectState();\n                this.changed();\n            }\n        });\n    }\n    clear() {\n        this.dropSelectState();\n        this.dropState();\n        this.changed();\n    }\n    dropSelectState() {\n        this.selectState = {\n            columns: []\n        };\n    }\n    dropState() {\n        this.state = {\n            groups: [],\n            aggregates: [],\n            recordCount: true,\n            grandTotals: false\n        };\n    }\n    changed() {\n        this.onChanged && this.onChanged();\n        this.renderCore();\n    }\n    createFunctionMenu() {\n        const model = this.query.getModel();\n        const funcs = this.query.getModel().getAggrFunctions();\n        const items = [];\n        for (const func of funcs) {\n            //add all functions except those we don't process\n            if (!func || func.id == 'MIN' || func.id == 'MAX' || func.id == 'CNTDST')\n                continue;\n            this.funcMap[func.id] = func;\n            const funcCaption = model\n                .getAggrFunctionCaption(func.id);\n            const item = {\n                id: func.id,\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n}\n\nclass AggrSettingsDialog {\n    constructor(context) {\n        this.context = context;\n        this.promise = null;\n    }\n    show(query) {\n        const initQuery = query || this.context.getQuery();\n        // copy query to prevent changes\n        this.query = this.context.createQuery();\n        this.query.loadFromData(initQuery.toJSONData());\n        // to rewrite with returning new aggrsettigns\n        // structure instead of apply on submit\n        if (!this.promise) {\n            this.promise = new Promise((resolve, reject) => {\n                const ds = this.context.getServices().getService('DialogService');\n                this.body = this.renderBody();\n                var dlg = ds.open({\n                    title: i18n$1.getText('AggrSettings', 'AggrDialogTitle'),\n                    body: this.body,\n                    onSubmit: () => {\n                        if (this.query.enableAggregation && !this.renderer.isValid())\n                            return false;\n                        initQuery.enableAggregation = this.query.enableAggregation;\n                        if (initQuery.enableAggregation) {\n                            initQuery.useAggregation(settings => {\n                                const s = this.renderer.getSettings();\n                                settings.loadFromData(s.saveToData());\n                            });\n                        }\n                        initQuery.fireChangedEvent({\n                            part: QueryChangePart.Aggregation,\n                            wasModified: false\n                        });\n                        resolve();\n                        return true;\n                    },\n                    onCancel: () => {\n                        resolve();\n                    }\n                });\n                this.renderer = new AggrSettingsRenderer({\n                    slot: this.body.querySelector('#AggrSettingsComponent'),\n                    query: this.query,\n                    onChanged: () => {\n                        dlg.clearAlert();\n                        const isValid = this.renderer.isValid();\n                        if (!isValid) {\n                            const error = this.renderer.getValidationMessage();\n                            dlg.showAlert(error, 'warning');\n                        }\n                        const btn = dlg.getRootElement()\n                            .querySelector('.kfrm-button.is-info');\n                        btn.disabled = !isValid && this.query.enableAggregation;\n                    }\n                });\n                if (this.query.enableAggregation) {\n                    this.renderer.render();\n                }\n            });\n        }\n        return this.promise.catch(e => console.error(e))\n            .finally(() => this.promise = null);\n    }\n    renderBody() {\n        const b = domel('div')\n            .addChild('div', b => b\n            .addClass(`eqjs-as-enableaggr`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.query.enableAggregation) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.enableAggrCheckBoxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'EnableAggrLabel')))))\n            .addChild('div', b => b\n            .id('AggrSettingsComponent'));\n        return b.toDOM();\n    }\n    enableAggrCheckBoxChangeHandler(e) {\n        this.query.enableAggregation = !this.query.enableAggregation;\n        this.body.querySelector('#AggrSettingsComponent').innerHTML = '';\n        if (this.query.enableAggregation) {\n            this.renderer.render();\n        }\n        else {\n            const btn = this.body ? this.body.closest('.kdlg-modal').querySelector('footer .kfrm-button.is-info') : null;\n            if (btn) {\n                btn.disabled = false;\n            }\n        }\n    }\n}\n\n/**\n * The widget responsed for rendering the name of the current query.\n */\nclass AggregationBar extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The HTML element where our widget should be placed.\n     * @param customQuery The custom query\n     */\n    constructor(slot, customQuery) {\n        super(slot);\n        this.linkClickCallback = () => {\n            new AggrSettingsDialog(this.context).show(this.getQuery());\n        };\n        this.queryEventCallbackId = null;\n        this.customQuery = customQuery;\n        this.group = WidgetGroup.Query | WidgetGroup.QueryStatus;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.destroyCore();\n        this.attachQueryObserver();\n    }\n    get cssPrefix() {\n        return 'eqjs-aggrb';\n    }\n    getWidgetType() {\n        return 'aggregationBar';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.render();\n    }\n    getLinkText() {\n        const query = this.getQuery();\n        if (query.enableAggregation) {\n            const aggrSettings = query.getAggregationSettings();\n            const groups = aggrSettings.getInternalGroups();\n            const aggrs = aggrSettings.getAggregates();\n            let groupArr = [];\n            const cols = query.getColumns();\n            for (const group of groups) {\n                const colNames = group.columns.map(value => {\n                    const col = cols.find(c => c.id == value);\n                    if (col) {\n                        return col.caption;\n                    }\n                    else {\n                        return '';\n                    }\n                });\n                groupArr.push(`[${colNames.join(', ')}]`);\n            }\n            const groupString = groupArr.join(', ');\n            let aggrArr = [];\n            const funcs = query.getModel().getAggrFunctions();\n            for (const aggr of aggrs) {\n                const col = cols.find(c => c.id == aggr.colId);\n                const func = funcs.find(f => f.id == aggr.funcId);\n                if (col && func) {\n                    aggrArr.push(`${col.caption} (${func.caption})`);\n                }\n            }\n            const aggrString = aggrArr.join(', ');\n            return `${groupString || i18n$1.getText('AggrSettings', 'NoGroupsLabel')} ::: ${aggrString ? `<${aggrString}>` : i18n$1.getText('AggrSettings', 'NoAggrsLabel')}`;\n        }\n        else {\n            return i18n$1.getText('AggrSettings', 'EmptySettingsLabel');\n        }\n    }\n    render() {\n        this.slot.classList.add(`${this.cssPrefix}-panel`);\n        const mobClass = browserUtils.getMobileCssClass();\n        if (mobClass) {\n            this.slot.classList.add(mobClass);\n        }\n        if (!this.dialogLink) {\n            this.dialogLink = document.createElement('a');\n            this.dialogLink.setAttribute('href', 'javascript:void(0)');\n            this.slot.appendChild(this.dialogLink);\n        }\n        // Update\n        this.dialogLink.textContent = this.getLinkText();\n        this.dialogLink.removeEventListener('click', this.linkClickCallback);\n        this.dialogLink.addEventListener('click', this.linkClickCallback);\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n        this.dialogLink = null;\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.refreshCore();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    destroyCore() {\n        this.clear();\n        this.detachQueryObserver();\n    }\n    getQuery() {\n        return this.customQuery || this.context.getQuery();\n    }\n}\n\nclass LocaleWidget extends Widget {\n    /**\n    * The default constructor.\n    * @param slot The html element.\n    */\n    constructor(slot) {\n        super(slot);\n        this.changeLocale = () => {\n            const newLocale = this.selectEl.value;\n            i18n.setCurrentLocale(newLocale);\n            this.context.refreshWidgets(WidgetGroup.All);\n        };\n        this.group = WidgetGroup.None;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.clear();\n        this.render();\n    }\n    getWidgetType() {\n        return 'changeLocale';\n    }\n    render() {\n        const locales = i18n.getLocales();\n        if (locales.length > 1) {\n            this.selectEl = document.createElement('select');\n            for (let locale of locales) {\n                let optionEl = document.createElement('option');\n                optionEl.value = locale.locale;\n                optionEl.innerHTML = this.displayLocaleName(locale);\n                this.selectEl.appendChild(optionEl);\n            }\n            this.selectEl.value = i18n.getCurrentLocale();\n            this.selectEl.classList.add('eqv-select');\n            this.selectEl.addEventListener('change', this.changeLocale);\n            this.slot.appendChild(this.selectEl);\n        }\n    }\n    displayLocaleName(locale) {\n        if (locale.englishName && locale.displayName) {\n            return `${locale.englishName} - ${locale.displayName}`;\n        }\n        else if (locale.englishName) {\n            return locale.englishName;\n        }\n        else if (locale.displayName) {\n            return locale.displayName;\n        }\n        return locale.locale;\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    destroyCore() {\n        this.clear();\n    }\n}\n\n/**\n * The widget responsed for rendering the name of the current query.\n */\nclass QueryNameWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The HTML element where our widget should be placed.\n     */\n    constructor(slot) {\n        super(slot);\n        this.queryEventCallbackId = null;\n        this.group = WidgetGroup.Query | WidgetGroup.QueryStatus;\n        this.nameTemplate = '{name}';\n    }\n    init(context, options) {\n        super.init(context, options);\n        if (options && options.nameTemplate) {\n            this.nameTemplate = options.nameTemplate;\n        }\n        this.destroyCore();\n        this.attachQueryObserver();\n    }\n    get cssPrefix() {\n        return 'eqjs-query-name';\n    }\n    getWidgetType() {\n        return 'queryName';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.render();\n    }\n    render() {\n        this.slot.classList.add(`${this.cssPrefix}`);\n        const mobClass = browserUtils.getMobileCssClass();\n        if (mobClass) {\n            this.slot.classList.add(mobClass);\n        }\n        if (!this.nameSlot) {\n            this.nameSlot = document.createElement('div');\n            this.nameSlot.classList.add(`${this.cssPrefix}-text`);\n            this.nameSlot.classList.add(`${this.cssPrefix}-theme`);\n            this.slot.appendChild(this.nameSlot);\n        }\n        if (!this.asteriskSlot) {\n            this.asteriskSlot = document.createElement('span');\n            this.asteriskSlot.innerHTML = \"*\";\n            this.asteriskSlot.classList.add(`${this.cssPrefix}-asterisk`);\n            this.slot.appendChild(this.asteriskSlot);\n        }\n        if (!this.tooltipSlot) {\n            this.tooltipSlot = document.createElement('span');\n            this.tooltipSlot.classList.add(`${this.cssPrefix}-tooltip`);\n            this.tooltipSlot.classList.add(`${this.cssPrefix}-theme`);\n            this.slot.appendChild(this.tooltipSlot);\n        }\n        // Update\n        const query = this.context.getQuery();\n        const queryName = query.getName();\n        const queryDescription = query.getDescription() || '';\n        const text = this.nameTemplate\n            .replace('{name}', queryName)\n            .replace('{description}', queryDescription);\n        this.nameSlot.textContent = text;\n        this.tooltipSlot.textContent = text;\n        this.asteriskSlot.style.visibility = query.isModified() ? \"visible\" : \"hidden\";\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n        this.nameSlot = null;\n        this.tooltipSlot = null;\n        this.asteriskSlot = null;\n    }\n    attachQueryObserver() {\n        const query = this.context.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.refreshCore();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.context.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    destroyCore() {\n        this.clear();\n        this.detachQueryObserver();\n    }\n}\n\nclass View {\n    // Widgets END\n    constructor() {\n        this.domRoots = [document];\n        this.defaultViewOptions = {\n            enableExport: true,\n            disableConfirmationOnQueryChange: false,\n            queryFileExtensions: 'text/xml,application/json',\n            result: {\n                clearResultOnQueryChange: true,\n                showChart: true,\n                showProcessIndicator: true\n            },\n            widgets: {\n                resultGrid: {\n                    addColumns: false\n                }\n            },\n            handlers: {}\n        };\n        this.viewOptions = {};\n        this.resultOptions = {};\n        this.enableExport = false;\n        this.services = EqServiceProvider.getInstance();\n        this.resetContext();\n        this.renderSpinner();\n    }\n    resetContext() {\n        this.context = createEqContext();\n    }\n    getDialogService() {\n        return this.services.getService('DialogService');\n    }\n    init(options) {\n        try {\n            this.context.initStart();\n            // to support shadow DOM rendering\n            if (options && options.shadowRoots)\n                this.domRoots = this.domRoots.concat(options.shadowRoots);\n            this.viewOptions = this.initOptions(options);\n            this.resultOptions = utils.assignDeep(this.defaultViewOptions.result, this.viewOptions.result);\n            this.initWidgets(this.viewOptions);\n            this.context.init(this.viewOptions);\n            this.initDone();\n        }\n        catch (err) {\n            this.context.throwError({ action: 'Init', sourceError: err });\n        }\n    }\n    initOptions(options) {\n        options = utils.assignDeep(this.defaultViewOptions, options);\n        // support old format \n        if (!options.widgets.easyGrid) {\n            options.widgets.easyGrid = options.widgets.resultGrid || {};\n        }\n        // map columnTitleFormat option to widgets that have similar option\n        if (options.columnTitleFormat) {\n            this.context.options.columnTitleFormat = options.columnTitleFormat;\n        }\n        //to support old paging options (should be removed in the next versions)\n        options.widgets.easyGrid.paging =\n            utils.assignDeep({}, options.result.paging, options.widgets.easyGrid.paging);\n        this.enableExport = options.enableExport || false;\n        if (!options.widgets.exportWidget) {\n            options.widgets.exportWidget = {};\n        }\n        options.widgets.exportWidget.enableExport = this.enableExport;\n        return options;\n    }\n    initWidgets(options) {\n        let queryPanel = \"QueryPanel\";\n        let columnsPanel = \"ColumnsPanel\";\n        let entitiesPanel = \"EntitiesPanel\";\n        let resultPanel = \"ResultPanel\";\n        let columnsBar = \"ColumnsBar\";\n        let sortingBar = \"SortingBar\";\n        let filterBar = \"FilterBar\";\n        let processBar = \"ProcessBar\";\n        let statementPanel = \"StatementPanel\";\n        let changeLocale = \"ChangeLocale\";\n        let queryNameLabel = \"QueryNameLabel\";\n        let facetsPanel = \"ResultFacetsPanel\";\n        let resultCount = \"ResultCount\";\n        let exportButton = \"ExportButton\";\n        let aggregationBar = \"AggregationBar\";\n        if (options.slots) {\n            queryNameLabel = options.slots.queryNameLabel || queryNameLabel;\n            queryPanel = options.slots.queryPanel || queryPanel;\n            columnsPanel = options.slots.columnsPanel || columnsPanel;\n            columnsBar = options.slots.columnsBar || columnsBar;\n            entitiesPanel = options.slots.entitiesPanel || entitiesPanel;\n            resultPanel = options.slots.resultPanel || resultPanel;\n            statementPanel = options.slots.statementPanel || statementPanel;\n            processBar = options.slots.processBar || processBar;\n            changeLocale = options.slots.changeLocale || changeLocale;\n            facetsPanel = options.slots.facetsPanel || facetsPanel;\n            resultCount = options.slots.resultCountSpan || resultCount;\n            filterBar = options.slots.filterBar || filterBar;\n            exportButton = options.slots.exportButtons || exportButton;\n            aggregationBar = options.slots.aggregationBar || aggregationBar;\n        }\n        const epElement = this.resolveElement(entitiesPanel);\n        if (epElement && !this.entitiesPanelWidget) {\n            this.entitiesPanelWidget = this.createEntitiesPanelWidget(epElement);\n            this.context.addWidget(this.entitiesPanelWidget);\n        }\n        const cpElement = this.resolveElement(columnsPanel);\n        if (cpElement && !this.columnsPanelWidget) {\n            this.columnsPanelWidget = this.createColumnsPanelWidget(cpElement);\n            this.context.addWidget(this.columnsPanelWidget);\n        }\n        const cbElement = this.resolveElement(columnsBar);\n        if (cbElement && !this.columnsBarWidget) {\n            this.columnsBarWidget = this.createColumnsBarWidget(cbElement);\n            this.context.addWidget(this.columnsBarWidget);\n        }\n        const qpElement = this.resolveElement(queryPanel);\n        if (qpElement && !this.queryPanelWidget) {\n            this.queryPanelWidget = this.createQueryPanelWidget(qpElement);\n            this.context.addWidget(this.queryPanelWidget);\n        }\n        this.resultPanelSlot = this.resolveElement(resultPanel);\n        if (this.resultPanelSlot) {\n            if (!this.resultGridWidget) {\n                let gridPanel = addElement(this.resultPanelSlot, 'div', { cssClass: 'eqv-result-grid' });\n                this.resultGridWidget = this.createResultGridWidget(gridPanel);\n                this.context.addWidget(this.resultGridWidget);\n            }\n            if (this.resultOptions.showChart && !this.chartWidget) {\n                let chartPanel = addElement(this.resultPanelSlot, 'div', { cssClass: 'eqv-chart-panel' });\n                chartPanel.style.display = 'none';\n                this.chartWidget = this.createChartWidget(chartPanel);\n                this.context.addWidget(this.chartWidget);\n            }\n        }\n        const qnElement = this.resolveElement(queryNameLabel);\n        if (qnElement && !this.queryNameWidget) {\n            this.queryNameWidget = this.createQueryNameWidget(qnElement);\n            this.context.addWidget(this.queryNameWidget);\n        }\n        const fbElement = this.resolveElement(filterBar);\n        if (fbElement && !this.filterBarWidget) {\n            this.filterBarWidget = this.createFilterBarWidget(fbElement);\n            this.context.addWidget(this.filterBarWidget);\n        }\n        const sbElement = this.resolveElement(sortingBar);\n        if (sbElement && !this.sortingBarWidget) {\n            this.sortingBarWidget = this.createSortingBarWidget(sbElement);\n            this.context.addWidget(this.sortingBarWidget);\n        }\n        const pbElement = this.resolveElement(processBar);\n        if (pbElement && !this.processWidget) {\n            this.processWidget = this.createProcessWidget(pbElement);\n            this.context.addWidget(this.processWidget);\n        }\n        const stElement = this.resolveElement(statementPanel);\n        if (stElement && !this.statementPanelWidget) {\n            this.statementPanelWidget = this.createStatementPanelWidget(stElement);\n            this.context.addWidget(this.statementPanelWidget);\n        }\n        const clElement = this.resolveElement(changeLocale);\n        if (clElement) {\n            const widget = this.createLocaleWidget(clElement);\n            this.context.addWidget(widget);\n        }\n        const fpElement = this.resolveElement(facetsPanel);\n        if (fpElement && !this.resultFacetPanelWidget) {\n            this.resultFacetPanelWidget = this.createResultFacetsPanel(fpElement);\n            this.context.addWidget(this.resultFacetPanelWidget);\n        }\n        const ewElement = this.resolveElement(exportButton);\n        if (ewElement && !this.exportWidget) {\n            this.exportWidget = this.createExportWidget(ewElement);\n            this.context.addWidget(this.exportWidget);\n        }\n        this.resultCountSlot = this.resolveElement(resultCount);\n        const aggrbElement = this.resolveElement(aggregationBar);\n        if (aggrbElement && !this.aggregationBarWidget) {\n            this.aggregationBarWidget = this.createAggregationBarWidget(aggrbElement);\n            this.context.addWidget(this.aggregationBarWidget);\n        }\n    }\n    initDone() { }\n    resolveElement(elementOrId) {\n        if (typeof elementOrId === 'string') {\n            for (const domRoot of this.domRoots) {\n                const el = domRoot.getElementById(elementOrId);\n                if (el)\n                    return el;\n            }\n            return null;\n        }\n        return elementOrId;\n    }\n    resolveElementsByClassName(className) {\n        let result = [];\n        for (const domRoot of this.domRoots) {\n            const elemList = domRoot.querySelectorAll('.' + className);\n            for (let i = 0; i < elemList.length; i++) {\n                result.push(elemList[i]);\n            }\n        }\n        return result;\n    }\n    /**\n    * Shows records count.\n    * @param count The value to show.\n    */\n    displayRecordsCount(count) {\n        if (this.resultCountSlot && (typeof count !== 'undefined')) {\n            this.resultCountSlot.style.display = \"inline\";\n            this.resultCountSlot.innerHTML = i18n.getText(\"MsgResultCount\").replace(\"{0}\", count.toString());\n        }\n    }\n    getContext() {\n        return this.context;\n    }\n    /**\n     * Sets dialog service for the view\n     * @param dialogService The dialog service.\n     */\n    setDialogService(dialogService) {\n        this.context.getServices().registerService('DialogService', () => dialogService);\n    }\n    /** @deprecated `executeQuery` is deprecated. Use `fetchData` instead*/\n    executeQuery(options) {\n        console.warn('`executeQuery` is deprecated. Use `fetchData` instead');\n        this.fetchData(options);\n    }\n    /**\n    * Fetches the data according to the query and other options defined in the context.\n    * @param options The options.\n    */\n    fetchData(options) {\n        options = options || { refresh: true };\n        this.context.clearResult();\n        //don't run fetch if the query is empty\n        if (this.context.getQuery().isEmpty() && !this.resultOptions.fetchEmptyQueries)\n            return;\n        this.showResultSpinner();\n        this.context.fetchData({\n            elasticPaging: options.elasticPaging,\n            success: (result) => {\n                this.hideResultSpinner();\n                this.toggleExportButtons();\n                this.displayRecordsCount(this.context.resultTable.getTotal());\n                if (options.refresh === true) {\n                    this.context.refreshWidgets(WidgetGroup.Result);\n                }\n                if (options.callback) {\n                    options.callback();\n                }\n                if (options.success) {\n                    options.success();\n                }\n            },\n            error: () => {\n                this.hideResultSpinner();\n            }\n        });\n    }\n    toggleExportButtons() {\n        if (this.enableExport && this.context.resultTable\n            && this.context.resultTable.getCachedCount() > 0) {\n            this.enableExportButtons();\n        }\n        else {\n            this.disableExportButtons();\n        }\n    }\n    enableExportButtons() {\n        // Nothing to do\n    }\n    disableExportButtons() {\n        // Nothing to do\n    }\n    renderSpinner() {\n        const html = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n        this._spinnerDiv = domel('div')\n            .addClass(`eqjs-result-spinner`)\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-progress-win8`, browserUtils.getMobileCssClass())\n            .addHtml(html))\n            .toDOM();\n    }\n    showResultSpinner() {\n        if (this.resultOptions.showProcessIndicator && this.resultPanelSlot) {\n            if (!this._spinnerDiv.parentNode) {\n                for (let i = 0; i < this.resultPanelSlot.children.length; i++) {\n                    const el = this.resultPanelSlot.children[i];\n                    domel(el).hide();\n                }\n                this.resultPanelSlot.appendChild(this._spinnerDiv);\n            }\n        }\n    }\n    hideResultSpinner() {\n        if (this.resultOptions.showProcessIndicator && this.resultPanelSlot) {\n            if (this._spinnerDiv.parentNode) {\n                this._spinnerDiv.parentNode.removeChild(this._spinnerDiv);\n                for (let i = 0; i < this.resultPanelSlot.children.length; i++) {\n                    const el = this.resultPanelSlot.children[i];\n                    domel(el).show();\n                }\n            }\n        }\n    }\n    /**\n    * Creates the widget that represents Chart Widget.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createChartWidget(slotElement) {\n        if (this.resultOptions.chartWidgetResolver) {\n            return this.resultOptions.chartWidgetResolver(slotElement);\n        }\n        else {\n            return new ChartJsWidget(slotElement);\n        }\n    }\n    /**\n    * Creates the widget that represents Result Grid.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createResultGridWidget(slotElement) {\n        if (this.resultOptions.resultGridResolver) {\n            return this.resultOptions.resultGridResolver(slotElement);\n        }\n        else {\n            return new EasyGridWidget(slotElement);\n        }\n    }\n    /**\n    * Creates the widget that represents Entity Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createEntitiesPanelWidget(slot) {\n        return new EntitiesPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Columns Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createColumnsPanelWidget(slot) {\n        return new ColumnsPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Query Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createQueryPanelWidget(slot) {\n        return new QueryPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Locale Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createLocaleWidget(slot) {\n        return new LocaleWidget(slot);\n    }\n    /**\n    * Creates the widget that represents Process Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createProcessWidget(slot) {\n        return new ProcessWidget(slot);\n    }\n    /**\n    * Creates the widget that represents Columns Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createColumnsBarWidget(slot) {\n        return new ColumnsBar(slot);\n    }\n    /**\n    * Creates the widget that represents Filter Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createFilterBarWidget(slot) {\n        return new FilterBar(slot);\n    }\n    /**\n    * Creates the widget that represents Sorting Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createSortingBarWidget(slot) {\n        return new SortingBar(slot);\n    }\n    /**\n    * Creates the widget that represents Query Name Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createQueryNameWidget(slot) {\n        return new QueryNameWidget(slot);\n    }\n    /**\n     * Creates the widget that represents Statement Panel Widget.\n     * @param slot\n     */\n    createStatementPanelWidget(slot) {\n        return new StatementPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Result Facets Panel Widget.\n    * @param slot\n    */\n    createResultFacetsPanel(slot) {\n        return new ResultFacetsPanel(slot);\n    }\n    /**\n     * Creates the widget that represents Export funcionality.\n     * @param slot\n     */\n    createExportWidget(slot) {\n        return new ExportWidget(slot);\n    }\n    /**\n     * Creates the widget that represents Aggregation Bar Widget.\n     * @param slot\n     */\n    createAggregationBarWidget(slot) {\n        return new AggregationBar(slot);\n    }\n    detach() {\n        if (this.entitiesPanelWidget) {\n            this.entitiesPanelWidget.destroy();\n            this.entitiesPanelWidget = null;\n        }\n        if (this.columnsPanelWidget) {\n            this.columnsPanelWidget.destroy();\n            this.columnsPanelWidget = null;\n        }\n        if (this.queryPanelWidget) {\n            this.queryPanelWidget.destroy();\n            this.queryPanelWidget = null;\n        }\n        if (this.columnsBarWidget) {\n            this.columnsBarWidget.destroy();\n            this.columnsBarWidget = null;\n        }\n        if (this.resultGridWidget) {\n            this.resultGridWidget.destroy();\n            this.resultGridWidget = null;\n        }\n        if (this.chartWidget) {\n            this.chartWidget.destroy();\n            this.chartWidget = null;\n        }\n        if (this.queryNameWidget) {\n            this.queryNameWidget.destroy();\n            this.queryNameWidget = null;\n        }\n        if (this.processWidget) {\n            this.processWidget.destroy();\n            this.processWidget = null;\n        }\n        if (this.localeWidget) {\n            this.localeWidget.destroy();\n            this.localeWidget = null;\n        }\n        if (this.statementPanelWidget) {\n            this.statementPanelWidget.destroy();\n            this.statementPanelWidget = null;\n        }\n        if (this.filterBarWidget) {\n            this.filterBarWidget.destroy();\n            this.filterBarWidget = null;\n        }\n        if (this.sortingBarWidget) {\n            this.sortingBarWidget.destroy();\n            this.sortingBarWidget = null;\n        }\n        if (this.statementWidget) {\n            this.statementWidget.destroy();\n            this.statementWidget = null;\n        }\n        if (this.exportWidget) {\n            this.exportWidget.destroy();\n            this.exportWidget = null;\n        }\n        if (this.resultFacetPanelWidget) {\n            this.resultFacetPanelWidget.destroy();\n            this.resultFacetPanelWidget = null;\n        }\n        if (this.resultCountSlot) {\n            this.resultCountSlot.innerHTML = '';\n            this.resultCountSlot = null;\n        }\n        if (this.resultPanelSlot) {\n            this.resultPanelSlot.innerHTML = '';\n            this.resultPanelSlot = null;\n        }\n        this.domRoots = [document];\n        this.resetContext();\n    }\n}\n\n/**\n * The EasyQuery client-side view that represents the UI for advanced search page\n */\nclass AdvancedSearchView extends View {\n    constructor() {\n        super();\n        this.exportButtons = [];\n        // Name of the class to add to disabled elements.\n        this.disabledClass = \"eqjs-disabled\";\n        this.dropdownContainerClass = \"eqv-dropdown-container\";\n        this.dropdownButtonClass = \"eqv-drop-button\";\n        this.dropdownContentClass = \"eqv-dropdown-content\";\n        this.dropdownShowClass = \"eqv-dropdown-show\";\n        this._querySaveTemplate = `<div id=\"kdlg-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-content\"></label>\r\n                <input type=\"text\" name=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        this.queryListMenu = null;\n        this.fetchDataButtonClickHandler = this.fetchDataButtonClick.bind(this);\n        this.clearQueryButtonClickHandler = this.clearQueryButtonClick.bind(this);\n        this.newQueryButtonClickHandler = this.newQueryButtonClick.bind(this);\n        this.loadQueryButtonClickHandler = this.loadQueryButtonClick.bind(this);\n        this.saveQueryButtonClickHandler = this.saveQueryButtonClick.bind(this);\n        this.copyQueryButtonClickHandler = this.copyQueryButtonClick.bind(this);\n        this.removeQueryButtonClickHandler = this.removeQueryButtonClick.bind(this);\n        this.storageButtonClickHandler = this.storageDropButtonClick.bind(this);\n        this.saveQueryToFileButtonClickHandler = this.saveQueryToFileButtonClick.bind(this);\n        this.loadQueryFromFileButtonClickHandler = this.loadQueryFromFileButtonClick.bind(this);\n        const self = this;\n        this.exportButtonClickHandler = function (e) {\n            if (!this.classList.contains(self.disabledClass)) {\n                const format = this.getAttribute(\"data-format\");\n                self.getContext().exportResult({ format: format });\n            }\n        };\n        this.queryChangedHandler = (ev) => {\n            const eventData = ev.data;\n            if (this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n                this.context.refreshWidgets(WidgetGroup.Result);\n            }\n            this.disableExportButtons();\n            if (this.resultCountSlot) {\n                this.resultCountSlot.style.display = \"none\";\n            }\n            if (this.viewOptions.syncQueryOnChange) {\n                this.syncQuery();\n            }\n            if (this.viewOptions.fetchDataOnChange) {\n                if (!eventData || (eventData.part != QueryChangePart.ExtraData\n                    && eventData.part != QueryChangePart.Facets)) {\n                    this.fetchData();\n                }\n            }\n        };\n        this.outsideClickHandler = (event) => {\n            let currentContent = null;\n            if (event.target.matches(`.${this.dropdownButtonClass}`)) {\n                currentContent = event.target.parentElement.querySelector(`.${this.dropdownContentClass}`);\n            }\n            else if (event.target.matches(`.${this.dropdownButtonClass} > span`)) {\n                currentContent = event.target.parentElement.parentElement.querySelector(`.${this.dropdownContentClass}`);\n            }\n            var dropdowns = this.resolveElementsByClassName(this.dropdownContentClass);\n            for (let i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (currentContent != openDropdown) {\n                    if (openDropdown.classList.contains(this.dropdownShowClass)) {\n                        openDropdown.classList.remove(this.dropdownShowClass);\n                    }\n                }\n            }\n        };\n    }\n    refreshQueryList() {\n        if (this.queryListPanel) {\n            this.queryListPanel.innerHTML = '';\n            this.context.loadQueryList({\n                success: (data) => {\n                    const b = domel('ul', this.queryListPanel)\n                        .addClass('list-group list-group-flush');\n                    data.map(item => {\n                        b.addChild('li', b => {\n                            b.addClass('list-group-item')\n                                .setStyle('cursor', 'pointer')\n                                .data('id', item.id)\n                                .text(item.name)\n                                .on('click', () => {\n                                this.checkIfQueryModified(() => this.loadQuery(item.id));\n                            });\n                        });\n                    });\n                }\n            });\n        }\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        if (typeof (options.syncQueryOnChange) == 'undefined') {\n            options.syncQueryOnChange = true;\n        }\n        return options;\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        let exportClass = \"eqjs-export\";\n        let queryContentInputId = \"QueryContentJson\";\n        let clearQueryButtonId = \"ClearQueryButton\";\n        let newQueryButtonId = \"NewQueryButton\";\n        let loadQueryButtonId = \"LoadQueryButton\";\n        let saveQueryButtonId = \"SaveQueryButton\";\n        let copyQueryButtonId = \"CopyQueryButton\";\n        let removeQueryButtonId = \"RemoveQueryButton\";\n        let storageButtonId = \"StorageDropButton\";\n        let fetchDataButtonId = \"FetchDataButton\";\n        let loadQueryFromFileButtonId = \"LoadQueryFromFileButton\";\n        let saveQueryToFileButtonId = \"SaveQueryToFileButton\";\n        let queryListPanelId = \"QueryListPanel\";\n        if (options.slots) {\n            queryContentInputId = options.slots.queryContentInput || queryContentInputId;\n            fetchDataButtonId = options.slots.fetchDataButton || fetchDataButtonId;\n            clearQueryButtonId = options.slots.clearQueryButton || clearQueryButtonId;\n            newQueryButtonId = options.slots.newQueryButton || newQueryButtonId;\n            loadQueryButtonId = options.slots.loadQueryButton || loadQueryButtonId;\n            saveQueryButtonId = options.slots.saveQueryButton || saveQueryButtonId;\n            copyQueryButtonId = options.slots.copyQueryButton || copyQueryButtonId;\n            removeQueryButtonId = options.slots.removeQueryButton || removeQueryButtonId;\n            storageButtonId = options.slots.storageButton || storageButtonId;\n            exportClass = options.slots.exportClass || exportClass;\n            loadQueryFromFileButtonId = options.slots.loadQueryFromFileButton || loadQueryFromFileButtonId;\n            saveQueryToFileButtonId = options.slots.saveQueryToFileButton || saveQueryToFileButtonId;\n            queryListPanelId = options.slots.queryListPanel || queryListPanelId;\n        }\n        this.exportButtons = this.domRoots.reduce((elems, root) => elems.concat(Array.from(root.querySelectorAll(`.${exportClass}`))), []);\n        if (!options.enableExport) {\n            this.hideExportButtons();\n        }\n        this.disableExportButtons();\n        this.exportButtons.forEach((button) => {\n            button.addEventListener('click', this.exportButtonClickHandler);\n        });\n        if (!this.fetchDataButton) {\n            this.fetchDataButton = this.resolveElement(fetchDataButtonId);\n            if (!this.fetchDataButton) {\n                this.fetchDataButton = this.resolveElement('ExecuteQueryButton'); //deprecated, should be removed on the next major update\n            }\n            if (this.fetchDataButton) {\n                this.fetchDataButton.addEventListener('click', this.fetchDataButtonClickHandler);\n            }\n        }\n        if (!this.clearQueryButton) {\n            this.clearQueryButton = this.resolveElement(clearQueryButtonId);\n            if (this.clearQueryButton) {\n                this.clearQueryButton.addEventListener('click', this.clearQueryButtonClickHandler);\n            }\n        }\n        if (!this.newQueryButton) {\n            this.newQueryButton = this.resolveElement(newQueryButtonId);\n            if (this.newQueryButton) {\n                this.newQueryButton.addEventListener('click', this.newQueryButtonClickHandler);\n            }\n        }\n        if (!this.loadQueryButton) {\n            this.loadQueryButton = this.resolveElement(loadQueryButtonId);\n            if (this.loadQueryButton) {\n                this.loadQueryButton.addEventListener('click', this.loadQueryButtonClickHandler);\n            }\n        }\n        if (!this.saveQueryButton) {\n            this.saveQueryButton = this.resolveElement(saveQueryButtonId);\n            if (this.saveQueryButton) {\n                this.saveQueryButton.addEventListener('click', this.saveQueryButtonClickHandler);\n            }\n        }\n        if (!this.copyQueryButton) {\n            this.copyQueryButton = this.resolveElement(copyQueryButtonId);\n            if (this.copyQueryButton) {\n                this.copyQueryButton.addEventListener('click', this.copyQueryButtonClickHandler);\n            }\n        }\n        if (!this.removeQueryButton) {\n            this.removeQueryButton = this.resolveElement(removeQueryButtonId);\n            if (this.removeQueryButton) {\n                this.removeQueryButton.addEventListener('click', this.removeQueryButtonClickHandler);\n            }\n        }\n        if (!this.storageDropButton) {\n            this.storageDropButton = this.resolveElement(storageButtonId);\n            if (this.storageDropButton) {\n                this.storageDropButton.addEventListener('click', this.storageButtonClickHandler);\n            }\n        }\n        if (!this.saveQueryToFileButton) {\n            this.saveQueryToFileButton = this.resolveElement(saveQueryToFileButtonId);\n            if (this.saveQueryToFileButton) {\n                this.saveQueryToFileButton.addEventListener('click', this.saveQueryToFileButtonClickHandler);\n            }\n        }\n        if (!this.queryListPanel) {\n            this.queryListPanel = this.resolveElement(queryListPanelId);\n            //For backward compatibility. Remove on the next update\n            if (!this.queryListPanel) {\n                this.queryListPanel = this.resolveElement('QueryListSlot');\n            }\n            if (this.queryListPanel) {\n                this.context.addEventListener('ready', () => {\n                    this.refreshQueryList();\n                });\n            }\n        }\n        if (!this.loadQueryFromFileButton) {\n            this.loadQueryFromFileButton = this.resolveElement(loadQueryFromFileButtonId);\n            if (this.loadQueryFromFileButton) {\n                this.loadQueryFromFileInput = document.createElement('input');\n                this.loadQueryFromFileInput.type = 'file';\n                this.loadQueryFromFileInput.accept = options.queryFileExtensions;\n                this.loadQueryFromFileInput.style.display = 'none';\n                document.body.appendChild(this.loadQueryFromFileInput);\n                this.loadQueryFromFileInput.addEventListener('change', this.loadQueryFromFileInputSelect.bind(this));\n                this.loadQueryFromFileButton.addEventListener('click', this.loadQueryFromFileButtonClickHandler);\n            }\n        }\n        // hide any dropdown menu when user clicks somewhere\n        window.addEventListener('click', this.outsideClickHandler);\n    }\n    initDone() {\n        super.initDone();\n        const query = this.context.getQuery();\n        query.addChangedCallback(this.queryChangedHandler);\n    }\n    /**\n    * Sends current query to the backend.\n    */\n    syncQuery() {\n        this.context.syncQuery({\n            success: (responseData) => {\n                if (responseData.statement) {\n                    this.context.refreshWidgets(WidgetGroup.Statement);\n                }\n            }\n        });\n    }\n    /**\n    * Disables export buttons.\n    */\n    disableExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.disabled = true;\n            if (!button.classList.contains(this.disabledClass)) {\n                button.classList.add(this.disabledClass);\n            }\n        });\n    }\n    /**\n    * Enables export buttons.\n    */\n    enableExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.disabled = false;\n            if (button.classList.contains(this.disabledClass)) {\n                button.classList.remove(this.disabledClass);\n            }\n        });\n    }\n    /**\n    * Hides export buttons.\n    */\n    hideExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.style.display = \"none\";\n        });\n    }\n    clearQueryButtonClick() {\n        this.context.clearQuery();\n        this.context.refreshWidgets(WidgetGroup.Statement);\n    }\n    createNewQuery(options) {\n        return this.context.newQuery(options);\n    }\n    loadQuery(queryId) {\n        if (!queryId)\n            return;\n        this.context.loadQuery({\n            queryId: queryId,\n            silent: false\n        });\n    }\n    saveQuery(success, error) {\n        this.context.saveQuery({\n            success: () => {\n                if (success)\n                    success();\n                this.context.getQuery().fireChangedEvent({\n                    part: QueryChangePart.Properties,\n                    wasModified: false\n                });\n                this.refreshQueryList();\n            },\n            error: error\n        });\n    }\n    saveCurrentQuery(copyQuery = false, callback) {\n        const query = this.context.getQuery();\n        if (query.isNewbie || copyQuery) {\n            this.showSaveQueryDialog((result) => new Promise(resolve => {\n                if (!result)\n                    return;\n                query.regenerateId();\n                query.setName(result);\n                query.fireChangedEvent({\n                    part: QueryChangePart.Properties,\n                    wasModified: true\n                });\n                this.saveQuery(() => { resolve({ success: true }); }, (error) => resolve({ success: false, message: error }));\n            }));\n        }\n        else {\n            this.saveQuery(callback);\n        }\n    }\n    checkIfQueryModified(callback) {\n        if (this.context.getQuery().isModified()\n            && !this.viewOptions.disableConfirmationOnQueryChange) {\n            this.showQueryChangedDialog((result) => {\n                if (result) {\n                    this.saveCurrentQuery(false, callback);\n                }\n                else {\n                    callback();\n                }\n            });\n        }\n        else {\n            callback();\n        }\n    }\n    removeCurrentQuery() {\n        this.context.removeQuery({\n            success: () => {\n                this.createNewQuery({\n                    useStorage: false\n                });\n                if (this.resultCountSlot) {\n                    this.resultCountSlot.style.display = \"none\";\n                }\n                this.context.clearResult();\n                this.refreshQueryList();\n            }\n        });\n    }\n    // ------------------ Dialog wrappers ---------------------\n    showNewQueryDialog(callback) {\n        const ds = this.context.getServices().getService('DialogService');\n        const defVal = i18n.getText('NewQueryDefName');\n        const dlg = ds.open({\n            title: i18n.getText('NewQueryTitle'),\n            body: this._querySaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('NewQueryContent');\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    if (!callback)\n                        return true;\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(value)\n                        .then(result => {\n                        header.removeChild(processEl);\n                        dlg.enableButtons();\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    showQueryChangedDialog(callback) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('QueryChangedTitle'), i18n.getText('QueryChangedContent'), callback);\n    }\n    showSaveQueryDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        const newQueryName = query.isNewbie\n            ? query.getName()\n            : i18n.getText('SaveQueryDefName').replace('{queryName}', query.getName());\n        const dlg = ds.open({\n            title: i18n.getText('SaveQueryTitle'),\n            body: this._querySaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = newQueryName;\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveQueryContent');\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    if (!callback)\n                        return true;\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(value)\n                        .then(result => {\n                        dlg.enableButtons();\n                        header.removeChild(processEl);\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    showRemoveQueryDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        ds.openConfirm(i18n.getText('RemoveQueryTitle'), i18n.getText('RemoveQueryContent').replace('{queryName}', query.getName()), callback);\n    }\n    showSaveQueryToFileDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        const body = this.renderSaveToFileDialogBody(query.getName());\n        const dlg = ds.open({\n            title: i18n.getText('SaveQueryToFileDlgTitle'),\n            body: body,\n            onSubmit: () => {\n                const fileNameInput = body.querySelector('#kdlgFileNameInput');\n                const fileName = fileNameInput ? fileNameInput.value : \"Query\";\n                const formatSelector = body.querySelector('#kdlgFileFormatSelector');\n                const format = formatSelector ? formatSelector.value : 'json';\n                if (callback) {\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(fileName, format)\n                        .then(result => {\n                        dlg.enableButtons();\n                        header.removeChild(processEl);\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                    return false;\n                }\n                return true;\n            }\n        });\n    }\n    renderSaveToFileDialogBody(name, format = \"json\") {\n        const isIE = browserUtils.isIE();\n        const fieldsClass = isIE\n            ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n            : 'kfrm-fields col-a-1 label-align-right';\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        return domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            b.addClass(fieldsClass)\n                .addChild('label', b => b\n                .attr('for', 'file_name')\n                .addText(i18n.getText('FileNameLabel')))\n                .addChild('div', b => b\n                .addClass(horizClass)\n                .addChild('input', b => b\n                .id('kdlgFileNameInput')\n                .name('file_name')\n                .type('text')\n                .attr('value', name))\n                .addChild('label', b => b\n                .addText('.'))\n                .addChild('div', b => b\n                .addClass('kfrm-select')\n                .addChild('select', b => b\n                .id('kdlgFileFormatSelector')\n                .addClass('kdlg-form-control')\n                .addOption({\n                value: 'xml',\n                selected: 'xml' === format\n            })\n                .addOption({\n                value: 'json',\n                selected: 'json' === format\n            }))));\n        })\n            .toDOM();\n    }\n    // ------------------ Query management buttons handler ---------------------\n    newQueryButtonClick() {\n        this.checkIfQueryModified(() => {\n            this.createNewQuery();\n        });\n    }\n    saveQueryToFileButtonClick() {\n        this.showSaveQueryToFileDialog((fileName, format) => new Promise((resolve) => {\n            this.context.getQueryFile({\n                fileName: fileName,\n                format: format,\n                success: () => resolve({ success: true }),\n                error: (error) => resolve({ success: false, message: error })\n            });\n        }));\n    }\n    loadQueryFromFileButtonClick() {\n        this.checkIfQueryModified(() => {\n            this.showLoadQueryFromFileDialog();\n        });\n    }\n    showLoadQueryFromFileDialog() {\n        this.loadQueryFromFileInput.click();\n    }\n    loadQueryFromFileInputSelect() {\n        const files = this.loadQueryFromFileInput.files;\n        const file = files.item(0);\n        const data = new FormData();\n        data.append(file.name, file);\n        this.loadQueryFromFileInput.value = \"\";\n        this.context.uploadQueryFile({\n            data: data,\n            success: () => {\n                this.syncQuery();\n                this.refreshQueryList();\n            }\n        });\n    }\n    loadQueryButtonClick() {\n        this.context.loadQueryList({\n            success: (data) => {\n                this.fillLoadQueryButtonMenu(data);\n                this.queryListMenu.showMenu({\n                    anchor: this.loadQueryButton,\n                    adjustHeight: false,\n                    itemSelectedCallback: (data) => {\n                        this.checkIfQueryModified(() => this.loadQuery(data.id));\n                    }\n                });\n            }\n        });\n    }\n    fillLoadQueryButtonMenu(queryList) {\n        const query = this.getContext().getQuery();\n        this.queryListMenu = new PopupMenu({\n            items: queryList.map(item => ({ id: item.id, text: item.name })),\n            selectedIds: query.getId()\n        });\n    }\n    saveQueryButtonClick() {\n        this.saveCurrentQuery();\n    }\n    copyQueryButtonClick() {\n        this.saveCurrentQuery(true);\n    }\n    removeQueryButtonClick() {\n        this.showRemoveQueryDialog((result) => {\n            if (result) {\n                this.removeCurrentQuery();\n            }\n        });\n    }\n    storageDropButtonClick() {\n        let container = this.storageDropButton.parentElement;\n        let content = container.querySelector(`.${this.dropdownContentClass}`);\n        if (content) {\n            window.setTimeout(() => content.classList.toggle(this.dropdownShowClass), 100);\n        }\n    }\n    fetchDataButtonClick() {\n        this.fetchData();\n    }\n    detach() {\n        this.enableExportButtons();\n        this.exportButtons.forEach((button) => {\n            button.removeEventListener('click', this.exportButtonClickHandler);\n        });\n        this.exportButtons = [];\n        if (this.fetchDataButton) {\n            this.fetchDataButton.removeEventListener('click', this.fetchDataButtonClickHandler);\n            this.fetchDataButton = null;\n        }\n        if (this.clearQueryButton) {\n            this.clearQueryButton.removeEventListener('click', this.clearQueryButtonClickHandler);\n            this.clearQueryButton = null;\n        }\n        if (this.newQueryButton) {\n            this.newQueryButton.removeEventListener('click', this.newQueryButtonClickHandler);\n            this.newQueryButton = null;\n        }\n        if (this.loadQueryButton) {\n            this.loadQueryButton.removeEventListener('click', this.loadQueryButtonClickHandler);\n            this.loadQueryButton = null;\n        }\n        if (this.saveQueryButton) {\n            this.saveQueryButton.removeEventListener('click', this.saveQueryButtonClickHandler);\n            this.saveQueryButton = null;\n        }\n        if (this.copyQueryButton) {\n            this.copyQueryButton.removeEventListener('click', this.copyQueryButtonClickHandler);\n            this.copyQueryButton = null;\n        }\n        if (this.removeQueryButton) {\n            this.removeQueryButton.removeEventListener('click', this.removeQueryButtonClickHandler);\n            this.removeQueryButton = null;\n        }\n        if (this.storageDropButton) {\n            this.storageDropButton.removeEventListener('click', this.storageButtonClickHandler);\n            this.storageDropButton = null;\n        }\n        if (this.saveQueryToFileButton) {\n            this.saveQueryToFileButton.removeEventListener('click', this.saveQueryToFileButtonClickHandler);\n            this.saveQueryToFileButton = null;\n        }\n        if (this.queryListPanel) {\n            this.queryListPanel = null;\n        }\n        if (this.loadQueryFromFileButton) {\n            if (this.loadQueryFromFileInput) {\n                document.body.removeChild(this.loadQueryFromFileInput);\n            }\n            this.loadQueryFromFileButton.removeEventListener('click', this.loadQueryFromFileButtonClickHandler);\n            this.loadQueryFromFileButton = null;\n        }\n        super.detach();\n    }\n}\n\n/**\n * The view that represents a data-filtering scenario (a text search for one entity/table)\n */\nclass DataFilterView extends View {\n    constructor() {\n        super();\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        options.result.fetchEmptyQueries = true;\n        const query = this.context.getQuery();\n        query.addChangedCallback(() => {\n            if (this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n            }\n            if (options.syncQueryOnChange) {\n                this.context.syncQuery();\n            }\n        });\n        this.context.addEventListener('ready', this.fetchData.bind(this));\n        return options;\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        if (this.sortingBarWidget) {\n            this.context.getQuery().addChangedCallback((ev) => {\n                const edata = ev.data;\n                if (!edata || (edata.part != QueryChangePart.SortingColumns\n                    && edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                    return;\n                }\n                this.fetchData();\n            });\n        }\n        if (this.filterBarWidget) {\n            const widgetType = this.filterBarWidget.getWidgetType();\n            options.widgets[widgetType] = options.widgets[widgetType] || {};\n            if (!options.widgets[widgetType].applyFilterCallback) {\n                options.widgets[widgetType].applyFilterCallback = () => {\n                    this.fetchData();\n                };\n            }\n        }\n    }\n    /**\n     * Obsolete. Left for backward compatibility.\n     * Use fetchData() instead\n     * @deprecated Use `fetchData()`\n     */\n    applyQueryFilter() {\n        console.warn('applyQueryFilter is obsolete. Use fetchData instead');\n        this.fetchData();\n    }\n    fetchData() {\n        super.fetchData({ refresh: true });\n    }\n}\n\n/**\n * The EasyQuery client-side view that represents the UI for data filtering page\n */\nclass HtmlDataFilterView extends DataFilterView {\n    constructor() {\n        super();\n    }\n    /**\n    * Creates the widget that represents Result Grid.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createResultGridWidget(slotElement) {\n        return new EqHtmlGrid(slotElement);\n    }\n    /**\n     * Obsolete. Left for backward compatibility.\n     * Use fetchData() instead\n     */\n    applyQueryFilter() {\n        console.warn('applyQueryFilter is obsolete. Use fetchData instead');\n        this.fetchData();\n    }\n}\n\n/**\n * The view that represents the \"ad-hoc reporting\" scenario\n */\nclass ReportView extends View {\n    constructor() {\n        super();\n        this.reports = [];\n        this.reportCache = [];\n        this.exportButtons = [];\n        this.exportClass = \"eqjs-export\";\n        this.disabledClass = \"eqjs-disabled\";\n        this.enableExport = false;\n        this.useReportCache = true;\n        this.syncReportOnChange = true;\n        this._reportSaveTemplate = `<div id=\"kdlg-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-content\"></label>\r\n                <input type=\"text\" name=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-input\" />\r\n                <label for=\"kdlg-dialog-form-textarea\" id=\"kdlg-dialog-form-desc-label\"></label>\r\n                <textarea type=\"text\" name=\"kdlg-dialog-form-textarea\" id=\"kdlg-dialog-form-textarea\"></textarea>\r\n            </div>\r\n        </div>`;\n        this.context.useStoredQueryOnFetch = true;\n        this.exportButtonClickHandler = (srcElement, e) => {\n            if (!srcElement.classList.contains(this.disabledClass)) {\n                const format = srcElement.getAttribute(\"data-format\");\n                this.context.exportResult({ format: format });\n            }\n        };\n        this.clearReportButtonClickHandler = this.clearReportButtonClick.bind(this);\n        this.newReportButtonClickHandler = this.newReportButtonClick.bind(this);\n        this.loadReportButtonClickHandler = this.loadReportButtonClick.bind(this);\n        this.saveReportButtonClickHandler = this.saveReportButtonClick.bind(this);\n        this.removeReportButtonClickHandler = this.removeReportButtonClick.bind(this);\n        this.reloadReportDataButtonClickHandler = this.reloadReportDataButtonClick.bind(this);\n        browserUtils.onMobileModeChanged(_ => {\n            document.location.reload();\n        });\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        if (typeof (options.syncQueryOnChange) !== \"undefined\") {\n            this.syncReportOnChange = options.syncQueryOnChange;\n        }\n        if (typeof (options.syncReportOnChange) !== \"undefined\") {\n            this.syncReportOnChange = options.syncReportOnChange;\n        }\n        options.syncQueryOnChange = this.syncReportOnChange;\n        if (typeof (options.useReportCache) !== \"undefined\") {\n            this.useReportCache = options.useReportCache;\n        }\n        this.defaultReportId = options.defaultReportId;\n        return options;\n    }\n    initDone() {\n        super.initDone();\n        const query = this.context.getQuery();\n        query.addChangedCallback((event) => {\n            const eventData = event.data;\n            if (eventData) {\n                if (eventData.changeType == \"query.switched\") {\n                    this.context.clearResult();\n                    this.context.refreshWidgets(WidgetGroup.Result);\n                    this.context.refreshWidgets(WidgetGroup.Query);\n                }\n                else {\n                    this.disableExportButtons();\n                    if (this.resultCountSlot) {\n                        this.resultCountSlot.style.display = \"none\";\n                    }\n                }\n            }\n            //true if we just switched the report or changed facets (query was not changed)\n            let isLiteUpdate = !eventData\n                || eventData.changeType == \"query.switched\"\n                || eventData.part == QueryChangePart.ExtraData\n                || eventData.part == QueryChangePart.Facets;\n            let syncStarted = false;\n            if (this.syncReportOnChange) {\n                const needSync = eventData && eventData.changeType != \"query.switched\" && !eventData.noSync;\n                if (needSync) {\n                    syncStarted = true;\n                    this.syncReport({\n                        success: () => {\n                            // fetch data on query change\n                            if (!isLiteUpdate && this.viewOptions.fetchDataOnChange) {\n                                this.fetchData();\n                            }\n                        }\n                    });\n                }\n            }\n            // clear dataset result on query change\n            if (!isLiteUpdate && this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n                this.context.refreshWidgets(WidgetGroup.Result);\n            }\n            if (!isLiteUpdate && !syncStarted && this.viewOptions.fetchDataOnChange) {\n                this.fetchData();\n            }\n        });\n        window.setTimeout(() => {\n            this.context.loadQueryList({\n                success: (data) => {\n                    if (Array.isArray(data)) {\n                        this.reports = data;\n                        const exists = this.reports.filter(r => r.id == this.defaultReportId).length > 0;\n                        if (exists) {\n                            this.renderReportList({ reportId: this.defaultReportId });\n                        }\n                        else {\n                            this.renderReportList();\n                        }\n                    }\n                }\n            });\n        }, 100);\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        let clearReportButton = \"ClearReportButton\";\n        let newReportButton = \"NewReportButton\";\n        let loadReportButton = \"LoadReportButton\";\n        let saveReportButton = \"SaveReportButton\";\n        let removeReportButton = \"RemoveReportButton\";\n        let reloadReportDataButton = \"ReloadReportDataButton\";\n        let resultCountSpan = \"ResultCount\";\n        let exportButtons = \"ResultExportButtons\";\n        let exportClass = this.exportClass;\n        if (options.slots) {\n            resultCountSpan = options.slots.resultCountSpan || resultCountSpan;\n            exportButtons = options.slots.exportButtons || exportButtons;\n            clearReportButton = options.slots.clearReportButton || clearReportButton;\n            newReportButton = options.slots.newReportButton || newReportButton;\n            loadReportButton = options.slots.loadReportButton || loadReportButton;\n            saveReportButton = options.slots.saveReportButton || saveReportButton;\n            removeReportButton = options.slots.removeReportButton || removeReportButton;\n            reloadReportDataButton = options.slots.reloadReportDataButton || reloadReportDataButton;\n            exportClass = options.slots.exportClass || exportClass;\n        }\n        this.exportButtons = this.domRoots.reduce((elems, root) => elems.concat(Array.from(root.querySelectorAll(`.${exportClass}`))), []);\n        this.enableExport = options.enableExport;\n        if (this.enableExport) {\n            //Add event listener for export buttons\n            this.exportButtons.forEach((button) => {\n                button.addEventListener('click', this.exportButtonClickHandler);\n            });\n        }\n        else {\n            this.hideExportButtons();\n        }\n        this.exportButtonsContainer = this.resolveElement(exportButtons);\n        if (!this.clearReportButton) {\n            this.clearReportButton = this.resolveElement(clearReportButton);\n            if (this.clearReportButton) {\n                this.clearReportButton.addEventListener('click', this.clearReportButtonClickHandler);\n            }\n        }\n        if (!this.newReportButton) {\n            this.newReportButton = this.resolveElement(newReportButton);\n            if (this.newReportButton) {\n                this.newReportButton.addEventListener('click', this.newReportButtonClickHandler);\n            }\n        }\n        if (!this.loadReportButton) {\n            this.loadReportButton = this.resolveElement(loadReportButton);\n            if (this.loadReportButton) {\n                this.loadReportButton.addEventListener('click', this.loadReportButtonClickHandler);\n            }\n        }\n        if (!this.saveReportButton) {\n            this.saveReportButton = this.resolveElement(saveReportButton);\n            if (this.saveReportButton) {\n                this.saveReportButton.addEventListener('click', this.saveReportButtonClickHandler);\n            }\n        }\n        if (!this.removeReportButton) {\n            this.removeReportButton = this.resolveElement(removeReportButton);\n            if (this.removeReportButton) {\n                this.removeReportButton.addEventListener('click', this.removeReportButtonClickHandler);\n            }\n        }\n        if (!this.reloadReportDataButton) {\n            this.reloadReportDataButton = this.resolveElement(reloadReportDataButton);\n            //OBSOLETE: remove the next 3 lines. We just support the old default button ID here\n            if (!this.reloadReportDataButton) {\n                this.reloadReportDataButton = this.resolveElement('UpdateReportButton');\n            }\n            if (this.reloadReportDataButton) {\n                this.reloadReportDataButton.addEventListener('click', this.reloadReportDataButtonClickHandler);\n            }\n        }\n        this.reportListSlot = document.getElementById('ReportList');\n        this.resultCountSlot = this.resolveElement(resultCountSpan);\n    }\n    /**\n    * Creates a new report.\n    */\n    newReport() {\n        const ds = this.getDialogService();\n        const dlg = ds.open({\n            title: i18n.getText('NewReportDlgTitle'),\n            body: this._reportSaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = i18n.getText('NewReportDefName');\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveReportDlgLabel');\n                const label = document.getElementById('kdlg-dialog-form-desc-label');\n                label.innerHTML = i18n.getText('ReportDescLabel');\n                input.focus();\n            },\n            onSubmit: () => {\n                const nameInput = document.getElementById(`kdlg-dialog-form-input`);\n                const queryName = nameInput.value;\n                if (queryName && queryName.replace(/\\s/g, '').length > 0) {\n                    dlg.clearAlert();\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    const descInput = document.getElementById(`kdlg-dialog-form-textarea`);\n                    const queryDesc = descInput.value;\n                    this.context.newQuery({\n                        name: queryName,\n                        description: queryDesc,\n                        success: () => {\n                            dlg.close();\n                            const query = this.context.getQuery();\n                            const reportId = query.getId();\n                            this.insertIntoReportList({ id: reportId, name: query.getName(), description: query.getDescription() });\n                            this.renderReportList({ reportId: reportId });\n                        },\n                        error: (error) => {\n                            header.removeChild(processEl);\n                            dlg.enableButtons();\n                            dlg.showAlert(error, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    /**\n    * Loads report by ID.\n    * @param reportId The ID of the report to load.\n    */\n    loadReport(reportId) {\n        if (!reportId) {\n            throw 'Empty report ID!';\n        }\n        let reportToLoad = this.findReportById(reportId);\n        if (!reportToLoad)\n            return;\n        const self = this;\n        const query = self.context.getQuery();\n        const reportLoaded = () => {\n            this.renderReportProps();\n            this.context.resultTable.clear();\n            query.fireChangedEvent({\n                part: QueryChangePart.All,\n                noSync: true,\n                changeType: 'query.switched'\n            });\n            this.fetchData();\n        };\n        let reportContent = this.useReportCache ? this.getReportContentFromCache(reportToLoad) : null;\n        if (reportContent) {\n            query.clear();\n            query.loadFromJson(reportContent, { validate: false });\n            reportLoaded();\n        }\n        else {\n            this.context.loadQuery({\n                queryId: reportId,\n                silent: true,\n                success: () => {\n                    this.saveReportContentInCache(reportToLoad, query.toJSON());\n                    reportLoaded();\n                }\n            });\n        }\n        this.setActiveReport(reportId);\n    }\n    /**\n    * Shows the dialog to save the report with new name.\n    */\n    saveCurrentReportAs() {\n        const query = this.context.getQuery();\n        const ds = this.getDialogService();\n        const dlg = ds.open({\n            title: i18n.getText('SaveReportDlgTitle'),\n            body: this._reportSaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = query.getName();\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveReportDlgLabel');\n                const label = document.getElementById('kdlg-dialog-form-desc-label');\n                label.innerHTML = i18n.getText('ReportDescLabel');\n                const text = document.getElementById(`kdlg-dialog-form-textarea`);\n                text.value = query.getDescription();\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    query.setId(utils.generateId(value.replace(/\\s/g, '')));\n                    dlg.clearAlert();\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    const text = document.getElementById(`kdlg-dialog-form-textarea`);\n                    const desc = text.value;\n                    query.setDescription(desc);\n                    this.context.newQuery({\n                        clearQuery: false,\n                        name: value,\n                        success: () => {\n                            dlg.close();\n                            this.context.refreshWidgets(WidgetGroup.Query);\n                            const savedQuery = this.context.getQuery();\n                            const reportId = savedQuery.getId();\n                            this.fetchData();\n                            this.insertIntoReportList({ id: reportId, name: query.getName(), description: query.getDescription() });\n                            this.renderReportList({ reportId: reportId });\n                            this.setActiveReport(reportId);\n                            this.renderReportProps();\n                        },\n                        error: (error) => {\n                            header.removeChild(processEl);\n                            dlg.enableButtons();\n                            dlg.showAlert(error, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    /**\n    * Removes current report.\n    */\n    removeCurrentReport() {\n        const report = this.context.getQuery();\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('RemoveReportDlgTitle'), i18n.getText('RemoveReportContent').replace('{reportName}', report.getName()))\n            .then(result => {\n            if (result) {\n                const reportId = report.getId();\n                this.context.removeQuery({\n                    queryId: reportId,\n                    success: () => {\n                        const index = this.removeFromReportList(reportId);\n                        this.renderReportList({ reportIndex: index });\n                    }\n                });\n            }\n        });\n    }\n    /**\n    * Sends current report's query to back-end.\n    */\n    syncReport(options) {\n        if (this.useReportCache) {\n            const query = this.context.getQuery();\n            const currentReport = this.findReportById(query.getId());\n            if (currentReport) {\n                currentReport.lastUpdated = Date.now();\n                this.saveReportContentInCache(currentReport, query.toJSON());\n            }\n        }\n        this.context.syncQuery({\n            success: (responseData) => {\n                if (responseData.query) {\n                    this.context.refreshWidgets(WidgetGroup.Query);\n                }\n                if (responseData.statement) {\n                    this.context.refreshWidgets(WidgetGroup.Statement);\n                }\n                if (options && options.success) {\n                    options.success(responseData);\n                }\n            }\n        });\n    }\n    /**\n    * Sets active report.\n    * @param reportId The ID of the report to make active.\n    */\n    setActiveReport(reportId) {\n        let rlItems = this.reportListSlot.querySelectorAll('li');\n        for (let i = 0; i < rlItems.length; i++) {\n            const item = rlItems[i];\n            item.classList.remove('active');\n            const rid = item.getAttribute('data-rid');\n            if (rid === reportId) {\n                item.classList.add('active');\n            }\n        }\n    }\n    /**\n    * Renders current report.\n    */\n    renderReportProps() {\n        let query = this.context.getQuery();\n        let titleElem = document.getElementById('ReportTitle');\n        titleElem.innerHTML = query.getName();\n        const columnsPanel = document.querySelector('.columns-bar');\n        if (columnsPanel) {\n            columnsPanel.innerHTML = '<strong>Columns:</strong>';\n            let columns = query.getColumns();\n            for (let column of columns) {\n                columnsPanel.innerHTML += '<span class=\"label label-default\">' + column.caption + '</span> ';\n            }\n        }\n    }\n    /**\n    * Renders the list of reports.\n    * @param options The options. In particular, `options.reportIndex` defines which report should be active.\n    */\n    renderReportList(options) {\n        this.renderReportPanels();\n        if (!this.reportListSlot.matches('li')) {\n            this.reportListSlot.innerHTML = \"\";\n            options = options || { reportId: (this.reports.length > 0 ? this.reports[0].id : null) };\n            var ul = document.createElement('ul');\n            ul.className = 'list-group list-group-flush';\n            this.reportListSlot.appendChild(ul);\n            for (let report of this.reports) {\n                this.renderReportItemInList(report, ul);\n            }\n            if (options.reportId) {\n                this.loadReport(options.reportId);\n            }\n            if (typeof (options.reportIndex) !== \"undefined\") {\n                let idx = options.reportIndex;\n                if (idx >= this.reports.length)\n                    idx = this.reports.length - 1;\n                if (idx < 0 && this.reports.length > 0)\n                    idx = 0;\n                if (idx >= 0)\n                    this.loadReport(this.reports[idx].id);\n            }\n        }\n    }\n    detach() {\n        if (this.exportButtonsContainer) {\n            this.showExportButtons();\n            this.exportButtons.forEach((button) => {\n                button.removeEventListener('click', this.exportButtonClickHandler);\n            });\n            this.exportButtons = [];\n            this.exportButtonsContainer = null;\n        }\n        if (this.clearReportButton) {\n            this.clearReportButton.removeEventListener('click', this.clearReportButtonClickHandler);\n            this.clearReportButton = null;\n        }\n        if (this.newReportButton) {\n            this.newReportButton.removeEventListener('click', this.newReportButtonClickHandler);\n            this.newReportButton = null;\n        }\n        if (this.loadReportButton) {\n            this.loadReportButton.removeEventListener('click', this.loadReportButtonClickHandler);\n            this.loadReportButton = null;\n        }\n        if (this.saveReportButton) {\n            this.saveReportButton.addEventListener('click', this.saveReportButtonClickHandler);\n            this.saveReportButton = null;\n        }\n        if (this.removeReportButton) {\n            this.removeReportButton.removeEventListener('click', this.removeReportButtonClickHandler);\n            this.removeReportButton = null;\n        }\n        if (this.reloadReportDataButton) {\n            this.reloadReportDataButton.removeEventListener('click', this.reloadReportDataButtonClickHandler);\n            this.removeReportButton = null;\n        }\n        if (this.reportListSlot) {\n            this.reportListSlot.innerHTML = '';\n            this.reportListSlot = null;\n        }\n        if (this.resultCountSlot) {\n            this.resultCountSlot.innerHTML = '';\n            this.resultCountSlot = null;\n        }\n        super.detach();\n    }\n    /**\n    * Renders a single item in the list of reports.\n    * @param report The [[Report]] object to render.\n    * @param ul The [[HTMLUListElement]] to add the item to.\n    */\n    renderReportItemInList(report, ul) {\n        if (!ul) {\n            ul = this.reportListSlot.querySelector(\"ul\");\n        }\n        let reportName = report.name || report.description || \"\";\n        let li = document.createElement('li');\n        li.className = \"list-group-item\";\n        li.style.cursor = 'pointer';\n        li.setAttribute('data-rid', report.id);\n        li.innerText = reportName;\n        if (report.description) {\n            li.title = report.description;\n        }\n        li.addEventListener('click', (e) => {\n            const target = e.target;\n            const rid = target.getAttribute('data-rid');\n            this.loadReport(rid);\n        });\n        ul.appendChild(li);\n    }\n    /**\n    * Renders report panels.\n    */\n    renderReportPanels() {\n        const reportsContainer = document.getElementById(\"ReportsContainer\");\n        const noReportPanel = document.getElementById(\"NoReportPanel\");\n        if (this.reports.length > 0) {\n            this.hideElement(noReportPanel);\n            this.showElement(reportsContainer);\n        }\n        else {\n            this.hideElement(reportsContainer);\n            this.showElement(noReportPanel);\n        }\n    }\n    //TODO: Move these two functions to @easydata/ui\n    hideElement(element) {\n        if (element) {\n            element.style.visibility = 'hidden';\n        }\n    }\n    showElement(element) {\n        if (element) {\n            element.style.removeProperty('visibility');\n        }\n    }\n    /**\n    * Inserts the report to the list of reports.\n    * @param report The [[Report]] object to be inserted.\n    */\n    insertIntoReportList(report) {\n        this.reports.push(report);\n    }\n    /**\n    * Removes the report from the list of reports.\n    * @param reportId The ID of the report to be removed.\n    * @returns the index of removed report.\n    */\n    removeFromReportList(reportId) {\n        let index = this.indexOfReportById(reportId);\n        if (index >= 0)\n            this.reports.splice(index, 1);\n        return index;\n    }\n    indexOfReportById(reportId) {\n        for (let i = 0; i < this.reports.length; i++) {\n            if (this.reports[i].id === reportId)\n                return i;\n        }\n        return -1;\n    }\n    /**\n    * The handler of the \"Clear\" button click.\n    */\n    clearReportButtonClick() {\n        this.clearErrors();\n        this.context.clearQuery();\n    }\n    /**\n    * The handler of the \"Update\" button click.\n    */\n    reloadReportDataButtonClick() {\n        this.fetchData();\n    }\n    /**\n    * The handler of the \"Save\" button click.\n    */\n    saveReportButtonClick() {\n        this.saveCurrentReportAs();\n    }\n    /**\n    * The handler of the \"Load\" button click.\n    */\n    loadReportButtonClick() {\n        this.loadReport(\"LastQuery\");\n    }\n    /**\n    * The handler of the \"Remove\" button click.\n    */\n    removeReportButtonClick() {\n        this.removeCurrentReport();\n    }\n    /**\n    * The handler of the \"New\" button click.\n    */\n    newReportButtonClick() {\n        this.newReport();\n    }\n    /**\n    * The handler of errors.\n    * @param error The error object.\n    */\n    errorHandler(error) {\n    }\n    /**\n    * Clears the errors.\n    */\n    clearErrors() {\n    }\n    /**\n    * Disables export buttons.\n    */\n    disableExportButtons() {\n        this.hideExportButtons();\n    }\n    /**\n    * Enables export buttons.\n    */\n    enableExportButtons() {\n        this.showExportButtons();\n    }\n    /**\n    * Hides export buttons.\n    */\n    hideExportButtons() {\n        if (this.exportButtonsContainer) {\n            this.exportButtonsContainer.style.display = \"none\";\n        }\n    }\n    /**\n    * Shows export buttons.\n    */\n    showExportButtons() {\n        if (this.exportButtonsContainer) {\n            this.exportButtonsContainer.style.display = \"initial\";\n        }\n    }\n    /**\n     * Saves reports content to the cache.\n     * @param report  The report.\n     * @param content The content (Query serialized into JSON).\n     */\n    saveReportContentInCache(report, content) {\n        let item = this.findReportCacheItem(report.id);\n        if (!item) {\n            item = { id: report.id };\n            this.reportCache.push(item);\n        }\n        item.lastUpdated = report.lastUpdated;\n        item.content = content;\n    }\n    /**\n     * Gets the report content from cache.\n     * @param report The report.\n     * @returns Content of the report (Query in JSOn string)\n     */\n    getReportContentFromCache(report) {\n        let item = this.findReportCacheItem(report.id);\n        if (item && item.lastUpdated === report.lastUpdated) {\n            return item.content;\n        }\n        return null;\n    }\n    findReportById(id) {\n        for (let item of this.reports) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n    findReportCacheItem(id) {\n        for (let item of this.reportCache) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\nfunction addOldEasyQueryUIMapper() {\n    i18n.addMapper((info) => {\n        if (!info && !info.texts)\n            return;\n        for (let prop in info.texts) {\n            switch (prop) {\n                case 'PredicateTitle':\n                    info.texts['ConditionGroupTitle'] = info.texts[prop];\n                    break;\n                case 'RootPredicateTitle':\n                    info.texts['RootConditionGroupTitle'] = info.texts[prop];\n                    break;\n                case 'ErrIncorrectPredicateTitleFormat':\n                    info.texts['ErrIncorrectGroupTitleFormat'] = info.texts[prop];\n                    break;\n                case 'ButtonAddPredicate':\n                    info.texts['ButtonAddGroup'] = info.texts[prop];\n                    break;\n                case 'ButtonDelete':\n                    info.texts['CmdDelete'] = info.texts[prop];\n                    break;\n                case 'ButtonClear':\n                    info.texts['CmdClear'] = info.texts[prop];\n                    break;\n                case 'ButtonEnable':\n                    info.texts['CmdToggleEnable'] = info.texts[prop];\n                    break;\n                case 'ButtonAddCondition':\n                    info.texts['CmdAddCondition'] = info.texts[prop];\n                    break;\n                case 'ButtonAddGroup':\n                    info.texts['CmdAddCondGroup'] = info.texts[prop];\n                    break;\n            }\n        }\n    });\n}\nfunction addEasyQueryUITexts() {\n    i18n.updateDefaultTexts({\n        AltMenuAttribute: 'Attribute',\n        AltMenuConstantExpression: 'Constant expression',\n        ButtonApply: 'Apply',\n        ButtonCancel: 'Cancel',\n        ButtonClose: 'Close',\n        ButtonNext: 'Next',\n        ButtonPrev: 'Prev',\n        ButtonNow: 'Now',\n        ButtonOK: 'OK',\n        MenuEnable: 'Enabled',\n        MenuParameterization: 'Parameterized',\n        MenuJoinCond: 'Use in JOIN',\n        CmdClear: 'Clear',\n        CmdDelete: 'Delete',\n        CmdToggleEnable: 'Toggle enable',\n        CmdToggleEnableCustom: 'Custom Expression columns are not supported',\n        CmdAddCondition: 'Add condition',\n        CmdAddCondGroup: 'Add group of conditions',\n        ButtonSelectAll: 'Select all',\n        ButtonDeselectAll: 'Clear selection',\n        ButtonAddColumns: 'Add column(s)',\n        ButtonAddConditions: 'Add condition(s)',\n        CmdClickToAddCondition: '[Add new condition]',\n        CmdDeleteRow: 'Delete this row',\n        ErrIncorrectGroupTitleFormat: 'Incorrect condition group title format',\n        ErrNotNumber: ' is not a number',\n        ErrIncorrectInteger: 'Incorrect integer value',\n        ErrIncorrectNumberList: 'Incorrect list format',\n        False: 'False',\n        LinkTypeAll: 'all',\n        LinkTypeAny: 'any',\n        LinkTypeNone: 'none',\n        LinkTypeNotAll: 'not all',\n        ConjAll: 'and',\n        ConjAny: 'or',\n        ConjNotAll: 'and',\n        ConjNone: 'or',\n        MsgApplySelection: '[Apply selection]',\n        MsgAs: 'as',\n        MsgEmptyList: '(empty list)',\n        MsgEmptyListValue: '[select value]',\n        MsgEmptyScalarValue: '[enter value]',\n        MsgSubQueryValue: '[edit sub-query]',\n        MsgEmptyAttrValue: '[select attribute]',\n        MsgEmptyOperator: '[Unrecognized operator]',\n        MsgEmptyCustomSql: '[enter SQL expression]',\n        MsgCustomSql: '[Custom SQL]',\n        MsgNoResult: 'No result',\n        MsgResultCount: '{0} records found',\n        MsgOf: 'of',\n        ConditionGroupTitle: '{lt} of the following apply',\n        RootConditionGroupTitle: 'Select records where {lt} of the following apply',\n        StrAddConditions: 'Add conditions',\n        SubQueryDialogTitle: 'Edit sub-query',\n        SubQueryColumnTitle: 'Column:',\n        SubQueryEmptyColumn: '[select column]',\n        SubQueryQueryPanelCaption: 'Conditions',\n        True: 'True',\n        ButtonSorting: 'Sorting',\n        ButtonToAggr: 'Change to aggregate column',\n        ButtonToSimple: 'Change to simple column',\n        ButtonFormat: 'Display format',\n        CmdAscending: 'Ascending',\n        CmdClickToAddColumn: '[Add new column]',\n        CmdDeleteColumn: 'Delete column',\n        CmdDeleteSorting: 'Delete sorting',\n        CmdDescending: 'Descending',\n        CmdGroupSort: 'Sorting',\n        CmdGroupFormat: 'Display format',\n        CmdNotSorted: 'Not sorted',\n        ColTypeAggrFunc: 'Aggregate function',\n        ColTypeCompound: 'Calculated',\n        ColTypeGroup: 'Column type',\n        ColTypeSimple: 'Simple column',\n        HeaderExpression: 'Expression',\n        HeaderSorting: 'Sorting',\n        HeaderTitle: 'Title',\n        SortHeaderColumn: 'Column',\n        SortHeaderSorting: 'Sorting',\n        StrAddColumns: 'Add columns',\n        CustomExpression: 'Custom Expression',\n        AddAllForEntityText: '[Add all attributes]',\n        CmdMoveToStart: 'Move to start',\n        CmdMoveRight: 'Move right',\n        CmdMoveLeft: 'Move left',\n        CmdMoveToEnd: 'Move to the end',\n        CmdMoveUp: 'Move up',\n        CmdMoveDown: 'Move down',\n        ButtonMenu: 'Show menu',\n        CmdToSimple: 'Not aggregated',\n        CmdMoveToFirst: 'Move to the first',\n        CmdMoveToPrev: 'Move to the previous',\n        CmdMoveToNext: 'Move to the next',\n        CmdMoveToLast: 'Move to the last',\n        CmdHiddenColumn: 'Hidden',\n        RowButtonTitle: 'Click to see the available options',\n        EntityToggle: 'Toggle entity',\n        //FilterBar\n        StrNoFilterDefined: 'No filter defined',\n        StrNoFilterClickToAdd: 'No filter defined. Click to add a new condition',\n        //Time picker\n        HintHours: 'Hours',\n        HintMinutes: 'Minutes',\n        //advanced search view texts\n        RemoveQueryTitle: 'Confirmation',\n        RemoveQueryContent: 'Remove query [{queryName}]?',\n        NewQueryTitle: 'New query',\n        NewQueryContent: 'New query name: ',\n        NewQueryDefName: 'New query',\n        SaveQueryTitle: 'Save query',\n        SaveQueryContent: 'Query name: ',\n        SaveQueryDefName: '{queryName} copy',\n        QueryChangedTitle: 'Confirmation',\n        QueryChangedContent: 'The query was changed. Do you want to save it first?',\n        UpdateQuerySelector: '[click here to load the query]',\n        FileNameLabel: 'File name: ',\n        SaveQueryToFileDlgTitle: 'Save query to file',\n        //report view texts\n        NewReportDefName: 'New report',\n        NewReportDlgTitle: 'New report',\n        SaveReportDlgTitle: 'Save report',\n        SaveReportDlgLabel: 'Report name:',\n        ReportDescLabel: 'Description: ',\n        RemoveReportDlgTitle: 'Remove report',\n        RemoveReportContent: 'Are you sure you want to remove \\'{reportName}\\'?',\n        //facets\n        Facets: {\n            TotalRecordsLabel: 'Total records:',\n            AddMenuItems: {\n                Chart: 'Chart',\n                Pivot: 'Pivot table',\n                DataTable: 'Data table'\n            },\n            LoadDataDlgTitle: 'Downloading data',\n            LoadDataDlgContent: 'Records loaded: {loadedRecs}/{totalRecs}',\n            RefreshBtnTitle: 'Refresh',\n            ExportBtnTitle: 'Export',\n            MaximizeBtnTitle: 'Maximize',\n            RestoreBtnTitle: 'Restore Down',\n            RemoveFacetDlgTitle: 'Remove facet',\n            RemoveFacetDlgContent: `Are you sure, that you want to delete {facetTitle} tab?`,\n            DefaultDlgTitle: 'Setup facet',\n            DefaultFacetTitle: '',\n            NewFacetTitle: 'New Facet',\n            TabNameLabel: 'Tab name',\n            ErrQueryChanged: 'FAILED TO DISPLAY. QUERY WAS CHANGED',\n            ErrNotEnoughData: `We can't display the graph because not all data for this query is loaded. \r\n        The total number of records: {totalRecs}, currently loaded: {cachedRecs}. \r\n        You can [download the result]. Please note: this may take some time and consume a lot of memory.`,\n            ErrTooMuchData: 'Too much data. The grid is not able to display it',\n            Chart: {\n                FacetTitle: 'Chart',\n                DlgTitle: 'Chart settings',\n                DataColumnSelectorLabel: 'Data column',\n                LabelColumnSelectorLabel: 'Label column',\n                ChartTypeSelectorLabel: 'Chart type',\n                ShowLegendLabel: 'Show legend (if available)'\n            },\n            Pivot: {\n                FacetTitle: 'Pivot table',\n                DlgTitle: 'Pivot settings',\n                SwapBtnTitle: 'Swap column and row fields',\n                ColumnFieldSelectorLabel: 'Column field',\n                RowFieldSelectorLabel: 'Row field',\n                CellDataSelectorLabel: 'Cell data',\n                TotalsRowLabel: 'Totals row',\n                TotalsColLabel: 'Totals column',\n                TotalGridLabel: 'Total'\n            },\n            DataTable: {\n                FacetTitle: 'Result table',\n                DlgTitle: 'Table facet settings'\n            }\n        },\n        TotalsDlgLabel: 'Totals',\n        GrandTotalsLabel: 'Grand totals',\n        TotalsDlgTitle: 'Select totals',\n        //formats\n        ExportDlgTitle: 'Export result',\n        ExportDlgFmtLabel: 'Format',\n        'csv': 'CSV',\n        'excel': 'Excel',\n        'pdf': 'PDF',\n        'excel-html': 'HTML (Excel-compatible)',\n        // Aggregation settings\n        AggrSettings: {\n            GroupBtn: 'Group selected column(s)',\n            UngroupBtn: 'Ungroup columns',\n            AggrBtn: 'Aggregate selected column',\n            UnaggrBtn: 'Remove column aggregation',\n            GrandTotalsLabel: 'Show grand totals',\n            GroupCountsLabel: 'Show record count for groups',\n            AggrDialogTitle: 'Aggregation/grouping',\n            EnableAggrLabel: 'Enable aggregation',\n            SelectedError: 'Complete the action with selected column(s)',\n            NoGroupsOrAggrError: 'Add at least one group or aggregation',\n            NoGroupsOrGrandError: 'Add at least one group, or enable grand totals',\n            NoAggrOrCountError: 'Add at least one aggregation, or enable records count',\n            NoGroupsLabel: 'No groups',\n            NoAggrsLabel: 'No aggregations',\n            EmptySettingsLabel: '[ Click to setup ]'\n        },\n        ChartType: {\n            Area: 'Area chart',\n            Bar: 'Bar chart',\n            Column: 'Column chart',\n            Combo: 'Combo chart',\n            Doughnut: 'Doughnut chart',\n            Polar: 'Polar chart',\n            Radar: 'Radar chart',\n            Histogram: 'Histogram chart',\n            Line: 'Line chart',\n            SteppedLine: 'Stepped line chart',\n            Pie: 'Pie chart'\n        }\n    });\n}\naddOldEasyQueryUIMapper();\naddEasyQueryUITexts();\n\nconst services = EqServiceProvider.getInstance();\nservices.registerService('DialogService', () => new DefaultDialogService());\n\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector\n            || Element.prototype.webkitMatchesSelector;\n}\n// support NodeList forEach in IE11\nif (window['NodeList'] && !window['NodeList'].prototype.forEach) {\n    window['NodeList'].prototype.forEach = Array.prototype.forEach;\n}\n//find index in IE11\nif (!Array.prototype.findIndex) {\n    Array.prototype.findIndex = function (predicate) {\n        if (this == null) {\n            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n        for (var i = 0; i < length; i++) {\n            value = list[i];\n            if (predicate.call(thisArg, value, i, list)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nexport { AddRowRenderer, AdvancedSearchView, AggrFuncColumnRendererCB, AggrFuncColumnRendererCP, AggrSettingsDialog, AggrSettingsRenderer, AggregationBar, AttrColumnRendererCB, AttrColumnRendererCP, AttributeExpressionRenderer, BaseElementRenderer, ChartFacet, ChartJsWidget, ChartType, ChartWidget, ColumnAction, ColumnRendererCB, ColumnRendererCP, ColumnsBar, ColumnsPanel, ConditionAction, ConditionGroupRenderer, ConditionGroupRowRenderer, ConditionRenderer, ConstColumnRendererCP, CustomListExpressionRenderer, CustomSqlColumnRendererCP, DataFilterView, DataTableFacet, DateTimeExpressionRenderer, DomDropDownElementBuilder, DropDownRenderer, EasyGridWidget, EntitiesPanel, EqHtmlGrid, ExportDialog, ExportWidget, ExpressionRenderer, FacetContainer, FacetType, FilterBar, GoogleChartWidget, Grid, HtmlContentWidget, HtmlDataFilterView, InputExpressionRenderer, ListExpressionRenderer, ManageDrillDownWidget, OperatorRenderer, PivotTableFacet, PopupMenu, ProcessWidget, QPEditablePart, QueryPanel, ReportView, ResultFacet, ResultFacetsPanel, SimpleConditionRenderer, SortingBar, SqlListExpressionRenderer, StatementPanel, SubQueryExpressionRenderer, TextRenderer, View, browserUtils, dropdown };\n","import { Condition, CondTag, QueryColumn, Query, Tree, LinkType, DataModel, EqAggregatesContainer, equtils, registerEqContextResolver, EqContext, ExprTag, Expression } from '@easyquery/core';\nimport { HttpClient, EasyDataTable } from '@easydata/core';\nimport { DefaultDialogService, domel } from '@easydata/ui';\n\nconst majVer = 7;\nconst minVer = 2;\nconst magics = [45, 128, 231];\nMath.trunc = Math.trunc || function (x) {\n    if (isNaN(x)) {\n        return NaN;\n    }\n    if (x > 0) {\n        return Math.floor(x);\n    }\n    return Math.ceil(x);\n};\nconst lcv = {\n    __kt: 0,\n    versionNum: '' + majVer + '.' + minVer,\n    ck: function (key) {\n        if (!key || !key.length) {\n            this.__kt = -3;\n            return;\n        }\n        try {\n            var part1 = key.slice(0, key.length - 12);\n            var infoBytes = _bs(part1);\n            var part2 = key.slice(key.length - 12);\n            let ism = false;\n            for (const magic of magics) {\n                var edc = t36(magic);\n                if (part2[0] === edc[0] && part2[2] === edc[1]) {\n                    ism = true;\n                    break;\n                }\n            }\n            if (!ism) {\n                lcv.__kt = -1;\n            }\n            var idx = minVer % 4;\n            var shift = majVer + minVer;\n            if (part2[6 + idx] != encChar(shift, 19)) {\n                lcv.__kt = -2;\n                return;\n            }\n            if (part2[1] != encChar(infoBytes[3])) {\n                return;\n            }\n            lcv.__kt = part2[3] != encChar(infoBytes[5]) ? 2 : 3;\n            if (lcv.__kt === 2) {\n                var eds = `${f36(part2.substring(4, 6) + part2.substring(10))}`;\n                var ed = new Date(2000 + Number.parseInt(eds.substring(0, 2)), Number.parseInt(eds.substring(2, 4)) - 1, Number.parseInt(eds.substring(4)), 0, 0, 0, 0);\n                if (Date.now() > ed.getTime()) {\n                    lcv.__kt = 1;\n                }\n            }\n        }\n        catch (error) {\n        }\n    }\n};\nfunction encChar(x, b = 20) {\n    return String.fromCharCode(65 + x % b);\n}\nfunction _bs(str) {\n    var binary_string = urlatob(str);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction urlatob(str) {\n    var s = str;\n    s = s.replace(/-/g, '+');\n    s = s.replace(/_/g, '/');\n    switch (s.length % 4) {\n        case 0:\n            break;\n        case 2:\n            s += \"==\";\n            break;\n        case 3:\n            s += \"=\";\n            break;\n    }\n    return window.atob(s);\n}\nconst tokens = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\nfunction t36(val) {\n    var result = \"\";\n    while (val > 0) {\n        result = tokens[val % tokens.length] + result;\n        val /= tokens.length;\n    }\n    return result;\n}\nfunction f36(val) {\n    var d = 0;\n    for (var i = 0; i < val.length; ++i)\n        d += tokens.indexOf(val[i]) * Math.pow(tokens.length, val.length - i - 1);\n    return d;\n}\n\nclass ConditionEx extends Condition {\n    constructor() {\n        super(...arguments);\n        this.readOnly = false;\n        this.parameterized = false;\n        this.inJoin = false;\n    }\n    isReadOnly() {\n        return this.readOnly || (this.getParent() && this.getParent().isReadOnly());\n    }\n    setReadOnly(value) {\n        this.readOnly = value || (this.getParent() && this.getParent().isReadOnly());\n        this.conditions && this.conditions.forEach((cond) => {\n            cond.setReadOnly(value);\n        });\n    }\n    isParameterized() {\n        return this.parameterized;\n    }\n    setParameterized(value) {\n        this.parameterized = value;\n    }\n    isInJoin() {\n        return this.inJoin;\n    }\n    setInJoin(value) {\n        this.inJoin = value;\n    }\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (lcv.__kt <= 1)\n            return;\n        if (typeof data.readOnly !== 'undefined') {\n            this.setReadOnly(data.readOnly);\n        }\n        if (typeof data.inJoin !== 'undefined') {\n            this.setInJoin(data.inJoin);\n        }\n        if (typeof data.parameterized !== 'undefined') {\n            this.setParameterized(data.parameterized);\n        }\n        //if condition group\n        //this.linkType = data.linking;\n        if (data.conds) {\n            for (let i = 0; i < data.conds.length; i++) {\n                let newCond = this.query.createCondition();\n                newCond.loadFromData(model, data.conds[i]);\n                this.conditions.push(newCond);\n                newCond.setParent(this);\n            }\n        }\n    }\n    saveToData() {\n        let obj = super.saveToData();\n        if (lcv.__kt <= 1)\n            return obj;\n        if (this.isReadOnly()) {\n            obj.readOnly = this.isReadOnly();\n        }\n        if (this.isParameterized()) {\n            obj.parameterized = this.isParameterized();\n        }\n        if (this.isInJoin()) {\n            obj.inJoin = this.isInJoin();\n        }\n        if (this.tag == CondTag.Group) {\n            //if condition group\n            //obj.linking = this.linkType;\n            obj.conds = [];\n            for (let i = 0; i < this.conditions.length; i++) {\n                obj.conds.push(this.conditions[i].saveToData());\n            }\n        }\n        return obj;\n    }\n}\n\nclass QueryColumnEx extends QueryColumn {\n    constructor() {\n        super(...arguments);\n        this.readOnly = false;\n    }\n    isReadOnly() {\n        return this.readOnly;\n    }\n    setReadOnly(value) {\n        this.readOnly = value;\n    }\n    /**\n     * Loads column from its JSON representation object.\n     * @param model The Data Model.\n     * @param colData The JSON representation object.\n     */\n    loadFromData(model, colData) {\n        super.loadFromData(model, colData);\n        if (lcv.__kt <= 2)\n            return;\n        if (colData) {\n            if (typeof colData.readOnly != 'undefined') {\n                this.readOnly = colData.readOnly;\n            }\n        }\n    }\n    saveToData() {\n        let colData = super.saveToData();\n        if (lcv.__kt <= 2)\n            return colData;\n        if (this.isReadOnly()) {\n            colData.readOnly = this.isReadOnly();\n        }\n        return colData;\n    }\n}\n\nclass QueryEx extends Query {\n    constructor(model, options) {\n        super(model, null, options);\n    }\n    isEx() {\n        return lcv.__kt > 1;\n    }\n    createSubQuery() {\n        return new QueryEx(this.model, { context: this.context });\n    }\n    createCondition(tag = CondTag.Simple) {\n        if (lcv.__kt <= 1)\n            return super.createCondition(tag);\n        return new ConditionEx(this, tag);\n    }\n    createColumn(justsorted = false) {\n        if (lcv.__kt <= 1)\n            return super.createColumn(justsorted);\n        return new QueryColumnEx(this, justsorted);\n    }\n    /**\n     * Adds a condition group - a group of simple conditions (predicates) linked by AND or OR\n     * @param descriptor The descriptor of the new condition group.\n     * @returns The new search condition.\n     */\n    addConditionGroup(descriptor, addChildCondition = true) {\n        if (lcv.__kt <= 1)\n            return super.addConditionGroup(descriptor, addChildCondition);\n        let parent = descriptor.parent || this.getRootCondition();\n        let lType = descriptor.linking || (parent.linkType === LinkType.All ? LinkType.Any : LinkType.All);\n        let group = this.createCondition(CondTag.Group);\n        group.linkType = lType;\n        if (addChildCondition) {\n            let model = this.getModel();\n            let attr = model.getFirstUICAttr();\n            if (attr) {\n                let op = model.getDefaultOperatorForAttr(attr);\n                let cond = this.createSimpleConditionObject(attr, op, \"\");\n                group.addCondition(cond);\n            }\n        }\n        parent.addCondition(group);\n        return group;\n    }\n    addExtraConditionGroup(descriptor, addChildCondition = true) {\n        descriptor.parent = descriptor.parent || this.extraConditions;\n        if (lcv.__kt <= 1)\n            return super.addExtraConditionGroup(descriptor, addChildCondition);\n        return this.addConditionGroup(descriptor);\n    }\n    buildQueryPath() {\n        const model = this.getModel();\n        if (lcv.__kt <= 1)\n            return this.buildQueryPath();\n        if (model.getMainEntity())\n            return this.buildQueryPath();\n        const entities = this.getEntitiesInQuery();\n        if (entities.length == 0) {\n            throw Error(\"Cannon build path. Path is empty\");\n        }\n        let tree = new Tree(entities[0]);\n        for (let i = 1; i < entities.length; i++) {\n            const entity = entities[i];\n            if (tree.contains(entity)) {\n                continue;\n            }\n            let path = this.findPath(tree.value, entity);\n            if (path != null) {\n                //Add path to tree\n                tree = this.addPathToTree(tree, (path[0] === tree.value) ? path.slice(1) : path);\n            }\n            else {\n                throw Error(\"Unable to build query. Cannot build path.\");\n            }\n        }\n        tree.setParents();\n        return tree;\n    }\n    addPathToTree(tree, path) {\n        if (path.length == 0) {\n            return;\n        }\n        let pathAdded = false;\n        for (let child of tree.childs) {\n            if (child.value === path[0]) {\n                pathAdded = true;\n                if (path.length > 1)\n                    child = this.addPathToTree(child, path.slice(1));\n                break;\n            }\n        }\n        if (!pathAdded) {\n            let link = this.getModel().findLink(tree.value, path[0]);\n            if (link) {\n                let newNode = new Tree(path[0]);\n                tree.addChild(newNode);\n                if (path.length > 1)\n                    newNode = this.addPathToTree(newNode, path.slice(1));\n            }\n            else if (!tree.parent) {\n                let node = new Tree(tree);\n                tree = new Tree(path[0]);\n                tree.addChild(node);\n                if (path.length > 1)\n                    tree = this.addPathToTree(tree, path.slice(1));\n            }\n            else {\n                throw Error(\"Unable to build query. Cannot build path.\");\n            }\n        }\n        return tree;\n    }\n    findPath(entityFrom, entityTo) {\n        let curPath = [];\n        let curStep = [];\n        let nextStep = [];\n        let passedEntities = [];\n        let pathFound = false;\n        curPath.push(entityFrom);\n        curStep.push(curPath);\n        passedEntities.push(entityFrom);\n        while (!pathFound) {\n            nextStep = [];\n            for (let path of curStep) {\n                pathFound = this.checkPath(path, entityTo, nextStep, passedEntities);\n                if (pathFound) {\n                    path.push(entityTo);\n                    curPath = path;\n                    break;\n                }\n            }\n            curStep = [];\n            if (!pathFound) {\n                if (nextStep.length == 0)\n                    return null;\n                //copy nextStep to curStep\n                for (let path of nextStep)\n                    curStep.push(path);\n            }\n        }\n        return curPath;\n    }\n    checkPath(path, entityTo, nextStep, passedEntities) {\n        const endPoint = path[path.length - 1];\n        const entityLinks = this.getModel().getLinksByEntity(endPoint);\n        for (let link of entityLinks) {\n            let entity2 = null;\n            if (link.entityFrom == endPoint) {\n                entity2 = link.entityTo;\n            }\n            else {\n                entity2 = link.entityFrom;\n            }\n            if (entity2 == entityTo) { //if reach the destination\n                nextStep = [];\n                return true;\n            }\n            //if destination is not reached yet we add current node (entity2) to the path and proceed\n            if (path.indexOf(entity2) < 0 && passedEntities.indexOf(entity2) < 0) { //to prevent cycling\n                passedEntities.push(entity2);\n                let newPath = new Array();\n                newPath = newPath.concat(path);\n                newPath.push(entity2);\n                nextStep.push(newPath);\n            }\n        }\n        return false;\n    }\n}\n\nclass EqServerQueryStorage {\n    constructor(context) {\n        this.context = context;\n    }\n    init() {\n    }\n    newQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const model = this.context.getModel();\n        const modelId = options.modelId || (model ? model.getId() : \"\");\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        if (options.name) {\n            query.setName(options.name);\n        }\n        if (options.description) {\n            query.setDescription(options.description);\n        }\n        let requestData = {\n            'query': query.toJSONData()\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('NewQuery', { modelId: modelId });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    getQueryList(options) {\n        options = options || {};\n        const modelId = options.modelId || this.context.getModel().getId();\n        const url = this.context.resolveEndpoint('GetQueryList', { modelId: modelId });\n        const http = this.context.getServices().getHttpClient();\n        return http.get(url)\n            .then((responseData) => {\n            if (!responseData.queries) {\n                return Promise.reject({\n                    message: 'Wrong response format'\n                });\n            }\n            return responseData.queries;\n        });\n    }\n    loadQuery(options) {\n        options = options || {};\n        const model = this.context.getModel();\n        const query = this.context.getQuery();\n        const modelId = options.modelId || model.getId();\n        const queryId = options.queryId || query.getId();\n        const url = this.context.resolveEndpoint('GetQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.get(url)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    saveQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const queryId = options.queryId || query.getId();\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        const modelId = options.modelId || query.getModel().getId();\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        let requestData = {\n            'query': query.toJSONData()\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('SaveQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.put(url, requestData)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    removeQuery(options) {\n        options = options || {};\n        const context = this.context;\n        const query = context.getQuery();\n        const modelId = options.modelId || query.getModel().getId();\n        const queryId = options.queryId || query.getId();\n        let requestData = {\n            'modelId': modelId,\n            'queryId': queryId\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('RemoveQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.delete(url, requestData).getPromise();\n    }\n}\n\nclass DataModelEx extends DataModel {\n}\n\nclass DataTableAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        //stores current totals by level (group) number\n        this.levelsTotals = [];\n        this.prevRow = null;\n        this.aggrContainer = new EqAggregatesContainer(context);\n    }\n    getAggrContainer() {\n        return this.aggrContainer;\n    }\n    initObjects() {\n        this.aggrSettings = this.context.getQuery().getAggregationSettings();\n        this.groups = this.aggrSettings.getGroups();\n        this.aggregates = this.aggrSettings.getAggregates();\n        this.aggrColIds = this.aggrSettings.getAggregates().map(a => a.colId);\n        this.aggrCols = this.context.resultTable.columns.getItems()\n            .filter(col => this.aggrColIds.indexOf(col.id) >= 0);\n        this.levelsTotals = [];\n        this.prevRow = null;\n    }\n    createColumnAggregatesObject() {\n        return {\n            sum: 0,\n            min: Number.MAX_VALUE,\n            max: Number.MIN_VALUE\n        };\n    }\n    calculate(options) {\n        this.initObjects();\n        this.aggrContainer.clear();\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        var levelNumber = this.groups.length + 1; //number of groups plus grand totals\n        for (let levelIndex = 0; levelIndex < levelNumber; levelIndex++) {\n            let levelTotals = { count: 0, columns: {} };\n            this.resetLevelTotals(levelTotals);\n            this.levelsTotals.push(levelTotals);\n        }\n        const allRows = this.context.resultTable.getCachedRows();\n        if (allRows.length > 0) {\n            for (const row of allRows) {\n                this.processDataRow(row);\n            }\n            //flusing the totals for all group levels\n            for (let levelIndex = 1; levelIndex < levelNumber; levelIndex++) {\n                this.flushLevelTotals(levelIndex);\n            }\n            //flusing the grand totals (if they are turned on)\n            if (this.aggrSettings.hasGrandTotals()) {\n                this.flushLevelTotals(0);\n            }\n        }\n        return Promise.resolve();\n    }\n    resetLevelTotals(rowTotals) {\n        for (const aggrCol of this.aggrCols) {\n            rowTotals.columns[aggrCol.id] = this.createColumnAggregatesObject();\n        }\n        rowTotals.count = 0;\n    }\n    processDataRow(row) {\n        const levelIndexChanged = this.checkLevelChange(row);\n        if (levelIndexChanged >= 0) {\n            for (let levelIndex = levelIndexChanged; levelIndex < this.levelsTotals.length; levelIndex++) {\n                this.flushLevelTotals(levelIndex);\n            }\n        }\n        if (this.aggrSettings.hasGrandTotals()) {\n            this.updateLevelTotals(0, row);\n        }\n        let levelIndex = 1;\n        for (const group of this.groups) {\n            this.updateLevelTotals(levelIndex, row);\n            levelIndex++;\n        }\n        this.prevRow = row;\n    }\n    /** Checks if the values in group columns were changed\n        and return the level number they were */\n    checkLevelChange(row) {\n        if (this.prevRow == null)\n            return -1;\n        for (let groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n            var group = this.groups[groupIndex];\n            for (const colId of group.columns) {\n                const value = row.getValue(colId);\n                const prevValue = this.prevRow.getValue(colId);\n                if (!this.aggrSettings.compareValues(prevValue, value)) {\n                    return groupIndex + 1;\n                }\n            }\n        }\n        return -1;\n    }\n    /** Saves the current values in levelData for the specified level to AggregateContainer\n        and then reset the data row for that level\n    */\n    flushLevelTotals(levelIndex) {\n        let levelTotals = this.levelsTotals[levelIndex];\n        const group = levelIndex > 0 ? this.groups[levelIndex - 1] : null;\n        let groupKey = this.aggrSettings.buildGroupKey(group, this.prevRow);\n        var groupTotals = {};\n        for (const aggr of this.aggregates) {\n            const columnTotals = levelTotals.columns[aggr.colId];\n            groupTotals[aggr.colId] = this.applyAggrFunc(aggr.funcId, columnTotals, levelTotals);\n        }\n        if (this.aggrSettings.hasRecordCount()) {\n            groupTotals[this.aggrSettings.COUNT_FIELD_NAME] = levelTotals.count;\n        }\n        this.aggrContainer.updateAggregateData(levelIndex, groupKey, groupTotals);\n        this.resetLevelTotals(levelTotals);\n    }\n    applyAggrFunc(funcId, columnTotals, levelTotals) {\n        switch (funcId) {\n            case \"SUM\":\n                return columnTotals.sum;\n            case \"AVG\":\n                return columnTotals.sum / levelTotals.count;\n            case \"COUNT\":\n            case \"CNTDST\":\n                return levelTotals.count;\n            case \"MIN\":\n                return columnTotals.min;\n            case \"MAX\":\n                return columnTotals.max;\n        }\n    }\n    /** Updates the totals by values in the current DataRow\n     * and according to the specified aggregate\n    */\n    updateLevelTotals(levelIndex, row) {\n        const levelTotals = this.levelsTotals[levelIndex];\n        levelTotals.count += 1;\n        for (const aggr of this.aggregates) {\n            const value = row.getValue(aggr.colId);\n            const columnTotals = levelTotals.columns[aggr.colId];\n            columnTotals.sum += value;\n            if (value < columnTotals.min) {\n                columnTotals.min = value;\n            }\n            if (value > columnTotals.max) {\n                columnTotals.max = value;\n            }\n        }\n    }\n    needRecalculation() {\n        return true;\n    }\n    reset() {\n    }\n}\n\nfunction strIsEmpty(str) {\n    if (str) {\n        return str.trim() === '';\n    }\n    else\n        return true;\n}\nconst baseLicApiUrl = 'https://account.korzh.com/api/license';\nconst eqVersion = lcv.versionNum;\nclass LCDialog {\n    constructor(context) {\n        this.http = new HttpClient();\n        this.context = context;\n    }\n    show() {\n        const dialogService = new DefaultDialogService();\n        this.dialogSet = dialogService.createSet([\n            {\n                closable: false,\n                cancelable: false,\n                submitOnEnter: true,\n                title: 'No license key for EasyQuery',\n                body: this.buildStartPage(),\n                submitButtonText: 'Submit',\n                onInput: this.validateForm.bind(this),\n                onSubmit: this.startPageOnSubmit.bind(this)\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitOnEnter: true,\n                title: 'Please check your inbox',\n                body: this.buildCodePage(),\n                submitButtonText: 'Get License Key',\n                onInput: this.validateForm.bind(this),\n                onSubmit: this.codePageOnSubmit.bind(this)\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitable: false,\n                title: 'Success',\n                body: this.buildSuccessPage()\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitable: false,\n                title: 'Failure',\n                body: this.buildFailurePage()\n            },\n        ]);\n        const dialog1 = this.dialogSet.open(0);\n        setTimeout(() => {\n            this.validateForm(dialog1);\n            const emailInput = document.getElementById('eqAuthEmail');\n            if (emailInput) {\n                emailInput.focus();\n            }\n        }, 200);\n    }\n    isValidForm(form) {\n        const emailInput = form.querySelector('#eqAuthEmail'); //form.querySelector('[name=\"email\"]') as HTMLInputElement;       \n        if (emailInput) {\n            return !strIsEmpty(emailInput.value) &&\n                emailInput.value\n                    .toLowerCase()\n                    .match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        }\n        const codeInput = form.querySelector('#eqAuthCode'); //form.querySelector('[name=\"code\"]') as HTMLInputElement;\n        if (codeInput) {\n            return !strIsEmpty(codeInput.value) &&\n                !isNaN(+codeInput.value) &&\n                codeInput.value == codeInput.value.trim() &&\n                codeInput.value.length === 6;\n        }\n        return true;\n    }\n    validateForm(dialog) {\n        const submitButton = dialog.getSubmitButtonElement();\n        submitButton.disabled = !this.isValidForm(dialog.getRootElement());\n    }\n    addInputField(parentBuilder, inputOptions) {\n        parentBuilder\n            .addChild('label', b => b\n            .attr('for', inputOptions.id)\n            .addHtml(`${inputOptions.label} ${inputOptions.required ? '<sup style=\"color: red\">*</sup>' : ''}: `))\n            .addChild('input', b => {\n            b.id(inputOptions.id);\n            b.name(inputOptions.name || inputOptions.id);\n            b.type(inputOptions.type || 'text');\n            if (typeof (inputOptions.value) !== 'undefined') {\n                b.value(inputOptions.value);\n            }\n            if (inputOptions.onInput) {\n                b.on('input', inputOptions.onInput);\n            }\n        });\n    }\n    buildStartPage() {\n        let form;\n        let controlsPanelBuilder;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">The EasyQuery license key is either absent, invalid or was issued for a different version of the library.</div>' +\n            '<div style=\"font-size:1.2em\">Please fill out the form to obtain a valid trial license key.</div>'));\n        formBuilder\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            controlsPanelBuilder = b;\n            b.addClass('kfrm-fields label-above');\n            b.addClass('kfrm-break-20');\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthEmail',\n            name: 'email',\n            label: 'Email',\n            required: true\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthName',\n            name: 'contactName',\n            label: 'Name (optional)',\n            required: false\n        });\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"margin-top:20px;font-size:0.9em\">* By clicking Submit, you agree with Korzh.com <a href=\"https://korzh.com/terms-of-use\">Terms of use</a>' +\n            ' and <a href=\"https://korzh.com/privacy\">Privacy policy</a>.</div>' +\n            '<div style=\"font-size:0.9em\">You also agree to receive email messages from Korzh.com. This consent may be revoked at any time.</div>'));\n        form = formBuilder.toDOM();\n        return form;\n    }\n    buildCodePage() {\n        let form;\n        let controlsPanelBuilder;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">We sent a confirmation code to <strong>{{email}}</strong>.</div>' +\n            '<div style=\"font-size:1.2em\">Please find it in the email and enter to the text box below</div>'));\n        formBuilder\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            controlsPanelBuilder = b;\n            b.addClass('kfrm-fields label-above');\n            b.addClass('kfrm-break-20');\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthCode',\n            name: 'code',\n            label: 'Confirmation code',\n            required: true\n        });\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"margin-top:20px;font-size:0.9em\">NB: Don\\'t forget to check your SPAM folder ' +\n            'if the message does not arrive within the next 5 minutes, and mark it as \"Not Spam\" if it\\'s found there.</div>'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    buildSuccessPage() {\n        let form;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">You have successfully completed the registration.</div>' + '{{message}}'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    buildFailurePage() {\n        let form;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('{{message}}'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    startPageOnSubmit(dlg) {\n        const emailInput = document.getElementById('eqAuthEmail');\n        const nameInput = document.getElementById('eqAuthName');\n        const authEmail = emailInput.value;\n        const authName = nameInput.value;\n        dlg.disableButtons();\n        this.http.post(equtils.combinePath(baseLicApiUrl, 'get-code'), {\n            email: authEmail,\n            name: authName,\n            data: {\n                ptag: this.context.backendInfo.type,\n                apptype: this.context.backendInfo.subType,\n            }\n        }, { dataType: 'json' })\n            .then(result => {\n            if (result.status !== 0) {\n                throw new Error(result.message);\n            }\n            const dlg = this.dialogSet.openNext({ email: authEmail });\n            setTimeout(() => {\n                this.validateForm(dlg);\n                const codeInput = document.getElementById('eqAuthCode');\n                if (codeInput) {\n                    codeInput.focus();\n                }\n            }, 200);\n        })\n            .catch(error => {\n            dlg.showAlert(error.message, \"error\", true);\n            dlg.enableButtons();\n        });\n        return false;\n    }\n    codePageOnSubmit(dlg) {\n        const codeInput = document.getElementById('eqAuthCode');\n        const authCode = codeInput.value;\n        dlg.disableButtons();\n        this.http.post(equtils.combinePath(baseLicApiUrl, 'get-key'), {\n            token: authCode,\n            ptag: this.context.backendInfo.type,\n            version: eqVersion\n        }, { dataType: 'json' })\n            .then(result => {\n            switch (result.status) {\n                case 0:\n                    const url = equtils.combinePath(this.context.getBaseEndpoint(), 'lck');\n                    this.http.post(url, {\n                        version: eqVersion,\n                        key: result.key\n                    }, { dataType: 'json' })\n                        .then(_ => this.dialogSet.open(2, {\n                        message: '<div style=\"font-size:1.2em\">Please restart your web application to get the key applied.</div>'\n                    }), _ => this.dialogSet.open(2, {\n                        message: '<div style=\"font-size:1.2em\">' +\n                            'Please visit <a href=\"https://account.korzh.com\">your account page on Korzh.com</a> to get the key ' +\n                            'and then add it to the <i>appsettings.json</i> file (in the <i>EasyQuery/LicenseKey</i> option).</div>'\n                    }));\n                    break;\n                case 2:\n                    this.dialogSet.open(3, {\n                        message: '<div style=\"font-size:1.2em\">Your trial license for EasyQuery has expired.</div>' +\n                            '<div style=\"font-size:1.2em\">Please <a href=\"https://korzh.com/support\">contact us</a> if you want to extend the trial period.</div>'\n                    });\n                    break;\n                case 3:\n                    this.dialogSet.open(3, {\n                        message: '<div style=\"font-size:1.2em\">The maintenance subscription for your EasyQuery license has expired.</div>' +\n                            '<div style=\"font-size:1.2em\">You need to <a href=\"https://account.korzh.com\">renew the subscription</a> to get a valid license.</div>'\n                    });\n                    break;\n                default:\n                    throw new Error(result.message);\n            }\n        })\n            .catch(error => {\n            dlg.showAlert(error.message, \"error\", true);\n            dlg.enableButtons();\n        });\n        return false;\n    }\n}\nfunction showNoLicenseAlert(context) {\n    if (lcv.__kt == -3) {\n        const lcd = new LCDialog(context);\n        lcd.show();\n    }\n    else {\n        let title, body, buttonTitle, buttonUrl;\n        switch (lcv.__kt) {\n            case 1:\n                title = 'EasyQuery trial has expired';\n                body = `Your trial period for EasyQuery has expired. \r\n        You can <a href=\"https://korzh.com/support\">submit a request to extend your trial</a> or <a href=\"https://korzh.com/easyquery#licensing\">buy a license</a> to get rid of all limitations.`;\n                buttonTitle = 'Buy a license';\n                buttonUrl = '#licensing';\n                break;\n            default:\n                title = `Invalid key for EasyQuery!`;\n                body = `The EasyQuery product key is either invalid or was issued for a different version of the library.\r\n        The version you are using now is ${eqVersion},\r\n        so please <a href=\"https://account.korzh.com\">login to your account</a> to get a proper key for version ${eqVersion}`;\n                buttonTitle = 'Get key';\n                buttonUrl = 'https://account.korzh.com';\n                break;\n        }\n        const ds = new DefaultDialogService();\n        const dlg = ds.open({\n            closable: false,\n            cancelable: false,\n            submitable: false,\n            title: title,\n            body: body\n        });\n        const footer = dlg.getRootElement().querySelector('footer');\n        domel(footer)\n            .removeClass('align-right')\n            .setStyle('justify-content', 'center')\n            .addChild('button', b => b\n            .addClass('kfrm-button', 'is-info')\n            .addText(buttonTitle)\n            .on('click', (e) => {\n            window.location.href = buttonUrl;\n        }));\n        if (lcv.__kt == 1) {\n            domel(footer)\n                .addChild('button', b => b\n                .addClass('kfrm-button')\n                .addText('Extend trial')\n                .on('click', (e) => {\n                window.location.href = 'https://account.korzh.com';\n            }));\n        }\n    }\n}\n\nclass EnterpriseEqContext extends EqContext {\n    useEnterprise(keyOrInitCallback) {\n        const func = (key) => {\n            lcv.ck(key);\n            if (lcv.__kt > 1) {\n                const services = this.getServices();\n                services.registerDataModelResolver(context => new DataModelEx());\n                services.registerQueryResolver(context => new QueryEx(context.getModel(), { context: context }));\n                services.registerQueryStorageResolver(context => new EqServerQueryStorage(context));\n                services.registerAggregatesCalculator(context => new DataTableAggregatesCalculator(context));\n                if (lcv.__kt === 2) {\n                    console.warn('EasyQuery.JS is working in the TRIAL MODE!\\n'\n                        + 'Please order a license (https://korzh.com/easyquery) to get a proper product key.');\n                    this.createTrialWM();\n                    setTimeout(() => {\n                        this.showTrialWM();\n                        setTimeout(() => { this.hideTrialWM(); }, 6000);\n                    }, 3000);\n                }\n            }\n            else {\n                showNoLicenseAlert(this);\n            }\n        };\n        if (typeof (keyOrInitCallback) === \"string\") {\n            func(keyOrInitCallback);\n        }\n        else if (typeof (keyOrInitCallback) === \"function\") {\n            const http = this.getServices().getHttpClient();\n            let url = equtils.combinePath(this.getBaseEndpoint(), 'lck2');\n            http.get(url)\n                .then(result => {\n                func(result.key.split(\"\").reverse().join(\"\"));\n                this.useBackend({\n                    type: result.backendType,\n                    subType: result.appType\n                });\n                keyOrInitCallback();\n            })\n                .catch(error => {\n                url = equtils.combinePath(this.getBaseEndpoint(), 'lck');\n                http.get(url)\n                    .then(result => {\n                    func(result.split(\"\").reverse().join(\"\"));\n                    keyOrInitCallback();\n                })\n                    .catch(error => this.throwError({\n                    action: \"LCK\",\n                    sourceError: error\n                }));\n            });\n        }\n        else {\n            throw new Error(\"Wrong type of 'keyOrInitCallback' parameter. It must be a string with a license key or a callback function.\");\n        }\n    }\n    createTrialWM() {\n        // we can rewrite it using shadow dom\n        // to make it impossible to hide using JS :)\n        let trialDiv = document.createElement(\"div\");\n        trialDiv.style.position = \"fixed\";\n        trialDiv.style.bottom = \"0\";\n        trialDiv.style.right = \"-400px\";\n        trialDiv.style.width = \"400px\";\n        trialDiv.style.height = \"100px\";\n        trialDiv.style.color = \"grey\";\n        trialDiv.style.textAlign = \"center\";\n        trialDiv.style.opacity = \"0.7\";\n        trialDiv.style.font = \"bold 1em Trebuchet MS, Tahoma, Verdana, Geneva, Arial, Helvetica, sans-serif\";\n        trialDiv.style.transition = \"right 3s ease-out\";\n        const header = document.createElement(\"div\");\n        const eq = document.createElement(\"span\");\n        eq.innerText = \"EasyQuery\";\n        eq.style.color = \"#3A94D4\";\n        eq.style.lineHeight = \"50px\";\n        header.appendChild(eq);\n        const korzh = document.createElement(\"span\");\n        korzh.innerText = \"by Korzh.com\";\n        korzh.style.marginLeft = \"10px\";\n        header.appendChild(korzh);\n        trialDiv.appendChild(header);\n        const trialOnly = document.createElement(\"div\");\n        trialOnly.innerText = \"FOR TRIAL USE ONLY\";\n        trialOnly.style.fontSize = \"1.2em\";\n        trialOnly.style.fontWeight = \"1000\";\n        trialDiv.appendChild(trialOnly);\n        document.body.appendChild(trialDiv);\n        this.trialDivElement = trialDiv;\n    }\n    showTrialWM() {\n        if (this.trialDivElement) {\n            this.trialDivElement.style.right = \"0\";\n        }\n    }\n    hideTrialWM() {\n        if (this.trialDivElement) {\n            this.trialDivElement.style.right = \"-400px\";\n            setTimeout(() => {\n                this.trialDivElement.parentNode.removeChild(this.trialDivElement);\n            }, 5000);\n        }\n    }\n}\nregisterEqContextResolver(() => new EnterpriseEqContext());\n\nclass EqServerAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        this._needRecalculation = true;\n        this.aggrContainer = new EqAggregatesContainer(context);\n    }\n    getAggrContainer() {\n        return this.aggrContainer;\n    }\n    calculate(options) {\n        this._needRecalculation = false;\n        this.aggrContainer.clear();\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        const levelPromises = [];\n        const query = this.context.createQuery();\n        query.loadFromData(this.context.getQuery().toJSONData());\n        const settings = this.context.getQuery().getAggregationSettings();\n        const aggregates = settings.getAggregates();\n        const aggrColIds = settings.getAggregates().map(a => a.colId);\n        const aggrCols = query.getColumns()\n            .filter(col => aggrColIds.indexOf(col.id) >= 0);\n        for (const col of aggrCols) {\n            query.changeColumnType(col, ExprTag.AggregateFunction, { funcId: aggregates.filter(a => a.colId == col.id)[0].funcId });\n        }\n        //get all non-aggregate columns\n        const queryCols = query.getColumns()\n            .filter(c => c.expr.tag !== ExprTag.AggregateFunction);\n        for (const col of queryCols) {\n            col.setHidden(true);\n        }\n        if (settings.hasRecordCount()) {\n            const col = query.createColumn();\n            col.caption = settings.COUNT_FIELD_NAME;\n            col['_id'] = settings.COUNT_FIELD_NAME;\n            const sqlText = 'COUNT(*)';\n            const customSqlExpr = new Expression(col);\n            customSqlExpr.tag = ExprTag.CustomSql;\n            customSqlExpr.sql = sqlText;\n            customSqlExpr.baseAttrId = null;\n            col.expr = customSqlExpr;\n            query.getColumns().push(col);\n        }\n        if (settings.hasGrandTotals()) {\n            levelPromises.push(this.processLevel({\n                query: query,\n                level: 0,\n                groupName: 'Grand Totals',\n                resultObtainedCallback: options.resultObtained,\n                errorOccurredCallback: options.errorOccurred\n            }));\n        }\n        const groups = settings.getGroups();\n        for (let level = 1; level <= groups.length; level++) {\n            const group = groups[level - 1];\n            for (const col of queryCols) {\n                col.setHidden(group.columns.indexOf(col.id) < 0);\n            }\n            levelPromises.push(this.processLevel({\n                query: query,\n                level: level,\n                groupName: group.name,\n                resultObtainedCallback: options.resultObtained,\n                errorOccurredCallback: options.errorOccurred\n            }));\n        }\n        return Promise.all(levelPromises)\n            .then(() => {\n            return;\n        })\n            .catch((error) => console.error(error));\n    }\n    processLevel(options) {\n        const fetcher = this.context.getServices()\n            .getDataFetcher(this.context);\n        let fetchOptions = {\n            aux: true,\n            query: options.query\n        };\n        if (this.context.debugMode) {\n            fetchOptions.debug = `Fetching group data. Group: '${options.groupName}', level: ${options.level}`;\n        }\n        const resultPromise = fetcher.fetchData(fetchOptions)\n            .then((result) => {\n            const dataTable = new EasyDataTable({\n                elasticChunks: true\n            });\n            const resultSet = result.resultSet;\n            for (const col of resultSet.cols) {\n                dataTable.columns.add(col);\n            }\n            for (const row of resultSet.rows) {\n                dataTable.addRow(row);\n            }\n            const levelData = this.buildLevelData(options.level, dataTable);\n            this.aggrContainer.setAggregateData(options.level, levelData);\n            if (options.resultObtainedCallback) {\n                options.resultObtainedCallback(result, options.level);\n            }\n        })\n            .catch((error) => {\n            if (options.errorOccurredCallback) {\n                options.errorOccurredCallback(Object.assign(Object.assign({}, error), { level: options.level }));\n            }\n        });\n        return resultPromise;\n    }\n    buildLevelData(level, dataTable) {\n        const aggrSettings = this.context.getQuery().getAggregationSettings();\n        const keyColumns = level > 0\n            ? aggrSettings.getGroups()[level - 1].columns\n            : [];\n        const valueColumns = aggrSettings.getAggregates().map(a => a.colId);\n        if (aggrSettings.hasRecordCount()) {\n            valueColumns.push(aggrSettings.COUNT_FIELD_NAME);\n        }\n        const data = new Map();\n        for (const row of dataTable.getCachedRows()) {\n            const key = {};\n            const value = {};\n            for (const keyCol of keyColumns) {\n                const colIdx = dataTable.columns.getIndex(keyCol);\n                if (colIdx >= 0) {\n                    let keyVal = row.getValue(keyCol);\n                    if (!aggrSettings.caseSensitiveGroups && typeof (keyVal) === 'string') {\n                        keyVal = keyVal.toLowerCase();\n                    }\n                    key[keyCol] = keyVal;\n                }\n            }\n            for (const valueCol of valueColumns) {\n                value[valueCol] = row.getValue(valueCol);\n            }\n            data.set(JSON.stringify(key), value);\n        }\n        return data;\n    }\n    needRecalculation() {\n        return this._needRecalculation;\n    }\n    reset() {\n        this._needRecalculation = true;\n    }\n}\n\nexport { ConditionEx, DataModelEx, EqServerAggregatesCalculator, EqServerQueryStorage, QueryColumnEx, QueryEx };\n","import { ReportView } from \"@easyquery/ui\";\nimport '@easyquery/enterprise';\nwindow.addEventListener('load', function () {\n    //Options for ReportViewJQuery\n    var viewOptions = {\n        calcTotals: true,\n        enableExport: true,\n        serverExporters: ['pdf', 'excel', 'excel-html', 'csv'],\n        //Saves report on each change\n        syncReportOnChange: true,\n        handlers: {\n            onError: function (context, error) {\n                console.error(error.sourceError);\n            }\n        },\n        result: {\n            //Show EasyChart\n            showChart: true,\n            //Paging options\n            paging: {\n                pageSize: 30\n            }\n        },\n        //Load model on start\n        loadModelOnStart: true,\n        //Default model's ID (we use it here just for a nice folder name in App_Data folder)\n        defaultModelId: 'adhoc-reporting'\n    };\n    var reportView = new ReportView();\n    reportView.getContext()\n        .useEndpoint('/api/adhoc-reporting')\n        .useEnterprise(function () {\n        reportView.init(viewOptions);\n    });\n    document['ReportView'] = reportView;\n});\n"],"names":["DataType","EntityAttrKind","EditorTag","Unknown","Edit","DateTime","List","CustomList","File","HttpMethod","utils","i18n","ColumnAlignment","liquid","LinkType","equtils","DataKind","HttpRequest","constructor","xhr","descriptor","this","method","url","headers","queryParams","data","setHeader","name","value","setQueryParam","getXMLHttpRequest","getResponseHeaders","readyState","HEADERS_RECEIVED","arr","getAllResponseHeaders","trim","split","headerMap","line","parts","header","shift","join","open","UNSENT","Object","keys","length","encodeURI","map","param","setRequestHeader","abort","getAllDataTypes","values","filter","item","getDateDataTypes","Time","Date","getStringDataTypes","String","Memo","FixedChar","_numericTypes","Byte","Word","Int32","Int64","Float","Currency","Autoinc","getNumericDataTypes","_intTypes","assignDeepCore","hashSet","target","sources","source","key","hasOwnProperty","sourceVal","has","get","Array","isArray","createArrayFrom","set","create","getPrototypeOf","collection","result","push","assign","args","i","assignDeep","WeakMap","getIfDefined","defaultValue","IsDefinedAndNotNull","copyArrayTo","collection1","collection2","len1","len2","findItemById","array","id","arrLength","idx","findItemIndexById","indexOfArrayItem","indexOf","len","moveArrayItem","index1","index2","splice","removeArrayItem","index","insertArrayItem","fillArray","start","end","relativeStart","k","Math","max","min","relativeEnd","undefined","final","shiftToFitWindow","absLeft","width","body","document","getElementsByTagName","winWidth","window","innerWidth","documentElement","clientWidth","absRight","isObject","val","isNumericType","dtype","isIntType","isNumeric","isNaN","parseFloat","isFinite","areCompatibleDataTypes","type1","type2","isPropSet","obj","propName","toLowerCase","toUpperCase","symbols","squeeze","str","maxlen","step","ch","nextIndex","getRandomInt","floor","random","safeParseInt","res","parseInt","generateId","prefix","prfx","squeezeMoniker","pml","ptt","randCharPart","randInt","intToNumBase","targetBase","buffer","rest","getNowTicks","getTime","strToDateTime","format","normalizedValue","replace","formatItems","dateItems","monthIndex","dayIndex","yearIndex","hourIndex","minutesIndex","secondsIndex","today","year","getFullYear","month","getMonth","day","getDate","getDaysInMonth","hour","minute","second","_a","strToTime","timeItems","HttpActionResult","request","promise","getPromise","getRequest","then","onfulfilled","onrejected","catch","onfinally","finally","HttpResponseError","Error","status","message","super","HttpClient","responseBody","_responseBody","defaultHeaders","customPayload","options","send","Get","post","Post","put","Put","Delete","dataType","contentType","XMLHttpRequest","desc","beforeEachRequest","console","warn","onRequest","dataToSend","JSON","stringify","Promise","resolve","reject","responseType","onerror","error","responseText","onreadystatechange","responseContentType","getResponseHeader","responseObj","response","parse","onResponse","decodeArrayBuffer","uintArray","reader","FileReader","onloadend","DONE","readAsText","Blob","currentLocale","englishUSLocaleSettings","shortDateFormat","longDateFormat","editDateFormat","shortTimeFormat","editTimeFormat","longTimeFormat","shortMonthNames","longMonthNames","shortWeekDayNames","longWeekDayNames","decimalSeparator","currency","defaultLocale","localeId","englishName","displayName","texts","ButtonOK","ButtonCancel","Yes","No","True","False","settings","allLocales","mappers","mapInfo","info","mapper","getCurrentLocale","setCurrentLocale","newLocale","getLocaleSettings","updateLocaleSettings","settingsToUpdate","updateLocaleInfo","localeData","localeInfoToUpdate","loadBrowserLocaleSettings","determineSettingsByLocale","now","dateStr","toLocaleDateString","timeStr","toLocaleTimeString","dateFormat","timeFormat","navigator","language","addMapper","getLocales","locale","sort","a","b","setLocale","l","getText","textsObj","resText","argLength","getOneLocaleSetting","getShortMonthName","monthNum","getLongMonthName","getShortWeekDayName","dayNum","toString","getLongWeekDayName","updateLocaleTexts","updateDefaultTexts","addLocale","localeInfo","resetLocales","DT_FORMAT_RGEX","dateTimeToStr","date","yearStr","getHours","getMinutes","getSeconds","hour12","isPm","matches","yyyy","yy","substring","MMMM","MMM","MM","M","dd","d","HH","H","hh","h","tt","mm","ss","match","$1","buildShortDateTimeFormat","localeSettings","buildLongDateTimeFormat","dateTimeToStrEx","dateTime","numberToStr","number","type","charAt","formatWithSequence","cachedSequenceFormats","v","Number","forEach","slice","toLocaleString","getNumberFormatOptions","digits","style","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","convertWithMask","mask","reverse","trunc","booleanToStr","bool","MetaEntity","parent","isEditable","caption","description","attributes","subEntities","loadFromData","model","dto","captionPlural","namePlur","ied","ents","newEntity","createEntity","attrs","newAttr","createEntityAttr","scan","processAttribute","processEntity","opts","stop","internalProcessEntity","entity","attrCount","attr","subEntityCount","getFirstPrimaryAttr","getPrimaryAttrs","isPrimaryKey","MetaEntityAttr","size","isForeignKey","isNullable","showOnView","showOnCreate","showOnEdit","showInLookup","lookupAttr","expr","kind","Data","cptn","ipk","ifk","lattr","lookupEntity","lent","dataAttr","dattr","lookupDataAttr","ldattr","isDataType","defVal","nul","ivis","sov","soc","soe","sil","displayFormat","dfmt","udata","userData","edtr","defaultEditor","getEditorById","createValueEditor","ValueEditor","tag","resType","defValue","defval","rtype","accept","multiline","subType","getValueText","text","MetaData","mainEntity","rootEntity","displayFormats","Map","getMainEntity","loadFromJSON","stringJson","version","vers","editors","newEditor","entroot","dtypeStr","formats","getDisplayFormats","getDisplayFormatsForType","getDefaultFormat","f","isdef","setData","isEmpty","getId","getName","getRootEntity","editorId","editor","getAttributeById","attrId","getEntityAttrById","checkAttrProperty","attribute","listByEntityWithFilter","filterFunc","ent","entIdx","newEnt","items","isEntity","attrIdx","listByEntity","resultEntities","resultAttributes","newOpts","includeRootData","sortCheck","sortEntities","attrPlacement","concat","clear","addDefaultValueEditors","ve","addOrUpdateValueEditor","getEntitiesTree","getEntitiesTreeWithFilter","getFullEntityPathByAttr","sep","getEntityPathByAttr","root","entityCaption","entityText","getAttributeText","attrText","entityPath","RegExp","runThroughEntities","getFirstAttributeByFilter","AggregationSettings","colStore","aggregates","groups","useGrandTotals","useRecordCount","_caseSensitiveGroups","COUNT_FIELD_NAME","caseSensitiveGroups","updateCompareProc","compareValues","strictCompare","caseInsensitiveCompare","addGroup","cols","columns","getColumnIds","from","to","validateColumns","hasColumnsInUse","addAggregateColumn","colIndexOrId","funcId","colId","validateAggregate","addGrandTotals","addCounts","getGroups","grp","getInternalGroups","lastGroup","getAggregates","hasAggregates","hasGroups","hasGrandTotals","hasRecordCount","drop","group","c","aggr","needAggrCalculation","saveToData","ugt","urc","csg","buildGroupKey","row","caseInsensitive","keyVal","getValue","value1","value2","DataColumn","label","originAttrId","isAggr","groupFooterColumnTemplate","gfct","calculatedWidth","DataColumnList","_dateColumnIdx","count","add","colOrDesc","col","updateDateColumnIdx","getItems","move","newIndex","oldIndex","getIndex","getDateColumnIndexes","removeAt","removeDate","DataRow","toArray","colIdOrIndex","RangeError","setValue","EasyDataTable","_chunkSize","_elasticChunks","cachedRows","total","loader","needTotal","isInMemory","chunkSize","elasticChunks","inMemory","_columns","onUpdate","colDesc","rows","rowData","createRow","addRow","getRows","params","fromIndex","pageSize","page","offset","limit","endIndex","loadChunk","prototype","apply","table","getCachedRows","getCachedCount","fireUpdated","getRow","getTotal","setTotal","dataOrRow","dateIdx","column","mapDate","rowOrValues","newRow","cachedTotal","totalIsKnown","EasyGuid","newGuid","r","EventEmitter","silentMode","events","subscribe","eventType","callback","event","getEventRecByType","eventCallback","eventCallbacks","unsubscribe","callbackId","fire","postpone","force","eventRec","eqevent","emitAllFunc","setTimeout","enterSilentMode","exitSilentMode","isSilent","renderLiquidTemplate","template","vars","liquidVarRegexp","x","NaN","ceil","FormatParser","formatStr","pos","exprNum","tokenText","skipSpaces","next","npos","token","npos1","npos2","getToken","combinePath","path1","path2","strToLinkType","All","NotAll","Any","None","linkTypeToStr","parseOperatorFormat","operator","convertValue","fromDataType","toDataType","resInt","resFloat","AggrFunction","sqlExpr","appliedTypes","aggrFunction","fmt","dtypes","getAppliedTypesOrDefault","BCD","EqValueEditor","sql","statement","extraParams","Operator","constValueFormat","isRange","caseIns","paramCount","defaultOperand","Operand","operands","pcnt","defOperand","newOperand","Scalar","operand","defText","txt","copyFrom","src","Entity","useInConditions","useInResult","useInSorting","uic","uir","uis","EntityAttr","defaultOperator","operators","defOperator","ops","EqEditorTag","SqlList","SubQuery","BindToParentColumn","DataModel","nullAttribute","nullOperator","aggrFunctions","dateMacros","timeMacros","links","newOperator","aggrfuncs","newAggrFunc","getObject","getAttributeByIdSafe","_listByEntityWithFilter","_listByEntity","addUIC","addUIR","addUIS","addOrUpdateOperator","op","removeOperator","soft","getOperatorIdsByDataType","Guid","Bool","findAggrFunctionById","func","findLink","entityFrom","entityTo","link","getLinksByEntity","getFirstUICAttr","getFirstUICAttrInEntity","findOperatorById","operatorId","opCount","getOperatorById","getDefaultOperatorIdForAttr","getAggrFunctionCaption","funcTexts","funcCaption","getAggrFunctionFormat","funcFormat","getDefaultOperatorForAttr","getOperand","Query","getAggrFunctions","isDateMacro","macroExpr","macroProcessor","macroId","isTimeMacro","getDateMacroValue","setDate","setMonth","getDay","setFullYear","getDateOrMacroValue","getTimeMacroValue","setMinutes","setHours","getTimeOrMacroValue","time","t","getAllDateMacros","getAllTimeMacros","ExprTag","QueryChangePart","QueryChangeAction","SortDirection","CondTag","ConditionPart","WidgetGroup","Expression","Constant","_value","distinct","_isDefaultValue","getParent","getModel","getQuery","Attribute","EntityAttribute","ParentEntityAttribute","query","subQuery","createSubQuery","loadFromDataOrJson","arg","baseAttrId","toJSONData","getExpressionIndex","silent","setContent","oldValue","expressionChanged","hasText","tryCopyValueFrom","QueryColumn","_id","sorting","getColumnSorting","_sorting","direction","setColumnSorting","sortIndex","getColumnSortIndex","_sortIndex","setColumnSortIndex","justsorted","enabled","_isHidden","blockId","isReadOnly","isJustSorted","setReadOnly","isHidden","setHidden","getDataType","colData","srt","srtidx","groupFooterColumnTemlate","hidden","fireChangedEvent","part","SortingColumns","Columns","action","Modify","changee","Condition","_enabled","conditions","cond","linkType","justAdded","expressions","setParent","getConditions","isGroup","Group","getLevel","isParameterized","setParameterized","isInJoin","setInJoin","clearConditions","addCondition","removeConditionAt","Simple","disabled","exprs","newExpr","linking","condPart","Conditions","tuneOperatorForAttr","getOperatorId","setOperatorId","newOperatorId","oldOperatorId","tuneValueExpressions","oldAttrId","exprCount","oldOperator","oldOperand","valExpr","createValueExpr","oldExpr","areCompitableEditors","oldEditor","addExpressionByOperand","valueNotDefined","defAttr","Tree","childs","addChild","contains","child","findNode","setParents","InvalidQueryError","isModified","_isModified","resetModified","enableAggregation","_enableAggregation","processQueryForAggregation","AggregateFunction","aggrSettings","extraData","innerData","isNewbie","parentQuery","drillDowns","syncSortOrderWithColumnsOrder","context","eventEmitter","extraConditions","sortedColumns","regenerateId","setDefaultName","attributeExprTag","attrTag","clientListRequestHandler","serverListRequestHandler","timezoneOffset","getTimezoneOffset","addChangedCallback","ev","aggregation","updateAggregationSettings","Aggregation","hasChanged","getAggregationSettings","j","find","useAggregation","settingsTuner","useDefaultAggregation","aggrCols","colsToGroup","aggrsToAdd","changeColumnType","wasModified","colToAggr","getColumns","colToGroup","groupColIds","groupedCols","sortedCols","Ascending","colIds","enabledColIds","prevIndex","isEx","reset","clearQuery","hasEnabledAggrColumns","setName","validate","entityAttrNotExistError","validateConditionGroup","getAggregatedColumns","tryValidate","e","curCond","condition","checkExpressions","parsedVal","loadFromJson","json","changeStatus","noErrors","clearDrillDowns","conds","condData","createCondition","justsortcols","newCol","createColumn","addColumnToSorted","col1","col2","fixupSortingIndices","dds","addDrillDown","createQuery","getDrillDowns","getParentQuery","findColumnById","setModel","loadModelData","toJSON","modelId","modelName","rootCondToData","condGroup","extraConds","isEmptyConditions","isEmptyColumns","clearColumns","clearExtraConditions","setId","getDescription","setDescription","getUsedInTotalsColumns","pop","colJson","isUnique","scol","getJustSortedColumns","getSortedColumns","colIdx","adjustColumnsSorting","getColumnById","addColumn","newColumn","attributeId","constValue","customSql","checkedOption","aggrFuncId","constType","CustomSql","allowCustomExpressions","getDefaultColumnCaption","readonly","fireColumnsChangedEvent","Add","addColumnObj","author","sqlText","customSqlExpr","moveColumn","removeColumn","addConditionGroup","addChildCondition","addExtraConditionGroup","addSimpleCondition","getRootCondition","createSimpleConditionObject","addSimpleExtraCondition","inputValues","attrExpr","valCount","valLength","removeColumns","columnsToRemove","justSortedColumns","removeFromArray","arrToRemove","ctrLen","fireProcessEvent","eventData","fireConditionsChangedEvent","runThroughConditions","processCondition","processGroup","predicate","getOneValueForAttr","opid","addProcessCallback","removeProcessCallback","removeChangedCallback","getConditionsText","getConditionGroupText","condText","conjKey","conjText","opId","plen","pi","macroText","getConditionsTextAsHtml","quoteExprText","getEntitiesInQuery","entities","addEntityByExpression","rootCond","fillEntitiesByCondtionGroup","buildQueryPath","tree","createTreeNodeFromEntity","subEnentity","BrowserQueryStorage","init","keyPrefix","queryListKey","queryKeyPrefix","getQueryList","itemsString","localStorage","getItem","err","newQuery","queryId","_saveQuery","loadQuery","queryItem","saveQuery","queryList","setItem","removeQuery","removeItem","EqModelLoader","modelPromise","getContext","createModelLoadingPromise","modelLoadingResolveFunc","modelLoadingRejectFunc","getModelPromise","startModelLoading","sendLoadModelRequest","EqServerModelLoader","http","getServices","getHttpClient","resolveEndpoint","responseData","EqServerDataFetcher","fetchData","fetchOptions","requestData","debug","chunk","aux","EqServerQuerySynchronizer","syncQuery","EqServerValueListResolver","loadValueList","listId","EqQueryFileLoader","getQueryFile","actionResult","blob","dispositionHeader","fileName","lastIndexOf","createElement","appendChild","display","href","URL","createObjectURL","download","click","revokeObjectURL","removeChild","uploadQueryFile","EqAggregatesContainer","levels","getAggregateData","level","groupKey","processFunc","keyStr","groupKeyToStr","getLevelDesc","receivedCallbacks","setAggregateData","updateAggregateData","createIfNotExists","DefaultAggregatesCalculator","aggrs","getAggrContainer","calculate","maxLevel","aggrColId","resultObtained","needRecalculation","EqServiceProvider","getInstance","_instance","modelLoader","queryStorage","querySynchronizer","dataFetcher","valueListResolver","queryFileLoader","aggrCalculator","services","httpClient","modelResolver","_","modelStorageResolver","queryResolver","modelLoaderResolver","queryStorageResolver","querySynchronizerResolver","vlrResolver","dataFetcherResolver","queryFileLoaderResolver","aggrCalculatoResolver","modelStorage","createDataModel","getModelLoader","getModelStorage","getQueryStorage","getQuerySynchronizer","getDataFetcher","getValueListResolver","getQueryFileLoader","getAggregatesCalculator","registerDataModelResolver","resolver","registerQueryResolver","registerModelLoaderResolver","registerModelStorageResolver","registerQueryStorageResolver","registerDataFetcherResolver","registerQuerySyncronizerResolver","registerValueListResolver","registerQueryFileLoaderResolver","registerAggregatesCalculator","registerService","serviceId","serviceResolver","getService","EqActionResult","EqAction","EmptyChunk","EqServerExporter","setFormat","exportOptions","filename","EasyQueryDataLoader","dataLoadPromise","success","dataTable","dataLoader","resultTable","resultSet","meta","totalRecords","hasNext","debugMode","fetchDataChunk","EqContext","attributeFormat","columnTitleFormat","servicesInitialized","internalListCache","loadModelOnStart","loadQueryOnStart","useStoredQueryOnFetch","_backendInfo","endpointVarsRegex","elasticPaging","_predefinedListRequestHandlers","_DSDE","onResult","_DSTE","_listRequestHandler","listName","editorParams","reqParams","attrPattern","prop","paramValue","requestParams","list","getListFromCache","processed","predefinedHandler","addListToCache","baseEndpoint","eqServices","widgets","exporters","endpoints","onResultTableUpdate","bind","errorHandlerId","addEventListener","msgTitle","msgText","sourceError","useEnterprise","keyOrInitCallback","registerExporter","registerServerExporter","exporter","getExporter","getExportFormats","addDefaultExporters","endpointKey","opt","optVal","setEndpoint","setEndpointIfNotExist","setDefaultEndpoints","endpointBase","initStart","setOptions","listCache","setExternalListCache","endpoint","handlers","onInit","afterLoadModel","afterLoadQuery","afterSyncQuery","afterFetchData","afterExportResult","onProcessStart","onProcessEnd","onError","removeEventListener","onListRequest","beforeLoadModel","beforeLoadQuery","beforeSyncQuery","beforeFetchData","beforeExportResult","initialQuery","defaultQueryId","defaultModelId","useDefaultExporters","serverExporters","widget","widgetOptions","getWidgetType","loadDefaultModel","fireEvent","backendInfo","useEndpoint","useBackend","addWidget","getAllWidgetsByType","widgetType","getWidgetByType","refreshWidgets","belongsToGroup","refresh","addQueryChangedCallback","removeQueryChangedCallback","dataModel","loadModelFromData","modelPlainData","setDefaultModelId","startProcess","endProcess","throwError","loadModel","Model","clearResult","resultStatement","resultContent","cache","externalListCache","getListCacheKey","resetListCache","getListRequestHandler","handler","handlerId","getBaseEndpoint","GetValueList","Result","Success","errorMessage","LoadModel","callWhenModelLoaded","callFunc","LoadQuery","limitCustomSqlColumns","Properties","loadQueryList","startQueryListLoading","LoadQueryList","queries","useStorage","onNewQuery","NewQuery","queryData","SaveQuery","RemoveQuery","SyncQuery","Statement","querySaved","q","QueryStatus","groupFetchSuccess","afterGroupFetch","GetQueryFile","UploadQueryFile","FetchData","calculator","errorOccurred","fetchDrillDownData","exportResult","ExportResult","export","getAttributeTitle","getColumnTitle","ParentColumn","eqContextResolver","registerEqContextResolver","eqconsts","browserUtils","constLists","ConstLists","SpecDateValues","isDefault","SpecTimeValues","BooleanValues","predicateLinkTypeList","Widget","slot","refreshCore","onProcessStartCore","onProcessEndCore","destroy","destroyCore","addElement","element","cssClass","className","addCssClass","hideElement","showElement","createBrowserEvent","eventName","Event","createEvent","initEvent","getViewportSize","height","clientHeight","innerHeight","getScrollPos","docElem","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementAbsolutePos","y","position","defaultBoundingClientRect","right","bottom","box","getBoundingClientRect","scollPos","clientTop","clientLeft","round","getWinSize","addEasyQueryCoreTexts","NewQueryName","Today","Yesterday","Tomorrow","FirstDayOfMonth","LastDayOfMonth","FirstDayOfWeek","FirstDayOfYear","FirstDayOfNextWeek","FirstDayOfNextMonth","FirstDayOfNextYear","Now","HourStart","Midnight","Noon","Entities","Attributes","Operators","AggregateFunctions","_isFirefox","_isIE","IsIE","ua","userAgent","IsEdge","includes","IsFirefox","_isMobileMode","mobileModeChangeHandler","_detectedIsMobileMode","detectIsMobileMode","isMobileMode","matchMedia","newValue","setIsMobileMode","onMobileModeChanged","getMobileCssClass","eqCssPrefix","DomElementBuilder","parentElement","childBuilder","builder","domel","addChildElement","attrValue","setAttribute","focus","title","dataId","dataValue","removeAttribute","show","removeStyle","hide","toHide","setStyle","visible","isVisible","offsetWidth","offsetHeight","getClientRects","addClass","classNames","fullList","classList","removeClass","remove","toggleClass","toggle","on","listener","eventTypes","off","styleId","styleValue","setProperty","removeProperty","innerText","html","innerHTML","oldElem","tagName","replaceWith","addText","textEl","createTextNode","addHtml","toDOM","appendTo","DomTextAreaElementBuilder","DomInputElementBuilder","valueAsDate","valueAsNumber","maskPattern","input","inputHandler","mskd","startSelection","selectionStart","el","test","selectionEnd","keyCode","preventDefault","selection","onlyLodash","dispatchEvent","char","fromCharCode","charCode","DomSelectElementBuilder","addOption","option","selected","HTMLDivElement","HTMLSpanElement","HTMLAnchorElement","HTMLButtonElement","HTMLImageElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","touchEventIsDefined","TouchEvent","DropEffect","EqDragEvent","dragImage","sourceEvent","dropEffect","Allow","pageX","pageY","MouseEvent","touches","Position","eqDragManager","DragManager","delta","draggableItem","finishedSuccessfully","mouseDownPosition","containerDescriptors","containerDescriptorIndex","classPrefix","DRAG_DISABLED_ATTR","registerDraggableItem","ondragstart","detectDragging","hasAttribute","stopPropagation","cursorPosition","abs","startDragging","mouseMoveEventListener","mouseMoveDragListener","beforeDragStart","cloneNode","renderer","updateCusror","updateImageClass","scope","updateDragItemPosition","onDragStart","mouseDownListener","mouseUpListener","endDraggind","dropContDesc","container","scopes","onDrop","onDragLeave","onDragEnd","registerDropContainer","removeDropContainer","descriptorOrSlot","descs","detectDragEnterEvent","dragEnterEvent","detectDragLeaveEvent","dragLeaveEvent","onDragOver","setCursorStyle","Forbid","cursor","children","onDragEnter","containerPos","AutoResizeColumns","GridColumnAlign","GridColumn","grid","isRowNum","_label","_description","align","NONE","dataColumn","widthOptions","columnWidths","alignment","MapAlignment","Left","LEFT","Center","CENTER","Right","RIGHT","default","rowNumColumn","GridColumnList","columnList","sync","hasRowNumCol","rowNumCol","onSyncGridColumn","cssPrefix$1","DFMT_REGEX","CellRendererType","StringCellRendererDefault","cellValueElement","rowElement","NumberCellRendererDefault","strValue","DateTimeCellRendererDefault","isDate","call","timeOptions","BoolCellRendererDefault","GridCellRendererStore","renderers","defaultRenderers","registerRenderer","setDefaultRenderer","STRING","NUMBER","DATETIME","BOOL","getDefaultRenderer","columnType","cellType","getCellType","getDefaultRendererByType","rendererType","getRenderer","EasyGrid","cssPrefix","pagination","paginationOptions","maxButtonCount","useBootstrap","defaultDataGridOptions","fixHeightOnFirstRender","syncGridColumns","useRowNumeration","allowDragDrop","paging","pageSizeItems","autoResize","Always","stringColumns","numberColumns","boolColumns","dateColumns","otherColumns","showPlusButton","viewportRowsCount","showActiveRow","rowsOnPagePromise","containerInitialHeight","firstRender","prevRowTotals","landingIndex","landingSlot","_activeRowIndex","mergeOptions","processColumnWidthsOptions","cellRendererStore","setSlot","colWidthOptions","pagingOptions","knownTypes","getElementById","getElementsByClassName","onRowClick","onRowDbClick","onPlusButtonClick","onColumnChanged","onColumnDeleted","onColumnMoved","onPageChanged","onActiveRowChanged","activeRowIndex","showLandingSlot","hideLandingSlot","columnId","getData","clearDOM","render","hasData","rootDiv","renderHeader","headerDiv","renderBody","bodyDiv","renderFooter","footerDiv","gridContainer","needAutoResize","Never","updateHeight","resizeColumns","firstRow","bodyCellContainerDiv","firstElementChild","viewportHeight","bodyViewportDiv","sbHeight","getContainerWidth","reduce","sum","current","headerViewportDiv","headerCellContainerDiv","headerRowDiv","hd","renderColumnHeader","renderHeaderButtons","containerWidth","colBuilder","colDiv","attrLabel","showAggrs","canShowAggregates","showProgress","getRowsToRender","hideProgress","rowsToRender","updateTotalsState","tr","renderRow","showGrandTotalsOnEachPage","isLastPage","onViewportKeydown","isLast","changeLevel","renderTotalsRow","applyGroupColumnTemplate","colIndex","renderCell","aggrContainer","isLastGroupColumn","groupColIndex","aggrColIndex","groupFooterTemplate","firstChild","cellDiv","rowCount","querySelectorAll","ensureRowVisibility","rowOrIndex","getDataRow","rowRect","viewportRect","rowTop","rowBottom","windowHeight","footerPaginateDiv","renderPageNavigator","pageInfoBlock","renderPageInfoBlock","pageInfoDiv","fistPageRecordNum","lastPageRecordNum","totalStr","getLocalIndexByGlobal","getGlobalIndexByLocal","indexGlobal","rowBuilder","rowIndex","colindex","cellElement","valueCell","cellRenderer","getCellRenderer","onGetCellRenderer","setPage","paginateDiv","buttonClickHandler","getAttribute","renderPageCell","pageIndex","content","extreme","active","li","newA","ul","cell","pageCount","zeroBasedIndex","firstPageIndex","lastPageIndex","allowPageSizeChange","selectChangeHandler","pageSizes","selectSize","sel","selOptions","selSet","Set","labelDiv","plusButtonTitle","colElems","rowElem","landingPos","newLandingIndex","colPos","insertBefore","updateActiveRow","activeRow","getActiveRow","visibility","sumWidth","headerCells","headerIdx","cellValues","maxWidth","whiteSpace","maxOption","minOption","Calendar","yearRange","currentDate","dateChanged","onDateChanged","DateTimePicker","calendar","timePicker","setDateTime","currentDateTime","setTime","getDateTime","showCalendar","createCalendar","showDateTimeInput","timePickerIsUsed","showTimePicker","oneClickDateSelection","dateTimeChanged","createTimePicker","onTimeChanged","anchor","beforeShow","onApply","cancel","onCancel","onDateTimeChanged","DefaultCalendar","daysOfWeek","months","calendarBody","isManualInputChanging","selectedMonth","selectedYear","rerenderMonth","renderManualDateInput","headerTextElem","renderCalendarButtons","getInputDateFormat","newDate","manualInputElem","jump","updateDisplayedDateValue","prev","selectMonthElem","selectYearElem","rerenderSelectYear","exec","minusYear","plusYear","firstDay","daysInMonth","dayOfWeek","onDrawDay","cellsDrawnInLastRow","cellsToDraw","TimePicker","currentTime","timeChanged","DefaultTimePicker","updateDisplayedTime","hoursInput","minutesInput","timeText","slidersBuilder","timeToDraw","DefaultDateTimePicker","sb","zIndex","renderButtons","globalMouseDownHandler","srcElement","nowButton","submitButton","calendarSlot","timePickerSlot","anchorPos","parentPos","DialogFooterAlignment","DefaultDialogService","openConfirm","closable","submitable","cancelable","onSubmit","openPrompt","submitOnEnter","arrangeParents","beforeOpen","processInput","dialog","DefaultDialog","onDestroy","dlg","untrack","track","createSet","DefaultDialogSet","openDialogs","openProgress","DefaultProgressDialog","getAllDialogs","closeAllDialogs","close","submitHandler","cancelHandler","keydownHandler","isActiveDialog","dialogId","windowElement","headerElement","alertElement","bodyElement","alignClass","footerAlignment","footerElement","bb","submitButtonText","recaptchaSiteKey","grecaptcha","ready","execute","cancelButtonText","getRootElement","getSubmitButtonElement","getCancelButtonElement","windowDiv","querySelector","clearAlert","onInput","onShow","submit","disableButtons","button","enableButtons","showAlert","reason","alert","windowDivs","turnOn","contentElement","progressElement","determinated","updateContent","updateProgress","progress","in01","num","dialogService","currentDialog","currentIndex","getCurrent","openNext","openPrev","dlgOptions","PRE_SELECT","JUMP_TO","safeFocus","addEasyDataUITexts","GridPageInfo","GridItemsPerPage","ButtonApply","ButtonNow","LblTotal","eqCssMobile","ColumnAction","QPEditablePart","ConditionAction","FacetType","ChartType","AggrFunc","FormFieldType","isIE","isFirefox","EntitiesPanel","queryChangedCallbackId","panel","renderProgressBlock","syncWithColumns","refreshCheckedStateByColumns","showIndicatorOnLoad","progressBlock","parentNode","showToolbar","showSelectAllButton","showClearSelectionButton","showAddColumnButton","showAddConditionButton","showCheckboxes","showTooltips","draggableAttributes","showAttributes","showFilterBox","filterBoxMode","autoClearSelection","entityRenderedCallback","attributeRenderedCallback","edata","rootEntityBlock","entTree","entityTreeBlock","renderEntity","createFilterBox","createToolPanel","block","entityBlock","entityNode","entityChildren","nodeLabel","nodeInput","attrNode","attrInput","nodeToggleButton","currentOffset","isAttributeInTree","divElem","itemsLength","checkbox","currentTarget","checked","checkboxes","attrList","attrElems","elem","filterBoxBlock","filterBoxInput","checkFilterAttribute","displayAttrCount","collapseAll","expandAll","defClass","toolPanelBlock","toolSelectAll","toolDeselectAll","toolAddColumns","toolAddCond","toolLeftBlock","toolRightBlock","selectAll","deselectAll","attrElements","self","attrElement","attrCaption","textContent","checkFilterText","filterText","exprColumns","entChildren","entElem","childNodes","nodeButtons","inputs","MenuLevel","applyItem","_applyItem","isFilteringMode","showSelected","parentMenu","menu","parentLevel","levelIndex","levelDiv","domWriteItemsId","menuId","itemRenderedCallback","itemDiv","activeItem","selectedItem","initialized","updated","renderContent","setItems","itemBgColor","colors","bgON","itemFgColor","fgON","bgOVER","itemFontFamily","itemStyle","fontFamily","itemFontSize","fontSize","multiselect","isSubQuery","baseDivBuilder","useDefaultStyles","border","baseDiv","hideButtons","applyDiv","applyBtn","borderBottom","padding","marginBottom","applyTextNode","buttons","cancelBtn","marginLeft","cancelText","hideMenu","searchBoxAlwaysShown","showSearchBoxAfter","searchDivBuilder","searchEditBoxBuilder","deactivateItem","renderItems","searchBox","moveActiveItemUp","moveActiveItemDown","openSubLevel","searchDiv","scrollDiv","tabIndex","overflowX","overflowY","which","getRootLevel","closeDiv","filteredItems","activateItem","menuItem","showSubLevel","subLevel","focusScrollDiv","turnCheckboxes","itemCheckbox","isItemSelected","setItemSelected","submitItems","selectedItems","allSubitemsAreFiltered","filterCallback","isItemDiv","isLevelDiv","getMenuItem","renderItemsWithoutFilter","activateOnMouseOver","itemFilterCallback","getItemFilterCallback","color","paddingLeft","paddingRight","cb","defaultChecked","margin","verticalAlign","itemText","showItemIds","itemTextNode","arrowSpan","arrowText","itemClickHandler","itemSelected","refreshCheckboxes","isCursorInside","renderItemsWithFilter","filterSections","pureFilterTexts","section","filterItems","renderItemWithFilter","matchesFilter","regexp","resultItems","restFilterSections","filterRegexp","groupItem","groupItemMatches","filterTexts","levelFilterText","highlightText","lowerText","lowerContent","insertValue1","insertValue2","indexInMas","itemOverBgColor","itemOverFgColor","fgOVER","itemClass","itemClassOver","backgroundColor","levelId","scroll","winSize","leftSpace","rightSpace","offsetParent","showAt","adjustTopPos","levelBottom","initLevelDiv","levelStyle","minItemWidth","maxItemWidth","maxHeight","newHeight","searchBoxAutoFocus","submitMenu","update","newItems","refreshItems","findItem","searchedText","PopupMenu","mouseIsOverBlock","mouseIsOverLink","toId","ancorFocused","adjustHeight","submitOnBlur","lastMenuID","updateProps","rootLevel","menuKeyUpHandler","stopImmediatePropagation","o","isOutside","menuLevel","shadow","commandTemplate","clearItemsMenuProps","clearItemMenuProps","setSelectedItems","selectedIds","showMenu","activeElement","itemSelectedCallback","menuClosedCallback","onMenuItemSelected","srcPos","anchorHeight","anchorWidth","findHighestZIndex","highest","zindex","defaultView","getComputedStyle","getPropertyValue","numZIndex","knockMenuStyle","DisplayFormatParser","s","getTokenText","ColumnRendererCP","functionMenu","formatsMenu","buttonMenu","isMouseOverBlock","keepShowingButtons","columnEnabled","getButtonsToShow","sortingButton","renderSoringButton","replaceChild","createFunctionMenu","createFormatsMenu","createButtonMenu","getClassesToAdd","renderCheckbox","renderExpressionBlock","showColumnTitles","renderCaptionBlock","renderEnabledButton","renderColumnTypeButton","renderColumnFormatButton","renderDeleteButton","renderMenuButton","onMouseEnter","onMouseLeave","accentActiveColumn","onMouseClick","alwaysShowButtons","showButtons","toggleColumnPicked","adjustButtonsVisibility","fireColumnChanged","inputEl","minWidth","isEndEvent","save","KeyboardEvent","FocusEvent","aEl","sortButtonCssClass","sortButtonDirectionCssClass","Descending","i18n$1","getUIS","sortMenu","moveMenu","Hidden","MoveTop","MoveDown","MoveUp","MoveBottom","SortingNone","SortingAsc","SortingDesc","buttonMenuHandler","leaveButtonBlock","evt","Menu","allowAggrColumns","changeTypeHandler","getFormatsMenuItems","allowDisplayFormatChange","changeFormatHandler","Enable","itemId","enterButtonBlock","isColumnActive","funcs","funcAllowed","colDataType","toInclude","areCustomExpressionsAllowed","menuOptions","curQuery","colMenu","getButtonMenuSelectedItems","processFormatsButtonMenuItems","processExtraButtonMenuItems","common","allowHiddenColumns","sortItems","allowSorting","getSortMenuList","getMoveMenuList","extra","getExtraButtonMenuItems","arrSelected","formatId","AttrColumnRendererCP","renderBaseExpression","baseAttr","showEntitiesMenu","baseExpressionItemSelectedCallback","attrid","updateBaseAttr","changeTypeToCustomSql","newElement","changeTypeToAggr","AggrFuncColumnRendererCP","arguments","displayFormatParser","exprBlockBuilder","arrFormat","parseDisplayFormat","functionLink","changeTypeToSimple","parser","EditableColumnRendererCP","dataTypeMenu","exprBlock","getColumnValue","colVal","setColumnValue","createDataTypeMenu","dataTypeLink","typeItem","CustomSqlColumnRendererCP","getDefaultValue","ConstColumnRendererCP","ColumnsPanel","activeColumn","showAddRow","showHeader","allowDuplicates","attrElementFormat","titleElementFormat","columnRenderedCallback","customExpressionText","showAddAllForEntity","detachQueryObserver","attachQueryObserver","moveColumnCore","addNewColumn","renderBaseElements","minusHeight","headerBuilder","columnsBlock","addRowElement","ids","queryEventCallbackId","focusedBefore","isFocusInside","modifyColumn","colEl","getColumnRenderer","newEl","focusElem","agjustHeaderVisibility","addColumnElement","deleteColumn","nextSibling","previousSibling","focusCond","rowElems","rowHeight","absPos","scrollIntoView","behavior","createEntitiesMenu","createColumnMenus","renderColumn","isActive","newColBlock","scrollToBottom","scrollHeight","checkColumnsArray","checkColumn","getColumnsBlock","addAllColumnsToEntitiesList","attrIds","unshift","entitiesList","adjustEntitiesMenuHeight","entitiesMenu","createSortMenu","createMoveMenu","colToMove","ColumnRendererCB","tapedTwice","bar","renderSortingImage","renderButtonsBlock","renderSortingButton","tapHandler","isFocused","ctrlKey","metaKey","clickEvent","buttonSortingClickHandler","buttonDeleteClickHandler","buttonTypeClickHandler","changeColumnTypeHandler","buttonFormatClickHandler","formatButtonIsShown","onHideButtonsMobile","onShowButtonsMobile","AttrColumnRendererCB","AggrFuncColumnRendererCB","EditableColumnRendererCB","CustomSqlColumnRendererCB","ConstColumnRendererCB","ColumnsBar","customQuery","sortMenuList","moveMenuList","addRowButton","elements","columnSlots","colSlot","colWidth","colHeight","paddingWidth","paddingHeight","renderAddRowButton","renderColumnButtonsBlockMobile","columnButtonsBlockMobileArrow","columnButtonsBlockMobile","buttonsBlockSortingButton","currentColumnRenderer","hideColumnButtonsMobile","buttonsBlockTypeButton","buttonsBlockFormatButton","buttonsBlockDeleteButton","showColumnButtonsMobile","columnRenderer","columnElement","currentActiveColumn","rect","offsetTop","offsetLeft","columnSlot","globalCounter","ColumnRendererSB","getArrow","sd","SortingBar","TextRenderer","ConditionRenderer","autoAppear","coreRender","onConditionRendered","SimpleConditionRenderer","renderConjunction","mayAppear","minLength","getOperatorRenderer","toAppear","exprRenderer","getExpressionRenderer","adjustWidth","accentActiveCondition","toggleConditionPicked","buttonsBlock","setConditionParameterized","setConditionInJoin","getConditionMenu","isFirstConditionInGroup","showConjunctions","linkTypeStr","conjuctionText","isConditionActive","alwaysShowButtonsInConditions","conditionMenuHandler","AddCondition","entMenu","getEntitiesMenu","descr","AddGroup","condMenu","getConditionMenuSelectedItems","Parameterized","InJoin","editableParts","Removal","Addition","onButtonMouseEnter","onButtonMouseLeave","buttonsToShow","DomDropDownElementBuilder","appear","onGetMenu","_onGetMenu","onItemSelected","_onItemSelected","ConditionGroupRenderer","isRoot","renderGroupRow","renderConditions","showRootRow","ConditionGroupRowRenderer","getConditionRenderer","buildGroupElements","getGroupTitle","groupTitle","curType","dropdown","getLinkTypeMenu","getConditionGroupMenu","alwaysShowButtonsInGroups","BaseElementRenderer","isEditMode","labelElement","renderLabelElement","renderEditor","showEditor","displayedText","getLabelText","getEmptyText","ExpressionRenderer","expression","valueEditor","onExpressionRendered","emptyTextValue","Value","validateInput","showValidationError","isEmptyValue","InputExpressionRenderer","inputBuilder","dontProcessBlur","validationResult","inputElement","closeEditor","MIN_WIDTH","inputValue","validateListInput","validateScalarInput","ListExpressionRenderer","menuItemsList","showWhenReady","adjustNewValue","emptyTextList","getListName","fillMenuItemsList","renderMenuBlock","showLoader","hideLoader","getValuesAsArray","selLength","multiSelect","queryPanel","menuContainer","showIdsForListItems","onComplete","takeDefaultValue","itemLen","CustomListExpressionRenderer","isLoading","onClickTemp","loaderElement","listRequestHandler","SqlListExpressionRenderer","AttributeExpressionRenderer","attrObj","attrFormat","emptyTextAttribute","DropDownRenderer","getMenu","AddRowRenderer","OperatorRenderer","operId","related","isRelatedToSubQuery","emptyTextOperator","DateTimeExpressionRenderer","dtp","internalDateFormat","internalTimeFormat","pickerOptions","convertToInternalFormat","dateTimePickerResolver","convertFromInternalFormat","SubQueryExpressionRenderer","dialogBlockBody","renderColumnBlock","renderQueryPanelBlock","exprType","colEntitiesList","colEntitiesMenu","columnBlock","setResultAttributeId","parentEl","subQueryPanelBlock","qpId","parentPanel","subOptions","entitiesListFilter","listItems","listOptions","subQueryPanelListOptions","subQueryPanel","clonePanel","rootCondEl","minHeight","subQueryDialogWidth","BindToParentColumnExpressionRenderer","attrDataType","QueryPanel","activeCondition","entitiesPopupHandler","allowParameterization","allowInJoinConditions","showPoweredBy","activateRootOnStart","subQueryDialogHeight","dialogZIndex","numberListSeparators","autoEditNewCondition","onGetConditionRenderer","onGetExpressionRenderer","onGetOperatorRenderer","onOperatorRendered","onGetAddRowRenderer","defaultQuery","hideLangindSlot","conditionMenu","linkTypeMenu","rootGroupMenu","groupMenu","modifyCondition","autoEdit","newCondContainer","lastChild","deleteCondition","dateFormatValue","dateFormatDisplay","createConditionMenus","createLinkTypeMenu","rootContainer","addrowRenderer","getAddRowRenderer","attributeMenu","FilterBar","applyOnClose","showApplyButton","showClearButton","headerClickListener","headerClickHandler","qpElement","applyBtnClick","applyFilter","clearBtnClick","clearFilter","showQueryPanel","slideDown","duration","overflow","paddingTop","paddingBottom","marginTop","boxSizing","transitionProperty","transitionDuration","qpBlock","updateHeader","hideQueryPanel","slideUp","headerTextElement","headerLinkElement","headerArrowBlock","headerArrowElement","textResize","headerIconElement","headerTextBlock","applyFilterCallback","Grid","useCustomLocaleSettings","beforeTableRendering","applyDisplayFormats","EasyGridWidget","hasCustomTotalsSettings","autoRefresh","gridOptions","addColumnClickHandler","columnMovedHandler","updateTotalsSettings","StatementPanel","statementText","ProcessWidget","__awaiter","thisArg","_arguments","P","generator","fulfilled","rejected","done","adopt","SuppressedError","ResultFacet","dialogTitle","canDisplayFlag","downloadAllClickHandler","getDialogService","loadElasticChunk","nextChunkStart","recordsToLoad","loadedRecords","contentDiv","displayMessageDiv","showSettingsDialog","ds","renderDialogContent","submited","submitSettingsDialog","afterDialogOpened","fieldsContainer","renderFormFields","form","cont","tabNameInput","canDisplay","showErrorMessage","showUnableDisplayMessage","hideUnableDisplayMessage","getType","onResize","ChartWidget","slotElement","chartType","Pie","supportedChartTypes","potentialLabelColumns","potentialDataColumns","labelColumn","dataColumns","showOnPaging","hideSettings","legend","hasColumnsForChart","prepareChartData","getSupportedChartTypes","getOptions","getChartTypeName","ct","Area","Bar","Column","Combo","Doughnut","Polar","Radar","Histogram","Line","SteppedLine","updateSettings","updateColumns","showLegend","updateChartColumns","colNum","colType","colLabel","initChart","hasChartTypes","getCurrentChartType","mainDiv","canDraw","chartTypeSelector","sopt","ctkey","settingsDiv","chartDiv","initSettingsDiv","chartSettingsBtn","toggleSettings","drawChart","addContentDiv","delay","drawCore","settingsHeader","labelColumnSelectorCaption","labelColumnSelector","dataDiv","dataColumnSelectorCaption","dataColumnSelector","getPotentialLabelColumns","getPotentialDataColumns","getLabelColumnIndex","getDataColumnIndex","first","toggleVisibility","complete","ChartJsWidget","chartLabels","chartColumns","hasChartJs","Chart","config","generateConfig","chartContext","getChartCanvas","canvases","borderColor","dataColors","datasetName","fillValue","dataset1","fill","stepped","steppedLine","displayLegend","getChartType","datasets","labels","GoogleChartWidget","hasGoogleCharts","google","charts","googleDataView","visualization","DataView","convertToGoogleFormat","convertToGoogleType","convertToGoogleValue","googleTable","DataTable","addRows","setCell","chartOptions","chartArea","getChartAreaWidth","pieHole","createChart","draw","setColumns","ColumnChart","BarChart","ComboChart","AreaChart","LineChart","SteppedAreaChart","PieChart","ChartFacet","chart","horizClass","getSettings","labelCol","dataCol","showLeg","PivotTableFacet","pivotTable","maxRowCount","defaultRenderer","rowEl","totalsRow","PivotTable","createAggrFuncSelectBuilder","aggrFunc","csb","aggrfunc","createColumnsSelectBuilder","allowedTypes","colName","formFieldType","getContextDataTable","firstNumericColIndex","optionIndex","ColumnField","RowField","CellData","totalsCol","colTypes","fieldTypes","colSelect","rowSelect","tmp","rowName","fieldName","validateSelectedField","aggrSelector","Count","Average","updatePivotData","dataSize","rowIdx","fieldIdx","columnField","columnCol","columnRow","rowLabel","rowType","colValues","rowValues","colValue","rowValue","null_columns","colFieldFormatter","formatNumber","formatDate","new_rows","calcAggrFunc","totalByRow","Min","Max","total_row","totalByCol","Sum","average","MAX_SAFE_INTEGER","fieldValue","MIN_SAFE_INTEGER","DataTableFacet","reinitGrid","gridResolver","addColumns","totals","DataGrid","FacetContainer","facets","facet","createFacetTab","ExportDialog","defFormat","ResultFacetsPanel","activeFacetIndex","showExportButton","showRefreshButton","showMaximizeButton","maximize2Window","showProcessIndicator","facetTypes","menuItems","menuItemsFilter","renderProcessBlock","loadFacets","reloadFacets","createAddMenu","validateAddFacetButton","renderActiveFacet","updateTotalRecords","addMenu","recordsDiv","exportDiv","_processBlock","tabsDiv","tabsUl","renderFacet","addFacetButton","addClickHandler","manageDiv","bdb","exportHandler","refreshHandler","maximizeButton","maximizeHandler","toWindow","isMaximized","facetTab","renderFacetTab","renderFacetSlot","settingsClickHandler","closeClickHandler","selectClickHandler","refreshFacetTabs","removeFacet","facetSlot","saveFacets","setActiveFacet","confirmed","createDefaultFacetIfNotExist","isActivate","Facets","Activate","fd","ExportWidget","enableExport","clickHandler","AggrSettingsRenderer","selectState","funcMap","onChanged","dropSelectState","dropState","setInitialState","changed","state","grandTotals","recordCount","getAvailableColumns","renderCore","slotb","currentGroup","groupBlockColumns","selectedBlockColumns","groupCounter","getGroupForColumn","groupBlock","aggrBlock","removeAggrBtnClickHandler","selectedBlock","buttonsContainer","groupBtnClickHandler","aggrBtnClickHandler","countsCheckboxChangeHandler","grandCheckboxChangeHandler","removeGroupBtnClickHandler","validateCheckboxes","prevElement","prevInputEl","nextInputEl","selector","selectedCols","isValid","hasSelected","hasAggrs","hasTotals","hasCounts","getValidationMessage","hasRecCount","isTaken","colCheckboxChangeHandler","getGroupIndexForColumn","findIndex","g1","g2","btn","AggrSettingsDialog","initQuery","enableAggrCheckBoxChangeHandler","closest","AggregationBar","linkClickCallback","getLinkText","groupArr","colNames","groupString","aggrArr","aggrString","mobClass","dialogLink","LocaleWidget","changeLocale","selectEl","locales","optionEl","displayLocaleName","QueryNameWidget","nameTemplate","nameSlot","asteriskSlot","tooltipSlot","queryName","queryDescription","View","domRoots","defaultViewOptions","disableConfirmationOnQueryChange","queryFileExtensions","clearResultOnQueryChange","showChart","resultGrid","viewOptions","resultOptions","resetContext","renderSpinner","createEqContext","shadowRoots","initOptions","initWidgets","initDone","easyGrid","exportWidget","columnsPanel","entitiesPanel","resultPanel","columnsBar","filterBar","processBar","statementPanel","queryNameLabel","facetsPanel","resultCount","exportButton","aggregationBar","slots","resultCountSpan","exportButtons","epElement","resolveElement","entitiesPanelWidget","createEntitiesPanelWidget","cpElement","columnsPanelWidget","createColumnsPanelWidget","cbElement","columnsBarWidget","createColumnsBarWidget","queryPanelWidget","createQueryPanelWidget","resultPanelSlot","resultGridWidget","gridPanel","createResultGridWidget","chartWidget","chartPanel","createChartWidget","qnElement","queryNameWidget","createQueryNameWidget","fbElement","filterBarWidget","createFilterBarWidget","sbElement","sortingBarWidget","createSortingBarWidget","pbElement","processWidget","createProcessWidget","stElement","statementPanelWidget","createStatementPanelWidget","clElement","createLocaleWidget","fpElement","resultFacetPanelWidget","createResultFacetsPanel","ewElement","createExportWidget","resultCountSlot","aggrbElement","aggregationBarWidget","createAggregationBarWidget","elementOrId","domRoot","resolveElementsByClassName","elemList","displayRecordsCount","setDialogService","executeQuery","fetchEmptyQueries","showResultSpinner","hideResultSpinner","toggleExportButtons","enableExportButtons","disableExportButtons","_spinnerDiv","chartWidgetResolver","resultGridResolver","detach","localeWidget","statementWidget","ReportView","reports","reportCache","exportClass","disabledClass","useReportCache","syncReportOnChange","_reportSaveTemplate","exportButtonClickHandler","clearReportButtonClickHandler","clearReportButtonClick","newReportButtonClickHandler","newReportButtonClick","loadReportButtonClickHandler","loadReportButtonClick","saveReportButtonClickHandler","saveReportButtonClick","removeReportButtonClickHandler","removeReportButtonClick","reloadReportDataButtonClickHandler","reloadReportDataButtonClick","location","reload","syncQueryOnChange","defaultReportId","changeType","isLiteUpdate","ExtraData","syncStarted","noSync","syncReport","fetchDataOnChange","renderReportList","reportId","clearReportButton","newReportButton","loadReportButton","saveReportButton","removeReportButton","reloadReportDataButton","elems","hideExportButtons","exportButtonsContainer","reportListSlot","newReport","processEl","queryDesc","insertIntoReportList","loadReport","reportToLoad","findReportById","reportLoaded","renderReportProps","reportContent","getReportContentFromCache","saveReportContentInCache","setActiveReport","saveCurrentReportAs","removeCurrentReport","report","removeFromReportList","reportIndex","currentReport","lastUpdated","rlItems","renderReportPanels","renderReportItemInList","showExportButtons","reportName","rid","reportsContainer","noReportPanel","indexOfReportById","clearErrors","errorHandler","findReportCacheItem","addOldEasyQueryUIMapper","addEasyQueryUITexts","AltMenuAttribute","AltMenuConstantExpression","ButtonClose","ButtonNext","ButtonPrev","MenuEnable","MenuParameterization","MenuJoinCond","CmdClear","CmdDelete","CmdToggleEnable","CmdToggleEnableCustom","CmdAddCondition","CmdAddCondGroup","ButtonSelectAll","ButtonDeselectAll","ButtonAddColumns","ButtonAddConditions","CmdClickToAddCondition","CmdDeleteRow","ErrIncorrectGroupTitleFormat","ErrNotNumber","ErrIncorrectInteger","ErrIncorrectNumberList","LinkTypeAll","LinkTypeAny","LinkTypeNone","LinkTypeNotAll","ConjAll","ConjAny","ConjNotAll","ConjNone","MsgApplySelection","MsgAs","MsgEmptyList","MsgEmptyListValue","MsgEmptyScalarValue","MsgSubQueryValue","MsgEmptyAttrValue","MsgEmptyOperator","MsgEmptyCustomSql","MsgCustomSql","MsgNoResult","MsgResultCount","MsgOf","ConditionGroupTitle","RootConditionGroupTitle","StrAddConditions","SubQueryDialogTitle","SubQueryColumnTitle","SubQueryEmptyColumn","SubQueryQueryPanelCaption","ButtonSorting","ButtonToAggr","ButtonToSimple","ButtonFormat","CmdAscending","CmdClickToAddColumn","CmdDeleteColumn","CmdDeleteSorting","CmdDescending","CmdGroupSort","CmdGroupFormat","CmdNotSorted","ColTypeAggrFunc","ColTypeCompound","ColTypeGroup","ColTypeSimple","HeaderExpression","HeaderSorting","HeaderTitle","SortHeaderColumn","SortHeaderSorting","StrAddColumns","CustomExpression","AddAllForEntityText","CmdMoveToStart","CmdMoveRight","CmdMoveLeft","CmdMoveToEnd","CmdMoveUp","CmdMoveDown","ButtonMenu","CmdToSimple","CmdMoveToFirst","CmdMoveToPrev","CmdMoveToNext","CmdMoveToLast","CmdHiddenColumn","RowButtonTitle","EntityToggle","StrNoFilterDefined","StrNoFilterClickToAdd","HintHours","HintMinutes","RemoveQueryTitle","RemoveQueryContent","NewQueryTitle","NewQueryContent","NewQueryDefName","SaveQueryTitle","SaveQueryContent","SaveQueryDefName","QueryChangedTitle","QueryChangedContent","UpdateQuerySelector","FileNameLabel","SaveQueryToFileDlgTitle","NewReportDefName","NewReportDlgTitle","SaveReportDlgTitle","SaveReportDlgLabel","ReportDescLabel","RemoveReportDlgTitle","RemoveReportContent","TotalRecordsLabel","AddMenuItems","Pivot","LoadDataDlgTitle","LoadDataDlgContent","RefreshBtnTitle","ExportBtnTitle","MaximizeBtnTitle","RestoreBtnTitle","RemoveFacetDlgTitle","RemoveFacetDlgContent","DefaultDlgTitle","DefaultFacetTitle","NewFacetTitle","TabNameLabel","ErrQueryChanged","ErrNotEnoughData","ErrTooMuchData","FacetTitle","DlgTitle","DataColumnSelectorLabel","LabelColumnSelectorLabel","ChartTypeSelectorLabel","ShowLegendLabel","SwapBtnTitle","ColumnFieldSelectorLabel","RowFieldSelectorLabel","CellDataSelectorLabel","TotalsRowLabel","TotalsColLabel","TotalGridLabel","TotalsDlgLabel","GrandTotalsLabel","TotalsDlgTitle","ExportDlgTitle","ExportDlgFmtLabel","csv","excel","pdf","AggrSettings","GroupBtn","UngroupBtn","AggrBtn","UnaggrBtn","GroupCountsLabel","AggrDialogTitle","EnableAggrLabel","SelectedError","NoGroupsOrAggrError","NoGroupsOrGrandError","NoAggrOrCountError","NoGroupsLabel","NoAggrsLabel","EmptySettingsLabel","Element","msMatchesSelector","webkitMatchesSelector","TypeError","magics","lcv","__kt","versionNum","ck","infoBytes","_bs","binary_string","urlatob","atob","bytes","Uint8Array","charCodeAt","part2","ism","magic","edc","t36","encChar","majVer","eds","f36","tokens","pow","ed","ConditionEx","readOnly","parameterized","inJoin","newCond","QueryColumnEx","QueryEx","lType","path","findPath","addPathToTree","pathAdded","newNode","node","curPath","curStep","nextStep","passedEntities","pathFound","checkPath","endPoint","entityLinks","entity2","newPath","EqServerQueryStorage","delete","DataModelEx","DataTableAggregatesCalculator","levelsTotals","prevRow","initObjects","aggrColIds","createColumnAggregatesObject","MAX_VALUE","MIN_VALUE","levelNumber","levelTotals","resetLevelTotals","allRows","processDataRow","flushLevelTotals","rowTotals","aggrCol","levelIndexChanged","checkLevelChange","updateLevelTotals","groupIndex","prevValue","groupTotals","columnTotals","applyAggrFunc","strIsEmpty","baseLicApiUrl","eqVersion","LCDialog","dialogSet","buildStartPage","validateForm","startPageOnSubmit","buildCodePage","codePageOnSubmit","buildSuccessPage","buildFailurePage","dialog1","emailInput","isValidForm","codeInput","addInputField","parentBuilder","inputOptions","required","controlsPanelBuilder","formBuilder","outerHTML","nameInput","authEmail","authName","email","ptag","apptype","authCode","EnterpriseEqContext","createTrialWM","showTrialWM","hideTrialWM","showNoLicenseAlert","buttonTitle","buttonUrl","footer","backendType","appType","trialDiv","textAlign","opacity","font","transition","eq","lineHeight","korzh","trialOnly","fontWeight","trialDivElement","calcTotals","reportView"],"mappings":";;;;;2FAQA,IAAIA,EA6CAC,GA5CJ,SAAWD,GAEPA,EAASA,EAAkB,QAAI,GAAK,UAEpCA,EAASA,EAAiB,OAAI,GAAK,SAEnCA,EAASA,EAAe,KAAI,GAAK,OAEjCA,EAASA,EAAe,KAAI,GAAK,OAEjCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAe,KAAI,GAAK,OAEjCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAmB,SAAI,GAAK,WAErCA,EAASA,EAAc,IAAI,GAAK,MAEhCA,EAASA,EAAe,KAAI,IAAM,OAElCA,EAASA,EAAe,KAAI,IAAM,OAElCA,EAASA,EAAmB,SAAI,IAAM,WAEtCA,EAASA,EAAkB,QAAI,IAAM,UAErCA,EAASA,EAAe,KAAI,IAAM,OAElCA,EAASA,EAAe,KAAI,IAAM,OAElCA,EAASA,EAAoB,UAAI,IAAM,YAEvCA,EAASA,EAAe,KAAI,IAAM,OAGlCA,EAASA,EAAmB,SAAI,IAAM,WAEtCA,EAASA,EAAoB,UAAI,IAAM,WAC1C,CA1CD,CA0CGA,IAAaA,EAAW,CAAE,IAG7B,SAAWC,GACPA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAwB,QAAI,GAAK,UAChDA,EAAeA,EAAuB,OAAI,GAAK,QAClD,CAJD,CAIGA,IAAmBA,EAAiB,CAAE,IAEzC,MAAMC,EAAY,CAEdC,QAAS,UAETC,KAAM,OAENC,SAAU,WAEVC,KAAM,OAENC,WAAY,aAEZC,KAAM,QA+GV,IAAIC,EAgEAC,EA2lBAC,EAu1CAC,EAwgBAC,EC9kFAC,EAkBAC,EAqKAC,GDlGJ,SAAWP,GACPA,EAAkB,MAAI,QACtBA,EAAoB,QAAI,UACxBA,EAAgB,IAAI,MACpBA,EAAgB,IAAI,MACpBA,EAAiB,KAAI,OACrBA,EAAmB,OAAI,QAC1B,CAPD,CAOGA,IAAeA,EAAa,CAAE,IAEjC,MAAMQ,YACF,WAAAC,CAAYC,EAAKC,GACbC,KAAKF,IAAMA,EACXE,KAAKC,OAASF,EAAWE,OACzBD,KAAKE,IAAMH,EAAWG,IACtBF,KAAKG,QAAUJ,EAAWI,QAC1BH,KAAKI,YAAcL,EAAWK,YAC9BJ,KAAKK,KAAON,EAAWM,IAC1B,CACD,SAAAC,CAAUC,EAAMC,GACZR,KAAKG,QAAQI,GAAQC,CACxB,CACD,aAAAC,CAAcF,EAAMC,GAChBR,KAAKI,YAAYG,GAAQC,CAC5B,CACD,iBAAAE,GACI,OAAOV,KAAKF,GACf,CACD,kBAAAa,GACI,GAAIX,KAAKF,IAAIc,YAAcZ,KAAKF,IAAIe,iBAAkB,CAClD,MACMC,EADUd,KAAKF,IAAIiB,wBACLC,OAAOC,MAAM,WAE3BC,EAAY,CAAA,EAClB,IAAK,MAAMC,KAAQL,EAAK,CACpB,MAAMM,EAAQD,EAAKF,MAAM,MACnBI,EAASD,EAAME,QACfd,EAAQY,EAAMG,KAAK,MACzBL,EAAUG,GAAUb,CACvB,CACD,OAAOU,CACV,CACD,MAAO,EACV,CACD,IAAAM,GACI,GAAIxB,KAAKF,IAAIc,aAAeZ,KAAKF,IAAI2B,OACjC,OACJ,IAAIvB,EAAMF,KAAKE,IACXF,KAAKI,aAAesB,OAAOC,KAAK3B,KAAKI,aAAawB,OAAS,IAC3D1B,GAAO2B,UAAU,IAAMH,OAAOC,KAAK3B,KAAKI,aACnC0B,KAAIC,GAASA,EAAQ,IAAM/B,KAAKI,YAAY2B,KAC5CR,KAAK,OAEdvB,KAAKF,IAAI0B,KAAKxB,KAAKC,OAAQC,GAAK,GAChCF,KAAKF,IAAIkC,iBAAiB,mBAAoB,kBAC9C,IAAK,MAAMX,KAAUrB,KAAKG,QACtBH,KAAKF,IAAIkC,iBAAiBX,EAAQrB,KAAKG,QAAQkB,GAEtD,CACD,KAAAY,GACIjC,KAAKF,IAAImC,OACZ,GAIL,SAAW5C,GAIPA,EAAM6C,gBAHN,SAASA,kBACL,OAAOR,OAAOS,OAAOxD,GAAUyD,QAAOC,GAAwB,iBAATA,GACxD,EAKDhD,EAAMiD,iBAHN,SAASA,mBACL,MAAO,CAAC3D,EAAS4D,KAAM5D,EAAS6D,KAAM7D,EAASK,SAClD,EAKDK,EAAMoD,mBAHN,SAASA,qBACL,MAAO,CAAC9D,EAAS+D,OAAQ/D,EAASgE,KAAMhE,EAASiE,UACpD,EAED,MAAMC,EAAgB,CAAClE,EAASmE,KAAMnE,EAASoE,KAAMpE,EAASqE,MAC1DrE,EAASsE,MAAOtE,EAASuE,MAAOvE,EAASwE,SAAUxE,EAASyE,SAIhE/D,EAAMgE,oBAHN,SAASA,sBACL,OAAOR,CACV,EAED,MAAMS,EAAY,CAAC3E,EAASmE,KAAMnE,EAASoE,KAAMpE,EAASqE,MAAOrE,EAASsE,MAAOtE,EAASyE,SAqC1F,SAASG,eAAeC,EAASC,EAAQC,GAChCD,IACDA,EAAS,CAAA,GAEb,IAAK,IAAIE,KAAUD,EACf,GAAIC,EACA,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAOE,eAAeD,GAAM,CAC5B,IAAIE,EAAYH,EAAOC,GACL,OAAdE,GAA2C,iBAAdA,EACzBN,EAAQO,IAAID,GACZL,EAAOG,GAAOJ,EAAQQ,IAAIF,GAGtBG,MAAMC,QAAQJ,IACdL,EAAOG,GAAOO,gBAAgBL,GAC9BN,EAAQY,IAAIN,EAAWL,EAAOG,WAGJ,IAAfH,EAAOG,IAAsC,MAAfH,EAAOG,KAC5CH,EAAOG,GAAOlC,OAAO2C,OAAO3C,OAAO4C,eAAeR,KAEtDN,EAAQY,IAAIN,EAAWL,EAAOG,IAC9BL,eAAeC,EAASC,EAAOG,GAAM,CAACE,KAK9CL,EAAOG,GAAOE,CAErB,CAIb,OAAOL,CACV,CAiBD,SAASU,gBAAgBI,GACrB,IAAIC,EAAS,GACb,IAAK,IAAInC,KAAQkC,EACbC,EAAOC,KAAKpC,GAEhB,OAAOmC,CACV,CAxEDnF,EAAMqF,OAbN,SAASA,OAAOjB,KAAWkB,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAK/C,OAAQgD,IAAK,CAClC,IAAIjB,EAASgB,EAAKC,GAClB,GAAIjB,EACA,IAAK,IAAIC,KAAOD,EACRA,EAAOE,eAAeD,KACtBH,EAAOG,GAAOD,EAAOC,GAIpC,CACD,OAAOH,CACV,EAcDpE,EAAMwF,WAHN,SAASA,WAAWpB,KAAWC,GAC3B,OAAOH,eAAe,IAAIuB,QAAWrB,EAAQC,EAChD,EAyCDrE,EAAM0F,aAHN,SAASA,aAAavE,EAAOwE,GACzB,YAAyB,IAAVxE,EAAyBA,EAAQwE,CACnD,EAKD3F,EAAM4F,oBAHN,SAASA,oBAAoBzE,GACzB,OAAO,MAAOA,CACjB,EASDnB,EAAM6F,YAPN,SAASA,YAAYC,EAAaC,GAC9B,MAAMC,EAAOF,EAAYvD,OACnB0D,EAAOF,EAAYxD,OACzB,IAAK,IAAIgD,EAAI,EAAGA,EAAIS,GAAQT,EAAIU,EAAMV,IAClCQ,EAAYR,GAAKO,EAAYP,EAEpC,EASDvF,EAAM8E,gBAAkBA,gBAexB9E,EAAMkG,aARN,SAASA,aAAaC,EAAOC,GAEzB,IADA,IAAIC,EAAYF,EAAM5D,OACb+D,EAAM,EAAGA,EAAMD,EAAWC,IAC/B,GAAIH,EAAMG,GAAKF,KAAOA,EAClB,OAAOD,EAAMG,GAErB,OAAO,IACV,EAUDtG,EAAMuG,kBARN,SAASA,kBAAkBJ,EAAOC,GAE9B,IADA,IAAIC,EAAYF,EAAM5D,OACb+D,EAAM,EAAGA,EAAMD,EAAWC,IAC/B,GAAIH,EAAMG,GAAKF,KAAOA,EAClB,OAAOE,EAEf,OAAQ,CACX,EAsBDtG,EAAMwG,iBAdN,SAASA,iBAAiB/E,EAAKuB,GAC3B,GAAIvB,EAAIgF,QACJ,OAAOhF,EAAIgF,QAAQzD,GAElB,CACD,IAAI0D,EAAMjF,EAAIc,OACd,IAAK,IAAIgD,EAAI,EAAGA,EAAImB,EAAKnB,IACrB,GAAIvC,GAAQvB,EAAI8D,GACZ,OAAOA,EAGf,OAAQ,CACX,CACJ,EAkBDvF,EAAM2G,cAVN,SAASA,cAAcR,EAAOS,EAAQC,GAClC,GAAID,GAAUT,EAAM5D,OAChB,KAAM,wBAA0BqE,EAEhCC,GAAUV,EAAM5D,SAChBsE,EAASV,EAAM5D,OAAS,GAE5B,IAAIS,EAAOmD,EAAMW,OAAOF,EAAQ,GAAG,GACnCT,EAAMW,OAAOD,EAAQ,EAAG7D,EAC3B,EAaDhD,EAAM+G,gBANN,SAASA,gBAAgBtF,EAAKN,GAC1B,IAAI6F,EAAQvF,EAAIgF,QAAQtF,GACxB,IAAc,GAAV6F,EACA,OAAOvF,EAAIqF,OAAOE,EAAO,GAAG,EAEnC,EAKDhH,EAAMiH,gBAHN,SAASA,gBAAgBxF,EAAKuF,EAAO7F,GACjCM,EAAIqF,OAAOE,EAAO,EAAG7F,EACxB,EAmBDnB,EAAMkH,UAjBN,SAASA,UAAUzF,EAAKN,EAAOgG,EAAQ,EAAGC,GACtC,IAAIV,EAAMjF,EAAIc,SAAW,EACzB,IAAI8E,EAAgBF,GAAS,EACzBG,EAAID,EAAgB,EACpBE,KAAKC,IAAId,EAAMW,EAAe,GAC9BE,KAAKE,IAAIJ,EAAeX,GACxBgB,OAAsBC,IAARP,EACdV,EAAMU,GAAO,EACjB,IAAIQ,EAAQF,EAAc,EACtBH,KAAKC,IAAId,EAAMgB,EAAa,GAC5BH,KAAKE,IAAIC,EAAahB,GAC1B,KAAOY,EAAIM,GACPnG,EAAI6F,GAAKnG,EACTmG,IAEJ,OAAO7F,CACV,EAsBDzB,EAAM6H,iBAbN,SAASA,iBAAiBC,EAASC,GAC/B,IAAIC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,EAAWC,OAAOC,YAAcJ,SAASK,gBAAgBC,aAAeP,EAAKO,YACjF,IAAIC,EAAWV,EAAUC,EACzB,IAAI9F,EAAQ,EAOZ,OANIuG,EAAWL,IACXlG,EAAQkG,EAAWK,EAAW,GAC1BV,EAAU7F,EAAQ,IAClBA,EAAQ,GAAK6F,IAGd7F,CACV,EAYDjC,EAAMyI,SANN,SAASA,SAASC,GACd,OAAY,OAARA,IAGoB,mBAARA,GAAuC,iBAARA,EAClD,EAWD1I,EAAM2I,cAJN,SAASA,cAAcC,GAEnB,OADcpF,EAAciD,QAAQmC,IACnB,CACpB,EAWD5I,EAAM6I,UAJN,SAASA,UAAUD,GAEf,OADc3E,EAAUwC,QAAQmC,IACf,CACpB,EASD5I,EAAM8I,UAHN,SAASA,UAAUJ,GACf,OAAQK,MAAMC,WAAWN,KAASO,SAASP,EAC9C,EAcD1I,EAAMkJ,uBALN,SAASA,uBAAuBC,EAAOC,GACnC,YAAuB,IAATD,QAAwC,IAATC,GAAwBD,GAAS7J,EAASG,SAAW2J,GAAS9J,EAASG,SAC5G0J,GAASC,GAAWD,GAAS7J,EAAS6D,MAAQiG,GAAS9J,EAASK,UAChEwJ,GAAS7J,EAASK,UAAYyJ,GAAS9J,EAAS6D,IAC3D,EAWDnD,EAAMqJ,UAHN,SAASA,UAAUC,EAAKC,GACpB,OAAOD,EAAIC,IAAaD,EAAIC,EAASC,gBAAkBF,EAAIC,EAASE,cACvE,EAGD,MACMC,EAAU,uCA+ChB,SAASC,QAAQC,EAAKC,GAClB,MAAMnD,EAAMkD,EAAIrH,OAChB,GAAImE,EAAMmD,EAAQ,CACd,IAAIC,EAAOpD,EAAMmD,EACb1E,EAAS,GACbA,GAAUyE,EAAI,GACd,IACIG,EADAC,EAAYF,EAEhB,IAAK,IAAIvE,EAAI,EAAGA,EAAImB,EAAKnB,IACrBwE,EAAKH,EAAIrE,GACLA,EAAI,EAAIyE,IACR7E,GAAU4E,EACVC,GAAaF,GAGrB,OAAO3E,CACV,CAEG,OAAOyE,CAEd,CACD,SAASK,aAAaxC,EAAKD,GACvB,OAAOD,KAAK2C,MAAM3C,KAAK4C,UAAY3C,EAAMC,IAAQA,CACpD,CAID,SAAS2C,aAAaR,GAClB,MAAMS,EAAMC,SAASV,GACrB,GAAIb,MAAMsB,GACN,KAAM,IAAIT,2BACd,OAAOS,CACV,CAxDDrK,EAAMuK,WAlBN,SAASA,WAAWC,GACXA,IACDA,EAAS,QAEb,IAAIC,EAAQD,EAAOjI,OAVH,EAkCpB,SAASmI,eAAed,EAAKC,GACzB,IAAI9H,EAAQ6H,EAAIhI,MAAM,KAClB+I,EAAM,EACNC,EAAMf,EACN9H,EAAMQ,OAASsH,IACfc,EAAMd,EAAS9H,EAAMQ,OACrBqI,EAAM7I,EAAMQ,QAEhB,IAAI4C,EAAS,GACb,IAAK,IAAII,EAAI,EAAGA,EAAIqF,EAAKrF,IACrBJ,GAAUwE,QAAQ5H,EAAMwD,GAAIoF,GAEhC,OAAOxF,CACV,CArC8CuF,CAAeF,EAV1C,GAUiEA,EAC7EC,GAAQA,EAAKlI,OAAS,IACtBkI,GAAQ,KAGZ,IAAII,EAAenB,EAAQO,aAAa,EAAGP,EAAQnH,SAC/CmH,EAAQO,aAAa,EAAGP,EAAQnH,SAChCmH,EAAQO,aAAa,EAAGP,EAAQnH,SAChCuI,EAAUb,aAAa,EAAG,KAI9B,OAAOQ,EAAOI,EAGlB,SAASE,aAAa5J,EAAO6J,EAAa,IACtC,IAAIC,EAAS,GACTC,EAAO/J,EACX,GACI8J,EAASvB,EAAQwB,EAAOF,GAAcC,EACtCC,EAAO3D,KAAK2C,MAAMgB,GAAQF,SACrBE,EAAO,GAChB,OAAOD,CACV,CAZoBF,CAmDrB,SAASI,cACL,OAAQ,YAAuC,KAAzB,IAAKhI,MAAQiI,SACtC,CArDiCD,GAnBf,kBAmB4CL,EAE9D,EAgHD9K,EAAMqL,cAjDN,SAASA,cAAclK,EAAOmK,GAC1B,IAAKnK,GAAyB,GAAhBA,EAAMoB,OAChB,OAAO,IAAIY,KACf,MAAMoI,EAAkBpK,EAAMqK,QAAQ,iBAAkB,KAElDC,EADmBH,EAAOE,QAAQ,iBAAkB,KACrB5J,MAAM,KACrC8J,EAAYH,EAAgB3J,MAAM,KAClC+J,EAAaF,EAAYhF,QAAQ,MACjCmF,EAAWH,EAAYhF,QAAQ,MAC/BoF,EAAYJ,EAAYhF,QAAQ,QAChCqF,EAAYL,EAAYhF,QAAQ,MAChCsF,EAAeN,EAAYhF,QAAQ,MACnCuF,EAAeP,EAAYhF,QAAQ,MACnCwF,EAAQ,IAAI9I,KAClB,IACI,MAAM+I,EAAOL,GAAa,GAAKA,EAAYH,EAAUnJ,OAC/C6H,aAAasB,EAAUG,IACvBI,EAAME,cACNC,EAAQT,GAAc,GAAKA,EAAaD,EAAUnJ,OAClD6H,aAAasB,EAAUC,IAAe,EACtCM,EAAMI,WAAa,EACzB,GAAID,EAAQ,GACR,KAAM,GACV,MAAME,EAAMV,GAAY,GAAKA,EAAWF,EAAUnJ,OAC5C6H,aAAasB,EAAUE,IACvBK,EAAMM,UACZ,GAAID,EA/BZ,SAASE,eAAeJ,EAAOF,GAC3B,OAAO,IAAI/I,KAAK+I,EAAME,EAAQ,EAAG,GAAGG,SACvC,CA6BiBC,CAAeJ,EAAOF,GAC5B,KAAM,GACV,MAAMO,EAAOX,GAAa,GAAKA,EAAYJ,EAAUnJ,OAC/C6H,aAAasB,EAAUI,IACvB,EACN,GAAIW,EAAO,GACP,KAAM,GACV,MAAMC,EAASX,GAAgB,GAAKA,EAAeL,EAAUnJ,OACvD6H,aAAasB,EAAUK,IACvB,EACN,GAAIW,EAAS,GACT,KAAM,GACV,MAAMC,EAASX,GAAgB,GAAKA,EAAeN,EAAUnJ,OACvD6H,aAAasB,EAAUM,IACvB,EACN,GAAIW,EAAS,GACT,KAAM,GACV,OAAO,IAAIxJ,KAAK+I,EAAME,EAAOE,EAAKG,EAAMC,EAAQC,EACnD,CACD,MAAOC,GACH,KAAM,GAAGzL,wBACZ,CACJ,EAoBDnB,EAAM6M,UAlBN,SAASA,UAAUjD,GACf,MAAMkD,EAAYlD,EAAIhI,MAAM,KAC5B,IACI,MAAM6K,EAAOK,EAAUvK,OAAS,EAAI6H,aAAa0C,EAAU,IAAM,EACjE,GAAIL,EAAO,GACP,KAAM,GACV,MAAMC,EAASI,EAAUvK,OAAS,EAAI6H,aAAa0C,EAAU,IAAM,EACnE,GAAIJ,EAAS,GACT,KAAM,GACV,MAAMC,EAASG,EAAUvK,OAAS,EAAI6H,aAAa0C,EAAU,IAAM,EACnE,GAAIH,EAAS,GACT,KAAM,GACV,OAAO,IAAIxJ,KAAK,EAAG,EAAG,EAAGsJ,EAAMC,EAAQC,EAC1C,CACD,MAAOC,GACH,KAAM,GAAGhD,wBACZ,CACJ,CAEJ,CAncD,CAmcG5J,IAAUA,EAAQ,CAAE,IAEvB,MAAM+M,iBACF,WAAAvM,CAAYwM,EAASC,GACjBtM,KAAKqM,QAAUA,EACfrM,KAAKsM,QAAUA,CAClB,CACD,UAAAC,GACI,OAAOvM,KAAKsM,OACf,CACD,UAAAE,GACI,OAAOxM,KAAKqM,OACf,CACD,IAAAI,CAAKC,EAAaC,GACd,OAAO3M,KAAKsM,QAAQG,KAAKC,EAAaC,EACzC,CACD,MAAMA,GACF,OAAO3M,KAAKsM,QAAQM,MAAMD,EAC7B,CACD,QAAQE,GACJ,OAAO7M,KAAKsM,QAAQQ,QAAQD,EAC/B,EAGL,MAAME,0BAA0BC,MAC5B,WAAAnN,CAAYoN,EAAQC,GAChBC,MAAMD,GACNlN,KAAKiN,OAASA,CACjB,EAEL,MAAMG,WAEF,gBAAIC,GACA,OAAOrN,KAAKsN,aACf,CACD,WAAAzN,GACIG,KAAKuN,eAAiB,GACtBvN,KAAKwN,mBAAgBxG,CACxB,CACD,GAAAhD,CAAI9D,EAAKuN,GACL,OAAOzN,KAAK0N,KAAKtO,EAAWuO,IAAKzN,EAAK,KAAMuN,EAC/C,CACD,IAAAG,CAAK1N,EAAKG,EAAMoN,GACZ,OAAOzN,KAAK0N,KAAKtO,EAAWyO,KAAM3N,EAAKG,EAAMoN,EAChD,CACD,GAAAK,CAAI5N,EAAKG,EAAMoN,GACX,OAAOzN,KAAK0N,KAAKtO,EAAW2O,IAAK7N,EAAKG,EAAMoN,EAC/C,CACD,OAAOvN,EAAKG,EAAMoN,GACd,OAAOzN,KAAK0N,KAAKtO,EAAW4O,OAAQ9N,EAAKG,EAAMoN,EAClD,CACD,IAAAC,CAAKzN,EAAQC,EAAKG,EAAMoN,GAEpB,MAAMQ,GADNR,EAAUA,GAAW,IACIQ,UAAY,OAC/BC,EAAcT,EAAQS,aAA6B,cAAbD,EACtC,mBACA,KACF5N,GAAoB,aAAZ4N,GAA2BjO,KAAKwN,gBACxCnN,EAAKA,KAAOhB,EAAMwF,WAAWxE,EAAKA,MAAQ,CAAE,EAAEL,KAAKwN,gBAEvD,MAGM1N,EAAM,IAHC,WAAY,IAAIqO,eACvBA,eACA1G,OAAuB,gBAEvB2G,EAAO,CACTnO,OAAQA,EACRC,IAAKA,EACLC,QAASuB,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAA,EAAI1E,KAAKuN,gBAAiBE,EAAQtN,SAAW,CAAA,GAClFC,YAAaqN,EAAQrN,aAAe,CAAE,EACtCC,KAAMA,GAEN6N,IACAE,EAAKjO,QAAQ,gBAAkB+N,GACnC,MAAM7B,EAAU,IAAIzM,YAAYE,EAAKsO,GACjCpO,KAAKqO,oBACLC,QAAQC,KAAK,6HAEbvO,KAAKqO,kBAAkBhC,IAEvBrM,KAAKwO,WACLxO,KAAKwO,UAAUnC,GAEnB,MAAMoC,EAAcpC,EAAQhM,MAAgC,iBAAjBgM,EAAQhM,MAChC,QAAZ4N,EACDS,KAAKC,UAAUtC,EAAQhM,MACvBgM,EAAQhM,KAEd,OADAgM,EAAQ7K,OACD,IAAI4K,iBAAiBC,EAAS,IAAIuC,SAAQ,CAACC,EAASC,KACnDrB,EAAQsB,eACRjP,EAAIiP,aAAetB,EAAQsB,cAC/BjP,EAAIkP,QAAWC,IACXH,EAAO,IAAI/B,kBAAkBjN,EAAImN,OAAQnN,EAAIoP,cAAc,EAE/DpP,EAAIqP,mBAAqB,KACrB,GAAsB,GAAlBrP,EAAIc,WACJ,OACJ,MAAMwO,EAAsBtP,EAAIuP,kBAAkB,iBAAmB,GAC/DpC,EAASnN,EAAImN,OACnB,GAAe,IAAXA,EACA6B,EAAO,IAAI/B,kBAAkBE,EAAQ,kDAEpC,GAAIA,GAAU,KAAOA,EAAS,IAAK,CAEpC,MAAMqC,EAAoC,gBAArBxP,EAAIiP,cAAuD,SAArBjP,EAAIiP,aACzDjP,EAAIyP,SACgD,GAAnDH,EAAoBtJ,QAAQ,oBACzB4I,KAAKc,MAAM1P,EAAIoP,cACfpP,EAAIoP,aACdlP,KAAKsN,cAAgBgC,EACjBtP,KAAKyP,YACLzP,KAAKyP,WAAW3P,GAEpB+O,EAAQS,EACX,KACI,EAEuC,gBAArBxP,EAAIiP,cAAuD,SAArBjP,EAAIiP,aACvD3B,WAAWsC,kBAAkB5P,EAAIyP,UACjCX,QAAQC,QAAQ/O,EAAIoP,eAChBzC,MAAKyC,IACX,MAAMI,EAAkE,GAAnDF,EAAoBtJ,QAAQ,oBAC3C4I,KAAKc,MAAMN,GACXA,EACNlP,KAAKsN,cAAgBgC,EACrB,MAAMpC,EAAUoC,EAAYpC,UACb,KAAVD,EACK,qBAAqB/M,IACrBoP,GACVR,EAAO,IAAI/B,kBAAkBE,EAAQC,GAAS,GAErD,GAELpN,EAAI4N,KAAKe,EAAW,IAE3B,CACD,wBAAOiB,CAAkBC,GACrB,IAAIC,EAAS,IAAIC,WACjB,OAAO,IAAIjB,SAASC,IAChBe,EAAOE,UAAY,WACXF,EAAOhP,YAAciP,WAAWE,MAChClB,EAAQe,EAAOpL,OAEnC,EACYoL,EAAOI,WAAW,IAAIC,KAAK,CAACN,IAAY,GAE/C,GAOL,SAAWrQ,GACP,IAgCI4Q,EAhCAC,EAA0B,CAC1BC,gBAAiB,aACjBC,eAAgB,eAChBC,eAAgB,aAChBC,gBAAiB,QACjBC,eAAgB,QAChBC,eAAgB,WAChBC,gBAAiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/FC,eAAgB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC7D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC1DC,kBAAmB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC9DC,iBAAkB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACrFC,iBAAkB,IAClBC,SAAU,OAEVC,EAAgB,CAChBC,SAAU,QACVC,YAAa,UACbC,YAAa,UACbC,MAAO,CACHC,SAAU,KACVC,aAAc,SACdC,IAAK,MACLC,GAAI,KACJC,KAAM,OACNC,MAAO,SAEXC,SAAUxB,GAEVyB,EAAa,CACb,QAASZ,GAGb,MAAMa,EAAU,GAChB,SAASC,QAAQC,GACb,IAAK,MAAMC,KAAUH,EACjBG,EAAOD,EAEd,CAiCD,SAASE,mBACL,OAAO/B,EAAce,QACxB,CAgBD,SAASiB,iBAAiBjB,GACtB,MAAMkB,EAAYP,EAAWX,GACzBkB,EACA9S,EAAMwF,WAAWqL,EAAeiC,IAGhCjC,EAAcgB,YAAcD,EAC5Bf,EAAciB,YAAcF,EAC5Bf,EAAckB,MAAQ/R,EAAMwF,WAAW,CAAA,EAAImM,EAAcI,QAE7DlB,EAAce,SAAWA,CAC5B,CA+BD,SAASmB,oBACL,OAAOlC,EAAcyB,QACxB,CAsDD,SAASU,qBAAqBC,GACrBpC,EAAcyB,WACfzB,EAAcyB,SAAWtS,EAAMwF,WAAW,CAAE,EAAEsL,IAElDD,EAAcyB,SAAWtS,EAAMwF,WAAWqL,EAAcyB,SAAUW,EACrE,CAmCD,SAASC,iBAAiBtB,EAAUuB,GAChCV,QAAQU,GACR,IAAIC,EAAqBvC,EACrBe,IACKuB,EAAWvB,WACZuB,EAAWvB,SAAWA,GAE1BwB,EAAqBb,EAAWX,GAC3BwB,IACDA,EAAqBpT,EAAMwF,WAAW,CAAE,EAAEmM,GAC1CY,EAAWX,GAAYwB,IAG/BpT,EAAMwF,WAAW4N,EAAoBD,EACxC,CA4CD,SAASE,6BA7BT,SAASC,0BAA0B1B,GAC/B,MAAM2B,EAAM,IAAIpQ,KAAK,KAAM,EAAG,EAAG,GAAI,GAAI,GAAI,IAGvCqQ,EAAUD,EAAIE,mBAAmB7B,EAFnB,CAAE1F,KAAM,UAAWE,MAAO,UAAWE,IAAK,YAGxDoH,EAAUH,EAAII,mBAAmB/B,EAFnB,CAAEnF,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,YAGlE,IAAIiH,EAAaJ,EACZhI,QAAQ,KAAM,MACdA,QAAQ,IAAK,KACbA,QAAQ,KAAM,MACdA,QAAQ,IAAK,KACbA,QAAQ,OAAQ,QAChBA,QAAQ,KAAM,MACfqI,EAAaH,EACZlI,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdA,QAAQ,IAAK,KACbA,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdqF,EAAcyB,WACfzB,EAAcyB,SAAW,IAM7BU,qBAJuB,CACnBjC,gBAAiB6C,EACjB1C,gBAAiB2C,GAGxB,CAGGP,CADkC,iBAAdQ,UAAyBA,UAAUC,cAAWpM,EAErE,CAtPD1H,EAAK+T,UAHL,SAASA,UAAUrB,GACfH,EAAQpN,KAAKuN,EAChB,EAyBD1S,EAAKgU,WAnBL,SAASA,aACL,IAAI9O,EAAS,GACb,IAAK,IAAI+O,KAAU3B,EACfpN,EAAOC,KAAK,CACR8O,OAAQA,EACRrC,YAAaU,EAAW2B,GAAQrC,YAChCC,YAAaS,EAAW2B,GAAQpC,cAGxC,OAAO3M,EAAOgP,MAAK,CAACC,EAAGC,IACfD,EAAEvC,YAAcwC,EAAExC,YACX,EAEFuC,EAAEvC,cAAgBwC,EAAExC,YAClB,GAEH,GAEf,EASD5R,EAAK2S,iBAAmBA,iBAUxB3S,EAAKqU,UAJL,SAASA,UAAUC,GACftF,QAAQC,KAAK,2DACb2D,iBAAiB0B,EACpB,EAkBDtU,EAAK4S,iBAAmBA,iBA6BxB5S,EAAKuU,QAjBL,SAASA,WAAWlP,GAChB,IAAImP,EAAW5D,EAAckB,MACzB2C,EAAU,GACd,GAAIpP,GAAQA,EAAK/C,OAAQ,CACrB,MAAMoS,EAAYrP,EAAK/C,OACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIoP,IAChBD,EAAUD,EAASnP,EAAKC,IACD,iBAAZmP,GAFgBnP,IAGvBkP,EAAWC,CAMtB,CACD,OAAOA,CACV,EAKDzU,EAAK8S,kBAAoBA,kBAIzB9S,EAAK2U,oBAHL,SAASA,oBAAoBrQ,GACzB,OAAOsM,EAAcyB,SAAS/N,EACjC,EAWDtE,EAAK4U,kBATL,SAASA,kBAAkBC,GACvB,MAAMxC,EAAWS,oBACjB,GAAI+B,EAAW,GAAKA,EAAW,GAC3B,OAAOxC,EAASjB,gBAAgByD,EAAW,GAG3C,KAAM,uBAAyBA,CAEtC,EAWD7U,EAAK8U,iBATL,SAASA,iBAAiBD,GACtB,MAAMxC,EAAWS,oBACjB,GAAI+B,EAAW,GAAKA,EAAW,GAC3B,OAAOxC,EAAShB,eAAewD,EAAW,GAG1C,KAAM,uBAAyBA,CAEtC,EAaD7U,EAAK+U,oBAXL,SAASA,oBAAoBC,GACzB,MAAM3C,EAAWS,oBACjB,GAAIkC,EAAS,GAAKA,EAAS,EACvB,OAAO3C,EAASf,kBAAkBhP,QAAU0S,EACtC3C,EAASf,kBAAkB0D,EAAS,GACpCA,EAAOC,WAGb,KAAM,uBAAyBD,CAEtC,EAaDhV,EAAKkV,mBAXL,SAASA,mBAAmBF,GACxB,MAAM3C,EAAWS,oBACjB,GAAIkC,EAAS,GAAKA,EAAS,EACvB,OAAO3C,EAASd,iBAAiBjP,QAAU0S,EACrC3C,EAASd,iBAAiByD,EAAS,GACnCA,EAAOC,WAGb,KAAM,uBAAyBD,CAEtC,EAYDhV,EAAK+S,qBAAuBA,qBAc5B/S,EAAKmV,kBATL,SAASA,kBAAkBrD,GACF,iBAAVA,GAKXU,QAAQ,CAAEb,SAAUf,EAAce,SAAUG,MAAOA,IACnD/R,EAAMwF,WAAWqL,EAAckB,MAAOA,IALlC9C,QAAQW,MAAM,gJAMrB,EAcD3P,EAAKoV,mBAPL,SAASA,mBAAmBtD,GACxB,IAAK,IAAIH,KAAYW,EAAY,CAC7B,IAAI2B,EAAS3B,EAAWX,GACxBsC,EAAOnC,MAAQ/R,EAAMwF,WAAW,CAAE,EAAEuM,EAAOmC,EAAOnC,MACrD,CACDlB,EAAckB,MAAQ/R,EAAMwF,WAAW,CAAE,EAAEuM,EAAOlB,EAAckB,MACnE,EAuBD9R,EAAKiT,iBAAmBA,iBAUxBjT,EAAKqV,UAHL,SAASA,UAAU1D,EAAU2D,GACzBrC,iBAAiBtB,EAAU2D,EAC9B,EA4CDtV,EAAKuV,aANL,SAASA,eACA3E,IACDA,EAAgB7Q,EAAMwF,WAAW,CAAE,EAAEmM,GACrC0B,4BAEP,EAED,MAAMoC,EAAiB,iEAOvB,SAASC,cAAcC,EAAMrK,GACzB,MACMsK,EADOD,EAAKxJ,cACG+I,WACf9I,EAAQuJ,EAAKtJ,WAAa,EAC1BC,EAAMqJ,EAAKpJ,UACXE,EAAOkJ,EAAKE,WACZnJ,EAASiJ,EAAKG,aACdnJ,EAASgJ,EAAKI,aACdC,EAASvJ,EAAO,IAAM,GACtBwJ,EAAOxJ,EAAO,GACdyJ,EAAU,CACZC,KAAMP,EACNQ,GAAIR,EAAQS,UAAUT,EAAQrT,OAAS,GACvC+T,KAAMrW,EAAK8U,iBAAiB3I,GAC5BmK,IAAKtW,EAAK4U,kBAAkBzI,GAC5BoK,GAAKpK,EAAQ,GAAM,IAAMA,EAAQA,EAAM8I,WACvCuB,EAAGrK,EAAM8I,WACTwB,GAAKpK,EAAM,GAAM,IAAMA,EAAMA,EAAI4I,WACjCyB,EAAGrK,EAAI4I,WACP0B,GAAKnK,EAAO,GAAM,IAAMA,EAAOA,EAAKyI,WACpC2B,EAAGpK,EAAKyI,WACR4B,GAAKd,EAAS,GAAM,IAAMA,EAASA,EAAOd,WAC1C6B,EAAGf,EAAOd,WACV8B,GAAIf,EAAO,KAAO,KAClBgB,GAAKvK,EAAS,GAAM,IAAMA,EAASA,EAAOwI,WAC1CgC,GAAKvK,EAAS,GAAM,IAAMA,EAASA,EAAOuI,YAE9C,OAAO5J,EAAOE,QAAQiK,GAAgB,CAAC0B,EAAOC,IACnCA,GAAMlB,EAAQiB,IAE5B,CAuBD,SAASE,yBAAyBzI,GAC9B,MAAM0I,EAAiBvE,oBACvB,IAAIzH,EACJ,OAAQsD,GACJ,KAAKtP,EAAS6D,KACVmI,EAASgM,EAAevG,gBACxB,MACJ,KAAKzR,EAAS4D,KACVoI,EAASgM,EAAepG,gBACxB,MACJ,QACI5F,EAASgM,EAAevG,gBAAkB,IAAMuG,EAAepG,gBAGvE,OAAO5F,CACV,CACD,SAASiM,wBAAwB3I,GAC7B,MAAM0I,EAAiBvE,oBACvB,IAAIzH,EACJ,OAAQsD,GACJ,KAAKtP,EAAS6D,KACVmI,EAASgM,EAAetG,eACxB,MACJ,KAAK1R,EAAS4D,KACVoI,EAASgM,EAAelG,eACxB,MACJ,QACI9F,EAASgM,EAAetG,eAAiB,IAAMsG,EAAelG,eAGtE,OAAO9F,CACV,CArDDrL,EAAKyV,cAAgBA,cAqBrBzV,EAAKuX,gBApBL,SAASA,gBAAgBC,EAAU7I,EAAUtD,GAkBzC,OAjBIA,EACc,KAAVA,EACAA,EAAS+L,yBAAyB/X,EAAS6D,MAE5B,KAAVmI,EACLA,EAASiM,wBAAwBjY,EAAS6D,MAE3B,KAAVmI,EACLA,EAAS+L,yBAAyB/X,EAASK,UAE5B,KAAV2L,IACLA,EAASiM,wBAAwBjY,EAASK,WAI9C2L,EAAS+L,yBAAyBzI,GAE/B8G,cAAc+B,EAAUnM,EAClC,EA0DDrL,EAAKyX,YAlBL,SAASA,YAAYC,EAAQrM,EAAQmG,GACjC,GAAInG,GAAUA,EAAO/I,OAAS,EAAG,CAC7B,MAAMqV,EAAOtM,EAAOuM,OAAO,GAAGpO,cAC9B,GAAa,MAATmO,EACA,OA8BZ,SAASE,mBAAmBH,EAAQrM,GAChC,IAAKyM,EAAsBzM,GAAS,CAEhC,MAAMxI,EAASwI,EAAO1J,MAAM,KACvBmB,QAAOiV,GAAKA,EAAEzV,OAAS,IACvBE,KAAIuV,GAAKA,EAAEpW,MAAM,OAEtB,GADAmW,EAAsBzM,GAAU,GAC5BxI,EAAOP,OAAS,EAChB,GAAIO,EAAO,GAAGP,OAAS,EACnB,IAAK,MAAMpB,KAAS2B,EAChBiV,EAAsBzM,GAAQ2M,OAAO3N,SAASnJ,EAAM,KAAOA,EAAM,QAIrE2B,EAAOoV,SAAQ,CAAC/W,EAAO6F,KACnB+Q,EAAsBzM,GAAQtE,GAAS7F,EAAM,EAAE,GAI9D,CACD,MAAM2B,EAASiV,EAAsBzM,GACrC,QAAuB3D,IAAnB7E,EAAO6U,GAAuB,CAC9B,MAAMxW,EAAQ2B,EAAO6U,GACrB,OAAO1X,EAAKuU,QAAQrT,IAAUA,CACjC,CACD,OAAOwW,EAAOzC,UACjB,CAxDkB4C,CAAmBH,EAAQrM,EAAO6M,MAAM,IAE9C,GAAI,CAAC,IAAK,IAAK,KAAK1R,QAAQmR,IAAS,EAAG,CACzC,MAAM1D,EAAStB,mBACf,OAAO+E,EAAOS,eAAelE,EA4EzC,SAASmE,uBAAuB/M,GAC5B,MAAMgM,EAAiBvE,oBACjB6E,EAAOtM,EAAO,GAAG7B,cACjB6O,EAAUhN,EAAO/I,OAAS,EAC1B0V,OAAO3N,SAASgB,EAAO6M,MAAM,IACrB,KAARP,EAAc,EAAI,EACxB,OAAQA,GACJ,IAAK,IACD,MAAO,CACHW,MAAO,UACPC,aAAa,EACbC,qBAAsBH,GAE9B,IAAK,IACD,MAAO,CACHC,MAAO,WACP7G,SAAU4F,EAAe5F,SACzBgH,sBAAuBJ,GAE/B,QACI,MAAO,CACHC,MAAO,UACPG,sBAAuBJ,EACvBK,sBAAuBL,GAGtC,CAtGgDD,CAAuB/M,GAC/D,CAEG,OAkDZ,SAASsN,gBAAgBjB,EAAQkB,GAC7B,IAAI1X,EAAQwW,EAAOzC,WACf/P,EAAS,GACT6B,EAAQ7F,EAAMoB,OAAS,EAC3B,IAAK,IAAIgD,EAAIsT,EAAKtW,OAAS,EAAGgD,GAAK,EAAGA,IAAK,CACvC,MAAMwE,EAAK8O,EAAKhB,OAAOtS,GACZ,MAAPwE,GAAqB,MAAPA,EACV/C,GAAS,GACT7B,GAAUhE,EAAM0W,OAAO7Q,GACvBA,KAGW,MAAP+C,IACA5E,GAAU,GAKlBA,GAAU4E,CAEjB,CACD,OAAO5E,EAAOvD,MAAM,IAAIkX,UAAU5W,KAAK,GAC1C,CAxEkB0W,CAAgBrR,KAAKwR,MAAMpB,GAASrM,EAElD,CACD,MAAMgM,EAAiBvE,oBAEvB,OADAtB,EAAmBA,GAAoB6F,EAAe7F,iBAC/CkG,EAAOzC,WAAW1J,QAAQ,IAAKiG,EACzC,EAeDxR,EAAK+Y,aAbL,SAASA,aAAaC,EAAM3N,GACxB,GAAIA,GAAUA,EAAO/I,OAAS,EAAG,CAE7B,GAAa,MADA+I,EAAOuM,OAAO,GAAGpO,cACZ,CACd,MAAM3G,EAASwI,EAAO6M,MAAM,GAAGvW,MAAM,KACrC,GAAIkB,EAAOP,OAAS,EAAG,CACnB,MAAMpB,EAAQ2B,EAAO,EAAS,EAAI,GAClC,OAAO7C,EAAKuU,QAAQrT,IAAUA,CACjC,CACJ,CACJ,CACD,MAAO,GAAG8X,GACb,EAED,MAAMlB,EAAwB,CAAA,CA8EjC,CA1fD,CA0fG9X,IAASA,EAAO,CAAE,IAKrB,MAAMiZ,WAEF,WAAA1Y,CAAY2Y,GAERxY,KAAKyY,YAAa,EAClBzY,KAAKO,KAAO,GACZP,KAAK0Y,QAAU,GACf1Y,KAAK2Y,YAAc,GACnB3Y,KAAKwY,OAASA,EACdxY,KAAK4Y,WAAa,IAAI3U,MACtBjE,KAAK6Y,YAAc,IAAI5U,KAC1B,CAMD,YAAA6U,CAAaC,EAAOC,GAChB,GAAIA,EAAK,CASL,GARAhZ,KAAKyF,GAAKuT,EAAIvT,GACdzF,KAAKO,KAAOyY,EAAIzY,KAChBP,KAAKiZ,cAAgBD,EAAIE,SACzBlZ,KAAK0Y,QAAUM,EAAIzY,KACnBP,KAAK2Y,YAAcK,EAAI5K,UACE,IAAb4K,EAAO,MACfhZ,KAAKyY,WAAaO,EAAIG,KAC1BnZ,KAAK6Y,YAAc,IAAI5U,MACnB+U,EAAII,KACJ,IAAK,IAAIxU,EAAI,EAAGA,EAAIoU,EAAII,KAAKxX,OAAQgD,IAAK,CACtC,IAAIyU,EAAYN,EAAMO,aAAatZ,MACnCqZ,EAAUP,aAAaC,EAAOC,EAAII,KAAKxU,IACvC5E,KAAK6Y,YAAYpU,KAAK4U,EACzB,CAGL,GADArZ,KAAK4Y,WAAa,IAAI3U,MAClB+U,EAAIO,MACJ,IAAK,IAAI3U,EAAI,EAAGA,EAAIoU,EAAIO,MAAM3X,OAAQgD,IAAK,CACvC,IAAI4U,EAAUT,EAAMU,iBAAiBzZ,MACrCwZ,EAAQV,aAAaC,EAAOC,EAAIO,MAAM3U,IACtC5E,KAAK4Y,WAAWnU,KAAK+U,EACxB,CAER,CACJ,CACD,IAAAE,CAAKC,EAAkBC,GACnB,IAAIC,EAAO,CAAEC,MAAM,GACfC,sBAAyBC,IAGzB,GAFIJ,GACAA,EAAcI,EAAQH,GACtBG,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIgD,EAAI,EAAIA,EAAIqV,IAAeJ,EAAKC,KAAMlV,IAAK,CAChD,IAAIsV,EAAOF,EAAOpB,WAAWhU,GAI7B,GAHI+U,GACAA,EAAiBO,EAAML,GAEvBA,EAAKC,KACL,MACP,CACJ,CACD,GAAIE,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAIgD,EAAI,EAAIA,EAAIuV,IAAoBN,EAAKC,KAAMlV,IAChDmV,sBAAsBC,EAAOnB,YAAYjU,GAEhD,GAELmV,sBAAsB/Z,KACzB,CACD,mBAAAoa,GACI,OAAOpa,KAAKqa,kBAAkB,EACjC,CACD,eAAAA,GACI,OAAOra,KAAK4Y,WAAWxW,QAAO8X,GAAQA,EAAKI,cAC9C,EAEL,MAAMC,eAEF,WAAA1a,CAAYma,GACRha,KAAKyF,GAAK,GACVzF,KAAK0Y,QAAU,2BACf1Y,KAAKiO,SAAWtP,EAAS+D,OACzB1C,KAAKwa,KAAO,EACZxa,KAAKsa,cAAe,EACpBta,KAAKya,cAAe,EACpBza,KAAK0a,YAAa,EAClB1a,KAAK2a,YAAa,EAClB3a,KAAKyY,YAAa,EAClBzY,KAAK4a,cAAe,EACpB5a,KAAK6a,YAAa,EAClB7a,KAAK8a,cAAe,EACpB9a,KAAK+a,WAAa,GAClB/a,KAAKgb,KAAO,GACZhb,KAAKga,OAASA,EACdha,KAAKib,KAAOrc,EAAesc,IAC9B,CAMD,YAAApC,CAAaC,EAAOC,GAChB,GAAIA,EAAK,CACLhZ,KAAKyF,GAAKuT,EAAIvT,GACdzF,KAAK2Y,YAAcK,EAAI5K,KACvBpO,KAAK0Y,QAAUM,EAAImC,KACnBnb,KAAKiO,SAAW+K,EAAI/Q,MACpBjI,KAAKsa,aAAetB,EAAIoC,IACxBpb,KAAKya,aAAezB,EAAIqC,IACxBrb,KAAKwa,KAAOxB,EAAIwB,KAChBxa,KAAK+a,WAAa/B,EAAIsC,MACtBtb,KAAKub,aAAevC,EAAIwC,KACxBxb,KAAKyb,SAAWzC,EAAI0C,MACpB1b,KAAK2b,eAAiB3C,EAAI4C,OAC1B,MAAMC,EAAaxc,EAAMiD,mBAAmBwD,QAAQ9F,KAAKiO,UACzDjO,KAAKgF,aAAegU,EAAI8C,QAAUD,EAAa,IAAIrZ,KAAKwW,EAAI8C,QAAU9C,EAAI8C,OAC1E9b,KAAK0a,WAAarb,EAAM0F,aAAaiU,EAAI+C,IAAK/b,KAAK0a,YACnD1a,KAAKyY,WAAapZ,EAAM0F,aAAaiU,EAAIG,IAAKnZ,KAAKyY,YACnDzY,KAAK2a,WAAatb,EAAM0F,aAAaiU,EAAIgD,MAAQhD,EAAIiD,IAAKjc,KAAK2a,YAC/D3a,KAAK4a,aAAevb,EAAM0F,aAAaiU,EAAIkD,IAAKlc,KAAK4a,cACrD5a,KAAK6a,WAAaxb,EAAM0F,aAAaiU,EAAImD,IAAKnc,KAAK6a,YACnD7a,KAAK8a,aAAezb,EAAM0F,aAAaiU,EAAIoD,IAAKpc,KAAK8a,cACrD9a,KAAKib,KAAOjC,EAAIiC,KAChBjb,KAAKqc,cAAgBrD,EAAIsD,KACrBtD,EAAIuD,QACJvc,KAAKwc,SAAWxD,EAAIuD,OACpBvD,EAAIyD,OACJzc,KAAK0c,cAAgB3D,EAAM4D,cAAc3D,EAAIyD,OAAS1D,EAAM6D,oBAEnE,CACJ,EAML,MAAMC,YAEF,WAAAhd,GACIG,KAAKyF,GAAK,GACVzF,KAAK8c,IAAMje,EAAUC,QACrBkB,KAAK+c,QAAUpe,EAASG,QACxBkB,KAAKgd,SAAW,EACnB,CAKD,YAAAlE,CAAazY,GACLA,IACAL,KAAKyF,GAAKpF,EAAKoF,GACfzF,KAAK8c,IAAMzc,EAAKyc,IAChB9c,KAAKgd,SAAW3c,EAAK4c,OACrBjd,KAAK+c,QAAU1c,EAAK6c,MACpBld,KAAKmd,OAAS9c,EAAK8c,OACnBnd,KAAKod,UAAY/c,EAAK+c,UAClB/c,EAAKgd,UACLrd,KAAK+c,QAAU1c,EAAKgd,SAEpBhd,EAAKE,OACLP,KAAKO,KAAOF,EAAKE,MAEjBF,EAAK8B,SACLnC,KAAKmC,OAAS9B,EAAK8B,QAG9B,CACD,YAAAmb,CAAa9c,GACT,IAAIgE,EAAS,GACb,IAAKxE,KAAKmC,OACN,OAAOqC,EACX,GAAIP,MAAMC,QAAQ1D,GACd,IAAK,IAAI6B,KAAQrC,KAAKmC,OACd3B,EAAMsF,QAAQzD,EAAKoD,KAAO,IAC1BjB,GAAUnC,EAAKkb,KAAO,UAK9B,IAAK,IAAIlb,KAAQrC,KAAKmC,OACdE,EAAKoD,KAAOjF,IACZgE,GAAUnC,EAAKkb,KAAO,KAOlC,OAHI/Y,IACAA,EAASA,EAAOkR,UAAU,EAAGlR,EAAO5C,OAAS,IAE1C4C,CACV,EAML,MAAMgZ,SAEF,WAAA3d,GACIG,KAAKyd,WAAa,KAClBzd,KAAKyF,GAAK,SACVzF,KAAKO,KAAO,cACZP,KAAK0d,WAAa1d,KAAKsZ,eACvBtZ,KAAK2d,eAAiB,IAAIC,GAC7B,CAKD,aAAAC,GACI,OAAO7d,KAAKyd,UACf,CACD,YAAAnE,CAAad,GACT,OAAO,IAAID,WAAWC,EACzB,CACD,gBAAAiB,CAAiBjB,GACb,OAAO,IAAI+B,eAAe/B,EAC7B,CACD,iBAAAoE,GACI,OAAO,IAAIC,WACd,CAKD,YAAAiB,CAAaC,GACT,IAAIhF,EAAQrK,KAAKc,MAAMuO,GACvB/d,KAAK8Y,aAAaC,EACrB,CAKD,YAAAD,CAAazY,GAMT,GALAL,KAAKyF,GAAKpF,EAAKoF,GACfzF,KAAKO,KAAOF,EAAKE,KACjBP,KAAKge,QAAU3d,EAAK4d,KAEpBje,KAAKke,QAAU,IAAIja,MACf5D,EAAK6d,QACL,IAAK,IAAItZ,EAAI,EAAGA,EAAIvE,EAAK6d,QAAQtc,OAAQgD,IAAK,CAC1C,IAAIuZ,EAAYne,KAAK4c,oBACrBuB,EAAUrF,aAAazY,EAAK6d,QAAQtZ,IACpC5E,KAAKke,QAAQzZ,KAAK0Z,EACrB,CAML,GAHAne,KAAK0d,WAAW5E,aAAa9Y,KAAMK,EAAK+d,SAExCpe,KAAK2d,eAAiB,IAAIC,IACtBvd,EAAKsd,eACL,IAAK,MAAMU,KAAYhe,EAAKsd,eAAgB,CACxC,MAAM1V,EAAQtJ,EAAS0f,GACjBC,EAAUje,EAAKsd,eAAeU,IAAa,IAAIpa,MACrDjE,KAAK2d,eAAevZ,IAAI6D,EAAOqW,EAClC,CAER,CAKD,iBAAAC,GACI,OAAOve,KAAK2d,cACf,CAMD,wBAAAa,CAAyBvH,GACrB,OAAIjX,KAAK2d,eAAe5Z,IAAIkT,GACjBjX,KAAK2d,eAAe3Z,IAAIiT,GAE5B,EACV,CAMD,gBAAAwH,CAAiBxH,GACb,OAAIjX,KAAK2d,eAAe5Z,IAAIkT,GACjBjX,KAAK2d,eAAe3Z,IAAIiT,GAAM7U,QAAOsc,GAAKA,EAAEC,QAAO,GAEvD,IACV,CAKD,OAAAC,CAAQ7F,GACiB,iBAAVA,EACP/Y,KAAK8d,aAAa/E,GAGlB/Y,KAAK8Y,aAAaC,EAEzB,CAKD,OAAA8F,GACI,OAA8C,IAAvC7e,KAAK0d,WAAW7E,YAAYjX,QAAsD,IAAtC5B,KAAK0d,WAAW9E,WAAWhX,MACjF,CAKD,KAAAkd,GACI,OAAO9e,KAAKyF,EACf,CAKD,OAAAsZ,GACI,OAAO/e,KAAKO,IACf,CAKD,aAAAye,GACI,OAAOhf,KAAK0d,UACf,CAMD,aAAAf,CAAcsC,GACV,IAAK,IAAIC,KAAUlf,KAAKke,QACpB,GAAIgB,EAAOzZ,KAAOwZ,EACd,OAAOC,EAGf,OAAO,IACV,CAOD,gBAAAC,CAAiBC,GACb,IAAIlF,EAAOla,KAAKqf,kBAAkBrf,KAAKgf,gBAAiBI,GACxD,OAAKlF,GACM,IAGd,CAOD,iBAAAoF,CAAkBF,EAAQxW,GACtB,IAAI2W,EAAYvf,KAAKmf,iBAAiBC,GACtC,GAAIG,EAAW,CACX,QAAmC,IAAxBA,EAAU3W,GACjB,KAAM,qBAAuBA,EAEjC,QAAI2W,EAAU3W,MAGL2W,EAAUxE,aACfqE,EAASG,EAAUxE,WACnBwE,EAAYvf,KAAKmf,iBAAiBC,GAC3BG,GAAaA,EAAU3W,GAKrC,CAEG,OAAO,CACd,CAQD,iBAAAyW,CAAkBrF,EAAQoF,GACtB,IAAIzZ,EASA+D,EARJ,GAAIsQ,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK+D,EAAM,EAAGA,EAAMsU,EAAWtU,IAC3B,GAAIqU,EAAOpB,WAAWjT,GAAKF,IAAM2Z,EAC7B,OAAOpF,EAAOpB,WAAWjT,EAGpC,CAED,GAAIqU,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK+D,EAAM,EAAGA,EAAMwU,EAAgBxU,IAEhC,GADA+D,EAAM1J,KAAKqf,kBAAkBrF,EAAOnB,YAAYlT,GAAMyZ,GAClD1V,EACA,OAAOA,CAElB,CACD,OAAO,IACV,CACD,sBAAA8V,CAAuBxF,EAAQyF,GAC3B,IACI/G,EADAlU,EAAS,IAAIP,MAEbyb,EAAM,KACV,GAAI1F,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAI+d,EAAS,EAAGA,EAASxF,EAAgBwF,IAE1C,GADAD,EAAM1F,EAAOnB,YAAY8G,IACpBF,GAAcA,EAAWC,EAAK,MAAO,CACtChH,EAAUpZ,EAAKuU,QAAQ,WAAY6L,EAAInf,MAClCmY,IACDA,EAAUgH,EAAIhH,SAElB,IAAIkH,EAASvgB,EAAMqF,OAAO1E,KAAKsZ,eAAgB,CAAE7T,GAAIia,EAAInf,KAAMgd,KAAM7E,EAASmH,MAAO,GAAIC,UAAU,IACnGF,EAAOC,MAAQ7f,KAAKwf,uBAAuBE,EAAKD,GAC5CG,EAAOC,MAAMje,OAAS,GACtB4C,EAAOC,KAAKmb,EACnB,CAER,CACD,IAAI1F,EAAO,KACX,GAAIF,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIme,EAAU,EAAGA,EAAU9F,EAAW8F,IAEvC,GADA7F,EAAOF,EAAOpB,WAAWmH,IACpBN,GAAcA,EAAWzF,EAAQE,GAAO,CACzCxB,EAAUpZ,EAAKuU,QAAQ,aAAcqG,EAAKzU,IACrCiT,IACDA,EAAUwB,EAAKxB,SACnB,IAAIkH,EAASvgB,EAAMqF,OAAO1E,KAAKsZ,eAAgB,CAAE7T,GAAIyU,EAAKzU,GAAI8X,KAAM7E,EAASzK,SAAUiM,EAAKjM,WAC5FzJ,EAAOC,KAAKmb,EACf,CAER,CACD,OAAOpb,CACV,CACD,YAAAwb,CAAahG,EAAQH,EAAM4F,GACvB5F,EAAOA,GAAQ,GACf,IAEInB,EAFAuH,EAAiB,GACjBC,EAAmB,GAEnBR,EAAM,KACV,GAAI1F,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAI+d,EAAS,EAAGA,EAASxF,EAAgBwF,IAE1C,GADAD,EAAM1F,EAAOnB,YAAY8G,IACpBF,GAAcA,EAAWC,EAAK,MAAO,CACtChH,EAAUpZ,EAAKuU,QAAQ,WAAY6L,EAAInf,OAASmf,EAAIhH,QACpD,IAAIkH,EAASvgB,EAAMqF,OAAO1E,KAAKsZ,eAAgB,CAC3C7T,GAAIia,EAAInf,KACRgd,KAAM7E,EACNmH,MAAO,GACPC,UAAU,EACVnH,YAAa+G,EAAI/G,cAEjBwH,EAAU9gB,EAAMqF,OAAO,CAAE,EAAEmV,GAC/BsG,EAAQC,iBAAkB,EAC1BR,EAAOC,MAAQ7f,KAAKggB,aAAaN,EAAKS,EAASV,GAC3CG,EAAOC,MAAMje,OAAS,GACtBqe,EAAexb,KAAKmb,EAE3B,CAER,CACD,IAAI1F,EAAO,KACX,GAAIF,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIme,EAAU,EAAGA,EAAU9F,EAAW8F,IACvC7F,EAAOF,EAAOpB,WAAWmH,GACpBN,IAAcA,EAAWzF,EAAQE,KAClCxB,EAAUpZ,EAAKuU,QAAQ,aAAcqG,EAAKzU,KAAOyU,EAAKxB,QACtDwH,EAAiBzb,KAAKpF,EAAMqF,OAAO1E,KAAKyZ,iBAAiBO,GAAS,CAC9DvU,GAAIyU,EAAKzU,GAAI8X,KAAM7E,EACnBzK,SAAUiM,EAAKjM,SAAU8M,WAAYb,EAAKa,WAC1CpC,YAAauB,EAAKvB,eAIjC,CACD,IAaInU,EAbA6b,UAAY,CAAC5M,EAAGC,IACZD,EAAE8J,KAAK1U,eAAiB6K,EAAE6J,KAAK1U,cACxB,EAEP4K,EAAE8J,KAAK1U,cAAgB6K,EAAE6J,KAAK1U,cACvB,GAEH,EAgBZ,OAdIgR,EAAKyG,eACLL,EAAezM,KAAK6M,WACpBH,EAAiB1M,KAAK6M,YAOtB7b,EAJCqV,EAAK0G,eAAuC,GAAtB1G,EAAK0G,cAInBL,EAAiBM,OAAOP,GAHxBA,EAAeO,OAAON,GAKT,GAAtBrG,EAAK0G,eACL/b,EAAOgP,KAAK6M,WAEZxG,EAAKuG,iBACL1H,EAAUpZ,EAAKuU,QAAQ,WAAYmG,EAAOzZ,MACrCmY,IACDA,EAAUsB,EAAOtB,SACd,CAAEjT,GAAIuU,EAAOzZ,KAAMgd,KAAM7E,EAASmH,MAAOrb,IAGzCA,CAEd,CAID,KAAAic,GACIzgB,KAAK0d,WAAa1d,KAAKsZ,eACvBtZ,KAAKke,QAAU,GACfle,KAAKge,QAAU,EAClB,CAID,sBAAA0C,GACI,IAAIC,EACJA,EAAK3gB,KAAK4gB,uBAAuB,OAAQ/hB,EAAUE,KAAMJ,EAAS+D,QAClEie,EAAG3D,SAAW,GACdhd,KAAK4gB,uBAAuB,QAAS/hB,EAAUG,SAAUL,EAASK,UAClEgB,KAAK4gB,uBAAuB,QAAS/hB,EAAUG,SAAUL,EAASK,SACrE,CAQD,sBAAA4hB,CAAuBnb,EAAIqX,EAAKC,GAC5B,IAAI4D,EAAKthB,EAAMkG,aAAavF,KAAKke,QAASzY,GAQ1C,OAPKkb,IACDA,EAAK3gB,KAAK4c,oBACV+D,EAAGlb,GAAKA,EACRzF,KAAKke,QAAQzZ,KAAKkc,IAEtBA,EAAG7D,IAAMA,EACT6D,EAAG5D,QAAUA,EACN4D,CACV,CAQD,eAAAE,CAAgBhH,EAAM4F,GAClB,OAAOzf,KAAKggB,aAAahgB,KAAKgf,gBAAiBnF,EAAM4F,EACxD,CAOD,yBAAAqB,CAA0BrB,GACtB,OAAOzf,KAAKwf,uBAAuBxf,KAAKgf,gBAAiBS,EAC5D,CAOD,uBAAAsB,CAAwB3B,EAAQ4B,GAE5B,OADAA,EAAMA,GAAO,IACNhhB,KAAKihB,oBAAoBjhB,KAAKgf,gBAAiBI,EAAQ4B,GAAK,EACtE,CASD,mBAAAC,CAAoBjH,EAAQoF,EAAQ4B,EAAKE,GACrC,IAAKlH,EACD,MAAO,GACXgH,EAAMA,GAAO,IACb,IAAIG,EAAgB,GACpB,GAAInH,EAAOtB,UAAYwI,EAAM,CACzB,IAAIE,EAAa9hB,EAAKuU,QAAQ,WAAYmG,EAAOtB,SACjDyI,EAAgBC,GAA0BpH,EAAOtB,OACpD,CACD,GAAIsB,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIgD,EAAI,EAAGA,EAAIqV,EAAWrV,IAC3B,GAAIoV,EAAOpB,WAAWhU,GAAGa,IAAM2Z,EAC3B,OAAO+B,CAGlB,CACD,GAAInH,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAIgD,EAAI,EAAGA,EAAIuV,EAAgBvV,IAAK,CACrC,IAAI8a,EAAM1F,EAAOnB,YAAYjU,GACzB8E,EAAM1J,KAAKihB,oBAAoBvB,EAAKN,EAAQ4B,GAAK,GACrD,GAAY,KAARtX,EAGA,MAFsB,KAAlByX,IACAzX,EAAMyX,EAAgBH,EAAMtX,GACzBA,CAEd,CACJ,CACD,MAAO,EACV,CAOD,gBAAA2X,CAAiBnH,EAAMvP,GACnB,IAAI2W,EAAWhiB,EAAKuU,QAAQ,aAAcqG,EAAKzU,IAI/C,GAHK6b,IACDA,EAAWpH,EAAKxB,UAEf/N,EACD,OAAO2W,EAEX,IAAI9c,EAAS,GACT+c,EAAavhB,KAAK+gB,wBAAwB7G,EAAKzU,GAAI,KAQvD,OAPI8b,GACA/c,EAASmG,EAAOE,QAAQ,IAAI2W,OAAO,SAAU,KAAMF,GACnD9c,EAASA,EAAOqG,QAAQ,IAAI2W,OAAO,WAAY,KAAMD,IAGrD/c,EAAS8c,EAEN9c,EAAOxD,MACjB,CAQD,kBAAAygB,CAAmB9H,EAAkBC,GACjC5Z,KAAKgf,gBAAgBtF,KAAKC,EAAkBC,EAC/C,CAKD,yBAAA8H,CAA0BjC,GACtB,IAAI/V,EAAM,KAOV,OANA1J,KAAKyhB,oBAAmB,SAAUvH,EAAML,GAChC4F,EAAWvF,KACXL,EAAKC,MAAO,EACZpQ,EAAMwQ,EAEb,GAAE,MACIxQ,CACV,EAOL,MAAMiY,oBACF,WAAA9hB,CAAY+hB,GACR5hB,KAAK4hB,SAAWA,EAChB5hB,KAAK6hB,WAAa,GAClB7hB,KAAK8hB,OAAS,GACd9hB,KAAK+hB,gBAAiB,EACtB/hB,KAAKgiB,gBAAiB,EACtBhiB,KAAKiiB,sBAAuB,EAC5BjiB,KAAKkiB,iBAAmB,WAC3B,CACD,uBAAIC,GACA,OAAOniB,KAAKiiB,oBACf,CACD,uBAAIE,CAAoB3hB,GACpBR,KAAKiiB,qBAAuBzhB,EAC5BR,KAAKoiB,mBACR,CACD,iBAAAA,GACIpiB,KAAKqiB,cAAgBriB,KAAKiiB,qBACpBjiB,KAAKsiB,cACLtiB,KAAKuiB,sBACd,CACD,QAAAC,CAAS7Q,GACL,MAAM8Q,EAAO9Q,EAAS+Q,SAAW1iB,KAAK4hB,SAASe,aAAahR,EAASiR,KAAMjR,EAASkR,IACpF,IAAK7iB,KAAK4hB,SAASkB,gBAAgBL,GAC/B,KAAM,oBAAsBA,EAChC,GAAIziB,KAAK+iB,gBAAgBN,GACrB,KAAM,wDAEV,OADAziB,KAAK8hB,OAAOrd,KAAK/C,OAAOgD,OAAO,CAAEge,QAASD,GAAQ9Q,IAC3C3R,IACV,CACD,kBAAAgjB,CAAmBC,EAAcC,GAC7B,MAAMC,EAA+B,iBAAhBF,EACfA,EACAjjB,KAAK4hB,SAASe,aAAaM,EAAcA,GAAc,GAC7D,GAAIjjB,KAAK+iB,gBAAgB,CAACI,MAAYnjB,KAAK4hB,SAASwB,kBAAkBD,EAAOD,GACzE,KAAM,gDAAkDC,EAE5D,OADAnjB,KAAK6hB,WAAWpd,KAAK,CAAE0e,QAAOD,WACvBljB,IACV,CACD,cAAAqjB,GAEI,OADArjB,KAAK+hB,gBAAiB,EACf/hB,IACV,CACD,SAAAsjB,GAEI,OADAtjB,KAAKgiB,gBAAiB,EACfhiB,IACV,CACD,SAAAujB,GACI,IAAId,EAAO,GAKX,OAJoBziB,KAAK8hB,OAAOhgB,KAAI0hB,IAChCf,EAAOA,EAAKjC,OAAOgD,EAAId,SAChBhhB,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAA,EAAI8e,GAAM,CAAEd,QAASze,MAAM2e,KAAKH,GAAOZ,WAAY5d,MAAM2e,KAAK5iB,KAAK6hB,gBAG7G,CACD,iBAAA4B,GACI,OAAOzjB,KAAK8hB,MACf,CACD,SAAA4B,GACI,MAAM5B,EAAS9hB,KAAKujB,YACpB,OAAOzB,EAAOA,EAAOlgB,OAAS,EACjC,CACD,aAAA+hB,GACI,OAAO3jB,KAAK6hB,UACf,CACD,aAAA+B,GACI,OAAO5jB,KAAK6hB,WAAWjgB,OAAS,CACnC,CACD,SAAAiiB,GACI,OAAO7jB,KAAK8hB,OAAOlgB,OAAS,CAC/B,CACD,cAAAkiB,GACI,OAAO9jB,KAAK+hB,cACf,CACD,cAAAgC,GACI,OAAO/jB,KAAKgiB,cACf,CACD,OAAAnD,GACI,QAAS7e,KAAK4jB,iBAAmB5jB,KAAK6jB,aAClC7jB,KAAK4jB,iBAAmB5jB,KAAK+jB,iBACpC,CACD,IAAAC,GACI1V,QAAQC,KAAK,sDACbvO,KAAKygB,OACR,CACD,KAAAA,GAMI,OALAzgB,KAAK8hB,OAAS,GACd9hB,KAAK6hB,WAAa,GAClB7hB,KAAK+hB,gBAAiB,EACtB/hB,KAAKgiB,gBAAiB,EACtBhiB,KAAKmiB,qBAAsB,EACpBniB,IACV,CAOD,eAAA+iB,CAAgBN,GACZ,IAAK,MAAMwB,KAASjkB,KAAK8hB,OAAQ,CAG7B,GAFkBmC,EAAMvB,QACnBtgB,QAAO8hB,GAAKzB,EAAK3c,QAAQoe,IAAM,IACtBtiB,OAAS,EACnB,OAAO,CACd,CACD,IAAK,MAAMuiB,KAAQnkB,KAAK6hB,WACpB,GAAIY,EAAK3c,QAAQqe,EAAKhB,QAAU,EAC5B,OAAO,EAEf,OAAO,CACV,CACD,mBAAAiB,GACI,OAAQpkB,KAAK4jB,iBAAmB5jB,KAAK+jB,oBAC7B/jB,KAAK8jB,kBAAoB9jB,KAAK6jB,YACzC,CACD,UAAAQ,GACI,MAAO,CACHvC,OAAQ7d,MAAM2e,KAAK5iB,KAAK8hB,QACxBwC,IAAKtkB,KAAK+hB,eACVwC,IAAKvkB,KAAKgiB,eACVwC,IAAKxkB,KAAKmiB,oBACVN,WAAY5d,MAAM2e,KAAK5iB,KAAK6hB,YAEnC,CACD,YAAA/I,CAAazY,GACLA,SACwB,IAAbA,EAAKikB,MACZtkB,KAAK+hB,eAAiB1hB,EAAKikB,UACP,IAAbjkB,EAAKkkB,MACZvkB,KAAKgiB,eAAiB3hB,EAAKkkB,UACP,IAAblkB,EAAKmkB,MACZxkB,KAAKmiB,oBAAsB9hB,EAAKmkB,KAChCnkB,EAAKyhB,SACL9hB,KAAK8hB,OAAS7d,MAAM2e,KAAKviB,EAAKyhB,SAE9BzhB,EAAKwhB,aACL7hB,KAAK6hB,WAAa5d,MAAM2e,KAAKviB,EAAKwhB,aAG7C,CACD,aAAA4C,CAAcR,EAAOS,GACjB,MAAMC,GAAmB3kB,KAAKmiB,oBAC9B,IAAI3d,EAAS,CAAA,EACb,GAAIyf,EACA,IAAK,MAAMd,KAASc,EAAMvB,QAAS,CAC/B,IAAIkC,EAASF,EAAIG,SAAS1B,GACtBwB,GAAuC,iBAApB,IACnBC,EAASA,EAAO/b,eAEpBrE,EAAO2e,GAASyB,CACnB,CAEL,OAAOpgB,CACV,CAED,aAAA8d,CAAcwC,EAAQC,GAClB,OAAID,aAAkBtiB,KACXsiB,EAAOra,YAAcsa,EAAOta,UAG5Bqa,IAAWC,CACzB,CAED,sBAAAxC,CAAuBuC,EAAQC,GAC3B,GAAID,aAAkBtiB,KAClB,OAAOsiB,EAAOra,YAAcsa,EAAOta,UAKnC,OAFgC,iBAAXqa,EAAuBA,EAAOjc,cAAgBic,MACnC,iBAAXC,EAAuBA,EAAOlc,cAAgBkc,EAG1E,GAIL,SAAWxlB,GACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAuB,MAAI,GAAK,OACnD,CALD,CAKGA,IAAoBA,EAAkB,CAAE,IAC3C,MAAMylB,WACF,WAAAnlB,CAAYuO,GACR,IAAKA,EACD,MAAMpB,MAAM,wBAChB,IAAKoB,EAAK3I,GACN,MAAMuH,MAAM,wBAChB,IAAKoB,EAAK6W,MACN,MAAMjY,MAAM,qBAChBhN,KAAKyF,GAAK2I,EAAK3I,GACfzF,KAAKiX,KAAO5X,EAAM0F,aAAaqJ,EAAK6I,KAAMtY,EAAS+D,QACnD1C,KAAKilB,MAAQ7W,EAAK6W,MAClBjlB,KAAKklB,aAAe9W,EAAK8W,aACzBllB,KAAKmlB,OAAS/W,EAAK+W,SAAU,EAC7BnlB,KAAKqc,cAAgBjO,EAAKkO,KAC1Btc,KAAKolB,0BAA4BhX,EAAKiX,KACtCrlB,KAAK4X,MAAQxJ,EAAKwJ,OAAS,CAAA,EAC3B5X,KAAK2Y,YAAcvK,EAAKuK,YACxB3Y,KAAKslB,gBAAkB,CAC1B,EAEL,MAAMC,eACF,WAAA1lB,GACIG,KAAK6f,MAAQ,GACb7f,KAAKgS,OAAS,GACdhS,KAAKwlB,eAAiB,EACzB,CACD,SAAIC,GACA,OAAOzlB,KAAK6f,MAAMje,MACrB,CACD,GAAA8jB,CAAIC,GACA,IAAIC,EAEAA,EADAD,aAAqBX,WACfW,EAGA,IAAIX,WAAWW,GAEzB,MAAMtf,EAAQrG,KAAK6f,MAAMje,OAMzB,OALA5B,KAAK6f,MAAMpb,KAAKmhB,GAChB5lB,KAAKgS,OAAO4T,EAAIngB,IAAMY,EAClB,CAAC1H,EAAS6D,KAAM7D,EAASK,SAAUL,EAAS4D,MAAMuD,QAAQ8f,EAAI3O,OAAS,GACvEjX,KAAKwlB,eAAe/gB,KAAK4B,GAEtBA,CACV,CACD,mBAAAwf,GACI7lB,KAAKwlB,eAAiBxlB,KAAK8lB,WACtB1jB,QAAOwjB,GAAO,CAACjnB,EAAS6D,KAAM7D,EAASK,SAAUL,EAAS4D,MAAMuD,QAAQ8f,EAAI3O,OAAS,IACrFnV,KAAI,CAAC8jB,EAAKvf,IAAUA,GAC5B,CACD,GAAAyH,CAAIzH,EAAOuf,GACHvf,GAAS,GAAKA,EAAQrG,KAAKylB,QAC3BzlB,KAAK6f,MAAMxZ,GAASuf,EACpB5lB,KAAK6lB,sBAEZ,CACD,IAAAE,CAAKH,EAAKI,GACN,IAAIC,EAAWjmB,KAAK6f,MAAM/Z,QAAQ8f,GAC9BK,GAAY,GAAKA,GAAYD,IAC7B3mB,EAAM2G,cAAchG,KAAK6f,MAAOoG,EAAUD,GAC1ChmB,KAAK6lB,sBAEZ,CACD,GAAA7hB,CAAIqC,GACA,OAAIA,GAAS,GAAKA,EAAQrG,KAAKylB,MACpBzlB,KAAK6f,MAAMxZ,GAGX,IAEd,CACD,QAAA6f,CAASzgB,GACL,OAAOzF,KAAKgS,OAAOvM,EACtB,CACD,QAAAqgB,GACI,OAAO9lB,KAAK6f,KACf,CACD,oBAAAsG,GACI,OAAOnmB,KAAKwlB,cACf,CACD,QAAAY,CAAS/f,GACL,MAAMuf,EAAM5lB,KAAKgE,IAAIqC,GACrBrG,KAAK6f,MAAM1Z,OAAOE,EAAO,GACzB,MAAMggB,EAAarmB,KAAKwlB,eAAe1f,QAAQO,GAC3CggB,GAAc,GACdrmB,KAAKwlB,eAAerf,OAAOkgB,EAAY,UAEpCrmB,KAAKgS,OAAO4T,EAAIngB,GAC1B,CACD,KAAAgb,GACIzgB,KAAK6f,MAAQ,GACb7f,KAAKwlB,eAAiB,GACtBxlB,KAAKgS,OAAS,EACjB,EAGL,MAAMsU,QACF,WAAAzmB,CAAY6iB,EAASvgB,GACjBnC,KAAK0iB,QAAUA,EACf1iB,KAAKmC,OAASA,CACjB,CACD,OAAAokB,GACI,OAAOtiB,MAAM2e,KAAK5iB,KAAKmC,OAC1B,CACD,IAAAqY,GACI,OAAOxa,KAAKmC,OAAOP,MACtB,CACD,QAAAijB,CAAS2B,GACL,IAAIngB,EACJ,GAA4B,iBAAjBmgB,GAEP,GADAngB,EAAQrG,KAAK0iB,QAAQwD,SAASM,QAChBxf,IAAVX,EACA,MAAM,IAAIogB,WAAW,sBAAsBD,WAI/CngB,EAAQmgB,EAEZ,GAAIngB,GAASrG,KAAKmC,OAAOP,OACrB,MAAM,IAAI6kB,WAAW,iBAAmBpgB,GAC5C,OAAOrG,KAAKmC,OAAOkE,EACtB,CACD,QAAAqgB,CAASF,EAAchmB,GACnB,IAAI6F,EACJ,GAA4B,iBAAjBmgB,GAEP,GADAngB,EAAQrG,KAAK0iB,QAAQwD,SAASM,QAChBxf,IAAVX,EACA,MAAM,IAAIogB,WAAW,sBAAsBD,WAI/CngB,EAAQmgB,EAEZ,GAAIngB,GAASrG,KAAKmC,OAAOP,OACrB,MAAM,IAAI6kB,WAAW,iBAAmBpgB,GAC5CrG,KAAKmC,OAAOkE,GAAS7F,CACxB,EAGL,MAAMmmB,cACF,WAAA9mB,CAAY4N,GAoBR,GAnBAzN,KAAK4mB,WAAa,IAClB5mB,KAAK6mB,gBAAiB,EACtB7mB,KAAK8mB,WAAa,GAClB9mB,KAAK+mB,MAAQ,EACb/mB,KAAKgnB,OAAS,KACdhnB,KAAKinB,WAAY,EACjBjnB,KAAKknB,YAAa,EAClBzZ,EAAUA,GAAW,GACrBzN,KAAK4mB,WAAanZ,EAAQ0Z,WAAannB,KAAK4mB,WAC5C5mB,KAAK6mB,eAAiBpZ,EAAQ2Z,eAAiBpnB,KAAK6mB,eACpD7mB,KAAKgnB,OAASvZ,EAAQuZ,YACU,IAArBvZ,EAAQ4Z,WACfrnB,KAAKknB,WAAazZ,EAAQ4Z,UAE1BrnB,KAAKknB,aACLlnB,KAAKinB,WAAY,GAErBjnB,KAAKsnB,SAAW,IAAI/B,eACpBvlB,KAAKunB,SAAW9Z,EAAQ8Z,SACpB9Z,EAAQiV,QACR,IAAK,MAAM8E,KAAW/Z,EAAQiV,QAC1B1iB,KAAKsnB,SAAS5B,IAAI8B,GAG1B,GAAI/Z,EAAQga,KACR,IAAK,MAAMC,KAAWja,EAAQga,KAAM,CAChC,MAAM/C,EAAM1kB,KAAK2nB,UAAUD,GAC3B1nB,KAAK4nB,OAAOlD,EACf,CAEL1kB,KAAKinB,WAAajnB,KAAK6mB,cAC1B,CACD,WAAInE,GACA,OAAO1iB,KAAKsnB,QACf,CACD,aAAIH,GACA,OAAOnnB,KAAK4mB,UACf,CACD,aAAIO,CAAU3mB,GACVR,KAAK4mB,WAAapmB,EAClBR,KAAK+mB,MAAQ,EACb/mB,KAAKinB,WAAajnB,KAAKonB,cACvBpnB,KAAK8mB,WAAa,EACrB,CACD,iBAAIM,GACA,OAAOpnB,KAAK6mB,cACf,CACD,iBAAIO,CAAc5mB,GACdR,KAAK6mB,eAAiBrmB,EACtBR,KAAK+mB,MAAQ,EACb/mB,KAAKinB,WAAajnB,KAAKonB,cACvBpnB,KAAK8mB,WAAa,EACrB,CACD,OAAAe,CAAQC,GACJ,IAAIC,EAAY,EAAGtC,EAAQzlB,KAAK4mB,WAC5BkB,IACI,SAAUA,GACVC,EAAYD,EAAOE,UAAYF,EAAOG,KAAO,GAC7CxC,EAAQqC,EAAOE,WAGfD,EAAYD,EAAOI,OACnBzC,EAAQqC,EAAOK,QAGvB,IAAIC,EAAWL,EAAYtC,EAE3B,IAAKzlB,KAAKinB,YAAcjnB,KAAKonB,cAAe,CACxC,GAAIW,GAAa/nB,KAAK+mB,MAClB,OAAOnY,QAAQC,QAAQ,IAEvBuZ,EAAWpoB,KAAK+mB,QAChBqB,EAAWpoB,KAAK+mB,MAEvB,CAKD,GAJI/mB,KAAKknB,YAAckB,EAAWpoB,KAAK8mB,WAAWllB,SAC9CwmB,EAAWpoB,KAAK8mB,WAAWllB,QAETwmB,GAAYpoB,KAAK8mB,WAAWllB,OAE9C,OAAOgN,QAAQC,QAAQ7O,KAAK8mB,WAAWtP,MAAMuQ,EAAWK,IAG5D,IAAKpoB,KAAKgnB,OACN,KAAM,kDAAkDe,QAAgBK,IAG5E,MAAMnB,EAAYjnB,KAAKinB,UACnBjnB,KAAKinB,YACLjnB,KAAKinB,WAAY,GAErB,IAAIiB,EAASloB,KAAK8mB,WAAWllB,OACzBumB,EAAQC,EAAWF,EACnBC,EAAQnoB,KAAK4mB,aACbuB,EAAQnoB,KAAK4mB,YAwBjB,OAtBsB5mB,KAAKgnB,OAAOqB,UAAU,CACxCH,OAAQA,EACRC,MAAOA,EACPlB,UAAWA,IAEVxa,MAAKjI,IAQN,GAPIyiB,IACAjnB,KAAK+mB,MAAQviB,EAAOuiB,OAExB9iB,MAAMqkB,UAAU7jB,KAAK8jB,MAAMvoB,KAAK8mB,WAAYtiB,EAAOgkB,MAAMC,iBACrDL,EAAWpoB,KAAK8mB,WAAWllB,SAC3BwmB,EAAWpoB,KAAK8mB,WAAWllB,QAE3B5B,KAAKonB,cAAe,CACN5iB,EAAOgkB,MAAME,iBACfP,IACRnoB,KAAK+mB,MAAQ/mB,KAAK8mB,WAAWllB,OAEpC,CAED,OADA5B,KAAK2oB,cACE3oB,KAAK8mB,WAAWtP,MAAMuQ,EAAWK,EAAS,GAGxD,CACD,MAAAQ,CAAOviB,GACH,OAAOrG,KAAK6nB,QAAQ,CAAEK,OAAQ7hB,EAAO8hB,MAAO,IACvC1b,MAAKgb,GAAQA,EAAK7lB,OAAS,EAAI6lB,EAAK,GAAK,MACjD,CACD,QAAAoB,GACI,OAAO7oB,KAAK+mB,KACf,CACD,QAAA+B,CAAS/B,GACL/mB,KAAK+mB,MAAQA,EACb/mB,KAAKinB,WAAY,CACpB,CACD,cAAAyB,GACI,OAAO1oB,KAAK8mB,WAAWllB,MAC1B,CACD,KAAA6e,GACIzgB,KAAK0iB,QAAQjC,QACbzgB,KAAK8mB,WAAa,GAClB9mB,KAAK+mB,MAAQ,EACb/mB,KAAKinB,WAAajnB,KAAK6mB,eACvB7mB,KAAK2oB,aACR,CACD,SAAAhB,CAAUoB,GACN,MAAMC,EAAUhpB,KAAKsnB,SAASnB,uBACxBhkB,EAAS,IAAI8B,MAAMjE,KAAKsnB,SAAS7B,OACjCZ,EAAWkE,aAAqBzC,QAC/BnD,GAAU4F,EAAUlE,SAAS1B,GAC7BA,GAAU4F,EAAU5F,GAU3B,OATI4F,GACA/oB,KAAK0iB,QAAQoD,WAAWvO,SAAS0R,IAC7B,MAAMzoB,EAAQqkB,EAASoE,EAAOxjB,IACxBY,EAAQrG,KAAK0iB,QAAQwD,SAAS+C,EAAOxjB,IAC3CtD,EAAOkE,GAAU2iB,EAAQljB,QAAQO,IAAU,EACrCrG,KAAKkpB,QAAQ1oB,EAAOyoB,EAAOhS,MAC3BzW,CAAK,IAGZ,IAAI8lB,QAAQtmB,KAAKsnB,SAAUnlB,EACrC,CACD,OAAA+mB,CAAQ1oB,EAAOyH,GACX,GAAIzH,EAAO,CACP,IAAIgE,EAAS,IAAIhC,KAAKhC,GAKtB,OAJI4H,MAAM5D,EAAOiG,YACVxC,GAAStJ,EAAS4D,OACrBiC,EAASnF,EAAM6M,UAAU1L,IAEtBgE,CACV,CACD,OAAO,IACV,CACD,MAAAojB,CAAOuB,GACH,IAAIC,EACJ,GAAInlB,MAAMC,QAAQilB,GAAc,CAC5B,IAAIhnB,EAASgnB,EACb,MAAMH,EAAUhpB,KAAKsnB,SAASnB,uBAC9B,GAAI6C,EAAQpnB,OAAS,EACjB,IAAK,MAAM+D,KAAOqjB,EACV7mB,EAAOwD,KACPxD,EAAOwD,GAAO3F,KAAKkpB,QAAQ/mB,EAAOwD,GAAM3F,KAAKsnB,SAAStjB,IAAI2B,GAAKsR,OAI3EmS,EAAS,IAAI9C,QAAQtmB,KAAKsnB,SAAUnlB,EACvC,MAEGinB,EAASppB,KAAK2nB,UAAUwB,GAE5BnpB,KAAK8mB,WAAWriB,KAAK2kB,GACrB,MAAMC,EAAcrpB,KAAK0oB,iBAIzB,OAHIW,EAAcrpB,KAAK+mB,QACnB/mB,KAAK+mB,MAAQsC,GAEVD,CACV,CACD,aAAAX,GACI,OAAOzoB,KAAK8mB,UACf,CACD,YAAAwC,GACI,GAAItpB,KAAKonB,cAAe,CAEpB,OADcpnB,KAAK0oB,mBACF1oB,KAAK+mB,KACzB,CACD,OAAQ/mB,KAAKinB,SAChB,CACD,WAAA0B,GACQ3oB,KAAKunB,UACLvnB,KAAKunB,SAASvnB,KAErB,EAML,MAAMupB,SAKF,cAAOC,GACH,MAAO,uCAAuC3e,QAAQ,SAAS,SAAUqZ,GACrE,IAAIuF,EAAoB,GAAhB7iB,KAAK4C,SAAgB,EAC7B,OADyC,KAAL0a,EAAWuF,EAAS,EAAJA,EAAU,GACrDlV,SAAS,GAC9B,GACK,EAML,MAAMmV,aAKF,WAAA7pB,CAAY8D,GACR3D,KAAK2pB,WAAa,EAClB3pB,KAAK4pB,OAAS,IAAI3lB,MAClBjE,KAAK2D,OAASA,CACjB,CAOD,SAAAkmB,CAAUC,EAAWC,GACjB,IAAIC,EAAQhqB,KAAKiqB,kBAAkBH,GACnC,MAAMI,EAAgB,CAClBzkB,GAAI8jB,SAASC,UACbO,SAAUA,GAYd,OAVIC,EACAA,EAAMG,eAAe1lB,KAAKylB,IAG1BF,EAAQ,CACJ/S,KAAM6S,EACNK,eAAgB,IAAIlmB,MAAMimB,IAE9BlqB,KAAK4pB,OAAOnlB,KAAKulB,IAEdE,EAAczkB,EACxB,CAMD,WAAA2kB,CAAYN,EAAWO,GACnB,IAAIL,EAAQhqB,KAAKiqB,kBAAkBH,GACnC,GAAIE,EAAO,CACP,IAAI3jB,GAAS,EACb,IAAKA,EAAQ,EAAGA,EAAQ2jB,EAAMG,eAAevoB,QACrCooB,EAAMG,eAAe9jB,GAAOZ,KAAO4kB,EADUhkB,KAKjDA,GAAS,GACT2jB,EAAMG,eAAehkB,OAAOE,EAAO,EAE1C,CACJ,CAQD,IAAAikB,CAAKR,EAAWzpB,EAAMkqB,EAAW,EAAGC,GAAQ,GACxC,GAAIxqB,KAAK2pB,aAAea,EACpB,OAEJ,IAAIC,EAAWzqB,KAAKiqB,kBAAkBH,GACtC,GAAIW,EAAU,CACV,MAAMC,EAAU,CACZzT,KAAM6S,EACNnmB,OAAQ3D,KAAK2D,OACbtD,KAAMA,GAEV,IAAIsqB,YAAc,KACd,IAAK,IAAIZ,KAAYU,EAASN,eAC1BJ,EAASA,SAASW,EACrB,EAEDH,EAAW,EACXK,WAAWD,YAAaJ,GAGxBI,aAEP,CACJ,CAID,eAAAE,GACI7qB,KAAK2pB,YACR,CAID,cAAAmB,GACQ9qB,KAAK2pB,YACL3pB,KAAK2pB,YAEZ,CAKD,QAAAoB,GACI,OAAO/qB,KAAK2pB,WAAa,CAC5B,CACD,iBAAAM,CAAkBH,GACd,IAAK,IAAIE,KAAShqB,KAAK4pB,OACnB,GAAII,EAAM/S,MAAQ6S,EACd,OAAOE,EAGf,OAAO,IACV,GAgCL,SAAWxqB,GAWPA,EAAOwrB,qBAVP,SAASA,qBAAqBC,EAAUC,GACpC,IAAI1mB,EAASymB,EACb,GAAIC,EACA,IAAK,IAAI7T,KAAK6T,EAAM,CAChB,MAAMC,EAAkB,IAAI3J,OAAO,KAASnK,EAAI,KAAQ,KACxD7S,EAASA,EAAOqG,QAAQsgB,EAAiBD,EAAK7T,GACjD,CAEL,OAAO7S,CACV,CAEJ,CAZD,CAYGhF,IAAWA,EAAS,CAAE,IAEzBF,EAAKuV,eAGwB,mBAAlBnT,OAAOS,SACdT,OAAOS,OAAS,SAAUwG,GACtB,OAAOjH,OAAOC,KAAKgH,GAAK7G,KAAI8B,GAAO+E,EAAI/E,IAC/C,GAE0B,mBAAfgD,KAAKwR,QACZxR,KAAKwR,MAAQ,SAAUgT,GACnB,OAAIhjB,MAAMgjB,GACCC,IAEPD,EAAI,EACGxkB,KAAK2C,MAAM6hB,GAEfxkB,KAAK0kB,KAAKF,EACzB,GClsFA,MAAMG,aACF,WAAA1rB,CAAY8K,GACR3K,KAAKwG,MAAMmE,EACd,CAKD,KAAAnE,CAAMmE,GACF3K,KAAKwrB,UAAY7gB,EACjB3K,KAAKyrB,IAAM,EACXzrB,KAAK0rB,QAAU,EACf1rB,KAAK2rB,UAAY,EACpB,CAID,UAAAC,GACI,KAAO5rB,KAAKyrB,IAAMzrB,KAAKwrB,UAAU5pB,QAA8C,MAApC5B,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,MAClEzrB,KAAKyrB,KACZ,CAID,IAAAI,GAEI,GADA7rB,KAAK4rB,aACD5rB,KAAKyrB,KAAOzrB,KAAKwrB,UAAU5pB,OAC3B,OAAO,EACX,IAAIkqB,EAAO,EACX,GAAwC,MAApC9rB,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,KAAc,CAEzC,IADAK,EAAO9rB,KAAKwrB,UAAU1lB,QAAQ,IAAK9F,KAAKyrB,MAC7B,EACP,OAAO,EACXzrB,KAAK2rB,UAAY3rB,KAAKwrB,UAAU9V,UAAU1V,KAAKyrB,IAAKK,EAAO,GACnB,IAApC9rB,KAAK2rB,UAAU7lB,QAAQ,WACvB9F,KAAK+rB,MAAQ,aACb/rB,KAAK0rB,QAAU/hB,SAAS3J,KAAK2rB,UAAUjW,UAAU,EAAG1V,KAAK2rB,UAAU/pB,UAEvE5B,KAAKyrB,IAAMK,EAAO,CACrB,MACI,GAAwC,MAApC9rB,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,MAAgBzrB,KAAKyrB,IAAMzrB,KAAKwrB,UAAU5pB,OAAS,GAA6C,MAAxC5B,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,IAAM,GACzHzrB,KAAKyrB,KAAO,EACZK,EAAO9rB,KAAKwrB,UAAU1lB,QAAQ,KAAM9F,KAAKyrB,KACzCzrB,KAAK+rB,MAAQ,WACb/rB,KAAK2rB,UAAY3rB,KAAKwrB,UAAU9V,UAAU1V,KAAKyrB,IAAKK,GACpD9rB,KAAKyrB,IAAMK,EAAO,MAEjB,CACD9rB,KAAK+rB,MAAQ,OACb,IAAIC,EAAQhsB,KAAKwrB,UAAU1lB,QAAQ,IAAK9F,KAAKyrB,KACzCO,EAAQ,IACRA,EAAQhsB,KAAKwrB,UAAU5pB,QAC3B,IAAIqqB,EAAQjsB,KAAKwrB,UAAU1lB,QAAQ,KAAM9F,KAAKyrB,KAC1CQ,EAAQ,IACRA,EAAQjsB,KAAKwrB,UAAU5pB,QAC3BkqB,EAAOllB,KAAKE,IAAIklB,EAAOC,GACvBjsB,KAAK2rB,UAAY3rB,KAAKwrB,UAAU9V,UAAU1V,KAAKyrB,IAAKK,GAAM9qB,OAC1DhB,KAAKyrB,IAAMK,CACd,CACD,OAAO,CACV,CAID,QAAAI,GACI,MAAO,CACHjV,KAAMjX,KAAK+rB,MACXxO,KAAMvd,KAAK2rB,UACXtlB,MAAOrG,KAAK0rB,QAAU,EAE7B,CAID,KAAAlc,GACI,IAAIhL,EAAS,GACb,KAAOxE,KAAK6rB,QACRrnB,EAAOC,KAAKzE,KAAKksB,YAErB,OAAO1nB,CACV,GAKL,SAAW/E,GAKPA,EAASA,EAAe,KAAI,GAAK,OAEjCA,EAASA,EAAc,IAAI,GAAK,MAKhCA,EAASA,EAAiB,OAAI,GAAK,SAEnCA,EAASA,EAAc,IAAI,GAAK,KACnC,CAfD,CAeGA,IAAaA,EAAW,CAAE,IAG7B,SAAWC,GAmBPA,EAAQysB,YAZR,SAASA,YAAYC,EAAOC,GACxB,IAAI7nB,EAAS4nB,EASb,OARc,MAAV5nB,GAAkBA,EAAO5C,OAAS,GACM,KAApC4C,EAAO0S,OAAO1S,EAAO5C,OAAS,KAC9B4C,GAAU,KACdA,GAAU6nB,GAGV7nB,EAAS6nB,EAEN7nB,CACV,EAoBD9E,EAAQ4sB,cAdR,SAASA,cAAcrjB,GACnB,MAAW,OAAPA,EACOxJ,EAAS8sB,IAEJ,UAAPtjB,EACExJ,EAAS+sB,OAEJ,OAAPvjB,EACExJ,EAASgtB,IAGThtB,EAASitB,IAEvB,EAoBDhtB,EAAQitB,cAdR,SAASA,cAAc1V,GACnB,OAAIA,IAASxX,EAAS8sB,IACX,MAEFtV,IAASxX,EAAS+sB,OAChB,SAEFvV,GAAQxX,EAASgtB,IACf,MAGA,MAEd,EAiBD/sB,EAAQktB,oBAXR,SAASA,oBAAoBC,GACzB,IAAIliB,EAASrL,EAAKuU,QAAQ,YAAagZ,EAASpnB,GAAI,UAQpD,OAPKkF,IACDA,EAASrL,EAAKuU,QAAQ,YAAagZ,EAASpnB,GAAI,kBAE/CkF,IACDA,EAASkiB,EAASxQ,eAEP,IAAIkP,aAAa5gB,GAClB6E,OACjB,EAuBD9P,EAAQotB,aAdR,SAASA,aAAatsB,EAAOusB,EAAcC,GACvC,OAAQA,GACJ,KAAKruB,EAAS+D,OACV,OAAOlC,EACX,KAAK7B,EAASyE,QAASzE,EAASmE,KAAMnE,EAASqE,MAAOrE,EAASsE,MAAOtE,EAASoE,KAC3E,IAAIkqB,EAAStjB,SAASnJ,GACtB,OAAO4H,MAAM6kB,GAAU,GAAKA,EAAO1Y,WACvC,KAAK5V,EAASwE,SAAUxE,EAASuE,MAC7B,IAAIgqB,EAAW7kB,WAAW7H,GAC1B,OAAO4H,MAAM8kB,GAAY,GAAKA,EAAS3Y,WAC3C,QACI,MAAO,GAElB,CAEJ,CAhGD,CAgGG7U,IAAYA,EAAU,CAAE,IAK3B,MAAMytB,aAEF,WAAAttB,GACIG,KAAKyF,GAAK,GACVzF,KAAK0Y,QAAU,GACf1Y,KAAKotB,QAAU,GACfptB,KAAKqc,cAAgB,GACrBrc,KAAKqtB,aAAe,EACvB,CAKD,YAAAvU,CAAawU,GACLA,IACAttB,KAAKyF,GAAK6nB,EAAa7nB,GACvBzF,KAAK0Y,QAAU4U,EAAanS,KAC5Bnb,KAAKqc,cAAgBiR,EAAaC,IAClCvtB,KAAKotB,QAAUE,EAAatS,KAC5Bhb,KAAKqtB,aAAeC,EAAaE,QAAUxtB,KAAKqtB,aAEvD,CACD,wBAAAI,GACI,OAAIztB,KAAKqtB,aAAazrB,OAAS,EACpB5B,KAAKqtB,aACA,QAAZrtB,KAAKyF,IAA4B,QAAZzF,KAAKyF,GACnB,CAAC9G,EAASyE,QAASzE,EAASmE,KAAMnE,EAASwE,SAAUxE,EAASuE,MAAOvE,EAASqE,MACjFrE,EAASsE,MAAOtE,EAASoE,MAEZ,QAAZ/C,KAAKyF,IAA4B,QAAZzF,KAAKyF,GACxB,CAAC9G,EAASyE,QAASzE,EAAS+uB,IAAK/uB,EAASmE,KAAMnE,EAASwE,SAAUxE,EAAS6D,KAAM7D,EAASK,SAAUL,EAAS4D,KACjH5D,EAASuE,MAAOvE,EAASqE,MAAOrE,EAASsE,MAAOtE,EAASoE,MAE1D1D,EAAM6C,iBAChB,EAML,MAAMyrB,sBAAsB9Q,YAExB,WAAAhd,GACIsN,OACH,CAKD,YAAA2L,CAAazY,GACT8M,MAAM2L,aAAazY,GACfA,IACIA,EAAKutB,MACL5tB,KAAK6tB,UAAYxtB,EAAKutB,KAEtBvtB,EAAKytB,cACL9tB,KAAK8tB,YAAcztB,EAAKytB,aAGnC,GAKL,SAAWnuB,GAEPA,EAASA,EAAiB,OAAI,GAAK,SAEnCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAoB,UAAI,GAAK,YAEtCA,EAASA,EAAe,KAAI,GAAK,OAEjCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAuB,aAAI,GAAK,cAC5C,CAbD,CAaGA,IAAaA,EAAW,CAAE,IAK7B,MAAMouB,SAEF,WAAAluB,GACIG,KAAKyF,GAAK,GACVzF,KAAKgb,KAAO,GACZhb,KAAKguB,iBAAmB,UACxBhuB,KAAK0Y,QAAU,0BACf1Y,KAAKqc,cAAgB,8CACrBrc,KAAKiuB,SAAU,EACfjuB,KAAKkuB,SAAU,EACfluB,KAAKmuB,WAAa,EAClBnuB,KAAKouB,eAAiB,IAAIC,QAC1BruB,KAAKqtB,aAAe,GACpBrtB,KAAKsuB,SAAW,IAAIrqB,KACvB,CAMD,YAAA6U,CAAaC,EAAO1Y,GAChB,GAAIA,IACAL,KAAKyF,GAAKpF,EAAKoF,GACfzF,KAAK0Y,QAAUrY,EAAK8a,KACpBnb,KAAKkuB,QAAU7tB,EAAK6tB,QACpBluB,KAAKiuB,QAAU5tB,EAAK4tB,QACpBjuB,KAAKqc,cAAgBhc,EAAKktB,IAC1BvtB,KAAKmuB,WAAa9tB,EAAKkuB,KACvBvuB,KAAKgb,KAAO3a,EAAK2a,KACjBhb,KAAKqtB,aAAehtB,EAAKmtB,QAAUxtB,KAAKqtB,aACpChtB,EAAKmuB,YACLxuB,KAAKouB,eAAetV,aAAaC,EAAO1Y,EAAKmuB,YAE7CnuB,EAAK6e,SACLlf,KAAKouB,eAAelP,OAASnG,EAAM4D,cAActc,EAAK6e,SAAW,IAAIyO,eAErEttB,EAAKiuB,UACL,IAAK,IAAI1pB,EAAI,EAAGA,EAAIvE,EAAKiuB,SAAS1sB,OAAQgD,IAAK,CAC3C,IAAI6pB,EAAa,IAAIJ,QACrBI,EAAW3V,aAAaC,EAAO1Y,EAAKiuB,SAAS1pB,IACzCvE,EAAK6e,SACLuP,EAAWvP,OAASnG,EAAM4D,cAActc,EAAK6e,SAAW,IAAIyO,eAEhE3tB,KAAKsuB,SAAS7pB,KAAKgqB,EACtB,CAGZ,EAKL,MAAMJ,QAEF,WAAAxuB,GACIG,KAAKib,KAAOtb,EAAS+uB,OACrB1uB,KAAKiO,SAAWtP,EAASG,QACzBkB,KAAKkf,OAAS,IAAIyO,cAClB3tB,KAAKgd,SAAW,EACnB,CAMD,YAAAlE,CAAaC,EAAO4V,GAChB3uB,KAAKib,KAAO0T,EAAQ1T,KACpBjb,KAAKiO,SAAW0gB,EAAQ1mB,MACxBjI,KAAKgd,SAAW2R,EAAQ5mB,IACxB/H,KAAK4uB,QAAUD,EAAQE,IACnBF,EAAQzP,SACRlf,KAAKkf,OAASnG,EAAM4D,cAAcgS,EAAQzP,SAAW,IAAIyO,cAEhE,CAKD,QAAAmB,CAASC,GACL1vB,EAAMqF,OAAO1E,KAAM+uB,EACtB,EAML,MAAMC,eAAezW,WAEjB,WAAA1Y,CAAY2Y,GACRrL,MAAMqL,GACNxY,KAAKivB,iBAAkB,EACvBjvB,KAAKkvB,aAAc,EACnBlvB,KAAKmvB,cAAe,CACvB,CAMD,YAAArW,CAAaC,EAAO1Y,GAChB8M,MAAM2L,aAAaC,EAAO1Y,GACtBA,IACAL,KAAKivB,gBAAkB5uB,EAAK+uB,IAC5BpvB,KAAKkvB,YAAc7uB,EAAKgvB,IACxBrvB,KAAKmvB,aAAe9uB,EAAKivB,IAEhC,CACD,IAAA5V,CAAKC,EAAkBC,GACnBzM,MAAMuM,MAAK,CAACQ,EAAML,IAASF,GAAoBA,EAAiBO,EAAML,KAAO,CAACG,EAAQH,IAASD,GAAiBA,EAAcI,EAAQH,IACzI,EAKL,MAAM0V,mBAAmBhV,eAErB,WAAA1a,CAAYma,GACR7M,MAAM6M,GAINha,KAAK8nB,OAAS,GACd9nB,KAAKivB,iBAAkB,EACvBjvB,KAAKkvB,aAAc,EACnBlvB,KAAKmvB,cAAe,EACpBnvB,KAAKwvB,gBAAkB,GACvBxvB,KAAKyvB,UAAY,IAAIxrB,MACrBjE,KAAK+a,WAAa,GAClB/a,KAAKgb,KAAO,EACf,CAMD,YAAAlC,CAAaC,EAAO1Y,GAChB8M,MAAM2L,aAAaC,EAAO1Y,GACtBA,IACAL,KAAKivB,gBAAkB5uB,EAAK+uB,IAC5BpvB,KAAKkvB,YAAc7uB,EAAKgvB,IACxBrvB,KAAKmvB,aAAe9uB,EAAKivB,IACzBtvB,KAAKgb,KAAO3a,EAAKutB,IACjB5tB,KAAKwvB,gBAAkBnvB,EAAKqvB,YAC5B1vB,KAAKyvB,UAAYpvB,EAAKsvB,IAClBtvB,EAAKkc,QACLvc,KAAKwc,SAAWnc,EAAKkc,OAEhC,EAIL,MAAMqT,EAAcluB,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAA,EAAI7F,GAAY,CAE5DgxB,QAAS,UAETC,SAAU,WAEVC,mBAAoB,uBAKxB,MAAMC,kBAAkBxS,SAEpB,WAAA3d,GACIsN,QACAnN,KAAKyd,WAAa,KAClBzd,KAAKiwB,cAAgB,IAAIV,WAAW,MACpCvvB,KAAKkwB,aAAe,IAAInC,SACxB/tB,KAAKyvB,UAAY,IAAIxrB,MACrBjE,KAAK0d,WAAa,IAAIsR,OACtBhvB,KAAKmwB,cAAgB,IAAIlsB,MACzBjE,KAAKowB,WAAa,CAAC,QAAS,YACxB,WAAY,kBAAmB,iBAC/B,iBAAkB,iBAAkB,qBAAsB,sBAC1D,sBAAuB,qBAAsB,qBAAsB,sBACvEpwB,KAAKqwB,WAAa,CAAC,MAAO,YAAa,WAAY,QACnDrwB,KAAKswB,MAAQ,EAChB,CAKD,aAAAzS,GACI,OAAO7d,KAAKyd,UACf,CAKD,YAAAK,CAAaC,GACT,IAAIhF,EAAQrK,KAAKc,MAAMuO,GACvB/d,KAAK8Y,aAAaC,EACrB,CAKD,YAAAD,CAAazY,GAIT,GAHA8M,MAAM2L,aAAazY,GAEnBL,KAAKyvB,UAAY,IAAIxrB,MACjB5D,EAAKovB,UACL,IAAK,IAAI7qB,EAAI,EAAGA,EAAIvE,EAAKovB,UAAU7tB,OAAQgD,IAAK,CAC5C,IAAI2rB,EAAc,IAAIxC,SACtBwC,EAAYzX,aAAa9Y,KAAMK,EAAKovB,UAAU7qB,IAC9C5E,KAAKyvB,UAAUhrB,KAAK8rB,EACvB,CAML,GAHAvwB,KAAK0d,WAAW5E,aAAa9Y,KAAMK,EAAK+d,SAExCpe,KAAKmwB,cAAgB,IAAIlsB,MACrB5D,EAAKmwB,UACL,IAAK,IAAI5rB,EAAI,EAAGA,EAAIvE,EAAKmwB,UAAU5uB,OAAQgD,IAAK,CAC5C,IAAI6rB,EAAc,IAAItD,aACtBsD,EAAY3X,aAAazY,EAAKmwB,UAAU5rB,IACxC5E,KAAKmwB,cAAc1rB,KAAKgsB,EAC3B,CAER,CAKD,SAAAC,GACI,OAAO1wB,IACV,CAKD,OAAA4e,CAAQ7F,GACiB,iBAAVA,EACP/Y,KAAK8d,aAAa/E,GAGlB/Y,KAAK8Y,aAAaC,EAEzB,CAMD,YAAAO,CAAad,GACT,OAAO,IAAIwW,OAAOxW,EACrB,CAMD,gBAAAiB,CAAiBjB,GACb,OAAO,IAAI+W,WAAW/W,EACzB,CAKD,iBAAAoE,GACI,OAAO,IAAI+Q,aACd,CAKD,aAAA3O,GACI,OAAOhf,KAAK0d,UACf,CAMD,aAAAf,CAAcsC,GACV,OAAO9R,MAAMwP,cAAcsC,EAC9B,CAOD,gBAAAE,CAAiBC,GACb,IAAIlF,EAAOla,KAAKqf,kBAAkBrf,KAAKgf,gBAAiBI,GACxD,OAAKlF,GACM,IAGd,CAOD,oBAAAyW,CAAqBvR,GACjB,MAAMlF,EAAOla,KAAKmf,iBAAiBC,GACnC,OAAKlF,GACMla,KAAKiwB,aAEnB,CAOD,iBAAA3Q,CAAkBF,EAAQxW,GACtB,IAAI2W,EAAYvf,KAAKmf,iBAAiBC,GACtC,GAAIG,EAAW,CACX,QAAmC,IAAxBA,EAAU3W,GACjB,KAAM,qBAAuBA,EAEjC,QAAI2W,EAAU3W,MAGL2W,EAAUxE,aACfqE,EAASG,EAAUxE,WACnBwE,EAAYvf,KAAKmf,iBAAiBC,GAC3BG,GAAaA,EAAU3W,GAKrC,CAEG,OAAO,CACd,CAQD,iBAAAyW,CAAkBrF,EAAQoF,GACtB,OAAOjS,MAAMkS,kBAAkBrF,EAAQoF,EAC1C,CACD,uBAAAwR,CAAwB5W,EAAQyF,GAC5B,IACI/G,EADAlU,EAAS,IAAIP,MAEbyb,EAAM,KACV,GAAI1F,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAI+d,EAAS,EAAGA,EAASxF,EAAgBwF,IAE1C,GADAD,EAAM1F,EAAOnB,YAAY8G,IACpBF,GAAcA,EAAWC,EAAK,MAAO,CACtChH,EAAUpZ,EAAKuU,QAAQ,WAAY6L,EAAInf,MAClCmY,IACDA,EAAUgH,EAAIhH,SAElB,IAAIkH,EAASvgB,EAAMqF,OAAO,IAAIsqB,OAAU,CAAEvpB,GAAIia,EAAInf,KAAMgd,KAAM7E,EAASmH,MAAO,GAAIC,UAAU,IAC5FF,EAAOC,MAAQ7f,KAAK4wB,wBAAwBlR,EAAKD,GAC7CG,EAAOC,MAAMje,OAAS,GACtB4C,EAAOC,KAAKmb,EACnB,CAER,CACD,IAAI1F,EAAO,KACX,GAAIF,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIme,EAAU,EAAGA,EAAU9F,EAAW8F,IAEvC,GADA7F,EAAOF,EAAOpB,WAAWmH,IACpBN,GAAcA,EAAWzF,EAAQE,GAAO,CACzCxB,EAAUpZ,EAAKuU,QAAQ,aAAcqG,EAAKzU,IACrCiT,IACDA,EAAUwB,EAAKxB,SACnB,IAAIkH,EAASvgB,EAAMqF,OAAO,IAAIsqB,OAAU,CAAEvpB,GAAIyU,EAAKzU,GAAI8X,KAAM7E,EAASzK,SAAUiM,EAAKjM,WACrFzJ,EAAOC,KAAKmb,EACf,CAER,CACD,OAAOpb,CACV,CACD,aAAAqsB,CAAc7W,EAAQH,EAAM4F,GACxB5F,EAAOA,GAAQ,GACf,IAEInB,EAFAuH,EAAiB,GACjBC,EAAmB,GAEnBR,EAAM,KACV,GAAI1F,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAI+d,EAAS,EAAGA,EAASxF,EAAgBwF,IAE1C,GADAD,EAAM1F,EAAOnB,YAAY8G,KACpBF,GAAcA,EAAWC,EAAK,UACX,IAAhB7F,EAAKiX,SAA4C,IAAxBpR,EAAIuP,kBACb,IAAhBpV,EAAKkX,SAAwC,IAApBrR,EAAIwP,cACb,IAAhBrV,EAAKmX,SAAyC,IAArBtR,EAAIyP,cAAwB,CACrDzW,EAAUpZ,EAAKuU,QAAQ,WAAY6L,EAAInf,OAASmf,EAAIhH,QACpD,IAAIkH,EAASvgB,EAAMqF,OAAO,IAAIsqB,OAAU,CACpCvpB,GAAIia,EAAInf,KACRgd,KAAM7E,EACNmH,MAAO,GACPC,UAAU,EACVnH,YAAa+G,EAAI/G,cAEjBwH,EAAU9gB,EAAMqF,OAAO,CAAE,EAAEmV,GAC/BsG,EAAQC,iBAAkB,EAC1BR,EAAOC,MAAQ7f,KAAK6wB,cAAcnR,EAAKS,EAASV,GAC5CG,EAAOC,MAAMje,OAAS,GACtBqe,EAAexb,KAAKmb,EAE3B,CAGZ,CACD,IAAI1F,EAAO,KACX,GAAIF,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIme,EAAU,EAAGA,EAAU9F,EAAW8F,IACvC7F,EAAOF,EAAOpB,WAAWmH,GACpBN,IAAcA,EAAWzF,EAAQE,MACd,IAAhBL,EAAKiX,SAA6C,IAAzB5W,EAAK+U,kBACd,IAAhBpV,EAAKkX,SAAyC,IAArB7W,EAAKgV,cACd,IAAhBrV,EAAKmX,SAA0C,IAAtB9W,EAAKiV,gBAC9BzW,EAAUpZ,EAAKuU,QAAQ,aAAcqG,EAAKzU,KAAOyU,EAAKxB,QACtDwH,EAAiBzb,KAAKpF,EAAMqF,OAAO,IAAI6qB,WAAWvV,GAAS,CAAEvU,GAAIyU,EAAKzU,GAAI8X,KAAM7E,EAASzK,SAAUiM,EAAKjM,SAAU8M,WAAYb,EAAKa,WAAYpC,YAAauB,EAAKvB,eAIhL,CACD,IAaInU,EAbA6b,UAAY,CAAC5M,EAAGC,IACZD,EAAE8J,KAAK1U,eAAiB6K,EAAE6J,KAAK1U,cACxB,EAEP4K,EAAE8J,KAAK1U,cAAgB6K,EAAE6J,KAAK1U,cACvB,GAEH,EAgBZ,OAdIgR,EAAKyG,eACLL,EAAezM,KAAK6M,WACpBH,EAAiB1M,KAAK6M,YAOtB7b,EAJCqV,EAAK0G,eAAuC,GAAtB1G,EAAK0G,cAInBL,EAAiBM,OAAOP,GAHxBA,EAAeO,OAAON,GAKT,GAAtBrG,EAAK0G,eACL/b,EAAOgP,KAAK6M,WAEZxG,EAAKuG,iBACL1H,EAAUpZ,EAAKuU,QAAQ,WAAYmG,EAAOzZ,MACrCmY,IACDA,EAAUsB,EAAOtB,SACd,CAAEjT,GAAIuU,EAAOzZ,KAAMgd,KAAM7E,EAASmH,MAAOrb,IAGzCA,CAEd,CAID,KAAAic,GACItT,MAAMsT,QACNzgB,KAAKyvB,UAAY,GACjBzvB,KAAKmwB,cAAgB,EACxB,CAMD,mBAAAc,CAAoB7iB,GAChB,IAAI8iB,EAAK7xB,EAAMkG,aAAavF,KAAKyvB,UAAWrhB,EAAK3I,IAqBjD,OApBKyrB,IACDA,EAAK,IAAInD,SACTmD,EAAGzrB,GAAK2I,EAAK3I,GACbzF,KAAKyvB,UAAUhrB,KAAKysB,IAExBA,EAAGxY,QAAUtK,EAAKsK,QAClBwY,EAAGlW,KAAO5M,EAAK4M,MAAQ,GACvBkW,EAAG7U,cAAgBjO,EAAKzD,OACxBumB,EAAG9C,eAAiB,IAAIC,QACxB6C,EAAG9C,eAAenT,KAAO7M,EAAK6M,MAAQtb,EAAS+uB,OAC3CtgB,EAAKif,eACL6D,EAAG7D,aAAejf,EAAKif,cACvBjf,EAAK+f,WAAa,IAClB+C,EAAG/C,WAAa/f,EAAK+f,YAEzBnuB,KAAKyhB,oBAAmB,CAACvH,EAAML,KACvBK,EAAKuV,UAAU3pB,QAAQorB,EAAGzrB,IAAM,GAAKyrB,EAAG7D,aAAavnB,QAAQoU,EAAKjM,WAAa,GAC/EiM,EAAKuV,UAAUhrB,KAAKysB,EAAGzrB,GAC1B,IAEEyrB,CACV,CAOD,cAAAC,CAAe1rB,EAAI2rB,GAAO,GACtB,IAAIF,EAAK7xB,EAAMkG,aAAavF,KAAKyvB,UAAWhqB,GACxCyrB,IACKE,GACD/xB,EAAM+G,gBAAgBpG,KAAKyvB,UAAWyB,GAC1ClxB,KAAKyhB,oBAAmB,CAACvH,EAAML,KAC3Bxa,EAAM+G,gBAAgB8T,EAAKuV,UAAWyB,EAAGzrB,GAAG,IAGvD,CAMD,wBAAA4rB,CAAyBpa,GACrB,OAAQA,GACJ,KAAKtY,EAAS+D,OACd,KAAK/D,EAASgE,KACV,MAAO,sHAAsH1B,MAAM,KACvI,KAAKtC,EAAS2yB,KACV,MAAO,iBAAiBrwB,MAAM,KAClC,KAAKtC,EAAS6D,KACd,KAAK7D,EAASK,SACV,MAAO,4MAA4MiC,MAAM,KAC7N,KAAKtC,EAAS4D,KACV,MAAO,wEAAwEtB,MAAM,KACzF,KAAKtC,EAASmE,KACd,KAAKnE,EAASoE,KACd,KAAKpE,EAASqE,MACd,KAAKrE,EAASsE,MACd,KAAKtE,EAASuE,MACd,KAAKvE,EAASwE,SACd,KAAKxE,EAAS+uB,IACd,KAAK/uB,EAASyE,QACd,KAAKzE,EAASG,QACV,MAAO,sHAAsHmC,MAAM,KACvI,KAAKtC,EAAS4yB,KACV,MAAO,iBAAiBtwB,MAAM,KAClC,QACI,MAAMuD,EAAS,GACf,IAAK,IAAI0sB,KAAMlxB,KAAKyvB,UACZyB,EAAG7D,aAAavnB,QAAQmR,IAAS,GACjCzS,EAAOC,KAAKysB,EAAGzrB,IACvB,OAAOjB,EAElB,CACD,oBAAAgtB,CAAqBtO,GACjB,IAAK,MAAMuO,KAAQzxB,KAAKmwB,cACpB,GAAIsB,EAAKhsB,KAAOyd,EACZ,OAAOuO,EAEf,OAAO,IACV,CAOD,QAAAC,CAASC,EAAYC,GACjB,IAAK,IAAIC,KAAQ7xB,KAAKswB,MAClB,GAAIuB,EAAKF,YAAcA,GAChBE,EAAKD,UAAYA,EACpB,OAAOC,EAEf,OAAO,IACV,CAMD,gBAAAC,CAAiB9X,GACb,MAAMxV,EAAS,GACf,IAAK,IAAIqtB,KAAQ7xB,KAAKswB,MACduB,EAAKF,YAAc3X,GAAU6X,EAAKD,UAAY5X,GAC9CxV,EAAOC,KAAKotB,GAGpB,OAAOrtB,CACV,CAQD,eAAAqc,CAAgBhH,EAAM4F,GAClB,OAAOzf,KAAK6wB,cAAc7wB,KAAKgf,gBAAiBnF,EAAM4F,EACzD,CAOD,yBAAAqB,CAA0BrB,GACtB,OAAOzf,KAAK4wB,wBAAwB5wB,KAAKgf,gBAAiBS,EAC7D,CAOD,uBAAAsB,CAAwB3B,EAAQ4B,GAE5B,OADAA,EAAMA,GAAO,IACNhhB,KAAKihB,oBAAoBjhB,KAAKgf,gBAAiBI,EAAQ4B,GAAK,EACtE,CASD,mBAAAC,CAAoBjH,EAAQoF,EAAQ4B,EAAKE,GACrC,OAAO/T,MAAM8T,oBAAoBjH,EAAQoF,EAAQ4B,EAAKE,EACzD,CAOD,gBAAAG,CAAiBnH,EAAMvP,GACnB,OAAOwC,MAAMkU,iBAAiBnH,EAAMvP,EACvC,CACD,eAAAonB,GACI,OAAO/xB,KAAKgyB,wBAAwBhyB,KAAKgf,gBAC5C,CAOD,uBAAAgT,CAAwBhY,GACpB,IAA+B,IAA3BA,EAAOiV,gBAA2B,CAClC,GAAIjV,EAAOpB,WAAY,CACnB,IAAIqB,EAAYD,EAAOpB,WAAWhX,OAClC,IAAK,IAAIgD,EAAI,EAAGA,EAAIqV,EAAWrV,IAC3B,GAAIoV,EAAOpB,WAAWhU,GAAGqqB,gBACrB,OAAOjV,EAAOpB,WAAWhU,EAGpC,CACD,GAAIoV,EAAOnB,YAAa,CACpB,IAAIsB,EAAiBH,EAAOnB,YAAYjX,OACxC,IAAK,IAAIgD,EAAI,EAAGA,EAAIuV,EAAgBvV,IAAK,CACrC,IAAIJ,EAASxE,KAAKgyB,wBAAwBhY,EAAOnB,YAAYjU,IAC7D,GAAIJ,EACA,OAAOA,CAEd,CACJ,CACJ,CACD,OAAO,IACV,CAQD,kBAAAid,CAAmB9H,EAAkBC,GACjC5Z,KAAKgf,gBAAgBtF,KAAKC,EAAkBC,EAC/C,CAKD,yBAAA8H,CAA0BjC,GACtB,IAAI/V,EAAM,KAOV,OANA1J,KAAKyhB,oBAAmB,SAAUvH,EAAML,GAChC4F,EAAWvF,KACXL,EAAKC,MAAO,EACZpQ,EAAMwQ,EAEb,GAAE,MACIxQ,CACV,CAOD,gBAAAuoB,CAAiBC,GACb,GAAIlyB,KAAKyvB,UAAU7tB,OAAS,EAAG,CAC3B,IAAIuwB,EAAUnyB,KAAKyvB,UAAU7tB,OAC7B,IAAK,IAAI+D,EAAM,EAAGA,EAAMwsB,EAASxsB,IAC7B,GAAI3F,KAAKyvB,UAAU9pB,GAAKF,IAAMysB,EAC1B,OAAOlyB,KAAKyvB,UAAU9pB,EAGjC,CACD,OAAO,IACV,CAOD,eAAAysB,CAAgBF,GACZ,IAAIhB,EAAKlxB,KAAKiyB,iBAAiBC,GAC/B,OAAKhB,GACMlxB,KAAKkwB,YAEnB,CACD,2BAAAmC,CAA4BnY,GACxB,OAAIA,EAAKsV,gBACEtV,EAAKsV,gBAEPtV,EAAKuV,UAAU7tB,OAAS,EACtBsY,EAAKuV,UAAU,GAGfzvB,KAAKkwB,aAAazqB,EAEhC,CAMD,sBAAA6sB,CAAuBpP,GACnB,IAAIqP,EAAYjzB,EAAKuU,QAAQ,qBAAsBqP,GAC/CsP,EAAcD,EAAYA,EAAU7Z,QAAUpZ,EAAKuU,QAAQ,OAASqP,EAAOrY,QAAQ,IAAK,IAAM,YAClG,GAAI2nB,EACA,OAAOA,EAEX,IAAIf,EAAOpyB,EAAMkG,aAAavF,KAAKmwB,cAAejN,GAClD,OAAKuO,GAASA,EAAK/Y,QAEZ+Y,EAAK/Y,QADDwK,CAEd,CAMD,qBAAAuP,CAAsBvP,GAClB,IAAIqP,EAAYjzB,EAAKuU,QAAQ,qBAAsBqP,GAC/CwP,EAAaH,EAAYA,EAAUlW,cAAgB/c,EAAKuU,QAAQ,OAASqP,EAAOrY,QAAQ,IAAK,IAAM,WACvG,GAAI6nB,EACA,OAAOA,EAEX,IAAIjB,EAAOpyB,EAAMkG,aAAavF,KAAKmwB,cAAejN,GAClD,OAAKuO,GAASA,EAAKpV,cAEZoV,EAAKpV,cADD,EAEd,CAMD,yBAAAsW,CAA0BzY,GACtB,IAAIgY,EAAalyB,KAAKqyB,4BAA4BnY,GAClD,OAAOla,KAAKoyB,gBAAgBF,EAC/B,CAQD,UAAAU,CAAW1Y,EAAM2S,EAAUxmB,GACvB,IAAImoB,EAAa,IAAIH,QACjBxB,GAAYA,EAASuB,gBACrBI,EAAWM,SAASjC,EAASuB,gBACxBI,EAAWxR,WACZwR,EAAWxR,SAAW,IAErBwR,EAAWI,UACZJ,EAAWI,QAAU,MAIzBJ,EAAWvT,KAAOtb,EAAS+uB,OAC3BF,EAAWvgB,SAAWiM,EAAKjM,SAC3BugB,EAAWxR,SAAW,GACtBwR,EAAWI,QAAU,GACrBJ,EAAWtP,OAAS,MAExB,IAAI1a,EAASgqB,EA2Bb,OA1BIhqB,EAAOyJ,WAAatP,EAASG,SAAWob,IACxC1V,EAAOyJ,SAAWiM,EAAKjM,UAEvB4e,GAAaxmB,GAAS,GAClBwmB,EAASyB,UAAYzB,EAASyB,SAASjoB,EAAQ,KAC/C7B,EAASnF,EAAMqF,OAAOF,EAAQqoB,EAASyB,SAASjoB,EAAQ,KAG3D7B,EAAO0a,SACJsP,EAAWtP,OACX1a,EAAO0a,OAASsP,EAAWtP,OAEtBsP,EAAWvT,OAAStb,EAASkzB,MAClCruB,EAAO0a,OAAOpC,IAAM8S,EAAYE,SAE3B5V,GAAQA,EAAKwC,cAClBlY,EAAO0a,OAAShF,EAAKwC,cAEhBlY,EAAOyJ,WAAatP,EAAS6D,MAAQgC,EAAOyJ,WAAatP,EAASK,UACpEwF,EAAOyJ,WAAatP,EAAS4D,KAChCiC,EAAO0a,OAAOpC,IAAM8S,EAAY5wB,SAGhCwF,EAAO0a,OAAOpC,IAAM8S,EAAY7wB,MAGjCyF,CACV,CAKD,gBAAAsuB,GACI,OAAO9yB,KAAKmwB,aACf,CAMD,WAAA4C,CAAYC,EAAWC,GACnB,MAAMzc,EAAQwc,EAAUxc,MAAM,iBAC9B,GAAa,MAATA,EAAe,CACf,MAAM0c,EAAU1c,EAAM,GACtB,GAAInX,EAAMwG,iBAAiB7F,KAAKowB,WAAY8C,IAAY,EAIpD,OAHID,GACAA,EAAeC,IAEZ,CAEd,CACD,OAAO,CACV,CAMD,WAAAC,CAAYH,EAAWC,GACnB,MAAMzc,EAAQwc,EAAUxc,MAAM,iBAC9B,GAAa,MAATA,EAAe,CACf,MAAM0c,EAAU1c,EAAM,GACtB,GAAInX,EAAMwG,iBAAiB7F,KAAKqwB,WAAY6C,IAAY,EAIpD,OAHID,GACAA,EAAeC,IAEZ,CAEd,CACD,OAAO,CACV,CAMD,iBAAAE,CAAkBJ,GACd,IAAIhd,EAAI,IAAIxT,KAiDZ,OAhDYxC,KAAK+yB,YAAYC,GAAWE,IACpC,OAAQA,GACJ,IAAK,QACD,MACJ,IAAK,YACDld,EAAEqd,QAAQrd,EAAEpK,UAAY,GACxB,MACJ,IAAK,WACDoK,EAAEqd,QAAQrd,EAAEpK,UAAY,GACxB,MACJ,IAAK,kBACDoK,EAAEqd,QAAQ,GACV,MACJ,IAAK,iBACDrd,EAAEsd,SAAStd,EAAEtK,WAAa,EAAG,GAC7B,MACJ,IAAK,qBAEDC,EAAc,IADVA,EAAMqK,EAAEud,UACO,EAAI,EAAI5nB,EAC3BqK,EAAEqd,QAAQrd,EAAEpK,UAAYD,GACxB,MACJ,IAAK,iBAEDA,EAAc,IADVA,EAAMqK,EAAEud,UACO,EAAI5nB,EAAM,EAC7BqK,EAAEqd,QAAQrd,EAAEpK,UAAYD,GACxB,MACJ,IAAK,iBACDqK,EAAEsd,SAAS,EAAG,GACd,MACJ,IAAK,qBACD,IAAI3nB,EACJA,EAAc,IADVA,EAAMqK,EAAEud,UACO,EAAI,EAAI5nB,EAC3BqK,EAAEqd,QAAQrd,EAAEpK,UAAYD,GACxB,MACJ,IAAK,sBACDqK,EAAEsd,SAAStd,EAAEtK,WAAa,EAAG,GAC7B,MACJ,IAAK,sBACDsK,EAAEsd,SAAStd,EAAEtK,WAAa,EAAG,GAC7B,MACJ,IAAK,qBACDsK,EAAEwd,YAAYxd,EAAExK,cAAgB,EAAG,EAAG,GACtC,MACJ,IAAK,qBACDwK,EAAEwd,YAAYxd,EAAExK,cAAgB,EAAG,EAAG,GAE7C,IAEQwK,EAAI,IACpB,CAMD,mBAAAyd,CAAoBT,GAChB,IAAIhd,EAAIhW,KAAKozB,kBAAkBJ,GAC/B,OAAOhd,GAAQgd,CAClB,CAMD,iBAAAU,CAAkBV,GACd,IAAIhd,EAAI,IAAIxT,KAgBZ,OAfYxC,KAAK+yB,YAAYC,GAAWE,IACpC,OAAQA,GACJ,IAAK,MACD,MACJ,IAAK,YACDld,EAAE2d,WAAW,EAAG,EAAG,GACnB,MACJ,IAAK,WACD3d,EAAE4d,SAAS,EAAG,EAAG,EAAG,GACpB,MACJ,IAAK,OACD5d,EAAE4d,SAAS,GAAI,EAAG,EAAG,GAE5B,IAEQ5d,EAAI,IACpB,CAMD,mBAAA6d,CAAoBC,GAChB,IAAIC,EAAI/zB,KAAK0zB,kBAAkBI,GAC/B,OAAOC,GAAQD,CAClB,CAKD,gBAAAE,GACI,OAAOh0B,KAAKowB,UACf,CAKD,gBAAA6D,GACI,OAAOj0B,KAAKqwB,UACf,EAIL,IAAI6D,EAkNAC,EAWAC,EAUAC,EA8LAC,EAUAC,EA04EAC,GAxzFJ,SAAWN,GAEPA,EAAQA,EAAiB,QAAI,GAAK,UAElCA,EAAQA,EAAkB,SAAI,GAAK,WAEnCA,EAAQA,EAAyB,gBAAI,GAAK,kBAE1CA,EAAQA,EAA+B,sBAAI,GAAK,wBAEhDA,EAAQA,EAA2B,kBAAI,GAAK,oBAE5CA,EAAQA,EAAsB,aAAI,GAAK,eAEvCA,EAAQA,EAAe,MAAI,IAAM,QAEjCA,EAAQA,EAAmB,UAAI,IAAM,WACxC,CAjBD,CAiBGA,IAAYA,EAAU,CAAE,IAK3B,MAAMO,WAEF,WAAA50B,CAAY2Y,GACRxY,KAAKwY,OAASA,EAEdxY,KAAK8c,IAAMoX,EAAQQ,SAEnB10B,KAAKib,KAAOtb,EAAS+uB,OAErB1uB,KAAKiO,SAAWtP,EAASG,QAEzBkB,KAAK20B,OAAS,GAId30B,KAAK40B,UAAW,EAChB50B,KAAK60B,iBAAkB,EACvB70B,KAAK6T,QAAU,IAAM7T,KAAKud,MAAQvd,KAAK20B,OACvC30B,KAAK2E,KAAO,IAAIV,KACnB,CACD,SAAA6wB,GACI,OAAO90B,KAAKwY,MACf,CACD,QAAAuc,GACI,OAAO/0B,KAAKwY,OAAOwc,WAAWD,UACjC,CAMD,YAAAjc,CAAaC,EAAO1Y,GAChB,GAAIA,EAcA,GAbAL,KAAK8c,IAAMzc,EAAKyc,IACZzc,EAAK0H,KACL/H,KAAK20B,OAASt0B,EAAK0H,IACnB/H,KAAKud,KAAOld,EAAKwuB,KAEZxuB,EAAKoF,KACVzF,KAAKib,KAAOtb,EAASs1B,UACrBj1B,KAAK20B,OAASt0B,EAAKoF,GACnBzF,KAAKud,KAAOld,EAAKwuB,UAEK,IAAfxuB,EAAK4H,QACZjI,KAAKiO,SAAW5N,EAAK4H,OAErBjI,KAAK8c,KAAOoX,EAAQgB,iBACjBl1B,KAAK8c,KAAOoX,EAAQiB,sBACvBn1B,KAAKib,KAAOtb,EAASs1B,cAGpB,CAWD,QAVyB,IAAd50B,EAAK4a,OACZjb,KAAKib,KAAO5a,EAAK4a,MAEjB5a,EAAK+0B,QACLp1B,KAAKq1B,SAAWr1B,KAAKwY,OAAOwc,WAAWM,iBACvCt1B,KAAKq1B,SAASE,mBAAmBl1B,EAAK+0B,aAEb,IAAlB/0B,EAAKu0B,WACZ50B,KAAK40B,SAAWv0B,EAAKu0B,UAErBv0B,EAAKoxB,OACLzxB,KAAKyxB,KAAOpxB,EAAKoxB,KACbpxB,EAAKsE,MACL,IAAK,IAAIC,EAAI,EAAGA,EAAIvE,EAAKsE,KAAK/C,OAAQgD,IAAK,CACvC,MAAM4wB,EAAM,IAAIf,WAAWz0B,KAAKwY,QAChCgd,EAAI1c,aAAaC,EAAO1Y,EAAKsE,KAAKC,IAClC5E,KAAK2E,KAAKF,KAAK+wB,EAClB,CAGLn1B,EAAKutB,MACL5tB,KAAK4tB,IAAMvtB,EAAKutB,IAChB5tB,KAAKy1B,WAAap1B,EAAKo1B,WAE9B,CAER,CAKD,UAAApR,GACI,IAAI1b,EAAM,CACNmU,IAAK9c,KAAK8c,KAId,GAFAnU,EAAIV,MAAQjI,KAAKiO,SAEbjO,KAAK8c,KAAOoX,EAAQgB,iBAAmBl1B,KAAK8c,KAAOoX,EAAQiB,sBACvDn1B,KAAK20B,SACLhsB,EAAIlD,GAAKzF,KAAK20B,OACdhsB,EAAIZ,IAAM/H,KAAK20B,QAEf30B,KAAKud,OACL5U,EAAIkmB,IAAM7uB,KAAKud,UAIlB,CAgBD,GAfIvd,KAAKq1B,WACL1sB,EAAIysB,MAAQp1B,KAAKq1B,SAASK,mBAEL,IAAd11B,KAAKib,OACZtS,EAAIsS,KAAOjb,KAAKib,MAEhBjb,KAAK20B,SACLhsB,EAAIZ,IAAM/H,KAAK20B,QAEf30B,KAAKud,OACL5U,EAAIkmB,IAAM7uB,KAAKud,MAEfvd,KAAK40B,WACLjsB,EAAIisB,SAAW50B,KAAK40B,UAEpB50B,KAAKyxB,KAAM,CACX9oB,EAAI8oB,KAAOzxB,KAAKyxB,KAChB9oB,EAAIhE,KAAO,GACX,IAAK,IAAIC,EAAI,EAAGA,EAAI5E,KAAK2E,KAAK/C,OAAQgD,IAClC+D,EAAIhE,KAAKF,KAAKzE,KAAK2E,KAAKC,GAAGyf,aAElC,CACGrkB,KAAK4tB,MACLjlB,EAAIilB,IAAM5tB,KAAK4tB,IACfjlB,EAAI8sB,WAAaz1B,KAAKy1B,WAE7B,CACD,OAAO9sB,CACV,CACD,QAAAud,GACI,OAAOlmB,KAAKwY,OAAOmd,mBAAmB31B,KACzC,CACD,SAAIQ,GACA,OAAOR,KAAK20B,MACf,CACD,QAAAjO,CAAS3e,EAAK6tB,GAAS,GACnB51B,KAAK61B,WAAW9tB,OAAKf,EAAW4uB,EACnC,CACD,UAAAC,CAAW9tB,EAAK8mB,EAAK+G,GAAS,GAC1B,IAAIE,EAAW91B,KAAKQ,MACpB,GAAIR,KAAKib,MAAQtb,EAASs1B,WAAaltB,EAAK,CACxC,MAAMmS,EAAOla,KAAK+0B,WAAW5V,iBAAiBpX,GAC9C,IAAKmS,EACD,KAAM,4BAA8BnS,EAExC/H,KAAKiO,SAAWiM,EAAKjM,QACxB,CACDjO,KAAK20B,OAAS5sB,OACK,IAAR8mB,EACP7uB,KAAKud,KAAOsR,OAEc,IAAd7uB,KAAKud,OACjBvd,KAAKud,KAAOxV,GAEhB/H,KAAK60B,iBAAkB,EAClBe,GACD51B,KAAKwY,OAAOud,kBAAkB/1B,KAAM81B,EAE3C,CACD,OAAAjX,GACI,QAAS7e,KAAKud,MAAQvd,KAAK20B,OAC9B,CACD,OAAAqB,GACI,OAAOh2B,KAAKud,MAAQvd,KAAKud,KAAK3b,OAAS,CAC1C,CACD,gBAAAq0B,CAAiBjb,GACb,GAAIhb,KAAKib,MAAQD,EAAKC,KAAM,CACxB,GAAIjb,KAAKiO,UAAY+M,EAAK/M,SACtBjO,KAAK61B,WAAW7a,EAAKxa,MAAMoB,OAASoZ,EAAKxa,MAAQR,KAAK20B,OAAS3Z,EAAKuC,MAAQvC,EAAKuC,KAAK3b,OAAUoZ,EAAKuC,KAAOvd,KAAKud,MAAM,OAEtH,CACD,MAAMxV,EAAMrI,EAAQotB,aAAa9R,EAAKxa,MAAOwa,EAAK/M,SAAUjO,KAAKiO,UACjEjO,KAAK61B,WAAW9tB,EAAInG,OAASmG,EAAM/H,KAAK20B,OAAS3Z,EAAKuC,MAAQvC,EAAKuC,KAAK3b,OAAUoZ,EAAKuC,KAAOvd,KAAKud,MAAM,EAC5G,CACDvd,KAAKq1B,SAAWra,EAAKqa,SACrBr1B,KAAK4tB,IAAM5S,EAAK4S,IAChB5tB,KAAKy1B,WAAaza,EAAKya,UAC1B,MACSz1B,KAAK60B,kBACX70B,KAAK61B,WAAW,GAAI,IAAI,GACxB71B,KAAKq1B,SAAW,KAChBr1B,KAAK4tB,IAAM,KACX5tB,KAAKy1B,WAAa,KAEzB,GAIL,SAAWtB,GACPA,EAAgBA,EAA4B,WAAI,GAAK,aACrDA,EAAgBA,EAAyB,QAAI,GAAK,UAClDA,EAAgBA,EAAgC,eAAI,GAAK,iBACzDA,EAAgBA,EAA4B,WAAI,IAAM,aACtDA,EAAgBA,EAA2B,UAAI,IAAM,YACrDA,EAAgBA,EAAwB,OAAI,KAAO,SACnDA,EAAgBA,EAA6B,YAAI,KAAO,cACxDA,EAAgBA,EAAqB,IAAI,KAAO,KACnD,CATD,CASGA,IAAoBA,EAAkB,CAAE,IAE3C,SAAWC,GACPA,EAAkBA,EAAuB,IAAI,GAAK,MAClDA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAA4B,SAAI,GAAK,WACvDA,EAAkBA,EAAuB,IAAI,KAAO,KACvD,CAND,CAMGA,IAAsBA,EAAoB,CAAE,IAI/C,SAAWC,GAEPA,EAAcA,EAAoB,KAAI,GAAK,OAE3CA,EAAcA,EAAyB,UAAI,GAAK,YAEhDA,EAAcA,EAA0B,WAAI,GAAK,YACpD,CAPD,CAOGA,IAAkBA,EAAgB,CAAE,IAIvC,MAAM6B,YACF,MAAIzwB,GACA,OAAOzF,KAAKm2B,GACf,CAED,WAAIC,GACA,OAAIp2B,KAAKo1B,MACEp1B,KAAKo1B,MAAMiB,iBAAiBr2B,MAG5BA,KAAKs2B,QAEnB,CAED,WAAIF,CAAQG,GACJv2B,KAAKo1B,MACLp1B,KAAKo1B,MAAMoB,iBAAiBx2B,KAAMu2B,GAGlCv2B,KAAKs2B,SAAWC,CAEvB,CAED,aAAIE,GACA,OAAIz2B,KAAKo1B,MACEp1B,KAAKo1B,MAAMsB,mBAAmB12B,MAG9BA,KAAK22B,UAEnB,CAED,aAAIF,CAAUpwB,GACNrG,KAAKo1B,MACLp1B,KAAKo1B,MAAMwB,mBAAmB52B,KAAMqG,GAGpCrG,KAAK22B,WAAatwB,CAEzB,CAGD,WAAAxG,CAAYu1B,EAAOyB,GAAa,GAC5B72B,KAAKo1B,MAAQA,EACbp1B,KAAK62B,WAAaA,EAElB72B,KAAK82B,SAAU,EAEf92B,KAAK8nB,OAAS,GACd9nB,KAAK+2B,WAAY,EACjB/2B,KAAKo1B,MAAQA,EACbp1B,KAAKm2B,IAAM92B,EAAMuK,WAAW,OAC5B5J,KAAK0Y,QAAU,GACf1Y,KAAKs2B,SAAWjC,EAAc3H,KAC9B1sB,KAAK22B,YAAc,EACnB32B,KAAKgb,KAAO,IAAIyZ,WAAWz0B,MAC3BA,KAAKg3B,QAAU,GACfh3B,KAAK62B,WAAaA,CACrB,CACD,QAAA9B,GACI,OAAO/0B,KAAKo1B,MAAML,UACrB,CACD,QAAAC,GACI,OAAOh1B,KAAKo1B,KACf,CAED,UAAA6B,GACI,OAAO,CACV,CAED,YAAAC,GACI,OAAOl3B,KAAK62B,UACf,CACD,WAAAM,CAAY32B,GAEX,CAED,QAAA42B,GACI,OAAOp3B,KAAK+2B,SACf,CACD,SAAAM,CAAU72B,GACNR,KAAK+2B,UAAYv2B,CACpB,CACD,WAAA82B,GACI,GAAIt3B,KAAKgb,KAAK/M,WAAatP,EAASG,QAAS,CACzC,IAAIsgB,EAAS,KACb,GAAIpf,KAAKgb,KAAKyW,KAAM,CAChB,GAAsB,SAAlBzxB,KAAKgb,KAAKyW,MAAqC,UAAlBzxB,KAAKgb,KAAKyW,KACvC,OAAO9yB,EAASsE,MACpBmc,EAASpf,KAAKgb,KAAKrW,KAAK,GAAGnE,KAC9B,MAEG4e,EAASpf,KAAKgb,KAAKxa,MAEvB,MAAM0Z,EAAOla,KAAKo1B,MAAML,WACnB5V,iBAAiBC,GACtB,GAAIlF,EACA,OAAOA,EAAKjM,QACnB,CACD,OAAOjO,KAAKgb,KAAK/M,QACpB,CAMD,YAAA6K,CAAaC,EAAOwe,GACZA,IACIA,EAAQ9xB,KACRzF,KAAKm2B,IAAMoB,EAAQ9xB,IAEvBzF,KAAK0Y,QAAU6e,EAAQpc,UACI,IAAhBoc,EAAQC,MACfx3B,KAAKs2B,SAAWiB,EAAQC,IACxBx3B,KAAK22B,gBAAwC,IAAnBY,EAAQE,OAC5BF,EAAQE,QACP,IAEa,IAApBF,EAAQT,UACR92B,KAAK82B,QAAUS,EAAQT,SAE3B92B,KAAKgb,KAAKlC,aAAaC,EAAOwe,EAAQvc,MACtChb,KAAKg3B,QAAUO,EAAQP,QACvBh3B,KAAKqc,cAAgBkb,EAAQjb,KAC7Btc,KAAK03B,yBAA2BH,EAAQlS,KACpCkS,EAAQI,QACR33B,KAAKq3B,WAAU,GAG1B,CAKD,UAAAhT,GACI,IAAI1b,EAAM,CAAA,EAqBV,OApBAA,EAAIlD,GAAKzF,KAAKm2B,SACc,IAAjBn2B,KAAK0Y,UACZ/P,EAAIwS,KAAOnb,KAAK0Y,SAEhB1Y,KAAKo2B,SAAW/B,EAAc3H,OAC9B/jB,EAAI6uB,IAAMx3B,KAAKo2B,QACfztB,EAAI8uB,OAASz3B,KAAKy2B,WAEtB9tB,EAAIqS,KAAOhb,KAAKgb,KAAKqJ,aACjBrkB,KAAKg3B,UACLruB,EAAIquB,QAAUh3B,KAAKg3B,UAEF,IAAjBh3B,KAAK82B,UACLnuB,EAAImuB,QAAU92B,KAAK82B,SAEvBnuB,EAAI2T,KAAOtc,KAAKqc,cAChB1T,EAAI0c,KAAOrlB,KAAK03B,yBACZ13B,KAAKo3B,aACLzuB,EAAIgvB,QAAS,GAEVhvB,CACV,CACD,gBAAAivB,GACI53B,KAAKo1B,MAAMwC,iBAAiB,CACxBC,KAAO73B,KAAe,WAChBm0B,EAAgB2D,eAChB3D,EAAgB4D,QACtBC,OAAQ5D,EAAkB6D,OAC1BC,QAASl4B,MAEhB,CACD,kBAAA21B,CAAmB3a,GACf,OAAO,CACV,CACD,iBAAA+a,CAAkB/a,EAAM8a,GACvB,GAQL,SAAWxB,GAEPA,EAAQA,EAAiB,QAAI,GAAK,UAElCA,EAAQA,EAAgB,OAAI,GAAK,SAEjCA,EAAQA,EAAe,MAAI,IAAM,OACpC,CAPD,CAOGA,IAAYA,EAAU,CAAE,IAG3B,SAAWC,GACPA,EAAcA,EAA0B,WAAI,GAAK,aACjDA,EAAcA,EAAwB,SAAI,GAAK,WAC/CA,EAAcA,EAAqB,MAAI,GAAK,QAC5CA,EAAcA,EAAmB,IAAI,IAAM,KAC9C,CALD,CAKGA,IAAkBA,EAAgB,CAAE,IAKvC,MAAM4D,UACF,MAAI1yB,GACA,OAAOzF,KAAKm2B,GACf,CACD,WAAIW,GACA,OAAO92B,KAAKo4B,YAAcp4B,KAAK80B,aAAe90B,KAAK80B,YAAYgC,QAClE,CACD,WAAIA,CAAQt2B,GACRR,KAAKo4B,SAAW53B,KAAWR,KAAK80B,aAAe90B,KAAK80B,YAAYgC,SAChE92B,KAAKq4B,YAAcr4B,KAAKq4B,WAAW9gB,SAAS+gB,IACxCA,EAAKxB,QAAUt2B,CAAK,GAE3B,CAKD,WAAAX,CAAYu1B,EAAOtY,GACf9c,KAAKo1B,MAAQA,EAIbp1B,KAAKu4B,SAAW94B,EAAS8sB,IACzBvsB,KAAKwY,OAAS,KACdxY,KAAKm2B,IAAM92B,EAAMuK,WAAW,QAC5B5J,KAAKw4B,WAAY,EACjBx4B,KAAK8c,IAAMA,GAAOwX,EAAQx1B,QAC1BkB,KAAK82B,SAAU,EACf92B,KAAKkyB,WAAa,GAClBlyB,KAAKg3B,QAAU,GACfh3B,KAAKy4B,YAAc,IAAIx0B,MACvBjE,KAAKq4B,WAAa,IAAIp0B,KACzB,CACD,QAAA+wB,GACI,OAAOh1B,KAAKo1B,KACf,CACD,QAAAL,GACI,OAAO/0B,KAAKo1B,MAAML,UACrB,CACD,SAAAD,GACI,OAAO90B,KAAKwY,MACf,CACD,SAAAkgB,CAAUlgB,GACNxY,KAAKwY,OAASA,CACjB,CACD,aAAAmgB,GACI,OAAO34B,KAAKq4B,UACf,CACD,OAAAxZ,GACI,OAAkC,IAA3B7e,KAAKq4B,WAAWz2B,MAC1B,CACD,OAAAg3B,GACI,OAAQ54B,KAAK8c,KAAOwX,EAAQuE,OAA0B,MAAf74B,KAAKwY,MAC/C,CACD,QAAAsgB,GACI,MAAMtgB,EAASxY,KAAK80B,YACpB,OAAOtc,EAASA,EAAOsgB,WAAa,EAAI,CAC3C,CAID,UAAA7B,GACI,OAAO,CACV,CACD,WAAAE,CAAY32B,GACX,CAID,eAAAu4B,GACI,OAAO,CACV,CACD,gBAAAC,CAAiBx4B,GAChB,CAID,QAAAy4B,GACI,OAAO,CACV,CACD,SAAAC,CAAU14B,GACT,CACD,eAAA24B,GACIn5B,KAAKq4B,WAAa,EACrB,CACD,YAAAe,CAAad,GAET,OADAA,EAAKI,UAAU14B,MACRA,KAAKq4B,WAAW5zB,KAAK6zB,EAC/B,CACD,iBAAAe,CAAkBhzB,GACdrG,KAAKq4B,WAAWlyB,OAAOE,EAAO,EACjC,CAMD,YAAAyS,CAAaC,EAAO1Y,GAChB,GAAIA,EAAM,CAWN,GAVAL,KAAK8c,IAAMzc,EAAKyc,IACX9c,KAAK8c,MACN9c,KAAK8c,KAAQ9c,KAAKwY,QAAUxY,KAAKq4B,WAAWz2B,OAAS,EAAK0yB,EAAQuE,MAAQvE,EAAQgF,aAE1D,IAAjBj5B,EAAKy2B,UACZ92B,KAAK82B,QAAUz2B,EAAKy2B,cAEK,IAAlBz2B,EAAKk5B,WACZv5B,KAAK82B,SAAWz2B,EAAKk5B,UAErBv5B,KAAK8c,KAAOwX,EAAQgF,SACpBt5B,KAAKkyB,WAAa7xB,EAAK6wB,GACnB7wB,EAAKm5B,OACL,IAAK,IAAI50B,EAAI,EAAGA,EAAIvE,EAAKm5B,MAAM53B,OAAQgD,IAAK,CACxC,IAAI60B,EAAU,IAAIhF,WAAWz0B,MAC7By5B,EAAQ3gB,aAAaC,EAAO1Y,EAAKm5B,MAAM50B,IACvC5E,KAAKy4B,YAAYh0B,KAAKg1B,EACzB,CAGTz5B,KAAKu4B,SAAWl4B,EAAKq5B,OACxB,CACJ,CAKD,UAAArV,GACI,IAAI1b,EAAM,CAAA,EAKV,GAJAA,EAAImU,IAAM9c,KAAK8c,IACV9c,KAAK82B,UACNnuB,EAAImuB,QAAU92B,KAAK82B,SAEnB92B,KAAK8c,KAAOwX,EAAQgF,OAAQ,CAC5B3wB,EAAIuoB,GAAKlxB,KAAKkyB,WACdvpB,EAAI6wB,MAAQ,GACZ,IAAK,IAAI50B,EAAI,EAAGA,EAAI5E,KAAKy4B,YAAY72B,OAAQgD,IACzC+D,EAAI6wB,MAAM/0B,KAAKzE,KAAKy4B,YAAY7zB,GAAGyf,aAE1C,CAKD,OAJIrkB,KAAK8c,KAAOwX,EAAQuE,QAEpBlwB,EAAI+wB,QAAU15B,KAAKu4B,UAEhB5vB,CACV,CACD,gBAAAivB,CAAiB+B,EAAWpF,EAAchI,KACtCvsB,KAAKo1B,MAAMwC,iBAAiB,CACxBC,KAAM1D,EAAgByF,WACtB5B,OAAQ5D,EAAkB6D,OAC1BC,QAASl4B,KACT25B,SAAUA,GAEjB,CACD,kBAAAhE,CAAmB3a,GACf,OAAOhb,KAAKy4B,YAAY3yB,QAAQkV,EAAM,EACzC,CACD,iBAAA+a,CAAkB/a,EAAM8a,GACG,GAAnB9a,EAAKkL,YAAmBlL,EAAK8B,KAAOoX,EAAQgB,iBAE5Cl1B,KAAK65B,oBAAoB7e,EAAKxa,MAErC,CACD,aAAAs5B,GACI,OAAO95B,KAAKkyB,UACf,CACD,aAAA6H,CAAcC,EAAepE,GAAS,GAClC,MAAMqE,EAAgBj6B,KAAKkyB,WAE3B,GADAlyB,KAAKkyB,WAAa8H,GACbpE,EAAQ,CACT,MAAM7c,EAAQ/Y,KAAK+0B,WACblI,EAAW9T,EAAMqZ,gBAAgB4H,GACjC5a,EAASpf,KAAKy4B,YAAY,GAAGj4B,MAC7B0Z,EAAOnB,EAAMoG,iBAAiBC,GACpCpf,KAAKk6B,qBAAqBhgB,EAAM2S,EAAU3S,EAAKzU,GAAIw0B,EACtD,CACJ,CACD,mBAAAJ,CAAoBM,GAChB,MAAMphB,EAAQ/Y,KAAK+0B,WACb3V,EAASpf,KAAKy4B,YAAY,GAAGj4B,MAC7B0Z,EAAOnB,EAAMoG,iBAAiBC,GACpC,GAAY,MAARlF,EAAc,CACd,IAAIqW,EAAcvwB,KAAK+0B,WAAWpC,0BAA0BzY,GACxD+f,EAAgBj6B,KAAKkyB,WACzBlyB,KAAKkyB,WAAa3B,EAAY9qB,GAC9BzF,KAAKk6B,qBAAqBhgB,EAAMqW,EAAa4J,EAAWF,EAC3D,CACJ,CACD,oBAAAC,CAAqBhgB,EAAM2S,EAAUsN,EAAWF,GAC5C,MAAMlhB,EAAQ/Y,KAAK+0B,WACnB,IAAKlI,EACD,OACJ,IAAIuN,EAAYp6B,KAAKy4B,YAAY72B,OACjCu4B,GAAYphB,EAAMoG,iBAAiBgb,GACnC,IAAIE,EAAc,KAIlB,GAHIJ,IACAI,EAActhB,EAAMqZ,gBAAgB6H,IAEpCI,GAAeA,EAAYlM,YAActB,EAASsB,WAAY,CAE9D,IAAIvpB,EAAI,EACR,KAAOA,EAAIioB,EAASsB,YAAY,CAC5B,IAAImM,EAAavhB,EAAM6Z,WAAW1Y,EAAMmgB,EAAaz1B,GACjD+pB,EAAU5V,EAAM6Z,WAAW1Y,EAAM2S,EAAUjoB,GAC3C+pB,EAAQ1gB,UAAYtP,EAASG,UAC7B6vB,EAAQ1gB,SAAWiM,EAAKjM,UAE5B,MAAMiR,EAASyP,EAAQzP,QAAUyP,EAAQzP,OAAOpC,MAAQje,EAAUC,QAC5D6vB,EAAQzP,OACPhF,EAAKwC,eAAiBxC,EAAKwC,cAAcI,MAAQje,EAAUC,QACxDob,EAAKwC,cACL,IAAIiR,cACd,GAAI/oB,GAAKw1B,EAAW,CAChB,IAAIG,EAAUv6B,KAAKw6B,gBAAgB7L,GACnC3uB,KAAKy4B,YAAYh0B,KAAK81B,EACzB,KACI,CACD,IAAIE,EAAUz6B,KAAKy4B,YAAY7zB,GAE3B60B,EAAUz5B,KAAKw6B,gBAAgB7L,GAC/B3uB,KAAK06B,qBAAqBJ,EAAWpb,OAAQA,IAC7Cua,EAAQxD,iBAAiBwE,GAE7Bz6B,KAAKy4B,YAAY7zB,GAAK60B,CACzB,CACD70B,GACH,CACGw1B,EAAYx1B,GAEZ5E,KAAKy4B,YAAYtyB,OAAOvB,EAAGw1B,EAAYx1B,EAE9C,KACI,CACD5E,KAAKy4B,YAAYtyB,OAAO,EAAGnG,KAAKy4B,YAAY72B,OAAS,GACrD,IAAK,IAAIgD,EAAI,EAAGA,EAAIioB,EAASsB,WAAYvpB,IAAK,CAC1C,IAAI+pB,EAAU5V,EAAM6Z,WAAW1Y,EAAM2S,EAAUjoB,GAC3C+pB,EAAQ1gB,UAAYtP,EAASG,UAC7B6vB,EAAQ1gB,SAAWiM,EAAKjM,UAExBssB,EAAUv6B,KAAKw6B,gBAAgB7L,GACnC3uB,KAAKy4B,YAAYh0B,KAAK81B,EACzB,CACJ,CACJ,CACD,oBAAAG,CAAqBC,EAAWxc,GAC5B,OAAIA,EAAUrB,KAAO8S,EAAY1wB,YAAcif,EAAUrB,KAAO8S,EAAY3wB,MACrEkf,EAAUrB,KAAO8S,EAAYC,SAAW1R,EAAUrB,KAAOje,EAAUC,OAI7E,CACD,sBAAA87B,CAAuBjM,EAAS5mB,EAAM,MAClC,IAAIiT,EAAOhb,KAAKw6B,gBAAgB7L,EAAS5mB,GAEzC,OADA/H,KAAKy4B,YAAYh0B,KAAKuW,GACfA,CACV,CACD,eAAAwf,CAAgB7L,EAAS5mB,EAAM,MAC3B,IAAI8yB,EAAkB9yB,QAClBvH,EAAQuH,GAAY4mB,EAAQ3R,SAC5BO,EAAOxV,GAAY4mB,EAAQC,QAC3BpqB,EAAS,IAAIiwB,WAAWz0B,MAC5B,GAAI2uB,EAAQ1T,OAAStb,EAASkzB,MAC1BruB,EAAOsY,IAAMoX,EAAQrB,MACrBruB,EAAOyJ,SAAW0gB,EAAQ1gB,SAC1BzJ,EAAOyW,KAAO0T,EAAQ1T,KACtBzW,EAAOqxB,WAAWr1B,EAAO+c,GAAM,QAE9B,GAAIoR,EAAQ1T,OAAStb,EAASs1B,UAAW,CAC1C,IAAK4F,EAAiB,CAClB,IAAIC,EAAU96B,KAAK+0B,WAAWrT,2BAA2BxH,GACtB,GAAxBA,EAAK+U,mBAA6BN,EAAQ1gB,UAAYiM,EAAKjM,UAAY0gB,EAAQ1gB,YAE1FzN,EAAQs6B,EAAUA,EAAQr1B,GAAK,IAClC,CACDjB,EAAOsY,IAAMoX,EAAQgB,gBACrB1wB,EAAOyW,KAAO0T,EAAQ1T,KACtBzW,EAAOyJ,SAAW0gB,EAAQ1gB,SAC1BzJ,EAAOqxB,WAAWr1B,EAAO+c,GAAM,EAClC,MAEOsd,IAEIr6B,EADAmuB,EAAQ3R,UAAgC,IAApB2R,EAAQ3R,SACpB2R,EAAQ3R,SAGZ2R,EAAQzP,QAAUyP,EAAQzP,OAAOlC,SACzB2R,EAAQzP,OAAOlC,SAGf,GAGZ2R,EAAQzP,SACR3B,EAAOoR,EAAQzP,OAAO5B,aAAa9c,KAG3CgE,EAAOsY,IAAMoX,EAAQQ,SACrBlwB,EAAOyJ,SAAW0gB,EAAQ1gB,SAC1BzJ,EAAOyW,KAAO0T,EAAQ1T,KACtBzW,EAAOqxB,WAAWr1B,EAAO+c,GAAM,GAC/B/Y,EAAOqwB,gBAAkBgG,EAE7B,OAAOr2B,CACV,EAGL,MAAMu2B,KACF,WAAAl7B,CAAYW,EAAQ,MAChBR,KAAKg7B,OAAS,GACdh7B,KAAKQ,MAAQ,KACbR,KAAKwY,OAAS,KACVhY,IACIyD,MAAMC,QAAQ1D,IACdR,KAAKQ,MAAQA,EAAM,GACfA,EAAMoB,OAAS,GACf5B,KAAKi7B,SAAS,IAAIF,KAAKv6B,EAAMgX,MAAM,MAGlChX,aAAiBu6B,MACtB/6B,KAAKQ,MAAQA,EAAMA,MACnBR,KAAKg7B,OAASx6B,EAAMw6B,QAGpBh7B,KAAKQ,MAAQA,EAGxB,CACD,QAAA06B,CAAS16B,GACL,GAAIR,KAAKQ,QAAUA,EACf,OAAO,EACX,IAAK,IAAI26B,KAASn7B,KAAKg7B,OACnB,GAAIG,EAAMD,SAAS16B,GACf,OAAO,EAEf,OAAO,CACV,CACD,QAAA46B,CAAS56B,GACL,GAAIR,KAAKQ,QAAUA,EACf,OAAOR,KACX,IAAK,IAAIm7B,KAASn7B,KAAKg7B,OAAQ,CAC3B,IAAIx2B,EAAS22B,EAAMC,SAAS56B,GAC5B,GAAIgE,EACA,OAAOA,CACd,CACD,OAAO,IACV,CACD,QAAAy2B,CAASE,GACLA,EAAM3iB,OAASxY,KACfA,KAAKg7B,OAAOv2B,KAAK02B,EACpB,CACD,UAAAE,GACI,IAAK,IAAIF,KAASn7B,KAAKg7B,OACnBG,EAAM3iB,OAASxY,KACfm7B,EAAME,YAEb,EAML,MAAMC,0BAA0BtuB,MAK5B,WAAAnN,CAAYqN,GACRC,MAAMD,GACoC,mBAA/BF,MAAyB,mBAChCA,MAAyB,kBAAEub,MAAMvoB,KAAM,CAACs7B,oBAE5Ct7B,KAAKO,KAAO,mBACf,EAKL,MAAMsyB,MACF,UAAA0I,GACI,OAAOv7B,KAAKw7B,WACf,CACD,aAAAC,GACIz7B,KAAKw7B,aAAc,CACtB,CACD,qBAAIE,GACA,OAAO17B,KAAK27B,kBACf,CACD,qBAAID,CAAkBl7B,GAClB,MAAMs1B,EAAW91B,KAAK27B,mBACtB37B,KAAK27B,mBAAqBn7B,GACrBs1B,GAAYt1B,IACbR,KAAK47B,6BACL57B,KAAK0iB,QAAQtgB,QAAO8hB,GAAKA,EAAE4S,SACpB5S,EAAElJ,KAAK8B,KAAOoX,EAAQ2H,qBAE5B77B,KAAK27B,oBACN37B,KAAK87B,aAAarb,OAEzB,CAQD,WAAA5gB,CAAYkZ,EAAO1Y,EAAMoN,GAIrBzN,KAAK+7B,UAAY,GACjB/7B,KAAKg8B,UAAY,GACjBh8B,KAAKi8B,UAAW,EAChBj8B,KAAKw7B,aAAc,EACnBx7B,KAAK27B,oBAAqB,EAC1B37B,KAAKk8B,YAAc,KACnBl8B,KAAKm8B,WAAa,GAClBn8B,KAAKo8B,+BAAgC,EACjC3uB,IACAzN,KAAKq8B,QAAU5uB,EAAQ4uB,QACnBr8B,KAAKq8B,UACLr8B,KAAKo8B,8BAAgCp8B,KAAKq8B,QAAQ5uB,QAAQ2uB,gCAGlEp8B,KAAKs8B,aAAe,IAAI5S,aAAa1pB,MACrCA,KAAKkhB,KAAO,IAAIiX,UAAUn4B,KAAMs0B,EAAQuE,OACxC74B,KAAKu8B,gBAAkB,IAAIpE,UAAUn4B,KAAMs0B,EAAQuE,OACnD74B,KAAK0iB,QAAU,IAAIze,MAEnBjE,KAAKw8B,cAAgB,IAAIv4B,MACpBjE,KAAKyF,IACNzF,KAAKy8B,eAETz8B,KAAK08B,iBACL18B,KAAK2Y,YAAc,GACnB3Y,KAAK+Y,MAAQ,GAAkB,IAAIiX,UAC/B3vB,GACAL,KAAK8Y,aAAazY,GAEtBL,KAAK28B,iBAAmB,GAAYlvB,EAAQmvB,SAAqC1I,EAAQgB,gBACzFl1B,KAAK68B,yBAA2B,EAAYpvB,EAAQovB,yBAA2B,IAAI54B,MACnFjE,KAAK88B,yBAA2B,EAAYrvB,EAAQqvB,yBAA2B,IAAI74B,MACnFjE,KAAK+8B,gBAAiB,IAAKv6B,MAAQw6B,oBACnCh9B,KAAK87B,aAAe,IAAIna,oBAAoB3hB,MACxCyN,IACAzN,KAAKk8B,YAAczuB,EAAQ+K,QAE/BxY,KAAKi9B,oBAAmBC,IAChBA,EAAG78B,OACE68B,EAAG78B,KAAKw3B,KAAO1D,EAAgB4D,SAAW,IAC3CmF,EAAG78B,KAAK88B,aACRn9B,KAAK27B,oBAAsB37B,KAAKo9B,6BAChCp9B,KAAK43B,iBAAiB,CAClBC,KAAM1D,EAAgBkJ,aAGjC,GAER,CACD,yBAAAD,GACI,IAAIE,GAAa,EACjB,MAAMxB,EAAe97B,KAAKu9B,yBAC1B,IAAK,IAAI34B,EAAIk3B,EAAaha,OAAOlgB,OAAS,EAAGgD,GAAK,EAAGA,IAAK,CACtD,MAAMqf,EAAQ6X,EAAaha,OAAOld,GAClC,IAAK,IAAI44B,EAAIvZ,EAAMvB,QAAQ9gB,OAAS,EAAG47B,GAAK,EAAGA,IAAK,CAChD,MAAMra,EAAQc,EAAMvB,QAAQ8a,GACvBx9B,KAAK0iB,QAAQ+a,MAAK7X,GAAOA,EAAIngB,KAAO0d,MACrCc,EAAMvB,QAAQvc,OAAOq3B,EAAG,GACxBF,GAAa,EAEpB,CAC2B,GAAxBrZ,EAAMvB,QAAQ9gB,QACdk6B,EAAaha,OAAO3b,OAAOvB,EAAG,EAErC,CACD,MAAMid,EAAaia,EAAanY,gBAChC,IAAK,IAAI/e,EAAIid,EAAWjgB,OAAS,EAAGgD,GAAK,EAAGA,IAAK,CAC7C,MAAMuf,EAAOtC,EAAWjd,GACnB5E,KAAK0iB,QAAQ+a,MAAK7X,GAAOA,EAAIngB,KAAO0e,EAAKhB,UAC1CtB,EAAW1b,OAAOvB,EAAG,GACrB04B,GAAa,EAEpB,CAMD,OAAOA,CACV,CACD,cAAAhI,GACI,OAAO,IAAIzC,MAAM7yB,KAAK+Y,MAAO,KAAM,CAAEP,OAAQxY,KAAMq8B,QAASr8B,KAAKq8B,SACpE,CACD,cAAAqB,CAAeC,EAAe/H,GAAS,GAGnC,GAFA51B,KAAK87B,aAAarb,QAClBkd,EAAc39B,KAAK87B,cACf97B,KAAK07B,kBACL17B,KAAK47B,2BAA2BhG,QAE/B,IAAKA,EAEN,YADAtnB,QAAQC,KAAK,4EAGpB,CACD,qBAAAqvB,GACI59B,KAAK27B,oBAAqB,EAC1B37B,KAAK09B,gBAAgB/rB,IACjB,MAAMksB,EAAW79B,KAAK0iB,QAAQtgB,QAAO8hB,GAAKA,EAAE4S,SACrC5S,EAAElJ,KAAK8B,KAAOoX,EAAQ2H,oBAC7B,GAAIgC,EAASj8B,OAAQ,CAEjB,MAAMk8B,EAAc99B,KAAK0iB,QAAQtgB,QAAO8hB,GAAKA,EAAE4S,SACxC5S,EAAElJ,KAAK8B,KAAOoX,EAAQgB,kBACvB6I,EAAa,GACnB,IAAK,MAAMnY,KAAOiY,EACdE,EAAWt5B,KAAK,CAAEgB,GAAImgB,EAAIngB,GAAIgsB,KAAM7L,EAAI5K,KAAKyW,OAC7CzxB,KAAKg+B,iBAAiBpY,EAAKsO,EAAQgB,iBAEvC,IAAK,MAAM/Q,KAAQ4Z,EACfpsB,EAASqR,mBAAmBmB,EAAK1e,GAAI0e,EAAKsN,MAE9C,IAAK,MAAM7L,KAAOkY,EACdnsB,EAAS6Q,SAAS,CAAEE,QAAS,CAACkD,EAAIngB,IAAKlF,KAAMqlB,EAAIlN,UAErD/G,EAAS0R,iBACTrjB,KAAK43B,iBAAiB,CAClBC,KAAM1D,EAAgB4D,QACtBkG,aAAa,GAEpB,KACI,CAED,MAAMC,EAAYl+B,KAAKm+B,aAClB/7B,QAAO8hB,GAAKA,EAAE4S,SAAW5S,EAAElJ,KAAK8B,KAAOoX,EAAQgB,iBAC7Cl1B,KAAK+Y,MAAMoG,iBAAiB+E,EAAElJ,KAAKxa,OAAOyN,WAAatP,EAASwE,WAAU,GAC3Ei7B,EAAap+B,KAAKm+B,aACnB/7B,QAAO8hB,GAAKA,EAAE4S,SAAW5S,EAAElJ,KAAK8B,KAAOoX,EAAQgB,iBAC7Cl1B,KAAK+Y,MAAMoG,iBAAiB+E,EAAElJ,KAAKxa,OAAOyN,WAAatP,EAAS+D,SAAQ,GAC/E,IAAMw7B,IAAcvsB,EAASiS,kBAAqBwa,EAC9C,OACJzsB,EAAS0R,iBACJL,mBAAmBkb,EAAUz4B,GAAI,OACjC+c,SAAS,CAAEE,QAAS,CAAC0b,EAAW34B,IAAKlF,KAAM,WACnD,IAER,CACD,0BAAAq7B,CAA2BhG,GAAS,GAChC,MACM9T,EADe9hB,KAAKu9B,yBACEha,YAC5B,GAAIzB,EAAOlgB,OAAS,EAAG,CACnB,MAAMy8B,EAAcvc,EAAOA,EAAOlgB,OAAS,GAAG8gB,QAE9C,IAAI4b,EAAc,GACdC,EAAa,GACjB,IAAK,MAAM3Y,KAAO5lB,KAAKm+B,aACfE,EAAYv4B,QAAQ8f,EAAIngB,KAAO,EAC/B64B,EAAY75B,KAAKmhB,GAEZ5lB,KAAKq2B,iBAAiBzQ,IAAQyO,EAAc3H,MACjD6R,EAAW95B,KAAKmhB,GAGxB,IAAI6Q,EAAY,EAChB6H,EAAY/mB,SAAQqO,IACZ5lB,KAAKq2B,iBAAiBzQ,IAAQyO,EAAc3H,MAC5C1sB,KAAKw2B,iBAAiB5Q,EAAKyO,EAAcmK,WAE7Cx+B,KAAK42B,mBAAmBhR,EAAK6Q,IAAY,IAG7C8H,EAAWhnB,SAAQqO,IACf5lB,KAAK42B,mBAAmBhR,EAAK6Q,IAAY,IAGxCb,GACD51B,KAAK43B,iBAAiB,CAClBC,KAAM1D,EAAgB4D,QACtBoF,aAAa,EACbc,aAAa,GAGxB,CACJ,CACD,sBAAAV,GACI,OAAOv9B,KAAK87B,YACf,CACD,YAAAnZ,CAAaC,EAAMC,GAEf,OADAA,EAAKA,GAAMD,EACJ5iB,KAAK0iB,QAAQlL,MAAMoL,EAAMC,EAAKD,EAAO,GACvC9gB,KAAIoiB,GAAKA,EAAEze,IACnB,CAID,eAAAqd,CAAgB2b,GACZ,MAAMC,EAAgB1+B,KAAK0iB,QAAQtgB,QAAO8hB,GAAKA,EAAE4S,UAASh1B,KAAIoiB,GAAKA,EAAEze,KACrE,IAAIk5B,GAAa,EACjB,IAAK,MAAM/Y,KAAO6Y,EAAQ,CACtB,MAAMp4B,EAAQq4B,EAAc54B,QAAQ8f,GACpC,GAAIvf,EAAQ,EACR,OAAO,EACX,GAAIs4B,EAAYt4B,EACZ,OAAO,EACXs4B,EAAYt4B,CACf,CACD,OAAO,CACV,CACD,iBAAA+c,CAAkBD,EAAOD,GACrB,MAAM0C,EAAM5lB,KAAK0iB,QAAQtgB,QAAO8hB,GAAKA,EAAE4S,SAAW5S,EAAEze,KAAO0d,IAAO,GAC5DsO,EAAOzxB,KAAK+Y,MAAMyY,qBAAqBtO,GAC7C,SAAKuO,IAAS7L,GAAO6L,EAAKpE,aAAavnB,QAAQ8f,EAAI5K,KAAK/M,UAAY,EAGvE,CACD,IAAA2wB,GACI,OAAO,CACV,CAKD,KAAAC,CAAMC,GAAa,GACXA,GACA9+B,KAAKygB,QAETzgB,KAAKy8B,eACLz8B,KAAK08B,iBACL18B,KAAKw7B,aAAc,EACnBx7B,KAAKi8B,UAAW,CACnB,CACD,qBAAA8C,GACI,OAAO/+B,KAAK0iB,QAAQtgB,QAAOwjB,GAAOA,EAAIkR,SAC/BlR,EAAI5K,KAAK8B,MAAQoX,EAAQ2H,oBAAmBj6B,OAAS,CAC/D,CACD,cAAA86B,GAEI,OADA18B,KAAKg/B,QAAQ1/B,EAAKuU,QAAQ,iBACnB7T,KAAK+e,SACf,CAMD,QAAAkgB,CAASxxB,GACLA,EAAUA,GAAW,GACrB,MAAMyxB,EAA0B,gDAEhC,IAAKl/B,KAAK+Y,MACN,MAAM,IAAIuiB,kBAAkB,yBAEhC,GAAIt7B,KAAK0iB,QACL,IAAK,IAAIuG,KAAUjpB,KAAK0iB,QACpB,GAAIuG,EAAOjO,KAAK8B,KAAOoX,EAAQgB,iBACxBjM,EAAOjO,KAAK8B,MAAQoX,EAAQiB,sBAAuB,CAEtD,IADan1B,KAAK+Y,MAAMoG,iBAAiB8J,EAAOjO,KAAKxa,OAEjD,MAAM,IAAI86B,kBAAkB4D,EAA0BjW,EAAOjO,KAAKxa,MAEzE,MACI,GAAIyoB,EAAOjO,KAAK8B,MAAQoX,EAAQ2H,kBAAmB,CAEpD,IADa77B,KAAK+Y,MAAMoG,iBAAiB8J,EAAOjO,KAAKrW,KAAK,GAAGnE,OAEzD,MAAM,IAAI86B,kBAAkB4D,EAA0BjW,EAAOjO,KAAKrW,KAAK,GAAGnE,MAEjF,MACI,GAAIyoB,EAAOjO,KAAK8B,MAAQoX,EAAQp1B,QACjC,MAAM,IAAIw8B,kBApBD,iCAoBkCrS,EAAOjO,KAAK8B,KAI/D9c,KAAKkhB,MAAQlhB,KAAKkhB,KAAKyX,iBACvB34B,KAAKm/B,uBAAuBn/B,KAAKkhB,KAAMzT,EAE9C,CACD,oBAAA2xB,GACI,OAAOp/B,KAAKm+B,aAAa/7B,QAAOwjB,GAAOA,EAAIkR,SACpClR,EAAI5K,KAAK8B,MAAQoX,EAAQ2H,mBACnC,CAMD,WAAAwD,CAAY5xB,GACR,IAEI,OADAzN,KAAKi/B,SAASxxB,IACP,CACV,CACD,MAAO6xB,GACH,GAAIA,aAAahE,kBACb,OAAO,EAGP,MAAMgE,CAEb,CACJ,CACD,sBAAAH,CAAuBI,EAAS9xB,GAC5B,GAAI8xB,EAAQ3G,UACR,IAAK,IAAI4G,KAAaD,EAAQ5G,gBACrB6G,EAAU1I,SAEf92B,KAAKm/B,uBAAuBK,EAAW/xB,QAG1C,GAAI8xB,EAAQ9G,YAAY,GAAG3b,MAAQoX,EAAQgB,gBAAiB,CAC7D,MAAM9V,EAASmgB,EAAQ9G,YAAY,GAAGj4B,MAEtC,IADaR,KAAK+Y,MAAMoG,iBAAiBC,GAErC,MAAM,IAAIkc,kBAAkB,gDAAkDlc,GAElF,IAAK3R,EAAQgyB,iBACT,OACJ,IAAK,IAAI76B,EAAI,EAAGA,EAAI26B,EAAQ9G,YAAY72B,OAAQgD,IAAK,CACjD,MAAMoW,EAAOukB,EAAQ9G,YAAY7zB,GACjC,GAAIoW,EAAK8B,MAAQoX,EAAQQ,UAGrBr1B,EAAM2I,cAAcgT,EAAK/M,UAAW,CACpC,IAAK+M,EAAKxa,MACN,SACJ,IAAI2B,EAAS,GAETA,EADA6Y,EAAKC,OAAStb,EAASV,KACd+b,EAAKxa,MAAMS,MAAM,WAGjB,CAAC+Z,EAAKxa,OAEnB,IAAK,IAAIA,KAAS2B,EAAQ,CACtB,MAAMu9B,GAAal/B,EACnB,GAAI4H,MAAMs3B,GACN,MAAM,IAAIpE,kBAAkB,2CAA6CiE,EAAQ95B,IAErF,GAAIpG,EAAM6I,UAAU8S,EAAK/M,WAAayxB,GAAa/1B,SAASnJ,EAAO,IAC/D,MAAM,IAAI86B,kBAAkB,uDAAyDiE,EAAQ95B,GAEpG,CACJ,CACJ,CACJ,CACJ,CAMD,kBAAA8vB,CAAmBl1B,EAAMoN,GACjBpN,IACoB,iBAATA,EACPL,KAAK2/B,aAAat/B,EAAMoN,GAGxBzN,KAAK8Y,aAAazY,EAAMoN,GAGnC,CAOD,YAAAkyB,CAAaC,EAAMnyB,GACf,IAAIpN,EAAOqO,KAAKc,MAAMowB,GACtB5/B,KAAK8Y,aAAazY,EAAMoN,EAC3B,CAOD,YAAAqL,CAAazY,EAAMoN,GACfA,EAAUpO,EAAMqF,OAAO,CACnBm7B,cAAc,EACdZ,UAAU,GACXxxB,GAAW,CAAA,GACd,IAAIqyB,GAAW,EAGf,GAFA9/B,KAAKygB,QACLzgB,KAAK+/B,kBACD1/B,EAAM,CAGN,GAFAL,KAAKyF,GAAKpF,EAAKoF,GACfzF,KAAKkhB,KAAKpI,aAAa9Y,KAAK+Y,MAAO1Y,EAAK6gB,MACpC7gB,EAAK6gB,MAAQ7gB,EAAK6gB,KAAK8e,MACvB,IAAK,IAAIp7B,EAAI,EAAGA,EAAIvE,EAAK6gB,KAAK8e,MAAMp+B,OAAQgD,IAAK,CAC7C,MAAMq7B,EAAW5/B,EAAK6gB,KAAK8e,MAAMp7B,GACjC,GAAIq7B,EAASD,QAAUhgC,KAAK4+B,OAAQ,CAChCtwB,QAAQW,MAAM,0DACd,QACH,CACD,MAAMqpB,EAAOt4B,KAAKkgC,kBAClB5H,EAAKxf,aAAa9Y,KAAK+Y,MAAOknB,GAC9BjgC,KAAKkhB,KAAKkY,aAAad,EAC1B,CAML,GAJAt4B,KAAKO,KAAOF,EAAKE,KACjBP,KAAK2Y,YAActY,EAAK+N,KAExBpO,KAAKw8B,cAAgB,GACjBn8B,EAAK8/B,aACL,IAAK,IAAIv7B,EAAI,EAAGA,EAAIvE,EAAK8/B,aAAav+B,OAAQgD,IAAK,CAC/C,IAAIw7B,EAASpgC,KAAKqgC,cAAa,GAC/BD,EAAOtnB,aAAa9Y,KAAK+Y,MAAO1Y,EAAK8/B,aAAav7B,IAElD5E,KAAKsgC,kBAAkBF,EAC1B,CAEL,GAAI//B,EAAKoiB,KACL,IAAK,IAAI7d,EAAI,EAAGA,EAAIvE,EAAKoiB,KAAK7gB,OAAQgD,IAAK,CACvC,IAAIw7B,EAASpgC,KAAKqgC,eAClBD,EAAOtnB,aAAa9Y,KAAK+Y,MAAO1Y,EAAKoiB,KAAK7d,IAC1C5E,KAAK0iB,QAAQje,KAAK27B,GACdA,EAAO9J,UAAYjC,EAAc3H,MACjC1sB,KAAKsgC,kBAAkBF,EAE9B,CAgBL,GAdApgC,KAAKw8B,cAAchpB,MAAK,CAAC+sB,EAAMC,IACpBD,EAAK5J,WAAa6J,EAAK7J,aAElC32B,KAAKygC,sBACDpgC,EAAK07B,YACL/7B,KAAK+7B,UAAY17B,EAAK07B,WAE1B/7B,KAAKg8B,UAAY37B,EAAK27B,WAAah8B,KAAKg8B,UACpCh8B,KAAKg8B,WAAah8B,KAAKg8B,UAAU7X,OACjCnkB,KAAK27B,mBAAqB37B,KAAKg8B,UAAU7X,KAAK2S,UAAW,EACzD92B,KAAK09B,gBAAe/rB,IAChBA,EAASmH,aAAa9Y,KAAKg8B,UAAU7X,KAAK,IAC3C,IAEH9jB,EAAKqgC,KAAOrgC,EAAKqgC,IAAI9+B,OACrB,IAAK,IAAImU,KAAM1V,EAAKqgC,IAAK,CACP1gC,KAAK2gC,eACb7nB,aAAa/C,EACtB,CAER,CACG/V,KAAK27B,oBACL37B,KAAKo9B,4BAET0C,GAAW,EAEHryB,EAAQoyB,eACR7/B,KAAKi8B,UAAW,EAChBj8B,KAAKw7B,aAAc,GAGvB/tB,EAAQwxB,UACRj/B,KAAKi/B,UAEZ,CAID,YAAA0B,GACI,MAAMvL,EAAQp1B,KAAKq8B,QAAQuE,cAG3B,OAFAxL,EAAM8G,YAAcl8B,KACpBA,KAAKm8B,WAAW13B,KAAK2wB,GACdA,CACV,CACD,aAAAyL,GACI,OAAO7gC,KAAKm8B,UACf,CACD,cAAA2E,GACI,OAAO9gC,KAAKk8B,WACf,CAID,cAAA6E,CAAe5d,GACX,IAAK,IAAIyC,KAAO5lB,KAAK0iB,QACjB,GAAIkD,EAAIngB,KAAO0d,EACX,OAAOyC,EAEf,OAAO,IACV,CAKD,QAAAmP,GACI,OAAO/0B,KAAK+Y,KACf,CAKD,QAAAioB,CAASjoB,GACL/Y,KAAK+Y,MAAQA,CAChB,CAKD,aAAAkoB,CAAcloB,GACV/Y,KAAK+Y,MAAM6F,QAAQ7F,EACtB,CAKD,MAAAmoB,GACI,OAAOxyB,KAAKC,UAAU3O,KAAK01B,aAC9B,CAKD,UAAAA,GACI11B,KAAKygC,sBACL,IAAI93B,EAAM,CACNw4B,QAASnhC,KAAK+Y,MAAQ/Y,KAAK+Y,MAAM+F,QAAU,KAC3CsiB,UAAWphC,KAAK+Y,MAAQ/Y,KAAK+Y,MAAMgG,UAAY,MAEnDpW,EAAIlD,GAAKzF,KAAKyF,GACdkD,EAAIpI,KAAOP,KAAKO,KACZP,KAAK2Y,cACLhQ,EAAIyF,KAAOpO,KAAK2Y,aAEpBhQ,EAAI8Z,KAAO,GACX,IAAK,IAAI7d,EAAI,EAAGA,EAAI5E,KAAK0iB,QAAQ9gB,OAAQgD,IACrC+D,EAAI8Z,KAAKhe,KAAKzE,KAAK0iB,QAAQ9d,GAAGyf,cAElC1b,EAAIw3B,aAAe,GAInBngC,KAAKw8B,cAAcjlB,SAAQqO,IACnBA,EAAIsR,gBACJvuB,EAAIw3B,aAAa17B,KAAKmhB,EAAIvB,aAC7B,IAEDrkB,KAAK+7B,YACLpzB,EAAIozB,UAAY/7B,KAAK+7B,WAErB/7B,KAAKg8B,YACLrzB,EAAIqzB,UAAYh8B,KAAKg8B,UACrBrzB,EAAIqzB,UAAU7X,KAAOnkB,KAAK87B,aAAazX,aACvC1b,EAAIqzB,UAAU7X,KAAK2S,QAAU92B,KAAK27B,oBAEtC,MAAM0F,eAAkBC,IACpB,MAAM98B,EAAS88B,EAAUjd,aACzB7f,EAAOw7B,MAAQ,GACf,MAAM3H,EAAaiJ,EAAU3I,gBAC7B,IAAK,IAAI/zB,EAAI,EAAGA,EAAIyzB,EAAWz2B,OAAQgD,KAC/ByzB,EAAWzzB,GAAGg0B,WAAc54B,KAAK4+B,OAIrCp6B,EAAOw7B,MAAMv7B,KAAK4zB,EAAWzzB,GAAGyf,cAH5B/V,QAAQW,MAAM,0DAKtB,OAAOzK,CAAM,EAIjB,GAFAmE,EAAIuY,KAAOmgB,eAAerhC,KAAKkhB,MAC/BvY,EAAI44B,WAAaF,eAAerhC,KAAKu8B,iBACjCv8B,KAAKm8B,WAAWv6B,OAAS,EAAG,CAC5B+G,EAAI+3B,IAAM,GACV,IAAK,IAAI3qB,KAAM/V,KAAKm8B,WAChBxzB,EAAI+3B,IAAIj8B,KAAKsR,EAAG2f,aAEvB,CAGD,OAFA/sB,EAAIo0B,eAAiB/8B,KAAK+8B,eAC1Bp0B,EAAI4K,OAASjU,EAAK2S,mBACXtJ,CACV,CAKD,iBAAA64B,GACI,OAAOxhC,KAAKkhB,KAAKrC,SACpB,CAKD,cAAA4iB,GACI,OAAQzhC,KAAK0iB,SAAmC,IAAxB1iB,KAAK0iB,QAAQ9gB,MACxC,CAKD,OAAAid,GACI,OAAO7e,KAAKyhC,kBAAoBzhC,KAAKwhC,mBACxC,CAID,KAAA/gB,GACIzgB,KAAK27B,oBAAqB,EAC1B37B,KAAK87B,aAAarb,QAClBzgB,KAAK0hC,eACL1hC,KAAKm5B,kBACLn5B,KAAK2hC,uBACL3hC,KAAKg8B,UAAY,GACjBh8B,KAAK+7B,UAAY,EACpB,CAID,YAAA2F,GACI1hC,KAAK0iB,QAAU,GAEf1iB,KAAKw8B,cAAgB,EACxB,CAID,eAAArD,GACIn5B,KAAKkhB,KAAKiY,kBACVn5B,KAAKkhB,KAAKqX,SAAW94B,EAAS8sB,IAC9BvsB,KAAKkhB,KAAK4V,SAAU,CACvB,CAID,oBAAA6K,GACI3hC,KAAKu8B,gBAAgBpD,iBACxB,CAID,eAAA4G,GACI//B,KAAKm8B,WAAa,EACrB,CAKD,KAAArd,GACI,OAAO9e,KAAKyF,EACf,CAKD,KAAAm8B,CAAMn8B,GACFzF,KAAKyF,GAAKA,CACb,CAID,YAAAg3B,GACIz8B,KAAKyF,GAAKpG,EAAMuK,WAAW,OAC9B,CAKD,OAAAmV,GACI,OAAO/e,KAAKO,IACf,CAKD,OAAAy+B,CAAQz+B,GACJP,KAAKO,KAAOA,CACf,CAKD,cAAAshC,GACI,OAAO7hC,KAAK2Y,WACf,CAKD,cAAAmpB,CAAenpB,GACX3Y,KAAK2Y,YAAcA,CACtB,CAKD,UAAAwlB,GACI,OAAOn+B,KAAK0iB,OACf,CAKD,sBAAAqf,GAEI,GAAqB,IADP/hC,KAAKo/B,uBACTx9B,OACN,MAAO,GACX,MAAM6gB,EAAOziB,KAAKm+B,aACb/7B,QAAOwjB,GAAOA,EAAIkR,SAAWlR,EAAI5K,KAAK8B,MAAQoX,EAAQgB,kBAG3D,OAFIzS,EAAK7gB,QACL6gB,EAAKuf,MACFvf,CACV,CACD,iBAAA6d,CAAkB1a,GACd,MAAMqc,EAAUvzB,KAAKC,UAAUiX,EAAI5K,KAAKqJ,cACxC,IAAI6d,GAAW,EACfliC,KAAKw8B,cAAcjlB,SAAQ4qB,IACNzzB,KAAKC,UAAUwzB,EAAKnnB,KAAKqJ,gBACzB4d,IACbC,GAAW,EACd,IAEDA,GACAliC,KAAKw8B,cAAc/3B,KAAKmhB,EAE/B,CAKD,oBAAAwc,GACI,OAAOpiC,KAAKw8B,cAAcp6B,QAAOwjB,GACtBA,EAAIsR,gBAElB,CAKD,gBAAAmL,GACI,OAAOriC,KAAKw8B,aACf,CAMD,kBAAA9F,CAAmB9Q,GACf,OAAO5lB,KAAKw8B,cAAc12B,QAAQ8f,EACrC,CACD,kBAAAgR,CAAmBhR,EAAKvf,GACpB,GAAIA,EAAQ,EACR,OACJ,IAAIi8B,EAAStiC,KAAK02B,mBAAmB9Q,GACjC0c,EAAS,IACTtiC,KAAKsgC,kBAAkB1a,GACvB0c,EAAStiC,KAAKw8B,cAAc56B,OAAS,GAEzCvC,EAAM2G,cAAchG,KAAKw8B,cAAe8F,EAAQj8B,GAChDrG,KAAKygC,qBACR,CACD,gBAAApK,CAAiBzQ,GAEb,OADY5lB,KAAK02B,mBAAmB9Q,IACzB,EACAA,EAAI0Q,UAAYjC,EAAc3H,KAAO9G,EAAI0Q,SAAWjC,EAAcmK,UAGlEnK,EAAc3H,IAE5B,CACD,gBAAA8J,CAAiB5Q,EAAK2Q,GAClB,MAAM5wB,EAAM3F,KAAK02B,mBAAmB9Q,GACpCA,EAAI0Q,SAAWC,EACX5wB,GAAO,EACH4wB,GAAalC,EAAc3H,OAC3BrtB,EAAM+G,gBAAgBpG,KAAKw8B,cAAe5W,GAC1C5lB,KAAKygC,uBAILlK,GAAalC,EAAc3H,OAC3B1sB,KAAKsgC,kBAAkB1a,GACvB5lB,KAAKygC,uBAGbzgC,KAAKuiC,sBACR,CACD,mBAAA9B,GACIzgC,KAAKw8B,cAAcjlB,SAAQ,CAACqO,EAAKvf,KAC7Buf,EAAI+Q,WAAatwB,CAAK,GAE7B,CACD,oBAAAk8B,GACI,IAAKviC,KAAKo8B,8BACN,OAEJ,GAAIp8B,KAAKoiC,uBAAuBxgC,OAAS,EACrC,OAEJ,IAAI+D,EAAM,EACV3F,KAAK0iB,QAAQnL,SAAQqO,IACjB,GAAIA,EAAIwQ,SAAW/B,EAAc3H,KAAM,CACnC,MAAM4V,EAAStiC,KAAK02B,mBAAmB9Q,GACnC0c,GAAU,IACVjjC,EAAM2G,cAAchG,KAAKw8B,cAAe8F,EAAQ38B,GAChDA,IAEP,KAEL3F,KAAKygC,qBACR,CACD,YAAAJ,CAAaxJ,GAAa,GACtB,OAAO,IAAIX,YAAYl2B,KAAM62B,EAChC,CACD,aAAA2L,CAAc/8B,GACV,OAAOpG,EAAMkG,aAAavF,KAAK0iB,QAASjd,EAC3C,CAgBD,SAAAg9B,CAAU1iC,EAAY61B,GAAS,GAC3B,IAAI8M,EACJ,MAAM7L,EAAa92B,EAAW82B,YAAe92B,EAAWkpB,QAAUlpB,EAAWkpB,OAAOiO,eACpF,GAAIn3B,EAAWkpB,OACXyZ,EAAY3iC,EAAWkpB,WAEtB,CAED,IAAI/O,EACJ,GAFAwoB,EAAY1iC,KAAKqgC,aAAatgC,EAAW82B,YAErC92B,EAAWwf,UACXrF,EAAOna,EAAWwf,eAEjB,GAAIxf,EAAW4iC,aAEhB,GADAzoB,EAAOla,KAAK+Y,MAAMoG,iBAAiBpf,EAAW4iC,cACzCzoB,EACD,MAAM,IAAIlN,MAAM,2BAA2BjN,EAAW4iC,gCAGzD,QAAqC,IAA1B5iC,EAAW6iC,aAA+B7iC,EAAW8iC,UACjE,MAAM,IAAI71B,MAAM,2IAEpB,GAAIkN,EAAM,CACN,IAAI4oB,EAAgBjM,EAAa3c,EAAKiV,aAAejV,EAAKgV,YAC1D,IAAK4T,IACG5oB,EAAKa,aACLb,EAAOla,KAAK+Y,MAAMoG,iBAAiBjF,EAAKa,YACxC+nB,EAAgBjM,EAAa3c,EAAKiV,aAAejV,EAAKgV,cAErD4T,GACD,MAAM,IAAI91B,MAAM,wCAG3B,CAKD,GAJIjN,EAAWgjC,YAAchjC,EAAW8iC,WACpCv0B,QAAQC,KAAK,yGAGoB,IAA1BxO,EAAW6iC,WAClBF,EAAU1nB,KAAK8B,IAAMoX,EAAQQ,SAC7BgO,EAAU1nB,KAAK0L,SAAS3mB,EAAW6iC,YACnCF,EAAU1nB,KAAKC,KAAOtb,EAAS+uB,OAC/BgU,EAAU1nB,KAAK/M,SAAWlO,EAAWijC,WAAarkC,EAAS+D,YAE1D,GAAI3C,EAAW8iC,UAChBH,EAAUhqB,QAAU,oBACpBgqB,EAAU1nB,KAAK8B,IAAMoX,EAAQ+O,UAC7BP,EAAU1nB,KAAK4S,IAAM7tB,EAAW8iC,UAChCH,EAAU1nB,KAAKC,KAAOtb,EAASkzB,MAC/B6P,EAAU1nB,KAAK/M,SAAWtP,EAASG,QACnC4jC,EAAU1nB,KAAKya,WAAa11B,EAAW4iC,YAClC3iC,KAAKq8B,QAAQ5uB,QAAQy1B,yBACtBR,EAAU5L,SAAU,QAGvB,GAAI/2B,EAAWgjC,WAAY,CAC5B,MAAM7f,EAASnjB,EAAWgjC,WAC1BL,EAAU1nB,KAAK8B,IAAMoX,EAAQ2H,kBAC7B6G,EAAU1nB,KAAKyW,KAAO1xB,EAAWgjC,WACjCL,EAAU1nB,KAAKC,KAAOtb,EAAS+uB,OAC/BgU,EAAU1nB,KAAK/M,SAAqB,SAAViV,GAA+B,UAAVA,EAAqB,EAAIhJ,EAAKjM,SAC7Ey0B,EAAU1nB,KAAK4Z,UAAW,EAC1B,MAAMY,EAAM,IAAIf,WAAWiO,GAC3BlN,EAAI9O,SAASxM,EAAKzU,IAAI,GACtB+vB,EAAI1Y,IAAMoX,EAAQgB,gBAClBM,EAAIva,KAAOtb,EAASs1B,UACpBO,EAAIvnB,SAAWiM,EAAKjM,SACpBy0B,EAAU1nB,KAAKrW,KAAKF,KAAK+wB,EAC5B,MAEGkN,EAAU1nB,KAAK0L,SAASxM,EAAKzU,IAAI,GACjCi9B,EAAU1nB,KAAK8B,IAAMoX,EAAQgB,gBAC7BwN,EAAU1nB,KAAKC,KAAOtb,EAASs1B,UAC/ByN,EAAU1nB,KAAK/M,SAAWiM,EAAKjM,SAC/By0B,EAAU5a,OAAOtH,OAAOtG,EAAK4N,QAEjC4a,EAAUhqB,QAAU3Y,EAAW2Y,SAAW1Y,KAAKq8B,QAAQ8G,wBAAwBT,GAC/EA,EAAUpM,SAAWv2B,EAAWq2B,SAAW/B,EAAc3H,KACzDgW,EAAU/L,WAAa52B,EAAW02B,YAAc,EAChDiM,EAAU5L,QAAUz3B,EAAM0F,aAAahF,EAAW+2B,SAAS,GAC3D4L,EAAUvL,YAAY93B,EAAM0F,aAAahF,EAAWqjC,UAAU,GACjE,CAaD,OAZKvM,IACG92B,EAAWsG,OAAStG,EAAWsG,OAAS,GAAKtG,EAAWsG,MAAQrG,KAAK0iB,QAAQ9gB,OAC7E5B,KAAK0iB,QAAQvc,OAAOpG,EAAWsG,MAAO,EAAGq8B,GAGzC1iC,KAAK0iB,QAAQje,KAAKi+B,IAG1B1iC,KAAKw2B,iBAAiBkM,EAAWA,EAAUpM,UACtCV,GACD51B,KAAKqjC,wBAAwBjP,EAAkBkP,IAAKZ,EAAW7L,GAE5D6L,CACV,CAYD,YAAAa,CAAata,EAAQ5iB,EAAOm9B,GACxB,IAAI9gB,EAAU1iB,KAAK0iB,aACS,IAAjBuG,EAAOrnB,QACM,iBAATyE,EACPqc,EAAQvc,OAAOE,EAAO,EAAG4iB,GAGzBvG,EAAQje,KAAKwkB,GAEbA,EAAOmN,SAAW/B,EAAc3H,MAChC1sB,KAAKsgC,kBAAkBrX,GAE3BjpB,KAAKygC,wBAGe,iBAATp6B,EACPqc,EAAQje,KAAK8jB,MAAM7F,EAAS,CAACrc,EAAO,GAAGma,OAAOyI,IAG9CvG,EAAQje,KAAK8jB,MAAM7F,EAAS,GAAGlC,OAAOyI,IAE1CA,EAAO1R,SAAQqO,IACPA,EAAIwQ,SAAW/B,EAAc3H,MAC7B1sB,KAAKsgC,kBAAkB1a,EAC1B,IAEL5lB,KAAKygC,sBAEZ,CAOD,gBAAAzC,CAAiB/U,EAAQnM,EAAKnY,GAC1B,IAAIskB,EAAOiO,eAAX,CAGA,GADAvyB,EAAOA,GAAQ,GACXmY,IAAQoX,EAAQ2H,kBAAmB,CACnC,IAAKl3B,EAAKue,OACN,MAAMlW,MAAM,oCAChB,GAAIic,EAAOjO,KAAK8B,KAAOoX,EAAQ2H,kBAE3B,YADA5S,EAAOjO,KAAKyW,KAAO9sB,EAAKue,QAG5B,MAAMlI,EAAO,IAAIyZ,WAAWxL,GAC5BjO,EAAK8B,IAAMoX,EAAQ2H,kBACnB7gB,EAAKyW,KAAO9sB,EAAKue,OACjBlI,EAAK4Z,UAAW,EAChB5Z,EAAK/M,SAA0B,SAAftJ,EAAKue,QAAoC,UAAfve,EAAKue,OAAqB,EAAI+F,EAAOjO,KAAK/M,SACpF,MAAMunB,EAAM,IAAIf,WAAWxL,GAC3BuM,EAAI1c,aAAa9Y,KAAK+Y,MAAOkQ,EAAOjO,KAAKqJ,cACzCrJ,EAAKrW,KAAKF,KAAK+wB,GACfvM,EAAOjO,KAAOA,CACjB,MACI,GAAI8B,IAAQoX,EAAQ+O,UAAW,CAChC,MAAM7jB,EAAU6J,EAAOjO,KAAK8B,KAAOoX,EAAQ2H,kBACrC5S,EAAOjO,KAAKrW,KAAK,GAAGnE,MACpByoB,EAAOjO,KAAKxa,MAClB,IAAIijC,EAAU,GACVzjC,KAAK+Y,QACL0qB,EAAUzjC,KAAK+Y,MAAMoG,iBAAiBC,GAAQpE,MAElD,MAAM0oB,EAAgB,IAAIjP,WAAWxL,GACrCya,EAAc5mB,IAAMoX,EAAQ+O,UAC5BS,EAAcz1B,SAAWtP,EAAS+D,OAClCghC,EAAc9V,IAAM6V,EACpBC,EAAcjO,WAAarW,EAC3B6J,EAAOjO,KAAO0oB,CACjB,MACI,GAAI5mB,IAAQoX,EAAQgB,gBAAiB,CACtC,GAAIjM,EAAOjO,KAAK8B,MAAQoX,EAAQgB,iBACzBjM,EAAOjO,KAAK8B,MAAQoX,EAAQiB,sBAC/B,OAEJ,MAAM/V,EAAU6J,EAAOjO,KAAK8B,KAAOoX,EAAQ2H,kBACrC5S,EAAOjO,KAAKrW,KAAK,GAAGnE,MACpByoB,EAAOjO,KAAKya,WACZvb,EAAOkF,EACPpf,KAAK+Y,MAAMoG,iBAAiBC,GAC5Bpf,KAAK+Y,MAAMgZ,kBACX/W,EAAO,IAAIyZ,WAAWxL,GAC5BjO,EAAK8B,IAAMoX,EAAQgB,gBACnBla,EAAK/M,SAAWiM,EAAKjM,SACrB+M,EAAK0L,SAASxM,EAAKzU,IAAI,GACvBwjB,EAAOjO,KAAOA,CACjB,CACDiO,EAAOvQ,QAAU1Y,KAAKq8B,QAAQ8G,wBAAwBla,EAnD3C,CAoDd,CAMD,UAAA0a,CAAW19B,EAAQC,GACf,MAAMwc,EAAU1iB,KAAKm+B,aACrB9+B,EAAM2G,cAAc0c,EAASzc,EAAQC,GACrClG,KAAKuiC,sBACR,CAKD,YAAAqB,CAAa3a,GACT5pB,EAAM+G,gBAAgBpG,KAAK0iB,QAASuG,GACpC5pB,EAAM+G,gBAAgBpG,KAAKw8B,cAAevT,EAC7C,CAMD,iBAAA4a,CAAkB9jC,EAAY+jC,GAAoB,GAE9C,OADAx1B,QAAQW,MAAM,0DACP,IACV,CACD,sBAAA80B,CAAuBhkC,EAAY+jC,GAAoB,GAEnD,OADAx1B,QAAQW,MAAM,0DACP,IACV,CACD,eAAAixB,CAAgBpjB,EAAMwX,EAAQgF,QAC1B,OAAO,IAAInB,UAAUn4B,KAAM8c,EAC9B,CAMD,kBAAAknB,CAAmBjkC,GACf,IAAIyY,EAASzY,EAAWyY,QAAUxY,KAAKikC,mBACnClrB,EAAQ/Y,KAAK+0B,WACjB,IAAKhc,EACD,OAAO,KACX,IAAKhZ,EAAWwf,YAAcxf,EAAW4iC,YACrC,MAAM,IAAI31B,MAAM,mEAEpB,IAAKjN,EAAWwf,YACZxf,EAAWwf,UAAYxG,EAAMoG,iBAAiBpf,EAAW4iC,cACpD5iC,EAAWwf,WACZ,MAAM,IAAIvS,MAAM,kCAAoCjN,EAAW4iC,cAGlE5iC,EAAW8sB,UAAY9sB,EAAWmyB,aACnCnyB,EAAW8sB,SAAW9T,EAAMqZ,gBAAgBryB,EAAWmyB,aAEtDnyB,EAAW8sB,WACZ9sB,EAAW8sB,SAAW9T,EAAM4Z,0BAA0B5yB,EAAWwf,YAErE,IAAI+Y,EAAOt4B,KAAKkkC,4BAA4BnkC,EAAWwf,UAAWxf,EAAW8sB,SAAU9sB,EAAWS,OAIlG,OAHAgY,EAAO4gB,aAAad,GACpBA,EAAKxB,QAAUz3B,EAAM0F,aAAahF,EAAW+2B,SAAS,GACtDwB,EAAKnB,YAAY93B,EAAM0F,aAAahF,EAAWqjC,UAAU,IAClD9K,CACV,CACD,uBAAA6L,CAAwBpkC,GAEpB,OADAA,EAAWyY,OAASzY,EAAWyY,QAAUxY,KAAKu8B,gBACvCv8B,KAAKgkC,mBAAmBjkC,EAClC,CACD,2BAAAmkC,CAA4BhqB,EAAM2S,EAAUuX,GACxC,IAAKlqB,IAASA,EAAK+U,gBAAiB,CAEhC,KAAM,+CADY/U,EAAOA,EAAKxB,QAAU,OAE3C,CACD,IAAI4f,EAAOt4B,KAAKkgC,gBAAgB5L,EAAQgF,QACxChB,EAAKyB,cAAclN,EAASpnB,IAAI,GAChC,IAAI4+B,EAAW,IAAI5P,WAAW6D,GAC9B+L,EAAS3d,SAASxM,EAAKzU,IAAI,GAC3B4+B,EAASvnB,IAAM9c,KAAK28B,iBACpB0H,EAASppB,KAAOtb,EAASs1B,UACzBoP,EAASp2B,SAAWiM,EAAKjM,SACzBqqB,EAAKG,YAAYh0B,KAAK4/B,GACtB,IAAItrB,EAAQ/Y,KAAK+0B,WACjB,MAAMuP,EAAWzX,EAASsB,WAC1B,IAAIhsB,EAAS9C,EAAMkH,UAAU,IAAItC,MAAMqgC,EAAW,GAAI,MAClDF,UACIngC,MAAMC,QAAQkgC,GACd/kC,EAAM6F,YAAYk/B,EAAajiC,GAE1BmiC,EAAW,IAChBniC,EAAO,GAAKiiC,IAIpB,IADA,IAAIG,EAAYpiC,EAAOP,OACdgD,EAAI,EAAGA,EAAI2/B,EAAW3/B,IAAK,CAChC,IAAI+pB,EAAU5V,EAAM6Z,WAAW1Y,EAAM2S,EAAUjoB,EAAI,GACnD0zB,EAAKsC,uBAAuBjM,EAASxsB,EAAOyC,GAC/C,CACD,OAAO0zB,CACV,CAMD,aAAAkM,CAAcC,EAAiBjB,GAC3B,IAAIkB,EAAoBD,EAAgBriC,QAAO8hB,GAAKA,EAAEgT,iBAClDxU,EAAU+hB,EAAgBriC,QAAO8hB,IAAMA,EAAEgT,iBAC7C,SAASyN,gBAAgB7jC,EAAK8jC,GAC1B,IAAIC,EAASD,EAAYhjC,OACzB,IAAK,IAAIgD,EAAI,EAAGA,EAAIigC,EAAQjgC,IAAK,CAC7B,IAAIyB,EAAQvF,EAAIgF,QAAQ8+B,EAAYhgC,IAChCyB,GAAS,GACTvF,EAAIqF,OAAOE,EAAO,EAEzB,CACJ,CACGqc,EAAQ9gB,OAAS,IACjB+iC,gBAAgB3kC,KAAKm+B,aAAczb,GACnCiiB,gBAAgB3kC,KAAKw8B,cAAe9Z,IAEpCgiB,EAAkB9iC,OAAS,GAE3B+iC,gBAAgB3kC,KAAKw8B,cAAekI,GAExC1kC,KAAKygC,qBACR,CAKD,gBAAAqE,CAAiBzkC,GACbL,KAAKs8B,aAAahS,KAAK,gBAAiBjqB,EAC3C,CACD,gBAAAu3B,CAAiB9P,EAAQyC,EAAU0T,GAC/BnW,EAASA,GAAU,CAAE+P,KAAM1D,EAAgB5H,UAClB,IAArB,QAA4D,IAAxB,IACpCzE,EAAOyC,SAAWA,GAAY,EAC9BzC,EAAOmW,YAAcA,EACrB3vB,QAAQC,KAAK,4FAEjBvO,KAAKw7B,iBAA6C,IAAvB1T,EAAkB,aACvCA,EAAOmW,YAEb,MAAM8G,EAAYjd,GAAU,CACxB+P,KAAM1D,EAAgB5H,KAE1BvsB,KAAKs8B,aAAahS,KAAK,eAAgBya,EAAWjd,EAAOyC,UAAY,EACxE,CACD,uBAAA8Y,CAAwBrL,EAAQ/O,EAAQ4N,GAAa,GACjD72B,KAAK43B,iBAAiB,CAClBC,KAAM,EACA1D,EAAgB2D,eAChB3D,EAAgB4D,QACtBC,OAAQA,EACRE,QAASjP,GAEhB,CACD,0BAAA+b,CAA2BhN,EAAQwH,GAC/Bx/B,KAAK43B,iBAAiB,CAClBC,KAAM1D,EAAgByF,WACtB5B,OAAQA,EACRE,QAASsH,GAEhB,CAKD,oBAAAyF,CAAqBC,GACjB,IAAIC,aAAe,SAAUC,GACzB,IAAK,IAAIxgC,EAAI,EAAGA,EAAIwgC,EAAUzM,gBAAgB/2B,OAAQgD,IAAK,CACvD,IAAI0zB,EAAO8M,EAAUzM,gBAAgB/zB,GACjC0zB,EAAKM,UACLuM,aAAa7M,GAGT4M,GACAA,EAAiB5M,EAE5B,CACb,EACQ6M,aAAanlC,KAAKikC,mBACrB,CAMD,kBAAAoB,CAAmBjmB,GACf,IAAI1V,EAAM,KAWV,OAVA1J,KAAKilC,sBAAqB,SAAU3M,GAChC,GAAIA,EAAKxB,QAAS,CACd,MAAM9b,EAAOsd,EAAKG,YAAY,GACxB6M,EAAOhN,EAAKwB,gBACd9e,EAAKxa,OAAS4e,IAAUkZ,EAAKG,YAAY,IAChC,SAAR6M,GAA2B,UAARA,GAA4B,cAARA,IACxC57B,EAAM4uB,EAAKG,YAAY,GAAGj4B,MAEjC,CACb,IACekJ,CACV,CAKD,gBAAAu6B,GACI,OAAOjkC,KAAKkhB,IACf,CAMD,kBAAAqkB,CAAmBxb,GACf,OAAO/pB,KAAKs8B,aAAazS,UAAU,gBAAiBE,EACvD,CAKD,qBAAAyb,CAAsBnb,GAClBrqB,KAAKs8B,aAAalS,YAAY,gBAAiBC,EAClD,CAKD,kBAAA4S,CAAmBlT,GACf,OAAO/pB,KAAKs8B,aAAazS,UAAU,eAAgBE,EACtD,CAKD,qBAAA0b,CAAsBpb,GAClBrqB,KAAKs8B,aAAalS,YAAY,eAAgBC,EACjD,CAID,iBAAAqb,GACI,MAAM3sB,EAAQ/Y,KAAK+0B,WACnB,IAAKhc,EACD,MAAO,GACX,MAAM4sB,sBAAyB1hB,IAC3B,IAA6G2hB,EAAUhhC,EAAnHJ,EAAS,GAAIqhC,EAAU,OAASnmC,EAAQitB,cAAc1I,EAAMsU,UAAWuN,EAAWxmC,EAAKuU,QAAQgyB,GACnG,IAAKjhC,EAAI,EAAGA,EAAIqf,EAAM0U,gBAAgB/2B,OAAQgD,IAAK,CAC/CghC,EAAW,GACX,IAAItN,EAAOrU,EAAM0U,gBAAgB/zB,GACjC,GAAI0zB,EAAKxB,cAAqC,IAAlBwB,EAAY,QACpC,GAAIA,EAAKM,UACLgN,EAAWD,sBAAsBrN,GAC7BsN,IACAA,EAAW,IAAMA,EAAW,SAG/B,CACD,IAAIG,EAAOzN,EAAKwB,gBACZjN,EAAW9T,EAAMqZ,gBAAgB2T,GACjC3kC,EAAQ1B,EAAQktB,oBAAoBC,GACpCmZ,EAAO5kC,EAAMQ,OACjB,IAAK,IAAIqkC,EAAK,EAAGA,EAAKD,EAAMC,IAAM,CAC9B,IAAIpO,EAAOz2B,EAAM6kC,GACbpX,EAAMgJ,EAAKta,KACf,GAAiB,cAAbsa,EAAK5gB,KAAsB,CAC3B,IAAI+D,EAAOsd,EAAKG,YAAYZ,EAAKxxB,OACjC,GAAI2U,EAAKC,MAAQtb,EAASs1B,WAAaja,EAAK8B,KAAOoX,EAAQgB,gBAAiB,CACxE,IAAIhb,EAAOnB,EAAMoG,iBAAiBnE,EAAKxa,OAC3B,MAAR0Z,IACA2U,EAAM9V,EAAMsI,iBAAiBnH,EAAM,mBAE1C,MAGG,GADA2U,EAAM7T,EAAKnH,UACP7T,KAAK+Y,MAAMga,YAAYlE,IAAQ7uB,KAAK+Y,MAAMoa,YAAYtE,GAAM,CAC5D,MAAMqX,EAAYrX,EAAInZ,UAAU,EAAGmZ,EAAIjtB,OAAS,GAEhDitB,EADYvvB,EAAKuU,QAAQqyB,IACZrX,CAChB,CAER,CACGoX,EAAK,IACLL,GAAY,KAChBA,GAAY/W,CACf,CACJ,CAED+W,IACIhhC,EAAI,GAAKJ,IACTA,GAAU,IAAMshC,EAAW,KAE/BthC,GAAUohC,EAEjB,CAID,OAHI3hB,EAAMsU,UAAY94B,EAASitB,MAAQzI,EAAMsU,UAAY94B,EAAS+sB,SAC9DhoB,EAAS,SAAWA,EAAS,MAE1BA,CAAM,EAEjB,OAAOmhC,sBAAsB3lC,KAAKikC,mBACrC,CAID,uBAAAkC,GACI,MAAMptB,EAAQ/Y,KAAK+0B,WACnB,IAAKhc,EACD,MAAO,sCACX,MAAMqtB,cAAiBprB,IACnB,GAAIA,EAAKC,MAAQtb,EAASkzB,MACtB,MAAO,OAAO7X,EAAKnH,gBAElB,GAAImH,EAAKC,MAAQtb,EAASV,KAC3B,MAAO,IAAI+b,EAAKnH,aAEf,GAAImH,EAAK/M,UAAYtP,EAAS+D,QAC5BsY,EAAK/M,UAAYtP,EAASgE,MAC1BqY,EAAK/M,UAAYtP,EAASiE,UAC7B,MAAO,SAASoY,EAAKnH,kBAEpB,CACD,IAAIgb,EAAM7T,EAAKnH,UACf,GAAI7T,KAAK+Y,MAAMga,YAAYlE,IAAQ7uB,KAAK+Y,MAAMoa,YAAYtE,GAAM,CAC5D,MAAMqX,EAAYrX,EAAInZ,UAAU,EAAGmZ,EAAIjtB,OAAS,GAEhDitB,EADYvvB,EAAKuU,QAAQqyB,IACZrX,CAChB,CACD,OAAOA,CACV,GAEC8W,sBAAyB1hB,IAC3B,IAA4J2hB,EAAUhhC,EAAlKJ,EAAS,GAAIqhC,EAAU,OAASnmC,EAAQitB,cAAc1I,EAAMsU,UAAWuN,EAAW,sCAAsCxmC,EAAKuU,QAAQgyB,YACzI,IAAKjhC,EAAI,EAAGA,EAAIqf,EAAM0U,gBAAgB/2B,OAAQgD,IAAK,CAC/CghC,EAAW,GACX,IAAItN,EAAOrU,EAAM0U,gBAAgB/zB,GACjC,GAAI0zB,EAAKxB,cAAqC,IAAlBwB,EAAY,QACpC,GAAIA,EAAKM,UACLgN,EAAWD,sBAAsBrN,GAC7BsN,IACAA,EAAW,IAAMA,EAAW,SAG/B,CACD,IAAIG,EAAOzN,EAAKwB,gBACZjN,EAAW9T,EAAMqZ,gBAAgB2T,GACjC3kC,EAAQ1B,EAAQktB,oBAAoBC,GACpCmZ,EAAO5kC,EAAMQ,OACjB,IAAK,IAAIqkC,EAAK,EAAGA,EAAKD,EAAMC,IAAM,CAC9B,IAAIpO,EAAOz2B,EAAM6kC,GACbpX,EAAMgJ,EAAKta,KACf,GAAiB,cAAbsa,EAAK5gB,KAAsB,CAC3B,IAAI+D,EAAOsd,EAAKG,YAAYZ,EAAKxxB,OACjC,GAAI2U,EAAKC,MAAQtb,EAASs1B,WAAaja,EAAK8B,KAAOoX,EAAQgB,gBAAiB,CACxE,IAAIhb,EAAOnB,EAAMoG,iBAAiBnE,EAAKxa,OACvCquB,EAAM,sCAAsC9V,EAAMsI,iBAAiBnH,EAAM,2BAC5E,MAEG2U,EAAM,sCAAsCuX,cAAcprB,WAEjE,KACqB,YAAb6c,EAAK5gB,OACV4X,EAAM,oCAAoCA,YAE1CoX,EAAK,IACLL,GAAY,KAChBA,GAAY/W,CACf,CACJ,CAED+W,IACIhhC,EAAI,GAAKJ,IACTA,GAAU,IAAMshC,EAAW,KAE/BthC,GAAUohC,EAEjB,CAID,OAHI3hB,EAAMsU,UAAY94B,EAASitB,MAAQzI,EAAMsU,UAAY94B,EAAS+sB,SAC9DhoB,EAAS,mDAAuDA,EAAS,MAEtEA,CAAM,EAEjB,MAAO,gCAAgCmhC,sBAAsB3lC,KAAKikC,2BACrE,CAID,kBAAAoC,GACI,GAAIrmC,KAAK+Y,MAAMtT,KAAOzF,KAAKyF,GACvB,MAAMuH,MAAM,mBAChB,MAAMs5B,EAAW,GACX5jB,EAAU1iB,KAAKm+B,aACrB,IAAK,IAAIlV,KAAUvG,EACVuG,EAAO6N,SAEZ92B,KAAKumC,sBAAsBD,EAAUrd,EAAOjO,MAEhD,MAAMwrB,EAAWxmC,KAAKikC,mBAEtB,OADAjkC,KAAKymC,4BAA4BH,EAAUE,GACpCF,CACV,CACD,2BAAAG,CAA4BH,EAAUplB,GAClC,IAAK,IAAIse,KAAate,EAAKyX,gBACvB,GAAK6G,EAAU5G,UAWX54B,KAAKymC,4BAA4BH,EAAU9G,QAV3C,IAAK,IAAIxkB,KAAQwkB,EAAU/G,YAEvB,GADAz4B,KAAKumC,sBAAsBD,EAAUtrB,GACjCA,EAAKrW,KACL,IAAK,IAAI6wB,KAAOxa,EAAKrW,KACjB3E,KAAKumC,sBAAsBD,EAAU9Q,EAS5D,CACD,qBAAA+Q,CAAsBD,EAAUtrB,GAC5B,GAAIA,EAAK8B,MAAQoX,EAAQgB,gBACrB,OACJ,MAAM9V,EAASpE,EAAKya,YAAcza,EAAKxa,MACvC,GAAI4e,EAAQ,CACR,MAAMlF,EAAOla,KAAK+Y,MAAMoG,iBAAiBC,GACrClF,GACIA,EAAKF,QAAU3a,EAAMwG,iBAAiBygC,EAAUpsB,EAAKF,QAAU,GAC/DssB,EAAS7hC,KAAKyV,EAAKF,OAG9B,CACJ,CAID,cAAA0sB,GACI,IAAI1sB,EAASha,KAAK+Y,MAAM8E,iBAAmB7d,KAAK+Y,MAAM2E,WACtD,MAAMipB,EAAO3mC,KAAK4mC,yBAAyB5sB,GAE3C,OADA2sB,EAAKtL,aACEsL,CACV,CACD,wBAAAC,CAAyB5sB,GACrB,IAAI2sB,EAAO,IAAI5L,KAAK/gB,GACpB,IAAK,IAAI6sB,KAAe7sB,EAAOnB,YAC3B8tB,EAAK1L,SAASj7B,KAAK4mC,yBAAyBC,IAEhD,OAAOF,CACV,EAGL,MAAMG,oBACF,WAAAjnC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EACf/tB,QAAQC,KAAK,mDAChB,CACD,IAAAw4B,CAAKt5B,GACD,IAAIu5B,EAAY,KACZv5B,GAAWA,EAAQu5B,YACnBA,EAAYv5B,EAAQu5B,WAExBhnC,KAAKinC,aAAeD,EAAY,aAChChnC,KAAKknC,eAAiBF,CACzB,CACD,YAAAG,CAAa15B,GACT,OAAO,IAAImB,SAAQ,CAACC,EAASC,KACzB,IACI,MAAMs4B,EAAcC,aAAaC,QAAQtnC,KAAKinC,cAC1CG,GACAv4B,EAAQH,KAAKc,MAAM43B,IAEvBv4B,EAAQ,GACX,CACD,MAAO04B,GACHz4B,EAAOy4B,EACV,IAER,CACD,QAAAC,CAAS/5B,GACL,OAAO,IAAImB,SAAQ,CAACC,EAASC,KACzB,MAAMsmB,EAAQ,IAAIvC,MAAM7yB,KAAKq8B,QAAQtH,WAAY,KAAM,CAAEsH,QAASr8B,KAAKq8B,UACvEjH,EAAMyJ,QACNzJ,EAAMsH,iBACFjvB,IACIA,EAAQ2nB,OACRA,EAAMtc,aAAarL,EAAQ2nB,MAAMM,cAEjCjoB,EAAQg6B,SACRrS,EAAMwM,MAAMn0B,EAAQg6B,SAEpBh6B,EAAQlN,MACR60B,EAAM4J,QAAQvxB,EAAQlN,MAEtBkN,EAAQkL,aACRyc,EAAM0M,eAAer0B,EAAQkL,cAGrC3Y,KAAK0nC,WAAWtS,GAChBvmB,EAAQumB,EAAMM,aAAa,GAElC,CACD,SAAAiS,CAAUl6B,GACN,OAAO,IAAImB,SAAQ,CAACC,EAASC,KACzB,IACI,MAAM84B,EAAYP,aAAaC,QAAQtnC,KAAKknC,eAAiB,IAAMz5B,EAAQg6B,SAI3E,MAHIG,GACA/4B,EAAQH,KAAKc,MAAMo4B,IAEjB,IAAI56B,MAAM,uBAAyBS,EAAQg6B,QACpD,CACD,MAAOF,GACHz4B,EAAOy4B,EACV,IAER,CACD,SAAAM,CAAUp6B,GACN,OAAO,IAAImB,SAAQ,CAACC,EAASC,KACzB,IACoBrB,EAAQ0zB,SAAWnhC,KAAKq8B,QAAQtH,WAAWjW,QAA3D,MACMsW,EAAQ3nB,EAAQ2nB,OAASp1B,KAAKq8B,QAAQrH,WAC5Ch1B,KAAK0nC,WAAWtS,GAChBvmB,EAAQ,KACX,CACD,MAAO04B,GACHz4B,EAAOy4B,EACV,IAER,CACD,UAAAG,CAAWtS,GACP,IAAI0S,EAAY,GAChB,MAAMV,EAAcC,aAAaC,QAAQtnC,KAAKinC,cAC1CG,IACAU,EAAYp5B,KAAKc,MAAM43B,IAE3B,IAAI/kC,EAAOhD,EAAMkG,aAAauiC,EAAW1S,EAAMtW,SAC1Czc,IACDA,EAAO,CAAEoD,GAAI2vB,EAAMtW,QAASve,KAAM60B,EAAMrW,UAAWxB,KAAM6X,EAAMyM,kBAC/DiG,EAAUrjC,KAAKpC,IAEnBA,EAAK9B,KAAO60B,EAAMrW,UAClB1c,EAAKkb,KAAO6X,EAAMyM,iBAClBwF,aAAaU,QAAQ/nC,KAAKinC,aAAcv4B,KAAKC,UAAUm5B,IACvDT,aAAaU,QAAQ/nC,KAAKknC,eAAiB,IAAM9R,EAAMtW,QAASsW,EAAM8L,SACzE,CACD,WAAA8G,CAAYv6B,GACR,OAAO,IAAImB,SAAQ,CAACC,EAASC,KACzB,IACoBrB,EAAQ0zB,SAAWnhC,KAAKq8B,QAAQtH,WAAWjW,QAA3D,MACM2oB,EAAUh6B,EAAQg6B,SAAWznC,KAAKq8B,QAAQrH,WAAWlW,QAC3D,IAAIgpB,EAAY,GAChB,MAAMV,EAAcC,aAAaC,QAAQtnC,KAAKinC,cAC1CG,IACAU,EAAYp5B,KAAKc,MAAM43B,IAE3BU,EAAYA,EAAU1lC,QAAOC,GAAQA,EAAKoD,IAAMgiC,IAChDJ,aAAaU,QAAQ/nC,KAAKinC,aAAcv4B,KAAKC,UAAUm5B,IACvDT,aAAaY,WAAWjoC,KAAKknC,eAAiB,IAAMO,GACpD54B,GACH,CACD,MAAO04B,GACHz4B,EAAOy4B,EACV,IAER,EAGL,MAAMW,cACF,WAAAroC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EACfr8B,KAAKmoC,aAAe,IACvB,CACD,IAAApB,CAAKt5B,GACJ,CACD,UAAA26B,GACI,OAAOpoC,KAAKq8B,OACf,CACD,yBAAAgM,GACIroC,KAAKmoC,aAAe,IAAIv5B,SAAQ,CAACC,EAASC,KACtC9O,KAAKsoC,wBAA0Bz5B,EAC/B7O,KAAKuoC,uBAAyBz5B,CAAM,GAE3C,CAID,eAAA05B,GACI,OAAOxoC,KAAKmoC,cACLv5B,QAAQE,OAAO,IAAI9B,MAAM,gCACnC,CACD,iBAAAy7B,CAAkBh7B,GAGd,OAFAzN,KAAKqoC,4BACLroC,KAAK0oC,qBAAqBj7B,GACnBzN,KAAKmoC,YACf,EAGL,MAAMQ,4BAA4BT,cAC9B,WAAAroC,CAAYw8B,GACRlvB,MAAMkvB,EACT,CACD,IAAA0K,GACC,CACD,oBAAA2B,CAAqBj7B,GACjB,MAAM4uB,EAAUr8B,KAAKooC,aACfQ,EAAOvM,EAAQwM,cAAcC,gBAC7B5oC,EAAMm8B,EAAQ0M,gBAAgB,WAAY,CAAE5H,QAAS1zB,EAAQ0zB,UACnEyH,EAAK5kC,IAAI9D,GACJuM,MAAMu8B,IACFA,EAAajwB,OACd/Y,KAAKuoC,uBAAuB,IAAIv7B,MAAM,iDAE1ChN,KAAKsoC,wBAAwBU,EAAajwB,MAAM,IAE/CnM,OAAMqC,IACPjP,KAAKuoC,uBAAuBt5B,EAAM,GAEzC,EAGL,MAAMg6B,oBACF,WAAAppC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,SAAA6M,CAAUC,GACN,MAAM/T,EAAQ+T,EAAa/T,OAASp1B,KAAKq8B,QAAQrH,WAC3CyS,EAAUrS,EAAMtW,QACtB,IAAIsqB,EAAc,CACd37B,QAAW07B,EAAa17B,cAEU,IAA1B07B,EAAoB,QAC5BC,EAAY3B,QAAU0B,EAAa1B,QAGnC2B,EAAYhU,MAAQA,EAAMM,aAE1ByT,EAAaE,QACbD,EAAYC,MAAQF,EAAaE,OAEjCF,EAAaG,QACbF,EAAYE,MAAQH,EAAaG,OAEjCH,EAAa9oC,OACb+oC,EAAY/oC,KAAO8oC,EAAa9oC,WAEH,IAArB8oC,EAAgB,MACxBC,EAAYG,IAAMJ,EAAaI,KAEnC,MAAMrpC,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,YAAa,CAAE5H,QAAS/L,EAAML,WAAWjW,QAAS2oB,QAASA,IAEpG,OADaznC,KAAKq8B,QAAQwM,cAAcC,gBAC5Bl7B,KAAK1N,EAAKkpC,GACjB38B,MAAKpM,GAAQA,GACrB,EAGL,MAAMmpC,0BACF,WAAA3pC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,SAAAoN,CAAUh8B,GAEN,MAAM2nB,GADN3nB,EAAUA,GAAW,IACC2nB,OAASp1B,KAAKq8B,QAAQrH,WACtCrF,EAAMliB,EAAQA,SAAW,GAC/B,IAAI27B,EAAc,CACdhU,MAASA,EAAMM,aACfjoB,QAAWkiB,GAEXliB,EAAQpN,OACR+oC,EAAY/oC,KAAOoN,EAAQpN,MAE/B,MAAMH,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,YAAa,CAAE5H,QAAS/L,EAAML,WAAWjW,QAAS2oB,QAASrS,EAAMtW,UAE1G,OADa9e,KAAKq8B,QAAQwM,cAAcC,gBAC5Bl7B,KAAK1N,EAAKkpC,GACjB38B,MAAKu8B,GAAgBA,GAC7B,EAGL,MAAMU,0BACF,WAAA7pC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,aAAAsN,CAAcl8B,GACV,MAAM0zB,EAAU1zB,EAAQ0zB,SAAWnhC,KAAKq8B,QAAQtH,WAAWjW,QAErDG,EADc5f,EAAMqF,OAAO,CAAEy8B,QAASA,GAAW1zB,EAAQqa,QAClC7I,SACvB2pB,EAAO5oC,KAAKq8B,QAAQwM,cAAcC,gBAClC5oC,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,eAAgB,CAAE5H,QAASA,EAASyI,OAAQ3qB,IACrF,IAAI7e,EAAc,CAAA,EAIlB,OAHIqN,GAAWA,EAAQqa,QAAUra,EAAQqa,OAAO1nB,cAC5CA,EAAcqN,EAAQqa,OAAO1nB,aAE1BwoC,EAAK5kC,IAAI9D,EAAK,CAAEE,YAAaA,IAC/BqM,MAAMu8B,IACP,GAAIA,GAAgBA,EAAa7mC,OAC7B,OAAO6mC,EAAa7mC,OAGpB,MAAM,IAAI6K,MAAM,8CACnB,GAER,EAGL,MAAM68B,kBACF,WAAAhqC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,YAAAyN,CAAar8B,GACT,MAAM2nB,EAAQ3nB,EAAQ2nB,OAASp1B,KAAKq8B,QAAQrH,WACtC90B,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,eAAgB,CAAE5H,QAAS/L,EAAML,WAAWjW,QACjFnU,OAAQ8C,EAAQ9C,QAAU,QAExBo/B,EADO/pC,KAAKq8B,QAAQwM,cAAcC,gBACdl7B,KAAK1N,EAAK,CAChCk1B,MAAOA,EAAMM,eAEXrpB,EAAU09B,EAAav9B,aAC7B,OAAOu9B,EAAat9B,MAAMu8B,IACtB,MAAMgB,EAAO,IAAI/5B,KAAK,CAAC+4B,IACjBiB,EAAoB59B,EAAQ3L,oBAAoB2O,kBAAkB,uBACxE,IAAI66B,EAAWD,EACTA,EAAkBzzB,MAAM,mBAAmB,GAC3C,aAKN,GAJI/I,EAAQy8B,WACRA,EAAWz8B,EAAQy8B,SACbA,EAASx0B,UAAUw0B,EAASC,YAAY,OAE9C1iC,OAAO0L,UAA4B,iBAEnC1L,OAAO0L,UAA4B,iBAAE62B,EAAME,OAE1C,CACD,MAAMz2B,EAAInM,SAAS8iC,cAAc,KACjC9iC,SAASD,KAAKgjC,YAAY52B,GAC1BA,EAAEmE,MAAM0yB,QAAU,OAClB72B,EAAE82B,KAAO9iC,OAAO+iC,IAAIC,gBAAgBT,GACpCv2B,EAAEi3B,SAAWR,EACbz2B,EAAEk3B,QACFljC,OAAO+iC,IAAII,gBAAgBn3B,EAAE82B,MAC7BjjC,SAASD,KAAKwjC,YAAYp3B,EAC7B,IAER,CACD,eAAAq3B,CAAgBr9B,GAEZ,MAAM2nB,GADN3nB,EAAUA,GAAW,IACC2nB,OAASp1B,KAAKq8B,QAAQrH,WACtC90B,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,kBAAmB,CAAE5H,QAAS/L,EAAML,WAAWjW,UAExF,OADa9e,KAAKq8B,QAAQwM,cAAcC,gBAC5Bl7B,KAAK1N,EAAKuN,EAAQpN,KAAM,CAChC4N,SAAU,cAETxB,MAAKu8B,GACCA,EAAa5T,OAE3B,EAGL,MAAM2V,sBACF,WAAAlrC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EACfr8B,KAAKgrC,OAAS,EACjB,CACD,gBAAAC,CAAiBC,EAAOC,GACpB,OAAO,IAAIv8B,SAAQ,CAACC,EAASC,KACzB,MAAMs8B,YAAe/qC,IAEjB,MAAMgrC,EAASrrC,KAAKsrC,cAAcH,GAC5B3qC,EAAQH,EAAK2D,IAAIqnC,GACnB7qC,EACAqO,EAAQrO,GAGRsO,EAAO,uBAAuBu8B,IACjC,EAECj9B,EAAOpO,KAAKurC,aAAaL,GAAO,GAClC98B,GAAQA,EAAK/N,KACb+qC,YAAYh9B,EAAK/N,MAGjB+N,EAAKo9B,kBAAkB/mC,KAAK2mC,YAC/B,GAER,CACD,gBAAAK,CAAiBP,EAAO7qC,GACpB,MAAM+N,EAAOpO,KAAKurC,aAAaL,GAAO,GAEtC,GADA98B,EAAK/N,KAAOA,EACR+N,EAAKo9B,kBACL,IAAK,MAAMzhB,KAAY3b,EAAKo9B,kBACxBzhB,EAAS3b,EAAK/N,MAGtB+N,EAAKo9B,kBAAoB,EAC5B,CACD,mBAAAE,CAAoBR,EAAOC,EAAUhpC,GACjC,MAAMiM,EAAOpO,KAAKurC,aAAaL,GAAO,GAChCtnC,EAAM5D,KAAKsrC,cAAcH,GAC/B/8B,EAAK/N,KAAK+D,IAAIR,EAAKzB,EACtB,CACD,aAAAmpC,CAAcH,GACV,OAAOz8B,KAAKC,UAAUw8B,EACzB,CACD,YAAAI,CAAaL,EAAOS,GAChB,IAAIv9B,EAAOpO,KAAKgrC,OAAOE,GAQvB,OAPK98B,GAAQu9B,IACTv9B,EAAO,CACHo9B,kBAAmB,GACnBnrC,KAAM,IAAIud,KAEd5d,KAAKgrC,OAAOE,GAAS98B,GAElBA,CACV,CACD,KAAAqS,GACIzgB,KAAKgrC,OAAS,EACjB,EAEL,MAAMY,4BACF,WAAA/rC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EACfr8B,KAAK6rC,MAAQ,IAChB,CACD,gBAAAC,GACI,OAAO9rC,KAAK6rC,KACf,CACD,SAAAE,CAAUt+B,GACNa,QAAQC,KAAK,+FACbd,EAAUA,GAAW,IACbu+B,SAAWv+B,EAAQu+B,UAAY,EACjCv+B,EAAQu+B,SAAW,EACzBhsC,KAAK6rC,MAAQ,IAAId,sBAAsB/qC,KAAKq8B,SAC5C,MAAMjH,EAAQp1B,KAAKq8B,QAAQuE,cAC3BxL,EAAMtc,aAAa9Y,KAAKq8B,QAAQrH,WAAWU,cAC3C,MAAM/jB,EAAW3R,KAAKq8B,QAAQrH,WAAWuI,yBACnC0O,EAAYt6B,EAASgS,gBAAgB7hB,KAAI2R,GAAKA,EAAE0P,QAChDT,EAAU0S,EAAM+I,aACjB/7B,QAAOwjB,GAAOqmB,EAAUnmC,QAAQ8f,EAAIngB,IAAM,IAC/C,IAAK,IAAIb,EAAI,EAAGA,EAAI8d,EAAQ9gB,OAAQgD,IAChC8d,EAAQ9d,GAAGkyB,SAAU,EAErBnlB,EAASmS,mBACT9jB,KAAK6rC,MAAMJ,iBAAiB,EAAG,IAAI7tB,KAC/BnQ,EAAQy+B,gBACRz+B,EAAQy+B,eAAe,GAAI,IAEnC,MAAMpqB,EAASnQ,EAAS4R,YACxB,IAAK,IAAI2nB,EAAQ,EAAGA,GAASppB,EAAOlgB,QAAUspC,GAASz9B,EAAQu+B,SAAUd,IACrElrC,KAAK6rC,MAAMJ,iBAAiBP,EAAO,IAAIttB,KACnCnQ,EAAQy+B,gBACRz+B,EAAQy+B,eAAe,GAAIhB,GAEnC,OAAOt8B,QAAQC,SAClB,CACD,iBAAAs9B,GACI,OAAO,CACV,CACD,KAAAtN,GACC,EAGL,MAAMuN,kBACF,kBAAOC,GAIH,OAHKD,kBAAkBE,YACnBF,kBAAkBE,UAAY,IAAIF,mBAE/BA,kBAAkBE,SAC5B,CACD,WAAAzsC,GACIG,KAAKusC,YAAc,KACnBvsC,KAAKwsC,aAAe,KACpBxsC,KAAKysC,kBAAoB,KACzBzsC,KAAK0sC,YAAc,KACnB1sC,KAAK2sC,kBAAoB,KACzB3sC,KAAK4sC,gBAAkB,KACvB5sC,KAAK6sC,eAAiB,KACtB7sC,KAAK8sC,SAAW,GAChB9sC,KAAK+sC,WAAa,IAAI3/B,WACtBpN,KAAK+sC,WAAWx/B,eAAe,kBAAoB,QACnDvN,KAAKgtC,cAAiBC,GAAM,IAAIjd,UAChChwB,KAAKktC,qBAAuB,KAC5BltC,KAAKmtC,cAAiB9Q,GAAY,IAAIxJ,MAAMwJ,EAAQtH,WAAY,KAAM,CAAEsH,QAASA,IACjFr8B,KAAKotC,oBAAuB/Q,GAAY,IAAIsM,oBAAoBtM,GAChEr8B,KAAKqtC,qBAAwBhR,GAAY,IAAIyK,oBAAoBzK,GACjEr8B,KAAKstC,0BAA6BjR,GAAY,IAAImN,0BAA0BnN,GAC5Er8B,KAAKutC,YAAelR,GAAY,IAAIqN,0BAA0BrN,GAC9Dr8B,KAAKwtC,oBAAuBnR,GAAY,IAAI4M,oBAAoB5M,GAChEr8B,KAAKytC,wBAA2BpR,GAAY,IAAIwN,kBAAkBxN,GAClEr8B,KAAK0tC,sBAAyBrR,GAAY,IAAIuP,4BAA4BvP,EAC7E,CACD,KAAAwC,GACI7+B,KAAK2tC,aAAe,KACpB3tC,KAAKusC,YAAc,KACnBvsC,KAAKwsC,aAAe,KACpBxsC,KAAKysC,kBAAoB,IAC5B,CACD,aAAA3D,GACI,OAAO9oC,KAAK+sC,UACf,CACD,eAAAa,CAAgBvR,GACZ,IAAKr8B,KAAKgtC,cACN,KAAM,gCAEV,OAAOhtC,KAAKgtC,cAAc3Q,EAC7B,CACD,WAAAuE,CAAYvE,GACR,IAAKr8B,KAAKmtC,cACN,KAAM,gCAEV,OAAOntC,KAAKmtC,cAAc9Q,EAC7B,CACD,cAAAwR,CAAexR,GACX,IAAKr8B,KAAKusC,YAAa,CACnB,IAAKvsC,KAAKotC,oBACN,KAAM,qCAEVptC,KAAKusC,YAAcvsC,KAAKotC,oBAAoB/Q,EAC/C,CACD,OAAOr8B,KAAKusC,WACf,CACD,eAAAuB,CAAgBzR,GACZ,IAAKr8B,KAAK2tC,aAAc,CACpB,IAAK3tC,KAAKktC,qBACN,KAAM,sCAEVltC,KAAK2tC,aAAe3tC,KAAKktC,qBAAqB7Q,EACjD,CACD,OAAOr8B,KAAK2tC,YACf,CACD,eAAAI,CAAgB1R,GACZ,IAAKr8B,KAAKwsC,aAAc,CACpB,IAAKxsC,KAAKqtC,qBACN,KAAM,sCAEVrtC,KAAKwsC,aAAexsC,KAAKqtC,qBAAqBhR,EACjD,CACD,OAAOr8B,KAAKwsC,YACf,CACD,oBAAAwB,CAAqB3R,GACjB,IAAKr8B,KAAKysC,kBAAmB,CACzB,IAAKzsC,KAAKstC,0BACN,KAAM,2CAEVttC,KAAKysC,kBAAoBzsC,KAAKstC,0BAA0BjR,EAC3D,CACD,OAAOr8B,KAAKysC,iBACf,CACD,cAAAwB,CAAe5R,GACX,IAAKr8B,KAAK0sC,YAAa,CACnB,IAAK1sC,KAAKwtC,oBACN,KAAM,qCAEVxtC,KAAK0sC,YAAc1sC,KAAKwtC,oBAAoBnR,EAC/C,CACD,OAAOr8B,KAAK0sC,WACf,CACD,oBAAAwB,CAAqB7R,GACjB,IAAKr8B,KAAK2sC,kBAAmB,CACzB,IAAK3sC,KAAKutC,YACN,KAAM,gDAEVvtC,KAAK2sC,kBAAoB3sC,KAAKutC,YAAYlR,EAC7C,CACD,OAAOr8B,KAAK2sC,iBACf,CACD,kBAAAwB,CAAmB9R,GACf,IAAKr8B,KAAK4sC,gBAAiB,CACvB,IAAK5sC,KAAKytC,wBACN,KAAM,8CAEVztC,KAAK4sC,gBAAkB5sC,KAAKytC,wBAAwBpR,EACvD,CACD,OAAOr8B,KAAK4sC,eACf,CACD,uBAAAwB,CAAwB/R,GACpB,IAAKr8B,KAAK6sC,eAAgB,CACtB,IAAK7sC,KAAK0tC,sBACN,KAAM,mDAEV1tC,KAAK6sC,eAAiB7sC,KAAK0tC,sBAAsBrR,EACpD,CACD,OAAOr8B,KAAK6sC,cACf,CACD,yBAAAwB,CAA0BC,GACtBtuC,KAAKgtC,cAAgBsB,CACxB,CACD,qBAAAC,CAAsBD,GAClBtuC,KAAKmtC,cAAgBmB,CACxB,CACD,2BAAAE,CAA4BF,GACxBtuC,KAAKotC,oBAAsBkB,CAC9B,CACD,4BAAAG,CAA6BH,GACzBtuC,KAAKktC,qBAAuBoB,CAC/B,CACD,4BAAAI,CAA6BJ,GACzBtuC,KAAKqtC,qBAAuBiB,CAC/B,CACD,2BAAAK,CAA4BL,GACxBtuC,KAAKwtC,oBAAsBc,CAC9B,CACD,gCAAAM,CAAiCN,GAC7BtuC,KAAKstC,0BAA4BgB,CACpC,CACD,yBAAAO,CAA0BP,GACtBtuC,KAAKutC,YAAce,CACtB,CACD,+BAAAQ,CAAgCR,GAC5BtuC,KAAKytC,wBAA0Ba,CAClC,CACD,4BAAAS,CAA6BT,GACzBtuC,KAAK0tC,sBAAwBY,CAChC,CACD,eAAAU,CAAgBC,EAAWC,GACvBlvC,KAAK8sC,SAASmC,GAAaC,CAC9B,CACD,UAAAC,CAAWF,GACP,MAAMC,EAAkBlvC,KAAK8sC,SAASmC,GACtC,GAAIC,EACA,OAAOA,GAEd,GAKL,SAAW1a,GAEPA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAmB,MAAI,GAAK,QAExCA,EAAYA,EAAmB,MAAI,GAAK,QAExCA,EAAYA,EAAoB,OAAI,GAAK,SAEzCA,EAAYA,EAAuB,UAAI,GAAK,YAE5CA,EAAYA,EAAyB,YAAI,IAAM,cAE/CA,EAAYA,EAAiB,IAAI,OAAS,KAC7C,CAfD,CAeGA,IAAgBA,EAAc,CAAE,IAGnC,IA2GI4a,EAMAC,EAjHAC,EAAa,CACbpnB,OAAQ,EACRC,MAAO,EACPlB,WAAW,GAGf,MAAMsoB,iBACF,WAAA1vC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,SAAAmT,CAAU7kC,EAAQoE,GACd/O,KAAK2K,OAASA,EACd3K,KAAK+O,aAAeA,CACvB,CACD,OAAO0gC,GACHA,EAAgBA,GAAiB,GACjC,MAAM7G,EAAO5oC,KAAKq8B,QAAQwM,cAAcC,gBAClCn+B,EAAS3K,KAAK2K,QAAU,MACxByqB,EAAQqa,EAAcra,OAASp1B,KAAKq8B,QAAQrH,WAC5CmM,EAAU/L,EAAML,WAAWjW,QACjC,IAAIsqB,EAAc,CACdz3B,SAAY89B,EAAc99B,SAC1B23B,MAASgG,QAE0B,IAA3BG,EAAqB,QAC7BrG,EAAY3B,QAAUgI,EAAchI,QAGpC2B,EAAYhU,MAAQA,EAAMM,aAE1B+Z,EAAcpvC,OACd+oC,EAAY/oC,KAAOovC,EAAcpvC,MAEjCovC,EAAchiC,UACd27B,EAAY37B,QAAUgiC,EAAchiC,SAExC,MAAMvN,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,eAAgB,CAAE5H,QAASA,EAASx2B,OAAQA,IAC/Eo/B,EAAenB,EAAKh7B,KAAK1N,EAAKkpC,EAAa,CAAEr6B,aAAc/O,KAAK+O,eAChE1C,EAAU09B,EAAav9B,aAC7B,OAAOu9B,EAAat9B,MAAMu8B,IACtB,MAAMgB,EAAO,IAAI/5B,KAAK,CAAC+4B,IACjBiB,EAAoB59B,EAAQ3L,oBAAoB2O,kBAAkB,uBAClEqgC,EAAWzF,EACXA,EAAkBzzB,MAAM,mBAAmB,GAC3C,eAAiB7L,EACvB,GAAIlD,OAAO0L,UAA4B,iBAEnC1L,OAAO0L,UAA4B,iBAAE62B,EAAM0F,OAE1C,CACD,IAAIj8B,EAAInM,SAAS8iC,cAAc,KAC/B9iC,SAASD,KAAKgjC,YAAY52B,GAC1BA,EAAEmE,MAAM0yB,QAAU,OAClB72B,EAAE82B,KAAO9iC,OAAO+iC,IAAIC,gBAAgBT,GACpCv2B,EAAEi3B,SAAWgF,EACbj8B,EAAEk3B,QACFljC,OAAO+iC,IAAII,gBAAgBn3B,EAAE82B,MAC7BjjC,SAASD,KAAKwjC,YAAYp3B,EAC7B,IAER,EAGL,MAAMk8B,oBACF,WAAA9vC,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,SAAAhU,CAAUihB,GAoCN,OAjCAtpC,KAAK4vC,gBAAkB,IAAIhhC,SAAQ,CAACC,EAASC,KACzC,MAAMq6B,EAAe,CACjBG,MAAOA,EACPuG,QAAUrrC,IACN,MAAMsrC,EAAY,IAAInpB,cAAc,CAChCK,OAAQhnB,KAAKq8B,QAAQ0T,WACrB5oB,UAAWnnB,KAAKq8B,QAAQ2T,YAAY7oB,YAElC8oB,EAAYzrC,EAAOyrC,UACzB,IAAK,MAAMrqB,KAAOqqB,EAAUxtB,KACxBqtB,EAAUptB,QAAQgD,IAAIE,GAE1BkqB,EAAUhnB,SAAStkB,EAAO0rC,KAAKC,cAC/B,IAAK,MAAMzrB,KAAOurB,EAAUxoB,KACxBqoB,EAAUloB,OAAOlD,GAErB,IAAIyrB,EAAe,EACf3rC,EAAO0rC,MAAQ1rC,EAAO0rC,KAAKC,eAC3BA,EAAe3rC,EAAO0rC,KAAKC,cAE/BthC,EAAQ,CACJ2Z,MAAOsnB,EACP/oB,MAAOopB,EACPC,SAAU9G,EAAMriB,WAAaqiB,EAAMphB,OAASohB,EAAMnhB,MAAQgoB,GAC5D,EAENlhC,MAAQA,GAAUH,EAAOG,IAEzBjP,KAAKq8B,QAAQgU,YACblH,EAAaE,MAAQ,uBAAuBC,EAAMphB,UAEtDloB,KAAKq8B,QAAQiU,eAAenH,EAAa,IAEtCnpC,KAAK4vC,eACf,GAIL,SAAWR,GACPA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAAwB,QAAI,GAAK,SACnD,CAHD,CAGGA,IAAmBA,EAAiB,CAAE,IAGzC,SAAWC,GACPA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAwB,cAAI,gBAC5BA,EAAmB,SAAI,WACvBA,EAAoB,UAAI,YACxBA,EAAsB,YAAI,cAC1BA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAuB,aAAI,eAC3BA,EAAuB,aAAI,eAC3BA,EAAuB,aAAI,eAC3BA,EAA0B,gBAAI,iBACjC,CAbD,CAaGA,IAAaA,EAAW,CAAE,IAW7B,MAAMkB,UACF,WAAA1wC,GACIG,KAAKyN,QAAU,CACX2uB,+BAA+B,EAC/BoU,gBAAiB,kBACjBC,kBAAmB,MAEvBzwC,KAAK0wC,qBAAsB,EAC3B1wC,KAAK2wC,kBAAoB,GACzB3wC,KAAK4wC,kBAAmB,EACxB5wC,KAAK6wC,kBAAmB,EACxB7wC,KAAK8wC,uBAAwB,EAC7B9wC,KAAKqwC,WAAY,EACjBrwC,KAAK+wC,aAAe,CAChB95B,KAAM,UACNoG,QAAS,sBAGbrd,KAAKgxC,kBAAoB,WACzBhxC,KAAKixC,eAAgB,EACrBjxC,KAAKkxC,+BAAiC,CAClCC,MAAS,CAACrpB,EAAQspB,KAKdA,EAJapxC,KAAK+0B,WAAWf,mBACxBlyB,KAAIoxB,IACE,CAAEztB,GAAI,MAAQytB,EAAU,KAAM3V,KAAMje,EAAKuU,QAAQqf,SAGrD,GAEXme,MAAS,CAACvpB,EAAQspB,KAKdA,EAJapxC,KAAK+0B,WAAWd,mBACxBnyB,KAAIoxB,IACE,CAAEztB,GAAI,MAAQytB,EAAU,KAAM3V,KAAMje,EAAKuU,QAAQqf,SAGrD,IAGflzB,KAAKsxC,oBAAsB,CAAC7jC,EAAS2jC,KACjC,GAAe,MAAX3jC,IAAoBA,EAAQ8jC,SAC5B,OACJ,MAAMnc,EAAQp1B,KAAKg1B,WACblN,EAASzoB,EAAMqF,OAAO,CAAE6sC,SAAU9jC,EAAQ8jC,UAAY9jC,EAAQ+jC,cAC9DC,EAAY,CAAA,EACZC,EAAc,aACpB,IAAK,MAAMC,KAAQ7pB,EAAQ,CACvB,IAAKA,EAAO6pB,GACR,SACJ,IAAIn7B,EAAQsR,EAAO6pB,GAAMn7B,MAAMk7B,GAC/B,GAAIl7B,EAAO,CACP,IAAIo7B,EAAaxc,EAAMiQ,mBAAmB7uB,EAAM,IAC3Co7B,IACDA,EAAa,IAEjBH,EAAUE,GAAQ7pB,EAAO6pB,GAAM9mC,QAAQ6mC,EAAaE,EACvD,CACJ,CACD,MAAMC,EAAgB,CAClBN,SAAUE,EAAUF,SACpBtyB,SAAUxR,EAAQwR,SAClB7e,YAAaqxC,GAEjB,IAAIK,EAAO9xC,KAAK+xC,iBAAiBtkC,GACjC,GAAIqkC,GAAQA,EAAKlwC,OAAS,EAEtB,YADAwvC,EAASU,GAGb,IAAIE,GAAY,EAChB,MAAMC,EAAoBjyC,KAAKkxC,+BAA+BzjC,EAAQwR,UAClEgzB,IACAD,EAAYC,EAAkBxkC,EAAS2jC,KAEtCY,GAAahyC,KAAK68B,2BACnBmV,EAAYhyC,KAAK68B,yBAAyBpvB,EAAS2jC,IAElDY,GACDhyC,KAAK2pC,cAAc,CACf7hB,OAAQ+pB,EACRhC,QAAUxvC,IACFA,GACAL,KAAKkyC,eAAezkC,EAASpN,GAEjC+wC,EAAS/wC,EAAK,EAElB4O,MAAQ/B,IACJkkC,EAAS,KAAK,GAGzB,EAELpxC,KAAKmyC,aAAe,gBACpBnyC,KAAKoyC,WAAahG,kBAAkBC,cACpCrsC,KAAKqyC,QAAU,IAAIpuC,MACnBjE,KAAKs8B,aAAe,IAAI5S,aAAa1pB,MACrCA,KAAKsyC,UAAY,IAAI10B,IACrB5d,KAAKuyC,UAAY,IAAI30B,IACrB5d,KAAK+vC,WAAa,IAAIJ,oBAAoB3vC,MAC1CA,KAAKgwC,YAAc,IAAIrpB,cAAc,CACjCK,OAAQhnB,KAAK+vC,WACbxoB,SAAUvnB,KAAKwyC,oBAAoBC,KAAKzyC,QAE5CA,KAAKgwC,YAAYvqC,GAAK,cACtBzF,KAAK0yC,eAAiB1yC,KAAK2yC,iBAAiB,SAAS,CAACtW,EAASpvB,KAC3DA,EAAOzI,OAAS4qC,EAAepiC,MAC/B,MAAM4lC,EAAW3lC,EAAO+qB,OAAS/qB,EAAO+qB,OAAS,SAAW,QAC5D,IAAI6a,EAAU5lC,EAAOsQ,KAAOtQ,EAAOsQ,KAAO,GACtCtQ,EAAO6lC,aAAe7lC,EAAO6lC,YAAY5lC,UAAY2lC,IACrDA,GAAW,KAAO5lC,EAAO6lC,aAE7BxkC,QAAQW,MAAM2jC,EAAW,KAAOC,EAAQ,GAE/C,CACD,WAAAhK,GACI,OAAO7oC,KAAKoyC,UACf,CAeD,aAAAW,CAAcC,GACV1kC,QAAQC,KAAK,4FAChB,CACD,gBAAA0kC,CAAiBtoC,EAAQ2jC,GACrBtuC,KAAKsyC,UAAUluC,IAAIuG,EAAQ2jC,EAC9B,CACD,sBAAA4E,CAAuBvoC,EAAQoE,GAC3B/O,KAAKizC,iBAAiBtoC,GAAS0xB,IAC3B,MAAM8W,EAAW,IAAI5D,iBAAiBlT,GAEtC,OADA8W,EAAS3D,UAAU7kC,EAAQoE,GACpBokC,CAAQ,GAEtB,CACD,WAAAC,CAAYzoC,GACR,MAAM2jC,EAAWtuC,KAAKsyC,UAAUtuC,IAAI2G,GACpC,OAAI2jC,EACOA,EAAStuC,MAEb,IACV,CACD,gBAAAqzC,GACI,OAAOpvC,MAAM2e,KAAK5iB,KAAKsyC,UAAU3wC,OACpC,CACD,mBAAA2xC,GACItzC,KAAKkzC,uBAAuB,MAAO,eACnClzC,KAAKkzC,uBAAuB,aAAc,cAC7C,CACD,eAAAnK,CAAgBwK,EAAa9lC,GACzBA,EAAUA,GAAW,GACrB,IAAIjJ,EAASxE,KAAKuyC,UAAUvuC,IAAIuvC,GAChC,IAAK/uC,EACD,MAAM+uC,EAAc,2BAExB,IAAIh+B,EAAU/Q,EAAOgS,MAAMxW,KAAKgxC,mBAChC,GAAIz7B,EACA,IAAK,IAAIiB,KAASjB,EAAS,CACvB,IAAIi+B,EAAMh9B,EAAMd,UAAU,EAAGc,EAAM5U,OAAS,GACxC6xC,EAAShmC,EAAQ+lC,GACrB,IAAKC,EACD,GAAW,WAAPD,EACAC,EAASzzC,KAAK+0B,WAAWjW,YAExB,IAAW,WAAP00B,EAIL,KAAM,cAAcA,oBAHpBC,EAASzzC,KAAKg1B,WAAWlW,OAI5B,CAELta,EAASA,EAAOqG,QAAQ2L,EAAOi9B,EAClC,CAEL,OAAOjvC,CACV,CACD,WAAAkvC,CAAY9vC,EAAKpD,GACbR,KAAKuyC,UAAUnuC,IAAIR,EAAKpD,EAC3B,CACD,qBAAAmzC,CAAsB/vC,EAAKpD,GAClBR,KAAKuyC,UAAUxuC,IAAIH,IACpB5D,KAAKuyC,UAAUnuC,IAAIR,EAAKpD,EAC/B,CACD,mBAAAozC,CAAoBC,GAChB7zC,KAAK2zC,sBAAsB,WAAYj0C,EAAQysB,YAAY0nB,EAAc,qBACzE7zC,KAAK2zC,sBAAsB,WAAYj0C,EAAQysB,YAAY0nB,EAAc,uCACzE7zC,KAAK2zC,sBAAsB,YAAaj0C,EAAQysB,YAAY0nB,EAAc,uCAC1E7zC,KAAK2zC,sBAAsB,YAAaj0C,EAAQysB,YAAY0nB,EAAc,4CAC1E7zC,KAAK2zC,sBAAsB,WAAYj0C,EAAQysB,YAAY0nB,EAAc,6BACzE7zC,KAAK2zC,sBAAsB,cAAej0C,EAAQysB,YAAY0nB,EAAc,uCAC5E7zC,KAAK2zC,sBAAsB,eAAgBj0C,EAAQysB,YAAY0nB,EAAc,6BAC7E7zC,KAAK2zC,sBAAsB,YAAaj0C,EAAQysB,YAAY0nB,EAAc,2BAC1E7zC,KAAK2zC,sBAAsB,eAAgBj0C,EAAQysB,YAAY0nB,EAAc,yCAC7E7zC,KAAK2zC,sBAAsB,eAAgBj0C,EAAQysB,YAAY0nB,EAAc,qCAC7E7zC,KAAK2zC,sBAAsB,eAAgBj0C,EAAQysB,YAAY0nB,EAAc,2CAC7E7zC,KAAK2zC,sBAAsB,kBAAmBj0C,EAAQysB,YAAY0nB,EAAc,oCACnF,CACD,SAAAC,GACI9zC,KAAK0wC,qBAAsB,CAC9B,CAKD,IAAA3J,CAAKt5B,GA6BD,GA5BKzN,KAAK0wC,qBACN1wC,KAAK8zC,YACTrmC,EAAUA,GAAW,GACrBzN,KAAK+zC,WAAWtmC,QACmB,IAAvBA,EAAiB,YACzBzN,KAAKqwC,UAAY5iC,EAAQ4iC,gBAEM,IAAvB5iC,EAAiB,YACzBzN,KAAKgwC,YAAY7oB,UAAY1Z,EAAQ0Z,gBAEF,IAA3B1Z,EAAqB,gBAC7BzN,KAAKixC,cAAgBxjC,EAAQwjC,eAE7BxjC,EAAQumC,WACRh0C,KAAKi0C,qBAAqBxmC,EAAQumC,WAElCvmC,EAAQ8F,QACRjU,EAAK4S,iBAAiBzE,EAAQ8F,QAE9B9F,EAAQkJ,gBACRrX,EAAK+S,qBAAqB5E,EAAQkJ,gBAElClJ,EAAQymC,WACRl0C,KAAKmyC,aAAe1kC,EAAQymC,SAC5B5lC,QAAQC,KAAK,0GAGjBvO,KAAK4zC,oBAAoB5zC,KAAKmyC,cAC1B1kC,EAAQy/B,qBAAsB,CACXltC,KAAK6oC,cACb4F,6BAA6BhhC,EAAQy/B,qBACnD,CACDltC,KAAK6wC,kBAAmB,EACpBpjC,EAAQojC,mBACR7wC,KAAK6wC,iBAAmBpjC,EAAQojC,kBAEpC7wC,KAAK4wC,kBAAmB,OACgB,IAA7BnjC,EAAQmjC,mBACf5wC,KAAK4wC,iBAAmBnjC,EAAQmjC,kBAEhCnjC,EAAQ0mC,WACJ1mC,EAAQ0mC,SAASC,QACjBp0C,KAAK2yC,iBAAiB,QAASllC,EAAQ0mC,SAASC,QAEhD3mC,EAAQ0mC,SAASE,gBACjBr0C,KAAK2yC,iBAAiB,YAAallC,EAAQ0mC,SAASE,gBAEpD5mC,EAAQ0mC,SAASG,gBACjBt0C,KAAK2yC,iBAAiB,YAAallC,EAAQ0mC,SAASG,gBAEpD7mC,EAAQ0mC,SAASI,gBACjBv0C,KAAK2yC,iBAAiB,YAAallC,EAAQ0mC,SAASI,gBAEpD9mC,EAAQ0mC,SAASK,gBACjBx0C,KAAK2yC,iBAAiB,YAAallC,EAAQ0mC,SAASK,gBAEpD/mC,EAAQ0mC,SAASM,mBACjBz0C,KAAK2yC,iBAAiB,eAAgBllC,EAAQ0mC,SAASM,mBAEvDhnC,EAAQ0mC,SAASO,gBACjB10C,KAAK2yC,iBAAiB,eAAgBllC,EAAQ0mC,SAASO,gBAEvDjnC,EAAQ0mC,SAASQ,cACjB30C,KAAK2yC,iBAAiB,aAAcllC,EAAQ0mC,SAASQ,cAErDlnC,EAAQ0mC,SAASS,UACjB50C,KAAK60C,oBAAoB,QAAS70C,KAAK0yC,gBACvC1yC,KAAK2yC,iBAAiB,QAASllC,EAAQ0mC,SAASS,UAEhDnnC,EAAQ0mC,SAASW,gBACjB90C,KAAK68B,yBAA2BpvB,EAAQ0mC,SAASW,eAEjDrnC,EAAQ0mC,SAASY,kBACjB/0C,KAAK+0C,gBAAkBtnC,EAAQ0mC,SAASY,iBAExCtnC,EAAQ0mC,SAASa,kBACjBh1C,KAAKg1C,gBAAkBvnC,EAAQ0mC,SAASa,iBAExCvnC,EAAQ0mC,SAASc,kBACjBj1C,KAAKi1C,gBAAkBxnC,EAAQ0mC,SAASc,iBAExCxnC,EAAQ0mC,SAASe,kBACjBl1C,KAAKk1C,gBAAkBznC,EAAQ0mC,SAASe,iBAExCznC,EAAQ0mC,SAASgB,qBACjBn1C,KAAKm1C,mBAAqB1nC,EAAQ0mC,SAASgB,qBAGnDn1C,KAAKo1C,aAAe3nC,EAAQ2nC,aAC5Bp1C,KAAKq1C,eAAiB5nC,EAAQ4nC,gBAAkB,GAChDr1C,KAAKs1C,eAAiB7nC,EAAQ6nC,gBAAkB,YAC5Bt1C,KAAKoyC,WAAWvE,eAAe7tC,MACvC+mC,KAAKt5B,GAMjB,GALqBzN,KAAKoyC,WAAWrE,gBAAgB/tC,MACxC+mC,KAAKt5B,IACkB,IAAhCA,EAAQ8nC,qBACRv1C,KAAKszC,sBAEL7lC,EAAQ+nC,gBAAiB,CACzBx1C,KAAKsyC,UAAU7xB,QACf,IAAK,MAAM9V,KAAU8C,EAAQ+nC,gBACzBx1C,KAAKkzC,uBAAuBvoC,EAAQ,cAE3C,CACD,MAAMyqB,EAAQp1B,KAAKg1B,WACfvnB,EAAQ4nC,gBACRjgB,EAAMwM,MAAMn0B,EAAQ4nC,gBAGxBr1C,KAAKqyC,QAAQ96B,SAASk+B,IAClB,IAAIC,EAAgB,CAAA,EAChBjoC,EAAQ4kC,SAAW5kC,EAAQ4kC,QAAQoD,EAAOE,mBAC1CD,EAAgBjoC,EAAQ4kC,QAAQoD,EAAOE,kBAE3CF,EAAO1O,KAAK/mC,KAAM01C,EAAc,IAEhC11C,KAAK4wC,iBACL5wC,KAAK41C,mBAGL51C,KAAK61C,UAAU,QAEtB,CACD,UAAA9B,CAAWtmC,GACPpO,EAAMwF,WAAW7E,KAAKyN,QAASA,EAClC,CACD,eAAIqoC,GACA,OAAO91C,KAAK+wC,YACf,CAcD,WAAAgF,CAAY7B,GAER,OADAl0C,KAAKmyC,aAAe+B,EACbl0C,IACV,CAOD,UAAAg2C,CAAWF,GAIP,GAHIA,EAAY7+B,OACZjX,KAAK+wC,aAAa95B,KAAO6+B,EAAY7+B,MAErC6+B,EAAYz4B,QACZrd,KAAK+wC,aAAa1zB,QAAUy4B,EAAYz4B,aAGxC,OAAQrd,KAAK+wC,aAAa95B,MACtB,IAAK,UACDjX,KAAK+wC,aAAa1zB,QAAU,qBAC5B,MACJ,IAAK,UACDrd,KAAK+wC,aAAa1zB,QAAU,gBAC5B,MACJ,QACIrd,KAAK+wC,aAAa1zB,QAAU,QAIxC,OAAOrd,IACV,CAMD,SAAAi2C,CAAUR,GACNz1C,KAAKqyC,QAAQ5tC,KAAKgxC,EACrB,CAKD,mBAAAS,CAAoBC,GAChB,OAAOn2C,KAAKqyC,QACPjwC,QAAOqzC,GAAUA,EAAOE,kBAAoBQ,GACpD,CAKD,eAAAC,CAAgBD,GACZ,MAAM9D,EAAUryC,KAAKk2C,oBAAoBC,GACzC,OAAO9D,EAAQzwC,OAAS,EAAIywC,EAAQ,GAAK,IAC5C,CAKD,cAAAgE,CAAev0B,EAAS0S,EAAYjI,KAChCvsB,KAAKqyC,QAAQ96B,SAASk+B,IACdA,EAAOa,eAAex0B,IACtB2zB,EAAOc,SACV,GAER,CAKD,uBAAAC,CAAwBzsB,GACpB/pB,KAAKg1B,WAAWiI,mBAAmBlT,EACtC,CAKD,0BAAA0sB,CAA2B1sB,GACvB/pB,KAAKg1B,WAAWyQ,sBAAsB1b,EACzC,CAID,WAAA6W,GACI,OAAO5gC,KAAKoyC,WAAWxR,YAAY5gC,KACtC,CAID,QAAAg1B,GACI,IAAKh1B,KAAKo1B,MAAO,CACb,IAAKp1B,KAAK0wC,oBACN,MAAM,IAAI1jC,MAAM,uDAEpBhN,KAAKo1B,MAAQp1B,KAAK4gC,aACrB,CACD,OAAO5gC,KAAKo1B,KACf,CAID,QAAAL,GAII,OAHK/0B,KAAK02C,YACN12C,KAAK02C,UAAY12C,KAAKoyC,WAAWxE,gBAAgB5tC,OAE9CA,KAAK02C,SACf,CAID,iBAAAC,CAAkBC,GACd52C,KAAKg1B,WAAWiM,cAAc2V,GAC9B52C,KAAK02C,UAAY12C,KAAKg1B,WAAWD,UACpC,CAKD,iBAAA8hB,CAAkB1V,GACdnhC,KAAKs1C,eAAiBnU,CACzB,CAOD,YAAA2V,CAAa5pC,EAAS4U,GAClB9hB,KAAKs8B,aAAahS,KAAK,eAAgBpd,GACvClN,KAAKqyC,QAAQ96B,SAASk+B,IACdA,EAAOa,eAAex0B,IACtB2zB,EAAOf,gBACV,GAER,CAMD,UAAAqC,CAAW9pC,EAAQ6U,GACf9hB,KAAKs8B,aAAahS,KAAK,aAAcrd,GACjCA,EAAOzI,SAAW4qC,EAAepiC,OACjChN,KAAKg3C,WAAW/pC,GAEpBjN,KAAKqyC,QAAQ96B,SAASk+B,IACdA,EAAOa,eAAex0B,IACtB2zB,EAAOd,cACV,GAER,CAOD,UAAAqC,CAAW/pC,GACPA,EAAOzI,OAAS4qC,EAAepiC,MAC/BhN,KAAKs8B,aAAahS,KAAK,QAASrd,EACnC,CAKD,gBAAA2oC,GACI51C,KAAKi3C,UAAU,CACX9V,QAASnhC,KAAKs1C,eACd1f,QAAQ,EACRia,QAAS,KACL7vC,KAAKq2C,eAAe7hB,EAAY0iB,OAChC,IAAI9hB,EAAQp1B,KAAKg1B,WACjBh1B,KAAK61C,UAAU,oBACX71C,KAAKo1C,cACLhgB,EAAMtc,aAAa9Y,KAAKo1C,aAAc,CAClCvV,cAAc,IAGlB7/B,KAAK6wC,iBACL7wC,KAAK2nC,UAAU,CACXF,QAASznC,KAAKq1C,eACdlU,QAASnhC,KAAKs1C,eACdzF,QAAS,KACL7vC,KAAKq2C,eAAe7hB,EAAY3B,OAEhC7yB,KAAK61C,UAAU,QAAQ,KAK/B71C,KAAKq2C,eAAe7hB,EAAY3B,OAChC7yB,KAAK61C,UAAU,SAClB,GAGZ,CAID,UAAA/W,GACI,MAAM1J,EAAQp1B,KAAKg1B,WACnBI,EAAM3U,QACN2U,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB5H,KAE7B,CAID,WAAA4qB,GACIn3C,KAAKgwC,YAAYvvB,QACjBzgB,KAAKo3C,gBAAkB,KACvBp3C,KAAKq3C,cAAgB,IACxB,CAKD,oBAAApD,CAAqBqD,GACjBt3C,KAAKu3C,kBAAoBD,CAC5B,CACD,gBAAAvF,CAAiBjqB,GACb,MAAMlkB,EAAM5D,KAAKw3C,gBAAgB1vB,GACjC,OAAI9nB,KAAKu3C,kBACEv3C,KAAKu3C,kBAAkBvzC,IAAIJ,GAG3B5D,KAAK2wC,kBAAkB/sC,EAErC,CACD,eAAA4zC,CAAgB1vB,GACZ,IAAIlkB,EAAyB,OAAnBkkB,EAAOypB,SAAoB,OAASzpB,EAAO7I,SAAW6I,EAAOypB,SAMvE,OALIzpB,EAAO1nB,cACPwD,GAAO,IAAMlC,OAAOC,KAAKmmB,EAAO1nB,aAAagC,QAAOuE,GAAU,YAALA,IACpD7E,KAAI6E,GAAKmhB,EAAO1nB,YAAYuG,KAC5BpF,KAAK,MAEPqC,CACV,CACD,cAAAsuC,CAAepqB,EAAQgqB,GACnB,MAAMluC,EAAM5D,KAAKw3C,gBAAgB1vB,GAC7B9nB,KAAKu3C,kBACLv3C,KAAKu3C,kBAAkBnzC,IAAIR,EAAKkuC,GAGhC9xC,KAAK2wC,kBAAkB/sC,GAAOkuC,CAErC,CAID,cAAA2F,GACQz3C,KAAKu3C,kBACLv3C,KAAKu3C,kBAAkB92B,QAGvBzgB,KAAK2wC,kBAAoB,EAEhC,CAID,qBAAA+G,GACI,OAAO13C,KAAKsxC,mBACf,CAOD,SAAA38B,CAAUpB,EAAQqB,GACdtV,EAAKqV,UAAUpB,EAAQqB,EAC1B,CACD,gBAAA+9B,CAAiB7oB,EAAW6tB,GACxB,OAAO33C,KAAKs8B,aAAazS,UAAUC,GAAYE,GAAU2tB,EAAQ33C,KAAMgqB,EAAM3pB,OAChF,CAMD,mBAAAw0C,CAAoB/qB,EAAW8tB,GAC3B53C,KAAKs8B,aAAalS,YAAYN,EAAW8tB,EAC5C,CACD,SAAA/B,CAAU/rB,EAAWzpB,GACjBL,KAAKs8B,aAAahS,KAAKR,EAAWzpB,EACrC,CACD,eAAAw3C,GACI,OAAO73C,KAAKmyC,YACf,CAKD,aAAAxI,CAAcl8B,GACVA,EAAUA,GAAW,GACrBzN,KAAK82C,aAAa,CACd9e,OAAQqX,EAASyI,aACjBv6B,KAAM,kBACPiX,EAAYujB,QACW/3C,KAAKoyC,WAAWlE,qBAAqBluC,MAC7C2pC,cAAcl8B,GAC3BhB,MAAMtK,IACPnC,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASyI,aACjBv6B,KAAM,iBACPiX,EAAYujB,QACXtqC,EAAQoiC,SACRpiC,EAAQoiC,QAAQ1tC,EACnB,IAEAyK,OAAOqC,IACR,MACMgpC,EAAe,wCADJxqC,GAAWA,EAAQqa,OAASra,EAAQqa,OAAO7I,SAAW,kBACKhQ,EAAM/B,UAClFlN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASyI,aACjBv6B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAYujB,QACXtqC,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,eAC/B,GAER,CAYD,SAAAhB,CAAUxpC,GACFzN,KAAK+0C,iBACL/0C,KAAK+0C,gBAAgB/0C,KAAMyN,GAE/B,MAAM0zB,EAAU1zB,EAAQ0zB,SAAW,YAC7BvL,EAASnoB,EAAQmoB,SAAU,EACjC51B,KAAK82C,aAAa,CACd9e,OAAQqX,EAAS6I,UACjB36B,KAAM,kBAAoB4jB,GAC3B3M,EAAY0iB,OAEf,OADoBl3C,KAAKoyC,WAAWvE,eAAe7tC,MAChCyoC,kBAAkBh7B,GAChChB,MAAMjM,IACHA,GACAR,KAAK22C,kBAAkBn2C,GACnBR,KAAK02C,UAAU73B,WACfvQ,QAAQC,KAAK,0CAA0CvO,KAAK02C,UAAU53B,YAI1ExQ,QAAQC,KAAK,+BAEjBvO,KAAK61C,UAAU,aACf71C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAAS6I,UACjB36B,KAAM,iBAAmB4jB,GAC1B3M,EAAY0iB,OACVthB,IACD51B,KAAK8+B,aACL9+B,KAAKm3C,cACLn3C,KAAKq2C,kBAEL5oC,EAAQoiC,SACRpiC,EAAQoiC,QAAQ7vC,KAAK+0B,YAElB/0B,KAAK+0B,cAEXnoB,OAAMqC,IACP,MAAMgpC,EAAe,oBAAoB9W,QAAclyB,EAAM/B,UAU7D,OATAlN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAAS6I,UACjB36B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY0iB,OACXzpC,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,aAEzBj4C,KAAK+0B,UAAU,GAE7B,CACD,mBAAAojB,CAAoBC,GACIp4C,KAAKoyC,WAAWvE,eAAe7tC,MACvCwoC,kBAAkB/7B,MAAK,KAC/B2rC,GAAU,GAEjB,CAWD,SAAAzQ,CAAUl6B,GACNA,EAAUA,GAAW,GACrB,MAAM8+B,EAAcvsC,KAAKoyC,WAAWvE,eAAe7tC,MACnDA,KAAKm3C,cACL5K,EAAY/D,kBACP/7B,MAAK,KAEN,MAAMg7B,GADNh6B,EAAUA,GAAW,IACGg6B,QAClB7R,EAASnoB,EAAQmoB,SAAU,EAC7B51B,KAAKg1C,iBACLh1C,KAAKg1C,gBAAgBh1C,KAAMyN,GAE/BzN,KAAK82C,aAAa,CACd9e,OAAQqX,EAASgJ,UACjB96B,KAAM,kBAAoBkqB,GAC3BjT,EAAY3B,OACM7yB,KAAKoyC,WAAWrE,gBAAgB/tC,MACxC2nC,UAAUl6B,GAClBhB,MAAMpM,IACHA,GACAL,KAAKo1B,MAAMtc,aAAazY,EAAM,CAC1B4+B,UAAU,IAGlBj/B,KAAKs4C,wBACLt4C,KAAK61C,UAAU,aACf71C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASgJ,UACjB96B,KAAM,iBAAmBkqB,GAC1BjT,EAAY3B,OACf7yB,KAAKo1B,MAAMqG,gBACN7F,IACD51B,KAAKo1B,MAAMwC,iBAAiB,CACxBC,KAAM1D,EAAgBokB,WACtBta,YAAaj+B,KAAKo1B,MAAMmG,eAE5Bv7B,KAAKq2C,kBAEL5oC,EAAQoiC,SACRpiC,EAAQoiC,QAAQ7vC,KAAKo1B,MACxB,IAEAxoB,OAAOqC,IACR,MAAMmmB,EAAQp1B,KAAKg1B,WACnB/lB,EAAM/B,QAAU,qBAAuBkoB,EAAMtW,QAAU,OAAS7P,EAAM/B,SAAW,IAC7EO,EAAQwB,OACRxB,EAAQwB,MAAMA,EAAM/B,QAASmiC,EAASgJ,WAE1Cr4C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASgJ,UACjB96B,KAAMtO,EAAM/B,QACZ4lC,YAAa7jC,GACdulB,EAAY3B,MAAM,GACvB,IAEDjmB,OAAOqC,IACRX,QAAQW,MAAMA,EAAM,GAE3B,CAOD,aAAAupC,CAAc/qC,GACUzN,KAAKoyC,WAAWvE,eAAe7tC,MACvCwoC,kBACP/7B,MAAK,KACNzM,KAAKy4C,sBAAsBhrC,EAAQ,IAElCb,OAAOqC,IACR,MAAMgpC,EAAe,+CAA+ChpC,EAAM/B,UAC1ElN,KAAKg3C,WAAW,CACZhf,OAAQqX,EAASqJ,cACjBn7B,KAAM06B,EACNnF,YAAa7jC,GACf,GAET,CACD,qBAAAwpC,CAAsBhrC,GAClBA,EAAUA,GAAW,GACAzN,KAAKoyC,WAAWrE,gBAAgB/tC,MACRmnC,aAAa15B,GAErDhB,MAAMksC,IACHlrC,EAAQoiC,SACRpiC,EAAQoiC,QAAQ8I,EACnB,IAEA/rC,OAAOqC,IACR,MAAMgpC,EAAe,+CAA+ChpC,EAAM/B,UACtEO,EAAQwB,MACRxB,EAAQwB,MAAMgpC,EAAc,iBAG5Bj4C,KAAKg3C,WAAW,CACZhf,OAAQqX,EAASqJ,cACjBn7B,KAAM06B,EACNnF,YAAa7jC,GAEpB,GAER,CAWD,QAAAu4B,CAAS/5B,GAEL,MAAMqxB,OAA2C,KADjDrxB,EAAUA,GAAW,IACaqxB,YAA6BrxB,EAAQqxB,WACvE9+B,KAAKo1B,MAAMyJ,MAAMC,GACbrxB,EAAQg6B,SACRznC,KAAKo1B,MAAMwM,MAAMn0B,EAAQg6B,SAEzBh6B,EAAQlN,MACRP,KAAKo1B,MAAM4J,QAAQvxB,EAAQlN,MAE3BkN,EAAQkL,aACR3Y,KAAKo1B,MAAM0M,eAAer0B,EAAQkL,aAEtC,MAAMid,EAASnoB,EAAQmoB,SAAU,EACjC,IAAIgjB,GAAa,OACiB,IAAvBnrC,EAAQmrC,aACfA,EAAanrC,EAAQmrC,YAEzB,MAAMC,WAAa,KACf,MAAMzjB,EAAQp1B,KAAKg1B,WACnBI,EAAM6G,UAAW,EACZrG,GACDR,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB5H,IACtB0R,YAAa7I,EAAMmG,cAE1B,EAEL,GAAIqd,EAAY,CACZ54C,KAAK82C,aAAa,CACd9e,OAAQqX,EAASyJ,SACjBv7B,KAAM,yBACPiX,EAAY3B,OACM7yB,KAAKoyC,WAAWrE,gBAAgB/tC,MACxCwnC,SAAS/5B,GACjBhB,MAAMssC,IACHA,GACA/4C,KAAKo1B,MAAMtc,aAAaigC,GAE5B/4C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASyJ,SACjBv7B,KAAM,gCACPiX,EAAY3B,OACfgmB,aACIprC,EAAQoiC,SACRpiC,EAAQoiC,SACX,IAEAjjC,OAAOqC,IACR,MAAMgpC,EAAe,8BAA8BhpC,EAAM/B,UACzDlN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASyJ,SACjBv7B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY3B,OACXplB,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,WAC/B,GAER,MAEGY,aAEJ,OAAO74C,KAAKo1B,KACf,CAOD,SAAAyS,CAAUp6B,GACNA,EAAUA,GAAW,GACrB,MAAM2nB,EAAQp1B,KAAKg1B,WACnBh1B,KAAK82C,aAAa,CACd9e,OAAQqX,EAAS2J,UACjBz7B,KAAM,iBAAmB6X,EAAMtW,SAChC0V,EAAY3B,OACM7yB,KAAKoyC,WAAWrE,gBAAgB/tC,MACxC6nC,UAAUp6B,GAClBhB,MAAMpM,IACPL,KAAK+2C,WAAW,CACZ/e,OAAQqX,EAAS2J,UACjBx0C,OAAQ4qC,EAAe4I,QACvBz6B,KAAM,gBAAkB6X,EAAMtW,SAC/B0V,EAAY3B,OACXxyB,GACA+0B,EAAMtc,aAAazY,GAEvB+0B,EAAMqG,gBACNrG,EAAM6G,UAAW,EACbxuB,EAAQoiC,SACRpiC,EAAQoiC,SACX,IAEAjjC,OAAOqC,IACR,MAAMgpC,EAAe,oBAAoB7iB,EAAMtW,cAAc7P,EAAM/B,UACnElN,KAAK+2C,WAAW,CACZ/e,OAAQqX,EAAS2J,UACjBx0C,OAAQ4qC,EAAepiC,MACvBuQ,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY3B,OACXplB,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc5I,EAAS2J,UACxC,GAER,CAOD,WAAAhR,CAAYv6B,GACRA,EAAUA,GAAW,GACrB,MAAM2nB,EAAQp1B,KAAKg1B,WACnBh1B,KAAK82C,aAAa,CACd9e,OAAQqX,EAAS4J,YACjB17B,KAAM,mBAAqB6X,EAAMtW,SAClC0V,EAAY3B,OACM7yB,KAAKoyC,WAAWrE,gBAAgB/tC,MACxCgoC,YAAYv6B,GACpBhB,MAAK,KACN2oB,EAAMyJ,QACN7+B,KAAK+2C,WAAW,CACZ/e,OAAQqX,EAAS4J,YACjBz0C,OAAQ4qC,EAAe4I,QACvBz6B,KAAM,kBAAoB6X,EAAMtW,SACjC0V,EAAY3B,OACXplB,EAAQoiC,SACRpiC,EAAQoiC,SACX,IAEAjjC,OAAOqC,IACR,MAAMgpC,EAAe,sBAAsB7iB,EAAMtW,cAAc7P,EAAM/B,UACrElN,KAAK+2C,WAAW,CACZ/e,OAAQqX,EAAS4J,YACjBz0C,OAAQ4qC,EAAepiC,MACvBuQ,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY3B,OACXplB,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,cAC/B,GAER,CAOD,SAAAxO,CAAUh8B,GACNA,EAAUA,GAAW,GACrB,MAAM2nB,EAAQp1B,KAAKg1B,WACfh1B,KAAKi1C,iBACLj1C,KAAKi1C,gBAAgBj1C,KAAMyN,GAE/BzN,KAAK82C,aAAa,CACd9e,OAAQqX,EAAS6J,UACjB37B,KAAM,kBAAoB6X,EAAMtW,SACjC0V,EAAY3B,OACW7yB,KAAKoyC,WAAWpE,qBAAqBhuC,MAC7CypC,UAAUh8B,GACvBhB,MAAMjI,IAWP,GAVAxE,KAAKo3C,gBAAkB5yC,GAAUA,EAAOqpB,UAClCrpB,EAAOqpB,UACP,GACN7tB,KAAK61C,UAAU,aACf71C,KAAKq2C,eAAe7hB,EAAY2kB,WAChCn5C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAAS6J,UACjB37B,KAAM,iBAAmB6X,EAAMtW,SAChC0V,EAAY3B,OACXruB,EAAQ,CACR,GAAIA,EAAO40C,WAAY,CACnB,MAAMC,EAAI70C,EAAO4wB,MACbikB,IACAjkB,EAAMwM,MAAMyX,EAAE5zC,IACd2vB,EAAM4J,QAAQqa,EAAE94C,MAChB60B,EAAM0M,eAAeuX,EAAEjrC,MACvBgnB,EAAM2G,UAAYsd,EAAEtd,WAExB3G,EAAMqG,gBACNz7B,KAAKq2C,eAAe7hB,EAAY8kB,YACnC,CACG7rC,EAAQoiC,SACRpiC,EAAQoiC,QAAQrrC,EAEvB,KAEAoI,OAAOqC,IACR,MAAMgpC,EAAe,2BAA2B7iB,EAAMtW,cAAc7P,EAAM/B,UAC1ElN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAAS6J,UACjB37B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY3B,OACXplB,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,YAC/B,GAER,CAWD,SAAA/O,CAAUz7B,GAEN,MAAMwjC,OAAmD,KADzDxjC,EAAUA,GAAW,IAC8B,cAC7CA,EAAQwjC,cACRjxC,KAAKixC,cACXjxC,KAAKgwC,YAAY5oB,cAAgB6pB,EACjCxjC,EAAQ67B,MAAQ77B,EAAQ67B,OACpB,CACIphB,OAAQ,EACRC,MAAOnoB,KAAKgwC,YAAY7oB,UACxBF,WAAYgqB,GAEhBjxC,KAAKqwC,YACL5iC,EAAQ47B,MAAQ,0CAEfrpC,KAAKo1B,MAAMiK,YAAY,CACxBI,kBAAkB,MAKlBhyB,EAAQ8rC,oBACRv5C,KAAKw5C,gBAAkB/rC,EAAQ8rC,mBAE/Bv5C,KAAKgwC,YAAY5oB,eACjB3Z,EAAQ67B,MAAMnhB,QAElBnoB,KAAKswC,eAAe5uC,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAE,EAAE+I,GAAU,CAAEoiC,QAAUrrC,IAC9DA,EAAOqpB,YACP7tB,KAAKo3C,gBAAkB5yC,EAAOqpB,UAC9B7tB,KAAKq2C,eAAe7hB,EAAY2kB,YAKpC,GAHuBn5C,KAAK6oC,cAAcuF,wBAAwBpuC,MACnD6+B,QACf7+B,KAAKq3C,cAAgB7yC,EACjBA,EAAOyrC,UAAW,CAClBjwC,KAAKgwC,YAAYvvB,QACjBzgB,KAAKgwC,YAAYvqC,GAAKzF,KAAKo1B,MAAMtW,QACjC,MAAMmxB,EAAYzrC,EAAOyrC,UACzB,IAAK,MAAMrqB,KAAOqqB,EAAUxtB,KACxBziB,KAAKgwC,YAAYttB,QAAQgD,IAAIE,GAE7BphB,EAAO0rC,WAA8C,IAA9B1rC,EAAO0rC,KAAiB,cAC/ClwC,KAAKgwC,YAAYlnB,SAAStkB,EAAO0rC,KAAKC,cAE1C,MAAM1qB,EAAQwqB,EAAUxoB,KAAK7lB,OACzB5B,KAAKgwC,YAAY5oB,eAAiB3B,IAAUhY,EAAQ67B,MAAMnhB,OAC1D8nB,EAAUxoB,KAAKthB,OAAO8pC,EAAUxoB,KAAK7lB,OAAS,EAAG,GAErD,IAAK,MAAM8iB,KAAOurB,EAAUxoB,KACxBznB,KAAKgwC,YAAYpoB,OAAOlD,GAExB1kB,KAAKgwC,YAAY5oB,gBACjBpnB,KAAKgwC,YAAmB,MAAKvqB,EAAQhY,EAAQ67B,MAAMnhB,MAC7C8nB,EAAUxoB,KAAK7lB,OACf,GAEV5B,KAAKgwC,YAAYrnB,aACpB,CACGlb,EAAQoiC,SACRpiC,EAAQoiC,QAAQrrC,EACnB,KAEZ,CACD,YAAAslC,CAAar8B,GACT,MAAM2nB,EAAQp1B,KAAKg1B,WACnBh1B,KAAK82C,aAAa,CACd9e,OAAQqX,EAASoK,aACjBl8B,KAAM,uBAAyB6X,EAAMtW,SACtC0V,EAAY3B,OACS7yB,KAAK6oC,cAAcsF,mBAAmBnuC,MAC9C8pC,aAAar8B,GACxBhB,MAAK,KACNzM,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASoK,aACjBl8B,KAAM,uBAAyB6X,EAAMtW,SACtC0V,EAAY3B,OACXplB,EAAQoiC,SACRpiC,EAAQoiC,SACX,IAEAjjC,OAAMqC,IACP,MAAMgpC,EAAe,4BAA4B7iB,EAAMtW,cAAc7P,EAAM/B,UAC3ElN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASoK,aACjBl8B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY3B,OACXplB,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,eAC/B,GAER,CACD,eAAAnN,CAAgBr9B,GACZ,MAAM2nB,EAAQp1B,KAAKg1B,WACnBh1B,KAAK82C,aAAa,CACd9e,OAAQqX,EAASqK,gBACjBn8B,KAAM,yBAA2B6X,EAAMtW,SACxC0V,EAAY3B,OACS7yB,KAAK6oC,cAAcsF,mBAAmBnuC,MAC9C8qC,gBAAgBr9B,GAC3BhB,MAAMpM,IACP+0B,EAAMtc,aAAazY,GACnBL,KAAK61C,UAAU,aACf71C,KAAKq2C,iBACLr2C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASqK,gBACjBn8B,KAAM,yBAA2B6X,EAAMtW,SACxC0V,EAAY3B,OACXplB,EAAQoiC,SACRpiC,EAAQoiC,SACX,IAEAjjC,OAAMqC,IACP,MAAMgpC,EAAe,iCAAiC7iB,EAAMtW,cAAc7P,EAAM/B,UAChFlN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASqK,gBACjBn8B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAY3B,OACXplB,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,kBAC/B,GAER,CACD,cAAA3H,CAAe7iC,GACX,MAAMg6B,EAAUznC,KAAKg1B,WAAWlW,QAChC,IAAIqqB,EAAe17B,GAAW,GAC1BzN,KAAK8wC,wBACL3H,EAAa1B,QAAUznC,KAAKo1B,MAAMtW,SAElC9e,KAAKk1C,iBACLl1C,KAAKk1C,gBAAgBl1C,KAAMmpC,GAE/BnpC,KAAK82C,aAAa,CACd9e,OAAQqX,EAASsK,UACjBp8B,KAAM,gCAAkCkqB,GACzCjT,EAAYujB,QACK/3C,KAAKoyC,WAAWnE,eAAejuC,MACvCkpC,UAAUC,GACjB18B,MAAMjI,IACHA,EAAOqpB,YACP7tB,KAAKo3C,gBAAkB5yC,EAAOqpB,WAElC7tB,KAAKq3C,cAAgB7yC,EAIjB2kC,EAAa0G,SACb1G,EAAa0G,QAAQrrC,GAEzBxE,KAAK61C,UAAU,aACf71C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASsK,UACjBp8B,KAAM,4CAA8CkqB,GACrDjT,EAAYujB,OAAO,IAErBnrC,OAAOqC,IACR,MAAMgpC,EAAe,qCAAqCxQ,QAAcx4B,EAAM/B,UAC9ElN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASsK,UACjBp8B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAYujB,QACX5O,EAAal6B,OACbk6B,EAAal6B,MAAMgpC,EAAc5I,EAASsK,UAC7C,GAER,CACD,mBAAAnH,GACI,MAAM1W,EAAe97B,KAAKo1B,MAAMmI,yBAC1Bqc,EAAa55C,KAAK6oC,cAAcuF,wBAAwBpuC,MAC1D87B,EAAa1X,uBAAyBw1B,EAAWzN,qBACjDyN,EAAW7N,UAAU,CACjBC,SAAUlQ,EAAavY,YAAY3hB,OAAS,EAC5CsqC,eAAgB,CAAC1nC,EAAQ0mC,KACjBlrC,KAAKw5C,iBACLx5C,KAAKw5C,gBAAgBh1C,EACxB,EAELq1C,cAAe5qC,IACX,MAAMgpC,EAAe,sCAAsChpC,EAAMi8B,kBAAkBj8B,EAAM/B,UACzFlN,KAAKg3C,WAAW,CACZhf,OAAQqX,EAASsK,UACjBp8B,KAAM06B,EACNnF,YAAa7jC,GACf,GAIjB,CAKD,kBAAA6qC,CAAmBrsC,IACfA,EAAUA,GAAW,IACb67B,MAAQ77B,EAAQ67B,OACpB,CACIphB,OAAQ,EACRC,MAAOnoB,KAAKgwC,YAAY7oB,UACxBF,WAAW,GAEnB,MACMwgB,EADQh6B,EAAQ2nB,MACAtW,QACtB9e,KAAK82C,aAAa,CACd9e,OAAQqX,EAASsK,UACjBp8B,KAAM,wBAA0BkqB,GACjCjT,EAAYujB,QACO/3C,KAAKoyC,WAAWnE,eAAejuC,MACvCkpC,UAAUz7B,GACnBhB,MAAMjI,IACPxE,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAASsK,UACjBp8B,KAAM,8BAAgCkqB,GACvCjT,EAAYujB,QACXtqC,EAAQoiC,SACRpiC,EAAQoiC,QAAQrrC,EACnB,IAEAoI,OAAOqC,IACR,MAAMgpC,EAAe,4CAA4CxQ,QAAcx4B,EAAM/B,UACrFlN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAASsK,UACjBp8B,KAAM06B,GACPzjB,EAAYujB,QACXtqC,EAAQwB,MACRxB,EAAQwB,MAAMgpC,EAAc,aAG5Bj4C,KAAKg3C,WAAW,CACZhf,OAAQqX,EAASsK,UACjBp8B,KAAM06B,GAEb,GAER,CAaD,YAAA8B,CAAatsC,IACTA,EAAUA,GAAW,IACb67B,MAAQ77B,EAAQ67B,OAASgG,EAC7BtvC,KAAKm1C,oBACLn1C,KAAKm1C,mBAAmBn1C,KAAMyN,GAElC,MAAM9C,EAAS8C,EAAQ9C,OACvB,GAAIA,EAAQ,CACR,MAAMwoC,EAAWnzC,KAAKozC,YAAYzoC,GAClC,GAAIwoC,EAAU,CACV,MAAM1L,EAAUznC,KAAKg1B,WAAWlW,QAC5B9e,KAAK8wC,wBACLrjC,EAAQg6B,QAAUA,GAEtBznC,KAAK82C,aAAa,CACd9e,OAAQqX,EAAS2K,aACjBz8B,KAAM,+BAAiCkqB,GACxCjT,EAAYujB,QACf,MAAMphC,EAAiBrX,EAAK8S,oBAC5B3E,EAAQkE,SAAWgF,EACnB,MAAMmlB,EAAe97B,KAAKo1B,MAAMmI,yBAC5BzB,EAAalY,kBACTkY,EAAahY,kBAAoBgY,EAAajY,eAClDpW,EAAQoU,WAAaia,EAAazX,cAEtC8uB,EAAS8G,OAAOxsC,GACXhB,MAAMjI,IACPxE,KAAK61C,UAAU,gBACf71C,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAe4I,QACvBhgB,OAAQqX,EAAS2K,aACjBz8B,KAAM,6BAA6BkqB,qCACpCjT,EAAYujB,QACXtqC,EAAQoiC,SACRpiC,EAAQoiC,SACX,IAEAjjC,OAAOqC,IACR,MAAMgpC,EAAe,sCAAsCxQ,QAAcx4B,EAAM/B,UAC/ElN,KAAK+2C,WAAW,CACZvyC,OAAQ4qC,EAAepiC,MACvBgrB,OAAQqX,EAAS2K,aACjBz8B,KAAM06B,EACNnF,YAAa7jC,GACdulB,EAAYujB,QACXtqC,EAAQwB,OACRxB,EAAQwB,MAAMgpC,EAAc,eAC/B,GAER,CACJ,CACJ,CACD,qBAAAK,GACSt4C,KAAKyN,QAAQy1B,wBACdljC,KAAKo1B,MAAM+I,aAAa5mB,SAAQqO,IACxBA,EAAI5K,KAAK8B,MAAQoX,EAAQ+O,YACzBrd,EAAIkR,SAAU,EACjB,GAGZ,CACD,iBAAAojB,CAAkBhgC,GACd,MAAMvP,EAAS3K,KAAKyN,QAAQ+iC,gBAC5B,OAAOxwC,KAAK+0B,WAAW1T,iBAAiBnH,EAAMvP,EACjD,CACD,cAAAwvC,CAAejgC,GACX,MAAMvP,EAAS3K,KAAKyN,QAAQgjC,mBAAqBzwC,KAAKyN,QAAQ+iC,gBAC9D,OAAOxwC,KAAK+0B,WAAW1T,iBAAiBnH,EAAMvP,EACjD,CACD,uBAAAw4B,CAAwBla,GACpB,IAAI/O,EACJ,MAAMnB,EAAQ/Y,KAAK+0B,WACnB,OAAQ9L,EAAOjO,KAAK8B,KAChB,KAAKoX,EAAQQ,SACT,MAAO,iBACX,KAAKR,EAAQ+O,UACT,MAAO,aACX,KAAK/O,EAAQkmB,aACT,MAAO,gBACX,KAAKlmB,EAAQrB,MACT,MAAO,eACX,KAAKqB,EAAQgB,gBACb,KAAKhB,EAAQiB,sBAET,OADAjb,EAAOnB,EAAMoG,iBAAiB8J,EAAOjO,KAAKxa,OACnCR,KAAKm6C,eAAejgC,GAC/B,KAAKga,EAAQ2H,kBAET,OADA3hB,EAAOnB,EAAMoG,iBAAiB8J,EAAOjO,KAAKrW,KAAK,GAAGnE,OAC3CR,KAAKm6C,eAAejgC,GAAQ,IAAMnB,EAAMuZ,uBAAuBrJ,EAAOjO,KAAKyW,MACtF,QACI,MAAO,SAElB,EAGL,IAAI4oB,EACJ,SAASC,0BAA0BhM,GAC/B+L,EAAoB/L,CACxB,CAUA,IAAIiM,EChoLAC,ED8nLJF,2BAA0B,IAAM,IAAI/J,YAGpC,SAAWgK,GAqCPA,EAASE,WAAa,IAjCtB,MAAMC,WACF,WAAA76C,GAIIG,KAAK26C,eAAiB,CAClB,CAAEl1C,GAAI,WAAY7B,IAAK,QAASg3C,WAAW,GAC3C,CAAEn1C,GAAI,eAAgB7B,IAAK,aAC3B,CAAE6B,GAAI,cAAe7B,IAAK,YAC1B,CAAE6B,GAAI,qBAAsB7B,IAAK,mBACjC,CAAE6B,GAAI,oBAAqB7B,IAAK,mBAKpC5D,KAAK66C,eAAiB,CAClB,CAAEp1C,GAAI,SAAU7B,IAAK,MAAOg3C,WAAW,GACvC,CAAEn1C,GAAI,eAAgB7B,IAAK,aAC3B,CAAE6B,GAAI,cAAe7B,IAAK,YAC1B,CAAE6B,GAAI,UAAW7B,IAAK,SAK1B5D,KAAK86C,cAAgB,CACjB,CAAEr1C,GAAI,WAAY7B,IAAK,SACvB,CAAE6B,GAAI,UAAW7B,IAAK,OAAQg3C,WAAW,GAEhD,GASLL,EAASQ,sBAAwB,CAC7B,CAAEt1C,GAAI,MAAO7B,IAAK,eAClB,CAAE6B,GAAI,MAAO7B,IAAK,eAClB,CAAE6B,GAAI,OAAQ7B,IAAK,gBACnB,CAAE6B,GAAI,SAAU7B,IAAK,kBAE5B,CA/CD,CA+CG22C,IAAaA,EAAW,CAAE,IAgM7B,MAAMS,OAKF,WAAAn7C,CAAYo7C,GACRj7C,KAAKi7C,KAAOA,EACZj7C,KAAKm2B,IAAM92B,EAAMuK,WAAW5J,KAAK21C,gBACpC,CACD,MAAIlwC,GACA,OAAOzF,KAAKm2B,GACf,CAMD,IAAA4Q,CAAK1K,EAAS5uB,GACVzN,KAAKq8B,QAAUA,CAClB,CAID,UAAA+L,GACI,OAAOpoC,KAAKq8B,OACf,CAID,OAAAka,GACIv2C,KAAKk7C,aACR,CAOD,WAAAA,GACC,CAMD,cAAAxG,GACI10C,KAAKm7C,oBACR,CAOD,kBAAAA,GACC,CAMD,YAAAxG,GACI30C,KAAKo7C,kBACR,CAOD,gBAAAA,GACC,CAKD,cAAA9E,CAAex0B,GACX,YAAqB,IAAVA,GAAmC,MAAVA,GACF,IAAzBA,EAAS9hB,KAAKikB,MAI1B,CACD,OAAAo3B,GACIr7C,KAAKs7C,aACR,CACD,WAAAA,GACC,ECj3LL,SAASC,WAAW/iC,EAAQsE,EAAKrP,GAC7B,IAAI+tC,EAAUl0C,SAAS8iC,cAActtB,GACjCjD,EAAOpM,GAAW,GAKtB,OAJIoM,EAAK4hC,WACLD,EAAQE,UAAY7hC,EAAK4hC,UAE7BjjC,EAAO6xB,YAAYmR,GACZA,CACX,CAMA,SAASG,YAAYH,EAASE,GAC1BF,EAAQE,UAAaF,EAAiB,UAChCA,EAAQE,UAAY,IAAMA,EAC1BA,CACV,CAKA,SAASE,YAAYJ,GACjBA,EAAQ5jC,MAAM0yB,QAAU,MAC5B,CAMA,SAASuR,YAAYL,EAASlR,GACrBA,IACDA,EAAU,IAEdkR,EAAQ5jC,MAAM0yB,QAAUA,CAC5B,CAqCA,SAASwR,mBAAmBC,GACxB,IAAI/xB,EAQJ,MAPuB,mBAAX,MACRA,EAAQ,IAAIgyB,MAAMD,IAGlB/xB,EAAQ1iB,SAAS20C,YAAY,UACvBC,UAAUH,GAAW,GAAM,GAE9B/xB,CACX,CACA,SAASmyB,kBAGL,MAAO,CACH/0C,MAHUR,KAAKC,IAAIS,SAASK,gBAAgBC,aAAe,EAAGH,OAAOC,YAAc,GAInF00C,OAHWx1C,KAAKC,IAAIS,SAASK,gBAAgB00C,cAAgB,EAAG50C,OAAO60C,aAAe,GAK9F,CAWA,SAASC,eACL,MAAMl1C,EAAOC,SAASD,KAChBm1C,EAAUl1C,SAASK,gBACzB,MAAO,CACH80C,IAAKh1C,OAAOi1C,aAAeF,EAAQG,WAAat1C,EAAKs1C,UACrDC,KAAMn1C,OAAOo1C,aAAeL,EAAQM,YAAcz1C,EAAKy1C,WAE/D,CACA,SAASC,sBAAsBvB,GAC3B,IAAI9xC,EAAM,CAAE0hB,EAAG,EAAG4xB,EAAG,GACrB,GAAgB,OAAZxB,EAAkB,CAClB,MAAMyB,EAKd,SAAS/0B,OAAOszB,GACZ,MAAM0B,EAA4B,CAAET,IAAK,EAAGU,MAAO,EAAGC,OAAQ,EAAGR,KAAM,EAAGx1C,MAAO,EAAGg1C,OAAQ,GAC5F,IAAIiB,EACJ,IACIA,EAAM7B,EAAQ8B,uBACjB,CACD,MAAOrxC,GACHoxC,EAAMH,CACT,CACD,MAAM71C,EAAOC,SAASD,KAChBm1C,EAAUl1C,SAASK,gBACnB41C,EAAWhB,eACXI,EAAYY,EAASd,IACrBK,EAAaS,EAASX,KACtBY,EAAYhB,EAAQgB,WAAan2C,EAAKm2C,WAAa,EACnDC,EAAajB,EAAQiB,YAAcp2C,EAAKo2C,YAAc,EACtDhB,EAAMY,EAAIZ,IAAME,EAAYa,EAC5BZ,EAAOS,EAAIT,KAAOE,EAAaW,EACrC,MAAO,CAAEhB,IAAK71C,KAAK82C,MAAMjB,GAAMG,KAAMh2C,KAAK82C,MAAMd,GACpD,CAxByB10B,CAAOszB,GACxB9xC,EAAM,CAAE0hB,EAAG6xB,EAASL,KAAMI,EAAGC,EAASR,IACzC,CACD,OAAO/yC,CACX,CAqBA,SAASi0C,aACL,MAAO,CACHv2C,MAAOK,OAAOC,WACd00C,OAAQ30C,OAAO60C,YAEvB,EDivLA,SAASsB,wBACLt+C,EAAKoV,mBAAmB,CACpBmpC,aAAc,cAEdC,MAAO,QACPC,UAAW,YACXC,SAAU,WACVC,gBAAiB,yBACjBC,eAAgB,wBAChBC,eAAgB,wBAChBC,eAAgB,wBAChBC,mBAAoB,6BACpBC,oBAAqB,8BACrBC,mBAAoB,6BACpBC,IAAK,MACLC,UAAW,kBACXC,SAAU,WACVC,KAAM,OACNC,SAAU,CAAE,EACZC,WAAY,CAAE,EACdC,UAAW,CAAE,EACbC,mBAAoB,CAAE,GAE9B,CACAnB,GC7+LA,SAAWpD,GACP,IAAIwE,EAAa,KACbC,EAAQ,KACZ,SAASC,OACL,GAAc,OAAVD,EAAgB,CAChB,MAAME,EAAKhsC,UAAUisC,UAErBH,EAAQE,EAAGr5C,QAAQ,UAAY,GAAKq5C,EAAGr5C,QAAQ,aAAe,CACjE,CACD,OAAOm5C,CACV,CACDzE,EAAa0E,KAAOA,KAKpB1E,EAAa6E,OAJb,SAASA,SACL,MAAMF,EAAK13C,OAAO0L,UAAUisC,UAC5B,OAAQF,QAAUC,EAAGG,SAAS,QACjC,EASD9E,EAAa+E,UAPb,SAASA,YACL,GAAmB,OAAfP,EAAqB,CACrB,MAAMG,EAAKhsC,UAAUisC,UACrBJ,EAAaG,EAAGt2C,cAAc/C,QAAQ,YAAc,CACvD,CACD,OAAOk5C,CACV,EAED,IACIQ,EA8BAC,EA/BAC,GAAwB,EAExBC,mBAAqB,KACrB,MAAM7pB,EAAW8pB,eACjBF,EAAwBj4C,OAAOo4C,WAAW,sCAAsCtqC,SACzE9N,OAAOo4C,WAAW,uCAAuCtqC,QAChE,MAAMuqC,EAAWF,eACbE,IAAahqB,GAAY2pB,GACzBA,EAAwBK,EAC3B,EAIL,SAASF,eACL,YAAsB54C,IAAlBw4C,EACOA,EAGAE,CAEd,CATDC,qBACAl4C,OAAOkrC,iBAAiB,UAAU,IAAMgN,uBASxCnF,EAAaoF,aAAeA,aAS5BpF,EAAauF,gBARb,SAASA,gBAAgBv/C,GACrB,MAAMs1B,EAAW8pB,eACjBJ,EAAgBh/C,EAChB,MAAMs/C,EAAWF,eACbE,IAAahqB,GAAY2pB,GACzBA,EAAwBK,EAE/B,EAMDtF,EAAawF,oBAHb,SAASA,oBAAoBj2B,GACzB01B,EAA0B11B,CAC7B,EAKDywB,EAAayF,kBAHb,SAASA,oBACL,OAAOL,eAAiB,WAAa,IACxC,CAEJ,CAjED,CAiEGpF,IAAiBA,EAAe,CAAE,IAiOrC,MAAM0F,EAAc,OAmGpB,MAAMC,kBACF,WAAAtgD,CAAYid,EAAKtE,GAETxY,KAAKw7C,QADU,iBAAR1+B,EACQxV,SAAS8iC,cAActtB,GAGvBA,EAEftE,GAAUxY,KAAKw7C,QAAQ4E,gBAAkB5nC,GACzCA,EAAO6xB,YAAYrqC,KAAKw7C,QAE/B,CACD,QAAAvgB,CAASne,EAAKujC,GACV,MAAMC,EAAUC,MAAMzjC,EAAK9c,KAAKw7C,SAIhC,OAHI6E,GACAA,EAAaC,GAEVtgD,IACV,CACD,eAAAwgD,CAAgBhF,GAIZ,OAHIA,GACAx7C,KAAKw7C,QAAQnR,YAAYmR,GAEtBx7C,IACV,CACD,IAAAka,CAAKkF,EAAQqhC,GAET,OADAzgD,KAAKw7C,QAAQkF,aAAathC,EAAQqhC,GAC3BzgD,IACV,CACD,EAAAyF,CAAGjF,GACC,OAAOR,KAAKka,KAAK,KAAM1Z,EAC1B,CACD,KAAAmgD,GAEI,OADA3gD,KAAKw7C,QAAQmF,QACN3gD,IACV,CACD,KAAA4gD,CAAMpgD,GACF,OAAOR,KAAKka,KAAK,QAAS1Z,EAC7B,CACD,IAAAH,CAAKwgD,EAAQC,EAAY,MACrB,OAAkB,OAAdA,GACA9gD,KAAKw7C,QAAQuF,gBAAgB,QAAUF,GAChC7gD,MAGAA,KAAKka,KAAK,QAAU2mC,EAAQC,EAE1C,CACD,IAAAE,GACI,OAAOhhD,KAAKihD,YAAY,UAC3B,CACD,IAAAC,CAAKC,GAAS,GACV,OAAO,EAAWnhD,KAAKohD,SAAS,UAAW,QAAUphD,IACxD,CACD,OAAAqhD,CAAQC,GAAY,GAChB,OAAOA,EAAYthD,KAAKohD,SAAS,aAAc,WAAaphD,KAAKohD,SAAS,aAAc,SAC3F,CACD,SAAAE,GACI,SAAUthD,KAAKw7C,QAAQ+F,aAAevhD,KAAKw7C,QAAQgG,cAAgBxhD,KAAKw7C,QAAQiG,iBAAiB7/C,OACpG,CACD,QAAA8/C,CAAShG,KAAciG,GACnB,GAAIjG,EAAW,CACX,MAAMkG,EAAW,IAAIlG,EAAU16C,OAAOC,MAAM,QAAS0gD,GACrD,IAAK,IAAI/8C,EAAI,EAAGA,EAAIg9C,EAAShgD,OAAQgD,IACjC5E,KAAKw7C,QAAQqG,UAAUn8B,IAAIk8B,EAASh9C,GAC3C,CACD,OAAO5E,IACV,CACD,WAAA8hD,CAAYpG,KAAciG,GACtB,GAAIjG,EAAW,CACX,MAAMkG,EAAW,IAAIlG,EAAU16C,OAAOC,MAAM,QAAS0gD,GACrD,IAAK,IAAI/8C,EAAI,EAAGA,EAAIg9C,EAAShgD,OAAQgD,IACjC5E,KAAKw7C,QAAQqG,UAAUE,OAAOH,EAASh9C,GAC9C,CACD,OAAO5E,IACV,CACD,WAAAgiD,CAAYtG,EAAWlxB,OAAQxjB,GAI3B,OAHI00C,GACA17C,KAAKw7C,QAAQqG,UAAUI,OAAOvG,EAAWlxB,GAEtCxqB,IACV,CACD,EAAAkiD,CAAGp4B,EAAWq4B,GACV,MAAMC,EAAat4B,EAAU7oB,MAAM,KACnC,IAAK,IAAI2D,EAAI,EAAGA,EAAIw9C,EAAWxgD,OAAQgD,IACnC5E,KAAKw7C,QAAQ7I,iBAAiByP,EAAWx9C,GAAIu9C,GAEjD,OAAOniD,IACV,CACD,GAAAqiD,CAAIv4B,EAAWq4B,GACX,MAAMC,EAAat4B,EAAU7oB,MAAM,KACnC,IAAK,IAAI2D,EAAI,EAAGA,EAAIw9C,EAAWxgD,OAAQgD,IACnC5E,KAAKw7C,QAAQ3G,oBAAoBuN,EAAWx9C,GAAIu9C,GAEpD,OAAOniD,IACV,CACD,QAAAohD,CAASkB,EAASC,GAEd,OADAviD,KAAKw7C,QAAQ5jC,MAAM4qC,YAAYF,EAASC,GACjCviD,IACV,CACD,WAAAihD,CAAYqB,GAER,OADAtiD,KAAKw7C,QAAQ5jC,MAAM6qC,eAAeH,GAC3BtiD,IACV,CACD,IAAAud,CAAKA,GAED,OADAvd,KAAKw7C,QAAQkH,UAAYnlC,EAClBvd,IACV,CACD,IAAA2iD,CAAKA,GAED,OADA3iD,KAAKw7C,QAAQoH,UAAYD,EAClB3iD,IACV,CACD,KAAAygB,GACI,MAAMoiC,EAAU7iD,KAAKw7C,QACrBx7C,KAAKw7C,QAAUl0C,SAAS8iC,cAAcpqC,KAAKw7C,QAAQsH,SACnDD,EAAQE,YAAY/iD,KAAKw7C,QAC5B,CACD,OAAAwH,CAAQzlC,GACJ,MAAM0lC,EAAS37C,SAAS47C,eAAe3lC,GAEvC,OADAvd,KAAKw7C,QAAQnR,YAAY4Y,GAClBjjD,IACV,CACD,OAAAmjD,CAAQR,GAEJ,OADA3iD,KAAKw7C,QAAQoH,WAAaD,EACnB3iD,IACV,CACD,KAAAojD,GACI,OAAOpjD,KAAKw7C,OACf,CACD,QAAA6H,CAAS7qC,GAIL,OAHIA,GACAA,EAAO6xB,YAAYrqC,KAAKw7C,SAErBx7C,IACV,EAEL,MAAMsjD,kCAAkCnD,kBACpC,WAAAtgD,CAAY27C,EAAShjC,GAEbrL,MADAquC,GAIM,WAHShjC,EAKtB,CACD,IAAAjY,CAAKC,GAED,OADAR,KAAKw7C,QAAQj7C,KAAOC,EACbR,IACV,CACD,IAAAynB,CAAKA,GAED,OADAznB,KAAKw7C,QAAQ/zB,KAAOA,EACbznB,IACV,CACD,IAAAyiB,CAAKA,GAED,OADAziB,KAAKw7C,QAAQ/4B,KAAOA,EACbziB,IACV,CACD,KAAAQ,CAAMA,GAEF,OADAR,KAAKw7C,QAAQh7C,MAAQA,EACdR,IACV,EAEL,MAAMujD,+BAA+BpD,kBACjC,WAAAtgD,CAAY27C,EAAShjC,GAEbrL,MADAquC,GAIM,QAHShjC,EAKtB,CACD,IAAAjY,CAAKC,GAED,OADAR,KAAKw7C,QAAQj7C,KAAOC,EACbR,IACV,CACD,IAAAiX,CAAKzW,GAED,OADAR,KAAKw7C,QAAQvkC,KAAOzW,EACbR,IACV,CACD,IAAAwa,CAAKha,GAED,OADAR,KAAKw7C,QAAQhhC,KAAOha,EACbR,IACV,CACD,KAAAQ,CAAMA,GAUF,OATIA,aAAiBgC,KACjBxC,KAAKw7C,QAAQgI,YAAchjD,EAEL,iBAAVA,EACZR,KAAKw7C,QAAQiI,cAAgBjjD,EAG7BR,KAAKw7C,QAAQh7C,MAAQA,EAElBR,IACV,CACD,IAAAkY,CAAKwrC,GAED,OArSR,SAASxrC,KAAKyrC,EAAOD,GACjB,MAAM1tC,EAAI,CAAE,EAAG,QAASvC,EAAG,SACrByE,EAAOwrC,EAAYziD,MAAM,IAuEzB2iD,aAAgBtkB,IAClB,GAAe,UAAXA,EAAEroB,MAAoC,KAAhB0sC,EAAMnjD,MAC5B,OACJ,IAAIqjD,EAAO,GACPC,EAAiBH,EAAMI,eAC3B7rC,EAAKX,SAAQ,CAACysC,EAAI39C,KACd,GAAI2P,EAAEguC,GAAK,CACP,IAAIjwB,EAAI,IAAIvS,OAAOxL,EAAEguC,GAAK,KAAKC,KAAKN,EAAMnjD,MAAM0W,OAAO7Q,IACvDw9C,EAAKp/C,KAAKsvB,EAAI4vB,EAAMnjD,MAAM0W,OAAO7Q,GAAS,IAC7C,MAEGw9C,EAAKp/C,KAAKu/C,EACb,IAELL,EAAMnjD,MAAQqjD,EAAKtiD,KAAK,IACxBoiD,EAAMI,eAAiBJ,EAAMO,aAAeJ,CAAc,EAE9DH,EAAMhR,iBAAiB,WAvFCrT,IAEpB,GAAkB,IAAdA,EAAE6kB,SAA+B,KAAd7kB,EAAE6kB,QAAgB,CACrC7kB,EAAE8kB,iBACF,IAAIP,EAAO,GACPC,EAAiBH,EAAMI,eAC3B,GAAsB,GAAlBD,EACA,OACJ,IAAIO,EAAYP,EACZQ,GAAa,EACjB,IAAK,IAAIj+C,EAAQ6R,EAAKtW,OAAS,EAAGyE,GAAS,EAAGA,IAAS,CACnD,MAAM29C,EAAK9rC,EAAK7R,GAChB,GAAI2P,EAAEguC,GAAK,CACP,IAAIjwB,EAAI,IAAIvS,OAAOxL,EAAEguC,GAAK,KAAKC,KAAKN,EAAMnjD,MAAM0W,OAAO7Q,IACnD0tB,GAAK1tB,GAASy9C,EAAiB,IAC/BQ,GAAa,GAEbj+C,IAAUy9C,EAAiB,GAC3BO,IACJR,EAAKp/C,KAAKsvB,GAAK1tB,GAASy9C,EAAiB,EACnCH,EAAMnjD,MAAM0W,OAAO7Q,GACnB,IACT,MAEOA,IAAUg+C,EAAY,GACtBA,IACAP,EAAiB,IAAMz9C,GACvBy9C,IACJD,EAAKp/C,KAAKu/C,EAEjB,CACDL,EAAMnjD,MAAS8jD,EAAuC,GAA1BT,EAAK1rC,UAAU5W,KAAK,IAChDoiD,EAAMI,eAAiBJ,EAAMO,aAAeG,EAAY,EAAI,EAAIA,EAChE,MAAMr6B,EAAQ1iB,SAAS20C,YAAY,SACnCjyB,EAAMkyB,UAAU,SAAS,GAAM,GAC/ByH,EAAMY,cAAcv6B,EACvB,KAoDL25B,EAAMhR,iBAAiB,YAlDErT,IACrB,MAAMklB,EAAO9hD,OAAO+hD,aAAanlB,EAAEolB,UACnC,GAAIF,EAAM,CACNllB,EAAE8kB,iBACF,IAAIP,EAAO,GACPE,EAAiBJ,EAAMI,eACvBM,EAAYN,EAChB7rC,EAAKX,SAAQ,CAACysC,EAAI39C,KACd,GAAI2P,EAAEguC,GAAK,CACP,MAAM56C,EAAM/C,GAAS09C,EACfJ,EAAMnjD,MAAM0W,OAAO7Q,GACnBm+C,EACN,IAAIzwB,EAAI,IAAIvS,OAAOxL,EAAEguC,GAAK,KAAKC,KAAK76C,GACpCy6C,EAAKp/C,KAAKsvB,EAAI3qB,EAAK,KACf2qB,GAAKgwB,IAAmB19C,GACxBg+C,GACP,MAEGR,EAAKp/C,KAAKu/C,GACNK,IAAch+C,GACdg+C,IACAN,IAAmB19C,GACnB09C,GACP,IAELJ,EAAMnjD,MAAQqjD,EAAKtiD,KAAK,IACxBoiD,EAAMI,eAAiBJ,EAAMO,aAAeG,EAC5C,MAAMr6B,EAAQ1iB,SAAS20C,YAAY,SACnCjyB,EAAMkyB,UAAU,SAAS,GAAM,GAC/ByH,EAAMY,cAAcv6B,EACvB,KAqBL25B,EAAMhR,iBAAiB,QAASiR,cAChCD,EAAMhR,iBAAiB,QAASiR,aACpC,CAsMQ1rC,CAAKlY,KAAKw7C,QAASkI,GACZ1jD,IACV,EAEL,MAAM2kD,gCAAgCxE,kBAClC,WAAAtgD,CAAY27C,EAAShjC,GAEbrL,MADAquC,GAIM,SAHShjC,EAKtB,CACD,SAAAosC,CAAUpkD,GACN,MAAMqkD,EAASv9C,SAAS8iC,cAAc,UAWtC,MAVqB,iBAAV5pC,GACPqkD,EAAOrkD,MAAQA,EACfqkD,EAAOjC,UAAYpiD,IAGnBqkD,EAAOrkD,MAAQA,EAAMA,MACrBqkD,EAAOjC,UAAYpiD,EAAMogD,OAASpgD,EAAMA,MACxCqkD,EAAOC,SAAWtkD,EAAMskD,WAAY,GAExC9kD,KAAKw7C,QAAQnR,YAAYwa,GAClB7kD,IACV,CACD,KAAAQ,CAAMA,GAEF,OADAR,KAAKw7C,QAAQh7C,MAAQA,EACdR,IACV,EAEL,SAASugD,MAAMzjC,EAAKtE,GAChB,MAAY,QAARsE,GAAiBA,aAAeioC,gBAGxB,SAARjoC,GAAkBA,aAAekoC,iBAGpB,MAARloC,GAAeA,aAAemoC,mBAGtB,WAARnoC,GAAoBA,aAAeooC,mBAG3B,QAARpoC,GAAiBA,aAAeqoC,iBAX9B,IAAIhF,kBAAkBrjC,EAAKtE,GAcrB,UAARsE,GAAmBA,aAAesoC,iBAChC,IAAI7B,uBAAuBzmC,aAAesoC,iBAAmBtoC,EAAM,KAAMtE,GAEnE,aAARsE,GAAsBA,aAAeuoC,oBACnC,IAAI/B,0BAA0BxmC,aAAeuoC,oBAAsBvoC,EAAM,KAAMtE,GAEzE,WAARsE,GAAoBA,aAAewoC,kBACjC,IAAIX,wBAAwB7nC,aAAewoC,kBAAoBxoC,EAAM,KAAMtE,GAE/E,IAAI2nC,kBAAkBrjC,EAAKtE,EACtC,CAEA,MAAM+sC,EAA4C,oBAAfC,WACnC,IAAIC,GACJ,SAAWA,GACPA,EAAiB,KAAI,OACrBA,EAAkB,MAAI,QACtBA,EAAmB,OAAI,QAC1B,CAJD,CAIGA,IAAeA,EAAa,CAAE,IACjC,MAAMC,YACF,WAAA7lD,CAAYwC,EAAMsjD,EAAWC,GACzB5lD,KAAK6lD,WAAaJ,EAAWK,MAC7B9lD,KAAK+lD,MAAQ,EACb/lD,KAAKgmD,MAAQ,EACbhmD,KAAKqC,KAAOA,EACZrC,KAAK2lD,UAAYA,EACjB3lD,KAAKK,KAAOgC,EAAKhC,KACjBL,KAAK4lD,YAAcA,EACfA,GAAeA,aAAuBK,aACtCjmD,KAAK+lD,MAAQH,EAAYG,MACrB/lD,KAAKgmD,MAAQJ,EAAYI,OAE7BJ,GAAeL,GAAuBK,aAAuBJ,YAC1DI,EAAYM,QAAQ,KACvBlmD,KAAK+lD,MAAQH,EAAYM,QAAQ,GAAGH,MAChC/lD,KAAKgmD,MAAQJ,EAAYM,QAAQ,GAAGF,MAE/C,EAEL,MAAMG,SACF,WAAAtmD,CAAYq9B,GACJA,GAAMA,aAAc+oB,aACpBjmD,KAAKorB,EAAI8R,EAAG6oB,MACR/lD,KAAKg9C,EAAI9f,EAAG8oB,OAEhB9oB,GAAMqoB,GAAuBroB,aAAcsoB,YAActoB,EAAGgpB,QAAQ,KACpElmD,KAAKorB,EAAI8R,EAAGgpB,QAAQ,GAAGH,MACnB/lD,KAAKg9C,EAAI9f,EAAGgpB,QAAQ,GAAGF,MAElC,EA6TL,MAAMI,EAAgB,IA3TtB,MAAMC,YACF,WAAAxmD,GACIG,KAAKsmD,MAAQ,EACbtmD,KAAKumD,cAAgB,KACrBvmD,KAAK2lD,UAAY,KACjB3lD,KAAKwmD,sBAAuB,EAC5BxmD,KAAKymD,kBAAoB,KACzBzmD,KAAK0mD,qBAAuB,GAC5B1mD,KAAK2mD,0BAA4B,EACjC3mD,KAAK6lD,WAAaJ,EAAW/4B,KAC7B1sB,KAAK4mD,YAAc,YACnB5mD,KAAK6mD,mBAAqB,eAC7B,CACD,qBAAAC,CAAsB/mD,GAClB,MAAMy7C,EAAUz7C,EAAWy7C,QAC3B,IAAKA,EACD,MAAMxuC,MAAM,gDAEhBwuC,EAAQuL,YAAc,WAClB,OAAO,CACnB,EACQ,MAAMC,eAAkB9pB,IACpB,GAAIse,EAAQyL,aAAajnD,KAAK6mD,oBAC1B,OAEJ3pB,EAAGknB,iBACClnB,aAAc+oB,YACd/oB,EAAGgqB,kBAEP,MAAMC,EAAiB,IAAIhB,SAASjpB,IAChCt2B,KAAKwgD,IAAID,EAAe/7B,EAAIprB,KAAKymD,kBAAkBr7B,GAAKprB,KAAKsmD,OAC1D1/C,KAAKwgD,IAAID,EAAenK,EAAIh9C,KAAKymD,kBAAkBzJ,GAAKh9C,KAAKsmD,QAChEe,cAAcnqB,EACjB,EAECoqB,uBAA0BpqB,IAC5Bl9B,KAAKunD,sBAAsBrqB,EAAG,EAE5BmqB,cAAiBnqB,IACnBA,EAAGknB,iBACHlnB,EAAGgqB,kBACH1L,EAAQ3G,oBAAoB,YAAamS,gBACzCxL,EAAQ3G,oBAAoB,YAAamS,gBACzChnD,KAAKwmD,sBAAuB,EACxBzmD,EAAWynD,iBACXznD,EAAWynD,kBACfxnD,KAAK2lD,UAAYpF,MAAM,OAClBa,SAAS,WAAY,YACrBA,SAAS,UAAW,SACpBgC,QACL97C,SAASD,KAAKgjC,YAAYrqC,KAAK2lD,WAC/B3lD,KAAK2lD,UAAUtb,YAAYmR,EAAQiM,WAAU,IACzC1nD,EAAW2nD,UACX3nD,EAAW2nD,SAAS1nD,KAAK2lD,WAE7B3lD,KAAK6lD,WAAaJ,EAAW/4B,KAC7B1sB,KAAK2nD,aAAa3nD,KAAK6lD,YACvB7lD,KAAK4nD,iBAAiB5nD,KAAK6lD,YAC3B7lD,KAAKumD,cAAgB,CACjB/K,QAASA,EACTqM,MAAO9nD,EAAW8nD,MAClBxnD,KAAMN,EAAWM,MAErBL,KAAK8nD,uBAAuB5qB,GAC5B,MAAMlT,EAAQ,IAAI07B,YAAY1lD,KAAKumD,cAAevmD,KAAK2lD,UAAWzoB,GAClElT,EAAM67B,WAAa7lD,KAAK6lD,WACpB9lD,EAAWgoD,aACXhoD,EAAWgoD,YAAY/9B,GAEvBhqB,KAAK6lD,aAAe77B,EAAM67B,aAC1B7lD,KAAK6lD,WAAa77B,EAAM67B,WACxB7lD,KAAK4nD,iBAAiB5nD,KAAK6lD,aAE/Bv+C,SAASqrC,iBAAiB,YAAa2U,wBAAwB,GAC/DhgD,SAASqrC,iBAAiB,YAAa2U,wBAAwB,EAAK,EAElEU,kBAAqB9qB,IACnBqoB,GAAuBroB,aAAcsoB,YACrCtoB,EAAGknB,iBAEPpkD,KAAKymD,kBAAoB,IAAIN,SAASjpB,GACtCse,EAAQ7I,iBAAiB,YAAaqU,gBACtCxL,EAAQ7I,iBAAiB,YAAaqU,gBACtC1/C,SAASqrC,iBAAiB,UAAWsV,iBACrC3gD,SAASqrC,iBAAiB,WAAYsV,gBAAgB,EAE1DzM,EAAQ7I,iBAAiB,YAAaqV,mBACtCxM,EAAQ7I,iBAAiB,aAAcqV,mBACvC,MAAMC,gBAAmB/qB,IACrBl9B,KAAKymD,kBAAoB,KACzBjL,EAAQ3G,oBAAoB,YAAamS,gBACzCxL,EAAQ3G,oBAAoB,YAAamS,gBACzC1/C,SAASutC,oBAAoB,YAAayS,wBAAwB,GAClEhgD,SAASutC,oBAAoB,YAAayS,wBAAwB,GAC9DtnD,KAAKumD,eACL2B,YAAYhrB,EACf,EAECgrB,YAAehrB,IACjB,IACI,GAAIl9B,KAAK2mD,0BAA4B,EAAG,CACpC,MAAMwB,EAAenoD,KAAK0mD,qBAAqB1mD,KAAK2mD,0BAC9CyB,EAAY,CACd5M,QAAS2M,EAAa3M,QACtB6M,OAAQF,EAAaE,OACrBhoD,KAAM8nD,EAAa9nD,MAEjB2pB,EAAQ,IAAI07B,YAAY1lD,KAAKumD,cAAevmD,KAAK2lD,UAAWzoB,GAClE,IACQkrB,EAAUC,OAAOviD,QAAQ9F,KAAKumD,cAAcsB,QAAU,GACnD7nD,KAAK6lD,aAAeJ,EAAWK,QAClC9lD,KAAKwmD,sBAAuB,EACxB2B,EAAaG,QACbH,EAAaG,OAAOF,EAAWp+B,GAG1C,CACO,QACAm+B,EAAaI,aACbJ,EAAaI,YAAYH,EAAWp+B,EAE3C,CACJ,CACJ,CACO,QACJ,IACI,MAAMA,EAAQ,IAAI07B,YAAY1lD,KAAKumD,cAAevmD,KAAK2lD,UAAWzoB,GAClElT,EAAM3pB,KAAKmmD,qBAAuBxmD,KAAKwmD,qBACnCzmD,EAAWyoD,WACXzoD,EAAWyoD,UAAUx+B,EAE5B,CACO,QACJhqB,KAAKumD,cAAgB,KACjBvmD,KAAK2lD,WAAa3lD,KAAK2lD,UAAUvF,eACjCpgD,KAAK2lD,UAAUvF,cAAcvV,YAAY7qC,KAAK2lD,WAElD3lD,KAAK2lD,UAAY,KACjB3lD,KAAKwmD,sBAAuB,EAC5Bl/C,SAASutC,oBAAoB,UAAWoT,iBACxC3gD,SAASutC,oBAAoB,WAAYoT,gBAC5C,CACJ,EAER,CACD,qBAAAQ,CAAsB1oD,GAElB,IADgBA,EAAWy7C,QAEvB,MAAMxuC,MAAM,kDAEhBhN,KAAK0mD,qBAAqBjiD,KAAK1E,EAClC,CACD,mBAAA2oD,CAAoBC,GAChB,MAAMC,EAAQ5oD,KAAK0mD,qBACdtkD,QAAOgM,GAAQA,IAASu6C,GACtBv6C,EAAKotC,SAAWmN,IACvB,GAAIC,EACA,IAAK,MAAMx6C,KAAQw6C,EACfvpD,EAAM+G,gBAAgBpG,KAAK0mD,qBAAsBt4C,EAG5D,CACD,qBAAAm5C,CAAsBrqB,GAMlB,GALIA,aAAc+oB,YACd/oB,EAAGknB,iBAEPlnB,EAAGgqB,kBACHlnD,KAAK8nD,uBAAuB5qB,IACU,GAAlCl9B,KAAK2mD,yBAAgC,CACrC,IAAK,IAAI/hD,EAAI,EAAGA,EAAI5E,KAAK0mD,qBAAqB9kD,OAAQgD,IAAK,CACvD,MAAM7E,EAAaC,KAAK0mD,qBAAqB9hD,GAC7C,GAAI5E,KAAK6oD,qBAAqB9oD,EAAWy7C,QAASte,GAAK,CACnDl9B,KAAK2mD,yBAA2B/hD,EAChC,KACH,CACJ,CACG5E,KAAK2mD,0BAA4B,GACjC3mD,KAAK8oD,eAAe5rB,EAE3B,KACI,CACD,MAAMn9B,EAAaC,KAAK0mD,qBAAqB1mD,KAAK2mD,0BAC9C3mD,KAAK+oD,qBAAqBhpD,EAAWy7C,QAASte,KAC9Cl9B,KAAKgpD,eAAe9rB,GACpBl9B,KAAK2mD,0BAA4B,EAExC,CACD,GAAI3mD,KAAK2mD,0BAA4B,EAAG,CACpC,MAAM5mD,EAAaC,KAAK0mD,qBAAqB1mD,KAAK2mD,0BAC5CyB,EAAY,CACd5M,QAASz7C,EAAWy7C,QACpB6M,OAAQtoD,EAAWsoD,OACnBhoD,KAAMN,EAAWM,MAErB,GAAI+nD,EAAUC,OAAOviD,QAAQ9F,KAAKumD,cAAcsB,QAAU,EAAG,CACzD,MAAM79B,EAAQ,IAAI07B,YAAY1lD,KAAKumD,cAAevmD,KAAK2lD,UAAWzoB,GAClElT,EAAM67B,WAAa7lD,KAAK6lD,WACpB9lD,EAAWkpD,YACXlpD,EAAWkpD,WAAWb,EAAWp+B,EAExC,CACJ,CACJ,CACD,YAAA29B,CAAa9B,GACT,OAAQA,GACJ,KAAKJ,EAAWK,MACZ9lD,KAAKkpD,eAAelpD,KAAK2lD,UAAW,YACpC,MACJ,KAAKF,EAAW0D,OACZnpD,KAAKkpD,eAAelpD,KAAK2lD,UAAW,WACpC,MACJ,QACI3lD,KAAKkpD,eAAelpD,KAAK2lD,UAAW,YAG/C,CACD,gBAAAiC,CAAiB/B,GAIb,OAHA7lD,KAAK2lD,UAAU9D,UAAUE,OAAO,GAAG/hD,KAAK4mD,qBACxC5mD,KAAK2lD,UAAU9D,UAAUE,OAAO,GAAG/hD,KAAK4mD,sBACxC5mD,KAAK2lD,UAAU9D,UAAUE,OAAO,GAAG/hD,KAAK4mD,oBAChCf,GACJ,KAAKJ,EAAWK,MACZ9lD,KAAK2lD,UAAU9D,UAAUn8B,IAAI,GAAG1lB,KAAK4mD,qBACrC,MACJ,KAAKnB,EAAW/4B,KACZ1sB,KAAK2lD,UAAU9D,UAAUn8B,IAAI,GAAG1lB,KAAK4mD,oBACrC,MACJ,KAAKnB,EAAW0D,OACZnpD,KAAK2lD,UAAU9D,UAAUn8B,IAAI,GAAG1lB,KAAK4mD,sBACrC,MACJ,QACI5mD,KAAK2lD,UAAU9D,UAAUn8B,IAAI,GAAG1lB,KAAK4mD,oBAGhD,CACD,cAAAsC,CAAe1N,EAAS4N,GACpB,GAAI5N,EAAS,CACTA,EAAQ5jC,MAAMwxC,OAASA,EACvB,IAAK,IAAIxkD,EAAI,EAAGA,EAAI42C,EAAQ6N,SAASznD,OAAQgD,IACzC5E,KAAKkpD,eAAe1N,EAAQ6N,SAASzkD,GAAIwkD,EAEhD,CACJ,CACD,sBAAAtB,CAAuB5qB,GACnB,GAAIl9B,KAAK2lD,UAAW,CAChB,MAAMl6B,EAAM,IAAI06B,SAASjpB,GACzBl9B,KAAK2lD,UAAU/tC,MAAM6kC,IAAOhxB,EAAIuxB,EAAIh9C,KAAK2lD,UAAUnE,aAAe,EAAK,KACvExhD,KAAK2lD,UAAU/tC,MAAMglC,KAAQnxB,EAAIL,EAAIprB,KAAK2lD,UAAUpE,YAAc,EAAK,IAC1E,CACJ,CACD,cAAAuH,CAAe5rB,GACX,MAAMn9B,EAAaC,KAAK0mD,qBAAqB1mD,KAAK2mD,0BAC5CyB,EAAY,CACd5M,QAASz7C,EAAWy7C,QACpB6M,OAAQtoD,EAAWsoD,OACnBhoD,KAAMN,EAAWM,MAErB,GAAI+nD,EAAUC,OAAOviD,QAAQ9F,KAAKumD,cAAcsB,QAAU,EAAG,CACzD,MAAM79B,EAAQ,IAAI07B,YAAY1lD,KAAKumD,cAAevmD,KAAK2lD,UAAWzoB,GAClElT,EAAM67B,WAAaJ,EAAWK,MAC1B/lD,EAAWupD,aACXvpD,EAAWupD,YAAYlB,EAAWp+B,GAEtChqB,KAAK6lD,WAAa77B,EAAM67B,WACxB7lD,KAAK2nD,aAAa3nD,KAAK6lD,YACvB7lD,KAAK4nD,iBAAiB5nD,KAAK6lD,WAC9B,MAEO7lD,KAAK6lD,aAAeJ,EAAW0D,SAC/BnpD,KAAK6lD,WAAaJ,EAAW/4B,KAC7B1sB,KAAK2nD,aAAa3nD,KAAK6lD,YACvB7lD,KAAK4nD,iBAAiB5nD,KAAK6lD,YAGtC,CACD,cAAAmD,CAAe9rB,GACX,MAAMn9B,EAAaC,KAAK0mD,qBAAqB1mD,KAAK2mD,0BAC5CyB,EAAY,CACd5M,QAASz7C,EAAWy7C,QACpB6M,OAAQtoD,EAAWsoD,OACnBhoD,KAAMN,EAAWM,MAErB,GAAI+nD,EAAUC,OAAOviD,QAAQ9F,KAAKumD,cAAcsB,QAAU,EAAG,CACzD,MAAM79B,EAAQ,IAAI07B,YAAY1lD,KAAKumD,cAAevmD,KAAK2lD,UAAWzoB,GAClElT,EAAM67B,WAAaJ,EAAW/4B,KAC1B3sB,EAAWwoD,aACXxoD,EAAWwoD,YAAYH,EAAWp+B,GAEtChqB,KAAK6lD,WAAa77B,EAAM67B,WACxB7lD,KAAK2nD,aAAa3nD,KAAK6lD,YACvB7lD,KAAK4nD,iBAAiB5nD,KAAK6lD,WAC9B,CACJ,CACD,oBAAAgD,CAAqBT,EAAWlrB,GAC5B,MAAMqsB,EAAexM,sBAAsBqL,GACrC38B,EAAM,IAAI06B,SAASjpB,GACzB,QAAIzR,EAAIuxB,EAAIuM,EAAavM,GAAKvxB,EAAIuxB,EAAIuM,EAAavM,EAAIoL,EAAU5G,iBAG7D/1B,EAAIL,EAAIm+B,EAAan+B,GAAKK,EAAIL,EAAIm+B,EAAan+B,EAAIg9B,EAAU7G,YAIpE,CACD,oBAAAwH,CAAqBX,EAAWlrB,GAC5B,MAAMqsB,EAAexM,sBAAsBqL,GACrC38B,EAAM,IAAI06B,SAASjpB,GACzB,QAAIzR,EAAIuxB,EAAIuM,EAAavM,GAAKvxB,EAAIuxB,EAAIuM,EAAavM,EAAIoL,EAAU5G,cAC1D/1B,EAAIL,EAAIm+B,EAAan+B,GAAKK,EAAIL,EAAIm+B,EAAan+B,EAAIg9B,EAAU7G,YAIvE,GAKL,IAAIiI,GACJ,SAAWA,GACPA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAAwB,KAAI,GAAK,OACnDA,EAAkBA,EAAyB,MAAI,GAAK,OACvD,CAJD,CAIGA,IAAsBA,EAAoB,CAAE,IAM/C,IAAIC,GACJ,SAAWA,GACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAuB,MAAI,GAAK,OACnD,CALD,CAKGA,IAAoBA,EAAkB,CAAE,IAa3C,MAAMC,WACF,WAAA7pD,CAAYopB,EAAQ0gC,EAAMC,GAAW,GACjC5pD,KAAK6pD,OAAS,KACd7pD,KAAK8pD,aAAe,KAEpB9pD,KAAK+pD,MAAQN,EAAgBO,KAC7BhqD,KAAKshD,WAAY,EACjBthD,KAAK4pD,UAAW,EAChB5pD,KAAKiqD,WAAahhC,EAClBjpB,KAAK2pD,KAAOA,EACZ,MAAMO,EAAeP,EAAKl8C,QAAQ08C,cAAgB,CAAA,EAC9ClhC,GACIA,EAAOrR,MAAMwyC,YACbpqD,KAAK+pD,MAzBrB,SAASM,aAAaD,GAClB,OAAQA,GACJ,KAAK7qD,EAAgB+qD,KACjB,OAAOb,EAAgBc,KAC3B,KAAKhrD,EAAgBirD,OACjB,OAAOf,EAAgBgB,OAC3B,KAAKlrD,EAAgBmrD,MACjB,OAAOjB,EAAgBkB,MAC3B,QACI,OAAOlB,EAAgBO,KAEnC,CAc6BK,CAAaphC,EAAOrR,MAAMwyC,YAE3CpqD,KAAKoH,MAAS8iD,GAAgBA,EAAalqD,KAAKiX,MAASizC,EAAalqD,KAAKiX,MAAM2zC,QApChE,IAqCjB5qD,KAAK8pD,aAAe7gC,EAAOtQ,aAEtBixC,IACL5pD,KAAK4pD,UAAW,EAChB5pD,KAAKoH,MAAS8iD,GAAgBA,EAAaW,aAAgBX,EAAaW,aAAaD,QAxC3E,GAyCV5qD,KAAK6pD,OAAS,GAErB,CACD,SAAI5kC,GACA,OAAOjlB,KAAK6pD,OAAS7pD,KAAK6pD,OAAS7pD,KAAK4pD,SAAW,GAAK5pD,KAAKiqD,WAAWhlC,KAC3E,CAED,SAAIA,CAAMzkB,GACNR,KAAK6pD,OAAS7pD,KAAKilB,KACtB,CAED,eAAItM,GACA,OAAO3Y,KAAK8pD,YACf,CACD,QAAI7yC,GACA,OAAOjX,KAAKiqD,WAAajqD,KAAKiqD,WAAWhzC,KAAO,IACnD,EAEL,MAAM6zC,eACF,WAAAjrD,CAAYkrD,EAAYpB,GACpB3pD,KAAK6f,MAAQ,GACb7f,KAAK2pD,KAAOA,EACZ3pD,KAAKgrD,KAAKD,EACb,CACD,IAAAC,CAAKD,EAAYE,GAAe,GAC5BjrD,KAAKygB,QACL,MAAMyqC,EAAY,IAAIxB,WAAW,KAAM1pD,KAAK2pD,MAAM,GAKlD,GAJA3pD,KAAK0lB,IAAIwlC,GACJD,IACDC,EAAU5J,WAAY,GAEtByJ,EACA,IAAK,IAAI9hC,KAAU8hC,EAAWjlC,WAAY,CACtC,MAAMF,EAAM,IAAI8jC,WAAWzgC,EAAQjpB,KAAK2pD,MACpC3pD,KAAK2pD,KAAKl8C,QAAQ09C,kBAClBnrD,KAAK2pD,KAAKl8C,QAAQ09C,iBAAiBvlC,GAEvC5lB,KAAK0lB,IAAIE,EACZ,CAER,CACD,SAAIH,GACA,OAAOzlB,KAAK6f,MAAMje,MACrB,CACD,GAAA8jB,CAAIE,GACA,MAAMvf,EAAQrG,KAAK6f,MAAMje,OAEzB,OADA5B,KAAK6f,MAAMpb,KAAKmhB,GACTvf,CACV,CACD,GAAAyH,CAAIzH,EAAOuf,GACHvf,GAAS,GAAKA,EAAQrG,KAAK6f,MAAMje,SACjC5B,KAAK6f,MAAMxZ,GAASuf,EAE3B,CACD,IAAAG,CAAKH,EAAKI,GACN,IAAIC,EAAWjmB,KAAK6f,MAAM/Z,QAAQ8f,GAC9BK,GAAY,GAAKA,GAAYD,GAC7B3mB,EAAM2G,cAAchG,KAAK6f,MAAOoG,EAAUD,EACjD,CACD,GAAAhiB,CAAIqC,GACA,OAAIA,GAAS,GAAKA,EAAQrG,KAAK6f,MAAMje,OAC1B5B,KAAK6f,MAAMxZ,GAGX,IAEd,CAID,QAAAyf,GACI,OAAO9lB,KAAK6f,KACf,CACD,QAAAuG,CAAS/f,GACLrG,KAAKgE,IAAIqC,GACTrG,KAAK6f,MAAM1Z,OAAOE,EAAO,EAE5B,CACD,KAAAoa,GACIzgB,KAAK6f,MAAQ,EAEhB,EAGL,MAAMurC,EAAc,MACdC,EAAa,aACnB,IAAIC,GACJ,SAAWA,GACPA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA2B,SAAI,GAAK,WACrDA,EAAiBA,EAAuB,KAAI,GAAK,MACpD,CALD,CAKGA,IAAqBA,EAAmB,CAAE,IAC7C,MAAMC,0BAA4B,CAAC/qD,EAAOyoB,EAAQuiC,EAAkBC,KAChE,MAAMluC,EAAO/c,EAAQA,EAAM+T,WAAW1J,QAAQ,MAAO,MAAa,GAClE2gD,EAAiB9I,UAAYnlC,EAC7BiuC,EAAiB5K,MAAQrjC,EACrB0L,EAAO8gC,OAASN,EAAgBO,MAChCwB,EAAiB3J,UAAUn8B,IAAI,GAAG0lC,0BACrC,EAECM,0BAA4B,CAAClrD,EAAOyoB,EAAQuiC,EAAkBC,KAChE,IAAIE,GAAYnrD,GAAS,IAAI+T,WACT,iBAAT/T,IAGHmrD,EAFA1iC,EAAOghC,YAAchhC,EAAOghC,WAAW5tC,eACpCgvC,EAAWpH,KAAKh7B,EAAOghC,WAAW5tC,eAC1B4M,EAAOghC,WAAW5tC,cAAcxR,QAAQwgD,GAAY,CAACpe,EAAGx2B,IACxDnX,EAAKyX,YAAYvW,EAAOiW,KAIxBjW,EAAMiX,kBAGzB+zC,EAAiB9I,UAAYiJ,EAC7BH,EAAiB5K,MAAQ+K,EACrB1iC,EAAO8gC,OAASN,EAAgBO,MAChCwB,EAAiB3J,UAAUn8B,IAAI,GAAG0lC,2BACrC,EAECQ,4BAA8B,CAACprD,EAAOyoB,EAAQuiC,EAAkBC,KAClE,MAAMI,EAAmD,kBAA1CnqD,OAAO4mB,UAAU/T,SAASu3C,KAAKtrD,GAC9C,IAAImrD,GAAYnrD,GAAS,IAAI+T,WAC7B,GAAIs3C,EACA,GAAI5iC,EAAOghC,YAAchhC,EAAOghC,WAAW5tC,eACpCgvC,EAAWpH,KAAKh7B,EAAOghC,WAAW5tC,eACrCsvC,EAAW1iC,EAAOghC,WAAW5tC,cAAcxR,QAAQwgD,GAAY,CAACpe,EAAGx2B,IACxDnX,EAAKuX,gBAAgBrW,EAAOyoB,EAAOhS,KAAMR,SAGnD,CACD,MAAMlD,EAASjU,EAAK2S,mBACd85C,EAAc,CAAEjgD,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,WAClE,OAAQid,EAAOhS,MACX,KAAKtY,EAAS6D,KACVmpD,EAAWnrD,EAAMsS,mBAAmBS,GACpC,MACJ,KAAK5U,EAAS4D,KACVopD,EAAWnrD,EAAMwS,mBAAmBO,EAAQw4C,GAC5C,MACJ,KAAKptD,EAASK,SACV2sD,EAAW,GAAGnrD,EAAMsS,mBAAmBS,MAAW/S,EAAMwS,mBAAmBO,EAAQw4C,KAG9F,CAELP,EAAiB9I,UAAYiJ,EAC7BH,EAAiB5K,MAAQ+K,EACrB1iC,EAAO8gC,OAASN,EAAgBO,MAChCwB,EAAiB3J,UAAUn8B,IAAI,GAAG0lC,2BACrC,EAECY,wBAA0B,CAACxrD,EAAOyoB,EAAQuiC,EAAkBC,KAC9D,GAAIxiC,EAAOghC,YAAchhC,EAAOghC,WAAW5tC,eACpCgvC,EAAWpH,KAAKh7B,EAAOghC,WAAW5tC,eAAgB,CACrD,MAAMsvC,EAAW1iC,EAAOghC,WAAW5tC,cAAcxR,QAAQwgD,GAAY,CAACpe,EAAGx2B,IAC9DnX,EAAK+Y,aAAa7X,EAAOiW,KAEpC,OAAO80C,0BAA0BI,EAAU1iC,EAAQuiC,EACtD,CAEGA,EAAiB3J,UAAUn8B,IAAI,GAAG0lC,qBAClCI,EAAiB3J,UAAUn8B,IAAI,GAAG0lC,KAAe5qD,EAAQ,kBAAoB,qBAChF,EAEL,MAAMyrD,sBACF,WAAApsD,CAAY4N,GACRzN,KAAKksD,UAAY,GACjBlsD,KAAKmsD,iBAAmB,GACxBnsD,KAAKosD,iBAAiB,gBAAiBb,2BACvCvrD,KAAKqsD,mBAAmBf,EAAiBgB,OAAQf,2BACjDvrD,KAAKosD,iBAAiB,gBAAiBV,2BACvC1rD,KAAKqsD,mBAAmBf,EAAiBiB,OAAQb,2BACjD1rD,KAAKosD,iBAAiB,kBAAmBR,6BACzC5rD,KAAKqsD,mBAAmBf,EAAiBkB,SAAUZ,6BACnD5rD,KAAKosD,iBAAiB,cAAeJ,yBACrChsD,KAAKqsD,mBAAmBf,EAAiBmB,KAAMT,wBAClD,CACD,kBAAAU,CAAmBC,GACf,MAAMC,EAAW5sD,KAAK6sD,YAAYF,GAClC,OAAO3sD,KAAKmsD,iBAAiBb,EAAiBsB,GACjD,CACD,wBAAAE,CAAyBC,GACrB,OAAO/sD,KAAKmsD,iBAAiBb,EAAiByB,GACjD,CACD,kBAAAV,CAAmBO,EAAUlF,GACrBA,IACA1nD,KAAKmsD,iBAAiBb,EAAiBsB,IAAalF,EAE3D,CACD,WAAAsF,CAAYzsD,GACR,OAAOP,KAAKksD,UAAU3rD,EACzB,CACD,gBAAA6rD,CAAiB7rD,EAAMmnD,GACnB1nD,KAAKksD,UAAU3rD,GAAQmnD,CAC1B,CACD,WAAAmF,CAAY5+C,GACR,OAAQA,GACJ,KAAKtP,EAASyE,QACd,KAAKzE,EAASmE,KACd,KAAKnE,EAASoE,KACd,KAAKpE,EAASwE,SACd,KAAKxE,EAASuE,MACd,KAAKvE,EAASqE,MACd,KAAKrE,EAASsE,MACV,OAAOqoD,EAAiBiB,OAC5B,KAAK5tD,EAAS6D,KACd,KAAK7D,EAASK,SACd,KAAKL,EAAS4D,KACV,OAAO+oD,EAAiBkB,SAC5B,KAAK7tD,EAAS4yB,KACV,OAAO+5B,EAAiBmB,KAC5B,QACI,OAAOnB,EAAiBgB,OAEnC,EAKL,MAAMW,SAEF,WAAAptD,CAAY4N,GAwER,GAvEAzN,KAAKktD,UAAY,MACjBltD,KAAKmtD,WAAa,CAAEllC,KAAM,EAAGD,SAAU,GAAIjB,MAAO,GAClD/mB,KAAKotD,kBAAoB,CACrBC,eAAgB,GAChBC,cAAc,GAElBttD,KAAKutD,uBAAyB,CAC1BtS,KAAM,KACNnL,UAAW,KACX0d,wBAAwB,EACxBC,iBAAiB,EACjBC,kBAAkB,EAClBC,eAAe,EACf9rC,WAAY,CACRlQ,SAAU,KACVioC,WAAY,MAEhBgU,OAAQ,CACJ92B,SAAS,EACT9O,SAAU,GACV6lC,cAAe,CAAC,GAAI,GAAI,GAAI,IAAK,MAErC1D,aAAc,CACV2D,WAAYtE,EAAkBuE,OAC9BC,cAAe,CACXlnD,IAAK,IACLD,IAAK,IACL+jD,QAAS,KAEbqD,cAAe,CACXnnD,IAAK,GACL8jD,QAAS,KAEbsD,YAAa,CACTpnD,IAAK,GACL8jD,QAAS,IAEbuD,YAAa,CACTrnD,IAAK,GACL8jD,QAAS,KAEbwD,aAAc,CACVtnD,IAAK,IACLD,IAAK,IACL+jD,QAAS,KAEbC,aAAc,CACV/jD,IAAK,GACL8jD,QAAS,KAGjByD,gBAAgB,EAChBC,kBAAmB,KACnBC,eAAe,GAEnBvuD,KAAKwuD,kBAAoB,KACzBxuD,KAAKyuD,uBAAyB,EAC9BzuD,KAAK0uD,aAAc,EACnB1uD,KAAK2uD,cAAgB,KACrB3uD,KAAK4uD,cAAgB,EACrB5uD,KAAK6uD,YAActO,MAAM,OACpBmB,SAAS,GAAG1hD,KAAKktD,8BACjB1M,gBAAgBD,MAAM,OACtB6C,SACAA,QACLpjD,KAAK8uD,iBAAmB,EACpBrhD,GAAWA,EAAQmgD,SACnBngD,EAAQmgD,OAASvuD,EAAMqF,OAAO1E,KAAKutD,uBAAuBK,OAAQngD,EAAQmgD,SAE9E5tD,KAAKyN,QAAUzN,KAAK+uD,aAAathD,GACjCzN,KAAKgvD,8BACAhvD,KAAKyN,QAAQwtC,KACd,MAAMjuC,MAAM,2DAChB,IAAKhN,KAAKyN,QAAQqiC,UACd,MAAM9iC,MAAM,gEAChBhN,KAAK8vC,UAAYriC,EAAQqiC,UACzB9vC,KAAKs8B,aAAe,IAAI5S,aAAa1pB,MACrCA,KAAKivD,kBAAoB,IAAIhD,sBAAsBx+C,GACnDzN,KAAK0iB,QAAU,IAAIooC,eAAe9qD,KAAK8vC,UAAUptB,QAAS1iB,MAC1DA,KAAKkvD,QAAQlvD,KAAKyN,QAAQwtC,MAC1Bj7C,KAAK+mC,KAAK/mC,KAAKyN,QAClB,CACD,YAAAshD,CAAathD,GACT,MAAM0hD,EAAkB9vD,EAAMwF,WAAW,CAAE,EAAE7E,KAAKutD,uBAAuBpD,aAAc18C,EAAQ08C,cACzFiF,EAAgB/vD,EAAMwF,WAAW,CAAE,EAAE7E,KAAKutD,uBAAuBK,OAAQngD,EAAQmgD,QACjFppD,EAASnF,EAAMqF,OAAO,CAAE,EAAE1E,KAAKutD,uBAAwB9/C,GAG7D,OAFAjJ,EAAO2lD,aAAegF,EACtB3qD,EAAOopD,OAASwB,EACT5qD,CACV,CACD,0BAAAwqD,GACI,MAAM9E,EAAelqD,KAAKyN,QAAQ08C,aAClC,IAAKD,EACD,OAEJ7qD,EAAMoD,qBAAqB8U,SAAQtJ,IAC/Bi8C,EAAaj8C,GAAYvM,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAE,EAAEwlD,EAAa8D,eAAgB9D,EAAaj8C,GAAU,IAGjH5O,EAAMgE,sBAAsBkU,SAAQtJ,IAChCi8C,EAAaj8C,GAAYvM,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAE,EAAEwlD,EAAa+D,eAAgB/D,EAAaj8C,GAAU,IAGjHi8C,EAAavrD,EAAS4yB,MAAQ7vB,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAA,EAAIwlD,EAAagE,aAAchE,EAAavrD,EAAS4yB,OAE/GlyB,EAAMiD,mBAAmBiV,SAAQtJ,IAC7Bi8C,EAAaj8C,GAAYvM,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAE,EAAEwlD,EAAaiE,aAAcjE,EAAaj8C,GAAU,IAG/G,MAAMohD,EAAa,IACZhwD,EAAMoD,wBACNpD,EAAMgE,yBACNhE,EAAMiD,mBACT3D,EAAS4yB,MAEblyB,EAAM6C,kBAAkBqV,SAAQtJ,IACtBA,KAAYohD,IACdnF,EAAaj8C,GAAYvM,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAE,EAAEwlD,EAAakE,cAAelE,EAAaj8C,IACrG,IAELi8C,EAAavrD,EAASG,SAAWorD,EAAakE,YACjD,CACD,OAAAc,CAAQjU,GACJ,GAAoB,iBAATA,GACP,GAAIA,EAAKr5C,OACL,GAAgB,MAAZq5C,EAAK,GACLj7C,KAAKi7C,KAAO3zC,SAASgoD,eAAerU,EAAKvlC,UAAU,QAElD,IAAgB,MAAZulC,EAAK,GAMV,MAAMjuC,MAAM,mEACiCiuC,GAPvB,CACtB,MAAMz2C,EAAS8C,SAASioD,uBAAuBtU,EAAKvlC,UAAU,IAC1DlR,EAAO5C,SACP5B,KAAKi7C,KAAOz2C,EAAO,GAC1B,CAIA,OAILxE,KAAKi7C,KAAOA,CAEnB,CAED,IAAAlU,CAAKt5B,GACGA,EAAQ2mC,QACRp0C,KAAK2yC,iBAAiB,OAAQllC,EAAQ2mC,QAEtC3mC,EAAQ+hD,YACRxvD,KAAK2yC,iBAAiB,WAAYllC,EAAQ+hD,YAE1C/hD,EAAQgiD,cACRzvD,KAAK2yC,iBAAiB,aAAcllC,EAAQgiD,cAE5ChiD,EAAQiiD,mBACR1vD,KAAK2yC,iBAAiB,kBAAmBllC,EAAQiiD,mBAEjDjiD,EAAQkiD,iBACR3vD,KAAK2yC,iBAAiB,gBAAiBllC,EAAQkiD,iBAE/CliD,EAAQmiD,iBACR5vD,KAAK2yC,iBAAiB,gBAAiBllC,EAAQmiD,iBAE/CniD,EAAQoiD,eACR7vD,KAAK2yC,iBAAiB,cAAellC,EAAQoiD,eAE7CpiD,EAAQqiD,eACR9vD,KAAK2yC,iBAAiB,cAAellC,EAAQqiD,eAE7CriD,EAAQsiD,oBACR/vD,KAAK2yC,iBAAiB,mBAAoBllC,EAAQsiD,oBAEtD/vD,KAAK2yC,iBAAiB,eAAezV,GAAMl9B,KAAKgwD,gBAAkB,IAClE3wD,EAAMwF,WAAW7E,KAAKotD,kBAAmB3/C,EAAQ0/C,YACjDntD,KAAKmtD,WAAWnlC,SAAWhoB,KAAKyN,QAAQmgD,OAAO5lC,UACxChoB,KAAKmtD,WAAWnlC,SACnBhoB,KAAKyN,QAAQkgD,eACbvH,EAAcqC,sBAAsB,CAChCjN,QAASx7C,KAAKi7C,KACdoN,OAAQ,CAAC,kBACTiB,YAAa,CAACrc,EAAG/P,KACbl9B,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAGw6B,eAC3BlgD,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MAAM,EAE5CiD,WAAY,CAAChc,EAAG/P,KACZl9B,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MAAM,EAE5CuC,YAAa,CAACtb,EAAG/P,KACbA,EAAG2oB,WAAaJ,EAAW0D,OAC3BnpD,KAAKi7C,KAAK4G,UAAUE,OAAO,GAAG7B,eAC9BlgD,KAAKkwD,iBAAiB,EAE1B5H,OAAQ,CAACrb,EAAG/P,KACRl9B,KAAK8vC,UAAUptB,QAAQqD,KAAKmX,EAAG78B,KAAK4oB,OAAQjpB,KAAK4uD,cACjD5uD,KAAKu2C,UACLv2C,KAAK61C,UAAU,CACX5+B,KAAM,cACNk5C,SAAUjzB,EAAG78B,KAAK4oB,OAAOxjB,GACzBugB,SAAUhmB,KAAK4uD,cACjB,IAId5uD,KAAKu2C,UACLv2C,KAAK61C,UAAU,OAClB,CAKD,SAAAA,CAAU7rB,GACe,iBAAVA,EACPhqB,KAAKs8B,aAAahS,KAAKN,GAGvBhqB,KAAKs8B,aAAahS,KAAKN,EAAM/S,KAAM+S,EAE1C,CAGD,OAAApL,CAAQve,GACJL,KAAK8vC,UAAYzvC,EACjBL,KAAKygB,QACLzgB,KAAKu2C,SACR,CAED,OAAA6Z,GACI,OAAOpwD,KAAK8vC,SACf,CAED,UAAA3R,GACI,OAAOn+B,KAAK0iB,OACf,CAED,OAAA24B,GACIr7C,KAAKi7C,KAAK2H,UAAY,EACzB,CAED,OAAArM,GACIv2C,KAAKqwD,WACLrwD,KAAKswD,QACR,CACD,QAAAD,GACIrwD,KAAKi7C,KAAK2H,UAAY,EACzB,CAED,KAAAniC,GACIzgB,KAAKmtD,WAAWllC,KAAO,EACvBjoB,KAAKqwD,UACR,CAED,MAAAC,GACI,IAAKtwD,KAAKuwD,YAAcvwD,KAAKyN,QAAQ4gD,eACjC,OACJruD,KAAKyuD,uBAAyBzuD,KAAKi7C,KAAKoB,aACxCr8C,KAAKwwD,QAAUlpD,SAAS8iC,cAAc,OACtCpqC,KAAKwwD,QAAQ54C,MAAMxQ,MAAQ,OAC3BpH,KAAKwwD,QAAQ3O,UAAUn8B,IAAI,GAAG1lB,KAAKktD,kBACnCltD,KAAK0iB,QAAQsoC,KAAKhrD,KAAK8vC,UAAUptB,QAAS1iB,KAAKyN,QAAQigD,kBACvD1tD,KAAKywD,eACLzwD,KAAKwwD,QAAQnmB,YAAYrqC,KAAK0wD,WAC9B1wD,KAAK2wD,aACL3wD,KAAKwwD,QAAQnmB,YAAYrqC,KAAK4wD,SAC9B5wD,KAAK6wD,eACL7wD,KAAKwwD,QAAQnmB,YAAYrqC,KAAK8wD,WAC9B,IAAIC,EAAgBzpD,SAAS8iC,cAAc,OAC3C2mB,EAAclP,UAAUn8B,IAAI,GAAG1lB,KAAKktD,uBACpC6D,EAAc1mB,YAAYrqC,KAAKwwD,SAC/BxwD,KAAKi7C,KAAK5Q,YAAY0mB,GACtB,MAAMC,EAAiBhxD,KAAKyN,QAAQ08C,aAAa2D,aAAetE,EAAkByH,MAC9EjxD,KAAKwuD,kBACLxuD,KAAKwuD,kBACA/hD,MAAK,IAAMzM,KAAKkxD,iBAChBzkD,MAAK,KACNzM,KAAK0uD,aAAc,EACnB1uD,KAAKwuD,kBAAoB,IAAI,IAIjC5jC,YAAW,KACP5qB,KAAKkxD,eACAzkD,MAAK,KACNzM,KAAK0uD,aAAc,EACfsC,GACAhxD,KAAKmxD,eACR,GACH,GACH,IAEV,CACD,YAAAD,GACI,OAAO,IAAItiD,SAASC,IAChB,GAAI7O,KAAKyN,QAAQ6gD,kBAAmB,CAChC,MAAM8C,EAAWpxD,KAAKqxD,qBAAqBC,kBAG3C,IAAIC,GAFcH,EAAWA,EAAS5P,aA3S3B,IA4SMxhD,KAAKyN,QAAQ6gD,kBAW9B,OATA/N,MAAMvgD,KAAKwxD,iBACNpQ,SAAS,SAAU,GAAGmQ,YAC3B3mC,YAAW,KACP,MAAM6mC,EAAWzxD,KAAKwxD,gBAAgBhQ,aAAexhD,KAAKwxD,gBAAgBnV,aAC1EkV,GAAkCE,EAClClR,MAAMvgD,KAAKwxD,iBACNpQ,SAAS,SAAU,GAAGmQ,OAC3B1iD,GAAS,GACV,IAEN,CACQ7O,KAAKyuD,uBACd5/C,GAAS,IAERpC,MAAK,KACFzM,KAAKyN,QAAQ+/C,wBAA0BxtD,KAAK0uD,cAC5C1uD,KAAKi7C,KAAKrjC,MAAMwkC,OAAS,GAAGp8C,KAAKi7C,KAAKuG,iBACzC,GAER,CACD,iBAAAkQ,GACI,OAAO1xD,KAAK0iB,QAAQoD,WACf1jB,QAAOwjB,GAAOA,EAAI07B,YAClBx/C,KAAI8jB,GAAOA,EAAIxe,QACfuqD,QAAO,CAACC,EAAKC,IAAqBD,EAAMC,GAChD,CACD,YAAApB,GACIzwD,KAAK0wD,UAAYnQ,MAAM,OAClBmB,SAAS,GAAG1hD,KAAKktD,oBACjB9J,QACLpjD,KAAK8xD,kBAAoBvR,MAAM,MAAOvgD,KAAK0wD,WACtChP,SAAS,GAAG1hD,KAAKktD,6BACjB9J,QACLpjD,KAAK+xD,uBAAyBxR,MAAM,MAAOvgD,KAAK8xD,mBAC3CpQ,SAAS,GAAG1hD,KAAKktD,mCACjB9J,QACLpjD,KAAKgyD,aAAezR,MAAM,MAAOvgD,KAAK+xD,wBACjCrQ,SAAS,GAAG1hD,KAAKktD,wBACjB9J,QACLpjD,KAAK0iB,QAAQoD,WAAWvO,SAAQ,CAAC0R,EAAQ5iB,KACrC,IAAK4iB,EAAOq4B,UACR,OAEJ,IAAI2Q,EAAKjyD,KAAKkyD,mBAAmBjpC,EAAQ5iB,GACzCrG,KAAKgyD,aAAa3nB,YAAY4nB,GAC1BhpC,EAAO2gC,UACPrJ,MAAM0R,GACDzR,gBAAgBxgD,KAAKmyD,sBAC7B,IAEL,MAAMC,EAAiBpyD,KAAK0xD,oBAC5BnR,MAAMvgD,KAAK+xD,wBACN3Q,SAAS,QAAS,GAAGgR,MAC7B,CACD,OAAA7B,GACI,OAAOvwD,KAAK8vC,UAAUptB,QAAQ+C,MAAQ,CACzC,CACD,kBAAAysC,CAAmBjpC,EAAQ5iB,GACvB,IAAIgsD,EAAa9R,MAAM,OAClBmB,SAAS,GAAG1hD,KAAKktD,yBACjB7sD,KAAK,UAAW,GAAGgG,KACnB+6C,SAAS,QAAS,GAAGn4B,EAAO7hB,WAC7B6hB,EAAOghC,YACPoI,EACKhyD,KAAK,SAAU,GAAG4oB,EAAOghC,WAAWxkD,MAE7C,IAAI6sD,EAASD,EAAWjP,QA8BxB,OA7BA7C,MAAM,MAAO+R,GACR5Q,SAAS,GAAG1hD,KAAKktD,gCACjBjkC,EAAO2gC,UACRrJ,MAAM,MAAO+R,GACR5Q,SAAS,GAAG1hD,KAAKktD,+BACjB3vC,KAAK0L,EAAOhE,OAEjBgE,EAAOtQ,aACP4nC,MAAM,MAAO+R,GACR5Q,SAAS,iBACTd,MAAM33B,EAAOtQ,aAElB3Y,KAAKyN,QAAQkgD,eACbvH,EAAcU,sBAAsB,CAChCtL,QAAS8W,EACTzK,MAAO,iBACPxnD,KAAM,CAAE4oB,OAAQA,GAChBy+B,SAAW/B,IACPA,EAAU/C,UAAY,GACtB,MAAM2P,EAAYjrD,SAAS8iC,cAAc,OACzCmoB,EAAU7P,UAAYz5B,EAAOhE,MAC7B0gC,EAAU9D,UAAUn8B,IAAI,GAAG1lB,KAAKktD,6BAChCvH,EAAUtb,YAAYkoB,EAAU,EAEpCxK,YAAc7qB,IACVA,EAAG2oB,WAAaJ,EAAWK,KAAK,IAIrCwM,CACV,CACD,UAAA3B,GACI3wD,KAAK4wD,QAAUrQ,MAAM,OAChBmB,SAAS,GAAG1hD,KAAKktD,kBACjB9J,QACLpjD,KAAKwxD,gBAAkBjR,MAAM,MAAOvgD,KAAK4wD,SACpClP,SAAS,GAAG1hD,KAAKktD,2BACjBhzC,KAAK,WAAY,KACjBkpC,QACLpjD,KAAKqxD,qBAAuB9Q,MAAM,MAAOvgD,KAAKwxD,iBACzC9P,SAAS,GAAG1hD,KAAKktD,4BACjB9J,QACL,MAAMoP,EAAYxyD,KAAKyyD,oBACnBzyD,KAAK8vC,YACL9vC,KAAK0yD,eACL1yD,KAAKwuD,kBAAoBxuD,KAAK2yD,kBACzBlmD,MAAMgb,IACPznB,KAAKmtD,WAAWpmC,MAAQ/mB,KAAK8vC,UAAUjnB,WACvC7oB,KAAK4yD,eAEL5yD,KAAKqxD,qBAAqBzO,UAAY,GACtC5iD,KAAK2uD,cAAgB,KACrB,IAAIkE,EAAe,EACnB,GAAIprC,EAAK7lB,OAAQ,CACb,MAAMkgB,EAAS0wC,EACTxyD,KAAKyN,QAAQoU,WAAWlQ,SAAS4R,YACjC,GACNsvC,EAAgBprC,EAAK7lB,OAAS5B,KAAKmtD,WAAWnlC,SACxCP,EAAK7lB,OACL5B,KAAKmtD,WAAWnlC,SACtBP,EAAKlQ,SAAQ,CAACmN,EAAKre,KAIf,GAHImsD,GACAxyD,KAAK8yD,kBAAkBhxC,EAAQ4C,GAE/Bre,EAAQwsD,EAAc,CACtB,MAAME,EAAK/yD,KAAKgzD,UAAUtuC,EAAKre,GAC/BrG,KAAKqxD,qBAAqBhnB,YAAY0oB,EACzC,KAEL,MAAME,EAA4BjzD,KAAKyN,QAAQoU,YAAc7hB,KAAKyN,QAAQoU,WAAWoxC,0BACrF,GAAIT,IAAcxyD,KAAKkzD,cAAgBD,GAA4B,CAC/D,MAAMvuC,EAAM,IAAI4B,QAAQtmB,KAAK8vC,UAAUptB,QAAS,IAAIze,MAAMjE,KAAK8vC,UAAUptB,QAAQ+C,QACjFzlB,KAAK8yD,kBAAkBhxC,EAAQ4C,GAAK,EACvC,CACJ,CAED,GADuB1kB,KAAKyN,QAAQ08C,aAAa2D,aAAetE,EAAkByH,MAE9EjxD,KAAKmxD,oBAEJ,CACD,MAAMiB,EAAiBpyD,KAAK0xD,oBAC5BnR,MAAMvgD,KAAKqxD,sBACNjQ,SAAS,QAAS,GAAGgR,MAC7B,CACD,OAAOS,CAAY,IAElBjmD,OAAMqC,IAAWX,QAAQW,MAAMA,GAAe,MAEvDjP,KAAKwxD,gBAAgB7e,iBAAiB,UAAUzV,IAC5CqjB,MAAMvgD,KAAK8xD,mBACN1Q,SAAS,cAAe,IAAIphD,KAAKwxD,gBAAgB1U,eAAe,IAEzE98C,KAAKwxD,gBAAgB7e,iBAAiB,UAAW3yC,KAAKmzD,kBAAkB1gB,KAAKzyC,MAChF,CACD,UAAAkzD,GACI,OAAIlzD,KAAK8vC,UAAU1oB,cACRpnB,KAAK8vC,UAAUxmB,gBACdtpB,KAAKmtD,WAAWllC,KAAOjoB,KAAKmtD,WAAWnlC,UAAahoB,KAAKmtD,WAAWpmC,MAEzE/mB,KAAKmtD,WAAWllC,KAAOjoB,KAAKmtD,WAAWnlC,UAAYhoB,KAAKmtD,WAAWpmC,KAC7E,CACD,iBAAA0rC,GACI,IAAKzyD,KAAKyN,UAAYzN,KAAKyN,QAAQoU,aAAe7hB,KAAKyN,QAAQoU,WAAWlQ,SACtE,OAAO,EACX,MAAMmqB,EAAe97B,KAAKyN,QAAQoU,WAAWlQ,SAG7C,OAFgBmqB,EAAalY,iBAAmBkY,EAAa/X,oBACrD+X,EAAajY,aAAeiY,EAAahY,iBAEpD,CACD,iBAAAgvC,CAAkBhxC,EAAQsH,EAAQgqC,GAAS,GACvC,MAAMt3B,EAAe97B,KAAKyN,QAAQoU,WAAWlQ,SAC7C,GAAI3R,KAAK2uD,eAAiB7yB,EAAajY,YAAa,CAChD,IAAIwvC,GAAe,EACnB,IAAK,IAAInoB,EAAQ,EAAGA,GAASppB,EAAOlgB,OAAQspC,IAAS,CACjD,MAAMjnB,EAAQnC,EAAOopB,EAAQ,GAC7B,IAAK,MAAMtlB,KAAO3B,EAAMvB,QACpB,IAAKoZ,EAAazZ,cAAcriB,KAAK2uD,cAAc9pC,SAASe,GAAMwD,EAAOvE,SAASe,IAAO,CACrFytC,EAAcnoB,EACd,KACH,CAEL,IAAqB,IAAjBmoB,EACA,KACP,CACD,IAAqB,IAAjBA,EACA,IAAK,IAAInoB,EAAQppB,EAAOlgB,OAAQspC,GAASmoB,EAAanoB,IAAS,CAC3D,MAAMxmB,EAAM,IAAI4B,QAAQtmB,KAAK8vC,UAAUptB,QAAS1iB,KAAK2uD,cAAcpoC,WAC7DwsC,EAAK/yD,KAAKszD,gBAAgBpoB,EAAOxmB,GACvC1kB,KAAKqxD,qBAAqBhnB,YAAY0oB,EACzC,CAER,CACD,GAAIK,GAAUt3B,EAAahY,kBAAoBgY,EAAalY,gBAAiB,CACzE,MAAMmvC,EAAK/yD,KAAKszD,gBAAgB,EAAGlqC,GACnCppB,KAAKqxD,qBAAqBhnB,YAAY0oB,EACzC,CACD/yD,KAAK2uD,cAAgBvlC,CACxB,CACD,wBAAAmqC,CAAyBtoC,EAAUzqB,EAAOilB,GACtC,IAAIjhB,EAASymB,EAASpgB,QAAQ,wBAAyBrK,EAAQ,GAAGA,IAAU,KAE5E,OADAgE,EAASA,EAAOqG,QAAQ,wBAAyB4a,EAAQ,GAAGA,IAAU,KAC/DjhB,CACV,CACD,eAAA8uD,CAAgBpoB,EAAOxmB,GACnB,MAAMoX,EAAe97B,KAAKyN,QAAQoU,WAAWlQ,SACvCsS,EAASinB,EAAQ,EACjBpP,EAAavY,YAAY2nB,EAAQ,GACjC,CAAExoB,QAAS,GAAIb,WAAYia,EAAanY,iBAOxC8nC,EANalL,MAAM,OACpBmB,SAAS,GAAG1hD,KAAKktD,iBACjBxL,SAAS,GAAG1hD,KAAKktD,wBACjBxL,SAAS,GAAG1hD,KAAKktD,sBAAsBhiB,KACvC7qC,KAAK,eAAgB,GAAG6qC,KACxBhxB,KAAK,WAAY,MACQkpC,QAC9BpjD,KAAK0iB,QAAQoD,WAAWvO,SAAQ,CAAC0R,EAAQ5iB,KACrC,IAAK4iB,EAAOq4B,UACR,OAEJ,IAAIv5C,EAAM,GACV,MAAMyrD,EAAYvqC,EAAO2gC,UAElB,EADD5pD,KAAK8vC,UAAUptB,QAAQwD,SAAS+C,EAAOghC,WAAWxkD,KAEnDwjB,EAAO2gC,UAAY3gC,EAAOghC,YACvBhmC,EAAMvB,QAAQ5c,QAAQmjB,EAAOghC,WAAWxkD,KAAO,IAC/CsC,EAAM2c,EAAIG,SAAS2uC,IAGvBA,GAAYxzD,KAAK8vC,UAAUptB,QAAQ+C,MAAQ,IAC3C1d,EAAM,oBAEV0jD,EAAWphB,YAAYrqC,KAAKyzD,WAAWxqC,EAAQ5iB,EAAO0B,EAAK0jD,GAAY,IAE3E,MAAMiI,EAAgB1zD,KAAKyN,QAAQoU,WAAW+3B,WAAW9N,mBACnDjO,EAAW/B,EAAanY,gBAAgB7hB,KAAIoiB,GAAKA,EAAEf,QACnDvf,EAAMk4B,EAAarX,cAAcR,EAAOS,GAmD9C,OAlDAgvC,EAAczoB,iBAAiBC,EAAOtnC,GACjC6I,MAAMtK,IACP,IAAK,MAAM8pC,KAAapO,EACpBnZ,EAAIgC,SAASulB,EAAW9pC,EAAO8pC,IAEnCwf,EAAW7I,UAAY,GACvB5iD,KAAK0iB,QAAQoD,WAAWvO,SAAQ,CAAC0R,EAAQ5iB,KACrC,IAAK4iB,EAAOq4B,UACR,OAEJ,IAAIv5C,EAAM,GACV,MAAMyrD,EAAYvqC,EAAO2gC,UAElB,EADD5pD,KAAK8vC,UAAUptB,QAAQwD,SAAS+C,EAAOghC,WAAWxkD,IAExD,IAAKwjB,EAAO2gC,SAAU,CAClB,IAAI+J,GAAoB,EACxB,GAAI1qC,EAAOghC,WAAY,CACnB,MAAM2J,EAAgB3vC,EAAMvB,QAAQ5c,QAAQmjB,EAAOghC,WAAWxkD,IACxDouD,EAAeh2B,EAAS/3B,QAAQmjB,EAAOghC,WAAWxkD,IAEpDkuD,EADAzoB,EAAQ,EACY0oB,GAAiB3vC,EAAMvB,QAAQ9gB,OAAS,EAI5B,GAAZ4xD,GAEpBI,GAAiB,GAAKC,GAAgB,KACtC9rD,EAAM2c,EAAIG,SAAS2uC,GAE1B,CACD,IAAIM,EAAsB,GAQ1B,GAPI5oB,EAAQ,IACR4oB,EAAsB7qC,EAAOghC,WAAW7kC,2BAEnC0uC,GAAuBh4B,EAAa/X,kBAAoB4vC,IACzDG,EAAsB,oCAG1BA,EAAqB,CAGrB/rD,EAFgB/H,KAAKyzD,WAAWxqC,EAAQ5iB,EAAO0B,EAAK0jD,GAC1BsI,WACVnR,UAChB76C,EAAM/H,KAAKuzD,yBAAyBO,EAAqB/rD,EAAK5F,EAAO25B,EAAa5Z,kBACrF,CACJ,CACD,MAAM8xC,EAAUh0D,KAAKyzD,WAAWxqC,EAAQ5iB,EAAO0B,EAAK0jD,GACpDA,EAAWphB,YAAY2pB,EAAQ,GACjC,IAEDpnD,OAAOqC,GAAUX,QAAQW,MAAMA,KAC7Bw8C,CACV,CACD,iBAAA0H,CAAkBj2B,GACd,GAAIl9B,KAAKyN,QAAQ8gD,cAAe,CAC5B,MAAM0F,EAAWj0D,KAAKqxD,qBAAqB6C,iBAAiB,IAAIl0D,KAAKktD,iBAAiBtrD,OACtF,IAAIk+C,EACJ,OAAQ5iB,EAAGt5B,KACP,IAAK,YAEL,IAAK,aACD,MACJ,IAAK,UACDs5B,EAAGknB,iBACHtE,EAAW9/C,KAAKgwD,eAAiB,GAAKhwD,KAAKgwD,gBAAkBiE,EAAWA,EAAW,EAAIj0D,KAAKgwD,eAAiB,EAC7GhwD,KAAKgwD,eAAiBlQ,GAAY,EAAIA,EAAW,EACjD,MACJ,IAAK,YACD5iB,EAAGknB,iBACHtE,EAAW9/C,KAAKgwD,eAAiB,GAAKhwD,KAAKgwD,gBAAkBiE,EAAW,EAAIj0D,KAAKgwD,eAAiB,EAClGhwD,KAAKgwD,eAAiBlQ,EAAWmU,EAAWnU,EAAWmU,EAAW,EAG7E,CACJ,CACD,mBAAAE,CAAoBC,GAChB,MAAM1vC,EAA4B,iBAAf0vC,EACbp0D,KAAKq0D,WAAWD,GAChBA,EACN,GAAI1vC,EAAK,CACL,IAAI4vC,EAAU5vC,EAAI44B,wBAClB,MAAMiX,EAAev0D,KAAKwxD,gBAAgBlU,wBACpCkX,EAASF,EAAQ7X,IAAM8X,EAAa9X,IACpCgY,EAAYH,EAAQlX,OAASmX,EAAa9X,IAC1C8U,EAAiBvxD,KAAKwxD,gBAAgBnV,aACtCqY,EAAejtD,OAAO60C,aAAeh1C,SAASK,gBAAgB00C,aACpE,GAAImY,EAAS,GACTC,GAAalD,GACb+C,EAAQ7X,IAAM,GACd6X,EAAQlX,OAASsX,EACjB,OAEAF,EAAS,EACTx0D,KAAKwxD,gBAAgB7U,UAAY38C,KAAKwxD,gBAAgB7U,UAAY6X,EAE7DC,EAAYlD,IACjBvxD,KAAKwxD,gBAAgB7U,UAAY38C,KAAKwxD,gBAAgB7U,UAAY8X,EAAYlD,GAElF+C,EAAU5vC,EAAI44B,wBACVgX,EAAQ7X,IAAM,EACdn1C,SAASK,gBAAgBg1C,UAAYr1C,SAASK,gBAAgBg1C,UAAY2X,EAAQ7X,IAE7E6X,EAAQlX,OAASsX,IACtBptD,SAASK,gBAAgBg1C,UAAYr1C,SAASK,gBAAgBg1C,UAAY2X,EAAQlX,OAASsX,EAElG,CACJ,CAKD,eAAA/B,GACI,OAAoC,IAAhC3yD,KAAKyN,QAAQmgD,OAAO92B,QACbloB,QAAQC,QAAQ7O,KAAK8vC,UAAUrnB,iBAEnCzoB,KAAK8vC,UAAUjoB,QAAQ,CAC1BK,QAASloB,KAAKmtD,WAAWllC,KAAO,GAAKjoB,KAAKmtD,WAAWnlC,SACrDG,MAAOnoB,KAAKmtD,WAAWnlC,SAAW,IAEjCpb,OAAMqC,IACPX,QAAQW,MAAMA,GACP,KAEd,CACD,YAAA4hD,GACI7wD,KAAK8wD,UAAYvQ,MAAM,OAClBmB,SAAS,GAAG1hD,KAAKktD,oBACjB9J,QACDpjD,KAAKwuD,mBACLxuD,KAAKwuD,kBAAkB/hD,MAAKgZ,IACxBzlB,KAAK8wD,UAAUlO,UAAY,GAC3B5iD,KAAK20D,kBAAoB30D,KAAK40D,sBAC9B50D,KAAK8wD,UAAUzmB,YAAYrqC,KAAK20D,mBAChC,MAAME,EAAgB70D,KAAK80D,oBAAoBrvC,GAC/CzlB,KAAK8wD,UAAUzmB,YAAYwqB,EAAc,GAGpD,CACD,mBAAAC,CAAoBrvC,GAChB,MAAMsvC,EAAcxU,MAAM,OACrBmB,SAAS,GAAG1hD,KAAKktD,uBACjB9J,QAEL,GADiBpjD,KAAK8vC,UAAUjnB,WACjB,EAAG,CACd,MAAMmsC,EAAoBvvC,GACnBzlB,KAAKmtD,WAAWllC,KAAO,GAAKjoB,KAAKmtD,WAAWnlC,SAAW,EACxD,EACAitC,EAAoBxvC,EACpBuvC,EAAoBvvC,EAAQ,EAC5B,EACN,IAAIyvC,EAAWl1D,KAAK8vC,UAAUjnB,WAAWtU,WACzC,GAAIvU,KAAK8vC,UAAU1oB,cAAe,CAChBpnB,KAAK8vC,UAAUpnB,mBACf1oB,KAAK8vC,UAAUjnB,aAEzBqsC,EAAW,IAClB,CACDH,EAAYnS,UAAYtjD,EAAKuU,QAAQ,gBAChChJ,QAAQ,uBAAwB,SAASmqD,EAAkBzgD,qBAC3D1J,QAAQ,sBAAuB,SAASoqD,EAAkB1gD,qBAC1D1J,QAAQ,UAAW,SAASqqD,WACpC,CACD,OAAOH,CACV,CACD,YAAArC,GACC,CACD,YAAAE,GACC,CACD,qBAAAuC,CAAsB9uD,GAClB,OAAIrG,KAAKmtD,WACE9mD,EAAQrG,KAAKmtD,WAAWnlC,SAGxB3hB,CAEd,CACD,qBAAA+uD,CAAsB/uD,GAClB,OAAIrG,KAAKmtD,YACGntD,KAAKmtD,WAAWllC,KAAO,GAAKjoB,KAAKmtD,WAAWnlC,SAAW3hB,EAGxDA,CAEd,CACD,SAAA2sD,CAAUtuC,EAAKre,GACX,IAAIgvD,EAAcr1D,KAAKo1D,sBAAsB/uD,GACzCivD,EAAa/U,MAAM,OAClBmB,SAAS,GAAG1hD,KAAKktD,iBACjBxL,SAAS,GAAG1hD,KAAKktD,iBAAiB7mD,EAAQ,GAAK,EAAI,MAAQ,UAC3DhG,KAAK,UAAW,GAAGg1D,KACnBn7C,KAAK,WAAY,MACjBgoC,GAAG,SAAUhlB,IACdl9B,KAAKgwD,eAAiB3pD,EACtBrG,KAAK61C,UAAU,CACX5+B,KAAM,WACNyN,IAAKA,EACL6wC,SAAUlvD,EACVu/C,YAAa1oB,GACf,IAEDglB,GAAG,YAAahlB,IACjBl9B,KAAK61C,UAAU,CACX5+B,KAAM,aACNyN,IAAKA,EACL6wC,SAAUlvD,EACVu/C,YAAa1oB,GACf,IAEO,GAAT72B,GACAivD,EAAW5T,SAAS,GAAG1hD,KAAKktD,uBAEhC,IAAIzB,EAAa6J,EAAWlS,QAY5B,OAXIpjD,KAAKyN,QAAQ8gD,eAAiBloD,GAASrG,KAAKgwD,gBAC5CsF,EAAW5T,SAAS,GAAG1hD,KAAKktD,wBAEhCltD,KAAK0iB,QAAQoD,WAAWvO,SAAQ,CAAC0R,EAAQ5iB,KACrC,IAAK4iB,EAAOq4B,UACR,OAEJ,MAAMkU,EAAWvsC,EAAO2gC,UAAY,EAAI5pD,KAAK8vC,UAAUptB,QAAQwD,SAAS+C,EAAOghC,WAAWxkD,IAC1F,IAAIsC,EAAMkhB,EAAO2gC,SAAWyL,EAAc,EAAI3wC,EAAIG,SAAS2wC,GAC3D/J,EAAWphB,YAAYrqC,KAAKyzD,WAAWxqC,EAAQ5iB,EAAO0B,EAAK0jD,GAAY,IAEpEA,CACV,CACD,UAAAgI,CAAWxqC,EAAQuqC,EAAUhzD,EAAOirD,GAChC,MAAMnL,EAAUC,MAAM,OACjBmB,SAAS,GAAG1hD,KAAKktD,kBACjB7sD,KAAK,UAAW,GAAGmzD,KACnBt5C,KAAK,WAAY,MACjBknC,SAAS,QAAS,GAAGn4B,EAAO7hB,WAC7B6hB,EAAO8gC,OAASN,EAAgBc,KAChCjK,EAAQoB,SAAS,GAAG1hD,KAAKktD,6BAEpBjkC,EAAO8gC,OAASN,EAAgBkB,MACrCrK,EAAQoB,SAAS,GAAG1hD,KAAKktD,8BAEpBjkC,EAAO8gC,OAASN,EAAgBgB,QACrCnK,EAAQoB,SAAS,GAAG1hD,KAAKktD,+BAE7B,MAAMuI,EAAcnV,EAAQ8C,QACtBsS,EAAYD,EAAYprB,YAAYkW,MAAM,OAC3CmB,SAAS,GAAG1hD,KAAKktD,wBACjB9J,SACCuS,EAAe31D,KAAK41D,gBAAgB3sC,GAI1C,OAHI0sC,GACAA,EAAan1D,EAAOyoB,EAAQysC,EAAWjK,GAEpCgK,CACV,CACD,eAAAG,CAAgB3sC,GACZ,IAAI0sC,EAUJ,OARIA,EADA1sC,EAAO2gC,SACQ5pD,KAAKivD,kBAAkBnC,yBAAyBxB,EAAiBiB,QAGjEvsD,KAAKivD,kBAAkBvC,mBAAmBzjC,EAAOhS,MAEhEjX,KAAKyN,SAAWzN,KAAKyN,QAAQooD,oBAC7BF,EAAe31D,KAAKyN,QAAQooD,kBAAkB5sC,EAAQ0sC,IAAiBA,GAEpEA,CACV,CAED,OAAAG,CAAQ7tC,GACJjoB,KAAKmtD,WAAWllC,KAAOA,EACvBjoB,KAAK61C,UAAU,CAAE5+B,KAAM,cAAegR,KAAMA,IAC5CjoB,KAAKu2C,UACLv2C,KAAKwxD,gBAAgB7Q,OACxB,CACD,mBAAAiU,GACI,IAAImB,EAAczuD,SAAS8iC,cAAc,OACzC2rB,EAAYra,UAAY,GAAG17C,KAAKktD,+BAChC,MAAM+G,EAAWj0D,KAAK8vC,UAAUjnB,WAChC,GAAI7oB,KAAKyN,QAAQmgD,QAAU5tD,KAAKyN,QAAQmgD,OAAO92B,SAAWm9B,EAAW,EAAG,CACpE,MAAMpqD,EAAS7J,KAAKotD,kBAAkBE,aAAe,GAAK,GAAGttD,KAAKktD,aAC5D8I,mBAAsB94B,IACxB,MAAMse,EAAUte,EAAGz5B,OACnB,GAAI+3C,EAAQyL,aAAa,aAAc,CACnC,MAAMh/B,EAAOte,SAAS6xC,EAAQya,aAAa,cAC3Cj2D,KAAK81D,QAAQ7tC,EAChB,GAECiuC,eAAiB,CAACC,EAAWC,EAAS78B,EAAU88B,EAASC,KAC3D,MAAMC,EAAKjvD,SAAS8iC,cAAc,MAElC,GADAmsB,EAAG7a,UAAY,GAAG7xC,cACbwsD,EAAS,CACNC,IACAC,EAAG7a,WAAa,WAEpB,MAAMjoC,EAAInM,SAAS8iC,cAAc,KAOjC,OANA32B,EAAEitC,aAAa,OAAQ,sBACvBjtC,EAAEmvC,UAAYwT,GAAWD,EAAU5hD,WACnCd,EAAEitC,aAAa,YAAa,GAAGyV,KAC/B1iD,EAAEioC,UAAY,GAAG7xC,aACjB4J,EAAEk/B,iBAAiB,QAASqjB,oBAC5BO,EAAGlsB,YAAY52B,GACR8iD,CACV,CACD,IAAI9iD,EAAInM,SAAS8iC,cAAc,QAG/B,GAFA32B,EAAEitC,aAAa,cAAe,QAC9BjtC,EAAEioC,UAAY,GAAG7xC,aACb0vB,EACAg9B,EAAG7a,WAAa,gBAEf,CACD,GAAI17C,KAAKotD,kBAAkBE,aACvB75C,EAAInM,SAAS8iC,cAAc,KAC3B32B,EAAEitC,aAAa,OAAQ,sBACvBjtC,EAAEitC,aAAa,YAAa,GAAGyV,SAE9B,CACD,IAAIK,EAAOlvD,SAAS8iC,cAAc,KAClCosB,EAAK9V,aAAa,OAAQ,sBAC1B8V,EAAK9V,aAAa,YAAa,GAAGyV,KAClC1iD,EAAI+iD,CACP,CACD/iD,EAAEioC,UAAY,GAAG7xC,aACjB4J,EAAEk/B,iBAAiB,QAASqjB,mBAC/B,CAGD,OAFAviD,EAAEmvC,UAAYwT,EACdG,EAAGlsB,YAAY52B,GACR8iD,CAAE,EAEb,GAAIv2D,KAAK8vC,UAAU1oB,cAAe,CAC9B,MAAM+uC,EAAYn2D,KAAKmtD,WAAWllC,MAAQ,EAC1C,IAAIwuC,EAAKnvD,SAAS8iC,cAAc,MAChCqsB,EAAG/a,UAAY,GAAG7xC,cAClB,IAAI6sD,EAAOR,eAAeC,EAAY,EAAG,UAAwB,GAAbA,GAAgB,GAAM,GAC1EM,EAAGpsB,YAAYqsB,GACfA,EAAOR,eAAeC,EAAY,EAAG,UAAWn2D,KAAKkzD,cAAc,GAAM,GACzEuD,EAAGpsB,YAAYqsB,GACfX,EAAY1rB,YAAYosB,EAC3B,MAEG,GAAIz2D,KAAKmtD,WAAWpmC,MAAQ/mB,KAAKmtD,WAAWnlC,SAAU,CAClD,MAAMmuC,EAAYn2D,KAAKmtD,WAAWllC,MAAQ,EACpC0uC,EAAY/vD,KAAK0kB,KAAKtrB,KAAKmtD,WAAWpmC,MAAQ/mB,KAAKmtD,WAAWnlC,WAAa,EAC3EqlC,EAAiBrtD,KAAKotD,kBAAkBC,gBAAkB,GAC1DuJ,EAAiBT,EAAY,EACnC,IAAIU,EAAiBD,EAAkBA,EAAiBvJ,EAAkB,EACtEyJ,EAAgBD,EAAiBxJ,EAAiB,EAClDyJ,EAAgBH,IAChBG,EAAgBH,GAEpB,IAAIF,EAAKnvD,SAAS8iC,cAAc,MAChCqsB,EAAG/a,UAAY,GAAG7xC,cAClB,IAAI6sD,EAAOR,eAAeW,EAAiB,EAAG,UAA6B,GAAlBA,GAAqB,GAAM,GACpFJ,EAAGpsB,YAAYqsB,GACf,IAAK,IAAI9xD,EAAIiyD,EAAgBjyD,GAAKkyD,EAAelyD,IAC7C8xD,EAAOR,eAAetxD,EAAGA,EAAE2P,YAAY,GAAO,EAAO3P,GAAKuxD,GAC1DM,EAAGpsB,YAAYqsB,GAEnBA,EAAOR,eAAeY,EAAgB,EAAG,UAAWA,GAAiBH,GAAW,GAAM,GACtFF,EAAGpsB,YAAYqsB,GACfX,EAAY1rB,YAAYosB,EAC3B,CAEL,GAAIz2D,KAAKyN,QAAQmgD,OAAOmJ,oBAAqB,CACzC,MAAMC,oBAAuB95B,IACzB,MAAM4iB,EAAWn2C,SAASuzB,EAAGz5B,OAAOjD,OACpCR,KAAKmtD,WAAWnlC,SAAW83B,EAC3B9/C,KAAKmtD,WAAWllC,KAAO,EACvBjoB,KAAKu2C,SAAS,EAEZ0gB,EAAY3vD,SAAS8iC,cAAc,OACzC6sB,EAAUvb,UAAY,GAAG17C,KAAKktD,uBAC9B,MAAMgK,EAAa5vD,SAAS8iC,cAAc,OAC1C8sB,EAAWxb,UAAY,eAAe17C,KAAKktD,8BAC3C+J,EAAU5sB,YAAY6sB,GACtB,MAAMC,EAAM7vD,SAAS8iC,cAAc,UAC7BgtB,EAAap3D,KAAKyN,QAAQmgD,OAAOC,eAAiB,GAClDwJ,EAAS,IAAIC,IAAIF,GACvBC,EAAO3xC,IAAI1lB,KAAKyN,QAAQmgD,OAAO5lC,UAAY,IAC3C/jB,MAAM2e,KAAKy0C,GAAQ9/C,SAAQysC,IACvB,MAAMa,EAASv9C,SAAS8iC,cAAc,UACtCya,EAAOrkD,MAAQwjD,EAAGzvC,WAClBswC,EAAOtnC,KAAOymC,EAAGzvC,WACjB4iD,EAAI9sB,YAAYwa,EAAO,IAE3BsS,EAAI32D,OAASR,KAAKmtD,WAAWnlC,UAAY,IAAIzT,WAC7C2iD,EAAW7sB,YAAY8sB,GACvBA,EAAIxkB,iBAAiB,SAAUqkB,qBAC/B,MAAMO,EAAWjwD,SAAS8iC,cAAc,OACxCmtB,EAAS7b,UAAY,GAAG17C,KAAKktD,6BAC7B+J,EAAU5sB,YAAYktB,GACtB,MAAMtyC,EAAQ3d,SAAS8iC,cAAc,QACrCnlB,EAAMy9B,UAAYpjD,EAAKuU,QAAQ,oBAC/B0jD,EAASltB,YAAYplB,GACrB8wC,EAAY1rB,YAAY4sB,EAC3B,CACJ,CACD,OAAOlB,CACV,CACD,gBAAApjB,CAAiB7oB,EAAW6tB,GACxB,OAAO33C,KAAKs8B,aAAazS,UAAUC,GAAWE,GAAS2tB,EAAQ3tB,EAAM3pB,OACxE,CACD,mBAAAw0C,CAAoB/qB,EAAW8tB,GAC3B53C,KAAKs8B,aAAalS,YAAYN,EAAW8tB,EAC5C,CACD,mBAAAua,GACI,OAAInyD,KAAKyN,QAAQ4gD,eACN9N,MAAM,OACRmB,SAAS,GAAG1hD,KAAKktD,6BACjBtM,MAAM5gD,KAAKyN,QAAQ+pD,iBAAmB,OACtCv8B,SAAS,KAAKqlB,GAAWA,EACzBpmC,KAAK,OAAQ,sBACbgoC,GAAG,SAAU5iB,IACdA,EAAE8kB,iBACFpkD,KAAK61C,UAAU,CACX5+B,KAAM,kBACN2uC,YAAatmB,GACf,MAED8jB,QAEF7C,MAAM,QACRyC,QAAQ,KACRI,OACR,CACD,eAAA6M,CAAgBlK,EAAOC,GACnB,MAAMyR,EAAWz3D,KAAKgyD,aAAakC,iBAAiB,WAAWl0D,KAAKktD,wBAC9DzqC,EAAO,GACb,IAAK,IAAI7d,EAAI,EAAGA,EAAI6yD,EAAS71D,OAAQgD,IAAK,CACtC,MAAM8yD,EAAUD,EAAS7yD,GACK,SAA1B8yD,EAAQ9/C,MAAM0yB,SAElB7nB,EAAKhe,KAAKizD,EACb,CACD,GAAoB,IAAhBj1C,EAAK7gB,OAGL,OAFA5B,KAAK4uD,aAAe,OACpB5uD,KAAKgyD,aAAa3nB,YAAYrqC,KAAK6uD,aAGvC,MAAM8I,EAAa5a,sBAAsB/8C,KAAK6uD,aAC9C,GAAI9I,GAAS4R,EAAWvsC,GAAK26B,GAAS4R,EAAWvsC,EAAIprB,KAAK6uD,YAAYtN,YAClE,OAEJ,IAAIqW,EAAkB53D,KAAK4uD,aAC3B,IAAK,IAAIhpC,KAAOnD,EAAM,CAClB,MAAMo1C,EAAS9a,sBAAsBn3B,GAC/Bxe,EAAQwe,EAAI27B,YACdwE,EAAQ8R,EAAOzsC,GAAK26B,EAAQ8R,EAAOzsC,EAAIhkB,IAEvCwwD,EAAkBjuD,SAASic,EAAIqwC,aAAa,iBAAmB,EAEtE,CACG2B,GAAmB53D,KAAK4uD,eACxB5uD,KAAK4uD,aAAegJ,EAChB53D,KAAK4uD,aAAensC,EAAK7gB,OACzB5B,KAAKgyD,aAAa8F,aAAa93D,KAAK6uD,YAAapsC,EAAKziB,KAAK4uD,eAG3D5uD,KAAKgyD,aAAa3nB,YAAYrqC,KAAK6uD,aAG9C,CACD,eAAAqB,GACIlwD,KAAK4uD,cAAgB,EACrBhkC,YAAW,KACH5qB,KAAK6uD,YAAYzO,eACjBpgD,KAAK6uD,YAAYzO,cAAcvV,YAAY7qC,KAAK6uD,YACnD,GACF,GACN,CACD,kBAAImB,GACA,OAAOhwD,KAAK8uD,eACf,CACD,kBAAIkB,CAAexvD,GACf,GAAIA,IAAUR,KAAK8uD,gBAAiB,CAChC,MAAMh5B,EAAW91B,KAAK8uD,gBACtB9uD,KAAK8uD,gBAAkBtuD,EACvBR,KAAK+3D,kBACL/3D,KAAK61C,UAAU,CACX5+B,KAAM,mBACN6e,WACAgqB,SAAU9/C,KAAKgwD,eACfuF,SAAUv1D,KAAKo1D,sBAAsBp1D,KAAKgwD,iBAEjD,CACJ,CACD,eAAA+H,GACI,GAAI/3D,KAAKyN,QAAQ8gD,cAAe,CACfvuD,KAAKqxD,qBAAqB6C,iBAAiB,WAAWl0D,KAAKktD,yBACnE31C,SAAQysC,IAAQA,EAAGnC,UAAUE,OAAO,GAAG/hD,KAAKktD,uBAAuB,IACxE,MAAM8K,EAAYh4D,KAAKi4D,eACnBD,IACAA,EAAUnW,UAAUn8B,IAAI,GAAG1lB,KAAKktD,wBAChCltD,KAAKm0D,oBAAoBn0D,KAAKgwD,gBAErC,CACJ,CACD,YAAAiI,GACI,OAAOj4D,KAAKq0D,WAAWr0D,KAAKgwD,eAC/B,CACD,UAAAqE,CAAWhuD,GACP,MAAMohB,EAAOxjB,MAAM2e,KAAK5iB,KAAKqxD,qBAAqB6C,iBAAiB,IAAIl0D,KAAKktD,sBAAsBltD,KAAKktD,0BACvG,OAAI7mD,GAAS,GAAKA,EAAQohB,EAAK7lB,OACpB6lB,EAAKphB,GACT,IACV,CAED,KAAAs6C,GACI3gD,KAAKwxD,gBAAgB7Q,OACxB,CAED,aAAAwQ,GACI,GAAInxD,KAAKyN,QAAQ08C,aAAa2D,aAAetE,EAAkByH,MAC3D,OACJ,MAAMmB,EAAiBpyD,KAAKqxD,qBAAqBz5C,MAAMxQ,MACvDpH,KAAKqxD,qBAAqBz5C,MAAMsgD,WAAa,SAC7Cl4D,KAAKqxD,qBAAqBz5C,MAAMxQ,MAAQ,MAExCpH,KAAKgyD,aAAap6C,MAAMxQ,MAAQ,MAChC,IAAI+wD,EAAW,EACf,MAAMz1C,EAAU1iB,KAAK0iB,QAAQoD,WACvBsyC,EAAcp4D,KAAK+xD,uBAAuBmC,iBAAiB,IAAIl0D,KAAKktD,yBAC1E,IAAImL,EAAY,EAChB,IAAK,IAAI1yD,EAAM,EAAGA,EAAM3F,KAAK0iB,QAAQ+C,MAAO9f,IAAO,CAC/C,MAAMsjB,EAASvG,EAAQ/c,GACvB,IAAKsjB,EAAOq4B,UACR,SACJ,MAAMh8B,EAAkBtlB,KAAKyN,QAAQ08C,aAAa2D,aAAetE,EAAkBuE,QAAU9kC,EAAOghC,WAC9FhhC,EAAOghC,WAAW3kC,gBAClB,EACAgzC,EAAat4D,KAAKqxD,qBAAqB6C,iBAAiB,IAAIl0D,KAAKktD,gCAAgCvnD,UAAY3F,KAAKktD,wBACxH,IAAIqL,EAAW,EACf,GAAIjzC,EAAkB,EAClB6yC,GAAY7yC,EACZ2D,EAAO7hB,MAAQke,EACfgzC,EAAW/gD,SAAQ/W,IACfA,EAAM4/C,cAAcxoC,MAAMxQ,MAAQ,GAAGke,KAAmB,IAE5D8yC,EAAYC,GAAWzgD,MAAMxQ,MAAQ,GAAGke,WAQxC,GALyB,GAArBgzC,EAAW12D,SACXw2D,EAAYC,GAAWzgD,MAAMxQ,MAAQ,KACrCgxD,EAAYC,GAAWzgD,MAAM4gD,WAAa,UAE9CD,EAAWH,EAAYC,GAAW9W,YAC9B+W,EAAW12D,OAAS,EAAG,CACvB02D,EAAW/gD,SAAQ/W,IACfA,EAAM4/C,cAAcxoC,MAAMxQ,MAAQ,KAClC,MAAMA,EAAQ5G,EAAM4/C,cAAcmB,YAC9Bn6C,EAAQmxD,IACRA,EAAWnxD,EACd,IAELmxD,GAAY,EACZ,MAAME,EAAYxvC,EAAO2gC,SACnB5pD,KAAKyN,QAAQ08C,aAAaU,aAAahkD,KAAO,IAC9C7G,KAAKyN,QAAQ08C,aAAalhC,EAAOghC,WAAWhzC,MAAMpQ,KAAO,IACzD6xD,EAAYzvC,EAAO2gC,SACnB5pD,KAAKyN,QAAQ08C,aAAaU,aAAa/jD,KAAO,EAC9C9G,KAAKyN,QAAQ08C,aAAalhC,EAAOghC,WAAWhzC,MAAMnQ,KAAO,GAC3DyxD,EAAWE,IACXF,EAAWE,GAEXF,EAAWG,IACXH,EAAWG,GAEXr5D,EAAM2I,cAAcihB,EAAOhS,QAE3BshD,EAAW3xD,KAAK82C,MAAiB,IAAX6a,IAE1BJ,GAAYI,EACZtvC,EAAO7hB,MAAQmxD,EACfD,EAAW/gD,SAAQ/W,IACfA,EAAM4/C,cAAcxoC,MAAMxQ,MAAQ,GAAGmxD,KAAY,IAErDH,EAAYC,GAAWzgD,MAAMxQ,MAAQ,GAAGmxD,MACpCtvC,EAAOghC,aACPhhC,EAAOghC,WAAW3kC,gBAAkBizC,EAE3C,MAEGJ,GAAYI,EAGpBF,GACH,CACGF,EAAW,GACXn4D,KAAKqxD,qBAAqBz5C,MAAMxQ,MAAQ,GAAG+wD,MAC3Cn4D,KAAK+xD,uBAAuBn6C,MAAMxQ,MAAQ,GAAG+wD,QAG7Cn4D,KAAKqxD,qBAAqBz5C,MAAMxQ,MAAQgrD,EACxCpyD,KAAK+xD,uBAAuBn6C,MAAMxQ,MAAQgrD,GAE9CpyD,KAAKqxD,qBAAqBz5C,MAAMsgD,WAAa,KAC7Cl4D,KAAKgyD,aAAajR,gBAAgB,QACrC,EAGL,MAAM4X,SACF,aAAIzL,GACA,MAAO,UACV,CACD,WAAArtD,CAAYo7C,EAAMxtC,GACdzN,KAAKi7C,KAAOA,EACZj7C,KAAKyN,QAAUA,GAAW,GACrBzN,KAAKyN,QAAQmrD,YACd54D,KAAKyN,QAAQmrD,UAAY,YAEhC,CACD,OAAAvlC,CAAQre,GACJhV,KAAK64D,YAAc,IAAIr2D,KAAKwS,EAC/B,CACD,OAAApJ,GACI,OAAO,IAAIpJ,KAAKxC,KAAK64D,YACxB,CACD,WAAAC,CAAYvwC,GACJvoB,KAAKyN,QAAQsrD,eACb/4D,KAAKyN,QAAQsrD,cAAc/4D,KAAK64D,YAAatwC,EAEpD,EAGL,MAAMywC,eACF,aAAI9L,GACA,MAAO,MACV,CACD,WAAArtD,CAAY4N,GACRzN,KAAKi5D,SAAW,KAChBj5D,KAAKk5D,WAAa,KAClBl5D,KAAKyN,QAAUA,EACfzN,KAAKswD,QACR,CACD,WAAA6I,CAAYriD,GACR9W,KAAKo5D,gBAAkB,IAAI52D,KAAKsU,GAC5B9W,KAAKi5D,UACLj5D,KAAKi5D,SAAS5lC,QAAQrzB,KAAKo5D,iBAE3Bp5D,KAAKk5D,YACLl5D,KAAKk5D,WAAWG,QAAQr5D,KAAKo5D,gBAEpC,CACD,WAAAE,GACI,OAAO,IAAI92D,KAAKxC,KAAKo5D,gBACxB,CACD,MAAA9I,GACQtwD,KAAKyN,QAAQ8rD,eACbv5D,KAAKi5D,SAAWj5D,KAAKw5D,eAAe,CAChCZ,UAAW54D,KAAKyN,QAAQmrD,UACxBa,kBAAmBz5D,KAAKyN,QAAQgsD,kBAChCC,iBAAkB15D,KAAKyN,QAAQksD,eAC/BC,sBAAuB55D,KAAKyN,QAAQmsD,sBACpCb,cAAe,CAAC/jD,EAAMuT,KAClBvoB,KAAKo5D,gBAAkBpkD,EACnBhV,KAAKk5D,YACLl5D,KAAKk5D,WAAWG,QAAQr5D,KAAKo5D,iBAE7Bp5D,KAAKyN,QAAQksD,gBACb35D,KAAK65D,kBAELtxC,GACAvoB,KAAKuoB,MAAMvoB,KAAKo5D,gBACnB,IAGLp5D,KAAKi5D,UACLj5D,KAAKi5D,SAAS3I,UAElBtwD,KAAKyN,QAAQksD,iBACb35D,KAAKk5D,WAAal5D,KAAK85D,iBAAiB,CACpCC,cAAgBjmC,IACZ9zB,KAAKo5D,gBAAgBxlC,SAASE,EAAK5e,YACnClV,KAAKo5D,gBAAgBzlC,WAAWG,EAAK3e,cACjCnV,KAAKi5D,UACLj5D,KAAKi5D,SAAS5lC,QAAQrzB,KAAKo5D,iBAE/Bp5D,KAAK65D,iBAAiB,IAG1B75D,KAAKk5D,YACLl5D,KAAKk5D,WAAW5I,UAExBtwD,KAAKm5D,YAAY,IAAI32D,KACxB,CACD,cAAAg3D,CAAe/rD,GACX,OAAO,IACV,CACD,gBAAAqsD,CAAiBrsD,GACb,OAAO,IACV,CACD,IAAAuzC,CAAKgZ,GACGh6D,KAAKyN,QAAQwsD,YACbj6D,KAAKyN,QAAQwsD,aAEjB,MAAMxuC,EAAMsxB,sBAAsBid,GAAU1yD,SAASD,MACrDrH,KAAKi7C,KAAKrjC,MAAM6kC,IAAMhxB,EAAIuxB,EAAIgd,EAAO3d,aAAe,KACpDr8C,KAAKi7C,KAAKrjC,MAAMglC,KAAOnxB,EAAIL,EAAI,IAClC,CACD,KAAA7C,CAAMvT,GACEhV,KAAKyN,QAAQysD,SACbl6D,KAAKyN,QAAQysD,QAAQllD,GAEzBhV,KAAKq7C,SACR,CACD,MAAA8e,GACQn6D,KAAKyN,QAAQ2sD,UACbp6D,KAAKyN,QAAQ2sD,WAEjBp6D,KAAKq7C,SACR,CACD,OAAAA,GACQr7C,KAAKi7C,MAAQj7C,KAAKi7C,KAAKmF,eACvBpgD,KAAKi7C,KAAKmF,cAAcvV,YAAY7qC,KAAKi7C,KAEhD,CACD,eAAA4e,GACQ75D,KAAKyN,QAAQ4sD,mBACbr6D,KAAKyN,QAAQ4sD,kBAAkBr6D,KAAKo5D,gBAE3C,EAGL,MAAMkB,wBAAwB3B,SAC1B,WAAA94D,CAAYo7C,EAAMxtC,GACdN,MAAM8tC,EAAMxtC,GACZzN,KAAKu6D,WAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC7Dv6D,KAAKw6D,OAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5Fx6D,KAAKy6D,aAAe,KACpBz6D,KAAK06D,uBAAwB,EAC7B,IAAK,IAAI91D,EAAI,EAAGA,EAAI5E,KAAKu6D,WAAW34D,OAAQgD,IACxC5E,KAAKu6D,WAAW31D,GAAKtF,EAAK+U,oBAAoBzP,EAAI,GAEtD,IAAK,IAAIA,EAAI,EAAGA,EAAI5E,KAAKw6D,OAAO54D,OAAQgD,IACpC5E,KAAKw6D,OAAO51D,GAAKtF,EAAK8U,iBAAiBxP,EAAI,EAElD,CACD,OAAAyuB,CAAQre,GACJ7H,MAAMkmB,QAAQre,GACdhV,KAAK26D,cAAgB36D,KAAK64D,YAAYntD,WACtC1L,KAAK46D,aAAe56D,KAAK64D,YAAYrtD,cACrCxL,KAAK66D,eACR,CACD,MAAAvK,GACI,MAAMjvD,EAASk/C,MAAM,MAAOvgD,KAAKi7C,MAC5ByG,SAAS,GAAG1hD,KAAKktD,oBAClBltD,KAAKyN,QAAQgsD,kBACbp4D,EACKm/C,gBAAgBxgD,KAAK86D,yBAG1Bz5D,EACK45B,SAAS,QAAQqlB,GAAWtgD,KAAK+6D,eAAiBza,EAAQ8C,UAEnE7C,MAAMvgD,KAAKi7C,MACNuF,gBAAgBxgD,KAAKg7D,yBAC1Bh7D,KAAKy6D,aAAela,MAAM,MAAOvgD,KAAKi7C,MACjCyG,SAAS,GAAG1hD,KAAKktD,kBACjB9J,OACR,CACD,kBAAA6X,GACI,MAAMtpD,EAAWrS,EAAK8S,oBACtB,OAAQpS,KAAKyN,QAAwB,iBAC/B,GAAGkE,EAASrB,kBAAkBqB,EAASnB,iBACvCmB,EAASrB,cAClB,CACD,qBAAAwqD,GACI,MAAMnwD,EAAS3K,KAAKi7D,qBACd3a,EAAUC,MAAM,SACjBrmC,KAAK,cAAevP,GACpB+2C,SAAS,GAAG1hD,KAAKktD,0BAwCtB,OAvCA5M,EACKpoC,KAAKvN,EAAOE,QAAQ,OAAQ,QAC5BA,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACdA,QAAQ,KAAM,OACdq3C,GAAG,SAAShlB,IACbojB,EAAQwB,YAAY,SACpB,IACI9hD,KAAK06D,uBAAwB,EAC7B,MAAMQ,EAAU77D,EAAMqL,cAAc1K,KAAKm7D,gBAAgB36D,MAAOmK,GAChE3K,KAAK64D,YAAcqC,EACnBl7D,KAAKo7D,KAAKp7D,KAAK64D,YAAYrtD,cAAexL,KAAK64D,YAAYntD,YAC3D1L,KAAK84D,aAAY,EACpB,CACD,MAAOx5B,GACHghB,EAAQoB,SAAS,QACpB,CACO,QACJ1hD,KAAK06D,uBAAwB,CAChC,KAEAxY,GAAG,WAAYhlB,IACG,KAAfA,EAAGinB,UACHjnB,EAAGknB,iBACHlnB,EAAGgqB,kBACClnD,KAAKm7D,gBAAgBzf,UAAU51C,QAAQ,SAAW,IAC9C9F,KAAK06D,uBACT16D,KAAK84D,aAAY,GACxB,IAEA5W,GAAG,SAAS,KACbt3B,YAAW,KACP5qB,KAAKm7D,gBAAgBpX,eAAiB,EACtC/jD,KAAKm7D,gBAAgBjX,aAAe,CAAC,GACtC,GAAG,IAEVlkD,KAAKm7D,gBAAkB7a,EAAQ8C,QACxBpjD,KAAKm7D,eACf,CACD,wBAAAE,GACI,GAAIr7D,KAAKm7D,iBACL,IAAKn7D,KAAK06D,sBAAuB,CAC7B,MAAM/vD,EAAS3K,KAAKi7D,qBACpBj7D,KAAKm7D,gBAAgB36D,MAAQlB,EAAKyV,cAAc/U,KAAK64D,YAAaluD,GAClE3K,KAAKm7D,gBAAgBxa,OACxB,OAEA,GAAI3gD,KAAK+6D,eAAgB,CAC1B,MAAMxnD,EAASjU,EAAK2S,mBACpBjS,KAAK+6D,eAAerY,UAAY1iD,KAAK64D,YAAYphD,eAAyB,MAAVlE,OAAiBvM,EAAYuM,EAAQ,CACjGhI,KAAM,UACNE,MAAO,OACPE,IAAK,WAEZ,CACJ,CACD,qBAAAqvD,GAsCI,OArCgBza,MAAM,OACjBmB,SAAS,GAAG1hD,KAAKktD,iBACjBjyB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,sBACjBhL,GAAG,SAAS,KACbliD,KAAKs7D,MAAM,IAEVrgC,SAAS,QAAQqlB,GAAWA,EAAQqC,KAAK,gBACzC1nB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,2BACjBjyB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,uBACjBjyB,SAAS,UAAUqlB,IACpBA,EACK4B,GAAG,UAAU,KACdliD,KAAKo7D,KAAKp7D,KAAK46D,aAAcjxD,SAAS3J,KAAKu7D,gBAAgB/6D,OAAO,IAEtE,IAAK,IAAIoE,EAAI,EAAGA,EAAI5E,KAAKw6D,OAAO54D,OAAQgD,IACpC07C,EAAQrlB,SAAS,UAAUqlB,GAAWA,EACjCpmC,KAAK,QAAStV,EAAE2P,YAChBgJ,KAAKvd,KAAKw6D,OAAO51D,MAE1B5E,KAAKu7D,gBAAkBjb,EAAQ8C,OAAO,MAErCnoB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,sBACjBjyB,SAAS,UAAUqlB,GAAWtgD,KAAKw7D,eAAiBlb,EACpD4B,GAAG,UAAU,KACdliD,KAAKo7D,KAAKzxD,SAAS3J,KAAKw7D,eAAeh7D,OAAQR,KAAK26D,cAAc,IAEjEvX,cACAnoB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,sBACjBhL,GAAG,SAAS,KACbliD,KAAK6rB,MAAM,IAEVoP,SAAS,QAAQqlB,GAAWA,EAAQqC,KAAK,gBAC/BS,OAClB,CACD,IAAAkY,GACIt7D,KAAK46D,aAAuC,IAAvB56D,KAAK26D,cAAuB36D,KAAK46D,aAAe,EAAI56D,KAAK46D,aAC9E56D,KAAK26D,cAAwC,IAAvB36D,KAAK26D,cAAuB,GAAK36D,KAAK26D,cAAgB,EAC5E36D,KAAK66D,eACR,CACD,IAAAhvC,GACI7rB,KAAK46D,aAAuC,KAAvB56D,KAAK26D,cAAwB36D,KAAK46D,aAAe,EAAI56D,KAAK46D,aAC/E56D,KAAK26D,eAAiB36D,KAAK26D,cAAgB,GAAK,GAChD36D,KAAK66D,eACR,CACD,kBAAAY,GACI,MAAMjlD,EAAQ,oBAAoBklD,KAAK17D,KAAKyN,QAAQmrD,WACpD,IAAI+C,EAAY,EACZC,EAAW,EACD,OAAVplD,IACAmlD,EAAYhyD,SAAS6M,EAAM,IAC3BolD,EAAWjyD,SAAS6M,EAAM,KAE9BxW,KAAKw7D,eAAe5Y,UAAY,GAChC,IAAK,IAAIh+C,EAAI,EAAGA,GAAK+2D,EAAYC,EAAUh3D,IAAK,CAC5C,IAAIssB,EAAK5pB,SAAS8iC,cAAc,UAC5B7+B,EAAOvL,KAAK46D,aAAee,EAAY/2D,EAC3CssB,EAAG1wB,MAAQ+K,EAAKgJ,WAChB2c,EAAGwxB,UAAYn3C,EAAKgJ,WACpBvU,KAAKw7D,eAAenxB,YAAYnZ,EACnC,CACJ,CACD,IAAAkqC,CAAK7vD,EAAME,GACPzL,KAAK46D,aAAervD,EACpBvL,KAAK26D,cAAgBlvD,EACrBzL,KAAK66D,eACR,CACD,aAAAA,GAEI76D,KAAKq7D,2BACLr7D,KAAKy7D,qBACL,IAAII,EAAW,IAAKr5D,KAAKxC,KAAK46D,aAAc56D,KAAK26D,eAAgBpnC,SAC7DuoC,EAAc,IAAIt5D,KAAKxC,KAAK46D,aAAc56D,KAAK26D,cAAgB,EAAG,GAAG/uD,UACzE5L,KAAKy6D,aAAa7X,UAAY,GAC9B5iD,KAAKw7D,eAAeh7D,MAAQR,KAAK46D,aAAarmD,WAC9CvU,KAAKu7D,gBAAgB/6D,MAAQR,KAAK26D,cAAcpmD,WAChDvU,KAAKu6D,WAAWhjD,SAAQ,CAAC5L,EAAKhG,KAC1B46C,MAAM,MAAOvgD,KAAKy6D,cACb/Y,SAAS,GAAG1hD,KAAKktD,qBACjBxL,SAAgB,GAAP/7C,GAAmB,GAAPA,EAAW,GAAG3F,KAAKktD,oBAAsB,IAC9D3vC,KAAK5R,EAAI,IAGlB,IAAK,IAAI/G,EAAI,EAAGA,EAAIi3D,EAAUj3D,IAC1B27C,MAAM,MAAOvgD,KAAKy6D,cACb/Y,SAAS,GAAG1hD,KAAKktD,uBAG1B,MAAM5hD,EAAQ,IAAI9I,KAClB,IAAK,IAAImJ,EAAM,EAAGA,GAAOmwD,EAAanwD,IAAO,CACzC,MAAM20C,EAAUC,MAAM,MAAOvgD,KAAKy6D,cAC7B/Y,SAAS,GAAG1hD,KAAKktD,iBACjBhzC,KAAK,YAAavO,EAAI4I,YACtBgJ,KAAK5R,EAAI4I,YACT2tC,GAAG,SAAU5iB,IACdt/B,KAAK64D,YAAYrlC,YAAYxzB,KAAK46D,cAClC56D,KAAK64D,YAAYvlC,SAAStzB,KAAK26D,eAC/B36D,KAAK64D,YAAYxlC,QAAQ1pB,SAAS21B,EAAE77B,OAAOwyD,aAAa,eACxDj2D,KAAK84D,YAAY94D,KAAKyN,QAAQmsD,sBAAsB,IAEpDjuD,IAAQL,EAAMM,WAAa5L,KAAK46D,eAAiBtvD,EAAME,eAAiBxL,KAAK26D,gBAAkBrvD,EAAMI,YACrG40C,EAAQoB,SAAS,GAAG1hD,KAAKktD,yBAEzBvhD,IAAQ3L,KAAK64D,YAAYjtD,WAAa5L,KAAK46D,eAAiB56D,KAAK64D,YAAYrtD,eAAiBxL,KAAK26D,gBAAkB36D,KAAK64D,YAAYntD,YACtI40C,EAAQoB,SAAS,GAAG1hD,KAAKktD,0BAE7B,MAAM6O,GAAaF,EAAWlwD,EAAM,GAAK,EACxB,GAAbowD,GAA+B,GAAbA,GAClBzb,EAAQoB,SAAS,GAAG1hD,KAAKktD,qBAES,mBAA3BltD,KAAKyN,QAAQuuD,WACpBh8D,KAAKyN,QAAQuuD,UAAUzzC,MAAM+3B,EAAQ8C,QAAS,CAC1C9C,EAAQ8C,QACR,IAAI5gD,KAAKxC,KAAK46D,aAAc56D,KAAK26D,cAAehvD,IAG3D,CAED,MAAMswD,GAAuBJ,EAAWC,GAAe,EACjDI,EAAqC,GAAvBD,EAA2B,EAAI,EAAIA,EACvD,IAAK,IAAIr3D,EAAI,EAAGA,EAAIs3D,EAAat3D,IAC7B27C,MAAM,MAAOvgD,KAAKy6D,cACb/Y,SAAS,GAAG1hD,KAAKktD,sBAE7B,CACD,WAAA4L,CAAYvwC,GACRpb,MAAM2rD,YAAYvwC,GAClBvoB,KAAK66D,eACR,EAGL,MAAMsB,WACF,aAAIjP,GACA,MAAO,SACV,CACD,WAAArtD,CAAYo7C,EAAMxtC,GACdzN,KAAKi7C,KAAOA,EACZj7C,KAAKyN,QAAUA,GAAW,EAC7B,CACD,OAAA4rD,CAAQvlC,GACJ9zB,KAAKo8D,YAAc,IAAI55D,KAAKsxB,EAC/B,CACD,OAAArpB,GACI,OAAO,IAAIjI,KAAKxC,KAAKo8D,YACxB,CACD,WAAAC,GACQr8D,KAAKyN,QAAQssD,eACb/5D,KAAKyN,QAAQssD,cAAc/5D,KAAKo8D,YAEvC,EAGL,MAAME,0BAA0BH,WAC5B,OAAA9C,CAAQvlC,GACJ3mB,MAAMksD,QAAQvlC,GACd9zB,KAAKu8D,sBACLv8D,KAAKw8D,WAAW/Y,cAAgB3vB,EAAK5e,WACrClV,KAAKy8D,aAAahZ,cAAgB3vB,EAAK3e,YAC1C,CACD,MAAAm7C,GACI/P,MAAM,MAAOvgD,KAAKi7C,MACbyG,SAAS,GAAG1hD,KAAKktD,kBACjBjyB,SAAS,QAAQqlB,GAAWtgD,KAAK08D,SAAWpc,EAAQ8C,UACpDA,QACL,MAAMuZ,EAAiBpc,MAAM,MAAOvgD,KAAKi7C,MACpCyG,SAAS,GAAG1hD,KAAKktD,qBAiCtB,OAhCAyP,EACK1hC,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,sBACjBtM,MAAM,SACN3lB,SAAS,SAASqlB,GAAWtgD,KAAKw8D,WAAalc,EAC/CoB,SAAS,GAAG1hD,KAAKktD,yBACjBj2C,KAAK,SACLiD,KAAK,MAAO,KACZA,KAAK,MAAO,MACZA,KAAK,OAAQ,KACbgoC,GAAG,SAAU5iB,IACdt/B,KAAKo8D,YAAYxoC,SAAS5zB,KAAKw8D,WAAW/Y,eAC1CzjD,KAAKu8D,sBACLv8D,KAAKq8D,aAAa,IAEjBjZ,YACLuZ,EACK1hC,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,sBACjBtM,MAAM,WACN3lB,SAAS,SAASqlB,GAAWtgD,KAAKy8D,aAAenc,EACjDoB,SAAS,GAAG1hD,KAAKktD,2BACjBj2C,KAAK,SACLiD,KAAK,MAAO,KACZA,KAAK,MAAO,MACZA,KAAK,OAAQ,KACbgoC,GAAG,SAAU5iB,IACdt/B,KAAKo8D,YAAYzoC,WAAW3zB,KAAKy8D,aAAahZ,eAC9CzjD,KAAKu8D,sBACLv8D,KAAKq8D,aAAa,IAEjBjZ,YACEpjD,KAAKi7C,IACf,CACD,mBAAAshB,GACI,MAAMhpD,EAASjU,EAAK2S,mBACd2qD,EAAa58D,KAAKo8D,YAAY3kD,eAAyB,MAAVlE,OAAiBvM,EAAYuM,EAAQ,CACpFzH,KAAM,UACNC,OAAQ,YAEZ/L,KAAK08D,SAASha,UAAYka,CAC7B,EAGL,MAAMC,8BAA8B7D,eAChC,MAAA1I,GACI,MAAMwM,EAAKvc,MAAM,MAAOj5C,SAASD,MAC5Bq6C,SAAS,GAAG1hD,KAAKktD,aACjBhzC,KAAK,WAAY,KACjBknC,SAAS,WAAY,YACrBA,SAAS,MAAO,WAChBA,SAAS,OAAQ,WACjBc,GAAG,WAAYhlB,IACG,KAAfA,EAAGinB,QACHnkD,KAAKm6D,SAEe,KAAfj9B,EAAGinB,SACRnkD,KAAKuoB,MAAMvoB,KAAKs5D,gBAEb,KAEPt5D,KAAKyN,QAAQsvD,QACbD,EAAG1b,SAAS,UAAW,GAAGphD,KAAKyN,QAAQsvD,UAE3C/8D,KAAKi7C,KAAO6hB,EAAG1Z,QACfj2C,MAAMmjD,SACNtwD,KAAKg9D,gBACLh9D,KAAKi9D,uBAA0B39B,IAC3B,IAAItV,EAAQviB,OAAOuiB,OAASsV,EAO5B,OANAtV,EAAMkzC,YAAclzC,EAAMvmB,QACTzD,KAAKi7C,KAAK/f,SAASlR,EAAMvmB,UAEtC6D,SAASutC,oBAAoB,YAAa70C,KAAKi9D,wBAAwB,GACvEj9D,KAAKm6D,WAEF,CAAI,CAElB,CACD,aAAA6C,GACI,MAAM1c,EAAUC,MAAM,MAAOvgD,KAAKi7C,MAC7ByG,SAAS,GAAG1hD,KAAKktD,qBACjBjyB,SAAS,UAAUvnB,GAAK1T,KAAKm9D,UAAYzpD,EACzCguC,SAAS,GAAG1hD,KAAKktD,oBAAoBltD,KAAKktD,wBAC1C3vC,KAAKje,EAAKuU,QAAQ,cAClBquC,GAAG,SAAS,KACbliD,KAAKm5D,YAAY,IAAI32D,MACrBxC,KAAK65D,mBACE,KAENzW,WACDpjD,KAAKyN,QAAQksD,gBAAmB35D,KAAKyN,QAAQmsD,uBAC7CtZ,EAAQrlB,SAAS,UAAUvnB,GAAK1T,KAAKo9D,aAAe1pD,EAC/CguC,SAAS,GAAG1hD,KAAKktD,oBAAoBltD,KAAKktD,0BAC1C3vC,KAAKje,EAAKuU,QAAQ,gBAClBquC,GAAG,SAAS,KACbliD,KAAKuoB,MAAMvoB,KAAKs5D,gBACT,KAENlW,UAET9C,EAAQrlB,SAAS,UAAUvnB,GAAK1T,KAAKo9D,aAAe1pD,EAC/CguC,SAAS,GAAG1hD,KAAKktD,oBAAoBltD,KAAKktD,2BAC1C3vC,KAAKje,EAAKuU,QAAQ,iBAClBquC,GAAG,SAAS,KACbliD,KAAKm6D,UACE,KAEN/W,SACR,CACD,cAAAoW,CAAe/rD,GAKX,OAJAzN,KAAKq9D,aACD9c,MAAM,MAAOvgD,KAAKi7C,MACbyG,SAAS,GAAG1hD,KAAKktD,iBACjB9J,QACF,IAAIkX,gBAAgBt6D,KAAKq9D,aAAc5vD,EACjD,CACD,gBAAAqsD,CAAiBrsD,GAKb,OAJAzN,KAAKs9D,eACD/c,MAAM,MAAOvgD,KAAKi7C,MACbyG,SAAS,GAAG1hD,KAAKktD,gBACjB9J,QACF,IAAIkZ,kBAAkBt8D,KAAKs9D,eAAgB7vD,EACrD,CACD,IAAAuzC,CAAKgZ,GACD,GAAIh6D,KAAKyN,QAAQgsD,kBAAmB,CAC5Bz5D,KAAKyN,QAAQwsD,YACbj6D,KAAKyN,QAAQwsD,aAEjB,MAAMsD,EAAYxgB,sBAAsBid,GAAU1yD,SAASD,MACrDm2D,EAAYzgB,sBAAsBid,EAASA,EAAO5Z,eAAiB4Z,EAAS1yD,SAASD,MAC3FrH,KAAKi7C,KAAKrjC,MAAM6kC,IAAM+gB,EAAUxgB,EAAI,KACpCh9C,KAAKi7C,KAAKrjC,MAAMglC,KAAO2gB,EAAUnyC,EAAI,IACxC,MAEGje,MAAM6zC,KAAKgZ,GACXh6D,KAAKi7C,KAAK0F,QAEd/1B,YAAW,KACPtjB,SAASqrC,iBAAiB,YAAa3yC,KAAKi9D,wBAAwB,EAAK,GAC1E,EACN,EAGL,IAAIQ,GACJ,SAAWA,GACPA,EAAsBA,EAA4B,KAAI,GAAK,OAC3DA,EAAsBA,EAA8B,OAAI,GAAK,SAC7DA,EAAsBA,EAA6B,MAAI,GAAK,OAC/D,CAJD,CAIGA,IAA0BA,EAAwB,CAAE,IAEvD,MAAMvQ,EAAY,OAClB,MAAMwQ,qBACF,WAAAC,CAAY/c,EAAOwV,EAASrsC,GACxB,MACMtc,EAAU,CACZmzC,MAAOA,EACPgd,UAAU,EACVC,YAAY,EACZC,YAAY,EACZz2D,KANa,YAAY6lD,qBAA6BkJ,WAQ1D,OAAIrsC,GACAtc,EAAQswD,SAAW,KACfh0C,GAAS,EAAK,EAElBtc,EAAQ2sD,SAAW,KACfrwC,GAAS,EAAM,OAEnB/pB,KAAKwB,KAAKiM,IAGP,IAAImB,SAASC,IAChBpB,EAAQswD,SAAW,KACflvD,GAAQ,EAAK,EAEjBpB,EAAQ2sD,SAAW,KACfvrD,GAAQ,EAAM,EAElB7O,KAAKwB,KAAKiM,EAAQ,GAEzB,CACD,UAAAuwD,CAAWpd,EAAOwV,EAASt6C,EAAQiO,GAC/B,MAMMtc,EAAU,CACZmzC,MAAOA,EACPid,YAAY,EACZD,UAAU,EACVE,YAAY,EACZG,eAAe,EACf52D,KAZa,YAAY6lD,qHAEPA,4BAAoCA,0BAAkCkJ,uDACzDlJ,4BAAoCA,8DAUnEgR,gBAAgB,EAChBC,WAAY,KACR,MAAMxa,EAAQr8C,SAASgoD,eAAe,GAAGpC,uBACrCpxC,IACA6nC,EAAMnjD,MAAQsb,GAElB6nC,EAAMhD,OAAO,GAGfyd,aAAgBr0C,IAClB,MAAM45B,EAAQr8C,SAASgoD,eAAe,GAAGpC,uBACnC1oD,EAASm/C,EAAMnjD,MACrB,OAAIgE,GAAUA,EAAOqG,QAAQ,MAAO,IAAIjJ,OAAS,GAC7CmoB,EAASvlB,IACF,IAEXm/C,EAAM9B,UAAUn8B,IAAI,iBACb,EAAK,EAEhB,OAAIqE,GACAtc,EAAQswD,SAAW,IACRK,aAAar0C,GAExBtc,EAAQ2sD,SAAW,KACfrwC,EAAS,GAAG,OAEhB/pB,KAAKwB,KAAKiM,IAGP,IAAImB,SAASC,IAChBpB,EAAQswD,SAAW,IACRK,aAAavvD,GAExBpB,EAAQ2sD,SAAW,KACfvrD,EAAQ,GAAG,EAEf7O,KAAKwB,KAAKiM,EAAQ,GAEzB,CACD,IAAAjM,CAAKiM,EAASpN,GACV,MAAMg+D,EAAS,IAAIC,cAAc7wD,EAASpN,GACpCk+D,EAAY9wD,EAAQ8wD,UAO1B,OANA9wD,EAAQ8wD,UAAaC,IACjBx+D,KAAKy+D,QAAQD,GACbD,GAAaA,EAAUC,EAAI,EAE/BH,EAAO78D,OACPxB,KAAK0+D,MAAML,GACJA,CACV,CACD,SAAAM,CAAUlxD,GACN,OAAO,IAAImxD,iBAAiBnxD,EAASzN,KACxC,CACD,OAAAy+D,CAAQD,GACJ,MAAMn4D,EAAQq3D,qBAAqBmB,YAAY/4D,QAAQ04D,GACnDn4D,GAAS,GACTq3D,qBAAqBmB,YAAY14D,OAAOE,EAAO,EAEtD,CACD,KAAAq4D,CAAMF,GACFd,qBAAqBmB,YAAYp6D,KAAK+5D,EACzC,CACD,YAAAM,CAAarxD,GACT,MAAM4wD,EAAS,IAAIU,sBAAsBtxD,GACnC8wD,EAAY9wD,EAAQ8wD,UAO1B,OANA9wD,EAAQ8wD,UAAaC,IACjBx+D,KAAKy+D,QAAQD,GACbD,GAAaA,EAAUC,EAAI,EAE/BH,EAAO78D,OACPxB,KAAK0+D,MAAML,GACJA,CACV,CACD,aAAAW,GACI,OAAO/6D,MAAM2e,KAAK86C,qBAAqBmB,YAC1C,CACD,eAAAI,GACI,IAAK,MAAMZ,KAAUp6D,MAAM2e,KAAK86C,qBAAqBmB,aACjDR,EAAOa,OAEd,EAELxB,qBAAqBmB,YAAc,GACnC,MAAMP,cACF,WAAAz+D,CAAY4N,EAASpN,GACjBL,KAAKyN,QAAUA,EACfzN,KAAKm/D,cAAiBpzC,KACd/rB,KAAKyN,QAAQswD,WAAmD,IAAvC/9D,KAAKyN,QAAQswD,SAAS/9D,KAAM+rB,MAGzD/rB,KAAKq7C,WACE,GAEXr7C,KAAKo/D,cAAgB,KACbp/D,KAAKyN,QAAQ2sD,UACbp6D,KAAKyN,QAAQ2sD,SAASp6D,MAE1BA,KAAKq7C,SAAS,EAElBr7C,KAAKq/D,eAAkBniC,GACD,IAAdA,EAAGinB,UAAiBnkD,KAAKs/D,mBACzBpiC,EAAGknB,iBACHlnB,EAAGgqB,mBACClnD,KAAKm/D,mBACL13D,OAAOotC,oBAAoB,UAAW70C,KAAKq/D,gBAAgB,IACpD,GAKnBr/D,KAAKu/D,SAAWlgE,EAAMuK,WAAW,OACjC5J,KAAKK,KAAOA,EACZL,KAAKi7C,KACDsF,MAAM,MAAOj5C,SAASD,MACjB6S,KAAK,YAAa,MAClB7Z,KAAK,YAAaL,KAAKu/D,UACvB7d,SAAS,GAAGwL,UAAmB,aAC/BvM,QACA1lB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,2BACTzmB,SAAS,OAAOvnB,GAAK1T,KAAKw/D,cAAgB9rD,EAC1CguC,SAAS,GAAGwL,kBACZjyB,SAAS,UAAUvnB,IACpB1T,KAAKy/D,cAAgB/rD,EAChBguC,SAAS,GAAGwL,YACZjyB,SAAS,KAAKvnB,GAAKA,EACnBguC,SAAS,GAAGwL,kBACZlK,QAAQv1C,EAAQmzC,SAChBwC,SACoB,IAArB31C,EAAQmwD,UACRlqD,EAAEunB,SAAS,UAAUvnB,GAAKA,EACrBguC,SAAS,GAAGwL,iBACZhL,GAAG,SAAS,KACbliD,KAAKo/D,eAAe,IAEnBze,SAAQ,IAEhB1lB,SAAS,OAAOvnB,IACjBA,EAAEguC,SAAS,GAAGwL,qBACdltD,KAAK0/D,aAAehsD,EAAE0vC,OAAO,IAE5BnoB,SAAS,WAAWvnB,IAIrB,GAHA1T,KAAK2/D,YAAcjsD,EACdguC,SAAS,GAAGwL,UACZ9J,QACuB,iBAAjB31C,EAAQpG,KAAmB,CAClC,MAAMs7C,EAAOnjD,EAAOwrB,qBAAqBvd,EAAQpG,KAAMhH,GACvDqT,EAAEyvC,QAAQR,EACb,MAEGjvC,EAAE8sC,gBAAgB/yC,EAAQpG,KAC7B,IAEA4zB,SAAS,UAAUvnB,IACpB,IAAIksD,EAAa,KAEbA,EADAnyD,EAAQoyD,iBAAmBpyD,EAAQoyD,iBAAmBpC,EAAsBjT,OAC/D,eAGA,cAEjBxqD,KAAK8/D,cAAgBpsD,EAChBguC,SAAS,GAAGwL,YACZ9J,QACL1vC,EAAEguC,SAASke,IACgB,IAAvBnyD,EAAQowD,aAEZnqD,EAAEunB,SAAS,UAAU8kC,IACjBA,EAAGt6D,GAAGzF,KAAKu/D,SAAW,eACjB7d,SAAS,cAAe,WACxBsB,QAAQv1C,EAAQuyD,kBAAoB1gE,EAAKuU,QAAQ,aAClDpG,EAAQwyD,kBACRF,EAAG1/D,KAAK,UAAWoN,EAAQwyD,kBAC3BF,EAAGre,SAAS,eACZqe,EAAG7d,GAAG,SAAU5iB,IACR4gC,WACAA,WAAWC,OAAM,KACbD,WAAWE,QAAQ3yD,EAAQwyD,iBAAkB,CAAEjoC,OAAQ,WAClDvrB,MAAMsf,IACP/rB,KAAKm/D,cAAcpzC,EAAM,GAC3B,IAIN/rB,KAAKm/D,eACR,KAILY,EAAG7d,GAAG,SAAU5iB,IACZt/B,KAAKm/D,eAAe,IAG5BY,EAAGpf,OAAO,KAEa,IAAvBlzC,EAAQqwD,YACRpqD,EAAEunB,SAAS,UAAU8kC,GAAMA,EACtBt6D,GAAGzF,KAAKu/D,SAAW,eACnB7d,SAAS,eACTsB,QAAQv1C,EAAQ4yD,kBAAoB/gE,EAAKuU,QAAQ,iBACjDquC,GAAG,SAAU5iB,IACdt/B,KAAKo/D,eAAe,MACrB,IAENhc,UACAA,OACZ,CACD,OAAAgN,GACI,OAAOpwD,KAAKK,IACf,CACD,cAAAigE,GACI,OAAOtgE,KAAKi7C,IACf,CACD,sBAAAslB,GACI,OAAOj5D,SAASgoD,eAAetvD,KAAKu/D,SAAW,cAClD,CACD,sBAAAiB,GACI,OAAOl5D,SAASgoD,eAAetvD,KAAKu/D,SAAW,cAClD,CACD,IAAA/9D,GACQxB,KAAKyN,QAAQ0wD,YACbn+D,KAAKyN,QAAQ0wD,WAAWn+D,MAE5BugD,MAAMvgD,KAAKi7C,MAAM+F,OACbhhD,KAAKyN,QAAQywD,gBACbl+D,KAAKk+D,gBAAe,GAExB,MAAMuC,EAAYzgE,KAAKi7C,KAClBylB,cAAc,IAAIxT,kBACnBltD,KAAKyN,QAAQ2uC,SACbqkB,EAAU7oD,MAAMwkC,OAAwC,iBAAxBp8C,KAAKyN,QAAQ2uC,OACvCp8C,KAAKyN,QAAQ2uC,OACb,GAAGp8C,KAAKyN,QAAQ2uC,YAEtBp8C,KAAKyN,QAAQrG,QACbq5D,EAAU7oD,MAAMxQ,MAAsC,iBAAvBpH,KAAKyN,QAAQrG,MACtCpH,KAAKyN,QAAQrG,MACb,GAAGpH,KAAKyN,QAAQrG,WAEtBpH,KAAKyN,QAAQwwD,eACbx2D,OAAOkrC,iBAAiB,UAAW3yC,KAAKq/D,gBAAgB,GAG5Dr/D,KAAKi7C,KAAKiZ,iBAAiB,SACtB38C,SAAQikC,GAAWA,EAAQ7I,iBAAiB,SAAS,KACtD3yC,KAAK2gE,aACD3gE,KAAKyN,QAAQmzD,SACb5gE,KAAKyN,QAAQmzD,QAAQ5gE,KACxB,MAEDA,KAAKyN,QAAQozD,QACb7gE,KAAKyN,QAAQozD,OAAO7gE,KAE3B,CACD,MAAA8gE,GACI9gE,KAAKm/D,eACR,CACD,MAAAhF,GACIn6D,KAAKo/D,eACR,CACD,KAAAF,GACIl/D,KAAKq7C,SACR,CACD,cAAA0lB,GACoB/gE,KAAKi7C,KAAKiZ,iBAAiB,UACnC38C,SAAQypD,GAAUA,EAAOznC,UAAW,GAC/C,CACD,aAAA0nC,GACoBjhE,KAAKi7C,KAAKiZ,iBAAiB,UACnC38C,SAAQypD,GAAUA,EAAOznC,UAAW,GAC/C,CACD,SAAA2nC,CAAU3jD,EAAM4jD,EAAQt2D,GACpB,IAAIu2D,EAAQ7gB,MAAM,OACbmB,SAAS,GAAGwL,WAAmBiU,GAAU,MACzClmC,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,GAAGwL,oBACZ3vC,KAAK,KACL2kC,GAAG,SAAUhlB,IACd,MAAMkkC,EAAQlkC,EAAGz5B,OAAO28C,cACxBghB,EAAMhhB,cAAcvV,YAAYu2B,EAAM,MAErCpe,QAAQzlC,GACR6lC,SACW,IAAZv4C,GACA7K,KAAK2gE,aAET3gE,KAAK0/D,aAAar1B,YAAY+2B,EACjC,CACD,UAAAT,GACI3gE,KAAK0/D,aAAa9c,UAAY,EACjC,CACD,OAAAvH,GACiB/zC,SAAS4sD,iBAAiB,oBAAoBl0D,KAAKu/D,cACvD39D,QAAU,IAEf5B,KAAKyN,QAAQywD,gBACbl+D,KAAKk+D,gBAAe,GAExB52D,SAASD,KAAKwjC,YAAY7qC,KAAKi7C,MAC3Bj7C,KAAKyN,QAAQwwD,eACbx2D,OAAOotC,oBAAoB,UAAW70C,KAAKq/D,gBAAgB,GAE3Dr/D,KAAKyN,QAAQ8wD,WACbv+D,KAAKyN,QAAQ8wD,UAAUv+D,MAE9B,CACD,cAAAs/D,GACI,MAAM+B,EAAa/5D,SAASK,gBAAgBusD,iBAAiB,eAC7D,OAAOmN,EAAWA,EAAWz/D,OAAS,KAAO5B,KAAKi7C,IACrD,CACD,cAAAijB,CAAeoD,GACX,MAAMD,EAAa/5D,SAASK,gBAAgBusD,iBAAiB,sBAC7D,IAAK,IAAItvD,EAAI,EAAGA,EAAIy8D,EAAWz/D,OAAS,EAAGgD,IACvC,GAAI08D,EAAQ,CACR,MAAMp5C,EAAc,GAALtjB,EAAS,GAAS,GAAJA,EAAS,GACtC27C,MAAM8gB,EAAWz8D,IACZw8C,SAAS,aAAc,GAAGl5B,OAC1Bk5B,SAAS,cAAe,GAAGl5B,MACnC,MAEGq4B,MAAM8gB,EAAWz8D,IACZq8C,YAAY,cACZA,YAAY,cAG5B,EAEL,MAAM8d,8BAA8BT,cAChC,WAAAz+D,CAAY4N,EAASpN,GACjB,IAAIkhE,EACAC,EACJ,MAAMn6D,EAAOk5C,MAAM,OACdtlB,SAAS,OAAOvnB,GAAK6tD,EAAiB7tD,EACtC6J,KAAK9P,EAAQ2oD,SAAW,IACxBhT,UACAnoB,SAAS,OAAOvnB,IACjBA,EACKguC,SAAS,GAAGwL,mBACZjyB,SAAS,OAAOvnB,IACjB8tD,EAAkB9tD,EACbguC,SAAS,QACT0B,QACD31C,EAAQg0D,aACR/tD,EAAE0tC,SAAS,QAAS,MAGpB1tC,EAAEguC,SAAS,gBACd,GACH,IAED0B,QACLj2C,MAAM,CACFyzC,MAAOnzC,EAAQmzC,MACfv5C,KAAMA,EACN82D,WAAY1wD,EAAQ0wD,WACpBJ,SAAUtwD,EAAQswD,SAClB32D,MAAOqG,EAAQrG,MACfg1C,OAAQ3uC,EAAQ2uC,OAChByhB,YAAY,EACZC,YAAY,EACZF,UAAU,EACVW,UAAW9wD,EAAQ8wD,WACpBl+D,GACHL,KAAKuhE,eAAiBA,EACtBvhE,KAAKwhE,gBAAkBA,CAC1B,CACD,aAAAE,CAActL,GACVp2D,KAAKuhE,eAAe7e,UAAY0T,CACnC,CACD,cAAAuL,CAAeC,GACXA,EAAW5hE,KAAK6hE,KAAKD,GACrB5hE,KAAKwhE,gBAAgB5pD,MAAMxQ,MAAsB,IAAXw6D,EAAH,IAClB,IAAbA,GAEAh3C,YAAW,KACP5qB,KAAK8gE,QAAQ,GACd,IAEV,CACD,IAAAe,CAAKC,GACD,OAAIA,EAAM,EACC,EACPA,EAAM,EACC,EACJA,CACV,EAEL,MAAMlD,iBACF,WAAA/+D,CAAY4N,EAASs0D,GACjB/hE,KAAKyN,QAAUA,EACfzN,KAAK+hE,cAAgBA,EACrB/hE,KAAKgiE,cAAgB,KACrBhiE,KAAKiiE,aAAe,EACpBjiE,KAAKyN,QAAUA,EACfzN,KAAK+hE,cAAgBA,CACxB,CACD,UAAAG,GACI,OAAOliE,KAAKgiE,aACf,CACD,QAAAG,CAAS9hE,GACL,OAAOL,KAAKwB,KAAKxB,KAAKiiE,aAAe,EAAG5hE,EAC3C,CACD,QAAA+hE,CAAS/hE,GACL,OAAOL,KAAKwB,KAAKxB,KAAKiiE,aAAe,EAAG5hE,EAC3C,CACD,IAAAmB,CAAKymB,EAAM5nB,GAUP,GATI4nB,EAAO,EACPjoB,KAAKiiE,aAAe,EAEfh6C,GAAQjoB,KAAKyN,QAAQ7L,OAC1B5B,KAAKiiE,aAAejiE,KAAKyN,QAAQ7L,OAAS,EAG1C5B,KAAKiiE,aAAeh6C,EAEpBjoB,KAAKgiE,cACL,IACIhiE,KAAKgiE,cAAc9C,OACtB,CACD,MAAO5/B,GAAM,CAEjB,MAAM+iC,EAAariE,KAAKyN,QAAQzN,KAAKiiE,cAErC,OADAjiE,KAAKgiE,cAAgBhiE,KAAK+hE,cAAcvgE,KAAK6gE,EAAYhiE,GAClDL,KAAKgiE,aACf,CACD,KAAA9C,GACQl/D,KAAKgiE,gBACLhiE,KAAKgiE,cAAc9C,QACnBl/D,KAAKgiE,cAAgB,KAE5B,EAgBL,IAAIM,EAaAC,EC73GJ,SAASC,UAAUhnB,GACf5wB,YAAWqiB,IACHuO,GACAA,EAAQmF,OACX,GACF,IACP,ED61GA,SAAS8hB,qBACLnjE,EAAKoV,mBAAmB,CACpBguD,aAAc,gEACdC,iBAAkB,iBAClBtxD,SAAU,KACVC,aAAc,SACdsxD,YAAa,QACbC,UAAW,MACXC,SAAU,SAElB,CACAL,GAGA,SAAWH,GACPA,EAAWA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAwB,YAAI,GAAK,cAC5CA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAsB,UAAI,GAAK,YAC1CA,EAAWA,EAAsB,UAAI,GAAK,WAC7C,CAXD,CAWGA,IAAeA,EAAa,CAAE,IAEjC,SAAWC,GACPA,EAAe,MAAI,KACnBA,EAAe,MAAI,IACnBA,EAAmB,UAAI,IACvBA,EAAkB,SAAI,IACtBA,EAAoB,WAAI,IACxBA,EAAkB,SAAI,IACtBA,EAAqB,YAAI,IACzBA,EAAmB,UAAI,IACvBA,EAAoB,WAAI,IACxBA,EAAkB,SAAI,GACzB,CAXD,CAWGA,IAAYA,EAAU,CAAA,ICl4GzB,MAAMriB,EAAc,OACd6iB,EAAc,cAEpB,IAAIvoB,EAy4DAwoB,EAmsHAC,EA0CAC,EAknGAC,EA6NAC,EA82BAC,EAQAC,GA1zTJ,SAAW9oB,GACP,IAAIwE,EAAa,KAKjBxE,EAAa+oB,KAJb,SAASA,OACL,MAAMpkB,EAAK13C,OAAO0L,UAAUisC,UAC5B,OAAOD,EAAGG,SAAS,SAAWH,EAAGG,SAAS,UAC7C,EASD9E,EAAagpB,UAPb,SAASA,YACL,GAAmB,OAAfxkB,EAAqB,CACrB,MAAMG,EAAKhsC,UAAUisC,UACrBJ,EAAaG,EAAGt2C,cAAc/C,QAAQ,YAAc,CACvD,CACD,OAAOk5C,CACV,EAED,IACIQ,EA8BAC,EA/BAC,GAAwB,EAExBC,mBAAqB,KACrB,MAAM7pB,EAAW8pB,eACjBF,EAAwBj4C,OAAOo4C,WAAW,sCAAsCtqC,SACzE9N,OAAOo4C,WAAW,uCAAuCtqC,QAChE,MAAMuqC,EAAWF,eACbE,IAAahqB,GAAY2pB,GACzBA,EAAwBK,EAC3B,EAIL,SAASF,eACL,YAAsB54C,IAAlBw4C,EACOA,EAGAE,CAEd,CATDC,qBACAl4C,OAAOkrC,iBAAiB,UAAU,IAAMgN,uBASxCnF,EAAaoF,aAAeA,aAS5BpF,EAAauF,gBARb,SAASA,gBAAgBv/C,GACrB,MAAMs1B,EAAW8pB,eACjBJ,EAAgBh/C,EAChB,MAAMs/C,EAAWF,eACbE,IAAahqB,GAAY2pB,GACzBA,EAAwBK,EAE/B,EAMDtF,EAAawF,oBAHb,SAASA,oBAAoBj2B,GACzB01B,EAA0B11B,CAC7B,EAKDywB,EAAayF,kBAHb,SAASA,oBACL,OAAOL,eAAiBmjB,EAAc,IACzC,CAEJ,CAvDD,CAuDGvoB,IAAiBA,EAAe,CAAE,IAKrC,MAAMipB,sBAAsBzoB,OACxB,aAAIkS,GACA,MAAO,SACV,CAKD,WAAArtD,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAK0jE,uBAAyB,KAC9B1jE,KAAKikB,MAAQuQ,EAAY0iB,MAAQ1iB,EAAY3B,MAC7C7yB,KAAK2jE,MAAQ1oB,CAChB,CACD,aAAAtF,GACI,MAAO,eACV,CAMD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GAChBzN,KAAK4jE,qBACR,CAID,WAAA1oB,GACIl7C,KAAKswD,SACDtwD,KAAKyN,QAAQo2D,iBACb7jE,KAAK8jE,8BAEZ,CACD,kBAAA3oB,GACQn7C,KAAKyN,QAAQs2D,sBACR/jE,KAAKgkE,cAAcC,YACpBjkE,KAAK2jE,MAAMt5B,YAAYrqC,KAAKgkE,eAEvC,CACD,gBAAA5oB,GACQp7C,KAAKyN,QAAQs2D,qBACT/jE,KAAKgkE,cAAcC,YACnBjkE,KAAK2jE,MAAM94B,YAAY7qC,KAAKgkE,cAEvC,CACD,WAAA1oB,GACIt7C,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,UAAA7O,CAAWtmC,GAwBP,GAvBAzN,KAAKyN,QAAU,CACXy2D,aAAa,EACbL,iBAAiB,EACjBM,qBAAqB,EACrBC,0BAA0B,EAC1BC,qBAAqB,EACrBC,wBAAwB,EACxBC,gBAAgB,EAChBC,cAAc,EACdC,qBAAqB,EACrBC,eAAgB,CAAEz1C,iBAAiB,EAAMC,aAAa,EAAMC,cAAc,GAC1Ew1C,eAAe,EACfC,cAAe,EACfb,qBAAqB,EACrBxjD,cAAe,EACfD,cAAc,EACdukD,oBAAoB,EACpBC,uBAAwB,KACxBC,0BAA2B,MAE3Bt3D,GACApO,EAAMwF,WAAW7E,KAAKyN,QAASA,GAE/BzN,KAAK0jE,uBAAwB,CACf1jE,KAAKq8B,QAAQrH,WACrByQ,sBAAsBzlC,KAAK0jE,uBACpC,CACD,GAAI1jE,KAAKyN,QAAQo2D,gBAAiB,CAC9B,MAAMzuC,EAAQp1B,KAAKq8B,QAAQrH,WAC3Bh1B,KAAK0jE,uBAAyBtuC,EAAM6H,oBAAoBC,IACpD,MAAM8nC,EAAQ9nC,EAAG78B,MACZ2kE,GAAUA,EAAMntC,MAAQ1D,EAAgB4D,SAAWitC,EAAMntC,MAAQ1D,EAAgB5H,KAGtFvsB,KAAK8jE,8BAA8B,GAE1C,CACJ,CACD,MAAAxT,GACI,IAAIv3C,EAAQ/Y,KAAKq8B,QAAQtH,WAKzB,GAJA/0B,KAAKygB,QACLzgB,KAAK2jE,MAAM9hB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBACjCltD,KAAK2jE,MAAM9hB,UAAUn8B,IAAI80B,EAAayF,qBACtCjgD,KAAKilE,gBAAkB39D,SAAS8iC,cAAc,OACjC,MAATrxB,IAAkBA,EAAM8F,UAAW,CACnC,IAAIqmD,EAAUnsD,EAAM8H,gBAAgB,CAChCiQ,OAAQ9wB,KAAKyN,QAAQi3D,eAAez1C,kBAAoBjvB,KAAKyN,QAAQo2D,gBACrE9yC,OAAQ/wB,KAAKyN,QAAQi3D,eAAex1C,YACpC8B,OAAQhxB,KAAKyN,QAAQi3D,eAAev1C,eAAiBnvB,KAAKyN,QAAQo2D,gBAClEtjD,cAAevgB,KAAKyN,QAAQ8S,cAC5BD,aAActgB,KAAKyN,QAAQ6S,aAC3BF,iBAAiB,IAErBpgB,KAAKmlE,gBAAkBnlE,KAAKolE,aAAaF,EAASllE,KAAKilE,gBAAiB,GACxEjlE,KAAK2jE,MAAMt5B,YAAYrqC,KAAKmlE,gBAC/B,CACGnlE,KAAKyN,QAAQk3D,cACb3kE,KAAKqlE,kBAGLrlE,KAAKilE,gBAAgBrtD,MAAM6kC,IAAM,IAEjCz8C,KAAKyN,QAAQy2D,cAAgBlkE,KAAKyN,QAAQo2D,gBAC1C7jE,KAAKslE,kBAGLtlE,KAAKilE,gBAAgBrtD,MAAMwlC,OAAS,GAE3C,CACD,YAAAgoB,CAAaprD,EAAQurD,EAAOr9C,GACxB,IAAIs9C,EACAC,EAAan+D,SAAS8iC,cAAc,OACxCq7B,EAAW5jB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,yBACjCuY,EAAW5jB,UAAUn8B,IAAI80B,EAAayF,qBACtC,IAAIylB,EAAiBp+D,SAAS8iC,cAAc,OAC5Cs7B,EAAe7jB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,6BACrCwY,EAAe7jB,UAAUn8B,IAAI80B,EAAayF,qBAC1C,IAAI0lB,EAAYr+D,SAAS8iC,cAAc,SACvCu7B,EAAU9jB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,+BAChC,IAAI0Y,EAAYt+D,SAAS8iC,cAAc,SACvCw7B,EAAU3uD,KAAO,WACjB2uD,EAAUhlB,MAAQ5mC,EAAOuD,KACzB,IAIIsoD,EAAUtT,EAAWuT,EAJrBC,EAAmBz+D,SAAS8iC,cAAc,KAC9C27B,EAAiBx7B,KAAO,qBACxBw7B,EAAiBnlB,MAAQ,GAAGthD,EAAKuU,QAAQ,mBAAmBmG,EAAOuD,OACnEwoD,EAAiBlkB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,gCAEvC,IAAI8Y,EAAgB99C,EAChB+9C,kBAAoB,CAAC7mD,EAAQomD,IACnBA,EAAYtR,iBAAiB,IAAIl0D,KAAKktD,kCAAkC9tC,OACvExd,OAAS,EAWxB,GATI2jE,GACAC,EAAcD,EACdC,EAAY5iB,UAAY,IAGxB4iB,EAAcl+D,SAAS8iC,cAAc,OAEzCo7B,EAAY3jB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,oBAClCsY,EAAY3jB,UAAUn8B,IAAI80B,EAAayF,qBACnCjmC,EAAOvU,IAAmB,IAAbuU,EAAOvU,GAAU,CAC9BkgE,EAAUjjB,UAAY1oC,EAAOuD,KAC7BkoD,EAAWp7B,YAAYs7B,GACnB3lE,KAAKyN,QAAQ82D,gBACboB,EAAU7N,aAAa8N,EAAWD,EAAU5R,YAEhD0R,EAAW3N,aAAaiO,EAAkBN,EAAW1R,YACjD/zD,KAAKyN,QAAQ+2D,cAAgBxqD,EAAOrB,aACpCgtD,EAAUjlB,aAAa,QAAS1mC,EAAOrB,aAE3C,IAAK,IAAI/T,EAAI,EAAGA,EAAIohE,EAAephE,IAAK,CACpC,IAAIshE,EAAU5+D,SAAS8iC,cAAc,OACrC87B,EAAQrkB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,2BAC9BuY,EAAW3N,aAAaoO,EAAST,EAAW1R,WAC/C,CACDyR,EAAYn7B,YAAYo7B,GACxBC,EAAe/tC,QAAS,EACxBquC,GACH,CACD,IAAIG,EAAcnsD,EAAO6F,MAAQ7F,EAAO6F,MAAMje,OAAS,EACvD,IAAK,IAAIgD,EAAI,EAAGA,EAAIuhE,EAAavhE,IAAK,CAClC,IAAIvC,EAAO2X,EAAO6F,MAAMjb,GACxB,GAAIvC,EAAKyd,SACL4lD,EAAer7B,YAAYrqC,KAAKolE,aAAa/iE,EAAM,KAAM2jE,SAGzD,IAAK3jE,EAAK0Y,aAAgBkrD,kBAAkB5jE,EAAK0Y,WAAY2qD,GAAkB,CAC3EnT,EAAYjrD,SAAS8iC,cAAc,SACnCmoB,EAAU7P,UAAYrgD,EAAKkb,KAC3Bg1C,EAAU1Q,UAAUn8B,IAAI,GAAG1lB,KAAKktD,+BAC5BltD,KAAKyN,QAAQ82D,iBACbuB,EAAYx+D,SAAS8iC,cAAc,SACnC07B,EAAU7uD,KAAO,WACjB6uD,EAAUllB,MAAQv+C,EAAKkb,KACvBg1C,EAAUuF,aAAagO,EAAWvT,EAAUwB,YACxC/zD,KAAKyN,QAAQo2D,iBACbiC,EAAUnzB,iBAAiB,UAAWzV,IAClC,MAAMnkB,EAAQ/Y,KAAKq8B,QAAQtH,WACrBK,EAAQp1B,KAAKq8B,QAAQrH,WACrBoxC,EAAWlpC,EAAGmpC,cACdjnD,EAASgnD,EAAShmB,cAAcA,cAAc6V,aAAa,WACjE,GAAIl9C,EAAMuG,kBAAkBF,EAAQ,eAChC,GAAIgnD,EAASE,QAAS,CAClB,MAAMpsD,EAAOnB,EAAMoG,iBAAiBC,GAC9B6J,EAASmM,EAAMqN,UAAU,CAC3BljB,UAAWrF,IACZ,GACHkb,EAAMiO,wBAAwBjP,EAAkBkP,IAAKra,EACxD,KACI,CACD,MAAMvG,EAAU0S,EAAM+I,aACjB/7B,QAAOwjB,GAAOA,EAAI5K,KAAK8B,MAAQoX,EAAQgB,iBACrCtP,EAAI5K,KAAKxa,QAAU4e,IACtBsD,EAAQ9gB,OAAS,IACjBwzB,EAAMwO,aAAalhB,EAAQ,IAC3B0S,EAAMiO,wBAAwBjP,EAAkBpmB,OAAQ0U,EAAQ,IAEvE,CACJ,KAIT1iB,KAAKyN,QAAQ+2D,cAAgBniE,EAAKsW,aAClC45C,EAAU7R,aAAa,QAASr+C,EAAKsW,aAEzC,IAAK,IAAI6kB,EAAI,EAAGA,EAAIwoC,EAAgB,EAAGxoC,IAAK,CACxC,IAAI0oC,EAAU5+D,SAAS8iC,cAAc,OACrC87B,EAAQrkB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,2BAC9BqF,EAAUuF,aAAaoO,EAAS3T,EAAUwB,WAC7C,CACD8R,EAAWv+D,SAAS8iC,cAAc,OAClCy7B,EAAShkB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,yBACI,GAA/BuY,EAAW7iB,UAAUhhD,QACrBikE,EAAShkB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,8BAEnC2Y,EAASjjB,UAAY,GACrBijB,EAASx7B,YAAYkoB,GACrBsT,EAASnlB,aAAa,UAAWr+C,EAAKoD,IAClCzF,KAAKyN,QAAQg3D,sBAAwBzkE,KAAKyN,QAAQo2D,iBAClDzd,EAAcU,sBAAsB,CAChCtL,QAASqqB,EACThe,MAAO,aACPxnD,KAAM,CAAE+e,OAAQ/c,EAAKoD,IACrBiiD,SAAW/B,IACPA,EAAU/C,UAAY,GACtB,MAAM2P,EAAYjrD,SAAS8iC,cAAc,QACzCmoB,EAAU7P,UAAYrgD,EAAKkb,KAC3BooC,EAAUtb,YAAYkoB,EAAU,IAIxCvyD,KAAKyN,QAAQs3D,2BACb/kE,KAAKyN,QAAQs3D,0BAA0Bc,GAE3CH,EAAer7B,YAAYw7B,EAC9B,CAER,CAgBD,GAfIH,EAAe9iB,UAAUhhD,SACzB4jE,EAAYn7B,YAAYq7B,GACxBK,EAAiBpzB,iBAAiB,SAAU3oB,IACxC07C,EAAe/tC,QAAU+tC,EAAe/tC,OACxC,IAAI6jB,EAAUxxB,EAAMvmB,OAChBi4C,EAAY,GAAG17C,KAAKktD,oCACpB1R,EAAQqG,UAAU3mB,SAASwgB,GAC3BF,EAAQqG,UAAUE,OAAOrG,GAGzBF,EAAQqG,UAAUn8B,IAAIg2B,GAE1B1xB,EAAMo6B,gBAAgB,KAG1BshB,EAAgB,CAChB,MAAMa,EAAab,EAAexR,iBAAiB,IAAIl0D,KAAKktD,yCAC5D,IAAK,IAAItoD,EAAI,EAAGA,EAAI2hE,EAAW3kE,OAAQgD,IAAK,CACvB2hE,EAAW3hE,GACnB+tC,iBAAiB,SAAU3oB,IAClBA,EAAMvmB,OACR6iE,UAAYV,EAAUU,QAC9BV,EAAUU,SAAU,EAE6C,IAA5DZ,EAAexR,iBAAiB,iBAAiBtyD,SACtDgkE,EAAUU,SAAU,GAExBt8C,EAAMk9B,iBAAiB,GAE9B,CACJ,CAqCD,OApCA0e,EAAUjzB,iBAAiB,SAAU3oB,IACjC,IAAIwxB,EAAUxxB,EAAMvmB,OACpB,MAAM6iC,EAAWo/B,EAAexR,iBAAiB,eACjD,IAAK,IAAItvD,EAAI,EAAGA,EAAI0hC,EAAS1kC,OAAQgD,IAAK,CACvB0hC,EAAS1hC,GACjB0hE,QAAU9qB,EAAQ8qB,OAC5B,CACD,GAAItmE,KAAKyN,QAAQo2D,gBAAiB,CAC9B,MAAMzuC,EAAQp1B,KAAKq8B,QAAQrH,WACrBjc,EAAQ/Y,KAAKq8B,QAAQtH,WACrByxC,EAAW,GACXC,EAAYxiE,MAAM2e,KAAK8iD,EAAexR,iBAAiB,IAAIl0D,KAAKktD,0BACtE,IAAK,MAAMwZ,KAAQD,EAAW,CAC1B,MAAMrnD,EAASsnD,EAAKzQ,aAAa,WAC7Bl9C,EAAMuG,kBAAkBF,EAAQ,gBAChConD,EAAS/hE,KAAK2a,EAErB,CACD,GAAIo8B,EAAQ8qB,QACR,IAAK,MAAMlnD,KAAUonD,EACjBpxC,EAAMqN,UAAU,CAAEE,YAAavjB,IAAU,OAG5C,CACD,MAAMsD,EAAU0S,EAAM+I,aACjB/7B,QAAOwjB,GAAOA,EAAI5K,KAAK8B,MAAQoX,EAAQgB,iBACrCsxC,EAAS1gE,QAAQ8f,EAAI5K,KAAKxa,QAAU,IAC3C40B,EAAMoP,cAAc9hB,EAAS,KAChC,CACD0S,EAAMiO,yBACT,CACDrZ,EAAMk9B,iBAAiB,IAEvBqe,GAASvlE,KAAKilE,iBAAmBjlE,KAAKyN,QAAQq3D,wBAC9C9kE,KAAKyN,QAAQq3D,uBAAuBU,GAEjCA,CACV,CACD,eAAAH,GACIrlE,KAAK2mE,eAAiBr/D,SAAS8iC,cAAc,OAC7CpqC,KAAK2mE,eAAe9kB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,wBAC1CltD,KAAK2mE,eAAe9kB,UAAUn8B,IAAI80B,EAAayF,qBAC/CjgD,KAAK4mE,eAAiBt/D,SAAS8iC,cAAc,SAC7CpqC,KAAK4mE,eAAe/kB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,8BAC1CltD,KAAK4mE,eAAej0B,iBAAiB,SAAUrT,IAC3C,MAAM/lB,EAAQvZ,KAAK2jE,MAAMzP,iBAAiB,IAAIl0D,KAAKktD,yBACnD,IAAK,IAAItoD,EAAI,EAAGA,EAAI2U,EAAM3X,OAAQgD,IAAK,CACnC,MAAMsV,EAAOX,EAAM3U,GACnBsV,EAAKyd,QAAU33B,KAAK6mE,qBAAqB3sD,EAC5C,CACD,MAAMosB,EAAWtmC,KAAK2jE,MAAMzP,iBAAiB,aAAal0D,KAAKktD,oBAC/D,IAAK,IAAItoD,EAAI,EAAGA,EAAI0hC,EAAS1kC,OAAQgD,IAAK,CACtC,MAAMoV,EAASssB,EAAS1hC,GACxB,IAAI2U,EAAQS,EAAOk6C,iBAAiB,IAAIl0D,KAAKktD,yBACzC4Z,EAAmB,EACvB,IAAK,IAAIliE,EAAI,EAAGA,EAAI2U,EAAM3X,OAAQgD,IACC,SAA3B2U,EAAM3U,GAAGgT,MAAM0yB,SACfw8B,IAGR9sD,EAAO2d,OAA8B,IAArBmvC,CACnB,CACiC,KAA9B9mE,KAAK4mE,eAAepmE,MACpBR,KAAK+mE,cAEL/mE,KAAKgnE,WAAW,IAExBhnE,KAAK2mE,eAAet8B,YAAYrqC,KAAK4mE,gBACrC5mE,KAAK2jE,MAAM7L,aAAa93D,KAAK2mE,eAAgB3mE,KAAK2jE,MAAM5P,WAC3D,CACD,eAAAuR,GACI,IAAI2B,EAAW,GAAGjnE,KAAKktD,uBACnBga,EAAiB5/D,SAAS8iC,cAAc,OAC5C88B,EAAerlB,UAAUn8B,IAAIuhD,GAC7BC,EAAerlB,UAAUn8B,IAAI80B,EAAayF,qBAC1C,IAAIknB,EAAgB7/D,SAAS8iC,cAAc,OAC3C+8B,EAActlB,UAAUn8B,IAAI,GAAGuhD,gBAC/BE,EAAcvmB,MAAQ,aACtB,IAAIwmB,EAAkB9/D,SAAS8iC,cAAc,OAC7Cg9B,EAAgBvlB,UAAUn8B,IAAI,GAAGuhD,kBACjCG,EAAgBxmB,MAAQ,kBACxB,IAAIymB,EAAiB//D,SAAS8iC,cAAc,OAC5Ci9B,EAAexlB,UAAUn8B,IAAI,GAAGuhD,iBAChCI,EAAezmB,MAAQ,aACvB,IAAI0mB,EAAchgE,SAAS8iC,cAAc,OACzCk9B,EAAYzlB,UAAUn8B,IAAI,GAAGuhD,cAC7BK,EAAY1mB,MAAQ,gBACpB,IAAI2mB,EAAgBjgE,SAAS8iC,cAAc,OAC3Cm9B,EAAc1lB,UAAUn8B,IAAI,GAAGuhD,eAC/B,IAAIO,EAAiBlgE,SAAS8iC,cAAc,OAC5Co9B,EAAe3lB,UAAUn8B,IAAI,GAAGuhD,gBAChC,IAAIluD,EAAQ/Y,KAAKq8B,QAAQtH,WACrB/0B,KAAKyN,QAAQ02D,sBACbgD,EAAcvmB,MAAQthD,EAAKuU,QAAQ,mBACnC0zD,EAAcl9B,YAAY88B,GAC1BA,EAAcx0B,iBAAiB,SAAS,KACpC3yC,KAAKynE,WAAW,KAGpBznE,KAAKyN,QAAQ22D,2BACbgD,EAAgBxmB,MAAQthD,EAAKuU,QAAQ,qBACrC0zD,EAAcl9B,YAAY+8B,GAC1BA,EAAgBz0B,iBAAiB,SAAS,KACtC3yC,KAAK0nE,aAAa,KAGtB1nE,KAAKyN,QAAQ42D,sBACbgD,EAAezmB,MAAQthD,EAAKuU,QAAQ,oBACpC2zD,EAAen9B,YAAYg9B,GAC3BA,EAAe10B,iBAAiB,SAAS,KACrC,MAAMg1B,EAAe3nE,KAAK2jE,MAAMzP,iBAAiB,IAAIl0D,KAAKktD,yBAC1D,IACI9tC,EADAonD,EAAW,GAEf,MAAMpxC,EAAQp1B,KAAKq8B,QAAQrH,WAC3BI,EAAM0P,iBAAiB,CACnBnhC,OAAQikE,KACR36D,OAAQ,UAEZ,IAAK,IAAIrI,EAAI,EAAGA,EAAI+iE,EAAa/lE,OAAQgD,IAAK,CAC1C,MAAMijE,EAAcF,EAAa/iE,GACrBijE,EAAYtgE,qBAAqB,SAAS,GAC5C++D,UACNlnD,EAASyoD,EAAY5R,aAAa,WAC9Bl9C,EAAMuG,kBAAkBF,EAAQ,gBAChConD,EAAS/hE,KAAK2a,GAGzB,CACD,IAAK,IAAIA,KAAUonD,EAAU,CACzB,MAAMtsD,EAAOnB,EAAMoG,iBAAiBC,GACpCgW,EAAMqN,UAAU,CACZljB,UAAWrF,IACZ,EACN,CACDkb,EAAMwC,mBACF53B,KAAKyN,QAAQo3D,oBACb7kE,KAAK0nE,cAETtyC,EAAM0P,iBAAiB,CACnBnhC,OAAQikE,KACR36D,OAAQ,UACV,KAGNjN,KAAKyN,QAAQ62D,yBACbgD,EAAY1mB,MAAQthD,EAAKuU,QAAQ,uBACjC2zD,EAAen9B,YAAYi9B,GAC3BA,EAAY30B,iBAAiB,SAAS,KAClC,IAEIvzB,EAFAuoD,EAAe3nE,KAAK2jE,MAAMzP,iBAAiB,IAAIl0D,KAAKktD,yBACpDsZ,EAAW,GAEXpxC,EAAQp1B,KAAKq8B,QAAQrH,WACzBI,EAAM0P,iBAAiB,CACnBnhC,OAAQikE,KACR36D,OAAQ,UAEZ,IAAK,IAAIrI,EAAI,EAAGA,EAAI+iE,EAAa/lE,OAAQgD,IAAK,CAC1C,MAAMijE,EAAcF,EAAa/iE,GACrBijE,EAAYtgE,qBAAqB,SAAS,GAC5C++D,UACNlnD,EAASyoD,EAAY5R,aAAa,WAC9Bl9C,EAAMuG,kBAAkBF,EAAQ,oBAChConD,EAAS/hE,KAAK2a,GAGzB,CACD,IAAK,IAAIA,KAAUonD,EACfpxC,EAAM4O,mBAAmB,CACrBrB,YAAavjB,IAGrBgW,EAAMwC,mBACF53B,KAAKyN,QAAQo3D,oBACb7kE,KAAK0nE,cAETtyC,EAAM0P,iBAAiB,CACnBnhC,OAAQikE,KACR36D,OAAQ,UACV,KAGVi6D,EAAe78B,YAAYk9B,GAC3BL,EAAe78B,YAAYm9B,GAC3BxnE,KAAK2jE,MAAMt5B,YAAY68B,EAC1B,CACD,oBAAAL,CAAqB3sD,GAEjB,GADkBA,EAAKwmD,cAAc,eACvB4F,QACV,OAAO,EAEX,MACMwB,EADY5tD,EAAKwmD,cAAc,SACPqH,YAC9B,GAAI/nE,KAAKgoE,gBAAgBF,GACrB,OAAO,EAEX,MACM3mD,EADajH,EAAKkmC,cAAcA,cAAcsgB,cAAc,IAAI1gE,KAAKktD,yBAC1CwT,cAAc,SAASqH,YACxD,QAAI/nE,KAAKgoE,gBAAgB7mD,EAI5B,CACD,eAAA6mD,CAAgBxnE,GACZ,IAAIynE,EAAajoE,KAAK4mE,eAAepmE,MACrC,MAAkB,IAAdynE,IAE8B,GAA9BjoE,KAAKyN,QAAQm3D,eAAsBpkE,EAAMqI,cAAc/C,QAAQmiE,EAAWp/D,gBAAkB,GAE9D,GAA9B7I,KAAKyN,QAAQm3D,eAA+E,GAAzDpkE,EAAMqI,cAAc/C,QAAQmiE,EAAWp/D,eAGjF,CACD,4BAAAi7D,GACI9jE,KAAK0nE,cACL,MACMQ,EADQloE,KAAKq8B,QAAQrH,WACDmJ,aACrB/7B,QAAOwjB,GAAOA,EAAI5K,KAAK8B,MAAQoX,EAAQgB,kBAC5C,IAAK,MAAMjM,KAAUi/C,EAAa,CAC9B,MAAMrC,EAAW7lE,KAAKilE,gBACjBvE,cAAc,IAAI1gE,KAAKktD,kCAAkCjkC,EAAOjO,KAAKxa,WAC1E,IAAI4lE,EAAWP,EAASnF,cAAc,iBACtC0F,EAASE,SAAU,EACnB,IAAI6B,EAActC,EAASzlB,cAC3B,KAAO+nB,GACAA,EAAYtmB,UACV3mB,SAAS,GAAGl7B,KAAKktD,8BAA8B,CACpDib,EAAYxwC,QAAS,EACrB,MAAMywC,EAAUD,EAAY/nB,cAC5B,IAAIgoB,GAAWD,IAAgBC,EAAQ9W,kBAOnC,MANA8U,EAAWgC,EAAQ9W,kBACdoP,cAAc,iBACnB0F,EAASE,SAAU,EACnB6B,EAAcC,EAAQhoB,aAK7B,CACJ,CACJ,CACD,SAAA4mB,GACI,IAAK,IAAIpiE,EAAI,EAAGA,EAAI5E,KAAKilE,gBAAgBoD,WAAWzmE,OAAQgD,IAAK,CAC7D,MACMo2B,EADQh7B,KAAKilE,gBAAgBoD,WAAW,GACzBnU,iBAAiB,IAAIl0D,KAAKktD,6BAC/C,IAAK,IAAI1vB,EAAI,EAAGA,EAAIxC,EAAOp5B,OAAQ47B,IAAK,CACvBxC,EAAOwC,GACf7F,QAAS,CACjB,CACJ,CACD,MAAM2wC,EAActoE,KAAKilE,gBAAgB/Q,iBAAiB,IAAIl0D,KAAKktD,gCACnE,IAAK,IAAItoD,EAAI,EAAGA,EAAI0jE,EAAY1mE,OAAQgD,IAAK,CAC5B0jE,EAAY1jE,GACpBi9C,UAAUn8B,IAAI,GAAG1lB,KAAKktD,oCAC9B,CACJ,CACD,WAAA6Z,GACI,IAAK,IAAIniE,EAAI,EAAGA,EAAI5E,KAAKilE,gBAAgBoD,WAAWzmE,OAAQgD,IAAK,CAC7D,MACMo2B,EADQh7B,KAAKilE,gBAAgBoD,WAAW,GACzBnU,iBAAiB,IAAIl0D,KAAKktD,6BAC/C,IAAK,IAAI1vB,EAAI,EAAGA,EAAIxC,EAAOp5B,OAAQ47B,IAAK,CACvBxC,EAAOwC,GACf7F,QAAS,CACjB,CACJ,CACD,MAAM2wC,EAActoE,KAAKilE,gBAAgB/Q,iBAAiB,IAAIl0D,KAAKktD,gCACnE,IAAK,IAAItoD,EAAI,EAAGA,EAAI0jE,EAAY1mE,OAAQgD,IAAK,CAC5B0jE,EAAY1jE,GACpBi9C,UAAUE,OAAO,GAAG/hD,KAAKktD,oCACjC,CACJ,CACD,SAAAua,GACI,MAAMc,EAASvoE,KAAKmlE,gBAAgBjR,iBAAiB,SACrD,IAAK,IAAItvD,EAAI,EAAGA,EAAI2jE,EAAO3mE,OAAQgD,IAAK,CACtB2jE,EAAO3jE,GACf0hE,SAAU,CACnB,CACJ,CACD,WAAAoB,GACI,MAAMa,EAASvoE,KAAKmlE,gBAAgBjR,iBAAiB,SACrD,IAAK,IAAItvD,EAAI,EAAGA,EAAI2jE,EAAO3mE,OAAQgD,IAAK,CACtB2jE,EAAO3jE,GACf0hE,SAAU,CACnB,CACJ,CACD,mBAAA1C,GACI5jE,KAAKgkE,cAAgB18D,SAAS8iC,cAAc,OAC5CpqC,KAAKgkE,cAAcniB,UAAUn8B,IAAI,GAAGw6B,mBACpClgD,KAAKgkE,cAAcniB,UAAUn8B,IAAI80B,EAAayF,qBAC9CjgD,KAAKgkE,cAAcphB,UAAY,sVAClC,CACD,KAAAniC,GACIzgB,KAAK2jE,MAAM/gB,UAAY,EAC1B,EAGL,MAAM4lB,UACF,aAAIC,GACA,OAAOzoE,KAAK0oE,UACf,CACD,aAAIxb,GACA,MAAO,WACV,CACD,WAAArtD,CAAY4N,GACRzN,KAAK2oE,iBAAkB,EACvB3oE,KAAK4oE,cAAe,EAEpB5oE,KAAK6oE,WAAap7D,EAAQq7D,MAAQ,KAClC9oE,KAAK+oE,YAAct7D,EAAQ+K,QAAU,KACrCxY,KAAKogD,cAAgB3yC,EAAQ26C,WAAa9gD,SAASD,KACnDrH,KAAKgpE,WAAav7D,EAAQu7D,YAAc,EACxChpE,KAAKipE,SAAW,KAChBjpE,KAAKkpE,gBAAkBz7D,EAAQy7D,kBAAmB,EAClDlpE,KAAKmpE,OAAS17D,EAAQ07D,QAAU,GAChCnpE,KAAKopE,qBAAuB37D,EAAQ27D,sBAAwB,KAE5DppE,KAAK0oE,WAAa,CAAEjjE,GAAI,KAAM8X,KAAM,KAAM8rD,QAAS,MACnDrpE,KAAK6f,MAAQpS,EAAQoS,OAAS,GAC9B7f,KAAKspE,WAAa,KAClBtpE,KAAKupE,aAAe,KACpBvpE,KAAKwpE,aAAc,EACnBxpE,KAAK4oE,aAAen7D,EAAQm7D,aAC5B5oE,KAAKypE,QAAU,EACfzpE,KAAK0pE,eACR,CACD,QAAA5jD,GACI,OAAO9lB,KAAK6f,KACf,CACD,QAAA8pD,CAAS9pD,GACL7f,KAAK6f,MAAQA,CAChB,CACD,aAAA6pD,GACI,IAAK1pE,KAAK6f,MACN,OAGJ,MAAM+pD,EAAc5pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOC,MAAQ,QACnDC,EAAc/pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOG,MAAQ,QACzDhqE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOI,OAC7B,MAAMC,EAAiBlqE,KAAK6oE,WAAWjxD,MAAMuyD,UAAUC,YAAc,GAC/DC,EAAerqE,KAAK6oE,WAAWjxD,MAAMuyD,UAAUG,UAAY,OAC3DC,EAAcvqE,KAAK6oE,WAAWp7D,QAAQ88D,YACtCC,EAAaxqE,KAAK6oE,WAAWp7D,QAAQ+8D,WAErCC,EAAiBlqB,MAAM,OACxBmB,SAASlH,EAAayF,qBACvBjgD,KAAK6oE,WAAWp7D,QAAQi9D,kBACxBD,EACKrpB,SAAS,kBAAmBwoB,GAC5BxoB,SAAS,SAAU,aACnBA,SAAS,cAAewoB,GACxBxoB,SAAS,kBAAmBphD,KAAK6oE,WAAWjxD,MAAMiyD,OAAOc,QACzDvpB,SAAS,SAAU,qBACnBA,SAAS,QAAS,QAClBA,SAAS,SAAU,QAE5BqpB,EACKrpB,SAAS,UAAWphD,KAAK6oE,WAAW9L,QACpC3b,SAAS,WAAY,YACrBA,SAAS,UAAW,QACzB,IAAIwpB,EAAUH,EAAernB,QAC7BwnB,EAAmB,UAAI5qE,KACvB,MAAMyoE,EAAYzoE,KAAK0oE,WAEvB,GAAI6B,GAAmC,IAApBvqE,KAAKgpE,aAA4D,IAAxChpE,KAAK6oE,WAAWp7D,QAAQo9D,YAAsB,CACtF,MAAMC,EAAWxjE,SAAS8iC,cAAc,OACxC0gC,EAASjpB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,sBAC/B4d,EAAmB,SAAIrC,EACvBzoE,KAAK+qE,SAAWzjE,SAAS8iC,cAAc,UACnCpqC,KAAK6oE,WAAWp7D,QAAQi9D,mBACxBI,EAASlzD,MAAMozD,aAAe,YAC9BF,EAASlzD,MAAMqzD,QAAU,MACzBH,EAASlzD,MAAMszD,aAAe,MAC9BlrE,KAAK+qE,SAASnzD,MAAMqzD,QAAU,QAC9BjrE,KAAK+qE,SAASnzD,MAAMwxC,OAAS,WAEjC,MAAM+hB,EAAgB7jE,SAAS47C,eAAeljD,KAAK6oE,WAAWp7D,QAAQ29D,QAAQtK,QAC9E9gE,KAAK+qE,SAAS1gC,YAAY8gC,GAC1BL,EAASzgC,YAAYrqC,KAAK+qE,UAE1B,MAAMM,EAAY/jE,SAAS8iC,cAAc,UACzCihC,EAAUxpB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,oBAC5BltD,KAAK6oE,WAAWp7D,QAAQi9D,mBACxBW,EAAUzzD,MAAMqzD,QAAU,QAC1BI,EAAUzzD,MAAMwxC,OAAS,UACzBiiB,EAAUzzD,MAAM0zD,WAAa,QAEjC,MAAMC,EAAajkE,SAAS47C,eAAeljD,KAAK6oE,WAAWp7D,QAAQ29D,QAAQjR,QAC3EkR,EAAUhhC,YAAYkhC,GACtBT,EAASzgC,YAAYghC,GACrBT,EAAQvgC,YAAYygC,GACpBrC,EAAUY,QAAUyB,EACpB9qE,KAAK+qE,SAASp4B,iBAAiB,SAAS,KACpC3yC,KAAK8gE,OAAO9gE,KAAK0oE,WAAW,IAEhC2C,EAAU14B,iBAAiB,SAAS,KAChC3yC,KAAK6oE,WAAW2C,UAAU,GAEjC,CAGD,GAAwB,MAApBxrE,KAAK+oE,cACD/oE,KAAK6oE,WAAWp7D,QAAQg+D,sBAAwBzrE,KAAK6f,MAAMje,QAAU5B,KAAK6oE,WAAWp7D,QAAQi+D,oBAAqB,CACtH,MAAMC,EAAmBprB,MAAM,OAC1BmB,SAAS,GAAG1hD,KAAKktD,uBAClBltD,KAAK6oE,WAAWp7D,QAAQi9D,mBACxBiB,EACKvqB,SAAS,gBAAiB,kBAC1BA,SAAS,mBAAoBwoB,GAC7BxoB,SAAS,eAAgBphD,KAAK6oE,WAAWjxD,MAAMiyD,OAAOc,QACrC,IAAlBT,GACAyB,EAAiBvqB,SAAS,cAAe8oB,GAE7CyB,EACKvqB,SAAS,YAAaipB,GACtBjpB,SAAS,QAAS2oB,GAClB3oB,SAAS,SAAU,WACnBA,SAAS,aAAc,QACvBA,SAAS,UAAW,QAE7B,MAAMwqB,EAAuBrrB,MAAM,SAC9B96C,GAAG,aACHlF,KAAK,aACL0W,KAAK,QACLuD,KAAK,IACLknC,SAAS,GAAG1hD,KAAKktD,uBACjBhL,GAAG,SAAUhlB,IACdl9B,KAAK6rE,eAAe7rE,KAAKspE,YACzBtpE,KAAK8rE,YAAY9rE,KAAK+rE,UAAUvrE,MAAM,IAErC0hD,GAAG,WAAYhlB,IAEhB,OADcA,EAAGinB,SAEb,KAAK,GACGnkD,KAAKspE,YACLtpE,KAAKspE,WAAWD,QAAQ1+B,QAE5B,MACJ,KAAK,GACD3qC,KAAKgsE,mBACL,MACJ,KAAK,GACDhsE,KAAKisE,qBACL,MACJ,KAAK,GACIjsE,KAAK+rE,UAAUvrE,OAChBR,KAAKksE,aAAalsE,KAAKspE,YAGlC,IAEDtpE,KAAK6oE,WAAWp7D,QAAQi9D,kBACxBkB,EACKxqB,SAAS,cAAe,aACxBA,SAAS,YAAa,OACtBA,SAAS,QAAS,QAEvBopB,GACAoB,EAAqBlqB,SAAS,eAElC1hD,KAAK+rE,UAAYH,EAAqBxoB,QACtCpjD,KAAKmsE,UAAYR,EAAiBvoB,QAClCpjD,KAAKmsE,UAAU9hC,YAAYrqC,KAAK+rE,WAChCnB,EAAQvgC,YAAYrqC,KAAKmsE,UAC5B,CACD,MAAMC,EAAY9kE,SAAS8iC,cAAc,OACzCgiC,EAAUC,SAAW,EACrB9rB,MAAM6rB,GACD1qB,SAAS,GAAG1hD,KAAKktD,uBACjBxL,SAASlH,EAAayF,qBAC3BmsB,EAAUx0D,MAAM00D,UAAY,SAC5BF,EAAUx0D,MAAM20D,UAAY,OAC5BH,EAAUx0D,MAAMqlC,SAAW,WAC3B2tB,EAAQvgC,YAAY+hC,GACpBpsE,KAAKipE,SAAW2B,EAChB5qE,KAAKosE,UAAYA,EACbpsE,KAAKmpE,SACLnpE,KAAKipE,SAASxjE,GAAKzF,KAAKmpE,QAExBnpE,KAAK+oE,cACL/oE,KAAKipE,SAASrxD,MAAMmlD,OACd/8D,KAAK+oE,YAAYE,SAASrxD,MAAMmlD,QAE1C/8D,KAAK8rE,cAqCLM,EAAUz5B,iBAAiB,WApCM3oB,IAC7B,OAAQA,EAAMwiD,OACV,KAAK,GACGxsE,KAAK6oE,WAAWp7D,QAAQ88D,YACxBvqE,KAAK6oE,WAAW4D,eAAe1B,SAASpgC,QAGpC3qC,KAAKspE,YACLtpE,KAAKspE,WAAWD,QAAQ1+B,QAGhC,MACJ,KAAK,GACG3qC,KAAKspE,YACLtpE,KAAKspE,WAAWD,QAAQ1+B,QAE5B,MACJ,KAAK,GACG3qC,KAAK+oE,cAAgB/oE,KAAK2oE,kBAC1B3oE,KAAK6rE,eAAe7rE,KAAKspE,YACzBtpE,KAAK+oE,YAAYpoB,SAErB,MACJ,KAAK,GACD3gD,KAAKksE,aAAalsE,KAAKspE,YACvB,MACJ,KAAK,GACDtpE,KAAKgsE,mBACL,MACJ,KAAK,GACDhsE,KAAKisE,qBACL,MACJ,QAAS,OAEbjiD,EAAMo6B,gBAAgB,IAGtB5J,EAAaoF,iBACb5/C,KAAK0sE,SACDnsB,MAAM,MAAOqqB,GACRlpB,SAAS,uBACTsB,QAAQ1jD,EAAKuU,QAAQ,gBACrBquC,GAAG,SAAS,KACbliD,KAAK6oE,WAAW2C,UAAU,IAEzBpoB,QAEhB,CACD,kBAAA6oB,GACI,MAAMpsD,EAAQ7f,KAAK2oE,gBAAkB3oE,KAAK2sE,cAAgB3sE,KAAK6f,MAC/D,GAAI7f,KAAKspE,WAAY,CACjB,MAAM3jE,EAAMka,EAAM/Z,QAAQ9F,KAAKspE,YAC3B3jE,EAAMka,EAAMje,OAAS,GACrB5B,KAAK4sE,aAAa/sD,EAAMla,EAAM,IAAI,EAEzC,MAEG3F,KAAK4sE,aAAa/sD,EAAM,IAAI,EAEnC,CACD,gBAAAmsD,GACI,MAAMnsD,EAAQ7f,KAAK2oE,gBAAkB3oE,KAAK2sE,cAAgB3sE,KAAK6f,MAC/D,GAAI7f,KAAKspE,WAAY,CACjB,MAAM3jE,EAAMka,EAAM/Z,QAAQ9F,KAAKspE,YAC3B3jE,EAAM,GACN3F,KAAK4sE,aAAa/sD,EAAMla,EAAM,IAAI,EAEzC,MAEG3F,KAAK4sE,aAAa/sD,EAAMA,EAAMje,OAAS,IAAI,EAElD,CACD,YAAAsqE,CAAaW,GACLA,GAAYA,EAAShtD,QAAU7f,KAAK2oE,kBACpC3oE,KAAK8sE,aAAaD,GAClBA,EAASE,SAASH,aAAaC,EAASE,SAASltD,MAAM,IAE9D,CACD,cAAAmtD,GACIhtE,KAAKosE,UAAUzrB,OAClB,CACD,cAAAssB,CAAeptD,GAEX,IAAK,IAAIjb,EAAI,EAAGA,EAAIib,EAAMje,OAAQgD,IAAK,CACnC,MAAMvC,EAAOwd,EAAMjb,GACfvC,EAAK6qE,eACL7qE,EAAK6qE,aAAa5G,QAAUtmE,KAAKmtE,eAAe9qE,IAChDA,EAAKwd,OACL7f,KAAKitE,eAAe5qE,EAAKwd,MAEhC,CACJ,CACD,cAAAstD,CAAe9qE,GACX,GAAIA,EAAKwd,MAAO,CACZ,IAAK,IAAIjb,EAAI,EAAGA,EAAIvC,EAAKwd,MAAMje,OAAQgD,IACnC,GAAI5E,KAAKmtE,eAAe9qE,EAAKwd,MAAMjb,IAC/B,OAAO,EAGf,OAAO,CACV,CAEG,OAAOvC,EAAKyiD,QAEnB,CACD,eAAAsoB,CAAgB/qE,EAAM7B,GAClB,GAAI6B,EAAKwd,MACL,IAAK,IAAIjb,EAAI,EAAGA,EAAIvC,EAAKwd,MAAMje,OAAQgD,IACnC5E,KAAKotE,gBAAgB/qE,EAAKwd,MAAMjb,GAAIpE,QAIxC6B,EAAKyiD,SAAWtkD,CAEvB,CACD,WAAA6sE,CAAYxtD,EAAOytD,GACf,IAAK,IAAI9vC,EAAI,EAAGA,EAAI3d,EAAMje,OAAQ47B,IAC1B3d,EAAM2d,GAAG3d,MACT7f,KAAKqtE,YAAYxtD,EAAM2d,GAAG3d,MAAOytD,GAG7BztD,EAAM2d,GAAGsnB,UACTwoB,EAAc7oE,KAAKob,EAAM2d,GAIxC,CACD,sBAAA+vC,CAAuB1tD,EAAO2tD,GAC1B,IAAK,IAAI5oE,EAAI,EAAGA,EAAIib,EAAMje,OAAQgD,IAC9B,GAAI4oE,EAAe3tD,EAAMjb,IACrB,OAAO,EAEf,OAAO,CACV,CACD,SAAA6oE,CAAUjyB,GACN,QAAOA,EAAkB,QAC5B,CACD,UAAAkyB,CAAWlyB,GACP,QAAOA,EAAmB,SAC7B,CACD,WAAAmyB,CAAYnyB,GACR,IAAIwI,EAAKxI,EACT,MAAQx7C,KAAKytE,UAAUzpB,IAAK,CACxB,GAAIhkD,KAAK0tE,WAAW1pB,GAChB,KAAM,sBAEVA,EAAKA,EAAG5D,aACX,CACD,OAAO4D,EAAa,QACvB,CACD,wBAAA4pB,GACI5tE,KAAK2oE,iBAAkB,EACvB,MAAMyD,EAAYpsE,KAAKosE,UACjB7B,EAAcvqE,KAAK6oE,WAAWp7D,QAAQ88D,YACtCsD,EAAsB7tE,KAAK6oE,WAAWp7D,QAAQogE,oBAC9C9D,EAAc/pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOG,MAAQ,QACzDhqE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOI,OAC7B,MAAMI,EAAerqE,KAAK6oE,WAAWjxD,MAAMuyD,UAAUG,UAAY,OAC3DwD,EAAqB9tE,KAAK6oE,WAAWkF,wBAC3C3B,EAAUxpB,UAAY,GACtB,IAAK,IAAIh+C,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IAAK,CACxC,MAAMvC,EAAOrC,KAAK6f,MAAMjb,GACxB,IAAKvC,IAASA,EAAKkb,KACf,SACJ,GAAIuwD,EAAoB,CACpB,IAAKA,EAAmBzrE,GACpB,SACJ,GAAIA,EAAKwd,OAAS7f,KAAKutE,uBAAuBlrE,EAAKwd,MAAOiuD,GACtD,QACP,CACDzrE,EAAKhC,KAAQuI,GACF5I,KAAK4I,QAEc,IAAlBvG,EAAa,WACrBA,EAAKyiD,UAAW,GAEhBziD,EAAKyiD,UAAiC,MAArB9kD,KAAKupE,eACtBvpE,KAAKupE,aAAelnE,GAExB,MAAMgnE,EAAU/hE,SAAS8iC,cAAc,OAqBvC,GApBAmW,MAAM8oB,GACD3nB,SAAS,GAAG1hD,KAAKktD,qBACjBxL,SAASlH,EAAayF,qBACvB59C,EAAKyiD,UAAY9kD,KAAK4oE,eAAiB2B,GACvClB,EAAQxnB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,sBAE9BltD,KAAKkpE,iBAAmBlpE,KAAKmpE,SAC7BE,EAAQ5jE,GAAK,QAAUzF,KAAKmpE,OAAS,IAAM9mE,EAAKoD,IAEpD2mE,EAAU/hC,YAAYg/B,GACtBA,EAAkB,SAAIhnE,EACtBgnE,EAAmB,UAAIrpE,KACvBqC,EAAKgnE,QAAUA,EACXrpE,KAAK6oE,WAAWp7D,QAAQi9D,mBACxBrB,EAAQzxD,MAAM0yD,SAAWD,EACzBhB,EAAQzxD,MAAMo2D,MAAQjE,EACtBV,EAAQzxD,MAAMq2D,YAAc,OAC5B5E,EAAQzxD,MAAMs2D,aAAe,MAC7B7E,EAAQzxD,MAAMwxC,OAAS,WAEV,OAAb/mD,EAAKkb,KACL8rD,EAAQh/B,YAAY/iC,SAAS8iC,cAAc,WAE1C,CACD,GAAImgC,EAAa,CACb,IAAI4D,EAAK7mE,SAAS8iC,cAAc,SAChC+jC,EAAGl3D,KAAO,WACVk3D,EAAG1oE,GAAK,KAAOpD,EAAKoD,GACpB0oE,EAAG7H,QAAUtmE,KAAKmtE,eAAe9qE,GACjC8rE,EAAGC,eAAiBpuE,KAAKmtE,eAAe9qE,GACxCgnE,EAAQh/B,YAAY8jC,GACpB9rE,EAAK6qE,aAAeiB,EAChBnuE,KAAK6oE,WAAWp7D,QAAQi9D,mBACxByD,EAAGv2D,MAAMy2D,OAAS,eAClBF,EAAGv2D,MAAM02D,cAAgB,MAEhC,CACD,IAAIC,EAAWlsE,EAAKkb,KAChBvd,KAAK6oE,WAAWp7D,QAAQ+gE,cACxBD,EAAWlsE,EAAKoD,GAAK,IAAM8oE,GAE/B,MAAME,EAAennE,SAAS47C,eAAeqrB,GAE7C,GADAlF,EAAQh/B,YAAYokC,GAChBpsE,EAAKwd,OAASxd,EAAKwd,MAAMje,OAAS,EAAG,CACrCynE,EAAQxnB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,iCAC9B,MAAMwhB,EAAYpnE,SAAS8iC,cAAc,QACzCskC,EAAU7sB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,2BAChCmc,EAAQh/B,YAAYqkC,GACpB,MAAMC,EAAYrnE,SAAS47C,eAAe,KAC1CwrB,EAAUrkC,YAAYskC,EACzB,CACD,MAAMC,iBAAoB1xC,IACtB,MAAM2vC,EAAW7sE,KAAK2tE,YAAYzwC,EAAGz5B,QACrC,GAAI8mE,EACA,GAAKsC,EAAShtD,OAASqd,EAAGz5B,QAAUopE,EAASK,aAOzCltE,KAAK4sE,aAAaC,OAPqC,CACvD,MAAMgC,EAAe7uE,KAAKmtE,eAAeN,GACzC7sE,KAAKotE,gBAAgBP,GAAWgC,GAChChC,EAASK,aAAa5G,SAAWuI,EACjC7uE,KAAK6oE,WAAWiG,mBACnB,MAMD9uE,KAAK4sE,aAAaC,GAClB7sE,KAAK8gE,OAAO+L,GAEhB,OAAO,CAAK,EAEhBxD,EAAQx0B,oBAAoB,QAAS+5B,kBACrCvF,EAAQ12B,iBAAiB,QAASi8B,kBAClCvF,EAAQ12B,iBAAiB,cAAezV,IACpC,MAAM76B,EAAOrC,KAAK2tE,YAAYzwC,EAAGz5B,QACjCzD,KAAK6oE,WAAWkG,gBAAiB,EAC7BlB,GACA7tE,KAAK4sE,aAAavqE,EACrB,IAELgnE,EAAQ12B,iBAAiB,cAAezV,IACpC,MAAM76B,EAAOrC,KAAK2tE,YAAYzwC,EAAGz5B,QACjCzD,KAAK6oE,WAAWkG,gBAAiB,EACjCnkD,YAAW,KACF5qB,KAAK6oE,WAAWkG,gBACblB,GAAuBxrE,GAAQrC,KAAKspE,aAAejnE,EAAK0qE,UACxD/sE,KAAK6rE,eAAexpE,EAE3B,GACF,IAAI,GAEd,CACGrC,KAAKopE,sBACLppE,KAAKopE,qBAAqBppE,KAAKmpE,OAAQE,EAE9C,CACJ,CACD,qBAAA2F,CAAsB5sE,GAClBpC,KAAK2oE,iBAAkB,EACL3oE,KAAKosE,UACbxpB,UAAY,GACtB,MAAMqsB,EAAiB7sE,EAAOnB,MAAM,KAC9BiuE,EAAkBD,EAAentE,KAAIqtE,GAAWA,EAAQtkE,QAAQ,MAAO,MACvEgV,EAAQ7f,KAAKovE,YAAYpvE,KAAK6f,MAAOovD,GAC3CjvE,KAAK2sE,cAAgB,GACrB,IAAK,IAAI/nE,EAAI,EAAGA,EAAIib,EAAMje,OAAQgD,IAC9B5E,KAAKqvE,qBAAqBxvD,EAAMjb,GAAIsqE,EAAiB,EAE5D,CACD,aAAAI,CAAc/xD,EAAMgyD,GAChB,OAAIhyD,IAAQgyD,GACDA,EAAOtrB,KAAK1mC,EAK1B,CACD,WAAA6xD,CAAYvvD,EAAOovD,GACf,MAAMO,EAAc,GACdptE,EAAS6sE,EAAertE,OAAS,EAAIqtE,EAAe,GAAK,GACzDQ,EAAqBR,EAAertE,OAAS,EAAIqtE,EAAez3D,MAAM,GAAKy3D,EAC3ES,EAAettE,EAAS,IAAIof,OAAOpf,EAAOyI,QAAQ,MAAO,OAAQ,KAAO,KAC9E,IAAK,IAAIjG,EAAI,EAAGA,EAAIib,EAAMje,OAAQgD,IAAK,CACnC,MAAMvC,EAAOwd,EAAMjb,GACnB,GAAIvC,EAAKwd,MAAO,CACZ,MAAM8vD,EAAYtwE,EAAMqF,OAAO,CAAE,EAAErC,GAC7ButE,EAAmB5vE,KAAKsvE,cAAcjtE,EAAKkb,KAAMmyD,GAEnDT,EAAertE,OAAS,EAEpBguE,GAAoBX,EAAertE,OAAS,EAC5C+tE,EAAU9vD,MAAQxgB,EAAM8E,gBAAgB9B,EAAKwd,OAG7C8vD,EAAU9vD,MAAQ7f,KAAKovE,YAAY/sE,EAAKwd,MAAO4vD,GAKnDE,EAAU9vD,MADL+vD,EACa5vE,KAAKovE,YAAY/sE,EAAKwd,MAAO4vD,GAI7B,GAElBE,EAAU9vD,MAAMje,OAAS,GACzB4tE,EAAY/qE,KAAKkrE,EAExB,MAEO3vE,KAAKsvE,cAAcjtE,EAAKkb,KAAMmyD,IAC9BF,EAAY/qE,KAAKpC,EAG5B,CACD,OAAOmtE,CACV,CACD,oBAAAH,CAAqBhtE,EAAMwtE,EAAa3kC,GACpC,MAAMkhC,EAAYpsE,KAAKosE,UACjB0D,EAAkB5kC,EAAQ2kC,EAAYjuE,OAASiuE,EAAY3kC,GAAS2kC,EAAYA,EAAYjuE,OAAS,GACrG2oE,EAAcvqE,KAAK6oE,WAAWp7D,QAAQ88D,YACtCsD,EAAsB7tE,KAAK6oE,WAAWp7D,QAAQogE,oBAC9C9D,EAAc/pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOG,MAAQ,QACzDhqE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOI,OAC7B,MAAMI,EAAerqE,KAAK6oE,WAAWjxD,MAAMuyD,UAAUG,UAAY,OAC3DwD,EAAqB9tE,KAAK6oE,WAAWkF,wBAC3C,IAAK1rE,IAASA,EAAKkb,KACf,OACJ,GAAIuwD,EAAoB,CACpB,IAAKA,EAAmBzrE,GACpB,OACJ,GAAIA,EAAKwd,OAAS7f,KAAKutE,uBAAuBlrE,EAAKwd,MAAOiuD,GACtD,MACP,CACDzrE,EAAKhC,KAAO,SAAUuI,GAClB,OAAO5I,KAAK4I,EACxB,OACsC,IAAlBvG,EAAa,WACrBA,EAAKyiD,UAAW,GAEhBziD,EAAKyiD,UAAiC,MAArB9kD,KAAKupE,eACtBvpE,KAAKupE,aAAelnE,GAExB,MAAMgnE,EAAU/hE,SAAS8iC,cAAc,OAsBvC,GArBAmW,MAAM8oB,GACD3nB,SAAS,GAAG1hD,KAAKktD,qBACjBxL,SAASlH,EAAayF,qBAC3BopB,EAAQzxD,MAAM0zD,WAAwB,GAARpgC,EAAH,KACvB7oC,EAAKyiD,WAAaylB,GAClBlB,EAAQxnB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,sBAE9BltD,KAAKkpE,iBAAmBlpE,KAAKmpE,SAC7BE,EAAQ5jE,GAAK,QAAUzF,KAAKmpE,OAAS,IAAM9mE,EAAKoD,IAEpD2mE,EAAU/hC,YAAYg/B,GACtBA,EAAkB,SAAIhnE,EACtBgnE,EAAmB,UAAIrpE,KACvBqC,EAAKgnE,QAAUA,EACXrpE,KAAK6oE,WAAWp7D,QAAQi9D,mBACxBrB,EAAQzxD,MAAM0yD,SAAWD,EACzBhB,EAAQzxD,MAAMo2D,MAAQjE,EACtBV,EAAQzxD,MAAMq2D,YAAc,OAC5B5E,EAAQzxD,MAAMs2D,aAAe,MAC7B7E,EAAQzxD,MAAMwxC,OAAS,WAEV,OAAb/mD,EAAKkb,KACL8rD,EAAQh/B,YAAY/iC,SAAS8iC,cAAc,WAE1C,CACD,GAAImgC,EAAa,CACb,IAAI4D,EAAK7mE,SAAS8iC,cAAc,SAChC+jC,EAAGl3D,KAAO,WACVk3D,EAAG1oE,GAAK,KAAOpD,EAAKoD,GACpB0oE,EAAG7H,QAAUtmE,KAAKmtE,eAAe9qE,GACjC8rE,EAAGC,eAAiBpuE,KAAKmtE,eAAe9qE,GACxCgnE,EAAQh/B,YAAY8jC,GACpB9rE,EAAK6qE,aAAeiB,EAChBnuE,KAAK6oE,WAAWp7D,QAAQi9D,mBACxByD,EAAGv2D,MAAMy2D,OAAS,eAClBF,EAAGv2D,MAAM02D,cAAgB,MAEhC,CACD,MAAMC,EAAWjnE,SAAS8iC,cAAc,QAGxC,GAFAmkC,EAAS3rB,UAAY5iD,KAAK+vE,cAAc1tE,EAAKkb,KAAMuyD,GACnDzG,EAAQh/B,YAAYkkC,GAChBlsE,EAAKwd,OAASxd,EAAKwd,MAAMje,OAAS,EAClCynE,EAAQxnB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,4CAE7B,CACDltD,KAAK2sE,cAAcloE,KAAKpC,GACxB,MAAMusE,iBAAoB5kD,IACtB,GAAIugD,EACA,GAAKloE,EAAKwd,OAASmK,EAAMvmB,QAAUpB,EAAK6qE,aAOpCltE,KAAK4sE,aAAavqE,OAPgC,CAClD,MAAMwsE,EAAe7uE,KAAKmtE,eAAe9qE,GACzCrC,KAAKotE,gBAAgB/qE,GAAOwsE,GAC5BxsE,EAAK6qE,aAAa5G,SAAWuI,EAC7B7uE,KAAK6oE,WAAWiG,mBACnB,MAMD9uE,KAAK4sE,aAAavqE,GAClBrC,KAAK8gE,OAAOz+D,GAEhB,OAAO,CAAK,EAEhBgnE,EAAQx0B,oBAAoB,QAAS+5B,kBACrCvF,EAAQ12B,iBAAiB,QAASi8B,kBAClCvF,EAAQ12B,iBAAiB,cAAezV,IACpCl9B,KAAK6oE,WAAWkG,gBAAiB,EAC7BlB,GACA7tE,KAAK4sE,aAAavqE,EACrB,IAELgnE,EAAQ12B,iBAAiB,cAAezV,IACpCl9B,KAAK6oE,WAAWkG,gBAAiB,EACjCnkD,YAAW,KACF5qB,KAAK6oE,WAAWkG,gBACblB,GAAuBxrE,GAAQrC,KAAKspE,aAAejnE,EAAK0qE,UACxD/sE,KAAK6rE,eAAexpE,EAE3B,GACF,IAAI,GAEd,CACJ,CACD,GAAIA,EAAKwd,MACL,IAAK,IAAIjb,EAAI,EAAGA,EAAIvC,EAAKwd,MAAMje,OAAQgD,IACnC5E,KAAKqvE,qBAAqBhtE,EAAKwd,MAAMjb,GAAIirE,EAAa3kC,EAAQ,GAGlElrC,KAAKopE,sBACLppE,KAAKopE,qBAAqBppE,KAAKmpE,OAAQE,EAE9C,CACD,aAAA0G,CAAc3Z,EAAS74C,GACnB,GAAIA,GAAQA,EAAK3b,OAAS,EAAG,CACzB,MAAMouE,EAAYzyD,EAAK1U,cACjBonE,EAAe7Z,EAAQvtD,cACvBqnE,EAAe,6CACfC,EAAe,UAErB,GADmBF,EAAanqE,QAAQkqE,IACtB,EAAG,CACjB,IAAIvkD,EAAM,EACV,MAAMjrB,EAAQ41D,EACRga,EAAa,GACnB,OAAa,CACT,MAAM/pE,EAAQ4pE,EAAanqE,QAAQkqE,EAAWvkD,GAQ9C,GAPIplB,GAAS,GACT+pE,EAAW3rE,KAAK4B,GAChBolB,EAAMplB,EAAQkX,EAAK3b,QAGnB6pB,IAEAA,GAAOjrB,EAAMoB,OAAS,EACtB,KAEP,CACD,GAAIwuE,EAAWxuE,OAAS,EAAG,CACvBw0D,EAAU,GACV,IAAK,IAAIxxD,EAAI,EAAGA,EAAIwrE,EAAWxuE,OAAQgD,IACzB,IAANA,IACAwxD,GAAW51D,EAAMkV,UAAU,EAAG06D,EAAWxrE,KAE7CwxD,GAAW8Z,EAAe1vE,EAAMkV,UAAU06D,EAAWxrE,GAAIwrE,EAAWxrE,GAAK2Y,EAAK3b,QAAUuuE,EACpFvrE,EAAIwrE,EAAWxuE,OAAS,EACxBw0D,GAAW51D,EAAMkV,UAAU06D,EAAWxrE,GAAK2Y,EAAK3b,OAAQwuE,EAAWxrE,EAAI,IAGvEwxD,GAAW51D,EAAMkV,UAAU06D,EAAWxrE,GAAK2Y,EAAK3b,OAG3D,CACJ,CACJ,CACD,OAAOw0D,CACV,CACD,WAAA0V,CAAY1pE,GACHA,GAAWo4C,EAAaoF,gBAIzBx9C,EAASA,GAAU,GACnBpC,KAAKgvE,sBAAsB5sE,EAAOyG,gBAJlC7I,KAAK4tE,0BAMZ,CACD,YAAAhB,CAAaC,EAAUX,GAAe,GACX,MAAnBlsE,KAAKspE,YACLtpE,KAAK6rE,eAAe7rE,KAAKspE,YAE7BtpE,KAAKspE,WAAauD,EAClB,MAAMphB,EAAaohB,EAASxD,QAE5B,GADA5d,EAAW5J,UAAUn8B,IAAI,UACrB1lB,KAAK6oE,WAAWp7D,QAAQi9D,iBAAkB,CAC1C1qE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOC,KAC7B9pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOG,KAC7B,MAAMqG,EAAkBrwE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOI,OAC/CqG,EAAkBtwE,KAAK6oE,WAAWjxD,MAAMiyD,OAAO0G,QAAU,GAC/DvwE,KAAK6oE,WAAWjxD,MAAM44D,UAED,KADCxwE,KAAK6oE,WAAWjxD,MAAM64D,eAAiB,KAEzDhlB,EAAW7zC,MAAM84D,gBAAkB,GACnCjlB,EAAW7zC,MAAMo2D,MAAQ,KAGzBviB,EAAW7zC,MAAM84D,gBAAkBL,EACnC5kB,EAAW7zC,MAAMo2D,MAAQsC,EAEhC,CACGzD,EAAShtD,QAAU7f,KAAK2oE,iBAAmBuD,GAC3ClsE,KAAK8sE,aAAaD,EAEzB,CACD,cAAAhB,CAAegB,GACX,IAAKA,EACD,OACJ,MAAMphB,EAAaohB,EAASxD,QAE5B,GADA5d,EAAW5J,UAAUE,OAAO,UACxB/hD,KAAK6oE,WAAWp7D,QAAQi9D,iBAAkB,CAC1C,MAAMd,EAAc5pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOC,KAC3CC,EAAc/pE,KAAK6oE,WAAWjxD,MAAMiyD,OAAOG,KAEhC,KADChqE,KAAK6oE,WAAWjxD,MAAM44D,WAAa,KAEjD/kB,EAAW7zC,MAAM84D,gBAAkB,GACnCjlB,EAAW7zC,MAAMo2D,MAAQ,KAGzBviB,EAAW7zC,MAAM84D,gBAAkB9G,EACnCne,EAAW7zC,MAAMo2D,MAAQjE,EAEhC,CACG8C,EAASE,UACTF,EAASE,SAAS7rB,OAEtBlhD,KAAKspE,WAAa,IACrB,CACD,YAAAwD,CAAaD,GACT,IAAKA,EAASE,SAAU,CACpB,IAAI4D,EAAU,GACV3wE,KAAKmpE,SACLwH,EAAU3wE,KAAKmpE,OAAS,IAAM0D,EAASpnE,IAE3ConE,EAASE,SAAW,IAAIvE,UAAU,CAC9BI,aAAc5oE,KAAK4oE,aACnBE,KAAM9oE,KAAK6oE,WACXrwD,OAAQxY,KACRooD,UAAWpoD,KAAKogD,cAChBvgC,MAAOgtD,EAAShtD,MAChBmpD,WAAYhpE,KAAKgpE,WAAa,EAC9BE,gBAAiBlpE,KAAKkpE,gBACtBC,OAAQwH,EACRvH,qBAAsBppE,KAAKopE,sBAElC,CACD,MAAM39C,EAAMsxB,sBAAsB8vB,EAASxD,SACrCuH,EAASr0B,eACTs0B,EAAUlzB,aAEVmzB,EAAYrlD,EAAIL,EAAIwlD,EAAOh0B,KAC3Bm0B,EAAaF,EAAQzpE,MAAQ0pE,EAAYjE,EAASxD,QAAQ9nB,YAChE91B,EAAIL,GAAKyhD,EAASxD,QAAQ2H,aAAazvB,YACvC91B,EAAIuxB,GAAK,EACT6vB,EAASE,SAASkE,OAAOxlD,EAAIL,EAAGK,EAAIuxB,GAAG,GAAM,GAC7C6vB,EAASE,SAAS9D,SAASrxD,MAAMxQ,MAAQ,GACzCylE,EAASE,SAAS9D,SAASrxD,MAAMulC,MAAQ,GACpC4zB,GAAclE,EAASE,SAAS9D,SAAS1nB,aAAiBwvB,GAAcD,EACrEC,EAAalE,EAASE,SAAS9D,SAAS1nB,cACxCsrB,EAASE,SAAS9D,SAASrxD,MAAMulC,OAASyzB,EAAOh0B,KAAO,OAIxDk0B,EAAYjE,EAASE,SAAS9D,SAAS1nB,YACvCsrB,EAASE,SAAS9D,SAASrxD,MAAMglC,KAAOg0B,EAAOh0B,KAAO,EAAI,KAG1DiwB,EAASE,SAAS9D,SAASrxD,MAAMglC,KAAO,GAE5CiwB,EAASE,SAAS9D,SAASrxD,MAAMulC,MAAQhB,kBAAkB/0C,MAAQqkB,EAAIL,EAAIyhD,EAASxD,QAAQ9nB,YAAc,EAAI,MAElHsrB,EAASE,SAAS9D,SAASrxD,MAAMsgD,WAAa,UAC9C2U,EAASE,SAASpsB,OACrB,CACD,YAAAuwB,CAAaz0B,GACT,MAAMo0B,EAAUlzB,aACVwzB,EAAc10B,EAAMF,eAAeE,IAAMz8C,KAAKipE,SAASznB,aAC7D,IAAI93C,EAAM+yC,EAOV,OANI00B,EAAcN,EAAQz0B,OAAS,IAC/B1yC,GAAOynE,EAAcN,EAAQz0B,OAAS,EAClC1yC,EAAM6yC,eAAeE,MACrB/yC,EAAM6yC,eAAeE,IAAM,KAG5B/yC,CACV,CACD,MAAAunE,CAAO7lD,EAAG4xB,EAAGk0B,EAAcv5C,GACvB,IAAK33B,KAAK6f,MACN,OAEJ7f,KAAKoxE,eAELpxE,KAAKitE,eAAejtE,KAAK6f,OACzB7f,KAAK8rE,cACL,MAAMuF,EAAarxE,KAAKipE,SAASrxD,MAC7B+f,IACA33B,KAAKipE,SAASrxD,MAAMsgD,WAAa,UAErCmZ,EAAW/mC,QAAU,QACrB+mC,EAAWz0B,KAAOxxB,EAAI,KACtBimD,EAAW50B,IAAMO,EAAI,KACrBh9C,KAAKosE,UAAUx0D,MAAMxQ,MAAQ,OAC7BpH,KAAKosE,UAAUx0D,MAAMwkC,OAAS,OAE1B80B,IACAl0B,EAAIh9C,KAAKkxE,aAAal0B,GACtBq0B,EAAW50B,IAAMO,EAAI,MAGzB,IAAIs0B,EAAetxE,KAAK6oE,WAAWyI,aACnC,GAAIA,EAAe,GAAKtxE,KAAKosE,UAAU7qB,YAAc+vB,EACjD,IAAK,IAAI1sE,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IACnC5E,KAAK6f,MAAMjb,GAAGykE,QAAQzxD,MAAMxQ,MAAQkqE,EAAe,KAG3D,IAAIC,EAAevxE,KAAK6oE,WAAW0I,aACnC,GAAIA,EAAe,GAAKvxE,KAAKosE,UAAU7qB,YAAcgwB,EACjD,IAAK,IAAI3sE,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IACnC5E,KAAK6f,MAAMjb,GAAGykE,QAAQzxD,MAAMxQ,MAAQmqE,EAAe,KACnDvxE,KAAK6f,MAAMjb,GAAGykE,QAAQzxD,MAAM00D,UAAY,SAKhD,IAAIkF,EAFY7zB,aAEQvB,QAAUY,EAAIT,eAAeE,KAAO,GAa5D,GAZIz8C,KAAK6oE,WAAW2I,UAAY,GAAKA,EAAYxxE,KAAK6oE,WAAW2I,YAC7DA,EAAYxxE,KAAK6oE,WAAW2I,WAET,MAAnBxxE,KAAK0oE,YAAiD,MAA3B1oE,KAAK0oE,WAAWW,UAC3CmI,GAAaxxE,KAAK0oE,WAAWW,QAAQ7nB,aAAe,GAElC,MAAlBxhD,KAAKmsE,YACLqF,GAAaxxE,KAAKmsE,UAAU3qB,cAEX,MAAjBxhD,KAAK0sE,WACL8E,GAAaxxE,KAAK0sE,SAASlrB,cAE3BxhD,KAAKipE,SAASznB,aAAegwB,EAAW,CACxC,IAAIC,EAAYD,EACZC,EAAY,KACZA,EAAY,IAEhBzxE,KAAKosE,UAAUx0D,MAAMwkC,OAASq1B,EAAY,IAC7C,MAEGzxE,KAAKosE,UAAUx0D,MAAMwkC,OAAS,OAElCp8C,KAAKspE,WAAa,IACrB,CACD,KAAA3oB,GACIl5C,OAAOmjB,YAAW,KACd5qB,KAAKosE,UAAUzrB,QACO,MAAlB3gD,KAAK+rE,YACD/rE,KAAK6oE,WAAWp7D,QAAQikE,oBACxB1xE,KAAK+rE,UAAUprB,QAEnB3gD,KAAK+rE,UAAUvrE,MAAQ,GAC1B,GACF,IACN,CACD,IAAA0gD,IAC4B,OAApBlhD,KAAKspE,YACDtpE,KAAKspE,WAAWyD,UAChB/sE,KAAKspE,WAAWyD,SAAS7rB,OAG7BlhD,KAAKipE,YACYjpE,KAAKipE,SAASrxD,MACpB0yB,QAAU,OACjBtqC,KAAKwpE,cACLxpE,KAAKogD,cAAcvV,YAAY7qC,KAAKipE,UACpCjpE,KAAKwpE,aAAc,GAG9B,CACD,YAAA4H,GACSpxE,KAAKwpE,cACNxpE,KAAKogD,cAAc/V,YAAYrqC,KAAKipE,UACpC1oB,MAAMvgD,KAAKipE,UACNvnB,SAAS,GAAG1hD,KAAKktD,sBACjBxL,SAASlH,EAAayF,qBAC3BjgD,KAAKwpE,aAAc,EAE1B,CACD,MAAA1I,CAAO+L,GACH,GAAgB,MAAZA,IACKA,EAAShtD,MAAO,CACjB7f,KAAK6oE,WAAW2C,WAChB,IAAI8B,EAAgB,GAChBT,GAAY7sE,KAAK0oE,YACjB1oE,KAAKqtE,YAAYrtE,KAAK6f,MAAOytD,GAEjCttE,KAAK6oE,WAAW8I,WAAW9E,EAAUS,EACxC,CAER,CACD,MAAAvrB,GAEI,IAAK,IAAIn9C,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IAAK,CACxC,IAAIvC,EAAOrC,KAAK6f,MAAMjb,GAClBvC,EAAK0qE,UACL1qE,EAAK0qE,SAAShrB,QAErB,CACD,GAAI/hD,KAAKipE,SAAU,CACfjpE,KAAKipE,SAASrmB,UAAY,GAC1B,MAAMqhB,EAAajkE,KAAKipE,SAAShF,WACf,MAAdA,GACAA,EAAWp5B,YAAY7qC,KAAKipE,SAEnC,CACDjpE,KAAKipE,SAAW,IACnB,CACD,MAAA2I,CAAOC,GACH7xE,KAAK+hD,SAEL/hD,KAAK6f,MAAQgyD,EACb7xE,KAAKspE,WAAa,KAClBtpE,KAAKupE,aAAe,KACpBvpE,KAAK0oE,WAAWW,QAAU,KAC1BrpE,KAAKwpE,aAAc,EACnBxpE,KAAKypE,UACLzpE,KAAK0pE,eACR,CACD,iBAAAoF,GACI,IAAK,IAAIlqE,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IAAK,CACxC,IAAIvC,EAAOrC,KAAK6f,MAAMjb,GAClBvC,EAAK6qE,eACL7qE,EAAK6qE,aAAa5G,QAAUtmE,KAAKmtE,eAAe9qE,IAEhDA,EAAK0qE,UACL1qE,EAAK0qE,SAAS+B,mBAErB,CACJ,CACD,YAAAgD,GACI,IAAK,IAAIltE,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IAAK,CACxC,MAAMvC,EAAOrC,KAAK6f,MAAMjb,GACpBvC,EAAKgnE,UACDhnE,EAAKs1B,OACLt1B,EAAKgnE,QAAQzxD,MAAM0yB,QAAU,OAG7BjoC,EAAKgnE,QAAQzxD,MAAM0yB,QAAU,SAGjCjoC,EAAK0qE,UACL1qE,EAAK0qE,SAAS+E,cAErB,CACJ,CACD,QAAAC,CAASC,GACL,MAAMnjD,EAAMmjD,EAAanpE,cACzB,IAAK,IAAIjE,EAAI,EAAGA,EAAI5E,KAAK6f,MAAMje,OAAQgD,IAAK,CACxC,MAAMvC,EAAOrC,KAAK6f,MAAMjb,GACxB,GAA4C,GAAxCvC,EAAKkb,KAAK1U,cAAc/C,QAAQ+oB,GAChC,OAAOxsB,CAEd,CACD,OAAO,IACV,EAEL,MAAM4vE,UACF,aAAI/kB,GACA,MAAO,WACV,CACD,WAAArtD,CAAY4N,GACRzN,KAAK+uE,gBAAiB,EACtB/uE,KAAKkyE,kBAAmB,EACxBlyE,KAAKmyE,iBAAkB,EACvBnyE,KAAKoyE,KAAO,KACZpyE,KAAKs2D,QAAS,EACdt2D,KAAKqyE,aAAe,KACpBryE,KAAKyN,QAAU,CACXoS,MAAO,GACPurD,QAAS,CACLtK,OAAQxhE,EAAKuU,QAAQ,eACrBsmD,OAAQ76D,EAAKuU,QAAQ,iBAEzBi6D,mBAAoB,KACpBpD,kBAAkB,EAClBH,aAAa,EACb+H,cAAc,EACd5G,mBAAoB,GACpBmC,qBAAqB,EACrBzlB,UAAW9gD,SAASD,KACpB6hE,iBAAiB,EACjBE,qBAAsB,KACtBoF,aAAa,GAEb/gE,IACApO,EAAMqF,OAAO1E,KAAKyN,QAASA,GAC3BpO,EAAMqF,OAAO1E,KAAKyN,QAAQ29D,QAAS39D,EAAQ29D,UAE3CprE,KAAKyN,QAAQo9D,cACb7qE,KAAKyN,QAAQ8kE,cAAe,GAEhCvyE,KAAKmpE,OAAS8I,UAAUO,aACxBxyE,KAAKyyE,cACLzyE,KAAK0yE,UAAY,IAAIlK,UAAU,CAC3BM,KAAM9oE,KACN6f,MAAO7f,KAAKyN,QAAQoS,MACpBmpD,WAAY,EACZ5gB,UAAWpoD,KAAKyN,QAAQ26C,UACxB8gB,gBAAiBlpE,KAAKyN,QAAQy7D,gBAC9BC,OAAQnpE,KAAKyN,QAAQhI,GACrB2jE,qBAAsBppE,KAAKyN,QAAQ27D,qBACnCR,aAAc5oE,KAAKyN,QAAQm7D,eAE/B5oE,KAAK0yE,UAAUzJ,SAASpnB,UAAUn8B,IAAI,GAAG1lB,KAAKktD,uBAC1CltD,KAAKyN,QAAQsvD,SACb/8D,KAAK0yE,UAAUzJ,SAASrxD,MAAMmlD,OAAS,GAAG/8D,KAAKyN,QAAQsvD,UAC3D/8D,KAAK2yE,iBAAoBrzC,IACN,IAAXA,EAAEktC,QACFxsE,KAAKwrE,WACLlsC,EAAEszC,2BACL,EAEL5yE,KAAKi9D,uBAA0B39B,IAC3B,IAAKt/B,KAAKs2D,OACN,OAAO,EACX,IAAItsC,EAAQviB,OAAOuiB,OAASsV,EACxBuzC,EAAI7oD,EAAMkzC,YAAclzC,EAAMvmB,OAC9BqvE,GAAY,EAChB,KAAOD,GAAG,CACN,GAAIA,EAAE/vB,SAAsC,OAA3B+vB,EAAE/vB,QAAQj6C,eAEnBgqE,EAAEE,WACEF,EAAEE,UAAUlK,YAAc7oE,KAAM,CAChC8yE,GAAY,EACZ,KACH,CAGTD,EAAIA,EAAE5O,YAAc4O,EAAEzyB,aACzB,CAOD,OANI0yB,IACI9yE,KAAKyN,QAAQ8kE,cACbvyE,KAAK0yE,UAAU5R,OAAO9gE,KAAK0yE,UAAUjK,WAEzCzoE,KAAKwrE,aAEF,CAAI,EAEfxrE,KAAKswD,QACR,CACD,QAAAxqC,GACI,OAAO9lB,KAAK0yE,UAAU5sD,UACzB,CACD,WAAA2sD,GACIzyE,KAAK4X,MAAQ,GACb5X,KAAK4X,MAAMiyD,OAAS,CAAEc,OAAQ,UAAWqI,OAAQ,UAAWlJ,KAAM,QAASE,KAAM,QAASC,OAAQ,UAAWsG,OAAQ,SACrHvwE,KAAK4X,MAAMuyD,UAAY,CAAEG,SAAU,QACnCtqE,KAAKsxE,aAAe,EACpBtxE,KAAKuxE,aAAe,EACpBvxE,KAAKwxE,UAAY,EACjBxxE,KAAK+8D,OAAS,GAAG/8D,KAAKyN,QAAQsvD,SAC9B/8D,KAAKizE,gBAAkB,GACvBjzE,KAAK2E,KAAO,GACZ3E,KAAKs2D,QAAS,CACjB,CACD,MAAAhG,GACC,CACD,mBAAA4iB,CAAoBrzD,GAChB,GAAKA,EAEL,IAAK,IAAIjb,EAAI,EAAGA,EAAIib,EAAMje,OAAQgD,IAC9B5E,KAAKmzE,mBAAmBtzD,EAAMjb,GAErC,CACD,kBAAAuuE,CAAmB9wE,GAEXA,EAAK0qE,UAAY1qE,EAAK0qE,SAASlE,YAAc7oE,OAE7CqC,EAAK0qE,WACL1qE,EAAK0qE,SAAShrB,SACd1/C,EAAK0qE,SAAW,MAEhB1qE,EAAKgnE,UACLhnE,EAAKgnE,QAAU,MAEfhnE,EAAKwd,OACL7f,KAAKkzE,oBAAoB7wE,EAAKwd,OAErC,CACD,gBAAAuzD,CAAiBvzD,EAAOwzD,GACpB,MAAMlN,EAActmD,EAAQA,EAAMje,OAAS,EAC3C,IAAK,IAAIgD,EAAI,EAAGA,EAAIuhE,EAAavhE,IAAK,CAClC,MAAMvC,EAAOwd,EAAMjb,GACfvC,EAAKwd,MACL7f,KAAKozE,iBAAiB/wE,EAAKwd,MAAOwzD,GAGlChxE,EAAKyiD,SAAWuuB,EAAYvtE,QAAQzD,EAAKoD,KAAO,CAEvD,CACJ,CACD,YAAAgnE,GACI,OAAOzsE,KAAK0yE,SACf,CACD,qBAAA3E,GACI,OAAO/tE,KAAK8tE,kBACf,CACD,QAAAwF,CAAS7lE,GACLzN,KAAKqyE,aAAe5kE,EAAQusD,QAAU1yD,SAASisE,cAAgB9lE,EAAQusD,OAAS,KAChFh6D,KAAKkzE,oBAAoBlzE,KAAKyN,QAAQoS,OACtC7f,KAAKwzE,qBAAuB/lE,EAAQ+lE,sBAAwB,KAC5DxzE,KAAKyzE,mBAAqBhmE,EAAQgmE,oBAAsB,KACxDzzE,KAAK8tE,mBAAqBrgE,EAAQqgE,oBAAsB,KACpDrgE,EAAQoS,QACR7f,KAAKyN,QAAQoS,MAAQpS,EAAQoS,MAC7B7f,KAAK0yE,UAAU/I,SAASl8D,EAAQoS,QAEhCpS,EAAQimE,qBACR1zE,KAAKyN,QAAQimE,mBAAqBjmE,EAAQimE,oBAE9C,IAAIL,EAAc5lE,EAAQ4lE,aAAe,KAWzC,GAVIA,EAC2B,iBAAhBA,IACPA,EAAcA,EAAYpyE,MAAM,MAIpCoyE,EAAc,GAElBrzE,KAAKs2D,QAAS,EACdt2D,KAAKozE,iBAAiBpzE,KAAKyN,QAAQoS,MAAOwzD,GACtC74B,EAAaoF,eACb5/C,KAAK0yE,UAAUzB,OAAO,EAAG,GAAG,GAAM,GAClCjxE,KAAK0yE,UAAUzJ,SAASrxD,MAAM6kC,IAAM,MACpCz8C,KAAK0yE,UAAUzJ,SAASrxD,MAAMwlC,OAAS,MACvCp9C,KAAK0yE,UAAUzJ,SAASrxD,MAAMulC,MAAQ,MACtCn9C,KAAK0yE,UAAUzJ,SAASrxD,MAAMqlC,SAAW,QACzCj9C,KAAK0yE,UAAUzJ,SAASrxD,MAAM0yD,SAAW,WAExC,CACD,MAAMtQ,EAASvsD,EAAQusD,QAAU1yD,SAASK,gBACpCgsE,EAAS52B,sBAAsBid,GAC/B4Z,EAAe5Z,EAAOxY,aACtBqyB,EAAc7Z,EAAOzY,YACrB91B,EAAM,CACRL,EAAGuoD,EAAOvoD,EACV4xB,EAAG22B,EAAO32B,EAAI42B,EAAe,GAE3BhD,EAASr0B,eACTs0B,EAAUlzB,aAEVmzB,EAAYrlD,EAAIL,EAAIyoD,EAAcjD,EAAOh0B,KACzCm0B,EAAaF,EAAQzpE,MAAQ0pE,EAAY+C,EAC/CpoD,EAAIL,GAAK,EACTprB,KAAK0yE,UAAUzB,OAAOxlD,EAAIL,EAAGK,EAAIuxB,GAAG,GAAM,GAC1Ch9C,KAAK0yE,UAAUzJ,SAASrxD,MAAMxQ,MAAQ,GACtCpH,KAAK0yE,UAAUzJ,SAASrxD,MAAMulC,MAAQ,GACjCn9C,KAAK0yE,UAAUzJ,SAASrxD,MAAMmlD,SAE/B/8D,KAAK0yE,UAAUzJ,SAASrxD,MAAMmlD,OAAS,GAAGn2D,KAAKC,IAAI,IA7yDnE,SAASitE,kBAAkBpN,GACvB,IAAIqN,EAAU,EACd,KAAgB,OAATrN,GAAe,CAClB,MAAMsN,EAAS1sE,SAAS2sE,YAAYC,iBAAiBxN,EAAM,MACtDyN,iBAAiB,WACtB,GAAc,QAAVH,EAAkB,CAClB,MAAMI,EAAYzqE,SAASqqE,GACvBI,EAAYL,IACZA,EAAUK,EAEjB,CACD1N,EAAOA,EAAKtmB,aACf,CACD,OAAO2zB,CACX,CA+xD0ED,CAAkB9Z,GAAU,MAErF+W,GAAc/wE,KAAK0yE,UAAUzJ,SAAS1nB,aAAiBwvB,GAAcD,EAElEC,EAAa/wE,KAAK0yE,UAAUzJ,SAAS1nB,cACrCvhD,KAAK0yE,UAAUzJ,SAASrxD,MAAMulC,OAASyzB,EAAOh0B,KAAO,OAKrDk0B,EAAY9wE,KAAK0yE,UAAUzJ,SAAS1nB,YACpCvhD,KAAK0yE,UAAUzJ,SAASrxD,MAAMglC,KAAOg0B,EAAOh0B,KAAO,EAAI,KAGvD58C,KAAK0yE,UAAUzJ,SAASrxD,MAAMglC,KAAO,GAEzC58C,KAAK0yE,UAAUzJ,SAASrxD,MAAMulC,MAAQhB,kBAAkB/0C,MAAQqkB,EAAIL,EAAIyoD,EAAc,MAE1F7zE,KAAK0yE,UAAUzJ,SAASrxD,MAAM0yD,SAAW,MAC5C,CACDtqE,KAAK0yE,UAAUzJ,SAASrxD,MAAMsgD,WAAa,UAC3Cl4D,KAAK0yE,UAAU/xB,QACfr5C,SAASqrC,iBAAiB,QAAS3yC,KAAK2yE,kBACxCrrE,SAASqrC,iBAAiB,YAAa3yC,KAAKi9D,wBAAwB,EACvE,CACD,QAAAuO,GACIlkE,SAASutC,oBAAoB,YAAa70C,KAAKi9D,wBAAwB,GACvE31D,SAASutC,oBAAoB,QAAS70C,KAAK2yE,kBAC3C3yE,KAAK0yE,UAAUxxB,OACXlhD,KAAKqyE,cACLryE,KAAKqyE,aAAa1xB,QAElB3gD,KAAKyzE,oBACLzzE,KAAKyzE,oBAEZ,CACD,UAAA9B,CAAW9E,EAAUS,GACbttE,KAAKwzE,sBACLxzE,KAAKwzE,qBAAqB3G,EAAUS,EAE3C,CACD,cAAA+G,CAAevL,GACXA,EAAK/nB,gBAAgB,SACrB,MAAM0V,EAAKqS,EAAK5U,iBAAiB,MAAM7xD,KAAK,IAEzB,OADFo0D,IAAMA,EAAG7+C,QAEtB6+C,EAAG/V,aAAa,QAAS,GAEhC,CACD,YAAAoxB,GACI9xE,KAAK0yE,UAAUZ,cAClB,CACD,iBAAAhD,GACI9uE,KAAK0yE,UAAU5D,mBAClB,EAELmD,UAAUO,WAAa,EAEvB,MAAM8B,oBACF,WAAAz0E,GACIG,KAAKwrB,UAAY,GACjBxrB,KAAKyrB,IAAM,EACXzrB,KAAK+rB,MAAQ,OACb/rB,KAAK2rB,UAAY,EACpB,CACD,KAAAnlB,CAAM+tE,GACFv0E,KAAKwrB,UAAY+oD,EACjBv0E,KAAKyrB,IAAM,EACXzrB,KAAK2rB,UAAY,EACpB,CACD,UAAAC,GACI,KAAO5rB,KAAKyrB,IAAMzrB,KAAKwrB,UAAU5pB,QAA8C,MAApC5B,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,MAClEzrB,KAAKyrB,KACZ,CACD,QAAAS,GACI,OAAOlsB,KAAK+rB,KACf,CACD,YAAAyoD,GACI,OAAOx0E,KAAK2rB,SACf,CACD,IAAAE,GAEI,GADA7rB,KAAK4rB,aACD5rB,KAAKyrB,KAAOzrB,KAAKwrB,UAAU5pB,OAC3B,OAAO,EACX,IAAIkqB,EAAO,EACX,GAAwC,MAApC9rB,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,KAAc,CAEzC,GADAK,EAAO9rB,KAAKwrB,UAAU1lB,QAAQ,IAAK9F,KAAKyrB,KACpCK,EAAO,EACP,OAAO,EACX9rB,KAAK2rB,UAAY3rB,KAAKwrB,UAAU9V,UAAU1V,KAAKyrB,IAAKK,EAAO,GACnB,IAApC9rB,KAAK2rB,UAAU7lB,QAAQ,UAAsD,IAApC9F,KAAK2rB,UAAU7lB,QAAQ,WAChE9F,KAAK+rB,MAAQ,cAEjB/rB,KAAKyrB,IAAMK,EAAO,CACrB,MACI,GAAwC,MAApC9rB,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,MAAgBzrB,KAAKyrB,IAAMzrB,KAAKwrB,UAAU5pB,OAAS,GAA6C,MAAxC5B,KAAKwrB,UAAUtU,OAAOlX,KAAKyrB,IAAM,GACzHzrB,KAAKyrB,KAAO,EACZK,EAAO9rB,KAAKwrB,UAAU1lB,QAAQ,KAAM9F,KAAKyrB,KACzCzrB,KAAK+rB,MAAQ,WACb/rB,KAAK2rB,UAAY3rB,KAAKwrB,UAAU9V,UAAU1V,KAAKyrB,IAAKK,GACpD9rB,KAAKyrB,IAAMK,EAAO,MAEjB,CACD9rB,KAAK+rB,MAAQ,OACb,IAAIC,EAAQhsB,KAAKwrB,UAAU1lB,QAAQ,IAAK9F,KAAKyrB,KACzCO,EAAQ,IACRA,EAAQhsB,KAAKwrB,UAAU5pB,QAC3B,IAAIqqB,EAAQjsB,KAAKwrB,UAAU1lB,QAAQ,KAAM9F,KAAKyrB,KAC1CQ,EAAQ,IACRA,EAAQjsB,KAAKwrB,UAAU5pB,QAC3BkqB,EAAOllB,KAAKE,IAAIklB,EAAOC,GACvBjsB,KAAK2rB,UAAY3rB,KAAKwrB,UAAU9V,UAAU1V,KAAKyrB,IAAKK,GAAM9qB,OAC1DhB,KAAKyrB,IAAMK,CACd,CACD,OAAO,CACV,GAIL,SAAWk3C,GACPA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAA0B,YAAI,GAAK,cAChDA,EAAaA,EAAyB,WAAI,GAAK,aAC/CA,EAAaA,EAA0B,YAAI,GAAK,cAChDA,EAAaA,EAAsB,QAAI,GAAK,UAC5CA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAAuB,SAAI,GAAK,WAC7CA,EAAaA,EAAyB,WAAI,GAAK,aAC/CA,EAAaA,EAAmB,KAAI,IAAM,OAC1CA,EAAaA,EAAmB,KAAI,IAAM,OAC1CA,EAAaA,EAAqB,OAAI,IAAM,QAC/C,CAdD,CAcGA,IAAiBA,EAAe,CAAE,IACrC,MAAMyR,iBACF,WAAA50E,CAAY8jE,EAAO16C,EAAQgyB,GACvBj7C,KAAK00E,aAAe,KACpB10E,KAAK20E,YAAc,KACnB30E,KAAK40E,WAAa,KAClB50E,KAAK60E,kBAAmB,EACxB70E,KAAK80E,oBAAqB,EAC1B90E,KAAK2jE,MAAQA,EACb3jE,KAAKipB,OAASA,EACdjpB,KAAKw7C,QAAUP,CAClB,CACD,aAAIiS,GACA,MAAO,SACV,CACD,iBAAI6nB,GACA,OAAO/0E,KAAKipB,OAAO6N,OACtB,CACD,iBAAIi+C,CAAcv0E,GACdR,KAAKipB,OAAO6N,QAAUt2B,CACzB,CACD,MAAA8vD,GACQtwD,KAAKg1E,mBAAmBlvE,QAAQ,YAAc,GAAK9F,KAAK+0E,gBACxD/0E,KAAKi1E,cAAgBj1E,KAAKk1E,mBAAmBl1E,KAAKipB,OAAOmN,SACrDp2B,KAAKipB,OAAOmN,UAAY/B,EAAc3H,OACtC1sB,KAAKi1E,cAAcr9D,MAAM0yB,QAAU,UAG3C,MAAMgW,EAAUC,MAAM,OAmGtB,OAlGAD,EAAQjgD,KAAK,KAAML,KAAKipB,OAAOxjB,IAC3BzF,KAAKw7C,SACLx7C,KAAKw7C,QAAQyoB,WACRkR,aAAa70B,EAAQ8C,QAASpjD,KAAKw7C,SAE5Cx7C,KAAKw7C,QAAU8E,EAAQ8C,QACnBpjD,KAAK2jE,MAAMl2D,QAAQkgD,gBAAkBnT,EAAaoF,gBAClDwG,EAAcU,sBAAsB,CAChCtL,QAASx7C,KAAKw7C,QACdqM,MAAO,iBACPxnD,KAAM,CAAE4oB,OAAQjpB,KAAKipB,QACrBu+B,gBAAiB,KACbxnD,KAAK6qE,aAAa,EAEtBnjB,SAAW/B,IACPA,EAAU/C,UAAY,GACtB,MAAM2P,EAAYjrD,SAAS8iC,cAAc,QACzCmoB,EAAU7P,UAAY1iD,KAAKipB,OAAOvQ,QAClCitC,EAAU9D,UAAUn8B,IAAI,wBACxBigC,EAAUtb,YAAYkoB,EAAU,EAEpCxK,YAAc7qB,IACVl9B,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,OAC7BpN,EAAG2oB,WAAaJ,EAAWK,KAAK,EAEpC0C,UAAYtrB,IACHA,EAAG78B,KAAKmmD,sBACTxmD,KAAKw7C,QAAQ5jC,MAAM6qC,eAAe,UACrC,IAITziD,KAAKyY,eACLzY,KAAKo1E,qBACLp1E,KAAKq1E,qBAETr1E,KAAKs1E,mBACLh1B,EACKoB,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAKw1E,kBAErBv6C,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAGxB,uBAAkC,GAAGlgD,KAAKktD,+BAAgC,GAAGltD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,oCAC9H1M,gBAAgBxgD,KAAKi1E,iBAErBz0B,gBAAgBxgD,KAAKy1E,0BACkB,IAAxCz1E,KAAK2jE,MAAMl2D,QAAQioE,kBAA+Bl7B,EAAaoF,gBAC/DU,EACKE,gBAAgBxgD,KAAK21E,sBAE9Br1B,EAEKrlB,SAAS,OAAOqlB,IACjBA,EACKoB,SAAS,GAAGxB,wBAAmC,GAAGlgD,KAAKktD,0BACvDxL,SAASlH,EAAayF,qBAEvBjgD,KAAKg1E,mBAAmBlvE,QAAQ,WAAa,IAAM9F,KAAKipB,OAAOgO,cAC/DqpB,EAAQE,gBAAgBxgD,KAAK41E,uBAI7B51E,KAAKg1E,mBAAmBlvE,QAAQ,SAAW,GAAK9F,KAAK+0E,eACrDz0B,EAAQE,gBAAgBxgD,KAAK61E,0BAI7B71E,KAAKg1E,mBAAmBlvE,QAAQ,WAAa,GAAK9F,KAAK+0E,eACvDz0B,EAAQE,gBAAgBxgD,KAAK81E,4BAI7B91E,KAAKg1E,mBAAmBlvE,QAAQ,WAAa,IAAM9F,KAAKipB,OAAOgO,cAC/DqpB,EAAQE,gBAAgBxgD,KAAK+1E,sBAI7B/1E,KAAKg1E,mBAAmBlvE,QAAQ,SAAW,IAAM9F,KAAKipB,OAAOgO,cAC7DqpB,EAAQE,gBAAgBxgD,KAAKg2E,mBAChC,IAIAx7B,EAAaoF,gBAEdU,EACK4B,GAAG,aAAcliD,KAAKi2E,aAAaxjC,KAAKzyC,OACxCkiD,GAAG,aAAcliD,KAAKk2E,aAAazjC,KAAKzyC,QAG7CA,KAAK2jE,MAAMl2D,QAAQ0oE,oBAAsB37B,EAAaoF,iBACtDU,EACK4B,GAAG,QAASliD,KAAKo2E,aAAa3jC,KAAKzyC,OAExCA,KAAK2jE,MAAMl2D,QAAQ4oE,mBACnBr2E,KAAKs2E,cAEFt2E,KAAKw7C,OACf,CACD,YAAA46B,CAAal5C,GAOT,OANAA,EAAGgqB,kBACHlnD,KAAK2jE,MAAM4S,mBAAmBv2E,KAAKipB,QACnCjpB,KAAKw2E,0BACAh8B,EAAaoF,gBACd5/C,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,gBAE3C,CACV,CACD,iBAAA26B,GACIz2E,KAAKipB,OAAO2O,kBACf,CACD,OAAA2e,GACIv2C,KAAKswD,QACR,CACD,kBAAAqlB,GACI,MAAMr1B,EAAUC,MAAM,OACjBmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,4BACjDxL,SAASlH,EAAayF,qBAmE3B,OAlEIjgD,KAAKyY,aACL6nC,EACKrlB,SAAS,KAAKqlB,GAAWA,EACzBpmC,KAAK,OAAQ,sBACb0mC,MAAM5gD,KAAKipB,OAAOvQ,SAClB6E,KAAKvd,KAAKipB,OAAOvQ,SACjBwpC,GAAG,SAAUhlB,IACdA,EAAGgqB,kBACH,MAAM1L,EAAUte,EAAGz5B,OACbizE,EAAUl7B,EAAQ4E,cAAcsgB,cAAc,SAQpD,OAPIgW,IACAl7B,EAAQ5jC,MAAM0yB,QAAU,OACxBosC,EAAQ9+D,MAAM6qC,eAAe,WAC7Bi0B,EAAQ9+D,MAAM++D,SAAW,GAAGn7B,EAAQ5zC,cACpC8uE,EAAQ/1B,QACR3gD,KAAKw7C,QAAQkF,aAAa0F,EAAcS,mBAAoB,MAEzD,CAAK,MAGX5rB,SAAS,SAASqlB,GAAWA,EAC7BY,OACA1gD,MAAMR,KAAKipB,OAAOvQ,SAClBwpC,GAAG,gBAAiBhlB,IACrB,IAAI05C,GAAa,EACbC,GAAO,EAeX,GAdI35C,aAAc45C,cAEK,KAAf55C,EAAGinB,QACHyyB,GAAa,EAGO,KAAf15C,EAAGinB,UACRyyB,GAAa,EACbC,GAAO,GAGN35C,aAAc65C,aACnBH,GAAa,GAEbA,EAAY,CACZ,MAAMF,EAAUx5C,EAAGz5B,OACbuzE,EAAMN,EAAQt2B,cAAcsgB,cAAc,KAC5CsW,IACAA,EAAIp/D,MAAM6qC,eAAe,WACzBi0B,EAAQ9+D,MAAM0yB,QAAU,QAExBusC,GAAQ72E,KAAKipB,OAAOvQ,UAAYg+D,EAAQl2E,OACxCR,KAAKipB,OAAOvQ,QAAUg+D,EAAQl2E,MAC9BR,KAAKy2E,sBAGLC,EAAQl2E,MAAQR,KAAKipB,OAAOvQ,QAC5B8pD,UAAUwU,IAEdh3E,KAAKw7C,QAAQuF,gBAAgBqF,EAAcS,mBAC9C,CACD,OAAO,CAAI,MAIfvG,EAAQrlB,SAAS,QAAQvnB,IACrBA,EAAE6J,KAAKvd,KAAKipB,OAAOvQ,SACdkoC,MAAM5gD,KAAKipB,OAAOvQ,QAAQ,IAGhC4nC,EAAQ8C,OAClB,CACD,kBAAA8xB,CAAmB9+C,GACf,MAAM6gD,EAAqB,GAAG/2B,sBAC9B,IAAIg3B,EACJ,OAAQ9gD,GACJ,KAAK/B,EAAcmK,UACf04C,EAA8B,GAAGD,QACjC,MACJ,KAAK5iD,EAAc8iD,WACfD,EAA8B,GAAGD,SACjC,MACJ,QACIC,EAA8B,GAAGD,SAGzC,OAAKj3E,KAAKyY,aASH8nC,MAAM,OACRmB,SAASu1B,EAAoB,GAAG/2B,WAAsBg3B,GACtD72E,KAAK,iBAAkB,IACvBugD,MAAMw2B,EAAOvjE,QAAQ,kBACrBqG,KAAK,WAAY,KACjBgoC,GAAG,SAAUhlB,IACdA,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,GACb90E,KAAKq3E,UAAWr3E,KAAK2jE,MAAM2T,UAAkCt3E,KAAK2jE,MAAM4T,UAChFjE,SAAS,CACVtZ,OAAQh6D,KAAKi1E,cACb5B,YAAarzE,KAAKipB,OAAOmO,WAAa,CAAC,YAAc,KACrDo8C,qBAAsB,CAACnzE,EAAMwf,KACzB,IAAImY,EACJ,OAAQ33B,EAAKoF,IACT,IAAK,WACDuyB,EAASgrC,EAAawU,OACtB,MACJ,IAAK,UACDx/C,EAASgrC,EAAayU,QACtB,MACJ,IAAK,WACDz/C,EAASgrC,EAAa0U,SACtB,MACJ,IAAK,SACD1/C,EAASgrC,EAAa2U,OACtB,MACJ,IAAK,aACD3/C,EAASgrC,EAAa4U,WACtB,MACJ,IAAK,OACD5/C,EAASgrC,EAAa6U,YACtB,MACJ,IAAK,YACD7/C,EAASgrC,EAAa8U,WACtB,MACJ,IAAK,aACD9/C,EAASgrC,EAAa+U,YAG9B/3E,KAAKg4E,kBAAkBhgD,EAAQ,KAAK,EAExCy7C,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKi4E,kBACR,GAEP,IAED/1B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACvB,IACayY,QA7DGhtB,IAAY/B,EAAcmK,WACvBpI,IAAY/B,EAAc8iD,WACtB52B,MAAM,OACRmB,SAASu1B,EAAoB,GAAG/2B,WAAsBg3B,GACtDt2B,MAAMw2B,EAAOvjE,QAAQ,kBACrBuvC,QACF,IAwDd,CACD,cAAAoyB,GACI,OAAIx1E,KAAK2jE,MAAMl2D,QAAQ82D,iBAAmBvkE,KAAKipB,OAAOgO,aAC3CspB,MAAM,OACRK,MAAMw2B,EAAOvjE,QAAQ,oBACrBqG,KAAK,WAAY,KACjBwnC,SAAS,GAAG1hD,KAAKktD,wBAAwBltD,KAAKktD,6BAC9CxL,SAAS,IAAG1hD,KAAK+0E,cAAgB,UAAY,KAC7C7yB,GAAG,SAAS,KACbliD,KAAK+0E,eAAiB/0E,KAAK+0E,cAC3B/0E,KAAKipB,OAAO2O,oBACL,KAENsqB,GAAG,YAAYg2B,IAAa,CAAC,GAAI,IAAI54B,SAAS44B,EAAI/zB,UACnD+zB,EAAIz0E,OAAOknC,OAC3B,IACiByY,QAGE,IAEd,CACD,kBAAA2yB,GACI,OAAOx1B,MAAM,OACRmB,SAAS,GAAGxB,uBAAkC,GAAGlgD,KAAKktD,+BAAgC,GAAGltD,KAAKktD,sCAC9F7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,WAAsB,GAAGA,kBAA6B,GAAGA,0BACrEU,MAAMw2B,EAAOvjE,QAAQ,cACrBqG,KAAK,WAAY,KACjBgoC,GAAG,SAAShlB,GAAMl9B,KAAKg4E,kBAAkBhV,EAAah1D,OAAQkvB,KAC9DglB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACd,MACIyY,OACR,CACD,gBAAA4yB,GACI,OAAOz1B,MAAM,OACRmB,SAAS,GAAGxB,uBAAkC,GAAGlgD,KAAKktD,+BAAgC,GAAGltD,KAAKktD,oCAC9F7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,WAAsB,GAAGA,kBAA6B,GAAGA,wBACrEU,MAAMw2B,EAAOvjE,QAAQ,eACrBqG,KAAK,WAAY,KACjBgoC,GAAG,SAASg2B,GAAOl4E,KAAKg4E,kBAAkBhV,EAAamV,KAAMD,KAC7Dh2B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACd,MACIyY,OACR,CACD,eAAAmyB,GACI,IAAI/wE,EAAS,GAMb,OALAA,GAAUxE,KAAK+0E,cAAgB,GAAK,IAAI/0E,KAAKktD,qBACzCltD,KAAK+0E,gBACLvwE,GAAUxE,KAAKipB,OAAOgO,aAAe,IAAIj3B,KAAKktD,qBAAuB,IAEzE1oD,GAAUxE,KAAKipB,OAAOmO,WAAa,IAAIp3B,KAAKktD,mBAAqB,GAC1D1oD,CACV,CACD,sBAAAqxE,GACI,OAAQ71E,KAAKyY,eAAwD,IAAxCzY,KAAK2jE,MAAMl2D,QAAQ2qE,iBAC1C73B,MAAM,OACHmB,SAAS,GAAGxB,uBAAkC,GAAGlgD,KAAKktD,+BAAgC,GAAGltD,KAAKktD,mCAAoC,GAAGltD,KAAKktD,2BAC1I7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,WAAsB,GAAGA,kBAA6B,GAAGA,wBACrEU,MAAMw2B,EAAOvjE,QAAQ,iBACrBqG,KAAK,WAAY,KACjBgoC,GAAG,SAAUhlB,IACdA,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,EAC1B90E,KAAKq4E,kBAAkBn7C,EAAG,IAEzBglB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACd,MACIyY,QACH,IACT,CACD,wBAAA0yB,GACI,MAAMhrE,EAAc9K,KAAKs4E,sBACzB,OAAQt4E,KAAKyY,eAAgE,IAAhDzY,KAAK2jE,MAAMl2D,QAAQ8qE,0BAAsCztE,EAAYlJ,OAAS,EACrG2+C,MAAM,OACHmB,SAAS,GAAGxB,uBAAkC,GAAGlgD,KAAKktD,+BAAgC,GAAGltD,KAAKktD,qCAAsC,GAAGltD,KAAKktD,2BAC5I7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,WAAsB,GAAGA,kBAA6B,GAAGA,0BACrEU,MAAMw2B,EAAOvjE,QAAQ,iBACrBqG,KAAK,WAAY,KACjBgoC,GAAG,SAAUhlB,IACdA,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,EAC1B90E,KAAKw4E,oBAAoBt7C,EAAG,IAE3BglB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACd,MACIyY,QACH,IACT,CACD,mBAAAwyB,GACI,OAAOr1B,MAAM,OACRmB,SAAS,GAAGxB,uBAAkC,GAAGlgD,KAAKktD,+BAAgC,GAAGltD,KAAKktD,qCAAsC,GAAGltD,KAAKktD,2BAC5I7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,WAAsB,GAAGA,kBAA6B,GAAGA,0BACrEU,MAAMw2B,EAAOvjE,QAAQ,oBACrB6tC,SAAS1hD,KAAK+0E,cAAgB,UAAY,IAC1C76D,KAAK,WAAY,KACjBgoC,GAAG,SAASg2B,GAAOl4E,KAAKg4E,kBAAkBhV,EAAayV,OAAQP,KAC/Dh2B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACvB,MAAcyY,OACT,CACD,UAAA3qC,GACI,OAAOzY,KAAK+0E,gBAAkB/0E,KAAKipB,OAAOgO,YAC7C,CACD,mBAAAuhD,CAAoBt7C,GAChB,MAAM5e,EAAUte,KAAK2jE,MAChBv7B,aACArT,WACAvW,yBAAyBxe,KAAKipB,OAAOqO,eAC1C,IAAIohD,EAAS,gBACTp6D,EAAQlc,QAAOsc,GAAKA,EAAE/T,QAAU3K,KAAKipB,OAAO5M,gBAAeza,OAAS,IACpE82E,EAAS14E,KAAKipB,OAAO5M,eAEzBrc,KAAK20E,YAAYrB,SAAS,CACtBtZ,OAAQ98B,EAAGz5B,OACX4vE,YAAaqF,EACblF,qBAAsB,CAACnzE,EAAMwf,KACrBxf,EAAKoF,IAAMizE,IACI,iBAAXr4E,EAAKoF,GACLzF,KAAKipB,OAAO5M,cAAgB,GAG5Brc,KAAKipB,OAAO5M,cAAgBhc,EAAKoF,GAErCzF,KAAKipB,OAAO2O,qBAET,GAEX67C,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,cACjD,GAGZ,CACD,MAAAu7B,GACI,OAAOr3E,KAAK2jE,MACPv7B,aAAarT,WACbzV,kBAAkBtf,KAAKipB,OAAOjO,KAAKxa,MAAO,eAClD,CACD,YAAAy1E,CAAa32C,GAIT,OAHAt/B,KAAK60E,kBAAmB,EACxB70E,KAAK24E,mBACLr5C,EAAE4nB,mBACK,CACV,CACD,YAAAgvB,CAAa52C,GAIT,OAHAt/B,KAAK60E,kBAAmB,EACxB70E,KAAKi4E,mBACL34C,EAAE4nB,mBACK,CACV,CACD,cAAA0xB,GACI,OAAO54E,KAAKw7C,QAAQqG,UAAU3mB,SAAS,SAC1C,CACD,WAAA2vC,GACItqB,MAAMvgD,KAAKw7C,SAASn7C,KAAK,eAAgB,KAC5C,CACD,WAAAi2E,GACI/1B,MAAMvgD,KAAKw7C,SAASn7C,KAAK,eAAgB,GAC5C,CACD,uBAAAm2E,IACQx2E,KAAK2jE,MAAMl2D,QAAQ4oE,oBACjBr2E,KAAK2jE,MAAMl2D,QAAQ0oE,oBAAsB37B,EAAaoF,iBACjD5/C,KAAK44E,mBACZ54E,KAAKs2E,aAEZ,CACD,gBAAAqC,GACI34E,KAAKs2E,aACR,CACD,gBAAA2B,GACSj4E,KAAK80E,qBAA+D,IAAzC90E,KAAK2jE,MAAMl2D,QAAQ4oE,mBAAgCr2E,KAAK44E,kBAA6D,GAAzC54E,KAAK2jE,MAAMl2D,QAAQ0oE,oBAC3Hn2E,KAAK6qE,aAEZ,CACD,kBAAAuK,GACI,MAAMv1D,EAAQ,GACRg5D,EAAQ74E,KAAK2jE,MAAMv7B,aAAarT,WAAWjC,mBACjD,IAAIgmD,GAAc,EACdz2E,EAAO,KACX,MAAM02E,EAAc/4E,KAAKipB,OAAOqO,cAChC,IAAI9E,EACJ,IAAK,MAAMf,KAAQonD,EAAO,CACtB,IAAKpnD,EACD,SACJ,MAAMunD,EAAYvnD,EAAKhE,2BAA2B3nB,QAAQizE,IAAgB,EACtE/4E,KAAKipB,OAAOjO,KAAKyW,OAASA,EAAKhsB,IAAOuzE,IACtCF,GAAc,GAEdE,IACAxmD,EAAcxyB,KAAK2jE,MAAMv7B,aAAarT,WACjCzC,uBAAuBb,EAAKhsB,IACjCpD,EAAO,CACHoD,GAAIgsB,EAAKhsB,GACT8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,GAElB,CACIy2E,IACD94E,KAAKipB,OAAOjO,KAAKyW,KAAO5R,EAAM,GAAGpa,IAGhBzF,KAAK2jE,MACTsV,gCACb52E,EAAO,CACHoD,GAAI,mBACJ8X,KAAM,OAEVsC,EAAMpb,KAAKpC,GACXmwB,EAAc4kD,EAAOvjE,QAAQ,oBAC7BxR,EAAO,CACHoD,GAAI,YACJ8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,IAEf,IAAI8mE,EAASnpE,KAAKipB,OAAOxjB,GACrB0jE,IACAA,GAAU,kBAEd,MAAM+P,EAAc,CAChBr5D,MAAOA,EACPpa,GAAI0jE,EACJsC,sBAAsB,EACtBvC,iBAAiB,GAErBlpE,KAAK00E,aAAe,IAAIzC,UAAUiH,EACrC,CACD,iBAAA7D,GACI,GAAmD,GAA/Cr1E,KAAK2jE,MAAMl2D,QAAQ8qE,yBACnB,OACJ,IAAIpP,EAASnpE,KAAKipB,OAAOxjB,GACrB0jE,IACAA,GAAU,gBAEd,MACM+P,EAAc,CAChBr5D,MAFU7f,KAAKs4E,sBAGf7yE,GAAI0jE,EACJsC,sBAAsB,EACtB7C,cAAc,EACdM,iBAAiB,GAErBlpE,KAAK20E,YAAc,IAAI1C,UAAUiH,EACpC,CACD,mBAAAZ,GACI,MAAMh6D,EAAUte,KAAK2jE,MAAMv7B,aAAarT,WACnCvW,yBAAyBxe,KAAKipB,OAAOqO,eAC1C,MAAO,CAAC,CAAE7xB,GAAI,gBAAiB8X,KAAM,YAChCiD,OAAOlC,EAAQxc,KAAI6I,IAAW,CAAElF,GAAIkF,EAAOA,OAAQ4S,KAAM65D,EAAOvjE,QAAQ,iBAAkBlJ,EAAOpK,OAASoK,EAAOpK,SACzH,CACD,gBAAAy0E,GACI,OAAOh1E,KAAK2jE,MAAMl2D,QAAQ29D,SAAWnnE,MAAMC,QAAQlE,KAAK2jE,MAAMl2D,QAAQ29D,SAAWprE,KAAK2jE,MAAMl2D,QAAQ29D,QAAU,CAAC,SAAU,SAAU,OAAQ,UAAW,SACzJ,CACD,iBAAA4M,CAAkBhgD,EAAQkgD,GACtB,OAAQlgD,GACJ,KAAKgrC,EAAah1D,OACd,MAAMmrE,EAAWn5E,KAAKipB,OAAO+L,WAC7BmkD,EAASv1C,aAAa5jC,KAAKipB,QAC3BkwD,EAAS91C,wBAAwBjP,EAAkBpmB,OAAQhO,KAAKipB,QAChE,MACJ,KAAK+5C,EAAayV,OACdz4E,KAAK+0E,eAAiB/0E,KAAK+0E,cAC3B/0E,KAAKy2E,oBACL,MACJ,KAAKzT,EAAawU,OACdx3E,KAAKipB,OAAOoO,WAAWr3B,KAAKipB,OAAOmO,YACnCp3B,KAAKy2E,oBACL,MACJ,KAAKzT,EAAayU,QACdz3E,KAAK2jE,MAAMhgC,WAAW3jC,KAAKipB,OAAQ,WACnC,MACJ,KAAK+5C,EAAa4U,WACd53E,KAAK2jE,MAAMhgC,WAAW3jC,KAAKipB,OAAQ,cACnC,MACJ,KAAK+5C,EAAa2U,OACd33E,KAAK2jE,MAAMhgC,WAAW3jC,KAAKipB,OAAQ,UACnC,MACJ,KAAK+5C,EAAa0U,SACd13E,KAAK2jE,MAAMhgC,WAAW3jC,KAAKipB,OAAQ,YACnC,MACJ,KAAK+5C,EAAa8U,WACd93E,KAAKipB,OAAOmN,QAAU/B,EAAcmK,UACpCx+B,KAAKipB,OAAO2O,mBACZ,MACJ,KAAKorC,EAAa+U,YACd/3E,KAAKipB,OAAOmN,QAAU/B,EAAc8iD,WACpCn3E,KAAKipB,OAAO2O,mBACZ,MACJ,KAAKorC,EAAa6U,YACd73E,KAAKipB,OAAOmN,QAAU/B,EAAc3H,KACpC1sB,KAAKipB,OAAO2O,mBACZ,MACJ,KAAKorC,EAAamV,KACd,MAAMiB,EAAUp5E,KAAK40E,WACrB50E,KAAK80E,oBAAqB,EAC1BsE,EAAQ9F,SAAS,CACbtZ,OAAQke,EAAMA,EAAIz0E,OAAS,KAC3B4vE,YAAarzE,KAAKq5E,6BAClB7F,qBAAuBnxE,IACnB,IAAI21B,EAAS31B,EAAKoD,GAClB,OAAQpD,EAAKoD,IACT,IAAK,SACDuyB,EAASgrC,EAAayV,OACtB,MACJ,IAAK,SACDzgD,EAASgrC,EAAah1D,OACtB,MACJ,IAAK,SACDgqB,EAASgrC,EAAawU,OACtB,MACJ,IAAK,UACDx/C,EAASgrC,EAAayU,QACtB,MACJ,IAAK,aACDz/C,EAASgrC,EAAa4U,WACtB,MACJ,IAAK,SACD5/C,EAASgrC,EAAa2U,OACtB,MACJ,IAAK,WACD3/C,EAASgrC,EAAa0U,SACtB,MACJ,IAAK,OACD1/C,EAASgrC,EAAa6U,YACtB,MACJ,IAAK,YAGL,IAAK,aACD7/C,EAASgrC,EAAa8U,WAG9B93E,KAAKg4E,kBAAkBhgD,EAAQkgD,EAAI,EAEvCpK,mBAAqBzrE,GACJrC,KAAK+0E,eAA6B,YAAZ1yE,EAAKoD,IAAgC,WAAZpD,EAAKoD,IAA+B,WAAZpD,EAAKoD,GAG7FguE,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKi4E,kBAAkB,IAGnC,MACJ,QACSj4E,KAAKs5E,8BAA8BthD,EAAQkgD,IAC5Cl4E,KAAKu5E,4BAA4BvhD,EAAQkgD,GAIrD,OADAA,GAAOA,EAAIhxB,mBACJ,CACV,CACD,gBAAAouB,GACI,IAAKt1E,KAAK40E,WAAY,CAClB,IAAIzL,EAASnpE,KAAKipB,OAAOxjB,GACrB0jE,IACAA,GAAU,eAEd,MAAMqQ,EAAS,GACfA,EAAO/0E,KAAK,CACRgB,GAAI,SACJ8X,KAAM65D,EAAOvjE,QAAQ,gBAErB7T,KAAK2jE,MAAMl2D,QAAQgsE,oBACnBD,EAAO/0E,KAAK,CACRgB,GAAI,SACJ8X,KAAM65D,EAAOvjE,QAAQ,qBAG7B2lE,EAAO/0E,KAAK,CACRgB,GAAI,SACJ8X,KAAM65D,EAAOvjE,QAAQ,eAEzB,IAAIgM,EAAQ,GACZA,EAAMpb,KAAK,CACPgB,GAAI,UACJ8X,KAAM,IACNsC,MAAO25D,IAEX,MAAME,EAAY15E,KAAK2jE,MAAMl2D,QAAQksE,aACjC,IACO35E,KAAK2jE,MAAMiW,qBACX55E,KAAK2jE,MAAMkW,mBAElB75E,KAAK2jE,MAAMkW,kBACfh6D,EAAMpb,KAAK,CACPgB,GAAI,UACJ8X,KAAM65D,EAAOvjE,QAAQ,gBACrBgM,MAAO65D,IAEX,MAAMI,EAAQ95E,KAAK+5E,0BACfD,GAAS71E,MAAMC,QAAQ41E,KACvBj6D,EAAQ,IAAIA,KAAUi6D,IAE1B,MAAMhvE,EAAc9K,KAAKs4E,sBACrBxtE,EAAYlJ,OAAS,GACrBie,EAAMpb,KAAK,CACPgB,GAAI,UACJ8X,KAAM65D,EAAOvjE,QAAQ,kBACrBgM,MAAO/U,IAGf,MAAMouE,EAAc,CAChBr5D,MAAOA,EACPpa,GAAI0jE,EACJsC,sBAAsB,EACtBvC,iBAAiB,EACjBN,cAAc,GAElB5oE,KAAK40E,WAAa,IAAI3C,UAAUiH,EACnC,CACJ,CACD,6BAAAI,CAA8BthD,EAAQkgD,GAClC,MAAM55D,EAAUte,KAAK2jE,MAChBv7B,aAAarT,WACbvW,yBAAyBxe,KAAKipB,OAAOqO,eAC1C,GAAc,iBAAVU,EACAh4B,KAAKipB,OAAO5M,cAAgB,OAE3B,MAAIiC,EAAQlc,QAAOsc,GAAKA,EAAE/T,QAAUqtB,IAAQp2B,OAAS,GAItD,OAAO,EAHP5B,KAAKipB,OAAO5M,cAAgB2b,CAI/B,CAED,OADAh4B,KAAKipB,OAAO2O,oBACL,CACV,CACD,0BAAAyhD,GACI,IAAIW,EAAc,GACdh6E,KAAK+0E,eACLiF,EAAYv1E,KAAK,UAEjBzE,KAAKipB,OAAOmO,YACZ4iD,EAAYv1E,KAAK,UAMrB,IAAIw1E,EAAW,gBAKf,OATgBj6E,KAAK2jE,MAChBv7B,aACArT,WACAvW,yBAAyBxe,KAAKipB,OAAOqO,eAE9Bl1B,QAAOsc,GAAKA,EAAE/T,QAAU3K,KAAKipB,OAAO5M,gBAAeza,OAAS,IACpEq4E,EAAWj6E,KAAKipB,OAAO5M,eAE3B29D,EAAYv1E,KAAKw1E,GACVD,CACV,EAGL,MAAME,6BAA6BzF,iBAC/B,eAAAc,GACI,MAAO,GAAGpoE,MAAMooE,qBAAqBv1E,KAAKktD,iBAAiBltD,KAAKktD,8BACnE,CACD,qBAAAuoB,GACI,OAAOl1B,MAAM,OACRmB,SAAS,GAAG1hD,KAAKktD,wBACjBxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,yBACjDxL,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAKm6E,0BACrB/2B,OACR,CACD,YAAA6S,GAEI,OADcj2D,KAAK2jE,MAAMv7B,aAAarT,WACzBpE,qBAAqB3wB,KAAKipB,OAAOjO,KAAKxa,MACtD,CACD,oBAAA25E,GACI,MAAMC,EAAWp6E,KAAKi2D,eAChB6R,EAAc9nE,KAAK2jE,MAAMv7B,aAAa8R,kBAAkBkgC,GAC9D,OAAIp6E,KAAKyY,aACE8nC,MAAM,KACRrmC,KAAK,OAAQ,sBACb0mC,MAAMknB,GACNvqD,KAAKuqD,GACL5lB,GAAG,SAAUhlB,IACdA,EAAGgqB,kBACHlnD,KAAK2jE,MAAM0W,iBAAiB,CACxBrgB,OAAQ98B,EAAGz5B,OACX4vE,YAAa,KACbG,qBAAsBxzE,KAAKs6E,mCAAmC7nC,KAAKzyC,MACnE8tE,mBAAoBzrE,GAAoB,eAAZA,EAAKoD,MAE9B,KAEN29C,QAEF7C,MAAM,QACRhjC,KAAKuqD,GACLlnB,MAAMknB,GACN1kB,OACR,CACD,kCAAAk3B,CAAmCj6E,EAAMgC,GACrC,MAAMk4E,EAASl6E,EAAKoF,GACd42B,EAAUr8B,KAAK2jE,MAAMv7B,aAC3B,IAAIluB,EAAOmiB,EAAQtH,WAAW5V,iBAAiBo7D,GAI/C,OAHAv6E,KAAKw6E,eAAetgE,GACpBla,KAAKipB,OAAOvQ,QAAU2jB,EAAQ8G,wBAAwBnjC,KAAKipB,QAC3DjpB,KAAKy2E,qBACE,CACV,CACD,cAAA+D,CAAetgE,GACXla,KAAKipB,OAAOjO,KAAK0L,SAASxM,EAAKzU,IAAI,GACnCzF,KAAKipB,OAAOjO,KAAKya,WAAavb,EAAKzU,GACnCzF,KAAKipB,OAAOjO,KAAK/M,SAAWiM,EAAKjM,QACpC,CACD,MAAAopE,GACI,MAAM7hD,EAAMx1B,KAAKipB,OAAOjO,KAAKrW,KAAK,GAClC,GAAI6wB,EAAK,CAEL,OADcx1B,KAAK2jE,MAAMv7B,aAAarT,WACzBzV,kBAAkBkW,EAAIh1B,MAAO,eAC7C,CAEG,OAAO,CAEd,CACD,iBAAA63E,CAAkBn7C,GACdl9B,KAAK80E,oBAAqB,EAC1B90E,KAAK00E,aAAapB,SAAS,CACvBtZ,OAAQ98B,EAAGz5B,OACX4vE,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB7f,KAAKu5E,4BAA4Bl5E,EAAKoF,GAAI,OACnC,GAEXguE,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,cACjD,GAGZ,CACD,qBAAA2+B,GACkBz6E,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQ+O,WAC5C,MAAMmd,EAAgBpgD,KAAKw7C,QAAQ4E,cACnCx1B,YAAW,KAEP,MAAM8vD,EAAat6B,EAAcsgB,cAAc,gBAAgB1gE,KAAKipB,OAAOxjB,qBAAqBzF,KAAKktD,uCAAuCltD,KAAKktD,6BAC7IwtB,GACAA,EAAW/vC,OAAO,GACvB,KACH3qC,KAAKy2E,mBACR,CACD,gBAAAkE,CAAiBz3D,GACCljB,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQ2H,kBAAmB,CAAE3Y,OAAQA,IACzEljB,KAAKy2E,mBACR,CACD,2BAAA8C,CAA4BvhD,EAAQkgD,GAOhC,MANe,cAAXlgD,EACAh4B,KAAKy6E,wBAGLz6E,KAAK26E,iBAAiB3iD,IAEnB,CACV,CACD,uBAAA+hD,GACI,MAAMl6D,EAAQ,GACRg5D,EAAQ74E,KAAK2jE,MAAMv7B,aAAarT,WAAWjC,mBACjD,IAAIkmD,GAAY,EACZF,GAAc,EAClB,IAAIz2E,EAAO,KACX,MAAMkd,EAAYvf,KAAKi2D,eACvB,IAAIzjC,EACJ,IAAK,MAAMf,KAAQonD,EACfG,EAAYvnD,EAAKhE,2BAA2B3nB,QAAQyZ,EAAUtR,WAAa,EACvEjO,KAAKipB,OAAOjO,KAAKyW,OAASA,EAAKhsB,IAAOuzE,IACtCF,GAAc,GAEdE,IACAxmD,EAAcxyB,KAAK2jE,MAAMv7B,aAAarT,WAAWzC,uBAAuBb,EAAKhsB,IAC7EpD,EAAO,CACHoD,GAAIgsB,EAAKhsB,GACT8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,IAGnB,IAAK,IAAIsD,EAAM,EAAGA,EAAMkzE,EAAMj3E,OAAQ+D,IAC7BkzE,EAAMlzE,GAGVmzE,IACD94E,KAAKipB,OAAOjO,KAAKyW,KAAO5R,EAAM,GAAGpa,IAiBrC,OAdqBzF,KAAK2jE,MACTsV,gCACb52E,EAAO,CACHoD,GAAI,mBACJ8X,KAAM,OAEVsC,EAAMpb,KAAKpC,GACXmwB,EAAclzB,EAAKuU,QAAQ,oBAC3BxR,EAAO,CACHoD,GAAI,YACJ8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,IAER,CAAC,CACAoD,GAAI,UACJ8X,KAAMje,EAAKuU,QAAQ,gBACnBgM,MAAOA,GAElB,EAGL,MAAM+6D,iCAAiCV,qBACnC,WAAAr6E,GACIsN,SAAS0tE,WACT76E,KAAK86E,oBAAsB,IAAIxG,mBAClC,CACD,eAAAiB,GACI,MAAO,GAAGpoE,MAAMooE,qBAAqBv1E,KAAKktD,iBAAiBltD,KAAKktD,2BACnE,CACD,YAAA+I,GACI,OAAOj2D,KAAK2jE,MACPv7B,aACArT,WACApE,qBAAqB3wB,KAAKipB,OAAOjO,KAAKrW,KAAK,GAAGnE,MACtD,CACD,qBAAAi1E,GACI,MAAM18D,EAAQ/Y,KAAK2jE,MAAMv7B,aAAarT,WAChCgmD,EAAmBx6B,MAAM,OAC1BmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,6BACjDxL,SAASlH,EAAayF,qBACrBt1C,EAASoO,EAAM0Z,sBAAsBzyB,KAAKipB,OAAOjO,KAAKyW,MAC5D,IAAK9mB,GAAqB,KAAXA,EACX,OACJ,MAAMqwE,EAAYh7E,KAAKi7E,mBAAmBtwE,GAC1C,GAAyB,IAArBqwE,EAAUp5E,OACV,OACJ,IAAIS,EAAO,KACX,MAAMqD,EAAYs1E,EAAUp5E,OAC5B,IAAK,IAAI+D,EAAM,EAAGA,EAAMD,EAAWC,IAE/B,GADAtD,EAAO24E,EAAUr1E,GACC,IAAdtD,EAAK4U,KACL,GAAIjX,KAAKyY,aAAc,CACnB,MAAMyiE,EAAe36B,MAAM,KACtBrmC,KAAK,OAAQ,sBACbqD,KAAKlb,EAAKkb,MACV2kC,GAAG,SAAUhlB,IACdA,EAAGgqB,kBACHlnD,KAAK00E,aAAapB,SAAS,CACvBtZ,OAAQkhB,EAAa93B,QACrBiwB,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACT,cAAZxf,EAAKoF,GACLzF,KAAKy6E,yBAGLz6E,KAAKipB,OAAOjO,KAAKyW,KAAOpxB,EAAKoF,GAC7BzF,KAAKipB,OAAOvQ,QAAU,GACtB1Y,KAAKy2E,oBACR,GAEP,IAENsE,EACK9/C,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,6BACjDxL,SAASlH,EAAayF,qBACtBO,gBAAgB06B,EAAa93B,UACrC,MAEG23B,EACK9/C,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,6BACjDxL,SAASlH,EAAayF,qBACtBhlB,SAAS,QAAQvnB,GAAKA,EACtB6J,KAAKlb,EAAKkb,MACVqjC,MAAMv+C,EAAKkb,eAGD,IAAdlb,EAAK4U,KACV8jE,EACK9/C,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,yBACjDxL,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAKm6E,0BAEP,IAAd93E,EAAK4U,MACV8jE,EACK9/C,SAAS,QAAQqlB,GAAWA,EAC5BoB,SAAS,GAAG1hD,KAAKktD,wBACjBxL,SAASlH,EAAayF,qBACtB1iC,KAAKlb,EAAKkb,MACVqjC,MAAMv+C,EAAKkb,QAGxB,OAAOw9D,EAAiB33B,OAC3B,CACD,sBAAAyyB,GACI,MAAM7U,EAAS7zD,MAAM0oE,yBAKrB,OAJI7U,IACAA,EAAO1P,kBAAkBzP,UAAUn8B,IAAI,cACvCs7C,EAAO1P,kBAAkB5Q,aAAa,QAASphD,EAAKuU,QAAQ,oBAEzDmtD,CACV,CACD,kBAAAma,GACkBn7E,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQgB,iBAC5Cl1B,KAAKy2E,mBACR,CACD,kBAAAwE,CAAmBtwE,GACf,IAAKA,EACD,MAAO,GACX,IAAInG,EAAS,GACb,MAAM42E,EAASp7E,KAAK86E,oBAEpB,IADAM,EAAO50E,MAAMmE,GACNywE,EAAOvvD,QAAQ,CAClB,MAAME,EAAQqvD,EAAOlvD,WACfP,EAAYyvD,EAAO5G,eACX,aAAVzoD,EACAvnB,EAAOC,KAAK,CAAEwS,KAAM,EAAGsG,KAAMoO,IAEd,eAAVI,EACLvnB,EAAOC,KAAK,CAAEwS,KAAM,IAEL,SAAV8U,GACLvnB,EAAOC,KAAK,CAAEwS,KAAM,EAAGsG,KAAMoO,GAEpC,CACD,OAAOnnB,CACV,CACD,cAAAg2E,CAAetgE,GACXla,KAAKipB,OAAOjO,KAAKrW,KAAK,GAAG+hB,SAASxM,EAAKzU,IAAI,GAC3CzF,KAAKipB,OAAOjO,KAAKya,WAAavb,EAAKzU,EACtC,CACD,iBAAA4yE,CAAkBn7C,GACdl9B,KAAKm7E,oBACR,CACD,2BAAA5B,CAA4BvhD,EAAQkgD,GAEhC,OADAl4E,KAAKm7E,sBACE,CACV,CACD,uBAAApB,GACI,MAAO,CAAC,CACAt0E,GAAI,UACJ8X,KAAMje,EAAKuU,QAAQ,gBACnBgM,MAAO,CAAC,CACApa,GAAI,OACJ8X,KAAMje,EAAKuU,QAAQ,oBAGtC,EAGL,MAAMwnE,iCAAiCnB,qBACnC,WAAAr6E,GACIsN,SAAS0tE,WACT76E,KAAKs7E,aAAe,IACvB,CACD,mBAAA1F,GACI,MAAMlP,EAAOv5D,MAAMyoE,sBAGnB,OAFclP,EAAKrd,SAAS,GACtBzI,MAAQthD,EAAKuU,QAAQ,yBACpB6yD,CACV,CAED,eAAA6O,GACI,MAAO,GAAGv1E,KAAKktD,iBAAiBltD,KAAKktD,+BAAiC//C,MAAMooE,iBAC/E,CACD,qBAAAE,GACI,MAAM8F,EAAYh7B,MAAM,OACnBmB,SAAS,GAAG1hD,KAAKktD,wBACjBxL,SAASlH,EAAayF,qBACtBmD,QAEL,IAAI9C,EAAUC,MAAM,MAAOg7B,GACtB75B,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,yBACjDxL,SAASlH,EAAayF,qBAwG3B,OAvGIjgD,KAAKyY,aACL6nC,EACKrlB,SAAS,KAAKvnB,GAAKA,EACnBwG,KAAK,OAAQ,sBACb0mC,MAAM5gD,KAAKipB,OAAOvQ,SAClB6E,KAAKvd,KAAKipB,OAAOvQ,SACjBwpC,GAAG,oBAAqBhlB,IACzBA,EAAGgqB,kBACH,MAAM1L,EAAUte,EAAGz5B,OACbizE,EAAUl7B,EAAQ4E,cAAcsgB,cAAc,SAChDgW,IACAl7B,EAAQ5jC,MAAM0yB,QAAU,OACxBosC,EAAQ9+D,MAAM6qC,eAAe,WAC7Bi0B,EAAQ9+D,MAAMxQ,MAAQ,OACtBsvE,EAAQ/1B,QACR3gD,KAAKw7C,QAAQkF,aAAa0F,EAAcS,mBAAoB,IAC/D,MAGA5rB,SAAS,SAASvnB,GAAKA,EACvBwtC,OACA1gD,MAAMR,KAAKw7E,kBACXt5B,GAAG,gBAAiBhlB,IACrB,IAAI05C,GAAa,EACbC,GAAO,EAeX,GAdI35C,aAAc45C,cAEK,KAAf55C,EAAGinB,QACHyyB,GAAa,EAGO,KAAf15C,EAAGinB,UACRyyB,GAAa,EACbC,GAAO,GAGN35C,aAAc65C,aACnBH,GAAa,GAEbA,EAAY,CACZ,MAAMF,EAAUx5C,EAAGz5B,OACbuzE,EAAMN,EAAQt2B,cAAcsgB,cAAc,KAC5CsW,IACAA,EAAIp/D,MAAM6qC,eAAe,WACzBi0B,EAAQ9+D,MAAM0yB,QAAU,QAE5B,MAAMmxC,EAASz7E,KAAKw7E,iBAChB3E,GAAQ4E,IAAW/E,EAAQl2E,OAC3BR,KAAK07E,eAAehF,EAAQl2E,OAC5BR,KAAKy2E,qBAGLC,EAAQl2E,MAAQi7E,EAEpBz7E,KAAKw7C,QAAQuF,gBAAgBqF,EAAcS,mBAC9C,OAILvG,EACKrlB,SAAS,QAAQvnB,IAClBA,EAAE6J,KAAKvd,KAAKipB,OAAOvQ,SACdkoC,MAAM5gD,KAAKipB,OAAOvQ,QAAQ,IAIvC4nC,EAAUC,MAAM,MAAOg7B,GAClB75B,SAAS,GAAG1hD,KAAKktD,wBACjBjyB,SAAS,QAAQvnB,IAClBA,EAAE6J,KAAK,KACFqjC,MAAM,IAAI,IAGnBN,EAAUC,MAAM,MAAOg7B,GAClB75B,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,yBACjDxL,SAASlH,EAAayF,qBACvBjgD,KAAKyY,cACLzY,KAAK27E,qBACLr7B,EACKrlB,SAAS,KAAK2gD,GAAgBA,EAC9B1hE,KAAK,OAAQ,sBACb0mC,MAAMjiD,EAASqB,KAAKipB,OAAOjO,KAAK/M,WAChCsP,KAAK5e,EAASqB,KAAKipB,OAAOjO,KAAK/M,WAC/Bi0C,GAAG,oBAAqBhlB,IACzBA,EAAGgqB,kBACHlnD,KAAKs7E,aAAahI,SAAS,CACvBtZ,OAAQ4hB,EAAax4B,QACrBiwB,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB7f,KAAKipB,OAAOjO,KAAK/M,SAAW5N,EAAKoF,GACjCzF,KAAKy2E,mBAAmB,GAE9B,QAINz2E,KAAKipB,OAAOjO,KAAK/M,SACjBqyC,EACKrlB,SAAS,QAAQvnB,IAClBA,EAAE6J,KAAK5e,EAASqB,KAAKipB,OAAOjO,KAAK/M,WAC5B2yC,MAAMjiD,EAASqB,KAAKipB,OAAOjO,KAAK/M,UAAU,KAGhDstE,CACV,CACD,kBAAAJ,GACkBn7E,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQgB,iBAC5Cl1B,KAAKy2E,mBACR,CACD,cAAA+E,GACI,MAAO,EACV,CACD,cAAAE,CAAel7E,GACd,CACD,MAAA62E,GACI,OAAO,CACV,CACD,iBAAAgB,CAAkBn7C,GACdl9B,KAAKm7E,oBACR,CACD,2BAAA5B,CAA4BvhD,EAAQkgD,GAEhC,OADAl4E,KAAKm7E,sBACE,CACV,CACD,kBAAA/F,GAEC,CACD,uBAAA2E,GACI,MAAO,CAAC,CACAt0E,GAAI,UACJ8X,KAAMje,EAAKuU,QAAQ,gBACnBgM,MAAO,CAAC,CACApa,GAAI,OACJ8X,KAAMje,EAAKuU,QAAQ,oBAGtC,CACD,kBAAA8nE,GACI,MAAM97D,EAAQ,GACd,IAAK,IAAIg8D,KAAYl9E,EACjB,IAAKyJ,MAAMkP,OAAOukE,IAAY,CAC1B,MAAMx5E,EAAO,CACToD,GAAIo2E,EACJt+D,KAAM5e,EAASk9E,IAEnBh8D,EAAMpb,KAAKpC,EACd,CAEL,IAAI8mE,EAASnpE,KAAKipB,OAAOxjB,GACrB0jE,IACAA,GAAU,iBAEd,MAAM+P,EAAc,CAChBr5D,MAAOA,EACPpa,GAAI0jE,EACJsC,sBAAsB,EACtBvC,iBAAiB,GAErBlpE,KAAKs7E,aAAe,IAAIrJ,UAAUiH,EACrC,EAEL,MAAM4C,kCAAkCT,yBACpC,iBAAItG,GACA,QAAO/0E,KAAK2jE,MAAMsV,+BAAgCj5E,KAAKipB,OAAO6N,OACjE,CACD,iBAAIi+C,CAAcv0E,GACVR,KAAK2jE,MAAMsV,8BACXj5E,KAAKipB,OAAO6N,QAAUt2B,EAGtBR,KAAKipB,OAAO6N,SAAU,CAE7B,CACD,sBAAA++C,GACI,MAAM7U,EAAS7zD,MAAM0oE,yBAKrB,OAJI7U,IACAA,EAAO1P,kBAAkBzP,UAAUn8B,IAAI,cACvCs7C,EAAO1P,kBAAkB5Q,aAAa,QAASphD,EAAKuU,QAAQ,oBAEzDmtD,CACV,CACD,cAAAwa,GACI,OAAOx7E,KAAKipB,OAAOjO,KAAK4S,GAC3B,CACD,cAAA8tD,CAAel7E,GACXR,KAAKipB,OAAOjO,KAAK4S,IAAMptB,CAC1B,CACD,eAAAu7E,GACI,OAAO/7E,KAAKipB,OAAOjO,KAAK4S,GAC3B,EAEL,MAAMouD,8BAA8BX,yBAChC,sBAAAxF,GACI,MAAM7U,EAAS7zD,MAAM0oE,yBAKrB,OAJI7U,IACAA,EAAO1P,kBAAkBzP,UAAUn8B,IAAI,cACvCs7C,EAAO1P,kBAAkB5Q,aAAa,QAASphD,EAAKuU,QAAQ,oBAEzDmtD,CACV,CACD,cAAAwa,GACI,OAAOx7E,KAAKipB,OAAOjO,KAAKxa,KAC3B,CACD,cAAAk7E,CAAel7E,GACXR,KAAKipB,OAAOjO,KAAK0L,SAASlmB,EAC7B,CACD,eAAAu7E,GACI,OAAO/7E,KAAKipB,OAAOjO,KAAKxa,KAC3B,EAGL,MAAMy7E,qBAAqBjhC,OACvB,aAAIkS,GACA,MAAO,SACV,CACD,WAAArtD,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACX+8D,YAAY,EACZ0R,aAAc,KACdC,YAAY,EACZC,YAAY,EACZ1G,kBAAkB,EAClB0C,kBAAkB,EAClBiE,iBAAiB,EACjBn5C,wBAAwB,EACxBy2C,cAAc,EACd2C,kBAAmB,kBACnBC,mBAAoB,KACpBnR,QAAS,KACTiL,mBAAmB,EACnBF,oBAAoB,EACpBxoB,eAAe,EACfurB,YAAa,CACTxN,mBAAoB,GACpBgG,oBAAoB,EACpB7D,qBAAqB,EACrByE,cAAc,EACdlJ,qBAAsB,MAE1B7oD,cAAe,EACfD,cAAc,EACdk8D,uBAAwB,KACxBC,qBAAsB,EACtBhD,oBAAoB,EACpBiD,qBAAqB,EACrB3Y,qBAAqB,GAEzB/jE,KAAK6uD,YAActO,MAAM,OACpBmB,SAAS,GAAG1hD,KAAKktD,8BACjB1M,gBAAgBD,MAAM,OACtB6C,SACAA,QACLpjD,KAAK4uD,cAAgB,EACrB5uD,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBAChCltD,KAAKikB,MAAQuQ,EAAY3B,KAC5B,CACD,aAAA8iB,GACI,MAAO,cACV,CACD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GAChBzN,KAAK4jE,sBACL,MAAM7qD,EAAQsjB,EAAQtH,WACtB/0B,KAAK28E,sBACL38E,KAAK48E,sBACLx2B,EAAcsC,oBAAoB1oD,KAAKi7C,MACnCj7C,KAAKyN,QAAQkgD,eACbvH,EAAcqC,sBAAsB,CAChCjN,QAASx7C,KAAKi7C,KACdoN,OAAQ,CAAC,aAAc,kBACvBiB,YAAa,CAAClB,EAAWlrB,KAErB,GADAl9B,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAGw6B,eACL,mBAAlBhjB,EAAG76B,KAAKwlD,MACR7nD,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,WAEjC,CACD,MAAM5mC,EAAS8d,EAAG78B,KAAK+e,OAClBrG,EAAMuG,kBAAkBF,EAAQ,iBACjC8d,EAAG2oB,WAAaJ,EAAW0D,QAE/BjsB,EAAGyoB,UAAU9D,UAAUn8B,IAAI,uBAC9B,GAELujC,WAAY,CAACb,EAAWlrB,KACpB,MAAM9d,EAAS8d,EAAG78B,KAAK+e,QACD,mBAAlB8d,EAAG76B,KAAKwlD,OACR9uC,EAAMuG,kBAAkBF,EAAQ,iBAChCpf,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MACrC,EAELuC,YAAa,CAACH,EAAWlrB,KACC,mBAAlBA,EAAG76B,KAAKwlD,MACR3qB,EAAG2oB,WAAaJ,EAAW0D,QAG3BjsB,EAAGyoB,UAAU9D,UAAUE,OAAO,wBAC9B7kB,EAAGyoB,UAAU/tC,MAAM6qC,eAAe,UAEtCziD,KAAKi7C,KAAK4G,UAAUE,OAAO,GAAG7B,eAC9BlgD,KAAKkwD,iBAAiB,EAE1B5H,OAAQ,CAACF,EAAWlrB,KAChB,GAAqB,kBAAjBA,EAAG76B,KAAKwlD,MAA2B,CACnC,MAEMxhD,EAFQrG,KAAKg1B,WACGmJ,aACAr4B,QAAQo3B,EAAG78B,KAAK4oB,QACtCjpB,KAAK68E,eAAex2E,EAAOrG,KAAK4uD,aACnC,KACI,CACD,MAAMxvC,EAAS8d,EAAG78B,KAAK+e,OACvBpf,KAAK88E,aAAa19D,EAAQpf,KAAK4uD,aAClC,IAIhB,CACD,kBAAAmuB,GACI,IAAIC,EAAc,EAClB,GAAIh9E,KAAKyN,QAAQ2uE,WAAY,CACzB,MAAMa,EAAgB18B,MAAM,MAAOvgD,KAAKi7C,MACnCiG,OACAQ,SAAS,GAAG1hD,KAAKktD,oBACjBxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,+BACjB3vC,KAAKje,EAAKuU,QAAQ,wBACe,IAAlC7T,KAAKyN,QAAQioE,kBACbuH,EACKhiD,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,0BACjB3vC,KAAKje,EAAKuU,QAAQ,kBAE3B7T,KAAKy/D,cAAgBwd,EAAc75B,QACnC45B,GAAeh9E,KAAKy/D,cAAcje,YACrC,CACDxhD,KAAKk9E,aACD38B,MAAM,MAAOvgD,KAAKi7C,MACbyG,SAAS,GAAG1hD,KAAKktD,qBACjBxL,SAASlH,EAAayF,qBACtBmD,QACLpjD,KAAKyN,QAAQ0uE,aACbn8E,KAAKm9E,cACD58B,MAAM,MAAOvgD,KAAKi7C,MACbyG,SAAS,GAAGxB,WAAsB,GAAGlgD,KAAKktD,mBAAoB,GAAGhN,kBACjEwB,SAASlH,EAAayF,qBACtBhlB,SAAS,KAAKqlB,GAAWA,EACzBpmC,KAAK,OAAQ,sBACbqD,KAAKje,EAAKuU,QAAQ,wBAClBquC,GAAG,SAAU5iB,IACdA,EAAE8kB,iBACFpkD,KAAKq6E,iBAAiB,CAClBrgB,OAAQ16B,EAAE77B,OACV4vE,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB,GAAgB,eAAZxf,EAAKoF,IAAuBpF,EAAKy5E,OAAS71E,MAAMC,QAAQ7D,EAAKy5E,MAAMsD,KACnE/8E,EAAKy5E,MAAMsD,IAAI7lE,SAAQ6H,GAAUpf,KAAK88E,aAAa19D,SAElD,CACD,MAAMm7D,EAASl6E,EAAKoF,GACpBzF,KAAK88E,aAAavC,EACrB,CACD,OAAO,CAAK,GAElB,MAEDn3B,QACT45B,GAAeh9E,KAAKm9E,cAAc37B,cAEtCxhD,KAAKk9E,aAAatlE,MAAM45D,UAAexxE,KAAKi7C,KAAKuG,aAAew7B,EAAc,GAA1C,IACvC,CACD,WAAA1hC,GACI8K,EAAcsC,oBAAoB1oD,KAAKi7C,MACvCj7C,KAAK28E,sBACL38E,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,mBAAAg6B,GACI,MAAMxnD,EAAQp1B,KAAKg1B,WACnBh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IAEjD,MAAMg7C,EAAQh7C,EAAM3pB,KACpB,IAAK2kE,GAAUA,EAAMntC,MAAQ1D,EAAgB4D,SACtCitC,EAAMntC,MAAQ1D,EAAgBkJ,aAC9B2nC,EAAMntC,MAAQ1D,EAAgB5H,IACjC,OAEJ,MAAM+wD,EAAgBh2E,SAASisE,cACzBgK,EAAgBv9E,KAAKi7C,KAAK/f,SAASoiD,IAAkBA,GAAiBh2E,SAASD,KACrF,OAAQ29D,EAAMhtC,QACV,KAAK5D,EAAkB6D,OAAQ,CAC3B,MAAMvV,EAAUsiD,EAAM9sC,QAChBslD,aAAgBv0D,IAClB,MAAMw0D,EAAQz9E,KAAKk9E,aAAaxc,cAAc,gBAAgBz3C,EAAOxjB,QACrE,GAAIg4E,EAAO,CACP,MAAM/1B,EAAW1nD,KAAK09E,kBAAkBz0D,EAAQw0D,GAChD,GAAI/1B,EAAU,CACV,MAAMi2B,EAAQj2B,EAAS4I,SACvB,GAAIitB,EAAe,CACf,MAAMK,EAAYD,EAAMjd,cAAc,MAAQid,EAAMjd,cAAc,uBAC9Dkd,GACAA,EAAUj9B,OAEjB,CACJ,CACJ,GAED18C,MAAMC,QAAQwe,GACdA,EAAQnL,SAASqO,GAAQ43D,aAAa53D,KAGtC43D,aAAa96D,GAEjB1iB,KAAK69E,yBACL,KACH,CACD,KAAKzpD,EAAkBkP,IAAK,CACxB,MAAM5gB,EAAUsiD,EAAM9sC,QAChBuK,UAAaxZ,IACf,MAAM5iB,EAAQ+uB,EAAM+I,aAAar4B,QAAQmjB,GACnC00D,EAAQ39E,KAAK89E,iBAAiB70D,EAAQ5iB,GAC5C,GAAIk3E,EAAe,CACf,MAAMK,EAAYD,EAAMjd,cAAc,KACtC,GAAIkd,EACA,IACIA,EAAUj9B,OACb,CACD,MAAO10C,GAEN,CAER,GAEDhI,MAAMC,QAAQwe,GACdA,EAAQnL,SAASqO,GAAQ6c,UAAU7c,KAGnC6c,UAAU/f,GAEd1iB,KAAK69E,yBACL,KACH,CACD,KAAKzpD,EAAkBpmB,OAAQ,CAC3B,MAAM0U,EAAUsiD,EAAM9sC,QAChB6lD,aAAgB90D,IAClB,MAAMw0D,EAAQz9E,KAAKk9E,aAAaxc,cAAc,gBAAgBz3C,EAAOxjB,QACrE,GAAIg4E,EAAO,CACP,MAAM5xD,EAAO4xD,EAAMO,YACb1iB,EAAOmiB,EAAMQ,gBAEnB,GADAj+E,KAAKk9E,aAAaryC,YAAY4yC,GAC1BF,EAAe,CACf,MAAMW,EAAYryD,GAAQyvC,GAAQt7D,KAAKm9E,cACjCS,EAAYM,EAAUxd,cAAc,MAAQwd,EAAUxd,cAAc,uBACtEkd,GACAA,EAAUj9B,OAEjB,CACJ,GAEL3gD,KAAK69E,yBACD55E,MAAMC,QAAQwe,GACdA,EAAQnL,SAASqO,GAAQm4D,aAAan4D,KAGtCm4D,aAAar7D,GAEjB,KACH,CACD,QACI1iB,KAAKu2C,UAEZ,GAER,CACD,mBAAAomC,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKg1B,WACbyQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,QAAAroD,GACI,OAAOh1B,KAAKooC,aAAapT,UAC5B,CACD,eAAAi7B,CAAgBlK,EAAOC,GACnB,MAAMm4B,EAAWn+E,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC9DzlC,EAAO,GACb,IAAK,IAAI7iB,EAAI,EAAGA,EAAIu5E,EAASv8E,OAAQgD,IAAK,CACtC,MAAM8yD,EAAUymB,EAASv5E,GACK,SAA1B8yD,EAAQ9/C,MAAM0yB,SAElB7iB,EAAKhjB,KAAKizD,EACb,CACD,GAAoB,IAAhBjwC,EAAK7lB,OAGL,OAFA5B,KAAK4uD,aAAe,OACpB5uD,KAAKk9E,aAAa7yC,YAAYrqC,KAAK6uD,aAGvC,MAAM8I,EAAa5a,sBAAsB/8C,KAAK6uD,aAC9C,GAAI7I,GAAS2R,EAAW3a,GAAKgJ,GAAS2R,EAAW3a,EAAIh9C,KAAK6uD,YAAYrN,aAClE,OAEJ,MAAM4P,EAAW3pC,EAAK,GAChB22D,EAAYhtB,EAAS5P,aACrB68B,EAASthC,sBAAsBqU,GACrC,IAAIwG,EAAmB5R,EAAQq4B,EAAOrhC,EAAIohC,EAAY,EAAKx3E,KAAK82C,OAAOsI,EAAQq4B,EAAOrhC,EAAIohC,EAAY,GAAKA,GAAa,EACpHxmB,EAAkBnwC,EAAK7lB,SACvBg2D,EAAkBnwC,EAAK7lB,QAEvBg2D,GAAmB53D,KAAK4uD,eACxB5uD,KAAK4uD,aAAegJ,EAChB53D,KAAK4uD,aAAennC,EAAK7lB,OACzB5B,KAAKk9E,aAAaplB,aAAa93D,KAAK6uD,YAAapnC,EAAKznB,KAAK4uD,eAG3D5uD,KAAKk9E,aAAa7yC,YAAYrqC,KAAK6uD,aAEvC7uD,KAAK6uD,YAAYyvB,eAAe,CAAE/Y,MAAO,SAAUgZ,SAAU,WAEpE,CACD,eAAAruB,GACIlwD,KAAK4uD,cAAgB,EACrBhkC,YAAW,KACH5qB,KAAK6uD,YAAYzO,eACjBpgD,KAAK6uD,YAAYzO,cAAcvV,YAAY7qC,KAAK6uD,YACnD,GACF,GACN,CACD,UAAA9a,CAAWtmC,GACPpO,EAAMwF,WAAW7E,KAAKyN,QAASA,GAC/BzN,KAAKq8B,QAAQ5uB,QAAQy1B,uBAAyBz1B,EAAQy1B,uBAClDz1B,EAAQ6uE,oBACRt8E,KAAKq8B,QAAQ5uB,QAAQ+iC,gBAAkB/iC,EAAQ6uE,mBAE/C7uE,EAAQ8uE,qBACRv8E,KAAKq8B,QAAQ5uB,QAAQgjC,kBAAoBhjC,EAAQ8uE,oBAEjD/hC,EAAaoF,iBACb5/C,KAAKyN,QAAQ29D,QAAU,CAAC,QACxBprE,KAAKyN,QAAQ2uE,YAAa,EAEjC,CACD,kBAAAjhC,GACQn7C,KAAKyN,QAAQs2D,sBACR/jE,KAAKgkE,cAAcC,YACpBjkE,KAAKi7C,KAAK5Q,YAAYrqC,KAAKgkE,eAEtC,CACD,gBAAA5oB,GACQp7C,KAAKyN,QAAQs2D,qBACT/jE,KAAKgkE,cAAcC,YACnBjkE,KAAKi7C,KAAKpQ,YAAY7qC,KAAKgkE,cAEtC,CACD,WAAA9oB,GACIl7C,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,KAAA7vC,GACIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,MAAA0N,GACI,IACItwD,KAAK+8E,qBACL/8E,KAAKw+E,qBACLx+E,KAAKy+E,oBACLz+E,KAAK69E,yBACLt9B,MAAMvgD,KAAKi7C,MACN6G,YAAYihB,GACZrhB,SAASlH,EAAayF,qBAC3B,MACMv9B,EADQ1iB,KAAKq8B,QAAQrH,WACLmJ,aACtB,IAAK,IAAIlV,KAAUvG,EACf1iB,KAAKk9E,aAAa7yC,YAAYrqC,KAAK0+E,aAAaz1D,GAEvD,CACD,MAAOse,GACH,IAAIt4B,EAAQs4B,EACZvnC,KAAKq8B,QAAQ2a,WAAW,CACpBhf,OAAQ,yBACRza,KAAMtO,EAAM/B,QACZ4lC,YAAa7jC,GAEpB,CACJ,CACD,sBAAA4uE,GACI,GAAI79E,KAAKy/D,cAAe,CACpB,MACM/8C,EADQ1iB,KAAKq8B,QAAQrH,WACLmJ,aACtBn+B,KAAKy/D,cAAc7nD,MAAM0yB,QAAW5nB,EAAc,OAAI,GAAK,MAC9D,CACJ,CACD,YAAAg8D,CAAaz1D,GACT,MAAMy+B,EAAW1nD,KAAK09E,kBAAkBz0D,GACxC,OAAIy+B,EACOA,EAAS4I,SACb,IACV,CACD,kBAAAimB,CAAmBttD,GACf,IAAI+6B,EACA26B,EACA11D,IACA+6B,EAAKhkD,KAAKk9E,aAAaxc,cAAc,eAAez3C,EAAOxjB,OACvDu+C,IACA26B,EAAW36B,EAAGnC,UAAU3mB,SAAS,YAIzC,MAAMzT,EAAOznB,KAAKk9E,aAAahpB,iBAAiB,IAAIl0D,KAAKktD,iBACzD,IAAK,IAAItoD,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM8f,EAAM+C,EAAK7iB,GACjB27C,MAAM77B,GACDo9B,YAAY,UACZ9hD,KAAKyN,QAAQ4oE,mBACd91B,MAAM77B,GACDrkB,KAAK,eAAgB,KAEjC,CACG2jD,IAAO26B,GACPp+B,MAAMyD,GACDtC,SAAS,UACTrhD,KAAK,eAAgB,GAEjC,CACD,YAAAy8E,CAAavjE,EAAOlT,GAChBrG,KAAKooC,aAAarT,WAClB,MAAMK,EAAQp1B,KAAKg1B,WACnB,GAAI/wB,MAAMC,QAAQqV,GAAQ,CACtB,IAAIqM,EAAM,KACNnD,EAAO,GACX,IAAK,IAAI7d,EAAI,EAAGA,EAAI2U,EAAM3X,OAAQgD,IAC9BghB,EAAMwP,EAAMqN,UAAU,CAClBE,YAAappB,EAAM3U,GACnByB,MAAOA,IACR,GACCuf,GACAnD,EAAKhe,KAAKmhB,GASlB,OANAwP,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB4D,QACtBC,OAAQ5D,EAAkBkP,IAC1BpL,QAASzV,EACT9e,OAAQ3D,OAELyiB,CACV,CAMG,OAJY2S,EAAMqN,UAAU,CACxBE,YAAappB,EACblT,MAAOA,GAIlB,CAED,gBAAAy3E,CAAiB70D,EAAQ5iB,GACrB,MAAMohB,EAAOznB,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC1D0xB,EAAc5+E,KAAK0+E,aAAaz1D,GAiBtC,OAhBIxB,EAAK7lB,OAAS,GACVyE,EAAQohB,EAAK7lB,OACb5B,KAAKk9E,aAAaplB,aAAa8mB,EAAan3D,EAAKphB,KAQrDrG,KAAKk9E,aAAa7yC,YAAYu0C,GAC9B5+E,KAAK6+E,kBAEL7+E,KAAKyN,QAAQ+uE,wBACbx8E,KAAKyN,QAAQ+uE,uBAAuBoC,GAEjCA,CACV,CACD,cAAAC,GACI7+E,KAAKk9E,aAAavgC,UAAY38C,KAAKk9E,aAAa4B,aAAe9+E,KAAKk9E,aAAa7gC,YACpF,CACD,iBAAA0iC,CAAkBt8D,GACd,IAAI1c,EAAM0c,EAAK7gB,OACf,MAAM4C,EAAS,GACf,IAAK,IAAII,EAAI,EAAGA,EAAImB,EAAKnB,IACjB5E,KAAKg/E,YAAYv8D,EAAK7d,KACtBJ,EAAOC,KAAKge,EAAK7d,IAEzB,OAAOJ,CACV,CACD,WAAAw6E,CAAYp5D,GACR,IAAK5lB,KAAKyN,QAAQ4uE,gBAAiB,CAC/B,MACM35D,EADQ1iB,KAAKg1B,WACGmJ,aACtB,IAAK,IAAIv5B,EAAI,EAAGA,EAAI8d,EAAQ9gB,OAAQgD,IAChC,IAAKghB,EAAI5K,KAAK8B,MAAQoX,EAAQgB,iBAAmBxS,EAAQ9d,GAAGoW,KAAK8B,MAAQoX,EAAQgB,iBAC1EtP,EAAI5K,KAAK8B,MAAQoX,EAAQiB,uBAAyBzS,EAAQ9d,GAAGoW,KAAK8B,MAAQoX,EAAQiB,wBAClFvP,EAAI5K,KAAKxa,QAAUkiB,EAAQ9d,GAAGoW,KAAKxa,MACtC,OAAO,IAGlB,CACD,OAAOolB,CACV,CACD,eAAAq5D,GACI,OAAOj/E,KAAKk9E,YACf,CACD,iBAAAQ,CAAkBz0D,EAAQgyB,GACtB,OAAQhyB,EAAOjO,KAAK8B,KAChB,KAAKoX,EAAQQ,SACT,OAAO,IAAIsnD,sBAAsBh8E,KAAMipB,EAAQgyB,GACnD,KAAK/mB,EAAQ2H,kBACT,OAAO,IAAI++C,yBAAyB56E,KAAMipB,EAAQgyB,GACtD,KAAK/mB,EAAQ+O,UACT,OAAO,IAAI64C,0BAA0B97E,KAAMipB,EAAQgyB,GACvD,QACI,OAAO,IAAIi/B,qBAAqBl6E,KAAMipB,EAAQgyB,GAEzD,CACD,2BAAAg+B,GAEI,OADcj5E,KAAKg1B,WACN4J,QAAU5+B,KAAKooC,aAAa36B,QAAQy1B,sBACpD,CACD,2BAAAg8C,CAA4BptC,GACxB,MAAMqtC,EAAUrtC,EAAK1vC,QAAOC,IAASA,EAAKyd,WAAUhe,KAAIO,GAAQA,EAAKoD,KACjE05E,EAAQv9E,OAAS,GACjBkwC,EAAKstC,QAAQ,CACT35E,GAAI,aACJ8X,KAAMje,EAAKuU,QAAQ,uBACnBimE,MAAO,CACHsD,IAAK+B,KAIjBrtC,EAAKv6B,SAAQlV,IACLA,EAAKwd,OACL7f,KAAKk/E,4BAA4B78E,EAAKwd,MACzC,GAER,CACD,kBAAA2+D,GACI,MAAMzlE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,iBAEd,MAAMkW,EAAetmE,EAAM8H,gBAAgB,CAAEiQ,QAAQ,EAAOC,QAAQ,EAAMC,QAAQ,EAAOzQ,cAAevgB,KAAKyN,QAAQ8S,cAAeD,aAActgB,KAAKyN,QAAQ6S,eAE3JtgB,KAAKyN,QAAQivE,qBACb18E,KAAKk/E,4BAA4BG,GAErC,MAAM5xE,EAAU,CACZhI,GAAI0jE,EACJtpD,MAAOw/D,EACP/M,aAActyE,KAAKyN,QAAQ6xE,yBAC3BpW,gBAAiBlpE,KAAKyN,QAAQy7D,iBAElC7pE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAKu/E,aAAe,IAAItN,UAAUxkE,EACrC,CACD,eAAAmsE,GACI,MAAO,CACH,CAAEn0E,GAAI,OAAQ8X,KAAMje,EAAKuU,QAAQ,iBACjC,CAAEpO,GAAI,YAAa8X,KAAMje,EAAKuU,QAAQ,iBACtC,CAAEpO,GAAI,aAAc8X,KAAMje,EAAKuU,QAAQ,kBACvC,CAAEpO,GAAI,MAAO8X,KAAM,OAE1B,CACD,eAAAs8D,GACI,MAAO,CACH,CAAEp0E,GAAI,UAAW8X,KAAMje,EAAKuU,QAAQ,mBACpC,CAAEpO,GAAI,SAAU8X,KAAMje,EAAKuU,QAAQ,kBACnC,CAAEpO,GAAI,WAAY8X,KAAMje,EAAKuU,QAAQ,kBACrC,CAAEpO,GAAI,aAAc8X,KAAMje,EAAKuU,QAAQ,kBAE9C,CACD,cAAA2rE,GACI,MAAMzmE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,aAEd,MACM+P,EAAc,CAChBzzE,GAAI0jE,EACJtpD,MAHU7f,KAAK45E,kBAAkBp5D,OAAOxgB,KAAKu3E,SAASzxD,YAItDojD,gBAAiBlpE,KAAKyN,QAAQy7D,gBAC9BN,cAAc,GAElBvpE,EAAMqF,OAAOw0E,EAAal5E,KAAKyN,QAAQyrE,aACvCA,EAAYzN,sBAAuB,EACnCzrE,KAAKs3E,SAAW,IAAIrF,UAAUiH,EACjC,CACD,cAAAuG,GACI,MAAM1mE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,aAEd,MAAMtpD,EAAQxgB,EAAM8E,gBAAgBnE,KAAK65E,mBACrC75E,KAAKyN,QAAQgsE,qBACb55D,EAAMpb,KAAK,CAAEgB,GAAI,MAAO8X,KAAM,QAC9BsC,EAAMpb,KAAK,CAAEgB,GAAI,WAAY8X,KAAMje,EAAKuU,QAAQ,sBAEpD,MAAMqlE,EAAc,CAChBr5D,MAASA,EACTpa,GAAI0jE,EACJD,gBAAiBlpE,KAAKyN,QAAQy7D,gBAC9BN,cAAc,GAElBvpE,EAAMqF,OAAOw0E,EAAal5E,KAAKyN,QAAQyrE,aACvCl5E,KAAKu3E,SAAW,IAAItF,UAAUiH,GAC9BA,EAAYzN,sBAAuB,CACtC,CACD,gBAAA4O,CAAiBnB,GACbl5E,KAAKu/E,aAAajM,SAAS4F,EAC9B,CACD,UAAAv1C,CAAW1a,EAAQsN,GACf,MACM7T,EADQ1iB,KAAKg1B,WACGmJ,aAChB93B,EAAQqc,EAAQ5c,QAAQmjB,GAC9B,GAAI5iB,GAAS,EACT,OAAQkwB,GACJ,IAAK,UACD,GAAa,GAATlwB,EACA,OAEJrG,KAAK68E,eAAex2E,EAAO,GAC3B,MACJ,IAAK,SACD,GAAa,GAATA,EACA,OAEJrG,KAAK68E,eAAex2E,EAAOA,EAAQ,GACnC,MACJ,IAAK,WACD,GAAIA,GAASqc,EAAQ9gB,OAAS,EAC1B,OAEJ5B,KAAK68E,eAAex2E,EAAOA,EAAQ,GACnC,MACJ,IAAK,aACD,GAAIA,GAASqc,EAAQ9gB,OAAS,EAC1B,OAEJ5B,KAAK68E,eAAex2E,EAAOqc,EAAQ9gB,OAAS,GAI3D,CACD,cAAAi7E,CAAe52E,EAAQC,GACnB,MAAMkvB,EAAQp1B,KAAKg1B,WACnB,IAAKI,EACD,OACJ,MAAM3N,EAAOznB,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC1DwyB,EAAYj4D,EAAKxhB,GACT,GAAVC,EACAlG,KAAKk9E,aAAaplB,aAAa4nB,EAAW1/E,KAAKk9E,aAAa,IAEvDh3E,EAAS,GAAKA,EAASuhB,EAAK7lB,OAAS,EACtCqE,EAASC,EACTlG,KAAKk9E,aAAaplB,aAAa4nB,EAAWj4D,EAAKvhB,EAAS,IAGxDlG,KAAKk9E,aAAaplB,aAAa4nB,EAAWj4D,EAAKvhB,IAInDlG,KAAKk9E,aAAa7yC,YAAYq1C,GAElCtqD,EAAMuO,WAAW19B,EAAQC,GACzBkvB,EAAMiO,yBACT,CACD,iBAAAo7C,GACIz+E,KAAKy/E,iBACDz/E,KAAKyN,QAAQksE,cACb35E,KAAKw/E,gBAEZ,CACD,mBAAA5b,GACI5jE,KAAKgkE,cAAgB18D,SAAS8iC,cAAc,OAC5CpqC,KAAKgkE,cAAcniB,UAAUn8B,IAAI,GAAGw6B,mBACpClgD,KAAKgkE,cAAcniB,UAAUn8B,IAAI80B,EAAayF,qBAC9CjgD,KAAKgkE,cAAcphB,UAAY,sVAClC,EAGL,MAAM+8B,iBACF,WAAA9/E,CAAY8jE,EAAO16C,EAAQgyB,GACvBj7C,KAAK00E,aAAe,KACpB10E,KAAK20E,YAAc,KACnB30E,KAAK60E,kBAAmB,EACxB70E,KAAK80E,oBAAqB,EAC1B90E,KAAK4/E,YAAa,EAClB5/E,KAAK6/E,IAAMlc,EACX3jE,KAAKipB,OAASA,EACdjpB,KAAKw7C,QAAUP,CAClB,CACD,aAAIiS,GACA,MAAO,SACV,CACD,MAAAoD,GACI,MAAMhQ,EAAUC,MAAM,OA8CtB,OA7CAD,EAAQjgD,KAAK,KAAML,KAAKipB,OAAOxjB,IAC3BzF,KAAKw7C,SAELx7C,KAAKw7C,QAAQyoB,WACRkR,aAAa70B,EAAQ8C,QAASpjD,KAAKw7C,SAE5Cx7C,KAAKw7C,QAAU8E,EAAQ8C,QACnBpjD,KAAK6/E,IAAIpyE,QAAQkgD,eACjBvH,EAAcU,sBAAsB,CAChCtL,QAASx7C,KAAKw7C,QACdqM,MAAO,iBACPL,gBAAiB,IAAMxnD,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,eACrEiM,YAAc7qB,IACVl9B,KAAK6qE,cACL7qE,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,OAC7BpN,EAAG2oB,WAAaJ,EAAWK,KAAK,EAEpC0C,UAAYtrB,IACRl9B,KAAKw7C,QAAQuF,gBAAgB,QAAQ,EAEzC1gD,KAAM,CAAE4oB,OAAQjpB,KAAKipB,UAGxBjpB,KAAKipB,OAAOgO,eACbj3B,KAAKo1E,qBACLp1E,KAAKq1E,qBAET/0B,EACKoB,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAK21E,sBACrBn1B,gBAAgBxgD,KAAK8/E,sBACrBtlC,EAAaoF,gBACdU,EACKE,gBAAgBxgD,KAAK+/E,sBAG9Bz/B,EACK4B,GAAG,aAAcliD,KAAKi2E,aAAaxjC,KAAKzyC,OACxCkiD,GAAG,aAAcliD,KAAKk2E,aAAazjC,KAAKzyC,QAEzCA,KAAK6/E,IAAIpyE,QAAQ0oE,oBAAsB37B,EAAaoF,iBACpDU,EACK4B,GAAG,mBAAoBliD,KAAKo2E,aAAa3jC,KAAKzyC,OAEhDA,KAAKw7C,OACf,CACD,iBAAAi7B,GACIz2E,KAAKipB,OAAO2O,kBACf,CACD,OAAA2e,GACIv2C,KAAKswD,QACR,CACD,UAAA73C,GACI,OAAOzY,KAAKipB,OAAO6N,UAAY92B,KAAKipB,OAAOgO,YAC9C,CACD,kBAAA8oD,GACI,OAAOx/B,MAAM,MAAOvgD,KAAKw7C,SACpBkG,SAAS,GAAGxB,wBAAmC,GAAGlgD,KAAKktD,0BACvD1M,gBAAgBxgD,KAAKggF,uBACrBx/B,gBAAgBxgD,KAAK61E,0BACrBr1B,gBAAgBxgD,KAAK81E,4BACrBt1B,gBAAgBxgD,KAAK+1E,sBACrB3yB,OACR,CACD,kBAAAuyB,GACI,MAAMj9D,EAAU1Y,KAAKipB,OAAOvQ,QAC5B,IAAK1Y,KAAKyY,aACN,OAAO8nC,MAAM,OACRmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,4BACjDxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOvnB,GAAKA,EACrBktC,MAAMloC,GACN6E,KAAK7E,GACLwB,KAAK,WAAY,OACjBkpC,QAET,MAAM68B,WAAc/iD,IACXl9B,KAAK4/E,aACN5/E,KAAK4/E,YAAa,EAClBh1D,YAAW,KAAQ5qB,KAAK4/E,YAAa,CAAK,GAAK,KAClD,EAEL,IAAIM,GAAY,EAmBhB,OAlBA3/B,MAAMvgD,KAAKw7C,SAAS0G,GAAG,uBAAuBhlB,IAC1C,GAAIA,aAAcsoB,aAAexlD,KAAK4/E,WAElC,OADAK,cACO,EAEX/iD,EAAGgqB,kBACHg5B,EAAYlgF,KAAKw7C,QAAQklB,cAAc,MAAQp5D,SAASisE,cACxD,MAAMmD,EAAU12E,KAAKw7C,QAAQklB,cAAc,IAAI1gE,KAAKktD,kCAC9C8pB,EAAMh3E,KAAKw7C,QAAQklB,cAAc,IAAI1gE,KAAKktD,8BAQhD,OAPIwpB,IACAA,EAAQ9+D,MAAMxQ,MAAQ,GAAGpH,KAAKw7C,QAAQ5zC,gBACtCovE,EAAIp/D,MAAM0yB,QAAU,OACpBosC,EAAQ9+D,MAAM6qC,eAAe,WAC7Bi0B,EAAQ/1B,QACR3gD,KAAKw7C,QAAQkF,aAAa0F,EAAcS,mBAAoB,MAEzD,CAAK,IAETtG,MAAM,OACRmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,4BACjDxL,SAASlH,EAAayF,qBACtBhlB,SAAS,KAAKqlB,GAAWA,EACzBpmC,KAAK,OAAQ,sBACb0mC,MAAM5gD,KAAKipB,OAAOvQ,SAClB6E,KAAK7E,GACLwpC,GAAG,WAAW5iB,IACf,MAAM44C,EAAM54C,EAEZ,IADqB44C,EAAIiI,SAAWjI,EAAIkI,WAA4B,IAAflI,EAAI/zB,SAAgC,IAAf+zB,EAAI/zB,UAC3DnkD,KAAK44E,iBAAkB,CACtC,MAAMyH,EAAa/4E,SAAS20C,YAAY,eAIxC,OAHAokC,EAAWnkC,UAAU,YAAY,GAAM,GACvCl8C,KAAKw7C,QAAQ+I,cAAc87B,GAC3BnI,EAAIhxB,mBACG,CACV,CACD,OAAO,CAAI,MAEVjsB,SAAS,SAASqlB,GAAWA,EAC7BY,OACA1gD,MAAMR,KAAKipB,OAAOvQ,SAClBwpC,GAAG,gBAAiBhlB,IACrB,IAAI05C,GAAa,EACbC,GAAO,EAeX,GAdI35C,aAAc45C,cAEK,KAAf55C,EAAGinB,QACHyyB,GAAa,EAGO,KAAf15C,EAAGinB,UACRyyB,GAAa,EACbC,GAAO,GAGN35C,aAAc65C,aACnBH,GAAa,GAEbA,EAAY,CACZ,MAAMF,EAAUx5C,EAAGz5B,OACbuzE,EAAMN,EAAQt2B,cAAcsgB,cAAc,KAC5CsW,IACAA,EAAIp/D,MAAM6qC,eAAe,WACzBi0B,EAAQ9+D,MAAM0yB,QAAU,QAExBusC,GAAQ72E,KAAKipB,OAAOvQ,UAAYg+D,EAAQl2E,OACxCR,KAAKipB,OAAOvQ,QAAUg+D,EAAQl2E,MAC9BR,KAAKy2E,qBAGLC,EAAQl2E,MAAQR,KAAKipB,OAAOvQ,QAEhC1Y,KAAKw7C,QAAQuF,gBAAgBqF,EAAcS,oBACvCq5B,GACAlgF,KAAKw7C,QAAQklB,cAAc,KAAK/f,OAEvC,OAEAyC,OACR,CACD,kBAAA08B,GACI,MAAM7I,EAAqB,GAAG/2B,sBAC9B,IAAIg3B,EAA8BD,EAClC,OAAQj3E,KAAKipB,OAAOmN,SAChB,KAAK/B,EAAcmK,UACf04C,EAA8B,GAAGD,QACjC,MACJ,KAAK5iD,EAAc8iD,WACfD,EAA8B,GAAGD,SAGzC,OAAIj3E,KAAKipB,OAAOmN,SAAW/B,EAAc3H,KAC9B,KAGA6zB,MAAM,OACRmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,mCACjDxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,wBAAyBgqB,GAC1Ct2B,MAAMthD,EAAKuU,QAAQ,oBACnBuvC,OAEZ,CACD,yBAAAk9B,CAA0BpjD,EAAI88B,GAC1B98B,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,EAkC1B,OAjCa90E,KAAKq3E,UAAWr3E,KAAK6/E,IAAIvI,UAAgCt3E,KAAK6/E,IAAItI,UAC1EjE,SAAS,CACVtZ,OAAQA,EACRqZ,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KAYzB,GAAe,QAAXxf,EAAKoF,IAA2B,aAAXpF,EAAKoF,IAAgC,cAAXpF,EAAKoF,GAAoB,CACxE,MAAM2vB,EAAQp1B,KAAK6/E,IAAI7qD,WACvBh1B,KAAKipB,OAAOmN,QAZD,SADantB,EAaiB5I,EAAKoF,IAXnC4uB,EAAc3H,KAET,aAAPzjB,EACEorB,EAAcmK,UAET,cAAPv1B,EACEorB,EAAc8iD,gBADpB,EAOLn3E,KAAKipB,OAAO0N,WAAavB,EAAMsB,mBAAmB12B,KAAKipB,QACvDjpB,KAAKy2E,mBACR,MAEGz2E,KAAK6/E,IAAIl8C,WAAW3jC,KAAKipB,OAAQ5oB,EAAKoF,IAlBf,IAACwD,CAmB3B,EAELwqE,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKi4E,kBACR,KAGF,CACV,CACD,mBAAA+H,GACI,IAAKhgF,KAAKyY,aACN,OAAO,KAEX,MAAM6nC,EAAUC,MAAM,OACjBmB,SAAS,GAAGxB,kBAA6B,GAAGA,sBAAiC,GAAGA,4BAChFU,MAAMthD,EAAKuU,QAAQ,kBACnBqG,KAAK,WAAY,KACjBgoC,GAAG,oBAAqBhlB,GAAOl9B,KAAKsgF,0BAA0BpjD,EAAIojB,EAAQ8C,WAC1ElB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACd,IACD,OAAO2V,EAAQ8C,OAClB,CACD,wBAAAm9B,CAAyBrjD,GACrBA,EAAGgqB,kBACH,MAAM9xB,EAAQp1B,KAAK6/E,IAAI7qD,WAGvB,OAFAI,EAAMwO,aAAa5jC,KAAKipB,QACxBmM,EAAMiO,wBAAwBjP,EAAkBpmB,OAAQhO,KAAKipB,SACtD,CACV,CACD,kBAAA8sD,GACI,OAAI/1E,KAAKipB,OAAOgO,aACL,KAEJspB,MAAM,OACRmB,SAAS,GAAGxB,kBAA6B,GAAGA,0BAC5CU,MAAMthD,EAAKuU,QAAQ,cACnBqG,KAAK,WAAY,KACjBgoC,GAAG,oBAAqBhlB,GAAOl9B,KAAKugF,yBAAyBrjD,KAC7DglB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACvB,IACayY,OACR,CACD,eAAAmyB,GACI,IAAI/wE,EAAS,GAKb,OAJAA,GAAUxE,KAAKipB,OAAO6N,QAAU,GAAK,IAAI92B,KAAKktD,qBAC1CltD,KAAKipB,OAAO6N,UACZtyB,GAAUxE,KAAKipB,OAAOgO,aAAe,IAAIj3B,KAAKktD,qBAAuB,IAElE1oD,CACV,CACD,sBAAAg8E,CAAuBtjD,GAInB,OAHAA,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,EAC1B90E,KAAKygF,wBAAwBvjD,IACtB,CACV,CACD,wBAAAwjD,CAAyBxjD,GAIrB,OAHAA,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,EAC1B90E,KAAKw4E,oBAAoBt7C,IAClB,CACV,CACD,mBAAAyjD,GACI,OAAqD,IAA9C3gF,KAAK6/E,IAAIpyE,QAAQ8qE,0BACpBv4E,KAAK6/E,IACAz3C,aACArT,WACAvW,yBAAyBxe,KAAKipB,OAAOqO,eAAe11B,OAAS,CACzE,CACD,mBAAA42E,CAAoBt7C,GAChB,MAAM5e,EAAUte,KAAK6/E,IAChBz3C,aACArT,WACAvW,yBAAyBxe,KAAKipB,OAAOqO,eAC1C,IAAIohD,EAAS,gBACTp6D,EAAQlc,QAAOsc,GAAKA,EAAE/T,QAAU3K,KAAKipB,OAAO5M,gBAAeza,OAAS,IACpE82E,EAAS14E,KAAKipB,OAAO5M,eAEzBrc,KAAK20E,YAAYrB,SAAS,CACtBtZ,OAAQ98B,EAAGz5B,OACX4vE,YAAaqF,EACblF,qBAAsB,CAACnzE,EAAMwf,KACrBxf,EAAKoF,IAAMizE,IACI,iBAAXr4E,EAAKoF,GACLzF,KAAKipB,OAAO5M,cAAgB,GAG5Brc,KAAKipB,OAAO5M,cAAgBhc,EAAKoF,GAErCzF,KAAKipB,OAAO2O,qBAET,GAEX67C,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,cACjD,GAGZ,CACD,sBAAA+5B,GACI,OAAK71E,KAAKyY,eAAsD,IAAtCzY,KAAK6/E,IAAIpyE,QAAQ2qE,iBAGpC73B,MAAM,OACRmB,SAAS,GAAGxB,kBAA6B,GAAGA,wBAC5CU,MAAMthD,EAAKuU,QAAQ,iBACnBqG,KAAK,WAAY,KACjBgoC,GAAG,oBAAqBhlB,GAAOl9B,KAAKwgF,uBAAuBtjD,KAC3DglB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACvB,IACayY,QAVM,IAWd,CACD,wBAAA0yB,GACI,OAAK91E,KAAKyY,cAAiBzY,KAAK2gF,sBAGzBpgC,MAAM,OACRmB,SAAS,GAAGxB,kBAA6B,GAAGA,0BAC5CU,MAAMthD,EAAKuU,QAAQ,iBACnBqG,KAAK,WAAY,KACjBgoC,GAAG,oBAAqBhlB,GAAOl9B,KAAK0gF,yBAAyBxjD,KAC7DglB,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACvB,IACayY,QAVM,IAWd,CACD,MAAAi0B,GACI,OAAOr3E,KAAK6/E,IACPz3C,aAAarT,WACbzV,kBAAkBtf,KAAKipB,OAAOjO,KAAKxa,MAAO,eAClD,CACD,YAAA41E,CAAal5C,GACTl9B,KAAK6/E,IAAItJ,mBAAmBv2E,KAAKipB,QACjCjpB,KAAKw2E,yBACR,CACD,YAAAP,CAAa32C,GACT,IAAIkb,EAAaoF,eAKjB,OAHA5/C,KAAK60E,kBAAmB,EACxB70E,KAAK24E,mBACLr5C,EAAE4nB,mBACK,CACV,CACD,YAAAgvB,CAAa52C,GACT,IAAIkb,EAAaoF,eAKjB,OAHA5/C,KAAK60E,kBAAmB,EACxB70E,KAAKi4E,mBACL34C,EAAE4nB,mBACK,CACV,CACD,cAAA0xB,GACI,OAAO54E,KAAKw7C,QAAQqG,UAAU3mB,SAAS,SAC1C,CACD,WAAA2vC,GACQrwB,EAAaoF,eACT5/C,KAAK4gF,qBACL5gF,KAAK4gF,sBAITrgC,MAAMvgD,KAAKw7C,SAASn7C,KAAK,eAAgB,KAEhD,CACD,WAAAi2E,GACQ97B,EAAaoF,eACT5/C,KAAK6gF,qBACL7gF,KAAK6gF,sBAITtgC,MAAMvgD,KAAKw7C,SAASn7C,KAAK,eAAgB,GAEhD,CACD,uBAAAm2E,GACQx2E,KAAK6/E,IAAIpyE,QAAQ4oE,oBACZr2E,KAAK6/E,IAAIpyE,QAAQ0oE,oBAAsB37B,EAAaoF,iBAClD5/C,KAAK44E,iBACZ54E,KAAKs2E,cAGLt2E,KAAK6qE,aAEZ,CACD,gBAAA8N,GACI34E,KAAKs2E,aACR,CACD,gBAAA2B,GAC8C,GAAtCj4E,KAAK6/E,IAAIpyE,QAAQ4oE,mBAA+Br2E,KAAK44E,kBAA2D,GAAvC54E,KAAK6/E,IAAIpyE,QAAQ0oE,oBAC1Fn2E,KAAK6qE,aAEZ,CACD,kBAAAuK,GACI,MAAMv1D,EAAQ,GACRg5D,EAAQ74E,KAAK6/E,IAAIz3C,aAAarT,WAAWjC,mBAC/C,IAAIgmD,GAAc,EACdz2E,EAAO,KACX,MAAM02E,EAAc/4E,KAAKipB,OAAOqO,cAChC,IAAI9E,EACJ,IAAK,MAAMf,KAAQonD,EAAO,CACtB,IAAKpnD,EACD,SACJ,MAAMunD,EAAYvnD,EAAKhE,2BAA2B3nB,QAAQizE,IAAgB,EACtE/4E,KAAKipB,OAAOjO,KAAKyW,OAASA,EAAKhsB,IAAOuzE,IACtCF,GAAc,GAEdE,IACAxmD,EAAcxyB,KAAK6/E,IAAIz3C,aAAarT,WAC/BzC,uBAAuBb,EAAKhsB,IACjCpD,EAAO,CACHoD,GAAIgsB,EAAKhsB,GACT8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,GAElB,CACIy2E,IACD94E,KAAKipB,OAAOjO,KAAKyW,KAAO5R,EAAM,GAAGpa,IAGhBzF,KAAK6/E,IACT5G,gCACb52E,EAAO,CACHoD,GAAI,mBACJ8X,KAAM,OAEVsC,EAAMpb,KAAKpC,GACXmwB,EAAclzB,EAAKuU,QAAQ,oBAC3BxR,EAAO,CACHoD,GAAI,YACJ8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,IAEf,IAAI8mE,EAASnpE,KAAKw7C,QAAQ/1C,GACtB0jE,IACAA,GAAU,kBAEd,MAAM+P,EAAc,CAChBr5D,MAAOA,EACPpa,GAAI0jE,EACJsC,sBAAsB,EACtBvC,iBAAiB,GAErBlpE,KAAK00E,aAAe,IAAIzC,UAAUiH,EACrC,CACD,iBAAA7D,GACI,GAAiD,GAA7Cr1E,KAAK6/E,IAAIpyE,QAAQ8qE,yBACjB,OACJ,IAAIpP,EAASnpE,KAAKipB,OAAOxjB,GACrB0jE,IACAA,GAAU,gBAEd,MACM+P,EAAc,CAChBr5D,MAFU7f,KAAKs4E,sBAGf7yE,GAAI0jE,EACJsC,sBAAsB,EACtB7C,cAAc,EACdM,iBAAiB,GAErBlpE,KAAK20E,YAAc,IAAI1C,UAAUiH,EACpC,CACD,mBAAAZ,GACI,MAAMh6D,EAAUte,KAAK6/E,IAAIz3C,aAAarT,WACjCvW,yBAAyBxe,KAAKipB,OAAOqO,eAC1C,MAAO,CAAC,CAAE7xB,GAAI,gBAAiB8X,KAAM,YAChCiD,OAAOlC,EAAQxc,KAAI6I,IAAW,CAAElF,GAAIkF,EAAOA,OAAQ4S,KAAMje,EAAKuU,QAAQ,iBAAkBlJ,EAAOpK,OAASoK,EAAOpK,SACvH,EAGL,MAAMugF,6BAA6BnB,iBAC/B,eAAApK,GACI,MAAO,GAAGpoE,MAAMooE,qBAAqBv1E,KAAKktD,iBAAiBltD,KAAKktD,8BACnE,CACD,kCAAAotB,CAAmCj6E,EAAMgC,GACrC,MAAMk4E,EAASl6E,EAAKoF,GACd42B,EAAUr8B,KAAK6/E,IAAIz3C,aACzB,IAAIluB,EAAOmiB,EAAQtH,WAAW5V,iBAAiBo7D,GAI/C,OAHAv6E,KAAKw6E,eAAetgE,GACpBla,KAAKipB,OAAOvQ,QAAU2jB,EAAQ8G,wBAAwBnjC,KAAKipB,QAC3DjpB,KAAKy2E,qBACE,CACV,CACD,cAAA+D,CAAetgE,GACXla,KAAKipB,OAAOjO,KAAK0L,SAASxM,EAAKzU,IAAI,GACnCzF,KAAKipB,OAAOjO,KAAKya,WAAavb,EAAKzU,GACnCzF,KAAKipB,OAAOjO,KAAK/M,SAAWiM,EAAKjM,QACpC,CACD,MAAAopE,GACI,MAAM7hD,EAAMx1B,KAAKipB,OAAOjO,KAAKrW,KAAK,GAClC,GAAI6wB,EAAK,CAEL,OADcx1B,KAAK6/E,IAAIz3C,aAAarT,WACvBzV,kBAAkBkW,EAAIh1B,MAAO,eAC7C,CAEG,OAAO,CAEd,CACD,qBAAAi6E,GACkBz6E,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQ+O,WAC5CjjC,KAAKy2E,mBACR,CACD,gBAAAkE,CAAiBz3D,GACCljB,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQ2H,kBAAmB,CAAE3Y,OAAQA,IACzEljB,KAAKy2E,mBACR,CACD,uBAAAgK,CAAwBvjD,GACpBl9B,KAAK00E,aAAapB,SAAS,CACvBtZ,OAAQ98B,EAAGz5B,OACX4vE,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACV,aAAXxf,EAAKoF,GACLzF,KAAKy6E,wBAGLz6E,KAAK26E,iBAAiBt6E,EAAKoF,KAExB,GAEXguE,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,cACjD,GAGZ,EAGL,MAAMilC,iCAAiCD,qBACnC,eAAAvL,GACI,MAAO,GAAGpoE,MAAMooE,qBAAqBv1E,KAAKktD,iBAAiBltD,KAAKktD,2BACnE,CACD,sBAAA2oB,GACI,MAAM7U,EAAS7zD,MAAM0oE,yBAKrB,OAJI7U,IACAA,EAAOnf,UAAUn8B,IAAI,cACrBs7C,EAAOpgB,MAAQthD,EAAKuU,QAAQ,mBAEzBmtD,CACV,CACD,cAAAwZ,CAAetgE,GACXla,KAAKipB,OAAOjO,KAAKrW,KAAK,GAAG+hB,SAASxM,EAAKzU,IAAI,GAC3CzF,KAAKipB,OAAOjO,KAAKya,WAAavb,EAAKzU,EACtC,CACD,kBAAA01E,GACkBn7E,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQgB,iBAC5Cl1B,KAAKy2E,mBACR,CACD,uBAAAgK,CAAwBvjD,GACpBl9B,KAAKm7E,oBACR,EAGL,MAAM6F,iCAAiCrB,iBACnC,eAAApK,GACI,MAAO,GAAGv1E,KAAKktD,iBAAiBltD,KAAKktD,+BAAiC//C,MAAMooE,iBAC/E,CACD,sBAAAM,GACI,MAAM7U,EAAS7zD,MAAM0oE,yBAKrB,OAJI7U,IACAA,EAAOnf,UAAUn8B,IAAI,cACrBs7C,EAAOpgB,MAAQw2B,EAAOvjE,QAAQ,mBAE3BmtD,CACV,CACD,kBAAAma,GACkBn7E,KAAKipB,OAAO+L,WACpBgJ,iBAAiBh+B,KAAKipB,OAAQiL,EAAQgB,iBAC5Cl1B,KAAKy2E,mBACR,CACD,cAAA+E,GACI,MAAO,EACV,CACD,cAAAE,CAAel7E,GACd,CACD,MAAA62E,GACI,OAAO,CACV,CACD,uBAAAoJ,CAAwBvjD,GACpBl9B,KAAKm7E,oBACR,EAEL,MAAM8F,kCAAkCD,yBACpC,iBAAIjM,GACA,QAAO/0E,KAAK6/E,IAAI5G,+BAAgCj5E,KAAKipB,OAAO6N,OAC/D,CACD,iBAAIi+C,CAAcv0E,GACVR,KAAK6/E,IAAI5G,8BACTj5E,KAAKipB,OAAO6N,QAAUt2B,EAGtBR,KAAKipB,OAAO6N,SAAU,CAE7B,CACD,cAAA0kD,GACI,OAAOx7E,KAAKipB,OAAOjO,KAAK4S,GAC3B,CACD,cAAA8tD,CAAel7E,GACXR,KAAKipB,OAAOjO,KAAK4S,IAAMptB,CAC1B,CACD,eAAAu7E,GACI,OAAO/7E,KAAKipB,OAAOjO,KAAK4S,GAC3B,EAEL,MAAMszD,8BAA8BF,yBAChC,cAAAxF,GACI,OAAOx7E,KAAKipB,OAAOjO,KAAKxa,KAC3B,CACD,cAAAk7E,CAAel7E,GACXR,KAAKipB,OAAOjO,KAAK0L,SAASlmB,EAC7B,CACD,eAAAu7E,GACI,OAAO/7E,KAAKipB,OAAOjO,KAAKxa,KAC3B,EAGL,MAAM2gF,mBAAmBnmC,OACrB,aAAIkS,GACA,MAAO,SACV,CACD,WAAArtD,CAAYo7C,EAAMmmC,GACdj0E,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACX+8D,YAAY,EACZ0R,aAAc,KACdC,YAAY,EACZC,YAAY,EACZ1G,kBAAkB,EAClB0C,kBAAkB,EAClBiE,iBAAiB,EACjBn5C,wBAAwB,EACxBy2C,cAAc,EACdtD,mBAAmB,EACnBF,oBAAoB,EACpBxoB,eAAe,EACfurB,YAAa,CACTxN,mBAAoB,GACpBgG,oBAAoB,EACpB7D,qBAAqB,EACrByE,cAAc,EACdlJ,qBAAsB,MAE1B7oD,cAAe,EACfD,cAAc,EACdk8D,uBAAwB,KACxBC,qBAAsB,GAE1Bz8E,KAAK6uD,YAActO,MAAM,OACpBmB,SAAS,GAAGxB,eACZkD,QACLpjD,KAAK4uD,cAAgB,EACrB5uD,KAAKqhF,aAAe,CAChB,CAAE57E,GAAI,OAAQ8X,KAAMje,EAAKuU,QAAQ,iBACjC,CAAEpO,GAAI,YAAa8X,KAAMje,EAAKuU,QAAQ,iBACtC,CAAEpO,GAAI,aAAc8X,KAAMje,EAAKuU,QAAQ,kBACvC,CAAEpO,GAAI,MAAO8X,KAAM,QAEvBvd,KAAKshF,aAAe,CAChB,CAAE77E,GAAI,UAAW8X,KAAMje,EAAKuU,QAAQ,mBACpC,CAAEpO,GAAI,SAAU8X,KAAMje,EAAKuU,QAAQ,kBACnC,CAAEpO,GAAI,WAAY8X,KAAMje,EAAKuU,QAAQ,kBACrC,CAAEpO,GAAI,aAAc8X,KAAMje,EAAKuU,QAAQ,mBAE3C0sC,MAAMvgD,KAAKi7C,MACNyG,SAAS,GAAG1hD,KAAKktD,mBACjBxL,SAASlH,EAAayF,qBAC3BjgD,KAAKikB,MAAQuQ,EAAY3B,MACzB7yB,KAAKohF,YAAcA,CACtB,CACD,aAAAzrC,GACI,MAAO,YACV,CACD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GACZA,EAAQ6uE,oBACRt8E,KAAKq8B,QAAQ5uB,QAAQ+iC,gBAAkB/iC,EAAQ6uE,mBAE/C7uE,EAAQ8uE,qBACRv8E,KAAKq8B,QAAQ5uB,QAAQgjC,kBAAoBhjC,EAAQ8uE,oBAErDv8E,KAAK28E,sBACL38E,KAAK48E,sBACLx2B,EAAcsC,oBAAoB1oD,KAAKi7C,MACnCj7C,KAAKyN,QAAQkgD,eACbvH,EAAcqC,sBAAsB,CAChCjN,QAASx7C,KAAKi7C,KACdoN,OAAQ,CAAC,kBACTiB,YAAa,CAAClB,EAAWlrB,KACrBl9B,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MAAM,EAE5CiD,WAAY,CAACb,EAAWlrB,KACpBl9B,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MAAM,EAE5CuC,YAAa,CAACH,EAAWlrB,KACrBA,EAAG2oB,WAAaJ,EAAW0D,OAC3BnpD,KAAKkwD,iBAAiB,EAE1B5H,OAAQ,CAACF,EAAWlrB,KAChB,GAAIl9B,KAAK4uD,cAAgB,EAAG,CACxB,MAEMvoD,EAFQrG,KAAKg1B,WACGmJ,aACAr4B,QAAQo3B,EAAG78B,KAAK4oB,QACtCjpB,KAAK68E,eAAex2E,EAAOrG,KAAK4uD,aACnC,MAEG1xB,EAAG76B,KAAKm5C,QAAQuF,gBAAgB,QACnC,GAIhB,CACD,mBAAA67B,GACI,MAAMxnD,EAAQp1B,KAAKg1B,WACnBh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IAEjD,MAAMg7C,EAAQh7C,EAAM3pB,KACpB,IAAK2kE,GAAUA,EAAMntC,MAAQ1D,EAAgB4D,SACtCitC,EAAMntC,MAAQ1D,EAAgBkJ,aAC9B2nC,EAAMntC,MAAQ1D,EAAgB5H,IACjC,OAEJ,MAAM+wD,EAAgBh2E,SAASisE,cACzBgK,EAAgBv9E,KAAKi7C,KAAK/f,SAASoiD,IAAkBA,GAAiBh2E,SAASD,KACrF,OAAQ29D,EAAMhtC,QACV,KAAK5D,EAAkB6D,OAAQ,CAC3B,MAAMvV,EAAUsiD,EAAM9sC,QAChBslD,aAAgBv0D,IAClB,MAAMw0D,EAAQz9E,KAAKk9E,aAAaxc,cAAc,gBAAgBz3C,EAAOxjB,QACrE,GAAIg4E,EAAO,CACP,MAAME,EAAQ39E,KAAK0+E,aAAaz1D,EAAQw0D,GACxC,GAAIF,EAAe,CACf,MAAMK,EAAYD,EAAMjd,cAAc,KAClCkd,GACAA,EAAUj9B,OAEjB,CACJ,GAED18C,MAAMC,QAAQwe,GACdA,EAAQnL,SAASqO,GAAQ43D,aAAa53D,KAGtC43D,aAAa96D,GAEjB,KACH,CACD,KAAK0R,EAAkBkP,IAAK,CACxB,MAAM5gB,EAAUsiD,EAAM9sC,QAChBuK,UAAaxZ,IACf,MAAM5iB,EAAQ+uB,EAAM+I,aAAar4B,QAAQmjB,GACzCjpB,KAAK89E,iBAAiB70D,EAAQ5iB,EAAM,EAEpCpC,MAAMC,QAAQwe,GACdA,EAAQnL,SAASqO,GAAQ6c,UAAU7c,KAGnC6c,UAAU/f,GAEd,KACH,CACD,KAAK0R,EAAkBpmB,OAAQ,CAC3B,MAAM0U,EAAUsiD,EAAM9sC,QAChB6lD,aAAgB90D,IAClB,MAAMw0D,EAAQz9E,KAAKk9E,aAAaxc,cAAc,gBAAgBz3C,EAAOxjB,QACrE,GAAIg4E,EAAO,CACP,MAAM5xD,EAAO4xD,EAAMO,YACb1iB,EAAOmiB,EAAMQ,gBAEnB,GADAj+E,KAAKk9E,aAAaryC,YAAY4yC,GAC1BF,EAAe,CACf,MACMK,GADY/xD,GAAQyvC,GAAQt7D,KAAKuhF,cACX7gB,cAAc,KACtCkd,GACAA,EAAUj9B,OAEjB,CACJ,GAED18C,MAAMC,QAAQwe,GACdA,EAAQnL,SAASqO,GAAQm4D,aAAan4D,KAGtCm4D,aAAar7D,GAEjB,KACH,CACD,QACI1iB,KAAKu2C,UAEZ,GAER,CACD,QAAAvhB,GACI,OAAOh1B,KAAKohF,YACNphF,KAAKohF,YACLphF,KAAKooC,aAAapT,UAC3B,CACD,WAAAsmB,GACI8K,EAAcsC,oBAAoB1oD,KAAKi7C,MACvCj7C,KAAK28E,sBACL38E,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,mBAAA+5B,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKg1B,WACbyQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,UAAAtpC,CAAWtmC,GACPzN,KAAKyN,QAAUpO,EAAMwF,WAAW7E,KAAKyN,QAASA,GAC9CzN,KAAKooC,aAAa36B,QAAQy1B,uBAAyBz1B,EAAQy1B,sBAC9D,CACD,eAAA+sB,CAAgBlK,EAAOC,GACnB,MAAMw7B,EAAWxhF,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC9Du0B,EAAc,GACpB,IAAK,IAAI78E,EAAI,EAAGA,EAAI48E,EAAS5/E,OAAQgD,IACC,SAA9B48E,EAAS58E,GAAGgT,MAAM0yB,SAClBm3C,EAAYh9E,KAAK+8E,EAAS58E,IAGlC,GAA2B,IAAvB68E,EAAY7/E,OAEZ,YADA5B,KAAK4uD,aAAe,GAGxB,MAAM+I,EAAa5a,sBAAsB/8C,KAAK6uD,aAC9C,GAAI9I,GAAS4R,EAAWvsC,GAAK26B,GAAS4R,EAAWvsC,EAAIprB,KAAK6uD,YAAYtN,aAC/DyE,GAAS2R,EAAW3a,GAAKgJ,GAAS2R,EAAW3a,EAAIh9C,KAAK6uD,YAAYrN,aACrE,OAEJ,IAAIoW,EAAkB53D,KAAK4uD,aAC3B,IAAK,IAAIhqD,EAAI,EAAGA,EAAI68E,EAAY7/E,OAAQgD,IAAK,CACzC,MAAM88E,EAAUD,EAAY78E,GACtBy5E,EAASthC,sBAAsB2kC,GAC/BC,EAAWD,EAAQngC,YACnBqgC,EAAYF,EAAQlgC,aACpBqgC,EAAe,GAAMF,EACrBG,EAAgB,EACtB,GAAI/7B,GAASs4B,EAAOjzD,EAAIy2D,GAAgB97B,GAASs4B,EAAOjzD,EAAIu2D,EAAWE,GAChE77B,GAASq4B,EAAOrhC,EAAI8kC,GAAiB97B,GAASq4B,EAAOrhC,EAAI4kC,EAAYE,EAAe,CAEnFlqB,EADA7R,EAAQ4R,EAAWvsC,EACDxmB,EAAI,EAEJA,EACtB,KACH,CACJ,EACGgzD,GAAmB53D,KAAK4uD,cAAgB5uD,KAAK6uD,YAAYzO,iBACzDpgD,KAAK4uD,aAAegJ,EAChB53D,KAAK4uD,cAAgB,GACrB5uD,KAAKk9E,aAAaplB,aAAa93D,KAAK6uD,YAAa4yB,EAAY,IAE7DzhF,KAAK4uD,aAAe6yB,EAAY7/E,OAChC5B,KAAKk9E,aAAaplB,aAAa93D,KAAK6uD,YAAa4yB,EAAYzhF,KAAK4uD,eAGlE5uD,KAAKk9E,aAAa7yC,YAAYrqC,KAAK6uD,aAG9C,CACD,eAAAqB,GACIlwD,KAAK4uD,cAAgB,EACjB5uD,KAAK6uD,YAAYzO,eACjBpgD,KAAK6uD,YAAYzO,cAAcvV,YAAY7qC,KAAK6uD,YAEvD,CACD,kBAAA1T,GACC,CACD,gBAAAC,GACC,CACD,WAAAF,GACIl7C,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,KAAA7vC,GAMIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,kBAAAm/B,GACIxhC,MAAMvgD,KAAKuhF,cACN7/B,SAAS,GAAGxB,WAAsB,GAAGlgD,KAAKktD,mBAAoB,GAAGhN,kBACjEwB,SAASlH,EAAayF,qBACtBW,MAAMthD,EAAKuU,QAAQ,wBACnBonB,SAAS,KAAKqlB,GAAWA,EACzBpmC,KAAK,OAAQ,sBACbgoC,GAAG,SAAU5iB,IACdA,EAAE8kB,iBACFpkD,KAAKq6E,iBAAiB,CAClBrgB,OAAQ16B,EAAE77B,OACV4vE,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB,MAAM06D,EAASl6E,EAAKoF,GAEpB,OADAzF,KAAK88E,aAAavC,IACX,CAAK,GAElB,MAEF//B,EAAaoF,gBACbW,MAAMvgD,KAAKk9E,cACN18B,gBAAgBxgD,KAAKuhF,aAEjC,CACD,MAAAjxB,GACItwD,KAAKw+E,qBACDx+E,KAAKyN,QAAQksE,cACb35E,KAAKw/E,iBAETx/E,KAAKy/E,iBACLz/E,KAAKk9E,aACD38B,MAAM,OACDmB,SAAS,GAAG1hD,KAAKktD,qBACjBxL,SAASlH,EAAayF,qBACtBmD,QACLpjD,KAAKyN,QAAQ0uE,aACbn8E,KAAKuhF,aACDhhC,MAAM,OACD6C,QACL5I,EAAaoF,eACbW,MAAMvgD,KAAKk9E,cACN18B,gBAAgBxgD,KAAKuhF,cAG1BhhC,MAAMvgD,KAAKi7C,MACNuF,gBAAgBxgD,KAAKuhF,cAE9BvhF,KAAK+hF,sBAETxhC,MAAMvgD,KAAKi7C,MACNuF,gBAAgBxgD,KAAKk9E,cACrB18B,gBAAgBxgD,KAAKgiF,kCACZhiF,KAAKg1B,WACGmJ,aACd5mB,SAAQ,CAAC0R,EAAQ5iB,KACrB,MAAM40C,EAAOj7C,KAAK0+E,aAAaz1D,GAC/BjpB,KAAKk9E,aAAa7yC,YAAY4Q,EAAK,GAE1C,CACD,8BAAA+mC,GAuDI,OAtDAhiF,KAAKiiF,8BAAgC1hC,MAAM,KAAK6C,QAChDpjD,KAAKkiF,yBAA2B3hC,MAAM,OACjCmB,SAAS,GAAG1hD,KAAKktD,iCACjBxL,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAKiiF,+BACrB/gC,OACAkC,QACLpjD,KAAKmiF,0BAA4B5hC,MAAM,MAAOvgD,KAAKkiF,0BAC9CxgC,SAAS,GAAG1hD,KAAKktD,0BAA2B,GAAGltD,KAAKktD,oCACpD9J,QACL7C,MAAMvgD,KAAKmiF,2BACNjgC,GAAG,oBAAqBhlB,IACzBA,EAAGgqB,kBACHlnD,KAAKoiF,sBAAsB9B,0BAA0Bx0B,KAAK9rD,KAAKoiF,sBAAuBllD,EAAIl9B,KAAKmiF,2BAC/FniF,KAAKu2E,mBAAmB,MACxBv2E,KAAKqiF,2BACE,KAEXriF,KAAKsiF,uBAAyB/hC,MAAM,MAAOvgD,KAAKkiF,0BAC3CxgC,SAAS,GAAG1hD,KAAKktD,0BAA2B,GAAGltD,KAAKktD,gCACpDhL,GAAG,oBAAqBhlB,IACzBA,EAAGgqB,kBACHlnD,KAAKoiF,sBAAsB5B,uBAAuB10B,KAAK9rD,KAAKoiF,sBAAuBllD,GACnFl9B,KAAKu2E,mBAAmB,MACxBv2E,KAAKqiF,2BACE,KAENj/B,QACLpjD,KAAKuiF,yBAA2BhiC,MAAM,MAAOvgD,KAAKkiF,0BAC7CxgC,SAAS,GAAG1hD,KAAKktD,0BAA2B,GAAGltD,KAAKktD,kCACpDhL,GAAG,oBAAqBhlB,IACzBA,EAAGgqB,kBACHlnD,KAAKoiF,sBAAsB1B,yBAAyB50B,KAAK9rD,KAAKoiF,sBAAuBllD,GACrFl9B,KAAKu2E,mBAAmB,MACxBv2E,KAAKqiF,2BACE,KAENj/B,QACLpjD,KAAKwiF,yBAA2BjiC,MAAM,MAAOvgD,KAAKkiF,0BAC7CxgC,SAAS,GAAG1hD,KAAKktD,0BAA2B,GAAGltD,KAAKktD,kCACpDhL,GAAG,oBAAqBhlB,IACzBA,EAAGgqB,kBACHlnD,KAAKoiF,sBAAsB7B,yBAAyBz0B,KAAK9rD,KAAKoiF,sBAAuBllD,GACrFl9B,KAAKu2E,mBAAmB,MACxBv2E,KAAKqiF,2BACE,KAENj/B,QACL7C,MAAM,MAAOvgD,KAAKkiF,0BACbxgC,SAAS,GAAG1hD,KAAKktD,uCACjBhL,GAAG,oBAAoB,KACxBliD,KAAKu2E,mBAAmB,MACxBv2E,KAAKqiF,yBAAyB,IAE3BriF,KAAKkiF,wBACf,CACD,uBAAAO,CAAwBx5D,EAAQy5D,EAAgBC,GAC5C3iF,KAAK4iF,oBAAsB35D,EAC3BjpB,KAAKoiF,sBAAwBM,EAE7B,MAAMG,EAAOF,EAAcrlC,wBACrBb,EAAMkmC,EAAcG,UACpBlmC,EAAO+lC,EAAcI,WAC3BxiC,MAAMvgD,KAAKiiF,+BACN7gC,SAAS,QAASxE,EAAOimC,EAAKz7E,MAAQ,GAAGmN,WAAa,MACvDsuE,EAAKpmC,IAAM,IACX8D,MAAMvgD,KAAKkiF,0BACNpgC,YAAY,cACZV,SAAS,OAAQ3E,EAAMomC,EAAKzmC,QAAQ7nC,WAAa,MAGtDgsC,MAAMvgD,KAAKkiF,0BACNxgC,SAAS,cACTN,SAAS,OAAQ3E,EAAMomC,EAAKzmC,QAAQ7nC,WAAa,MAGtD0U,EAAO6N,UAAY7N,EAAOgO,cAC1BspB,MAAMvgD,KAAKmiF,2BAA2BnhC,OACtCT,MAAMvgD,KAAKsiF,wBAAwBthC,OAC/B0hC,EAAe/B,sBACfpgC,MAAMvgD,KAAKuiF,0BAA0BvhC,OAGrCT,MAAMvgD,KAAKuiF,0BAA0BrhC,SAIzCX,MAAMvgD,KAAKmiF,2BAA2BjhC,OACtCX,MAAMvgD,KAAKsiF,wBAAwBphC,QAGnCj4B,EAAOgO,aACPspB,MAAMvgD,KAAKkiF,0BAA0BhhC,OAGrCX,MAAMvgD,KAAKkiF,0BAA0BlhC,MAE5C,CACD,uBAAAqhC,GACI9hC,MAAMvgD,KAAKkiF,0BAA0BhhC,MACxC,CACD,YAAAw9B,CAAaz1D,EAAQy9C,GACjB,MAAMhf,EAAW1nD,KAAK09E,kBAAkBz0D,EAAQy9C,GAChD,GAAIhf,EAAU,CACV,MAAMs7B,EAAat7B,EAAS4I,SAO5B,OANA5I,EAASm5B,oBAAsB,KAC3B7gF,KAAKyiF,wBAAwBx5D,EAAQy+B,EAAUs7B,EAAW,EAE9Dt7B,EAASk5B,oBAAsB,KAC3B5gF,KAAKqiF,yBAAyB,EAE3BW,CACV,CACD,OAAO,IACV,CACD,iBAAAtF,CAAkBz0D,EAAQgyB,GACtB,OAAQhyB,EAAOjO,KAAK8B,KAChB,KAAKoX,EAAQQ,SACT,OAAO,IAAIwsD,sBAAsBlhF,KAAMipB,EAAQgyB,GACnD,KAAK/mB,EAAQ2H,kBACT,OAAO,IAAIklD,yBAAyB/gF,KAAMipB,EAAQgyB,GACtD,KAAK/mB,EAAQ+O,UACT,OAAO,IAAIg+C,0BAA0BjhF,KAAMipB,EAAQgyB,GACvD,QACI,OAAO,IAAI6lC,qBAAqB9gF,KAAMipB,EAAQgyB,GAEzD,CACD,YAAA6hC,CAAavjE,EAAOlT,GAChBrG,KAAKooC,aAAarT,WAClB,MAAMK,EAAQp1B,KAAKg1B,WACnB,GAAI/wB,MAAMC,QAAQqV,GAAQ,CACtB,IAAIqM,EAAM,KACNnD,EAAO,GACX,IAAK,IAAI7d,EAAI,EAAGA,EAAI2U,EAAM3X,OAAQgD,IAC9BghB,EAAMwP,EAAMqN,UAAU,CAClBE,YAAappB,EAAM3U,GACnByB,MAAOA,IACR,GACCuf,GACAnD,EAAKhe,KAAKmhB,GAGlB,OAAOnD,CACV,CAMG,OAJY2S,EAAMqN,UAAU,CACxBE,YAAappB,EACblT,MAAOA,GAIlB,CACD,kBAAAkwE,CAAmBttD,GACf,IAAI+6B,EACA26B,EACA11D,IACA+6B,EAAKhkD,KAAKk9E,aAAaxc,cAAc,eAAez3C,EAAOxjB,OACvDu+C,IACA26B,EAAW36B,EAAGnC,UAAU3mB,SAAS,YAIzC,MAAMzT,EAAOznB,KAAKk9E,aAAahpB,iBAAiB,IAAIl0D,KAAKktD,iBACzD,IAAK,IAAItoD,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAElC27C,MADY94B,EAAK7iB,IAEZk9C,YAAY,UACZzhD,KAAK,eAAgB,KAC7B,CACG2jD,IAAO26B,GACPp+B,MAAMyD,GACDtC,SAAS,UACTrhD,KAAK,eAAgB,GAEjC,CAED,gBAAAy9E,CAAiB70D,EAAQ5iB,GACrB,MAAMohB,EAAOznB,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC1D0xB,EAAc5+E,KAAK0+E,aAAaz1D,GAClCxB,EAAK7lB,OAAS,GACVyE,EAAQohB,EAAK7lB,OAAS,EACtB5B,KAAKk9E,aAAaplB,aAAa8mB,EAAan3D,EAAKphB,IAOrDrG,KAAKk9E,aAAa7yC,YAAYu0C,GAE9B5+E,KAAKyN,QAAQ+uE,wBACbx8E,KAAKyN,QAAQ+uE,uBAAuBoC,EAE3C,CACD,iBAAAG,CAAkBt8D,GACd,IAAI1c,EAAM0c,EAAK7gB,OACf,MAAM4C,EAAS,GACf,IAAK,IAAII,EAAI,EAAGA,EAAImB,EAAKnB,IACjB5E,KAAKg/E,YAAYv8D,EAAK7d,KACtBJ,EAAOC,KAAKge,EAAK7d,IAEzB,OAAOJ,CACV,CACD,WAAAw6E,CAAYp5D,GACR,IAAK5lB,KAAKyN,QAAQ4uE,gBAAiB,CAC/B,MACM35D,EADQ1iB,KAAKg1B,WACGmJ,aAChB8D,EAAUvzB,KAAKC,UAAUiX,EAAI5K,MACnC,IAAK,IAAIpW,EAAI,EAAGA,EAAI8d,EAAQ9gB,OAAQgD,IAAK,CAErC,GADiB8J,KAAKC,UAAU+T,EAAQ9d,GAAGoW,QAC1BinB,EACb,OAAO,IAEd,CACJ,CACD,OAAOrc,CACV,CACD,eAAAq5D,GACI,OAAOj/E,KAAKk9E,YACf,CACD,gBAAA7C,CAAiBnB,GACbl5E,KAAKu/E,cAAgBv/E,KAAKu/E,aAAajM,SAAS4F,EACnD,CACD,kBAAAsF,GACI,MAAMzlE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,iBAEd,MACM17D,EAAU,CAAEoS,MADG9G,EAAM8H,gBAAgB,CAAEiQ,QAAQ,EAAOC,QAAQ,EAAMC,QAAQ,EAAOzQ,cAAevgB,KAAKyN,QAAQ8S,cAAeD,aAActgB,KAAKyN,QAAQ6S,eACxHgyD,aAActyE,KAAKyN,QAAQ6xE,yBAA0B75E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,iBACtI7pE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAKu/E,aAAe,IAAItN,UAAUxkE,EACrC,CACD,cAAA+xE,GACI,MAAMzmE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,aAEd,MACM+P,EAAc,CAAEr5D,MADR7f,KAAKqhF,aAAa7gE,OAAOxgB,KAAKshF,cACN77E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,iBAChF7pE,EAAMqF,OAAOw0E,EAAal5E,KAAKyN,QAAQyrE,aACvCA,EAAYzN,sBAAuB,EACnCzrE,KAAKs3E,SAAW,IAAIrF,UAAUiH,EACjC,CACD,cAAAuG,GACI,MAAM1mE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,aAEd,MACM+P,EAAc,CAAEr5D,MADR7f,KAAKshF,aACmB77E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,iBAChF7pE,EAAMqF,OAAOw0E,EAAal5E,KAAKyN,QAAQyrE,aACvCl5E,KAAKu3E,SAAW,IAAItF,UAAUiH,GAC9BA,EAAYzN,sBAAuB,CACtC,CACD,UAAA9nC,CAAW1a,EAAQsN,GACf,MACM7T,EADQ1iB,KAAKg1B,WACGmJ,aAChB93B,EAAQqc,EAAQ5c,QAAQmjB,GAC9B,GAAI5iB,GAAS,EACT,OAAQkwB,GACJ,IAAK,UACD,GAAa,GAATlwB,EACA,OAEJrG,KAAK68E,eAAex2E,EAAO,GAC3B,MACJ,IAAK,SACD,GAAa,GAATA,EACA,OAEJrG,KAAK68E,eAAex2E,EAAOA,EAAQ,GACnC,MACJ,IAAK,WACD,GAAIA,GAASqc,EAAQ9gB,OAAS,EAC1B,OAEJ5B,KAAK68E,eAAex2E,EAAOA,EAAQ,GACnC,MACJ,IAAK,aACD,GAAIA,GAASqc,EAAQ9gB,OAAS,EAC1B,OAEJ5B,KAAK68E,eAAex2E,EAAOqc,EAAQ9gB,OAAS,GAI3D,CACD,cAAAi7E,CAAe52E,EAAQC,GACnB,MAAMkvB,EAAQp1B,KAAKg1B,WACnB,IAAKI,EACD,OACJ,MAAM3N,EAAOznB,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC1DwyB,EAAYj4D,EAAKxhB,GACnBC,GAAU,EACVlG,KAAKk9E,aAAaplB,aAAa4nB,EAAW1/E,KAAKk9E,aAAa,IAEvDh3E,EAASuhB,EAAK7lB,OACnB5B,KAAKk9E,aAAaplB,aAAa4nB,EAAWj4D,EAAKvhB,IAG/ClG,KAAKk9E,aAAa7yC,YAAYq1C,GAElCtqD,EAAMuO,WAAW19B,EAAQC,GACzBkvB,EAAMiO,wBAAwBjP,EAAkB7H,IACnD,CACD,2BAAA0sD,GAEI,OADcj5E,KAAKg1B,WACN4J,QAAU5+B,KAAKooC,aAAa36B,QAAQy1B,sBACpD,EAELi+C,WAAW8B,cAAgB,EAE3B,MAAMC,iBACF,WAAArjF,CAAYggF,EAAK52D,EAAQgyB,GACrBj7C,KAAK00E,aAAe,KACpB10E,KAAK60E,kBAAmB,EACxB70E,KAAK80E,oBAAqB,EAC1B90E,KAAK6/E,IAAMA,EACX7/E,KAAKipB,OAASA,EACdjpB,KAAKw7C,QAAUP,CAClB,CACD,aAAIiS,GACA,MAAO,SACV,CACD,MAAAoD,GACI,MAAMhQ,EAAUC,MAAM,OA+BtB,OA9BAD,EAAQjgD,KAAK,KAAML,KAAKipB,OAAOxjB,IAC3BzF,KAAKw7C,SAELx7C,KAAKw7C,QAAQyoB,WACRkR,aAAa70B,EAAQ8C,QAASpjD,KAAKw7C,SAE5Cx7C,KAAKw7C,QAAU8E,EAAQ8C,QACnBpjD,KAAK6/E,IAAIpyE,QAAQkgD,eACjBvH,EAAcU,sBAAsB,CAChCtL,QAASx7C,KAAKw7C,QACdqM,MAAO,mBACPL,gBAAiB,IAAMxnD,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,eACrEiM,YAAc7qB,IACVl9B,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,OAC7BpN,EAAG2oB,WAAaJ,EAAWK,KAAK,EAEpC0C,UAAYtrB,IACRl9B,KAAKw7C,QAAQuF,gBAAgB,QAAQ,EAEzC1gD,KAAM,CAAE4oB,OAAQjpB,KAAKipB,UAG7Bq3B,EACKoB,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAK21E,sBACtB31E,KAAKyY,cACL6nC,EACKE,gBAAgBxgD,KAAKggF,uBAEvBhgF,KAAKw7C,OACf,CACD,iBAAAi7B,GACIz2E,KAAKipB,OAAO2O,kBACf,CACD,OAAA2e,GACIv2C,KAAKswD,QACR,CACD,YAAA2F,GAEI,OADcj2D,KAAK6/E,IAAIz3C,aAAarT,WACvB5V,iBAAiBnf,KAAKipB,OAAOjO,KAAKxa,MAClD,CACD,UAAAiY,GACI,OAAOzY,KAAKipB,OAAO6N,UAAY92B,KAAKipB,OAAOgO,YAC9C,CACD,kBAAA0+C,GAWI,IAAIp4D,EAAOvd,KAAKipB,OAAOvQ,QAIvB,OAHK1Y,KAAKyY,eACN8E,GAZJ,SAAS4lE,SAASC,GACd,OAAQA,GACJ,KAAK/uD,EAAcmK,UACf,MAAO,KACX,KAAKnK,EAAc8iD,WACf,MAAO,KACX,QACI,MAAO,GAElB,CAGWgM,CAASnjF,KAAKipB,OAAOmN,UAE1BmqB,MAAM,OACRmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,4BACjDxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOvnB,GAAKA,EACrBktC,MAAM5gD,KAAKipB,OAAOvQ,SAClB6E,KAAKA,KACL6lC,OACR,CACD,mBAAA48B,GACI,MAAM/I,EAAqB,GAAG/2B,sBAC9B,IAAIg3B,EAA8BD,EAClC,OAAQj3E,KAAKipB,OAAOmN,SAChB,KAAK/B,EAAc3H,KACfwqD,EAA8B,GAAGD,SACjC,MACJ,KAAK5iD,EAAcmK,UACf04C,EAA8B,GAAGD,QACjC,MACJ,KAAK5iD,EAAc8iD,WACfD,EAA8B,GAAGD,SAGzC,MAAM32B,EAAUC,MAAM,OACjBmB,SAAS,GAAG1hD,KAAKktD,uBAAwB,GAAGltD,KAAKktD,mCACjDxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOqlB,GAAWA,EAC3BoB,SAAS,GAAG1hD,KAAKktD,wBAAyBgqB,GAC1Ct2B,MAAMthD,EAAKuU,QAAQ,oBACnBquC,GAAG,oBAAqBhlB,GAAOl9B,KAAKsgF,0BAA0BpjD,EAAIojB,EAAQ8C,WAC/E,OAAO9C,EAAQ8C,OAClB,CACD,yBAAAk9B,CAA0BpjD,EAAI88B,GAC1B98B,EAAGgqB,kBACHlnD,KAAK80E,oBAAqB,EAqC1B,OApCa90E,KAAK6/E,IAAIvI,SACjBhE,SAAS,CACVtZ,OAAQA,EACRqZ,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KAYzB,GAAe,QAAXxf,EAAKoF,IAA2B,aAAXpF,EAAKoF,IAAgC,cAAXpF,EAAKoF,GAAoB,CACxE,MAAM2vB,EAAQp1B,KAAK6/E,IAAIz3C,aAAapT,WAChCh1B,KAAKipB,OAAOiO,gBAA6B,QAAX72B,EAAKoF,IACnC2vB,EAAMwO,aAAa5jC,KAAKipB,QACxBmM,EAAMiO,wBAAwBjP,EAAkBpmB,OAAQhO,KAAKipB,QAAQ,KAGrEjpB,KAAKipB,OAAOmN,QAjBL,SADantB,EAkBqB5I,EAAKoF,IAhBvC4uB,EAAc3H,KAET,aAAPzjB,EACEorB,EAAcmK,UAET,cAAPv1B,EACEorB,EAAc8iD,gBADpB,EAYDn3E,KAAKipB,OAAO0N,WAAavB,EAAMsB,mBAAmB12B,KAAKipB,QACvDjpB,KAAKy2E,oBAEZ,MAEGz2E,KAAK6/E,IAAIl8C,WAAW3jC,KAAKipB,OAAQ5oB,EAAKoF,IAxBf,IAACwD,CAyB3B,EAELwqE,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,CAAK,KAGhC,CACV,CACD,eAAAS,GACI,MAAO,GAAGv1E,KAAKktD,iBAAiBltD,KAAKktD,8BACxC,CACD,MAAAmqB,GACI,OAAOr3E,KAAK6/E,IACPz3C,aAAarT,WACbzV,kBAAkBtf,KAAKipB,OAAOjO,KAAKxa,MAAO,eAClD,EAGL,MAAM6iF,mBAAmBroC,OACrB,aAAIkS,GACA,MAAO,SACV,CACD,WAAArtD,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACX0uE,YAAY,EACZxuB,eAAe,EACfurB,YAAa,CACTxN,mBAAoB,GACpBgG,oBAAoB,EACpB7D,qBAAqB,EACrByE,cAAc,EACdlJ,qBAAsB,OAG9BppE,KAAKqhF,aAAe,CAChB,CAAE57E,GAAI,OAAQ8X,KAAMje,EAAKuU,QAAQ,iBACjC,CAAEpO,GAAI,YAAa8X,KAAMje,EAAKuU,QAAQ,iBACtC,CAAEpO,GAAI,aAAc8X,KAAMje,EAAKuU,QAAQ,kBACvC,CAAEpO,GAAI,MAAO8X,KAAM,OACnB,CAAE9X,GAAI,UAAW8X,KAAMje,EAAKuU,QAAQ,mBACpC,CAAEpO,GAAI,SAAU8X,KAAMje,EAAKuU,QAAQ,kBACnC,CAAEpO,GAAI,WAAY8X,KAAMje,EAAKuU,QAAQ,kBACrC,CAAEpO,GAAI,aAAc8X,KAAMje,EAAKuU,QAAQ,mBAE3C7T,KAAK6uD,YAActO,MAAM,OACpBmB,SAAS,GAAGxB,eACZkD,QACLpjD,KAAK4uD,cAAgB,EACrBrO,MAAMvgD,KAAKi7C,MACNyG,SAAS,GAAG1hD,KAAKktD,mBACjBxL,SAASlH,EAAayF,qBAC3BjgD,KAAKikB,MAAQuQ,EAAY3B,KAC5B,CACD,aAAA8iB,GACI,MAAO,YACV,CACD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GACZA,EAAQ6uE,oBACRt8E,KAAKq8B,QAAQ5uB,QAAQ+iC,gBAAkB/iC,EAAQ6uE,mBAE/C7uE,EAAQ8uE,qBACRv8E,KAAKq8B,QAAQ5uB,QAAQgjC,kBAAoBhjC,EAAQ8uE,oBAErDv8E,KAAKs7C,cACLt7C,KAAK48E,sBACLx2B,EAAcsC,oBAAoB1oD,KAAKi7C,MACnCj7C,KAAKyN,QAAQkgD,eACbvH,EAAcqC,sBAAsB,CAChCjN,QAASx7C,KAAKi7C,KACdoN,OAAQ,CAAC,oBACTiB,YAAa,CAAClB,EAAWlrB,KACrBl9B,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MAAM,EAE5CiD,WAAY,CAACb,EAAWlrB,KACpBl9B,KAAKiwD,gBAAgB/yB,EAAG6oB,MAAO7oB,EAAG8oB,MAAM,EAE5CuC,YAAa,CAACH,EAAWlrB,KACrBA,EAAG2oB,WAAaJ,EAAW0D,OAC3BnpD,KAAKkwD,iBAAiB,EAE1B5H,OAAQ,CAACF,EAAWlrB,KAChB,GAAIl9B,KAAK4uD,cAAgB,EAAG,CACxB,MAAMx5B,EAAQp1B,KAAKg1B,WACnBI,EAAMwB,mBAAmBsG,EAAG78B,KAAK4oB,OAAQjpB,KAAK4uD,cAC9Cx5B,EAAMiO,wBAAwBjP,EAAkB7H,IACnD,MAEG2Q,EAAG76B,KAAKm5C,QAAQuF,gBAAgB,QACnC,GAIhB,CACD,UAAAhN,CAAWtmC,GACPpO,EAAMwF,WAAW7E,KAAKyN,QAASA,EAClC,CACD,mBAAAmvE,GACI,MAAMxnD,EAAQp1B,KAAKg1B,WACnBh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IAEjD,MAAMg7C,EAAQh7C,EAAM3pB,MACf2kE,GAAUA,EAAMntC,MAAQ1D,EAAgB2D,gBACtCktC,EAAMntC,MAAQ1D,EAAgB4D,SAAWitC,EAAMntC,MAAQ1D,EAAgB5H,KAG9EvsB,KAAKu2C,SAAS,GAErB,CACD,mBAAAomC,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKg1B,WACbyQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,QAAAroD,GACI,OAAOh1B,KAAKooC,aAAapT,UAC5B,CACD,QAAAD,GACI,OAAO/0B,KAAKooC,aAAarT,UAC5B,CACD,WAAAumB,GACIt7C,KAAK28E,sBACL38E,KAAKygB,OACR,CACD,WAAAy6B,GACIl7C,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,kBAAAyxB,GACIxhC,MAAMvgD,KAAKuhF,cACN7/B,SAAS,GAAGxB,WAAsB,GAAGlgD,KAAKktD,mBAAoB,GAAGhN,kBACjEwB,SAASlH,EAAayF,qBACtBW,MAAMthD,EAAKuU,QAAQ,wBACnBonB,SAAS,KAAKqlB,GAAWA,EACzBpmC,KAAK,OAAQ,sBACbgoC,GAAG,SAAU5iB,IACdA,EAAE8kB,iBACFpkD,KAAKq6E,iBAAiB,CAClBrgB,OAAQ16B,EAAE77B,OACV4vE,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB,MAAM06D,EAASl6E,EAAKoF,GAEpB,OADAzF,KAAK88E,aAAavC,IACX,CAAK,GAElB,MAEF//B,EAAaoF,gBACbW,MAAMvgD,KAAKk9E,cACN18B,gBAAgBxgD,KAAKuhF,aAEjC,CACD,gBAAAlH,CAAiBnB,GACbl5E,KAAKu/E,aAAajM,SAAS4F,EAC9B,CACD,kBAAAsF,GACI,MAAMzlE,EAAQ/Y,KAAK+0B,WACnB,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,iBAEd,MACM17D,EAAU,CAAEoS,MADG9G,EAAM8H,gBAAgB,CAAEiQ,QAAQ,EAAOC,QAAQ,EAAOC,QAAQ,IAE/EshD,aAActyE,KAAKyN,QAAQ6xE,yBAA0B75E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,iBACnGlpE,KAAKu/E,aAAe,IAAItN,UAAUxkE,EACrC,CACD,cAAA+xE,GACI,MAAMzmE,EAAQ/Y,KAAK+0B,WACnB,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,aAEd,MACM+P,EAAc,CAAEr5D,MADR7f,KAAKqhF,aACmB57E,GAAI0jE,EAC1C+P,sBAAmC,GACnCl5E,KAAKs3E,SAAW,IAAIrF,UAAUiH,EACjC,CACD,MAAA5oB,GACItwD,KAAKw+E,qBACLx+E,KAAKw/E,iBACLx/E,KAAKk9E,aACD38B,MAAM,OACDmB,SAAS,GAAG1hD,KAAKktD,qBACjBxL,SAASlH,EAAayF,qBACtBmD,QACLpjD,KAAKyN,QAAQ0uE,aACbn8E,KAAKuhF,aACDhhC,MAAM,OACD6C,QACL5I,EAAaoF,eACbW,MAAMvgD,KAAKk9E,cACN18B,gBAAgBxgD,KAAKuhF,cAG1BhhC,MAAMvgD,KAAKi7C,MACNuF,gBAAgBxgD,KAAKuhF,cAE9BvhF,KAAK+hF,sBAETxhC,MAAMvgD,KAAKi7C,MACNuF,gBAAgBxgD,KAAKk9E,cACZl9E,KAAKg1B,WACGqN,mBACd9qB,SAAQ,CAAC0R,EAAQ5iB,KACrB,MAAM40C,EAAOj7C,KAAK0+E,aAAaz1D,GAC/BjpB,KAAKk9E,aAAa7yC,YAAY4Q,EAAK,GAE1C,CACD,YAAA6hC,CAAa19D,GACTpf,KAAK+0B,WACL,MAAMK,EAAQp1B,KAAKg1B,WACbpP,EAAMwP,EAAMqN,UAAU,CACxBE,YAAavjB,EACbyX,YAAY,EACZT,QAAS/B,EAAcmK,YACxB,GAOH,OANApJ,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB2D,eACtBE,OAAQ5D,EAAkBkP,IAC1BpL,QAAStS,EACTjiB,OAAQ3D,OAEL4lB,CACV,CACD,YAAA84D,CAAaz1D,EAAQy9C,GACjB,MAAMhf,EAAW,IAAIw7B,iBAAiBljF,KAAMipB,EAAQy9C,GACpD,GAAIhf,EAAU,CAEV,OADmBA,EAAS4I,QAE/B,CACD,OAAO,IACV,CACD,KAAA7vC,GACIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,UAAAjf,CAAW1a,EAAQsN,GACf,MAAMnB,EAAQp1B,KAAKg1B,WACbtS,EAAU0S,EAAMiN,mBAChBh8B,EAAQ+uB,EAAMsB,mBAAmBzN,GACvC,GAAI5iB,GAAS,EACT,OAAQkwB,GACJ,IAAK,UACDnB,EAAMwB,mBAAmB3N,EAAQ,GACjCmM,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB2D,eACtBE,OAAQ5D,EAAkB6D,OAC1Bt0B,OAAQ3D,OAEZ,MACJ,IAAK,SACDo1B,EAAMwB,mBAAmB3N,EAAQ5iB,EAAQ,EAAIA,EAAQ,EAAI,GACzD+uB,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB2D,eACtBE,OAAQ5D,EAAkB6D,OAC1Bt0B,OAAQ3D,OAEZ,MACJ,IAAK,WACDo1B,EAAMwB,mBAAmB3N,EAAQ5iB,EAAQqc,EAAQ9gB,OAAS,EAAIyE,EAAQ,EAAIqc,EAAQ9gB,OAAS,GAC3FwzB,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB2D,eACtBE,OAAQ5D,EAAkB6D,OAC1Bt0B,OAAQ3D,OAEZ,MACJ,IAAK,aACDo1B,EAAMwB,mBAAmB3N,EAAQvG,EAAQ9gB,OAAS,GAClDwzB,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB2D,eACtBE,OAAQ5D,EAAkB6D,OAC1Bt0B,OAAQ3D,OAK3B,CACD,eAAAiwD,CAAgBlK,EAAOC,GACnB,MAAMw7B,EAAWxhF,KAAKk9E,aAAahpB,iBAAiB,WAAWl0D,KAAKktD,kBAC9Du0B,EAAc,GACpB,IAAK,IAAI78E,EAAI,EAAGA,EAAI48E,EAAS5/E,OAAQgD,IACC,SAA9B48E,EAAS58E,GAAGgT,MAAM0yB,SAClBm3C,EAAYh9E,KAAK+8E,EAAS58E,IAGlC,GAA2B,IAAvB68E,EAAY7/E,OAEZ,YADA5B,KAAK4uD,aAAe,GAGxB,MAAM+I,EAAa5a,sBAAsB/8C,KAAK6uD,aAC9C,GAAI9I,GAAS4R,EAAWvsC,GAAK26B,GAAS4R,EAAWvsC,EAAIprB,KAAK6uD,YAAYtN,aAC/DyE,GAAS2R,EAAW3a,GAAKgJ,GAAS2R,EAAW3a,EAAIh9C,KAAK6uD,YAAYrN,aACrE,OAEJ,IAAIoW,EAAkB53D,KAAK4uD,aAC3B,IAAK,IAAIhqD,EAAI,EAAGA,EAAI68E,EAAY7/E,OAAQgD,IAAK,CACzC,MAAM88E,EAAUD,EAAY78E,GACtBy5E,EAASthC,sBAAsB2kC,GAC/BC,EAAWD,EAAQngC,YACnBqgC,EAAYF,EAAQlgC,aACpBqgC,EAAe,GAAMF,EACrBG,EAAgB,EACtB,GAAI/7B,GAASs4B,EAAOjzD,EAAIy2D,GAAgB97B,GAASs4B,EAAOjzD,EAAIu2D,EAAWE,GAChE77B,GAASq4B,EAAOrhC,EAAI8kC,GAAiB97B,GAASq4B,EAAOrhC,EAAI4kC,EAAYE,EAAe,CAEnFlqB,EADA7R,EAAQ4R,EAAWvsC,EACDxmB,EAAI,EAEJA,EACtB,KACH,CACJ,EACGgzD,GAAmB53D,KAAK4uD,cAAgB5uD,KAAK6uD,YAAYzO,iBACzDpgD,KAAK4uD,aAAegJ,EAChB53D,KAAK4uD,cAAgB,GACrB5uD,KAAKk9E,aAAaplB,aAAa93D,KAAK6uD,YAAa4yB,EAAY,IAE7DzhF,KAAK4uD,aAAe6yB,EAAY7/E,OAChC5B,KAAKk9E,aAAaplB,aAAa93D,KAAK6uD,YAAa4yB,EAAYzhF,KAAK4uD,eAGlE5uD,KAAKk9E,aAAa7yC,YAAYrqC,KAAK6uD,aAG9C,CACD,eAAAqB,GACIlwD,KAAK4uD,cAAgB,EACjB5uD,KAAK6uD,YAAYzO,eACjBpgD,KAAK6uD,YAAYzO,cAAcvV,YAAY7qC,KAAK6uD,YAEvD,GAOL,SAAWoU,GACPA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAsB,MAAI,GAAK,QAC9CA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAAyB,SAAI,GAAK,WACjDA,EAAeA,EAAyB,SAAI,GAAK,WACjDA,EAAeA,EAAwB,QAAI,IAAM,UACjDA,EAAeA,EAAoB,IAAI,KAAO,MAC9CA,EAAeA,EAA2B,YAAK,GAAK,aACpDA,EAAeA,EAA0B,WAAK,IAAM,YACpDA,EAAeA,EAAmC,mBAAI,GAAK,oBAC9D,CAXD,CAWGA,IAAmBA,EAAiB,CAAE,IAEzC,MAAMqgB,aACF,aAAIp2B,GACA,MAAO,SACV,CACD,WAAArtD,CAAY8jE,EAAOpmD,EAAM09B,GACrBj7C,KAAK2jE,MAAQA,EACb3jE,KAAKud,KAAOA,EACZvd,KAAKw7C,QAAUP,GAAQsF,MAAM,OAAO6C,OACvC,CACD,OAAA7M,GACIv2C,KAAKswD,QACR,CACD,MAAAA,GASI,OARA/P,MAAMvgD,KAAKw7C,SACNmH,KAAK,IACLjB,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtBhlB,SAAS,QAAQqlB,GAAWA,EAC5B/iC,KAAKvd,KAAKud,MACVqjC,MAAM5gD,KAAKud,QACX6lC,QACEpjD,KAAKw7C,OACf,CACD,eAAA+5B,GACI,MAAO,GAAGv1E,KAAKktD,uBAClB,GAIL,SAAWgW,GACPA,EAAgBA,EAA8B,aAAI,GAAK,eACvDA,EAAgBA,EAA0B,SAAI,GAAK,WACnDA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAA+B,cAAI,GAAK,gBACxDA,EAAgBA,EAAwB,OAAI,GAAK,QACpD,CARD,CAQGA,IAAoBA,EAAkB,CAAE,IAC3C,MAAMqgB,kBACF,WAAA1jF,CAAY8jE,EAAOnkC,EAAWyb,GAC1Bj7C,KAAK2jE,MAAQA,EACb3jE,KAAKw/B,UAAYA,EACjBx/B,KAAKw7C,QAAUP,GAAQsF,MAAM,OAAO6C,OACvC,CACD,aAAI8J,GACA,MAAO,SACV,CACD,OAAA3W,GACIv2C,KAAKswD,QACR,CACD,KAAA7vC,GACQzgB,KAAKw7C,UACLx7C,KAAKw7C,QAAQE,UAAY,GACzB17C,KAAKw7C,QAAQuF,gBAAgB,WAC7B/gD,KAAKw7C,QAAQuF,gBAAgB,SAC7BR,MAAMvgD,KAAKw7C,SACNmH,KAAK,IAEjB,CACD,MAAA2N,CAAOkzB,GAOH,OANAxjF,KAAKygB,QAELzgB,KAAKyjF,WAAWD,GACZxjF,KAAK2jE,MAAMl2D,QAAQi2E,qBACnB1jF,KAAK2jE,MAAMl2D,QAAQi2E,oBAAoB1jF,KAAKw/B,UAAWx/B,KAAKw7C,SAEzDx7C,KAAKw7C,OACf,CACD,UAAA/iC,GACI,OAAOzY,KAAKw/B,UAAU1I,UAAY92B,KAAKw/B,UAAUvI,YACpD,EAEL,MAAM0sD,gCAAgCJ,kBAClC,eAAAhO,GACI,IAAI/wE,EAAS,GAAGxE,KAAKktD,iBAAiBltD,KAAKktD,0BAG3C,GAFA1oD,GAAUxE,KAAKw/B,UAAUvG,WAAa,IAAIj5B,KAAKktD,6BAA+B,GAC9E1oD,GAAUxE,KAAKw/B,UAAUzG,kBAAoB,IAAI/4B,KAAKktD,oCAAsC,IACvF1S,EAAaoF,eAAgB,CAC9B,MAAM1U,EAAQlrC,KAAKw/B,UAAU1G,WACzBoS,EAAQ,IACR1mC,GAAU,IAAIxE,KAAKktD,mBAAmBhiB,IAC7C,CAKD,OAJA1mC,GAAUxE,KAAKw/B,UAAU1I,QAAU,GAAK,IAAI92B,KAAKktD,qBAC7CltD,KAAKw/B,UAAU1I,UACftyB,GAAUxE,KAAKw/B,UAAUvI,aAAe,IAAIj3B,KAAKktD,qBAAuB,IAErE1oD,CACV,CACD,UAAAi/E,CAAWD,GACP,MAAMzqE,EAAQ/Y,KAAK2jE,MAAMv7B,aAAarT,WAChClI,EAAW9T,EAAMqZ,gBAAgBpyB,KAAKw/B,UAAU1F,iBAChDkhD,EAAYt7E,EAAQktB,oBAAoBC,GAC9C,IAAIxqB,EAAO,KACX,MAAMqD,EAAYs1E,EAAUp5E,OACtB0+C,EAAUC,MAAM,OAClBvgD,KAAKw7C,SAAWx7C,KAAKw7C,QAAQyoB,YAC7BjkE,KAAKw7C,QAAQyoB,WACRkR,aAAa70B,EAAQ8C,QAASpjD,KAAKw7C,SAE5Cx7C,KAAKw7C,QAAU8E,EAAQ8C,QACvB9C,EACKoB,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtB5/C,KAAK,KAAML,KAAKw/B,UAAU/5B,IAC1BpF,KAAK,UAAW,IAChBmgD,gBAAgBxgD,KAAKw1E,kBACrBh1B,gBAAgBxgD,KAAK4jF,qBAC1B,IAAIC,EAAYL,EAChB,MAAMM,EAAYj3D,GAAY9T,EAAMmX,aAC9BtpB,KAAKE,IAAIpB,EAAW1F,KAAKw/B,UAAU/G,YAAY72B,OAAS,GACxD8D,EACN,IAAK,IAAIC,EAAM,EAAGA,EAAMm+E,EAAWn+E,IAE/B,GADAtD,EAAO24E,EAAUr1E,GACC,aAAdtD,EAAK4U,KAAqB,CAC1B,MAAMywC,EAAW1nD,KAAK2jE,MAAMogB,oBAAoB/jF,KAAKw/B,UAAWn9B,EAAKkb,MACjEmqC,GACApH,EAAQE,gBAAgBkH,EAAS4I,SAExC,MACI,GAAkB,eAAdjuD,EAAK4U,KAAuB,CACjC,MAAM+sE,EAAWH,GAAcxhF,EAAKgE,MAAQ,EACtC49E,EAAejkF,KAAK2jE,MAAMugB,sBAAsBlkF,KAAKw/B,UAAU/G,YAAYp2B,EAAKgE,QACtF,GAAI49E,EAAc,CACd,MAAMjgC,EAAKigC,EAAa3zB,OAAO0zB,GAC/B1jC,EAAQE,gBAAgBwD,GACxBp5B,YAAW,KACPq5D,EAAaE,aAAa,GAC3B,IACN,CACDN,EAAYA,IAAcG,CAC7B,KACsB,SAAd3hF,EAAK4U,MACVqpC,EAAQE,gBAAgB,IAAI8iC,aAAatjF,KAAK2jE,MAAOthE,EAAKkb,MAAM+yC,WAGpEtwD,KAAK2jE,MAAMl2D,QAAQ22E,uBAAyB5pC,EAAaoF,iBACzDU,EAAQ4B,GAAG,SAAShlB,IAChBA,EAAGgqB,kBACHlnD,KAAK2jE,MAAM0gB,sBAAsBrkF,KAAKw/B,WACtCx/B,KAAKw2E,0BACAh8B,EAAaoF,gBACd5/C,KAAKw7C,QAAQ+I,cAAczI,mBAAmB,gBAE3C,KAGfwE,EACKE,gBAAgBxgD,KAAK+/E,sBACrBvlC,EAAaoF,gBACdU,EACK4B,GAAG,cAAcl4B,IAClBhqB,KAAK60E,kBAAmB,EACxB70E,KAAK24E,mBACL3uD,EAAMk9B,mBACC,KAENhF,GAAG,cAAcl4B,IAClBhqB,KAAK60E,kBAAmB,GACnB70E,KAAK80E,oBAAsBv0B,MAAMvgD,KAAKskF,cAAchjC,aACrDthD,KAAKi4E,mBAETjuD,EAAMk9B,mBACC,IAGlB,CACD,yBAAAq9B,CAA0B/jF,GACtBR,KAAKw/B,UAAUxG,iBAAiBx4B,GAChCR,KAAKw/B,UAAU5H,kBAClB,CACD,kBAAA4sD,CAAmBhkF,GACfR,KAAKw/B,UAAUtG,UAAU14B,GACzBR,KAAKw/B,UAAU5H,kBAClB,CACD,gBAAA6sD,GACI,OAAOzkF,KAAK2jE,MAAM8gB,kBACrB,CACD,iBAAAb,GACI,MAAMprE,EAASxY,KAAKw/B,UAAU1K,YAC9B,IAAKtc,EACD,OAAO,KACX,MAAMksE,EAAgG,GAAtErlF,EAAMuG,kBAAkB4S,EAAOmgB,gBAAiB34B,KAAKw/B,UAAU/5B,IAC/F,GAAIzF,KAAK2jE,MAAMl2D,QAAQk3E,mBAAqBD,EAAyB,CACjE,MAAME,EAAcllF,EAAQitB,cAAc3sB,KAAKw/B,UAAU1K,YAAYyD,UAC/DssD,EAAiBvlF,EAAKuU,QAAQ,OAAS+wE,GAC7C,OAAOrkC,MAAM,QACRhjC,KAAKsnE,GACLjkC,MAAMikC,GACNnjC,SAAS,GAAG1hD,KAAKktD,yBAAyBltD,KAAKktD,kCAC/C9J,OACR,CACD,OAAO,IACV,CACD,cAAAoyB,GACI,OAAIx1E,KAAK2jE,MAAMl2D,QAAQ82D,iBAAmBvkE,KAAKw/B,UAAUvI,aAC9CspB,MAAM,OACRK,MAAMthD,EAAKuU,QAAQ,oBACnBqG,KAAK,WAAY,KACjBwnC,SAAS,GAAG1hD,KAAKktD,yBAAyBltD,KAAKktD,gCAC/CxL,SAAS,IAAG1hD,KAAKw/B,UAAU1I,QAAU,UAAY,KACjDorB,GAAG,SAAS,KACbliD,KAAKw/B,UAAU1I,SAAW92B,KAAKw/B,UAAU1I,QACzC92B,KAAKw/B,UAAU5H,oBACR,KAENsqB,GAAG,YAAYg2B,IAAa,CAAC,GAAI,IAAI54B,SAAS44B,EAAI/zB,UACnD+zB,EAAIz0E,OAAOknC,OAC3B,IACiByY,QAGE,IAEd,CACD,iBAAA0hC,GACI,OAAO9kF,KAAKw7C,QAAQqG,UAAU3mB,SAAS,SAC1C,CACD,WAAA2vC,GACItqB,MAAMvgD,KAAKw7C,SAASn7C,KAAK,eAAgB,KAC5C,CACD,WAAAi2E,GACI/1B,MAAMvgD,KAAKw7C,SAASn7C,KAAK,eAAgB,GAC5C,CACD,uBAAAm2E,IACQx2E,KAAK2jE,MAAMl2D,QAAQs3E,+BACf/kF,KAAK2jE,MAAMl2D,QAAQ22E,uBAAyBpkF,KAAK8kF,sBACrD9kF,KAAKs2E,aAEZ,CACD,gBAAAqC,GACI34E,KAAKs2E,aACR,CACD,gBAAA2B,GACSj4E,KAAK2jE,MAAMl2D,QAAQs3E,+BACf/kF,KAAK8kF,qBAAwB9kF,KAAK2jE,MAAMl2D,QAAQ22E,uBACrDpkF,KAAK6qE,aAEZ,CACD,oBAAAma,CAAqBhtD,EAAQkgD,GACzB,OAAQlgD,GACJ,KAAKkrC,EAAgB+hB,aACjB,IAAKjlF,KAAKw/B,UAAU5G,UAChB,OACJ,MAAMssD,EAAUllF,KAAK2jE,MAAMwhB,kBACvBD,GACAA,EAAQ5R,SAAS,CACbtZ,OAAQke,EAAIz0E,OACZ+vE,qBAAsBnxE,IAClB,MAAM+yB,EAAQp1B,KAAK2jE,MAAM3uC,WACnBowD,EAAQ,CACV5sE,OAAQxY,KAAKw/B,UACbmD,YAAatgC,EAAKoD,IAEhB6yB,EAAOlD,EAAM4O,mBAAmBohD,GAItC,OAHI9sD,GACAlD,EAAM4P,2BAA2B5Q,EAAkBkP,IAAKhL,IAErD,CAAK,IAIxB,MACJ,KAAK4qC,EAAgBmiB,SACjB,IAAKrlF,KAAKw/B,UAAU5G,UAChB,OACJ,MAAMxD,EAAQp1B,KAAK2jE,MAAM3uC,WACnBowD,EAAQ,CACV5sE,OAAQxY,KAAKw/B,WAEXvb,EAAQjkB,KAAK2jE,MAAM3uC,WAAW6O,kBAAkBuhD,GAClDnhE,GACAmR,EAAM4P,2BAA2B5Q,EAAkBkP,IAAKrf,GAE5D,MACJ,KAAKi/C,EAAgBuV,OACjBz4E,KAAKw/B,UAAU1I,SAAW92B,KAAKw/B,UAAU1I,QACzC92B,KAAKw/B,UAAU5H,mBACf,MACJ,KAAKsrC,EAAgBl1D,OACjB,MAAMwK,EAASxY,KAAKw/B,UAAU1K,YAC9B,IAAKtc,EACD,OACJ,MAAM6f,EAAa7f,EAAOmgB,gBACpBhzB,EAAM0yB,EAAWvyB,QAAQ9F,KAAKw/B,WAChC75B,GAAO,IACP0yB,EAAWlyB,OAAOR,EAAK,GACvB3F,KAAKw/B,UAAUxK,WAAWgQ,2BAA2B5Q,EAAkBpmB,OAAQhO,KAAKw/B,YAExF,MACJ,KAAK0jC,EAAgBiV,KACjB,MAAMmN,EAAWtlF,KAAKykF,mBACtBzkF,KAAK80E,oBAAqB,EAC1BwQ,EAAShS,SAAS,CACdtZ,OAAQke,EAAIz0E,OACZ4vE,YAAarzE,KAAKulF,gCAClB/R,qBAAuBnxE,IACnB,IAAI21B,EACJ,OAAQ31B,EAAKoD,IACT,IAAK,SACDuyB,EAASkrC,EAAgBuV,OACzB,MACJ,IAAK,SACDzgD,EAASkrC,EAAgBl1D,OACzB,MACJ,IAAK,QACDgqB,EAASkrC,EAAgBsiB,cACzB,MACJ,IAAK,SACDxtD,EAASkrC,EAAgBuiB,OACzB,MACJ,IAAK,eACDztD,EAASkrC,EAAgB+hB,aACzB,MACJ,IAAK,WACDjtD,EAASkrC,EAAgBmiB,SAGjCrlF,KAAKglF,qBAAqBhtD,EAAQkgD,EAAI,EAE1CpK,mBAAqBzrE,IACjB,IAAImC,EAASxE,KAAKw/B,UAAU1I,SAAuB,WAAZz0B,EAAKoD,IAA+B,WAAZpD,EAAKoD,GACpE,GAAgB,WAAZpD,EAAKoD,GAAiB,CACtB,MAAM+S,EAASxY,KAAKw/B,UAAU1K,YAC9BtwB,EAASA,GAAUgU,GAAUA,EAAOse,OACvC,KACoB,WAAZz0B,EAAKoD,GACVjB,EAASA,IAAYxE,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAe0iB,WAAa1iB,EAAe0iB,QAElF,aAAZtjF,EAAKoD,IAAiC,iBAAZpD,EAAKoD,KACpCjB,EAASA,IAAYxE,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAe2iB,YAAc3iB,EAAe2iB,UAExG,OAAOphF,CAAM,EAEjBivE,mBAAoB,KAChBzzE,KAAK80E,oBAAqB,EACrB90E,KAAK60E,kBACN70E,KAAKi4E,kBAAkB,IAGnC,MACJ,KAAK/U,EAAgBsiB,cACjBxlF,KAAKw/B,UAAUxG,kBAAkBh5B,KAAKw/B,UAAUzG,mBAChD/4B,KAAKw/B,UAAU5H,mBACf,MACJ,KAAKsrC,EAAgBuiB,OACjBzlF,KAAKw/B,UAAUtG,WAAWl5B,KAAKw/B,UAAUvG,YACzCj5B,KAAKw/B,UAAU5H,mBAIvB,OADAsgD,EAAIhxB,mBACG,CACV,CACD,6BAAAq+B,GACI,IAAIvL,EAAc,GAUlB,OATIh6E,KAAKw/B,UAAU1I,SACfkjD,EAAYv1E,KAAK,UAEjBzE,KAAKw/B,UAAUzG,mBACfihD,EAAYv1E,KAAK,SAEjBzE,KAAKw/B,UAAUvG,YACf+gD,EAAYv1E,KAAK,UAEdu1E,CACV,CACD,kBAAA+F,GACI,MAAM8F,mBAAsB3N,IACxB33B,MAAM23B,EAAIz0E,QACLi+C,SAAS,GAAG1hD,KAAKktD,oCAAoC,EAExD44B,mBAAsB5N,IACxB33B,MAAM23B,EAAIz0E,QACLq+C,YAAY,GAAG9hD,KAAKktD,oCAAoC,EAE3D5M,EAAUC,MAAM,OACjBmB,SAAS,GAAG1hD,KAAKktD,oCACjBxL,SAASlH,EAAayF,qBAE3B,GADAjgD,KAAKskF,aAAehkC,EAAQ8C,QACxBpjD,KAAKw/B,UAAUvI,aACf,OAAOj3B,KAAKskF,aAEhB,MAAMyB,EAAgB/lF,KAAKg1E,mBACvB+Q,EAAcjgF,QAAQ,iBAAmB,GAAK9F,KAAKw/B,UAAU1I,UACxD92B,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAe2iB,WAAa3iB,EAAe2iB,UACnFtlC,EAAQrlB,SAAS,OAAOvnB,IACpBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,gCACd7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,IACjBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,8BAA8BltD,KAAKktD,2CACjDhzC,KAAK,WAAY,KACjB7Z,KAAK,SAAU,IACfugD,MAAMthD,EAAKuU,QAAQ,oBACnBquC,GAAG,SAASg2B,GAAOl4E,KAAKglF,qBAAqB9hB,EAAgB+hB,aAAc/M,KAC3Eh2B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACnC,IACyBuX,GAAG,aAAc2jC,oBACjB3jC,GAAG,aAAc4jC,mBAAmB,GAC3C,IAmFV,OAhFwBC,EAAcjgF,QAAQ,aAAe,GAAKigF,EAAcjgF,QAAQ,iBAAmB,IACpF9F,KAAKw/B,UAAU1I,UAC7B92B,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAe2iB,WAAa3iB,EAAe2iB,UACnFtlC,EAAQrlB,SAAS,OAAOvnB,IACpBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,gCACd7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,IACjBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,8BAA8BltD,KAAKktD,2CACjDhzC,KAAK,WAAY,KACjB7Z,KAAK,SAAU,IACfugD,MAAMthD,EAAKuU,QAAQ,oBACnBquC,GAAG,SAASg2B,GAAOl4E,KAAKglF,qBAAqB9hB,EAAgBmiB,SAAUnN,KACvEh2B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACnC,IACyBuX,GAAG,aAAc2jC,oBACjB3jC,GAAG,aAAc4jC,mBAAmB,GAC3C,IAGN9lF,KAAKg1E,mBAAmBlvE,QAAQ,WAAa,GAAK9F,KAAKw/B,UAAU1K,aAAe90B,KAAKw/B,UAAU1K,YAAYgC,SAC3GwpB,EAAQrlB,SAAS,OAAOvnB,IACpBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,gCACd7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,IACjBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,8BAA8BltD,KAAKktD,qCACjDhzC,KAAK,WAAY,KACjB7Z,KAAK,SAAU,IACfugD,MAAMthD,EAAKuU,QAAQ,oBACnB6tC,SAAS1hD,KAAKw/B,UAAU1I,QAAU,UAAY,IAC9CorB,GAAG,SAASg2B,GAAOl4E,KAAKglF,qBAAqB9hB,EAAgBuV,OAAQP,KACrEh2B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACnC,IACyBuX,GAAG,aAAc2jC,oBACjB3jC,GAAG,aAAc4jC,mBAAmB,GAC3C,IAGN9lF,KAAKg1E,mBAAmBlvE,QAAQ,WAAa,GAAK9F,KAAKw/B,UAAU1K,cAC5D90B,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAe0iB,UAAY1iB,EAAe0iB,SAClFrlC,EAAQrlB,SAAS,OAAOvnB,IACpBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,gCACd7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,IACjBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,8BAA8BltD,KAAKktD,qCACjDhzC,KAAK,WAAY,KACjB7Z,KAAK,SAAU,IACfugD,MAAMthD,EAAKuU,QAAQ,cACnBquC,GAAG,SAASg2B,GAAOl4E,KAAKglF,qBAAqB9hB,EAAgBl1D,OAAQkqE,KACrEh2B,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACnC,IACyBuX,GAAG,aAAc2jC,oBACjB3jC,GAAG,aAAc4jC,mBAAmB,GAC3C,IAGN9lF,KAAKg1E,mBAAmBlvE,QAAQ,SAAW,GAC3Cw6C,EAAQrlB,SAAS,OAAOvnB,IACpBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,gCACd7sD,KAAK,iBAAkB,IACvB46B,SAAS,OAAOvnB,IACjBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,8BAA8BltD,KAAKktD,mCACjDhzC,KAAK,WAAY,KACjB7Z,KAAK,SAAU,IACfugD,MAAMthD,EAAKuU,QAAQ,eACnBquC,GAAG,SAASg2B,GAAOl4E,KAAKglF,qBAAqB9hB,EAAgBiV,KAAMD,KACnE19B,EAAaoF,gBACdlsC,EACKwuC,GAAG,YAAYg2B,IAA4B,IAAfA,EAAI/zB,SACjC+zB,EAAIz0E,OAAOknC,OACvC,IAC6BuX,GAAG,aAAc2jC,oBACjB3jC,GAAG,aAAc4jC,mBACzB,GACH,IAGV9lF,KAAKw2E,0BACEx2E,KAAKskF,YACf,CACD,gBAAAtP,GACI,OAAOh1E,KAAK2jE,MAAMl2D,QAAQ29D,SAAWprE,KAAK2jE,MAAMl2D,QAAQ29D,QAAQ5rC,WAAav7B,MAAMC,QAAQlE,KAAK2jE,MAAMl2D,QAAQ29D,QAAQ5rC,WAAax/B,KAAK2jE,MAAMl2D,QAAQ29D,QAAQ5rC,UAAY,CAAC,SAAU,SACxL,EAGL,MAAMwmD,kCAAkC7lC,kBACpC,WAAAtgD,CAAY2Y,GACRrL,MAAM,IAAKqL,GACXxY,KAAKka,KAAK,OAAQ,sBAClBla,KAAKkiD,GAAG,SAAShlB,IACbA,EAAGknB,iBACHpkD,KAAKimF,UACE,IAEd,CACD,SAAAC,CAAUA,GAEN,OADAlmF,KAAKmmF,WAAaD,EACXlmF,IACV,CACD,cAAAomF,CAAeA,GAEX,OADApmF,KAAKqmF,gBAAkBD,EAChBpmF,IACV,CACD,MAAAimF,GACI,MAAMnd,EAAO9oE,KAAKmmF,WAAanmF,KAAKmmF,aAAe,KAC/Crd,GACAA,EAAKwK,SAAS,CACVtZ,OAAQh6D,KAAKw7C,QACbg4B,qBAAsBnxE,IACdrC,KAAKqmF,iBACLrmF,KAAKqmF,gBAAgBhkF,EAAKoD,KAEvB,IAItB,EAML,MAAM6gF,+BAA+B/C,kBACjC,WAAA1jF,CAAY8jE,EAAOnkC,EAAWyb,GAC1B9tC,MAAMw2D,EAAOnkC,EAAWyb,GACxBj7C,KAAKumF,QAAU/mD,EAAU1K,WAC5B,CACD,eAAAygD,GACI,IAAI/wE,EAAS,GAAGxE,KAAKktD,kBAIrB,OAHIltD,KAAKumF,SACL/hF,GAAU,IAAIxE,KAAKktD,wBAEhB1oD,CACV,CACD,UAAAi/E,CAAWD,GACPjjC,MAAMvgD,KAAKw7C,SACNkG,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAKwmF,kBACrBhmC,gBAAgBxgD,KAAKymF,iBAAiBjD,IACtCnjF,KAAK,KAAML,KAAKw/B,UAAU/5B,IAC1BpF,KAAK,QAAS,GACtB,CACD,cAAAmmF,GACI,OAAIxmF,KAAKumF,SAAWvmF,KAAK2jE,MAAMl2D,QAAQi5E,YAC5B,KAGA,IAAIC,0BAA0B3mF,KAAK2jE,MAAO3jE,KAAKw/B,WAAW8wB,QAExE,CACD,gBAAAm2B,CAAiBjD,GACb,MAAMljC,EAAUC,MAAM,OActB,OAbAD,EACKoB,SAAS,GAAG1hD,KAAKktD,wBACjBxL,SAAS,GAAGlH,EAAayF,uBACzB5/C,KAAK,aAAc,IACpBL,KAAKumF,QACLjmC,EAAQoB,SAAS,GAAG1hD,KAAKktD,6BAE7BltD,KAAKw/B,UAAU7G,gBAAgBphB,SAAQ,CAACioB,EAAWn5B,EAAOb,KACtD,MAAMkiD,EAAW1nD,KAAK2jE,MAAMijB,qBAAqBpnD,GAC7CkoB,GACApH,EAAQE,gBAAgBkH,EAAS4I,OAAOkzB,GAAcn9E,GAASb,EAAM5D,OAAS,GACjF,IAEE0+C,EAAQ8C,OAClB,EAEL,MAAMujC,kCAAkChD,wBACpC,WAAA9jF,CAAY8jE,EAAOnkC,EAAWyb,GAC1B9tC,MAAMw2D,EAAOnkC,EAAWyb,GACxBj7C,KAAKumF,QAAUvmF,KAAKw/B,UAAU1K,WACjC,CACD,gBAAAkgD,GACI,OAAOh1E,KAAK2jE,MAAMl2D,QAAQ29D,SAAWprE,KAAK2jE,MAAMl2D,QAAQ29D,QAAQnnD,OAAShgB,MAAMC,QAAQlE,KAAK2jE,MAAMl2D,QAAQ29D,QAAQnnD,OAASjkB,KAAK2jE,MAAMl2D,QAAQ29D,QAAQnnD,MAAQ,CAAC,eAAgB,WAAY,SAAU,SACxM,CACD,eAAAsxD,GACI,IAAI/wE,EACJ,GAAIxE,KAAKumF,OACL/hF,EAAS,GAAGxE,KAAKktD,iBAAiBltD,KAAKktD,uBAAuBltD,KAAKktD,+BAElE,CACD1oD,EAAS,GAAGxE,KAAKktD,iBAAiBltD,KAAKktD,sBACvC,MAAMhiB,EAAQlrC,KAAKw/B,UAAU1G,WACzBoS,EAAQ,IACR1mC,GAAU,IAAIxE,KAAKktD,mBAAmBhiB,KAC1C1mC,GAAUxE,KAAKw/B,UAAU1I,QAAU,GAAK,IAAI92B,KAAKktD,qBAC7CltD,KAAKw/B,UAAU1I,UACftyB,GAAUxE,KAAKw/B,UAAUvI,aAAe,IAAIj3B,KAAKktD,qBAAuB,GAE/E,CACD,OAAO1oD,CACV,CACD,UAAAi/E,CAAWD,GACP,MAAMljC,EAAUC,MAAMvgD,KAAKw7C,SACtBkG,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtB5/C,KAAK,YAAa,IAClBmgD,gBAAgBxgD,KAAKw1E,kBACrBh1B,gBAAgBxgD,KAAK4jF,qBACpB14C,EAAQlrC,KAAKw/B,UAAU1G,WACzBoS,EAAQ,GACRoV,EAAQoB,SAAS,GAAG1hD,KAAKktD,mBAAmBhiB,KAChDlrC,KAAK6mF,mBAAmBvmC,EAAStgD,KAAK8mF,iBAClC9mF,KAAK2jE,MAAMl2D,QAAQ22E,uBACnB9jC,EAAQ4B,GAAG,SAAShlB,IAChBl9B,KAAK2jE,MAAM0gB,sBAAsBrkF,KAAKw/B,WACtCx/B,KAAKw2E,0BACAh8B,EAAaoF,gBACdU,EAAQ8C,QAAQmB,cAAczI,mBAAmB,cACpD,IAGTwE,EACKE,gBAAgBxgD,KAAK+/E,sBACrBvlC,EAAaoF,gBACdU,EACK4B,GAAG,cAAcl4B,IAClBhqB,KAAK60E,kBAAmB,EACxB70E,KAAK24E,mBACL3uD,EAAMk9B,mBACC,KAENhF,GAAG,cAAcl4B,IAClBhqB,KAAK60E,kBAAmB,GACnB70E,KAAK80E,oBAAsBv0B,MAAMvgD,KAAKskF,cAAchjC,aACrDthD,KAAKi4E,mBAETjuD,EAAMk9B,mBACC,IAGlB,CACD,aAAA4/B,GACI,IAAItiF,EAeJ,OAdIxE,KAAKumF,SAAW/rC,EAAaoF,gBAC7Bp7C,EAASlF,EAAKuU,QAAQ,2BACjBrP,IAEDA,EAASlF,EAAKuU,QAAQ,yBAI1BrP,EAASlF,EAAKuU,QAAQ,uBACjBrP,IAEDA,EAASlF,EAAKuU,QAAQ,oBAGvBrP,CACV,CACD,kBAAAqiF,CAAmBvmC,EAASymC,GACxB,MAAMt7D,EAAMs7D,EAAWjhF,QAAQ,QAC/B,GAAI2lB,EAAM,EAEN60B,EAAQ0C,QAAQ1jD,EAAKuU,QAAQ,iCAC7BysC,EAAQoB,SAAS,GAAG1hD,KAAKktD,uBAExB,CACGzhC,EAAM,GACN60B,EAAQrlB,SAAS,QAAQvnB,IACrBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,uBACdlK,QAAQ+jC,EAAWrxE,UAAU,EAAG+V,GAAK,IAGlD,MAAMm5D,EAAcllF,EAAQitB,cAAc3sB,KAAKw/B,UAAUjH,UACzD,IAAIyuD,EAAU3nF,EAAMkG,aAAag1C,EAASQ,sBAAuB6pC,GAC5DoC,IACDA,EAAUzsC,EAASQ,sBAAsB,IAEzC/6C,KAAKyY,aAzJrB,SAASwuE,SAASzuE,GACd,OAAO,IAAIwtE,0BAA0BxtE,EACzC,CAwJgByuE,CAAS3mC,EAAQ8C,SACZ8iC,WAAU,IAAMlmF,KAAKknF,oBACrBd,gBAAe3gF,IAChBzF,KAAKw/B,UAAUjH,SAAW74B,EAAQ4sB,cAAc7mB,GAChDzF,KAAKw/B,UAAU5H,kBAAkB,IAEhCorB,QAAQ1jD,EAAKuU,QAAQmzE,EAAQpjF,MAC7Bg9C,MAAMthD,EAAKuU,QAAQmzE,EAAQpjF,MAC3B89C,SAAS,GAAG1hD,KAAKktD,uBAGtB5M,EAAQrlB,SAAS,QAAQvnB,IACrBA,EAAE6J,KAAKje,EAAKuU,QAAQmzE,EAAQpjF,MACvBg9C,MAAMthD,EAAKuU,QAAQmzE,EAAQpjF,MAC3B89C,SAAS,GAAG1hD,KAAKktD,sBAAsB,IAGpD5M,EAAQrlB,SAAS,QAAQvnB,IACrBA,EAAEguC,SAAS,GAAG1hD,KAAKktD,uBACdlK,QAAQ+jC,EAAWrxE,UAAU+V,EAAM,GAAG,GAElD,CACJ,CACD,gBAAAg5D,GACI,OAAOzkF,KAAK2jE,MAAMwjB,sBAAoD,MAA9BnnF,KAAKw/B,UAAU1K,YAC1D,CACD,eAAAoyD,GACI,OAAOlnF,KAAK2jE,MAAMujB,iBACrB,CACD,iBAAAtD,GACI,OAAO5jF,KAAKumF,OAAS,KAAOp5E,MAAMy2E,mBACrC,CACD,cAAApO,GACI,OAAOx1E,KAAKumF,OAAS,KAAOp5E,MAAMqoE,gBACrC,CACD,gBAAAyC,GACSj4E,KAAK2jE,MAAMl2D,QAAQ25E,2BACfpnF,KAAK8kF,qBAAwB9kF,KAAK2jE,MAAMl2D,QAAQ22E,uBACrDpkF,KAAK6qE,aAEZ,CACD,uBAAA2L,IACQx2E,KAAK2jE,MAAMl2D,QAAQ25E,2BACfpnF,KAAK2jE,MAAMl2D,QAAQ22E,uBAAyBpkF,KAAK8kF,sBACrD9kF,KAAKs2E,aAEZ,EAGL,MAAM+Q,oBACF,WAAAxnF,CAAYo7C,GACRj7C,KAAKw7C,QAAUP,GAAQsF,MAAM,OAAO6C,OACvC,CACD,OAAA7M,GACIv2C,KAAKswD,QACR,CACD,MAAAA,CAAOg3B,GAAa,GAahB,OAZAtnF,KAAKunF,aAAevnF,KAAKwnF,qBACzBjnC,MAAMvgD,KAAKw7C,SACNmH,KAAK,IACLjB,SAAS1hD,KAAKu1E,mBACd7zB,SAASlH,EAAayF,qBACtBO,gBAAgBxgD,KAAKunF,cACtBvnF,KAAKyY,eACLzY,KAAKynF,eACDH,GACA18D,YAAW,IAAM5qB,KAAK0nF,cAAc,KAGrC1nF,KAAKw7C,OACf,CACD,UAAA/iC,GACI,OAAO,CACV,CACD,kBAAA+uE,GACI,MAAMG,EAAgB3nF,KAAK4nF,eAC3B,OAAI5nF,KAAKyY,aACE8nC,MAAM,KACRrmC,KAAK,OAAQ,sBACb0mC,MAAM+mC,GACNpqE,KAAKoqE,GACLzlC,GAAG,SAAUhlB,IACdA,EAAGknB,iBACHpkD,KAAK0nF,cACE,KAENtkC,QAGE7C,MAAM,QACRK,MAAM+mC,GACNpqE,KAAKoqE,GACLvkC,OAEZ,CACD,eAAAmyB,GACI,MAAO,EACV,CACD,YAAAqS,GACI,OAAO5nF,KAAK6nF,cACf,CACD,YAAAA,GACI,MAAO,SACV,EAGL,MAAMC,2BAA2BT,oBAC7B,aAAIn6B,GACA,MAAO,SACV,CACD,WAAArtD,CAAY8jE,EAAOokB,EAAYC,EAAa/sC,GACxC9tC,MAAM8tC,GACNj7C,KAAK2jE,MAAQA,EACb3jE,KAAK+nF,WAAaA,EAClB/nF,KAAKgoF,YAAcA,CACtB,CACD,MAAA13B,CAAOg3B,GAAa,GAKhB,OAJAn6E,MAAMmjD,OAAOg3B,GACTtnF,KAAK2jE,MAAMl2D,QAAQw6E,sBACnBjoF,KAAK2jE,MAAMl2D,QAAQw6E,qBAAqBjoF,KAAK+nF,WAAY/nF,KAAKw7C,SAE3Dx7C,KAAKw7C,OACf,CACD,UAAApT,GACI,OAAOpoC,KAAK2jE,MAAMv7B,YACrB,CACD,UAAAnR,GACI,MAAMze,EAASxY,KAAK+nF,WAAWjzD,YAC/B,OAAQtc,EAAOse,SAAWte,EAAOye,YACpC,CACD,UAAAxe,GACI,OAAQzY,KAAKi3B,YAChB,CACD,eAAAs+C,GACI,MAAO,GAAGv1E,KAAKktD,yBAAyBltD,KAAKktD,wBAChD,CACD,YAAA06B,GAII,OAHc5nF,KAAK+nF,WAAWlpE,UAExB7e,KAAK6nF,eADL7nF,KAAK+nF,WAAWvnF,KAGzB,CACD,YAAAqnF,GACI,OAAO7nF,KAAK2jE,MAAMl2D,QAAQy6E,gBAAkB5oF,EAAKuU,QAAQ,sBAC5D,CACD,QAAA6S,CAASlmB,EAAOo1B,GACZ51B,KAAK+nF,WAAWrhE,SAASlmB,GACpBo1B,GACD51B,KAAK+nF,WAAWjzD,YAAY8C,iBAAiBrD,EAAc4zD,MAElE,CACD,QAAAtjE,GACI,OAAO7kB,KAAK+nF,WAAWvnF,KAC1B,CACD,aAAA4nF,CAAc5nF,GACV,MAAO,CAAEqvC,SAAS,EAAMrvC,MAAOA,EAClC,CACD,mBAAA6nF,CAAoBn7E,EAASzJ,GACzBzD,KAAKooC,aAAa4O,WAAW,CACzBhf,OAAQ,gBACRza,KAAQrQ,GAEf,CACD,YAAAo7E,GACI,IAAIjxE,EAAIrX,KAAK6kB,WACb,OAAQ,MAAA,IAA6CxN,CACxD,CACD,WAAA8sE,GACC,EAGL,MAAMoE,gCAAgCT,mBAClC,YAAAL,GACIznF,KAAKwoF,aAAejoC,MAAM,SACrBW,OACAQ,SAAS,GAAG1hD,KAAKktD,wBACjBj2C,KAAK,QACLirC,GAAG,QAAShlB,IACb,GAAIl9B,KAAKwoF,aAAalnC,cAAgBthD,KAAKyoF,gBAAiB,CACxD,MAAMC,EAAmB1oF,KAAKooF,cAAcpoF,KAAK2oF,aAAanoF,OAY9D,OAXIkoF,EAAiB74C,SACjB7vC,KAAK0mB,SAAS1mB,KAAK2oF,aAAanoF,OAChCR,KAAK4oF,gBAGL5oF,KAAKyoF,iBAAkB,EACvBzoF,KAAK2oF,aAAahoC,QAClB/1B,YAAW,KAAQ5qB,KAAKyoF,iBAAkB,CAAK,GAAK,KACpDzoF,KAAKqoF,oBAAoBK,EAAiBx7E,QAASgwB,EAAGz5B,SAE1Dy5B,EAAGgqB,mBACI,CACV,KAEAhF,GAAG,WAAYhlB,IAChB,GAAmB,KAAfA,EAAGinB,QAGH,OAFAnkD,KAAK4oF,cACL1rD,EAAGgqB,mBACI,EAEN,GAAmB,KAAfhqB,EAAGinB,SACJnkD,KAAKwoF,aAAalnC,YAAa,CAC/BthD,KAAKyoF,iBAAkB,EACvB,MAAMC,EAAmB1oF,KAAKooF,cAAcpoF,KAAK2oF,aAAanoF,OAY9D,OAXIkoF,EAAiB74C,SACjB7vC,KAAK0mB,SAAS1mB,KAAK2oF,aAAanoF,OAChCR,KAAK4oF,cACL5oF,KAAKyoF,iBAAkB,IAGvBzoF,KAAK2oF,aAAahoC,QAClB3gD,KAAKqoF,oBAAoBK,EAAiBx7E,QAASgwB,EAAGz5B,QACtDmnB,YAAW,KAAQ5qB,KAAKyoF,iBAAkB,CAAK,GAAK,MAExDvrD,EAAGgqB,mBACI,CACV,CACJ,IAELlnD,KAAK2oF,aAAe3oF,KAAKwoF,aAAaplC,QACtC7C,MAAMvgD,KAAKw7C,SACNgF,gBAAgBxgD,KAAK2oF,aAC7B,CACD,UAAAjB,GACI,MAAMmB,EAAY,IAClB,IAAKruC,EAAaoF,eAAgB,CAC9B,IAAIhD,EAAO58C,KAAKw7C,QAAQunC,WACpB37E,EAAQpH,KAAKw7C,QAAQ+F,YAAcsnC,EAAY7oF,KAAKw7C,QAAQ+F,YAAcsnC,EAC1EtwB,EAAWv4D,KAAKw7C,QAAQ4E,cAAcx4C,YAAcg1C,EAAO,GAC/D58C,KAAKwoF,aACAvnC,YAAY,QACZA,YAAY,SACbsX,EAAWswB,EACX7oF,KAAKwoF,aACApnC,SAAS,QAAS,QAClBA,SAAS,QAAS,SAElBmX,EAAWnxD,EAChBpH,KAAKwoF,aACApnC,SAAS,OAAQ,GAAGxE,OACpBwE,SAAS,QAAS,GAAGmX,OAG1Bv4D,KAAKwoF,aACApnC,SAAS,OAAQ,GAAGxE,OACpBwE,SAAS,QAAS,GAAGh6C,MAEjC,CACDm5C,MAAMvgD,KAAKunF,cAAcrmC,OACzBlhD,KAAKwoF,aACAhoF,MAAMR,KAAK6kB,YACXm8B,OACLhhD,KAAK2oF,aAAahoC,OACrB,CACD,WAAAioC,GACI5oF,KAAKwoF,aAAatnC,OAClBX,MAAMvgD,KAAKunF,cAAcvmC,OACzBhhD,KAAKunF,aAAa5mC,OACrB,CACD,aAAAynC,CAAcU,GACV9oF,KAAKwoF,aAAa1mC,YAAY,gBAC9B,MAAMt9C,EAAS,CACXqrC,SAAS,EACTrvC,MAAOsoF,GAQX,OANI9oF,KAAK+nF,WAAW9sE,MAAQtb,EAASV,KACjCe,KAAK+oF,kBAAkBD,EAAYtkF,GAGnCxE,KAAKgpF,oBAAoBF,EAAYtkF,GAElCA,CACV,CACD,iBAAAukF,CAAkBD,EAAYtkF,GAC1B,IAAI4/B,EAAc0kD,EAAW7nF,MAAM,WACnC,IAAK,IAAI8G,KAAOq8B,EAEZ,GADApkC,KAAKgpF,oBAAoBjhF,EAAKvD,IACzBA,EAAOqrC,QACR,MAGX,CACD,mBAAAm5C,CAAoBF,EAAYtkF,GAC5B,GAAKskF,GAEDzpF,EAAM2I,cAAchI,KAAK+nF,WAAW95E,UAAW,CAC/C,IAAIyxB,GAAaopD,EACb1gF,MAAMs3B,KACNl7B,EAAOqrC,SAAU,EACjBrrC,EAAO0I,QAAU,IAAM47E,EAAa,KAAOxpF,EAAKuU,QAAQ,iBAExDxU,EAAM6I,UAAUlI,KAAK+nF,WAAW95E,WAAayxB,GAAa/1B,SAASm/E,EAAY,MAC/EtkF,EAAOqrC,SAAU,EACjBrrC,EAAO0I,QAAU,IAAM47E,EAAa,KAAOxpF,EAAKuU,QAAQ,uBAE/D,CACJ,CACD,mBAAAw0E,CAAoBn7E,EAASzJ,GACzB0J,MAAMk7E,oBAAoBn7E,EAASzJ,GACnCzD,KAAKwoF,aAAa9mC,SAAS,eAC9B,CACD,UAAAjpC,GACI,OAAOtL,MAAMsL,eACJzY,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAeklB,SAAWllB,EAAeklB,KACxF,EAGL,MAAMc,+BAA+BnB,mBACjC,WAAAjoF,GACIsN,SAAS0tE,WACT76E,KAAKkpF,cAAgB,GACrBlpF,KAAKmpF,eAAgB,CACxB,CACD,UAAA1wE,GACI,OAAQzY,KAAKi3B,eACJj3B,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAeklB,SAAWllB,EAAeklB,KACxF,CACD,QAAAzhE,CAASlmB,EAAOo1B,GAAS,GACrB,MAAMkqB,EAAW9/C,KAAKopF,eAAe5oF,GACrC,GAAIA,IAAUR,KAAK+nF,WAAWvnF,MAAO,CACjC,MAAM+c,EAAOvd,KAAKsd,aAAa9c,GAC/BR,KAAK+nF,WAAWlyD,WAAWiqB,EAAUviC,GAChCqY,GACD51B,KAAK+nF,WAAWjzD,YAAY8C,iBAAiBrD,EAAc4zD,MAElE,CACD,OAAO,CACV,CACD,YAAA7qE,CAAa9c,GACT,IAAIgE,EAAS,GACb,GAAIP,MAAMC,QAAQ1D,GACd,IAAK,IAAI6B,KAAQrC,KAAKkpF,cACd1oF,EAAMsF,QAAQzD,EAAKoD,KAAO,IAC1BjB,GAAUnC,EAAKkb,KAAO,UAK9B,IAAK,IAAIlb,KAAQrC,KAAKkpF,cACd7mF,EAAKoD,KAAOjF,IACZgE,GAAUnC,EAAKkb,KAAO,KAOlC,OAHI/Y,IACAA,EAASA,EAAOkR,UAAU,EAAGlR,EAAO5C,OAAS,IAE1C4C,CACV,CACD,YAAAqjF,GACI,OAAO7nF,KAAK2jE,MAAMl2D,QAAQ47E,eAAiB/pF,EAAKuU,QAAQ,oBAC3D,CACD,WAAAy1E,GACI,OAAOtpF,KAAKgoF,YAAYznF,IAC3B,CACD,YAAAknF,GACIznF,KAAKupF,mBAAkB,KACnBvpF,KAAKwpF,iBAAiB,GAE7B,CACD,YAAA5B,GACI,OAAK5nF,KAAK+nF,WAAWlpE,UAIV7e,KAAK6nF,eAHL7nF,KAAK+nF,WAAWl0E,SAK9B,CACD,UAAA41E,GAEC,CACD,UAAAC,GAEC,CACD,UAAAhC,GACQ1nF,KAAK8oE,KACL9oE,KAAK8oE,KAAKwK,SAAS,CACftZ,OAAQh6D,KAAKunF,aACblU,YAAarzE,KAAK2pF,mBAClBnW,qBAAsB,CAACnxE,EAAMirE,KACzB,GAAKttE,KAAK8oE,KAAKr7D,QAAQ88D,aAGlB,GAAI+C,EAAe,CACpB,IAAI+F,EAAc,GACduW,EAAYtc,EAAc1rE,OAC9B,IAAK,IAAIgD,EAAI,EAAGA,EAAIglF,EAAWhlF,IAC3ByuE,EAAY5uE,KAAK6oE,EAAc1oE,GAAGa,IACtCzF,KAAK0mB,SAAS2sD,EACjB,OARGrzE,KAAK0mB,SAASrkB,EAAKoD,IASvB,OAAO,CAAK,KAKpBzF,KAAKmpF,eAAgB,EACrBnpF,KAAKypF,aAEZ,CACD,WAAAb,GACI5oF,KAAK8oE,KAAK0C,UACb,CACD,eAAAge,GACI,IAAIK,GAAc,EACd7pF,KAAK+nF,aACL8B,EAAc7pF,KAAK+nF,WAAW9sE,OAAStb,EAASV,MAEpD,MAAM6qF,EAAa9pF,KAAK2jE,MAClBl2D,EAAU,CACZoS,MAAO7f,KAAKkpF,cACZ3e,YAAasf,EACbzhC,UAAW0hC,EAAaA,EAAWr8E,QAAQs8E,cAAgB,KAC3DnhB,cAAc,EACd4F,cAAasb,GAAaA,EAAWr8E,QAAQu8E,qBAE7CF,GACAzqF,EAAMwF,WAAW4I,EAASq8E,EAAWr8E,QAAQyrE,aAEjD,IAAI/P,EAASnpE,KAAKw7C,QAAQ/1C,GACtB0jE,IACA17D,EAAQhI,GAAK0jE,EAAS,eAEtB2gB,IACAr8E,EAAQy7D,gBAAkB4gB,EAAWr8E,QAAQy7D,iBAEjDz7D,EAAQ29D,QAAU,CACdtK,OAAQxhE,EAAKuU,QAAQ,eACrBsmD,OAAQ76D,EAAKuU,QAAQ,iBAEzB7T,KAAK8oE,KAAO,IAAImJ,UAAUxkE,EAC7B,CACD,gBAAAk8E,GACI,GAAI3pF,KAAK+nF,WAAW9sE,OAAStb,EAASV,KAClC,MAAO,CAACe,KAAK+nF,WAAWvnF,OAGxB,GAAIR,KAAK+nF,WAAWvnF,MAAO,CAEvB,MAAMkJ,EAAM1J,KAAK+nF,WAAWvnF,MAAMgW,MAAM,mCACxC,OAAO9M,EACDA,EAAI5H,KAAI2R,GACa,KAAfA,EAAEyD,OAAO,IAAuC,KAA1BzD,EAAEyD,OAAOzD,EAAE7R,OAAS,IAC1C6R,EAAIA,EAAEiC,UAAU,EAAGjC,EAAE7R,OAAS,IACrBiJ,QAAQ,MAAO,KAGjB4I,IAGb,EACT,CAEG,MAAO,EAElB,CACD,cAAA21E,CAAetpC,GACX,OAAI77C,MAAMC,QAAQ47C,GACPA,EAASh+C,KAAK2R,GACbA,EAAE3N,QAAQ,MAAQ,EAEX,KADP2N,EAAIA,EAAE5I,QAAQ,KAAM,MACH,IAGV4I,IAEZlS,KAAK,KAGDu+C,CAEd,CACD,iBAAAypC,CAAkBU,GACdjqF,KAAKkpF,cAAgBlpF,KAAKgoF,YAAY7lF,OAClC8nF,GACAA,GAEP,CACD,gBAAAC,GACI,IAAKlqF,KAAKkpF,cACN,OACJ,IAAIiB,EAAUnqF,KAAKkpF,cAActnF,OAC7Bob,EAAWhd,KAAKgoF,YAAYhrE,SAChC,IAAK,IAAIpY,EAAI,EAAGA,EAAIulF,EAASvlF,IAAK,CAC9B,IAAIvC,EAAOrC,KAAKkpF,cAActkF,GAC9B,GAAIvC,EAAKu4C,WAAa59B,GAAY3a,EAAKoD,GAAI,CACvCzF,KAAK0mB,SAASrkB,EAAKoD,IAAI,GACvB,KACH,CACJ,CACJ,EAEL,MAAM2kF,qCAAqCnB,uBACvC,WAAAppF,GACIsN,SAAS0tE,WACT76E,KAAKqqF,WAAY,EACjBrqF,KAAKsqF,YAAc,IACtB,CACD,YAAA7C,GACQznF,KAAKqqF,YAETrqF,KAAKqqF,WAAY,EACjBrqF,KAAKupF,mBAAkB,KAKnB,GAJAvpF,KAAKqqF,WAAY,EACbrqF,KAAKsoF,gBACLtoF,KAAKkqF,oBAEJlqF,KAAK+nF,WAAWlpE,WAAa7e,KAAK+nF,WAAWlzD,gBAAiB,CAC/D,MAAMtX,EAAOvd,KAAKsd,aAAatd,KAAK+nF,WAAWvnF,OAC/CR,KAAK+nF,WAAWlyD,WAAW71B,KAAK+nF,WAAWvnF,MAAO+c,GAClDvd,KAAK+nF,WAAWjzD,YAAY8C,kBAC/B,CACD53B,KAAKwpF,kBACDxpF,KAAKmpF,gBACLnpF,KAAKmpF,eAAgB,EACrBnpF,KAAK0pF,aACL1pF,KAAK0nF,aACR,IAER,CACD,UAAA+B,GACIzpF,KAAKunF,aAAa3vE,MAAM0yB,QAAU,OAC7BtqC,KAAKuqF,gBACNvqF,KAAKuqF,cAAgBhqC,MAAM,MAAOvgD,KAAKw7C,SAClCkG,SAAS,GAAG1hD,KAAKktD,uBACjB9J,SAETpjD,KAAKuqF,cAAc3yE,MAAM0yB,QAAU,OACtC,CACD,UAAAo/C,GACI1pF,KAAKuqF,cAAc3yE,MAAM0yB,QAAU,OACnCtqC,KAAKunF,aAAaxmC,gBAAgB,QACrC,CACD,iBAAAwoC,CAAkBU,GACd,MAAM14C,EAAWvxC,KAAKspF,cAChBkB,EAAqBxqF,KAAK2jE,MAAMv7B,aAAasP,wBAC/C6C,EAASE,WAAWlJ,IACpBvxC,KAAKkpF,cAAgB3uC,EAASE,WAAWlJ,GACrC04C,GACAA,KAGCO,GACLA,EAAmB,CACfj5C,SAAUA,EACVtyB,SAAUjf,KAAKgoF,YAAYviF,GAC3B+rC,aAAcxxC,KAAKgoF,YAAYl6D,YAC/BttB,MAAOR,KAAK6kB,aACZitB,IACA9xC,KAAKkpF,cAAgBp3C,EACjBm4C,GACAA,GACH,GAGZ,EAEL,MAAMQ,kCAAkCL,6BACpC,iBAAAb,CAAkBU,GACd,MAAM5tD,EAAUr8B,KAAK2jE,MAAMv7B,aAC3BpoC,KAAKgoF,YACL,MAAMwC,EAAqBnuD,EAAQqb,wBACnC,GAAI8yC,EAAoB,CAQpBA,EAPkB,CACdj5C,SAAU,MACVtyB,SAAUjf,KAAKgoF,YAAYviF,GAC3B+rC,aAAcxxC,KAAKgoF,YAAYl6D,YAC/BttB,MAAOR,KAAK6kB,aAGiBitB,IAC7B9xC,KAAKkpF,cAAgBp3C,EACjBm4C,GACAA,GACH,GAER,CACJ,EAGL,MAAMS,oCAAoCzB,uBACtC,WAAAppF,CAAY8jE,EAAOokB,EAAYxI,EAActkC,GACzC9tC,MAAMw2D,EAAOokB,EAAY,KAAM9sC,GAC/Bj7C,KAAK8oE,KAAOyW,CACf,CACD,YAAAkI,GAEC,CACD,YAAAG,GACI,MAAM7uE,EAAQ/Y,KAAK2jE,MAAMv7B,aAAarT,WAChC3V,EAASpf,KAAK+nF,WAAWvnF,MACzBmqF,EAAUvrE,EAASrG,EAAM4X,qBAAqBvR,GAAU,KACxDwrE,EAAa5qF,KAAK2jE,MAAMl2D,QAAQ6uE,kBACtC,OAAOqO,EAAU5xE,EAAMsI,iBAAiBspE,EAASC,GAAc5qF,KAAK6nF,cACvE,CACD,QAAAnhE,CAASlmB,EAAOo1B,GAAS,GACrBA,EAASA,GAAUp1B,IAAUR,KAAK+nF,WAAWvnF,MAC7C,MAAMgE,EAAS2I,MAAMuZ,SAASlmB,GAAO,GAIrC,OAHKo1B,GACD51B,KAAK+nF,WAAWjzD,YAAY8C,iBAAiBrD,EAAchF,WAAagF,EAAcxG,UAEnFvpB,CACV,CACD,UAAAiU,GACI,OAAQzY,KAAKi3B,eACJj3B,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAehuC,aAAeguC,EAAehuC,SAC5F,CACD,YAAA4yD,GACI,OAAO7nF,KAAK2jE,MAAMl2D,QAAQo9E,oBAAsBvrF,EAAKuU,QAAQ,oBAChE,CACD,eAAA0hE,GACI,MAAO,GAAGv1E,KAAKktD,yBAAyBltD,KAAKktD,uBAChD,CACD,WAAAi3B,GACI,GAAI3pC,EAAaoF,eACb,OAEY5/C,KAAKw7C,QAAQ5zC,YACZ5H,KAAKw7C,QAAQ4E,cAAcx4C,YACnB,GACrB24C,MAAMvgD,KAAKw7C,SACNkG,SAAS,GAAG1hD,KAAKktD,6BAE7B,EAGL,MAAM49B,yBAAyBzD,oBAC3B,WAAAxnF,CAAYo7C,GACR9tC,MAAM8tC,EACT,CACD,UAAAysC,GACI,MAAM5e,EAAO9oE,KAAK+qF,UACdjiB,GACAA,EAAKwK,SAAS,CACVtZ,OAAQh6D,KAAKunF,aACb/T,qBAAsBnxE,IAClBrC,KAAK6uE,aAAaxsE,EAAKoD,KAChB,IAItB,CACD,WAAAmjF,GACI,MAAM9f,EAAO9oE,KAAK+qF,UACdjiB,GACAA,EAAK0C,UACZ,EAGL,MAAMwf,uBAAuBF,iBACzB,WAAAjrF,CAAY8jE,EAAO4b,EAActkC,GAC7B9tC,MAAM8tC,GACNj7C,KAAK2jE,MAAQA,EACb3jE,KAAK8oE,KAAOyW,CACf,CACD,aAAIryB,GACA,MAAO,SACV,CACD,YAAA06B,GACI,OAAOtoF,EAAKuU,QAAQ,yBACvB,CACD,eAAA0hE,GACI,MAAO,GAAGr1B,YAAsBlgD,KAAKktD,kBACxC,CACD,UAAAz0C,GACI,OAAOtL,MAAMsL,eACJzY,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAe2iB,YAAc3iB,EAAe2iB,QAC3F,CACD,kBAAA4B,GACI,MAAMG,EAAgB3nF,KAAK4nF,eAiB3B,OAhBI5nF,KAAKyY,aACLzY,KAAKunF,aAAehnC,MAAM,KACrBrmC,KAAK,OAAQ,sBACb0mC,MAAM+mC,GACNpqE,KAAKoqE,GACLzlC,GAAG,SAAUhlB,IACdA,EAAGknB,iBACHpkD,KAAK0nF,cACE,KAENtkC,QAGLpjD,KAAKunF,aAAehnC,MAAM,OACrB6C,QAEFpjD,KAAKunF,YACf,CACD,YAAAE,GAEC,CACD,YAAA5Y,CAAappE,GACT,MAAM2vB,EAAQp1B,KAAK2jE,MAAM3uC,WACnBowD,EAAQ,CACV5sE,OAAQ4c,EAAM6O,mBACdtB,YAAal9B,GAEX6yB,EAAOlD,EAAM4O,mBAAmBohD,GAClC9sD,GACAlD,EAAM4P,2BAA2B5Q,EAAkBkP,IAAKhL,EAE/D,CACD,OAAAyyD,GACI,OAAO/qF,KAAK8oE,IACf,EAGL,MAAMmiB,yBAAyBH,iBAC3B,aAAI59B,GACA,MAAO,SACV,CACD,WAAArtD,CAAY8jE,EAAOnkC,EAAWjiB,EAAM09B,GAChC9tC,MAAM8tC,GACNj7C,KAAK2jE,MAAQA,EACb3jE,KAAKw/B,UAAYA,EACjBx/B,KAAK2nF,cAAgBpqE,CACxB,CACD,YAAAkqE,GAEI,MAAM1uE,EAAQ/Y,KAAK2jE,MAAMv7B,aAAarT,WAChCK,EAAQp1B,KAAK2jE,MAAM3uC,WACnBnV,EAAQ,GAKR3F,GADUla,KAAKw/B,WAAax/B,KAAKw/B,UAAU/G,aAAez4B,KAAKw/B,UAAU/G,YAAY,GAAMz4B,KAAKw/B,UAAU/G,YAAY,GAAGj4B,MAAQ,MACjHuY,EAAMoG,iBAAiBnf,KAAKw/B,UAAU/G,YAAY,GAAGj4B,OAAS,KAChF0Z,GAAQA,EAAKuV,WACbvV,EAAKuV,UAAUlY,SAAQ2zE,IACnB,MAAMr+D,EAAW9T,EAAMqZ,gBAAgB84D,GACjCC,EARc,CAACt+D,GAClBA,EAASuB,eAAenT,MAAQtb,EAASkzB,MAO5Bu4D,CAAoBv+D,IAC/BuI,EAAMwJ,QAAUusD,IAGjBt+D,GAAc7sB,KAAK2jE,MAAMl2D,QAAQ+8D,YAAc2gB,GAC/CtrE,EAAMpb,KAAK,CACPgB,GAAIylF,EACJ3tE,KAAMje,EAAKuU,QAAQ,YAAaq3E,EAAQ,YAAcr+D,EAASnU,SAEtE,IAGT,MAAMjL,EAAU,CACZoS,MAAOA,EACPyyD,aAActyE,KAAK2jE,MAAMl2D,QAAQ6xE,yBACjC75E,GAAIpG,EAAMuK,WAAW,QACrBs/D,gBAAiBlpE,KAAK2jE,MAAMl2D,QAAQy7D,iBAExC7pE,EAAMqF,OAAO+I,EAASzN,KAAK2jE,MAAMl2D,QAAQyrE,aACzCl5E,KAAK8oE,KAAO,IAAImJ,UAAUxkE,EAC7B,CACD,YAAAm6E,GACI,OAAO5nF,KAAK2nF,aACf,CACD,YAAAE,GACI,OAAO7nF,KAAK2jE,MAAMl2D,QAAQ49E,mBAAqB/rF,EAAKuU,QAAQ,mBAC/D,CACD,eAAA0hE,GACI,MAAO,GAAGv1E,KAAKktD,yBAAyBltD,KAAKktD,uBAChD,CACD,UAAAz0C,GACI,OAAOzY,KAAKw/B,UAAU1I,UAAY92B,KAAKw/B,UAAUvI,eACxCj3B,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAel1C,YAAck1C,EAAel1C,QAC3F,CACD,YAAA8gD,CAAappE,GACTzF,KAAKw/B,UAAUzF,cAAct0B,GAC7BzF,KAAKw/B,UAAU5H,iBAAiBrD,EAAcxG,SACjD,CACD,OAAAg9D,GACI,OAAO/qF,KAAK8oE,IACf,EAGL,MAAMwiB,mCAAmCxD,mBACrC,WAAAjoF,GACIsN,SAAS0tE,WACT76E,KAAKurF,IAAM,KACXvrF,KAAKwrF,mBAAqB,aAC1BxrF,KAAKyrF,mBAAqB,OAC7B,CACD,YAAAhE,GACC,CACD,UAAAC,GACI,GAAI1nF,KAAKurF,IACL,OACJ,MAAMG,EAAgB,CAClB9yB,UAAW54D,KAAK2jE,MAAMl2D,QAAQmrD,UAC9BW,aAAcv5D,KAAK+nF,WAAW95E,WAAatP,EAAS4D,KACpDo3D,eAAgB35D,KAAK+nF,WAAW95E,WAAatP,EAAS6D,KACtDo3D,sBAAuB55D,KAAK2jE,MAAMl2D,QAAQmsD,sBAC1CH,kBAAmBz5D,KAAK2jE,MAAMl2D,QAAQgsD,kBACtCS,QAAUpjD,IACN,MAAMtW,EAAQR,KAAK2rF,wBAAwB70E,GAC3C9W,KAAK0mB,SAASlmB,GACdR,KAAKurF,IAAM,KACX3gE,YAAW,IAAM5qB,KAAKunF,aAAa5mC,SAAS,IAAI,EAEpDyZ,SAAU,KACNp6D,KAAKunF,aAAa7kC,UAAY1iD,KAAK4nF,eACnC5nF,KAAKurF,IAAM,KACX3gE,YAAW,IAAM5qB,KAAKunF,aAAa5mC,SAAS,IAAI,EAEpD0Z,kBAAoBvjD,IAChB,MAAMtW,EAAQlB,EAAKuX,gBAAgBC,EAAU9W,KAAK+nF,WAAW95E,UAC7DjO,KAAKunF,aAAa7kC,UAAYliD,CAAK,GAG3CR,KAAKurF,IAAMvrF,KAAK2jE,MAAMl2D,QAAQm+E,uBACxB5rF,KAAK2jE,MAAMl2D,QAAQm+E,uBAAuBF,GAC1C,IAAI7uB,sBAAsB6uB,GAChC,MAAM3yE,EAAQ/Y,KAAK+nF,WAAWhzD,WACxBv0B,EAAQR,KAAK+nF,WAAWvnF,MAC9B,IAAIsW,EAAW,IAAItU,KAEfsU,EADA9W,KAAK+nF,WAAW95E,UAAYtP,EAAS4D,MAAQwW,EAAMga,YAAYvyB,GACpDuY,EAAMqa,kBAAkB5yB,GAE9BR,KAAK+nF,WAAW95E,UAAYtP,EAAS4D,MAAQwW,EAAMoa,YAAY3yB,GACzDuY,EAAM2a,kBAAkBlzB,GAGxBR,KAAK6rF,0BAA0BrrF,GAE9CR,KAAKurF,IAAIpyB,YAAYriD,GACrB9W,KAAKurF,IAAIvqC,KAAKhhD,KAAKw7C,QACtB,CACD,WAAAotC,GACI5oF,KAAKurF,IAAIpxB,SACTn6D,KAAKurF,IAAM,IACd,CACD,YAAA3D,GACI,IAAK5nF,KAAK+nF,WAAWvnF,MACjB,OAAOR,KAAK6nF,eAChB,MACMrnF,EAAQR,KAAK+nF,WAAWvnF,MACxBuY,EAAQ/Y,KAAK+nF,WAAWhzD,WAC9B,IAAKhc,EACD,MAAM,IAAI/L,MAAM,gCAAkChN,KAAK+nF,WAAWvnF,OAEtE,GAAIuY,EAAMga,YAAYvyB,IAAUuY,EAAMoa,YAAY3yB,GAAQ,CACtD,IAAI0lC,EAAY1lC,EAAMkV,UAAU,EAAGlV,EAAMoB,OAAS,GAC9C8H,EAAMpK,EAAKuU,QAAQqyB,GACvB,OAAOx8B,GATM,YAUhB,CAED,OADepK,EAAKuX,gBAAgB7W,KAAK6rF,0BAA0BrrF,GAAQR,KAAK+nF,WAAW95E,SAE9F,CACD,UAAAwK,GACI,OAAOtL,MAAMsL,eACJzY,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAeklB,SAAWllB,EAAeklB,KACxF,CACD,yBAAA0D,CAA0B/0E,GACtB,OAAOzX,EAAMqL,cAAcoM,EAAU9W,KAAKwrF,mBAAqB,IAAMxrF,KAAKyrF,mBAC7E,CACD,uBAAAE,CAAwB70E,GACpB,OAAOxX,EAAKyV,cAAc+B,EAAU9W,KAAKwrF,mBAAqB,IAAMxrF,KAAKyrF,mBAC5E,EAGL,MAAMK,mCAAmChE,mBACrC,YAAAL,GACIznF,KAAK+rF,gBAAkBxrC,MAAM,OACxBmB,SAAS,aAET0B,QACLpjD,KAAKw+E,qBACLx+E,KAAKgsF,oBACLhsF,KAAKisF,uBACR,CACD,UAAAxzE,GACI,OAAOtL,MAAMsL,eACJzY,KAAK2jE,MAAMl2D,QAAQi4E,cAAgBziB,EAAeklB,SAAWllB,EAAeklB,KACxF,CACD,QAAAzhE,CAASlmB,EAAOo1B,GACRp1B,aAAiBqyB,QACjB7yB,KAAK+nF,WAAW1yD,SAAW70B,EACtBo1B,GACD51B,KAAK+nF,WAAWjzD,YAAY8C,iBAAiBrD,EAAc4zD,OAGtE,CACD,kBAAA3J,GACI,MAAMzlE,EAAQ/Y,KAAKooC,aAAarT,WAC1Bm3D,EAAWlsF,KAAK+nF,WAAW95E,SAUjC,GATAjO,KAAKmsF,gBAAkBpzE,EAAM+H,2BAA0B,CAACpB,EAAKxF,IACrDA,EACOA,EAAK+U,iBAAmB/U,EAAKjM,WAAai+E,EAI1CxsE,EAAI9G,YAAc8G,EAAIuP,mBAGhClW,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKw7C,QAAQya,aAAa,WACnCkT,IACAA,GAAU,kBAEd,MAAM17D,EAAU,CACZoS,MAAO7f,KAAKmsF,gBACZ7Z,aAActyE,KAAK2jE,MAAMl2D,QAAQ6xE,yBACjC75E,GAAI0jE,EACJqB,YAAY,EACZtB,gBAAiBlpE,KAAK2jE,MAAMl2D,QAAQy7D,iBAExC7pE,EAAMqF,OAAO+I,EAASzN,KAAK2jE,MAAMl2D,QAAQyrE,aACzCl5E,KAAKosF,gBAAkB,IAAIna,UAAUxkE,EACxC,CACD,iBAAAu+E,GACIhsF,KAAKqsF,YAAc9rC,MAAM,MAAOvgD,KAAK+rF,iBAChCrqC,SAAS,cACTzmB,SAAS,SAASvnB,GAAKA,EACvBsvC,QAAQ1jD,EAAKuU,QAAQ,0BACrBonB,SAAS,KAAKvnB,GAAK1T,KAAK2iF,cAAgBjvE,EACxCwG,KAAK,OAAQ,sBACbgoC,GAAG,SAAU5iB,IACdt/B,KAAKosF,gBAAgB9Y,SAAS,CAC1BtZ,OAAQh6D,KAAK2iF,cACbtP,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB,MAAMT,EAAS/e,EAAKoF,GAEpB,OADAzF,KAAKssF,qBAAqBltE,IACnB,CAAK,GAElB,IAEDgkC,UACAA,OACR,CACD,YAAAykC,GACI,OAAO7nF,KAAK2jE,MAAMl2D,QAAQy6E,gBAAkB5oF,EAAKuU,QAAQ,mBAC5D,CACD,qBAAAo4E,GACI,MAAMM,EAAWhsC,MAAM,MAAOvgD,KAAK+rF,iBAC9BrqC,SAAS,cACTzmB,SAAS,SAASvnB,GAAKA,EACvBsvC,QAAQ1jD,EAAKuU,QAAQ,gCACrBuvC,QACLpjD,KAAKwsF,mBACDjsC,MAAM,MAAOgsC,GACRnpC,QACT,IAAIqpC,EAAOzsF,KAAKw7C,QAAQya,aAAa,WACjCw2B,IACAzsF,KAAKwsF,mBAAmB/mF,GAAKgnF,EAAO,iBAE3C,CACD,oBAAAH,CAAqBltE,GACjB,IAAIurE,EAAU3qF,KAAKooC,aAAarT,WAAW5V,iBAAiBC,GAC5D,GAAIurE,GAAW3qF,KAAKq1B,SAAU,CAC1B,IACIpM,EADAxG,EAAOziB,KAAKq1B,SAAS8I,aAEzB,GAAI1b,EAAK7gB,OAAS,EACdqnB,EAASxG,EAAK,GACdwG,EAAOjO,KAAK0L,SAAStH,GACrB6J,EAAOjO,KAAK/M,SAAW08E,EAAQ18E,SAC/Bgb,EAAO2O,uBAEN,CACD3O,EAASjpB,KAAKq1B,SAASgL,eACvBpX,EAAOmN,QAAU/B,EAAc3H,KAC/BzD,EAAOwN,WAAa,EACpB,IAAIzb,EAAO,IAAIyZ,WAAWxL,GAC1BjO,EAAK0L,SAAStH,GACdpE,EAAK8B,IAAMoX,EAAQgB,gBACnBla,EAAKC,KAAOtb,EAASs1B,UACrBja,EAAK/M,SAAW08E,EAAQ18E,SACxBgb,EAAOjO,KAAOA,EACdyH,EAAKhe,KAAKwkB,GACVjpB,KAAKq1B,SAASgO,wBAAwBjP,EAAkBkP,IAAKra,EAChE,CACDjpB,KAAK2iF,cAAcjgC,UAAY1iD,KAAKqhB,iBAAiBspE,EACxD,CACJ,CACD,gBAAAtpE,CAAiB9B,GACb,IAAKA,EACD,OAAOjgB,EAAKuU,QAAQ,uBACxB,IAAIyN,EAAWhiB,EAAKuU,QAAQ,aAAc0L,EAAU9Z,IAC/C6b,IACDA,EAAW/B,EAAU7G,SACzB,IAAI/N,EAAS3K,KAAK2jE,MAAMl2D,QAAQ6uE,kBAChC,IAAK3xE,EACD,OAAO2W,EACX,IAAI9c,EAASmG,EAAOE,QAAQ,IAAI2W,OAAO,SAAU,KAAMF,GACnDC,EAAavhB,KAAKooC,aACjBrT,WACAhU,wBAAwBxB,EAAU9Z,GAAI,KAC3C,OAAOjB,EAAOqG,QAAQ,IAAI2W,OAAO,WAAY,KAAMD,EACtD,CACD,UAAAmmE,GACI,MAAMgF,EAAc1sF,KAAK2jE,MACnBtnC,EAAUr8B,KAAKooC,aACrBpoC,KAAKwsF,mBAAmB5pC,UAAY,GACpC5iD,KAAKq1B,SAAWgH,EAAQuE,cACpB5gC,KAAK+nF,WAAW1yD,UAChBr1B,KAAKq1B,SAASvc,aAAa9Y,KAAK+nF,WAAW1yD,SAASK,cAExD,IAAIi3D,EAAattF,EAAMqF,OAAO,CAAA,EAAIgoF,EAAYj/E,SAC9Ck/E,EAAWniB,YAAa,EACxBmiB,EAAWxQ,YAAa,EACxBwQ,EAAW5C,cAAgBziF,SAASD,KACpCslF,EAAWzT,YAAY1O,YAAa,EACpCmiB,EAAWC,mBAAqB,CAACC,EAAWC,KACxC,GAAIJ,EAAYj/E,QAAQm/E,mBAAoB,CACxC,IAAIG,EAA2BD,GAAe,GAC9CC,EAAyBviB,YAAa,EACtCkiB,EAAYj/E,QAAQm/E,mBAAmBC,EAAWE,EACrD,GAEL,IAAIC,EAAgBhtF,KAAK2jE,MAAMspB,WAAWjtF,KAAKwsF,mBAAoBxsF,KAAKq1B,UACxE23D,EAAcjmD,KAAK/mC,KAAK2jE,MAAMv7B,aAAcukD,GAC5C,IAAIvtE,EAAS,KACTqD,EAAOziB,KAAKq1B,SAAS8I,aACzB,GAAmB,GAAf1b,EAAK7gB,OAAa,CAClB,IAAI49B,EAAYx/B,KAAK+nF,WAAWjzD,YAChC,GAAI0K,EAAU/G,YAAY72B,OAAS,EAAG,CAClC,IAAIyiC,EAAW7E,EAAU/G,YAAY,GACrCrZ,EAAUilB,EAASvnB,KAAOoX,EAAQgB,iBAC3BmP,EAASppB,MAAQtb,EAASs1B,UAAaoP,EAAS7jC,MAAQ,IAClE,CACJ,MAEG4e,EAASqD,EAAK,GAAGzH,KAAKxa,MAEtB4e,EACApf,KAAKssF,qBAAqBltE,GAG1Bpf,KAAK2iF,cAAcjgC,UAAYpjD,EAAKuU,QAAQ,uBAEhDm5E,EAAcz2C,UACd,MAAM22C,EAAaltF,KAAKwsF,mBAAmB9rB,cAAc,4BACrDwsB,IACAA,EAAWt1E,MAAMu1E,UAAY,SAEXntF,KAAK2jE,MACtBv7B,aACAS,cACAsG,WAAW,iBACF3tC,KAAK,CACfo/C,MAAOthD,EAAKuU,QAAQ,uBACpBxM,KAAMrH,KAAK+rF,gBACX3kF,MAAOpH,KAAK2jE,MAAMl2D,QAAQ2/E,oBAE1BxvB,UAAU,EACVE,YAAY,EACZC,SAAU,KACN,MAAMv9D,EAAQR,KAAKq1B,SAEnB,QAAI70B,EAAM6+B,YAAY,CAAEI,kBAAkB,MACtCz/B,KAAK0mB,SAASlmB,IACP,EAEC,GAGvB,CACD,WAAAooF,GACC,EAGL,MAAMyE,6CAA6CjD,6BAC/C,WAAAvqF,CAAY8jE,EAAOokB,EAAY7oE,EAAQ+7B,GACnC9tC,MAAMw2D,EAAOokB,EAAY7oE,EAAQ+7B,GACjCj7C,KAAK+nF,WAAWjrE,IAAMoX,EAAQkmB,YACjC,CACD,iBAAAmvC,CAAkBU,GACd,MAAM70D,EAAQp1B,KAAK2jE,MAAM3uC,WAAW8L,iBAE9BwsD,EADSttF,KAAK+nF,WAAWjzD,YACH2D,YAAY,GAAGxqB,SAC3CjO,KAAKkpF,cAAgB9zD,EAChB+I,aACA/7B,QAAOwjB,GAAOA,EAAI5K,KAAK/M,UAAYq/E,IACnCxrF,KAAI8jB,IACE,CAAEngB,GAAImgB,EAAIngB,GAAI8X,KAAMqI,EAAIlN,YAE/BuxE,GACAA,GAEP,EAML,MAAMsD,mBAAmBvyC,OACrB,aAAIkS,GACA,MAAO,SACV,CAKD,WAAArtD,CAAYo7C,EAAMmmC,GACdj0E,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACXi4E,cAAeziB,EAAe12C,IAC9Bi+C,YAAY,EACZgjB,gBAAiB,KACjBC,qBAAsB,KACtBb,mBAAoB,KACpB7C,cAAeziF,SAASD,KACxBq/E,aAAa,EACbvK,YAAY,EACZ5X,gBAAgB,EAChBmpB,uBAAuB,EACvBC,uBAAuB,EACvBC,eAAe,EACfxiB,QAAS,CACL5rC,UAAW,KACXvb,MAAO,MAEXmjE,2BAA2B,EAC3BrC,+BAA+B,EAC/BJ,kBAAkB,EAClBP,uBAAuB,EACvByJ,qBAAqB,EACrBj1B,UAAW,YACXgB,uBAAuB,EACvBH,mBAAmB,EACnB6iB,kBAAmB,kBACnBpD,YAAa,CACTxN,mBAAoB,GACpBgG,oBAAoB,EACpB7D,qBAAqB,EACrBzE,qBAAsB,MAE1Bzb,eAAe,EACfptC,cAAe,EACfD,cAAc,EACd8sE,oBAAqB,IACrBU,qBAAsB,IACtBC,aAAc,IACdC,qBAAsB,CAAC,IAAK,KAC5BC,sBAAsB,EACtBvK,oBAAqB,KACrBwK,uBAAwB,KACxBC,wBAAyB,KACzBC,sBAAuB,KACvBC,mBAAoB,KACpBC,oBAAqB,KACrBC,aAAc,KACdxqB,qBAAqB,GAEzB/jE,KAAKohF,YAAc,KACnBphF,KAAK6uD,YAActO,MAAM,OACpBmB,SAAS,GAAG1hD,KAAKktD,+BACjB1M,gBAAgBD,MAAM,OACtB6C,SACAA,QACApjD,KAAKi7C,KAAK4G,UAAU3mB,SAAS,GAAGl7B,KAAKktD,oBACtCltD,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBAEpCltD,KAAKikB,MAAQuQ,EAAY3B,MACrBuuD,IACAphF,KAAKohF,YAAcA,EAE1B,CACD,aAAAzrC,GACI,MAAO,YACV,CAMD,IAAA5O,CAAK1K,EAAS5uB,GAQV,GAPAN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GAChBzN,KAAK4jE,sBAEL5jE,KAAK28E,sBACL38E,KAAK48E,sBACLx2B,EAAcsC,oBAAoB1oD,KAAKi7C,MACnCj7C,KAAKyN,QAAQkgD,cAAe,CAC5B,MAAM50C,EAAQ/Y,KAAKooC,aAAarT,WAChCqxB,EAAcqC,sBAAsB,CAChCjN,QAASx7C,KAAKi7C,KACdoN,OAAQ,CAAC,cACTiB,YAAa,CAAClB,EAAWlrB,KACrBl9B,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAGw6B,eAC3BhjB,EAAGyoB,UAAU9D,UAAUn8B,IAAI,wBAC3B1lB,KAAKiwD,kBACL,MAAM7wC,EAAS8d,EAAG78B,KAAK+e,OAClBrG,EAAMuG,kBAAkBF,EAAQ,qBACjC8d,EAAG2oB,WAAaJ,EAAW0D,OAC9B,EAELF,WAAY,CAACb,EAAWlrB,KAAZ,EAEZqrB,YAAa,CAACH,EAAWlrB,KACrBA,EAAGyoB,UAAU9D,UAAUE,OAAO,wBAC9B7kB,EAAGyoB,UAAU/tC,MAAM6qC,eAAe,SAClCziD,KAAKi7C,KAAK4G,UAAUE,OAAO,GAAG7B,eAC9BlgD,KAAKwuF,iBAAiB,EAE1BlmC,OAAQ,CAACF,EAAWlrB,KAChB,MAAM9H,EAAQp1B,KAAKg1B,WACbowD,EAAQ,CACV5sE,OAAQ4c,EAAM6O,mBACdtB,YAAazF,EAAG78B,KAAK+e,QAEnBkZ,EAAOlD,EAAM4O,mBAAmBohD,GAClC9sD,GACAlD,EAAM4P,2BAA2B5Q,EAAkBkP,IAAKhL,EAC3D,GAGZ,CACJ,CACD,WAAAgjB,GACI8K,EAAcsC,oBAAoB1oD,KAAKi7C,MACvCj7C,KAAK28E,sBACL38E,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,eAAAuiC,GACI,OAAOnlF,KAAKu/E,YACf,CACD,gBAAAkF,GACI,OAAOzkF,KAAKyuF,aACf,CACD,eAAAvH,GACI,OAAOlnF,KAAK0uF,YACf,CACD,qBAAAvH,CAAsBZ,GAAS,GAC3B,OAAOA,EAASvmF,KAAK2uF,cAAgB3uF,KAAK4uF,SAC7C,CACD,mBAAAhS,GACI,MAAMxnD,EAAQp1B,KAAKg1B,WACnBh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IAEjD,MAAMg7C,EAAQh7C,EAAM3pB,KACpB,IAAK2kE,GAAUA,EAAMntC,MAAQ1D,EAAgByF,YAAcorC,EAAMntC,MAAQ1D,EAAgB5H,IACrF,OAEJ,MAAM+wD,EAAgBh2E,SAASisE,cACzBgK,EAAgBv9E,KAAKi7C,KAAK/f,SAASoiD,IAAkBA,GAAiBh2E,SAASD,KACrF,OAAQ29D,EAAMhtC,QACV,KAAK5D,EAAkB6D,OAAQ,CAC3B,MAAM+H,EAAQglC,EAAM9sC,QACd22D,gBAAkB,CAACv2D,EAAMw2D,KAC3B,MAAM9qC,EAAKhkD,KAAKi7C,KAAKylB,cAAc,eAAepoC,EAAK7yB,OACvD,GAAIu+C,EAAI,CACJ8qC,EAAWA,IACF9pB,EAAMrrC,SAAWpF,EAAcxG,YAAcwG,EAAcxG,UAC7DuK,EAAKG,YAAY72B,OAAS,IACzB02B,EAAKG,YAAY,GAAG5D,iBAAgD,IAA7ByD,EAAKG,YAAY,GAAGj4B,OAC9B,MAA7B83B,EAAKG,YAAY,GAAGj4B,OAC5B,MAAMm+E,EAAW36B,EAAGnC,UAAU3mB,SAAS,UACjCwsB,EAAW1nD,KAAK4mF,qBAAqBtuD,EAAM0rB,GACjD,GAAI0D,EAAU,CACV,MAAMi2B,EAAQj2B,EAAS4I,OAAOw+B,GAI9B,GAHInQ,GACA3+E,KAAKqkF,sBAAsB/rD,GAE3BilD,IAAkBuR,EAAU,CAC5B,MAAMlR,EAAYD,EAAMjd,cAAc,MAAQid,EAAMjd,cAAc,6BAC9Dkd,GACApb,UAAUob,EAEjB,CACJ,CACJ,GAEL,IAAIkR,EAAW9uF,KAAKyN,QAAQwgF,qBACxBhqF,MAAMC,QAAQ87B,IACdA,EAAMzoB,SAAS+gB,GAASu2D,gBAAgBv2D,EAAMw2D,KAC9CA,GAAW,GAGXD,gBAAgB7uD,EAAO8uD,GAE3B,KACH,CACD,KAAK16D,EAAkBkP,IAAK,CACxB,MAAMtD,EAAQglC,EAAM9sC,QACdkB,aAAgBd,IAClB,MAAMovB,EAAW1nD,KAAK4mF,qBAAqBtuD,GAC3C,GAAIovB,EAAU,CACV,MAAMlvC,EAAS8f,EAAKxD,YACdy3D,EAAWvsF,KAAKi7C,KAAKylB,cAAc,eAAeloD,EAAO/S,OAC/D,GAAI8mF,EAAU,CACV,MAAMwC,EAAmBxC,EAASyC,UAClC,GAAID,EAAkB,CAClB,MAAM/qC,EAAK0D,EAAS4I,OAAOtwD,KAAKyN,QAAQwgF,sBACxCc,EAAiB1kD,YAAY2Z,GAC7BA,EAAGs6B,gBAAe,GACdf,IAAkBv9E,KAAKyN,QAAQwgF,sBAC/BjqC,EAAG0c,cAAc,KAAK/f,OAE7B,CACJ,CACJ,GAED18C,MAAMC,QAAQ87B,GACdA,EAAMzoB,SAAS+gB,GAASc,aAAad,KAGrCc,aAAa4G,GAEjB,KACH,CACD,KAAK5L,EAAkBpmB,OAAQ,CAC3B,MAAMgyB,EAAQglC,EAAM9sC,QACd+2D,gBAAmB32D,IACrB,MAAM0rB,EAAKhkD,KAAKi7C,KAAKylB,cAAc,eAAepoC,EAAK7yB,OACvD,GAAIu+C,EAAI,CACJ,MAAMxrC,EAASxY,KAAKi7C,KAAKylB,cAAc,eAAepoC,EAAKxD,YAAYrvB,4BACjEomB,EAAOm4B,EAAGg6B,YACV1iB,EAAOtX,EAAGi6B,gBAEhB,GADAj6B,EAAG5D,cAAcvV,YAAYmZ,GACzBu5B,EAAe,CACf,MAAMW,EAAYryD,GAAQyvC,GAAQ9iD,EAC5BolE,EAAYM,EAAUxd,cAAc,MAAQwd,EAAUxd,cAAc,6BACtEkd,GACAA,EAAUj9B,OAEjB,CACJ,GAED18C,MAAMC,QAAQ87B,GACdA,EAAMzoB,SAAS+gB,GAAS22D,gBAAgB32D,KAGxC22D,gBAAgBjvD,GAEpB,KACH,CACD,QACIhgC,KAAKu2C,UAEZ,GAER,CACD,mBAAAomC,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKg1B,WACbyQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,QAAAroD,GACI,OAAIh1B,KAAKohF,YACEphF,KAAKohF,YAETphF,KAAKq8B,QAAQrH,UACvB,CACD,WAAAkmB,GACIl7C,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,UAAAvc,CAAWtmC,GACPpO,EAAMwF,WAAW7E,KAAKyN,QAASA,GAE3BzN,KAAKyN,QAAQyhF,iBACb5vF,EAAK+S,qBAAqB,CACtB/B,eAAgBtQ,KAAKyN,QAAQyhF,kBAGjClvF,KAAKyN,QAAQ0hF,mBACb7vF,EAAK+S,qBAAqB,CACtBjC,gBAAiBpQ,KAAKyN,QAAQ0hF,yBAGI,IAA/BnvF,KAAKyN,QAAQi4E,gBACpB1lF,KAAKyN,QAAQi4E,cAAgBziB,EAAe12C,KAE5CiuB,EAAaoF,iBACb5/C,KAAKyN,QAAQ29D,QAAUprE,KAAKyN,QAAQ29D,SAAW,GAC/CprE,KAAKyN,QAAQ29D,QAAQ5rC,UAAY,CAAC,QAClCx/B,KAAKyN,QAAQ29D,QAAQnnD,MAAQ,CAAC,QAErC,CACD,KAAAxD,GACIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,MAAA0N,GACI,IACItwD,KAAKu/E,aAAev/E,KAAKw+E,qBACzBx+E,KAAKovF,uBACLpvF,KAAKqvF,qBACLrvF,KAAKsvF,cAAgB/uC,MAAM,MAAOvgD,KAAKi7C,MAClCmI,QACL7C,MAAMvgD,KAAKi7C,MACN6G,YAAYihB,GACZrhB,SAASlH,EAAayF,qBAC3B,MACM/+B,EADQlhB,KAAKg1B,WACAiP,mBACbyjB,EAAW1nD,KAAK4mF,qBAAqB1lE,EAAMlhB,KAAKsvF,eAItD,GAHI5nC,GACAA,EAAS4I,SAETtwD,KAAKyN,QAAQ0uE,WAAY,CACzBn8E,KAAKm9E,cAAgB58B,MAAM,MAAOvgD,KAAKi7C,MAClCmI,QACL,MAAMmsC,EAAiBvvF,KAAKwvF,kBAAkBxvF,KAAKm9E,eAC/CoS,GACAA,EAAej/B,QACtB,CACJ,CACD,MAAO/oB,GACH,MAAMt4B,EAAQs4B,EACdvnC,KAAKq8B,QAAQ2a,WAAW,CACpBhf,OAAQ,uBACRza,KAAMtO,EAAM/B,QACZ4lC,YAAa7jC,GAEpB,CACJ,CACD,oBAAA23E,CAAqBpnD,EAAWyb,GAC5B,IAAIyM,EACJ,GAAI1nD,KAAKyN,QAAQygF,yBACbxmC,EAAW1nD,KAAKyN,QAAQygF,uBAAuB1uD,EAAWyb,GACtDyM,GACA,OAAOA,EAGf,OAAQloB,EAAU1iB,KACd,KAAKwX,EAAQgF,OACT,OAAO,IAAIqqD,wBAAwB3jF,KAAMw/B,EAAWyb,GACxD,KAAK3mB,EAAQuE,MACT,OAAO,IAAIytD,uBAAuBtmF,KAAMw/B,EAAWyb,GAE3D,OAAO,IACV,CACD,qBAAAipC,CAAsB6D,EAAY9sC,GAC9B,IAAK8sC,EACD,KAAM,6CAEV,MAAMhvE,EAAQ/Y,KAAKooC,aAAarT,WAC1ByK,EAAYuoD,EAAWjzD,YACvBjI,EAAW9T,EAAMqZ,gBAAgBoN,EAAU1F,iBAC3Cva,EAAYxG,EAAM4X,qBAAqB6O,EAAU/G,YAAY,GAAGj4B,OAChEmuB,EAAU5V,EAAM6Z,WAAWrT,EAAWsN,EAAUk7D,EAAW7hE,YACjE,IAAIhH,EACApC,EAEAoC,EADAyP,GAAWA,EAAQzP,QAAUyP,EAAQzP,OAAOpC,MAAQ8S,EAAY9wB,QACvD6vB,EAAQzP,OAEZK,GAAaA,EAAU7C,cACnB6C,EAAU7C,cAGV,IAAIiR,cAEjB7Q,EAAMoC,EAAOpC,IACb,IAAIovE,EAAWnE,EAAW95E,SAI1B,GAHIi+E,GAAYvtF,EAASG,UACrBotF,EAAW3sE,EAAUtR,UAErB85E,EAAW9sE,OAAStb,EAASs1B,UAAW,CACxC,GAA8B,IAA1B8yD,EAAW7hE,WACX,OAAO,IAAIwkE,4BAA4B1qF,KAAM+nF,EAAY/nF,KAAKu/E,aAActkC,GAE3E,CACD,IAAIw0C,EAAgBzvF,KAAKw+E,oBAAmB,CAAC9+D,EAAKxF,KAC1CA,GACOA,EAAK+U,iBAAmB/U,EAAKjM,WAAai+E,IAIzD,OAAO,IAAIxB,4BAA4B1qF,KAAM+nF,EAAY0H,EAAex0C,EAC3E,CACJ,CAaD,GAZS8sC,EAAW9sE,OAAStb,EAASkzB,MAClC/V,EAAM8S,EAAYE,SAEbi4D,EAAW9sE,OAAStb,EAAS+uB,OAC9B5R,GAAO8S,EAAY9wB,SAAYipF,EAAW95E,WAAatP,EAAS6D,MAC7DulF,EAAW95E,WAAatP,EAASK,UAAY+oF,EAAW95E,WAAatP,EAAS4D,OACjFua,EAAM8S,EAAY5wB,UAGjB+oF,EAAW9sE,MAAQtb,EAASy6C,eACjCt9B,EAAM8S,EAAYG,oBAElB/vB,KAAKyN,QAAQ0gF,wBAAyB,CACtC,IAAIzmC,EAAW1nD,KAAKyN,QAAQ0gF,wBAAwBnuF,KAAM+nF,EAAY7oE,EAAQ+7B,GAC9E,GAAIyM,EACA,OAAOA,CAEd,CACD,OAAQ5qC,GACJ,KAAK8S,EAAY3wB,KACb,OAAO,IAAIgqF,uBAAuBjpF,KAAM+nF,EAAY7oE,EAAQ+7B,GAChE,KAAKrrB,EAAYC,QACb,OAAO,IAAI46D,0BAA0BzqF,KAAM+nF,EAAY7oE,EAAQ+7B,GACnE,KAAKrrB,EAAY1wB,WACb,OAAO,IAAIkrF,6BAA6BpqF,KAAM+nF,EAAY7oE,EAAQ+7B,GACtE,KAAKrrB,EAAY5wB,SACb,OAAO,IAAIssF,2BAA2BtrF,KAAM+nF,EAAY7oE,EAAQ+7B,GACpE,KAAKrrB,EAAYE,SACb,OAAO,IAAIg8D,2BAA2B9rF,KAAM+nF,EAAY7oE,EAAQ+7B,GAEpE,KAAKrrB,EAAYG,mBACb,OAAO,IAAIs9D,qCAAqCrtF,KAAM+nF,EAAY7oE,EAAQ+7B,GAC9E,QACI,OAAO,IAAIstC,wBAAwBvoF,KAAM+nF,EAAY7oE,EAAQ+7B,GAExE,CACD,mBAAA8oC,CAAoBvkD,EAAWjiB,EAAM09B,GACjC,IAAIyM,EAGJ,OAFI1nD,KAAKyN,QAAQ2gF,wBACb1mC,EAAW1nD,KAAKyN,QAAQ2gF,sBAAsB5uD,EAAWjiB,EAAM09B,IAC/DyM,GAEG,IAAIujC,iBAAiBjrF,KAAMw/B,EAAWjiB,EAAM09B,EACtD,CACD,iBAAAu0C,CAAkBv0C,GACd,IAAIyM,EAGJ,OAFI1nD,KAAKyN,QAAQ6gF,sBACb5mC,EAAW1nD,KAAKyN,QAAQ6gF,oBAAoBrzC,IAC5CyM,GAEG,IAAIsjC,eAAehrF,KAAMA,KAAKu/E,aAActkC,EACtD,CACD,kBAAAujC,CAAmB/+D,GACf,MAAM1G,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OAAO,KACX,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,IAAM,gBAC7B0jE,GAAU,gBACV,MAOM17D,EAAU,CACZoS,MARiB9G,EAAM8H,gBAAgB,CACvCiQ,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzQ,cAAevgB,KAAKyN,QAAQ8S,cAC5BD,aAActgB,KAAKyN,QAAQ6S,cAC5Bb,GAGC6yD,aAActyE,KAAKyN,QAAQ6xE,yBAC3B75E,GAAI0jE,EACJD,gBAAiBlpE,KAAKyN,QAAQy7D,iBAGlC,OADA7pE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aAC5B,IAAIjH,UAAUxkE,EACxB,CACD,gBAAA4sE,CAAiB5sE,GACbzN,KAAKu/E,aAAajM,SAAS7lE,EAC9B,CACD,oBAAA2hF,GAEI,CACI,MAAMh6D,EAAQp1B,KAAKg1B,WACnB,IAAIm0C,EAASnpE,KAAKi7C,KAAKx1C,IAAM,gBAC7B0jE,GAAU,iBACV,MAAMtpD,EAAQ,CACV,CACIpa,GAAI,SACJ8X,KAAMje,EAAKuU,QAAQ,eAEvB,CACIpO,GAAI,SACJ8X,KAAMje,EAAKuU,QAAQ,eAGvBuhB,EAAMwJ,UACF5+B,KAAKyN,QAAQigF,uBAAyB1tF,KAAKyN,QAAQkgF,wBACnD9tE,EAAMpb,KAAK,CAAEgB,GAAI,YAAa8X,KAAM,QAEpCvd,KAAKyN,QAAQigF,uBACb7tE,EAAMpb,KAAK,CACPgB,GAAI,QACJ8X,KAAMje,EAAKuU,QAAQ,0BAGvB7T,KAAKyN,QAAQkgF,uBACb9tE,EAAMpb,KAAK,CACPgB,GAAI,SACJ8X,KAAMje,EAAKuU,QAAQ,mBAI/B,MAAMpG,EAAU,CAAEoS,MAAOA,EAAOyyD,aAActyE,KAAKyN,QAAQ6xE,yBAA0B75E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,gBAAiBwC,mBAAoB,IAAK9C,cAAc,GACvLvpE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAKyuF,cAAgB,IAAIxc,UAAUxkE,EACtC,CAED,CACI,IAAI07D,EAASnpE,KAAKi7C,KAAKx1C,IAAM,gBAC7B0jE,GAAU,aACV,MAsBM17D,EAAU,CAAEoS,MAtBJ,CACV,CACIpa,GAAI,SACJ8X,KAAMje,EAAKuU,QAAQ,eAEvB,CACIpO,GAAI,SACJ8X,KAAMje,EAAKuU,QAAQ,cAEvB,CACIpO,GAAI,YACJ8X,KAAM,OAEV,CACI9X,GAAI,eACJ8X,KAAMje,EAAKuU,QAAQ,oBAEvB,CACIpO,GAAI,WACJ8X,KAAMje,EAAKuU,QAAQ,qBAGKy+D,aAActyE,KAAKyN,QAAQ6xE,yBAA0B75E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,gBAAiBwC,mBAAoB,IAAK9C,cAAc,GACvLvpE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAK4uF,UAAY,IAAI3c,UAAUxkE,EAClC,CAED,CACI,IAAI07D,EAASnpE,KAAKi7C,KAAKx1C,IAAM,gBAC7B0jE,GAAU,iBACV,MAUM17D,EAAU,CAAEoS,MAVJ,CACV,CACIpa,GAAI,eACJ8X,KAAMje,EAAKuU,QAAQ,oBAEvB,CACIpO,GAAI,WACJ8X,KAAMje,EAAKuU,QAAQ,qBAGKy+D,aAActyE,KAAKyN,QAAQ6xE,yBAA0B75E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,gBAAiBwC,mBAAoB,IAAK9C,cAAc,GACvLvpE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAK2uF,cAAgB,IAAI1c,UAAUxkE,EACtC,CACJ,CACD,kBAAA4hF,GACI,IAAIlmB,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,iBAEd,MAOM17D,EAAU,CAAEoS,MAPD06B,EAASQ,sBACAj5C,KAAKO,IACpB,CACHoD,GAAIpD,EAAKoD,GACT8X,KAAMje,EAAKuU,QAAQxR,EAAKuB,SAGG0uE,aAActyE,KAAKyN,QAAQ6xE,yBAA0B75E,GAAI0jE,EAAQD,gBAAiBlpE,KAAKyN,QAAQy7D,iBAClI7pE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAK0uF,aAAe,IAAIzc,UAAUxkE,EACrC,CACD,qBAAA42E,CAAsB7kD,EAAWhV,OAAQxjB,GACrC,IAAIg9C,EACA26B,EACAn/C,IACAwkB,EAAKhkD,KAAKi7C,KAAKylB,cAAc,eAAelhC,EAAU/5B,kCAAkC+5B,EAAU/5B,6BAC9Fu+C,IACA26B,EAAW36B,EAAGnC,UAAU3mB,SAAS,YAIzC,MAAMzT,EAAOznB,KAAKi7C,KAAKiZ,iBAAiB,IAAIl0D,KAAKktD,iBACjD,IAAK,IAAItoD,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM8f,EAAM+C,EAAK7iB,GACb8f,EAAIuiC,aAAa,kBACZjnD,KAAKyN,QAAQ25E,2BACd7mC,MAAM77B,GACDrkB,KAAK,eAAgB,MAIzBL,KAAKyN,QAAQs3E,+BACdxkC,MAAM77B,GACDrkB,KAAK,eAAgB,MAGlCkgD,MAAM77B,GACDo9B,YAAY,SACpB,CACGkC,IAAO26B,GACPp+B,MAAMyD,GACDtC,SAAS,UACTrhD,KAAK,eAAgB,GAEjC,CACD,eAAA4vD,GACI,MAAM7H,EAAYpoD,KAAKi7C,KAAKylB,cAAc,4BACtCtY,IACAA,EAAU/d,YAAYrqC,KAAK6uD,aAC3B7uD,KAAK6uD,YAAYyvB,eAAe,CAAE/Y,MAAO,SAAUgZ,SAAU,WAEpE,CACD,eAAAiQ,GACQxuF,KAAK6uD,YAAYzO,eACjBpgD,KAAK6uD,YAAYzO,cAAcvV,YAAY7qC,KAAK6uD,YAEvD,CACD,kBAAA1T,GACQn7C,KAAKyN,QAAQs2D,sBACR/jE,KAAKgkE,cAAcC,YACpBjkE,KAAKi7C,KAAK5Q,YAAYrqC,KAAKgkE,eAEtC,CACD,gBAAA5oB,GACQp7C,KAAKyN,QAAQs2D,qBACT/jE,KAAKgkE,cAAcC,YACnBjkE,KAAKi7C,KAAKpQ,YAAY7qC,KAAKgkE,cAEtC,CACD,mBAAAJ,GACI5jE,KAAKgkE,cAAgB18D,SAAS8iC,cAAc,OAC5CpqC,KAAKgkE,cAAcniB,UAAUn8B,IAAI,GAAGw6B,mBACpClgD,KAAKgkE,cAAcniB,UAAUn8B,IAAI80B,EAAayF,qBAC9CjgD,KAAKgkE,cAAcphB,UAAY,sVAClC,CACD,UAAAqqC,CAAWhyC,EAAM7lB,GACb,OAAO,IAAIm4D,WAAWtyC,EAAM7lB,EAC/B,EAGL,MAAMs6D,kBAAkB10C,OACpB,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACXkiF,cAAc,EACdC,iBAAiB,EACjBC,iBAAiB,EACjB/F,WAAY,CACR3N,YAAY,EACZ5X,gBAAgB,EAChB6iB,2BAA2B,IAGnCpnF,KAAK8vF,oBAAsB9vF,KAAK+vF,mBAAmBt9C,KAAKzyC,MACxDA,KAAKikB,MAAQuQ,EAAY3B,KAC5B,CACD,aAAA8iB,GACI,MAAO,WACV,CACD,aAAIuX,GACA,MAAO,SACV,CACD,IAAAnmB,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GAChBzN,KAAKs7C,cACLt7C,KAAKgwF,UAAYzvC,MAAM,OAClBmB,SAAS,GAAG1hD,KAAKktD,wBACjB9J,QACLpjD,KAAK8pF,WAAa,IAAIyD,WAAWvtF,KAAKgwF,WACtChwF,KAAK8pF,WAAW/iD,KAAK1K,EAASr8B,KAAKyN,QAAQq8E,YAAc,CAAA,GACzD9pF,KAAK48E,qBACR,CACD,UAAA7oC,CAAWtmC,GACPzN,KAAKyN,QAAUpO,EAAMwF,WAAW7E,KAAKyN,QAASA,EACjD,CACD,aAAAwiF,CAAc/yD,GACVl9B,KAAKkwF,aACR,CACD,aAAAC,CAAcjzD,GACVl9B,KAAKowF,aACR,CACD,cAAAC,CAAetmE,IDnwPnB,SAASumE,UAAU7sF,EAAQ8sF,EAAUxmE,GACjCtmB,EAAOmU,MAAM6qC,eAAe,WAC5B,IAAInY,EAAU7iC,OAAOysE,iBAAiBzwE,GAAQ6mC,QAC9B,SAAZA,IACAA,EAAU,SACd7mC,EAAOmU,MAAM0yB,QAAUA,EACvB,IAAI8R,EAAS34C,EAAO+9C,aACpB/9C,EAAOmU,MAAM44E,SAAW,SACxB/sF,EAAOmU,MAAMwkC,OAAS,MACtB34C,EAAOmU,MAAM64E,WAAa,MAC1BhtF,EAAOmU,MAAM84E,cAAgB,MAC7BjtF,EAAOmU,MAAM+4E,UAAY,MACzBltF,EAAOmU,MAAMszD,aAAe,MAC5BznE,EAAO+9C,aACP/9C,EAAOmU,MAAMg5E,UAAY,aACzBntF,EAAOmU,MAAMi5E,mBAAqB,0BAClCptF,EAAOmU,MAAMk5E,mBAAqBP,EAAW,KAC7C9sF,EAAOmU,MAAMwkC,OAASA,EAAS,KAC/B34C,EAAOmU,MAAM6qC,eAAe,eAC5Bh/C,EAAOmU,MAAM6qC,eAAe,kBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,cAC5Bh/C,EAAOmU,MAAM6qC,eAAe,iBAC5Bh7C,OAAOmjB,YAAW,KACdnnB,EAAOmU,MAAM6qC,eAAe,UAC5Bh/C,EAAOmU,MAAM6qC,eAAe,YAC5Bh/C,EAAOmU,MAAM6qC,eAAe,uBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,uBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,cACxB14B,GACAA,GACH,GACFwmE,EACP,CCouPQD,CAAUtwF,KAAK+wF,QAAS,KAAK,KACzB/wF,KAAKgxF,eACDjnE,GACAA,GAAU,GAErB,CACD,cAAAknE,IDzuPJ,SAASC,QAAQztF,EAAQ8sF,EAAUxmE,GAC/BtmB,EAAOmU,MAAMi5E,mBAAqB,0BAClCptF,EAAOmU,MAAMk5E,mBAAqBP,EAAW,KAC7C9sF,EAAOmU,MAAMg5E,UAAY,aACzBntF,EAAOmU,MAAMwkC,OAAS34C,EAAO+9C,aAAe,KAC5C/9C,EAAO+9C,aACP/9C,EAAOmU,MAAM44E,SAAW,SACxB/sF,EAAOmU,MAAMwkC,OAAS,MACtB34C,EAAOmU,MAAM64E,WAAa,MAC1BhtF,EAAOmU,MAAM84E,cAAgB,MAC7BjtF,EAAOmU,MAAM+4E,UAAY,MACzBltF,EAAOmU,MAAMszD,aAAe,MAC5BzjE,OAAOmjB,YAAW,KACdnnB,EAAOmU,MAAM0yB,QAAU,OACvB7mC,EAAOmU,MAAM6qC,eAAe,UAC5Bh/C,EAAOmU,MAAM6qC,eAAe,eAC5Bh/C,EAAOmU,MAAM6qC,eAAe,kBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,cAC5Bh/C,EAAOmU,MAAM6qC,eAAe,iBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,YAC5Bh/C,EAAOmU,MAAM6qC,eAAe,uBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,uBAC5Bh/C,EAAOmU,MAAM6qC,eAAe,cACxB14B,GACAA,GACH,GACFwmE,EACP,CC+sPQW,CAAQlxF,KAAK+wF,QAAS,KAAK,KACvB/wF,KAAKgxF,eACDhxF,KAAKyN,QAAQkiF,cACb3vF,KAAKkwF,aACR,GAER,CACD,kBAAAH,CAAmB7yD,GACfA,EAAGknB,iBACC7D,MAAMvgD,KAAK+wF,SAASzvC,YACpBthD,KAAKixF,iBAGLjxF,KAAKqwF,gBAEZ,CACD,YAAAW,GACI,IAAKhxF,KAAKmxF,kBACN,OACJ,IAAI5zE,EAAO,GACX,MAAM6X,EAAQp1B,KAAKooC,aAAapT,WAC5BI,IACA7X,EAAO6X,EAAMsQ,qBAEL,IAARnoB,IACAA,EAAOje,EAAKuU,QAAQ,uBAExB0sC,MAAMvgD,KAAKmxF,mBACN5zE,KAAKA,GACLrD,KAAK,QAASqD,IACd6X,GAASA,EAAMoM,qBAChB+e,MAAMvgD,KAAKmxF,mBAAmBjwC,OAC9BX,MAAMvgD,KAAKoxF,mBAAmBpwC,OACzBT,MAAMvgD,KAAK+wF,SAASzvC,cACrBf,MAAMvgD,KAAKqxF,kBAAkBnwC,OAC7BlhD,KAAKy/D,cAAc7nD,MAAMwxC,OAAS,GAClCppD,KAAKy/D,cAAc5qB,oBAAoB,QAAS70C,KAAK8vF,wBAIzD9vF,KAAKy/D,cAAc7nD,MAAMwxC,OAAS,UAClCppD,KAAKy/D,cAAc5qB,oBAAoB,QAAS70C,KAAK8vF,qBACrD9vF,KAAKy/D,cAAc9sB,iBAAiB,QAAS3yC,KAAK8vF,qBAClDvvC,MAAMvgD,KAAKmxF,mBAAmBnwC,OAC9BT,MAAMvgD,KAAKoxF,mBAAmBlwC,OAC9BX,MAAMvgD,KAAKqxF,kBAAkBrwC,QAE7BT,MAAMvgD,KAAK+wF,SAASzvC,YACpBthD,KAAKsxF,mBAAmBzvC,UAAUn8B,IAAI,GAAG1lB,KAAKktD,4BAG9CltD,KAAKsxF,mBAAmBzvC,UAAUE,OAAO,GAAG/hD,KAAKktD,4BAErDltD,KAAKuxF,YACR,CACD,MAAAjhC,GACI/P,MAAMvgD,KAAKi7C,MACNyG,SAAS,GAAG1hD,KAAKktD,uBACjBxL,SAASlH,EAAayF,qBACtBhlB,SAAS,OAAOqlB,GAAWtgD,KAAKy/D,cAAgBnf,EAChDoB,SAAS,GAAG1hD,KAAKktD,oBACjBjyB,SAAS,OAAOqlB,GAAWtgD,KAAKwxF,kBAAoBlxC,EACpDoB,SAAS,GAAG1hD,KAAKktD,yBACjB9J,UACAnoB,SAAS,OAAOqlB,GAAWtgD,KAAKyxF,gBAAkBnxC,EAClDoB,SAAS,GAAG1hD,KAAKktD,8BACjBjyB,SAAS,OAAOqlB,GAAWtgD,KAAKmxF,kBAAoB7wC,EACpDoB,SAAS,GAAG1hD,KAAKktD,yBACjB9J,UACAnoB,SAAS,OAAOqlB,GAAWtgD,KAAKoxF,kBAAoB9wC,EACpDoB,SAAS,GAAG1hD,KAAKktD,yBAAyBltD,KAAKktD,yBAC/C3vC,KAAKje,EAAKuU,QAAQ,0BAClBqtC,OACAgB,GAAG,SAAS,KACbliD,KAAK8pF,WAAWzP,iBAAiB,CAC7BrgB,OAAQh6D,KAAKoxF,kBACb/d,YAAa,KACbG,qBAAsB,CAACnxE,EAAMwd,KACzB,MAAM06D,EAASl4E,EAAKoD,GACpBzF,KAAKqwF,gBAAe,KAChB,MAAMj7D,EAAQp1B,KAAKooC,aAAapT,WAC1BowD,EAAQ,CACV5sE,OAAQ4c,EAAM6O,mBACdtB,YAAa43C,GAEXjiD,EAAOlD,EAAM4O,mBAAmBohD,GAClC9sD,GACAlD,EAAM4P,2BAA2B5Q,EAAkBkP,IAAKhL,EAC3D,GACH,GAER,IAED8qB,UACAA,UACAnoB,SAAS,OAAOqlB,GAAWtgD,KAAKqxF,iBAAmB/wC,EACnDoB,SAAS,GAAG1hD,KAAKktD,+BACjBjyB,SAAS,OAAOqlB,GAAWtgD,KAAKsxF,mBAAqBhxC,EACrDoB,SAAS,GAAG1hD,KAAKktD,0BACjB9J,UACAA,UACAA,UACAnoB,SAAS,OAAOqlB,GAAWtgD,KAAK+wF,QAAUzwC,EAC1CoB,SAAS,GAAG1hD,KAAKktD,6BACjBxL,SAASlH,EAAayF,qBACtBiB,OACAV,gBAAgBxgD,KAAKgwF,WACrB5sC,WACDpjD,KAAKyN,QAAQmiF,iBAAmB5vF,KAAKyN,QAAQoiF,mBAC7C7vF,KAAKskF,aAAe/jC,MAAM,MAAOvgD,KAAK+wF,SACjCrvC,SAAS,GAAG1hD,KAAKktD,0BACjBxL,SAASlH,EAAayF,qBACtBmD,SAELpjD,KAAKyN,QAAQmiF,iBACbrvC,MAAM,IAAKvgD,KAAKskF,cACXpqE,KAAK,OAAQ,sBACbwnC,SAAS,GAAG1hD,KAAKktD,oBAAoBltD,KAAKktD,0BAC1C3vC,KAAKje,EAAKuU,QAAQ,gBAClBquC,GAAG,QAASliD,KAAKiwF,cAAcx9C,KAAKzyC,OAEzCA,KAAKyN,QAAQoiF,iBACbtvC,MAAM,IAAKvgD,KAAKskF,cACXpqE,KAAK,OAAQ,sBACbwnC,SAAS,GAAG1hD,KAAKktD,oBAAoBltD,KAAKktD,0BAC1C3vC,KAAKje,EAAKuU,QAAQ,aAClBquC,GAAG,QAASliD,KAAKmwF,cAAc19C,KAAKzyC,OAE7CyH,OAAOkrC,iBAAiB,UAAU,KAC9B3yC,KAAKuxF,YAAY,IAErBvxF,KAAKgxF,eACLhxF,KAAK8pF,WAAWvzC,UAChB3rB,YAAW,IAAM5qB,KAAKuxF,cAAc,IACvC,CACD,WAAAr2C,GACIl7C,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,KAAA7vC,GACIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,WAAAstC,GACQlwF,KAAKyN,QAAQikF,qBACb1xF,KAAKyN,QAAQikF,qBAEpB,CACD,WAAAtB,GACI,MAAMh7D,EAAQp1B,KAAKooC,aAAapT,WAC5BI,IACAA,EAAM+D,kBACN/D,EAAM4P,2BAA2B5Q,EAAkB7H,KAE1D,CACD,UAAAglE,GACIvxF,KAAKyxF,gBAAgB75E,MAAMxQ,MAASpH,KAAKi7C,KAAKrzC,YAAc5H,KAAKwxF,kBAAkBjwC,aAC5EhB,MAAMvgD,KAAKqxF,kBAAkB/vC,YAActhD,KAAKqxF,iBAAiB9vC,YAAc,GAAM,IAC/F,CACD,WAAAjG,GACQt7C,KAAK8pF,YACL9pF,KAAK8pF,WAAWzuC,UACpBr7C,KAAK28E,sBACL38E,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,mBAAAg6B,GACI,MAAMxnD,EAAQp1B,KAAKooC,aAAapT,WAChCh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IACjDhqB,KAAKgxF,cAAc,GAE1B,CACD,mBAAArU,GACI,MAAMvnD,EAAQp1B,KAAKooC,aAAapT,WAC5BI,GACAA,EAAMqQ,sBAAsBzlC,KAAKq9E,qBACxC,EA6NL,MAAMsU,aAAa32C,OAKf,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACXmkF,yBAAyB,GAE7B5xF,KAAKi7C,KAAOA,EACZj7C,KAAKikB,MAAQuQ,EAAYujB,MAC5B,CACD,aAAApC,GACI,MAAO,MACV,CAMD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GAChBA,GACApO,EAAMwF,WAAW7E,KAAKyN,QAASA,EAEtC,CAID,WAAAytC,GACIl7C,KAAKygB,QACAzgB,KAAKq8B,QAAQ2T,aAGlBhwC,KAAKswD,QACR,CAID,MAAAA,GACQtwD,KAAKyN,QAAQokF,sBACb7xF,KAAKyN,QAAQokF,qBAAqB7xF,KAAKq8B,QAAQ2T,aAEnDhwC,KAAK8xF,qBACR,CACD,mBAAAA,GACC,CAID,KAAArxE,GACIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,EAGL,MAAMmvC,uBAAuBJ,KAKzB,WAAA9xF,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKgyF,yBAA0B;;AAE/BhyF,KAAKyN,QAAU,CAAEwkF,aAAa,GAC9BjyF,KAAKikB,MAAQuQ,EAAYujB,MAC5B,CACD,aAAApC,GACI,MAAO,UACV,CAMD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpB,MAAMykF,EAAcxwF,OAAOgD,OAAOhD,OAAOgD,OAAO,CAAA,EAAI+I,GAAU,CAAEwtC,KAAMj7C,KAAKi7C,KAAMnL,UAAWzT,EAAQ2T,cACpGhwC,KAAKyN,QAAUpO,EAAMqF,OAAO1E,KAAKyN,QAASA,GAC1CykF,EAAYxiC,kBAAqBxyB,GAAOl9B,KAAKmyF,sBAAsBj1D,GACnEg1D,EAAYriC,cAAiB3yB,GAAOl9B,KAAKoyF,mBAAmBl1D,GACxDg1D,EAAYrwE,WACZ7hB,KAAKgyF,yBAA0B,EAG/BE,EAAYrwE,WAAa,CAAElQ,SAAU0qB,EAAQrH,WAAWuI,yBAA0Bqc,WAAY,MAElGs4C,EAAYrwE,WAAW+3B,WAAa55C,KAAKq8B,QAAQwM,cAC5CuF,wBAAwBpuC,KAAKq8B,SAClCr8B,KAAKq7C,UACLr7C,KAAK2pD,KAAO,IAAIsD,SAASilC,GACrBlyF,KAAKyN,QAAQwkF,aACbjyF,KAAK48E,qBAEZ,CACD,WAAA1hC,GACIl7C,KAAKygB,QACLzgB,KAAKqyF,uBACLryF,KAAKswD,QACR,CACD,MAAAA,GACItwD,KAAKw+E,qBACLx+E,KAAK2pD,KAAKpT,SACb,CACD,mBAAAqmC,GACC,CACD,WAAAthC,GACIt7C,KAAK28E,sBACD38E,KAAK2pD,MACL3pD,KAAK2pD,KAAKtO,UACdr7C,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,mBAAA+5B,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKooC,aAAapT,WAC1ByQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,oBAAAgV,GACI,MAAMh2D,EAAUr8B,KAAKooC,aACrB,IAAKpoC,KAAKgyF,wBAAyB,CAC/B,MAAMrgF,EAAW0qB,EAAQrH,WAAWuI,yBACpCv9B,KAAK2pD,KAAKl8C,QAAQoU,WAAWlQ,SAAWA,CAC3C,CACJ,CACD,kBAAA6sE,GACI,MAAMzlE,EAAQ/Y,KAAKooC,aAAarT,WAChC,IAAKhc,GAASA,EAAM8F,UAChB,OACJ,IAAIsqD,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,iBAEd,MACM17D,EAAU,CAAEoS,MADG9G,EAAM8H,gBAAgB,CAAEiQ,QAAQ,EAAOC,QAAQ,EAAMC,QAAQ,IAC3CvrB,GAAI0jE,GAC3C9pE,EAAMqF,OAAO+I,EAASzN,KAAKyN,QAAQyrE,aACnCl5E,KAAKu/E,aAAe,IAAItN,UAAUxkE,EACrC,CACD,QAAAsnB,GACI,OAAO/0B,KAAKq8B,QAAQtH,UACvB,CACD,QAAAC,GACI,OAAOh1B,KAAKq8B,QAAQrH,UACvB,CACD,KAAAvU,GACQzgB,KAAK2pD,MACL3pD,KAAK2pD,KAAKlpC,OACjB,CACD,qBAAA0xE,CAAsBj1D,GAClBl9B,KAAKu/E,aAAajM,SAAS,CACvBtZ,OAAQ98B,EAAG0oB,YAAYniD,OACvB4vE,YAAa,KACbG,qBAAsB,CAACnzE,EAAMwf,KACzB,MAAM06D,EAASl6E,EAAKoF,GAEpB,OADAzF,KAAK88E,aAAavC,IACX,CAAK,GAGvB,CACD,kBAAA6X,CAAmBl1D,GACf,MAAM9H,EAAQp1B,KAAKg1B,WACb/O,EAAW5mB,EAAMuG,kBAAkBwvB,EAAM+I,aAAcjB,EAAGizB,UAC5DlqC,GAAY,IACZmP,EAAMuO,WAAW1d,EAAUiX,EAAGlX,UAC9BoP,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB4D,QACtBC,OAAQ5D,EAAkB7H,IAC1B5oB,OAAQ3D,OAGnB,CACD,YAAA88E,CAAa19D,GACTpf,KAAKooC,aAAarT,WAClB,MAAMK,EAAQp1B,KAAKooC,aAAapT,WAC1BpP,EAAMwP,EAAMqN,UAAU,CACxBE,YAAavjB,IACd,GAOH,OANAgW,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB4D,QACtBC,OAAQ5D,EAAkBkP,IAC1BpL,QAAStS,EACTjiB,OAAQ3D,OAEL4lB,CACV,EAOL,MAAM0sE,uBAAuBt3C,OAKzB,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAK2jE,MAAQ1oB,EACbj7C,KAAKikB,MAAQuQ,EAAY2kB,UACE,aAAvBn5C,KAAK2jE,MAAM7gB,UACX9iD,KAAK2jE,MAAM/gB,UAAY,2CACvB5iD,KAAK2jE,MAAQ3jE,KAAK2jE,MAAMjD,cAAc,OAE7C,CACD,aAAA/qB,GACI,MAAO,gBACV,CAID,WAAAuF,GACIl7C,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,MAAAA,GACItwD,KAAK2jE,MAAMoE,YAAc/nE,KAAKq8B,QAAQ+a,gBAAkBp3C,KAAKq8B,QAAQ+a,gBAAkB,GACvF,IAAIm7C,EAAgBvyF,KAAK2jE,MAAM/gB,UAAU/3C,QAAQ,QAAS,UAAUA,QAAQ,MAAO,gBACnF7K,KAAK2jE,MAAM/gB,UAAY2vC,CAC1B,CACD,WAAAj3C,GACIt7C,KAAKygB,OACR,CACD,KAAAA,GACIzgB,KAAK2jE,MAAM/gB,UAAY,EAC1B,EAML,MAAM4vC,sBAAsBx3C,OAKxB,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKw7C,QAAUP,EACfj7C,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,OAC7BtqC,KAAKikB,MAAQuQ,EAAYjI,GAC5B,CACD,aAAAopB,GACI,MAAO,kBACV,CAID,kBAAAwF,GACIn7C,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,EAChC,CAID,gBAAA8Q,GACIp7C,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,MAChC,EAuIL,SAASmoD,UAAUC,EAASC,EAAYC,EAAGC,GAEvC,OAAO,IAAKD,IAAMA,EAAIhkF,WAAU,SAAUC,EAASC,GAC/C,SAASgkF,UAAUtyF,GAAS,IAAM2I,KAAK0pF,EAAUhnE,KAAKrrB,GAAQ,CAAG,MAAO8+B,GAAKxwB,EAAOwwB,GAAO,CAC3F,SAASyzD,SAASvyF,GAAS,IAAM2I,KAAK0pF,EAAiB,MAAEryF,GAAU,CAAC,MAAO8+B,GAAKxwB,EAAOwwB,GAAO,CAC9F,SAASn2B,KAAK3E,GAAUA,EAAOwuF,KAAOnkF,EAAQrK,EAAOhE,OAJzD,SAASyyF,MAAMzyF,GAAS,OAAOA,aAAiBoyF,EAAIpyF,EAAQ,IAAIoyF,GAAE,SAAU/jF,GAAWA,EAAQrO,EAAO,GAAM,CAI1CyyF,CAAMzuF,EAAOhE,OAAOiM,KAAKqmF,UAAWC,SAAY,CAC9G5pF,MAAM0pF,EAAYA,EAAUtqE,MAAMmqE,EAASC,GAAc,KAAK9mE,OACtE,GACA,EAdA,SAAWs3C,GACPA,EAAoB,SAAI,YACxBA,EAAiB,MAAI,QACrBA,EAAsB,WAAI,aAC7B,CAJD,CAIGA,IAAcA,EAAY,CAAE,IAWJ,mBAApB+vB,iBAAiCA,gBAKxC,MAAMC,YACF,WAAAtzF,CAAYuoD,EAAW36C,GACnBzN,KAAKooD,UAAYA,EACjBpoD,KAAK4gD,MAAQthD,EAAKuU,QAAQ,SAAU,qBACpC7T,KAAKktD,UAAY,aACjBltD,KAAKozF,YAAc9zF,EAAKuU,QAAQ,SAAU,mBAC1C7T,KAAKyN,QAAU,GACfzN,KAAKqzF,gBAAiB,EACtBrzF,KAAKszF,wBAA0B,KAC3B,MAAMtjD,EAAchwC,KAAKooC,aAAa4H,YACtC,GAAKA,EAAY5oB,cA6BZ,CACD,MACMo3C,EADKx+D,KAAKuzF,mBACDz0B,aAAa,CACxBle,MAAOthD,EAAKuU,QAAQ,SAAU,oBAC9BkqD,SAAU,IAAM/9D,KAAKu2C,UACrBkrB,cAAc,IAElBzhE,KAAKwzF,mBACA/mF,MAAKwgC,IACNuxB,EAAIsC,QAAQ,IAEXl0D,OAAMqC,IACPuvD,EAAIsC,SACJ9gE,KAAKooC,aAAa4O,WAAW/nC,EAAM,GAE1C,KA5C+B,CAC5B,MAAMwkF,EAAiBzjD,EAAYvnB,gBAAgB7mB,OAC7C8xF,EAAgB1jD,EAAYnnB,WAAamnB,EAAYtnB,iBAErD81C,EADKx+D,KAAKuzF,mBACDz0B,aAAa,CACxBle,MAAOthD,EAAKuU,QAAQ,SAAU,oBAC9BuiD,QAAS92D,EAAKuU,QAAQ,SAAU,sBAC3BhJ,QAAQ,eAAgB,KACxBA,QAAQ,cAAe,GAAG6oF,KAC/B31B,SAAU,IAAM/9D,KAAKu2C,UACrBkrB,cAAc,IAElB,IAAIkyB,EAAgB,EACpB/oE,YAAW,KACPolB,EAAYnoB,QAAQ,CAAEK,OAAQurE,EAAgBtrE,MAAOurE,IAChDjnF,MAAKwgC,IACN0mD,GAAiB1mD,EAAErrC,OACnB,MAAMggE,EAAW+xB,EAAgBD,EACjCl1B,EAAIkD,cAAcpiE,EAAKuU,QAAQ,SAAU,sBACpChJ,QAAQ,eAAgB,GAAG8oF,KAC3B9oF,QAAQ,cAAe,GAAG6oF,MAC/Bl1B,EAAImD,eAAeC,EAAS,IAE3Bh1D,OAAMqC,IACPuvD,EAAIsC,SACJ9gE,KAAKooC,aAAa4O,WAAW/nC,EAAM,GACrC,GACH,GACN,CAgBA,EAEL5P,EAAMwF,WAAW7E,KAAKyN,QAASA,EAClC,CACD,IAAAs5B,CAAKkU,GACDj7C,KAAKi7C,KAAOA,EACZj7C,KAAK4zF,WAAarzC,MAAM,MAAOvgD,KAAKi7C,MAC/ByG,SAAS,GAAG1hD,KAAKktD,qBACjB9J,QACLpjD,KAAK6zF,kBAAoBtzC,MAAM,MAAOvgD,KAAKi7C,MAAMiG,OAAOkC,OAC3D,CACD,kBAAA0wC,GACI,OAAO,IAAIllF,SAASC,IAChB,MAAMklF,EAAK/zF,KAAKuzF,mBACVn9B,EAAUp2D,KAAKg0F,sBACfx1B,EAAMu1B,EAAGvyF,KAAK,CAChBo/C,MAAO5gD,KAAKozF,YACZ/rF,KAAM+uD,EACN0H,YAAY,EACZF,UAAU,EACVG,SAAU,KACN,MAAMk2B,EAAWj0F,KAAKk0F,uBAItB,OAHID,GACAplF,GAAQ,GAELolF,CAAQ,EAEnB75B,SAAU,KACNvrD,GAAQ,EAAM,IAGtB7O,KAAKm0F,kBAAkB31B,EAAI,GAElC,CACD,iBAAA21B,CAAkB31B,GACjB,CACD,mBAAAw1B,GACI,IAAII,EACA1gF,EAAI6sC,MAAM,OACTmB,SAAS,aACTzmB,SAAS,OAAOvnB,GAAK0gF,EAAkB1gF,EACvCguC,SAAS,IAAGlH,EAAa+oB,OACxB,8CACA,0CACDngB,UAEL,OADApjD,KAAKq0F,iBAAiB3gF,EAAE0vC,QAASgxC,GAC1B1gF,EAAE0vC,OACZ,CACD,gBAAAixC,CAAiBC,EAAMF,GACnB,IAAIG,EAAOH,EACP55C,EAAa+oB,SACbgxB,EAAOh0C,MAAM,MAAO6zC,GACf1yC,SAAS,iBACT0B,SAET7C,MAAMg0C,GACDt5D,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,YACZ8oC,QAAQ1jD,EAAKuU,QAAQ,SAAU,mBAC/BonB,SAAS,SAASvnB,GAAKA,EACvBjO,GAAG,gBACHlF,KAAK,YACL0W,KAAK,QACLiD,KAAK,QAASla,KAAK4gD,QAC3B,CACD,oBAAAszC,GACI,MAAMM,EAAeltF,SAASo5D,cAAc,iBAC5C,OAAiC,GAA7B8zB,EAAah0F,MAAMoB,SAEvB5B,KAAK4gD,MAAQ4zC,EAAah0F,OACnB,EACV,CACD,gBAAA+yF,GACI,OAAOvzF,KAAKooC,aACPS,cACAsG,WAAW,gBACnB,CACD,UAAAslD,GACI,MACMzkD,EADUhwC,KAAKooC,aACO4H,YAC5B,OAAQA,EAAYtnB,kBAAoBsnB,EAAYnnB,UACvD,CACD,gBAAA6rE,CAAiBxnF,GACblN,KAAK6zF,kBAAkBjxC,UAAY11C,EACnClN,KAAK6zF,kBAAkBhyC,UAAUn8B,IAAI,GAAG1lB,KAAKktD,2BAC7C3M,MAAMvgD,KAAK6zF,mBAAmB7yC,MACjC,CACD,wBAAA2zC,CAAyBznF,GACrB,MACM8iC,EADUhwC,KAAKooC,aACO4H,YAC5BhwC,KAAK6zF,kBAAkBjxC,UAAY11C,GAAW5N,EAAKuU,QAAQ,SAAU,oBAChEhJ,QAAQ,cAAe,GAAGmlC,EAAYnnB,cACtChe,QAAQ,eAAgB,GAAGmlC,EAAYtnB,oBACvC7d,QAAQ,YAAa,uCAAuC7K,KAAKktD,uCACtE,MAAMr7B,EAAO7xB,KAAK6zF,kBAAkBnzB,cAAc,KAAK1gE,KAAKktD,+BACxDr7B,GACAA,EAAK8gB,iBAAiB,QAAS3yC,KAAKszF,yBAExC/yC,MAAMvgD,KAAK4zF,YAAY1yC,OACvBX,MAAMvgD,KAAK6zF,mBAAmB7yC,MACjC,CACD,wBAAA4zC,GACIr0C,MAAMvgD,KAAK6zF,mBAAmB3yC,OAC9BX,MAAMvgD,KAAK4zF,YAAY5yC,MAC1B,CACD,UAAA5Y,GACI,OAAOpoC,KAAKooD,UAAUhgB,YACzB,CACD,QAAApT,GACI,OAAOh1B,KAAKooC,aAAapT,UAC5B,CACD,UAAA3Q,GACI,MAAO,CAAEu8B,MAAO5gD,KAAK4gD,MAAO3pC,KAAMjX,KAAK60F,UAC1C,CACD,YAAA/7E,CAAazY,GACLA,IACAL,KAAK4gD,MAAQvgD,EAAKugD,MAEzB,CACD,OAAArK,GACIv2C,KAAK40F,2BACD50F,KAAKy0F,aACLz0F,KAAKk7C,cAGLl7C,KAAK20F,0BAEZ,CACD,gBAAAnB,GACI,OAAOf,UAAUzyF,UAAM,OAAQ,GAAQ,YACnC,MAAMgwC,EAAchwC,KAAKooC,aAAa4H,YAChCyjD,EAAiBzjD,EAAYvnB,gBAAgB7mB,OAEnD,OAAOouC,EAAYnoB,QAAQ,CAAEK,OAAQurE,EAAgBtrE,MAAO6nB,EAAY7oB,YACnE1a,MAAKwgC,GACC+C,EAAY1mB,eACb1a,QAAQC,UACR7O,KAAKwzF,oBAE3B,GACK,CACD,QAAAsB,GACC,GAKL,SAAW1xB,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAe,IAAI,IAAM,MACnCA,EAAUA,EAAiB,MAAI,IAAM,QACrCA,EAAUA,EAAoB,SAAI,IAAM,WACxCA,EAAUA,EAAiB,MAAI,IAAM,QACrCA,EAAUA,EAAuB,YAAI,IAAM,aAC9C,CAZD,CAYGA,IAAcA,EAAY,CAAE,IAE/B,MAAM2xB,oBAAoB/5C,OACtB,aAAIkS,GACA,MAAO,YACV,CAKD,WAAArtD,CAAYm1F,GACR7nF,MAAM6nF,GACNh1F,KAAKi1F,UAAY7xB,EAAU8xB,IAC3Bl1F,KAAKm1F,oBAAsB,GAC3Bn1F,KAAK8vC,UAAY,KACjB9vC,KAAKo1F,sBAAwB,GAC7Bp1F,KAAKq1F,qBAAuB,GAC5Br1F,KAAKs1F,aAAe,EACpBt1F,KAAKu1F,YAAc,GACnBv1F,KAAKyN,QAAU,CACXwnF,UAAW7xB,EAAU8xB,IACrBM,cAAc,EACdC,cAAc,EACdC,OAAQ,CACJ10C,MAAM,EACN/D,SAAU,UAGlBj9C,KAAKw7C,QAAUw5C,EACfh1F,KAAKikB,MAAQuQ,EAAYujB,MAC5B,CAMD,IAAAhR,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK8vC,UAAYzT,EAAQ2T,YACzBhwC,KAAK+zC,WAAWtmC,EACnB,CAKD,OAAA8iD,GACI,IAAI/rD,EAA2B,MAAlBxE,KAAK8vC,UAIlB,OAHItrC,IACAA,EAASxE,KAAK8vC,UAAUpnB,iBAAmB,GAExClkB,CACV,CAKD,kBAAAmxF,GACI,OAAO31F,KAAKo1F,sBAAsBxzF,OAAS,GAAK5B,KAAKq1F,qBAAqBzzF,OAAS,CACtF,CAID,WAAAs5C,GACIl7C,KAAK41F,mBACL51F,KAAKswD,QACR,CACD,UAAAvc,CAAWtmC,GAGP,GAFApO,EAAMwF,WAAW7E,KAAKyN,QAASA,GAC/BzN,KAAKm1F,oBAAsBn1F,KAAK61F,yBACO,GAAnC71F,KAAKm1F,oBAAoBvzF,OACzB,MAAMoL,MAAM,uDAEZS,EAAQwnF,WAAaj1F,KAAKm1F,oBAAoBrvF,QAAQ2H,EAAQwnF,YAAc,EAC5Ej1F,KAAKi1F,UAAYxnF,EAAQwnF,UAGzBj1F,KAAKi1F,UAAYj1F,KAAKm1F,oBAAoB,EAEjD,CACD,UAAAW,GACI,OAAO91F,KAAKyN,OACf,CACD,gBAAAsoF,CAAiBC,GACb,OAAQA,GACJ,KAAK5yB,EAAU6yB,KACX,OAAO32F,EAAKuU,QAAQ,YAAa,QACrC,KAAKuvD,EAAU8yB,IACX,OAAO52F,EAAKuU,QAAQ,YAAa,OACrC,KAAKuvD,EAAU+yB,OACX,OAAO72F,EAAKuU,QAAQ,YAAa,UACrC,KAAKuvD,EAAUgzB,MACX,OAAO92F,EAAKuU,QAAQ,YAAa,SACrC,KAAKuvD,EAAUizB,SACX,OAAO/2F,EAAKuU,QAAQ,YAAa,YACrC,KAAKuvD,EAAUkzB,MACX,OAAOh3F,EAAKuU,QAAQ,YAAa,SACrC,KAAKuvD,EAAUmzB,MACX,OAAOj3F,EAAKuU,QAAQ,YAAa,SACrC,KAAKuvD,EAAUozB,UACX,OAAOl3F,EAAKuU,QAAQ,YAAa,aACrC,KAAKuvD,EAAUqzB,KACX,OAAOn3F,EAAKuU,QAAQ,YAAa,QACrC,KAAKuvD,EAAUszB,YACX,OAAOp3F,EAAKuU,QAAQ,YAAa,eACrC,QACI,OAAOvU,EAAKuU,QAAQ,YAAa,OAE5C,CACD,cAAA8iF,CAAehlF,EAAUilF,GAAgB,QACF,IAAxBjlF,EAASklF,aAChB72F,KAAKyN,QAAQioF,OAAS11F,KAAKyN,QAAQioF,QAAU,GAC7C11F,KAAKyN,QAAQioF,OAAO10C,KAAOrvC,EAASklF,YAExC72F,KAAKi1F,UAAYtjF,EAASsF,KAC1BjX,KAAKs1F,YAAc3jF,EAAS2jF,YAC5Bt1F,KAAKu1F,YAAY,GAAK5jF,EAASs4C,WAC3B2sC,GACA52F,KAAK82F,oBACZ,CAID,gBAAAlB,GACI,GAAI51F,KAAK8vC,UAAW,CAChB9vC,KAAKo1F,sBAAwB,GAC7Bp1F,KAAKq1F,qBAAuB,GAC5B,IAAI0B,EAAS/2F,KAAK8vC,UAAUptB,QAAQ+C,MACpC,IAAK,IAAI7gB,EAAI,EAAGA,EAAImyF,EAAQnyF,IAAK,CAC7B,MAAMqkB,EAASjpB,KAAK8vC,UAAUptB,QAAQ1e,IAAIY,GAC1C,IAAIoyF,EAAU/tE,EAAOhS,KACjBggF,EAAWhuE,EAAOhE,MACtBjlB,KAAKo1F,sBAAsB3wF,KAAK,CAAEkB,IAAKf,EAAGqgB,MAAOgyE,IAC7C53F,EAAM2I,cAAcgvF,IACpBh3F,KAAKq1F,qBAAqB5wF,KAAK,CAAEkB,IAAKf,EAAGqgB,MAAOgyE,GAEvD,CAYD,IAXyB,GAArBj3F,KAAKs1F,YACAt1F,KAAKo1F,sBACLhzF,QAAO8hB,GAAKA,EAAEve,KAAO3F,KAAKs1F,cAC1B1zF,SACD5B,KAAKs1F,aAAe,GAIxBt1F,KAAKs1F,YAAet1F,KAAKo1F,sBAAsBxzF,OAAS,EAClD5B,KAAKo1F,sBAAsB,GAAGzvF,KAAO,EAE3C3F,KAAKu1F,YAAY3zF,OAAQ,CACzB,MAAMw7E,EAAMp9E,KAAKq1F,qBAAqBvzF,KAAIkU,GAAKA,EAAErQ,MACjD3F,KAAKu1F,YAAcv1F,KAAKu1F,YAAYnzF,QAAOiV,GAAK+lE,EAAIt3E,QAAQuR,IAAM,IAC7DrX,KAAKu1F,YAAY3zF,SAClB5B,KAAKu1F,YAAev1F,KAAKq1F,qBAAqBzzF,OAAS,EACjD,GAAG4e,OAAOxgB,KAAKq1F,qBAAqB,GAAG1vF,KACvC,GAEb,MAEG3F,KAAKu1F,YAAev1F,KAAKq1F,qBAAqBzzF,OAAS,EACjD,GAAG4e,OAAOxgB,KAAKq1F,qBAAqB,GAAG1vF,KACvC,GAEV3F,KAAKk3F,WACR,CACJ,CACD,sBAAArB,GAII,OAHmB71F,KAAKyN,QAAQ0nF,oBAC1Bn1F,KAAKyN,QAAQ0nF,oBACbzzF,OAAOC,KAAKyhE,GAAWthE,KAAI8B,GAAOw/D,EAAUx/D,MAChCxB,QAAO6U,GAAQjX,KAAKm3F,cAAcrxF,QAAQmR,IAAS,GACxE,CACD,mBAAAmgF,GACI,OAAOp3F,KAAKi1F,SACf,CACD,MAAA3kC,GAEI,GADAtwD,KAAKygB,QACDzgB,KAAKuwD,WAAavwD,KAAK21F,sBACnB31F,KAAKq8B,QAAQ2T,YAAYnnB,YACtB7oB,KAAKq8B,QAAQ2T,YAAYtnB,iBAAmB,CACnD,IAAIgoC,EAAYppD,SAAS8iC,cAAc,OACvCuR,YAAY+U,EAAW,GAAG1wD,KAAKktD,oBAC/B,IAAImqC,EAAU/vF,SAAS8iC,cAAc,OAErC,GADAuR,YAAY07C,EAAS,GAAGr3F,KAAKktD,kBACzBltD,KAAKs3F,UAAW,CAChB,IAAIC,EAAoBjwF,SAAS8iC,cAAc,UAC/C,IAAK,IAAI4rD,KAAMh2F,KAAKm1F,oBAAqB,CACrC,IAAIqC,EAAOlwF,SAAS8iC,cAAc,UAClCotD,EAAKh3F,MAAQw1F,EAAGzhF,WAChBijF,EAAKj6E,KAAOvd,KAAK+1F,iBAAiBC,GAClCuB,EAAkBltD,YAAYmtD,EACjC,CACDD,EAAkB/2F,MAAQR,KAAKi1F,UAAU1gF,WACzCm8C,EAAUrmB,YAAYktD,GACtBA,EAAkB5kD,iBAAiB,UAAWzV,IAC1C,IAAIu6D,EAAQv6D,EAAGz5B,OAAOjD,MACtBR,KAAKi1F,UAAYtrF,SAAS8tF,GAC1Bz3F,KAAKu2C,SAAS,IAElBv2C,KAAK03F,YAAcpwF,SAAS8iC,cAAc,OAC1CuR,YAAY37C,KAAK03F,YAAa,GAAG13F,KAAKktD,sBACtCtR,YAAY57C,KAAK03F,aACjBL,EAAQhtD,YAAYrqC,KAAK03F,aACzB13F,KAAK23F,SAAWrwF,SAAS8iC,cAAc,OACvCuR,YAAY37C,KAAK23F,SAAU,GAAG33F,KAAKktD,qBACnCtR,YAAY57C,KAAK23F,UACjBN,EAAQhtD,YAAYrqC,KAAK23F,UACzB33F,KAAK43F,kBACL,IAAIC,EAAmBvwF,SAAS8iC,cAAc,OAC9CuR,YAAYk8C,EAAkB,GAAG73F,KAAKktD,2BACtC2qC,EAAiBj3C,MAAQ,WACzB8P,EAAUrmB,YAAYwtD,GACtBA,EAAiBllD,iBAAiB,SAAUzV,IACxCl9B,KAAK83F,gBAAgB,IAEzB93F,KAAK+3F,UAAU,IAClB,MAEG/3F,KAAKg4F,cAAcX,EAAS,8GAE3Br3F,KAAKyN,QAAQgoF,cACdz1F,KAAKw7C,QAAQnR,YAAYqmB,GAE7B1wD,KAAKw7C,QAAQnR,YAAYgtD,GACzBr3F,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,EAChC,MAEGtqC,KAAKw7C,QAAQ5jC,MAAM0yB,QAAU,MAEpC,CACD,aAAA0tD,CAAcX,EAAS95E,GACnB,IAAIq2E,EAAatsF,SAAS8iC,cAAc,OACxCuR,YAAYi4C,EAAY,GAAG5zF,KAAKktD,qBAChC0mC,EAAWlxC,UAAYnlC,EACvB85E,EAAQhtD,YAAYupD,EACvB,CAID,KAAAnzE,GACIzgB,KAAKw7C,QAAQoH,UAAY,EAC5B,CAKD,SAAAm1C,CAAUE,GACNp8C,YAAY77C,KAAK23F,UACbM,EAAQ,EACRrtE,YAAW,IAAM5qB,KAAKk4F,YAAYD,GAGlCj4F,KAAKk4F,UAEZ,CAID,eAAAN,GACI,IAAIO,EAAiB7wF,SAAS8iC,cAAc,OAC5C+tD,EAAepwB,YAAc,WAC7BpsB,YAAYw8C,EAAgB,GAAGn4F,KAAKktD,6BACpCltD,KAAK03F,YAAYrtD,YAAY8tD,GAE7B,IAAI5gC,EAAWjwD,SAAS8iC,cAAc,OACtCuR,YAAY4b,EAAU,GAAGv3D,KAAKktD,6BAC9BltD,KAAK03F,YAAYrtD,YAAYktB,GAC7B,IAAI6gC,EAA6B9wF,SAAS8iC,cAAc,QACxDyR,YAAYu8C,GACZA,EAA2BrwB,YAAc,eACzCxQ,EAASltB,YAAY+tD,GACrB,IAAIC,EAAsB/wF,SAAS8iC,cAAc,UACjDyR,YAAYw8C,GACZ9gC,EAASltB,YAAYguD,GACrB,IAAK,IAAIzyE,KAAO5lB,KAAKo1F,sBAAuB,CACxC,IAAIoC,EAAOlwF,SAAS8iC,cAAc,UAClCotD,EAAKh3F,MAAQolB,EAAIjgB,IAAI4O,WACrBijF,EAAKj6E,KAAOqI,EAAIX,MAChBozE,EAAoBhuD,YAAYmtD,EACnC,CACGx3F,KAAKs1F,aAAe,IACpB+C,EAAoB73F,MAAQR,KAAKs1F,YAAY/gF,YAEjD8jF,EAAoB1lD,iBAAiB,UAAWzV,IAC5Cl9B,KAAKs1F,YAAc3rF,SAASuzB,EAAGz5B,OAAOjD,OACtCR,KAAK82F,qBACL92F,KAAK83F,gBAAe,KAChB93F,KAAK+3F,UAAU,IAAI,GACrB,IAGN,IAAIO,EAAUhxF,SAAS8iC,cAAc,OACrCuR,YAAY28C,EAAS,GAAGt4F,KAAKktD,6BAC7BltD,KAAK03F,YAAYrtD,YAAYiuD,GAC7B,IAAIC,EAA4BjxF,SAAS8iC,cAAc,QACvDyR,YAAY08C,GACZA,EAA0BxwB,YAAc,cACxCuwB,EAAQjuD,YAAYkuD,GACpB,IAAIC,EAAqBlxF,SAAS8iC,cAAc,UAChDyR,YAAY28C,GACZF,EAAQjuD,YAAYmuD,GACpB,IAAK,IAAI5yE,KAAO5lB,KAAKq1F,qBAAsB,CACvC,IAAImC,EAAOlwF,SAAS8iC,cAAc,UAClCotD,EAAKh3F,MAAQolB,EAAIjgB,IAAI4O,WACrBijF,EAAKj6E,KAAOqI,EAAIX,MAChBuzE,EAAmBnuD,YAAYmtD,EAClC,CACGx3F,KAAKu1F,YAAY3zF,OAAS,GAAK5B,KAAKu1F,YAAY,IAAM,IACtDiD,EAAmBh4F,MAAQR,KAAKu1F,YAAY,GAAGhhF,YAEnDikF,EAAmB7lD,iBAAiB,UAAWzV,IAC3Cl9B,KAAKu1F,YAAY,GAAK5rF,SAASuzB,EAAGz5B,OAAOjD,OACzCR,KAAK82F,qBACL92F,KAAK83F,gBAAe,KAChB93F,KAAK+3F,UAAU,IAAI,GACrB,GAET,CACD,wBAAAU,GACI,OAAOz4F,KAAKo1F,qBACf,CACD,uBAAAsD,GACI,OAAO14F,KAAKq1F,oBACf,CACD,mBAAAsD,GACI,OAAO34F,KAAKs1F,WACf,CACD,kBAAAsD,GACI,OAAO54F,KAAKu1F,YAAY,EAC3B,CAKD,cAAAuC,CAAe/tE,GACX,IAAI8uE,EACA7sF,GD3pSZ,SAASs1C,UAAU9F,GACf,MAAgC,QAAzBA,EAAQ5jC,MAAM0yB,SACS,GAAvBkR,EAAQ+F,aACgB,GAAxB/F,EAAQgG,YACnB,CCwpSYF,CAAUthD,KAAK23F,WAKfkB,EAAQ74F,KAAK03F,YACb1rF,EAAShM,KAAK23F,WALdkB,EAAQ74F,KAAK23F,SACb3rF,EAAShM,KAAK03F,aDprS1B,SAASoB,iBAAiBD,EAAO7sF,EAAQyB,GAChCA,IACDA,EAAU,CAAA,GAETA,EAAQ68B,UACT78B,EAAQ68B,QAAU,IAEjB78B,EAAQ8iF,WACT9iF,EAAQ8iF,SAAW,KAGvB30C,YAAYi9C,GACZh9C,YAAY7vC,EAAQyB,EAAQ68B,SACxB78B,EAAQsrF,UACRtrF,EAAQsrF,UAEhB,CC0qSQD,CAAiBD,EAAO7sF,EAAQ,CAC5B+sF,SAAUhvE,GAEjB,EAGL,MAAMivE,sBAAsBjE,YAKxB,WAAAl1F,CAAYm1F,GACR7nF,MAAM6nF,GACNh1F,KAAK6pE,OAAS,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ7pE,KAAKi5F,YAAc,GACnBj5F,KAAKk5F,aAAe,GACpBl5F,KAAKm3F,cAAgB,CACjB/zB,EAAU+yB,OACV/yB,EAAU8yB,IACV9yB,EAAU6yB,KACV7yB,EAAUqzB,KACVrzB,EAAUszB,YACVtzB,EAAUizB,SACVjzB,EAAUkzB,MACVlzB,EAAUmzB,MACVnzB,EAAU8xB,KAIdl1F,KAAKyN,QAAQioF,OAAS,CAClB10C,MAAM,EACN/D,SAAU,SAEjB,CACD,aAAAtH,GACI,MAAO,cACV,CACD,iBAAOwjD,GACH,MAAwB,oBAAVC,KACjB,CACD,OAAA9B,GACI,OAAO0B,cAAcG,YACxB,CACD,SAAAjC,GACQ8B,cAAcG,cAAgBn5F,KAAKs1F,aAAe,GAC/Ct1F,KAAKu1F,aAAev1F,KAAKu1F,YAAY3zF,OAAS,GACjD5B,KAAK82F,oBAEZ,CACD,QAAAoB,GACI,GAAIc,cAAcG,cAAgBn5F,KAAK8vC,WAChC9vC,KAAK8vC,UAAUpnB,iBAAmB,EAAG,CACxC,IAAI2wE,EAASr5F,KAAKs5F,iBAEdC,EADcv5F,KAAKw5F,eAAex5F,KAAK23F,UACZvvD,WAAW,MAC1C,IAAIgxD,MAAMG,EAAcF,EAC3B,CACJ,CACD,kBAAAvC,GACI,GAAI92F,KAAK8vC,UAAW,CAChB9vC,KAAKi5F,YAAc,GACnBj5F,KAAKk5F,aAAe,GACpB,MAAMzxE,EAAOznB,KAAK8vC,UAAUrnB,gBAC5B,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAC7B5E,KAAKi5F,YAAYx0F,KAAKgjB,EAAK7iB,GAAGigB,SAAS7kB,KAAKs1F,cAC5Ct1F,KAAKk5F,aAAaz0F,KAAKgjB,EAAK7iB,GAAGigB,SAAS7kB,KAAKu1F,YAAY,IAEhE,CACJ,CACD,cAAAiE,CAAev+C,GACX,IAAIz2C,EAEAi1F,EAAWx+C,EAAK1zC,qBAAqB,UAOzC,OALI/C,EADAi1F,GAAYA,EAAS73F,OAAS,EACrB63F,EAAS,GAGTl+C,WAAWN,EAAM,UAEvBz2C,CACV,CACD,cAAA80F,GACI,IAGII,EAHAC,EAAa,GACbC,EAAc55F,KAAK8vC,UAAUptB,QAAQ1e,IAAIhE,KAAKu1F,YAAY,IAAItwE,MAC9D40E,GAAY,EAEhB,GAAI75F,KAAKi1F,WAAa7xB,EAAU8xB,KACzBl1F,KAAKi1F,WAAa7xB,EAAUizB,UAC5Br2F,KAAKi1F,WAAa7xB,EAAUkzB,OAC5Bt2F,KAAKi1F,WAAa7xB,EAAU8yB,KAC5Bl2F,KAAKi1F,WAAa7xB,EAAU+yB,OAC/B,IAAK,IAAIvxF,EAAI,EAAGA,EAAI5E,KAAKi5F,YAAYr3F,OAAQgD,IACzC+0F,EAAWl1F,KAAKzE,KAAK6pE,OAAOjlE,EAAI5E,KAAK6pE,OAAOjoE,cAIhD+3F,EAAa,CAAC35F,KAAK6pE,OAAO,IAE1B7pE,KAAKi1F,WAAa7xB,EAAUqzB,MACzBz2F,KAAKi1F,WAAa7xB,EAAUszB,cAC/BmD,GAAY,EACZH,EAAc15F,KAAK6pE,OAAO,IAE9B7pE,KAAKyN,QAAQioF,OAAS11F,KAAKyN,QAAQioF,QAAU,GAC7C,MAAMoE,EAAW,CACbz5F,KAAML,KAAKk5F,aACXxoB,gBAAiBipB,EACjBD,YAAaA,EACbz0E,MAAO20E,EACPG,KAAMF,GAEN75F,KAAKi1F,WAAa7xB,EAAUszB,cAC5BoD,EAASE,QAAUh6F,KAAKi1F,YAAc7xB,EAAUszB,YAC5CoD,EAASG,YAAcj6F,KAAKi1F,YAAc7xB,EAAUszB,aAE5D,MAAMwD,EAAgBl6F,KAAKyN,QAAQioF,OAAO10C,OAAShhD,KAAKi1F,WAAa7xB,EAAU8xB,KACxEl1F,KAAKi1F,WAAa7xB,EAAUmzB,OAASv2F,KAAKi1F,WAAa7xB,EAAUkzB,OACjEt2F,KAAKi1F,WAAa7xB,EAAUizB,UACnC,MAAO,CACHp/E,KAAMjX,KAAKm6F,eACX95F,KAAM,CACF+5F,SAAU,CAACN,GACXO,OAAQr6F,KAAKi5F,aAEjBxrF,QAAS,CACLioF,OAAQ,CACJprD,QAAS4vD,EACTj9C,SAAUj9C,KAAKyN,QAAQioF,OAAOz4C,UAAY,UAE9C2D,MAAO,CACHtW,SAAS,EACT/sB,KAAMq8E,IAIrB,CACD,YAAAO,GACI,OAAQn6F,KAAKi1F,WACT,KAAK7xB,EAAU+yB,OACX,MAAO,MACX,KAAK/yB,EAAU8yB,IACX,MAAO,gBACX,KAAK9yB,EAAU6yB,KACf,KAAK7yB,EAAUszB,YACf,KAAKtzB,EAAUqzB,KACX,MAAO,OACX,KAAKrzB,EAAUizB,SACX,MAAO,WACX,KAAKjzB,EAAUkzB,MACX,MAAO,YACX,KAAKlzB,EAAUmzB,MACX,MAAO,QACX,KAAKnzB,EAAU8xB,IAEf,QACI,MAAO,MAElB,EAGL,MAAMoF,0BAA0BvF,YAK5B,WAAAl1F,CAAYm1F,GACR7nF,MAAM6nF,GACNh1F,KAAKm3F,cAAgB,CACjB/zB,EAAU+yB,OACV/yB,EAAU8yB,IACV9yB,EAAUozB,UACVpzB,EAAUgzB,MACVhzB,EAAU6yB,KACV7yB,EAAUqzB,KACVrzB,EAAUszB,YACVtzB,EAAU8xB,IACV9xB,EAAUizB,UAEdr2F,KAAKyN,QAAQioF,OAAS,CAClB10C,MAAM,EACN/D,SAAU,QAEjB,CACD,aAAAtH,GACI,MAAO,aACV,CACD,OAAA2hD,GACI,OAAOgD,kBAAkBC,iBAC5B,CACD,sBAAOA,GACH,MAAyB,oBAAXC,aAAmD,IAAlBA,OAAOC,MACzD,CACD,SAAAvD,GACQoD,kBAAkBC,mBAAqBv6F,KAAKs1F,aAAe,GACxDt1F,KAAKu1F,aAAev1F,KAAKu1F,YAAY3zF,OAAS,IACjD5B,KAAK06F,eACD,IAAIF,OAAOG,cAAcC,SAAS56F,KAAK66F,yBAC3C76F,KAAK82F,qBAEZ,CACD,mBAAAgE,CAAoB7jF,GAChB,OAAQA,GACJ,KAAKtY,EAAS6D,KACV,MAAO,OACX,KAAK7D,EAASK,SACV,MAAO,WACX,KAAKL,EAAS4D,KACV,MAAO,YACX,KAAK5D,EAASmE,KACd,KAAKnE,EAASoE,KACd,KAAKpE,EAASqE,MACd,KAAKrE,EAASsE,MACd,KAAKtE,EAASwE,SACd,KAAKxE,EAASuE,MACV,MAAO,SACX,QACI,MAAO,SAElB,CACD,oBAAA63F,CAAqBv6F,EAAOyW,GACxB,OAAQA,IACCtY,EAAS4yB,KACH/wB,EAAQA,EAAM+T,WAAa,KAE3B/T,CAElB,CACD,qBAAAq6F,GACI,MAAMG,EAAc,IAAIR,OAAOG,cAAcM,UACvCv4E,EAAU1iB,KAAK8vC,UAAUptB,QAC/B,IAAK,IAAI9d,EAAI,EAAGA,EAAI8d,EAAQ+C,MAAO7gB,IAAK,CACpC,MAAMqkB,EAASvG,EAAQ1e,IAAIY,GAC3Bo2F,EAAYv4D,UAAUziC,KAAK86F,oBAAoB7xE,EAAOhS,MAAOgS,EAAOhE,MAAOgE,EAAOxjB,GACrF,CACD,MAAMgiB,EAAOznB,KAAK8vC,UAAUrnB,gBAC5BuyE,EAAYE,QAAQzzE,EAAK7lB,QACzB,IAAK,IAAIgD,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM8f,EAAM+C,EAAK7iB,GACjB,IAAK,IAAI44B,EAAI,EAAGA,EAAI9a,EAAQ+C,MAAO+X,IAC/Bw9D,EAAYG,QAAQv2F,EAAG44B,EAAGx9B,KAAK+6F,qBAAqBr2E,EAAIG,SAAS2Y,GAAI9a,EAAQ1e,IAAIw5B,GAAGvmB,MAE3F,CACD,OAAO+jF,CACV,CACD,QAAA9C,GACI,GAA2B,MAAvBl4F,KAAK06F,eAAwB,CAC7B16F,KAAKyN,QAAQioF,OAAS11F,KAAKyN,QAAQioF,QAAU,GAC7C,IAAI0F,EAAe,CACfh0F,MAAO,OACPg1C,OAAQ,OACRi/C,UAAW,CAAEj0F,MAAOpH,KAAKs7F,oBAEzBt7F,KAAKi1F,WAAa7xB,EAAUizB,WAC5B+E,EAAaG,QAAU,IAEtBv7F,KAAKyN,QAAQioF,OAAO10C,KAIrBo6C,EAAa1F,OAAS,CAAEz4C,SAAUj9C,KAAKyN,QAAQioF,OAAOz4C,UAHtDm+C,EAAa1F,OAAS,OAKd11F,KAAKw7F,YAAYx7F,KAAK23F,UAC5B8D,KAAKz7F,KAAK06F,eAAgBU,EACnC,CACJ,CACD,iBAAAE,CAAkBrG,GACd,OAAIA,GAAa7xB,EAAU8xB,IAChB,OAGA,KAEd,CACD,kBAAA4B,GACQ92F,KAAK06F,gBACL16F,KAAK06F,eAAegB,WAAW,GAAGl7E,OAAOxgB,KAAKs1F,aAAa90E,OAAOxgB,KAAKu1F,aAE9E,CACD,WAAAiG,CAAYvgD,GACR,OAAQj7C,KAAKi1F,WACT,KAAK7xB,EAAU+yB,OACX,OAAO,IAAIqE,OAAOG,cAAcgB,YAAY1gD,GAChD,KAAKmoB,EAAUozB,UACX,OAAO,IAAIgE,OAAOG,cAAcnE,UAAUv7C,GAC9C,KAAKmoB,EAAU8yB,IACX,OAAO,IAAIsE,OAAOG,cAAciB,SAAS3gD,GAC7C,KAAKmoB,EAAUgzB,MACX,OAAO,IAAIoE,OAAOG,cAAckB,WAAW5gD,GAC/C,KAAKmoB,EAAU6yB,KACX,OAAO,IAAIuE,OAAOG,cAAcmB,UAAU7gD,GAC9C,KAAKmoB,EAAUqzB,KACX,OAAO,IAAI+D,OAAOG,cAAcoB,UAAU9gD,GAC9C,KAAKmoB,EAAUszB,YACX,OAAO,IAAI8D,OAAOG,cAAcqB,iBAAiB/gD,GACrD,KAAKmoB,EAAU8xB,IACf,KAAK9xB,EAAUizB,SAEf,QACI,OAAO,IAAImE,OAAOG,cAAcsB,SAAShhD,GAEpD,EAGL,MAAMihD,mBAAmB/I,YACrB,WAAAtzF,GACIsN,SAAS0tE,WACT76E,KAAK4gD,MAAQthD,EAAKuU,QAAQ,SAAU,QAAS,cAC7C7T,KAAKozF,YAAc9zF,EAAKuU,QAAQ,SAAU,QAAS,WACtD,CACD,IAAAkzB,CAAKkU,GACD9tC,MAAM45B,KAAKkU,GACPq/C,kBAAkBC,kBAClBv6F,KAAKm8F,MAAQ,IAAI7B,kBAAkBt6F,KAAK4zF,YAGxC5zF,KAAKm8F,MAAQ,IAAInD,cAAch5F,KAAK4zF,YAExC,MAAMuB,EAAsBn1F,KAAKooD,UAAU36C,QACrCzN,KAAKooD,UAAU36C,QAAQ0nF,oBACvB,KACNn1F,KAAKm8F,MAAMp1D,KAAK/mC,KAAKooC,aAAc,CAC/BstD,OAAQ,CACJ10C,MAAM,GAEVw0C,cAAc,EACdC,cAAc,EACdN,oBAAqBA,IAGzB50C,MAAMvgD,KAAKi7C,MAAMiG,MACpB,CACD,OAAA7F,GACQr7C,KAAKm8F,OACLn8F,KAAKm8F,MAAM9gD,SAElB,CACD,OAAAw5C,GACI,OAAO1xB,EAAUi2B,KACpB,CACD,gBAAA/E,CAAiBC,EAAMF,GACnBjnF,MAAMknF,iBAAiBC,EAAMF,GAC7B,MAAM7wB,EAAO/oB,EAAa+oB,OACpB64B,EAAa74B,EAAO,+BAAiC,4BAE3D,IAAIg0B,EAAoBjwF,SAAS8iC,cAAc,UAC/CmtD,EAAkB9xF,GAAK,sBACvB8xF,EAAkBh3F,KAAO,sBACzB,IAAK,IAAIy1F,KAAMh2F,KAAKm8F,MAAMtG,yBAA0B,CAChD,IAAI2B,EAAOlwF,SAAS8iC,cAAc,UAClCotD,EAAKh3F,MAAQw1F,EAAGzhF,WAChBijF,EAAKj6E,KAAOvd,KAAKm8F,MAAMpG,iBAAiBC,GACxCuB,EAAkBltD,YAAYmtD,EACjC,CACDD,EAAkB/2F,MAAQR,KAAKm8F,MAAM/E,sBAAsB7iF,WACtDvU,KAAK2R,WACN3R,KAAKm8F,MAAMvG,mBACX51F,KAAK2R,SAAW,CACZsF,KAAMjX,KAAKm8F,MAAM/E,sBAAsB7iF,WACvC+gF,YAAa,GAAGt1F,KAAKm8F,MAAMxD,uBAAyB,EAAI34F,KAAKm8F,MAAMxD,sBAAwB,KAC3F1uC,WAAY,GAAGjqD,KAAKm8F,MAAMvD,sBAAwB,EAAI54F,KAAKm8F,MAAMvD,qBAAuB,KACxF/B,YAAY,IAIpB,MAAMwB,EAAsB/wF,SAAS8iC,cAAc,UACnDiuD,EAAoB93F,KAAO,wBAC3B83F,EAAoB5yF,GAAK,wBACzB,IAAK,MAAMmgB,KAAO5lB,KAAKm8F,MAAM1D,2BAA4B,CACrD,MAAMjB,EAAOlwF,SAAS8iC,cAAc,UACpCotD,EAAKh3F,MAAQolB,EAAIjgB,IAAI4O,WACrBijF,EAAKj6E,KAAOqI,EAAIX,MAChBozE,EAAoBhuD,YAAYmtD,EACnC,CACDa,EAAoB73F,MAAQR,KAAK2R,SAAS2jF,YAE1C,MAAMkD,EAAqBlxF,SAAS8iC,cAAc,UAClDouD,EAAmB/yF,GAAK,uBACxB+yF,EAAmBj4F,KAAO,uBAC1B,IAAK,MAAMqlB,KAAO5lB,KAAKm8F,MAAMzD,0BAA2B,CACpD,MAAMlB,EAAOlwF,SAAS8iC,cAAc,UACpCotD,EAAKh3F,MAAQolB,EAAIjgB,IAAI4O,WACrBijF,EAAKj6E,KAAOqI,EAAIX,MAChBuzE,EAAmBnuD,YAAYmtD,EAClC,CACDgB,EAAmBh4F,MAAQR,KAAK2R,SAASs4C,WAAW11C,WACpD,IAAIs9C,EAAUuiC,EACd,MAAMlyB,WAAa,IACXqB,EACOhjB,MAAM,MAAO6zC,GACf1yC,SAAS,iBACT0B,QAGEgxC,EAGX7wB,EACAhjB,MAAM+zC,GACD9zC,gBAAgB0hB,cAGrB3hB,MAAM6zC,GACDn5D,SAAS,OACTA,SAAS,OAElB42B,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,uBACZqD,KAAKje,EAAKuU,QAAQ,SAAU,QAAS,6BACrConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTlB,gBAAgB+2C,KACrB1lC,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,yBACZqD,KAAKje,EAAKuU,QAAQ,SAAU,QAAS,+BACrConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTlB,gBAAgB63C,KACrBxmC,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,wBACZqD,KAAKje,EAAKuU,QAAQ,SAAU,QAAS,8BACrConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTlB,gBAAgBg4C,KACrB3mC,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,OACTA,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS06C,GACTnhE,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,YACTzmB,SAAS,SAASvnB,IACnBA,EACKjO,GAAG,eACHwR,KAAK,YACNjX,KAAK2R,SAASklF,YACdnjF,EAAEwG,KAAK,UAAW,GAAG,IAExB8oC,QAAQ,IAAM1jD,EAAKuU,QAAQ,SAAU,QAAS,uBACtD,CACD,iBAAAsgF,CAAkB31B,GACVx+D,KAAKooC,aAAa4H,YAAYttB,QAAQoD,WAAW1jB,QAAOwjB,GAAOvmB,EAAM2I,cAAc4d,EAAI3O,QAAOrV,QAAU,IACxG48D,EAAI0C,UAAU,0EAA2E,SACzF1C,EAAI+B,yBAAyBhnC,UAAW,EAE/C,CACD,oBAAA26D,GACI,MAAM1vF,EAAS2I,MAAM+mF,uBACfqD,EAAoBjwF,SAASgoD,eAAe,uBAC5C0mC,EAAKrsF,SAAS4tF,EAAkB/2F,OAChC63F,EAAsB/wF,SAASgoD,eAAe,yBAC9CgmC,EAAc3rF,SAAS0uF,EAAoB73F,OAC3Cg4F,EAAqBlxF,SAASgoD,eAAe,wBAC7CrF,EAAatgD,SAAS6uF,EAAmBh4F,OAEzCq2F,EADkBvvF,SAASgoD,eAAe,eACbgX,QAYnC,OAXI9hE,IACAxE,KAAK2R,SAAW,CACZsF,KAAM++E,EACNV,YAAaA,EACbrrC,WAAYA,EACZ4sC,WAAYA,GAEZ72F,KAAKy0F,cACLz0F,KAAKu2C,WAGN/xC,CACV,CACD,WAAA63F,GACI,OAAOr8F,KAAK2R,QACf,CACD,UAAA0S,GACI,MAAMhkB,EAAO8M,MAAMkX,aAOnB,OANIrkB,KAAK2R,WACLtR,EAAK40F,UAAYj1F,KAAK2R,SAASsF,KAC/B5W,EAAKi8F,SAAWt8F,KAAK2R,SAAS2jF,YAC9Bj1F,EAAKk8F,QAAUv8F,KAAK2R,SAASs4C,WAC7B5pD,EAAKm8F,QAAUx8F,KAAK2R,SAASklF,YAE1Bx2F,CACV,CACD,YAAAyY,CAAazY,GACT8M,MAAM2L,aAAazY,GACfA,IACAL,KAAK2R,SAAW,CACZsF,KAAM5W,EAAK40F,UACXhrC,WAAY5pD,EAAKk8F,QACjBjH,YAAaj1F,EAAKi8F,SAClBzF,WAAYx2F,EAAKm8F,SAG5B,CACD,WAAAthD,GACQl7C,KAAKm8F,QACDn8F,KAAK2R,UACL3R,KAAKm8F,MAAMxF,eAAe32F,KAAK2R,UAEnC3R,KAAKm8F,MAAMvG,mBACX51F,KAAKm8F,MAAM5lD,UAElB,CACD,QAAAu+C,GACI90F,KAAKu2C,SACR,GAIL,SAAW8sB,GACPA,EAAc,IAAI,MAClBA,EAAkB,QAAI,MACtBA,EAAc,IAAI,MAClBA,EAAc,IAAI,MAClBA,EAAgB,MAAI,OACvB,CAND,CAMGA,IAAaA,EAAW,CAAE,IAE7B,SAAWC,GACPA,EAAcA,EAA2B,YAAI,GAAK,cAClDA,EAAcA,EAAwB,SAAI,GAAK,WAC/CA,EAAcA,EAAwB,SAAI,GAAK,UAClD,CAJD,CAIGA,IAAkBA,EAAgB,CAAE,IACvC,MAAMjY,EAAa,aACnB,MAAMoxC,wBAAwBtJ,YAC1B,WAAAtzF,GACIsN,SAAS0tE,WACT76E,KAAK4gD,MAAQthD,EAAKuU,QAAQ,SAAU,QAAS,cAC7C7T,KAAKozF,YAAc9zF,EAAKuU,QAAQ,SAAU,QAAS,YACnD7T,KAAK08F,WAAa,IAAI/1E,aACzB,CACD,IAAAogB,CAAKkU,GACD9tC,MAAM45B,KAAKkU,GACXj7C,KAAKyN,QAAQkvF,YAAc38F,KAAKyN,QAAQkvF,aAAe,IACvD38F,KAAKyN,QAAQ6gD,kBAAoBtuD,KAAKyN,QAAQ6gD,mBAAqB,GACnEtuD,KAAK2pD,KAAO,IAAIsD,SAAS,CACrBhS,KAAMj7C,KAAK4zF,WACX9jD,UAAW9vC,KAAK08F,WAChB9uC,OAAQ,CACJ92B,SAAS,EACT9O,SAAUhoB,KAAKyN,QAAQkvF,aAE3BruC,kBAAmBtuD,KAAKyN,QAAQ6gD,kBAChCZ,kBAAkB,EAClBW,gBAAgB,EAChBV,eAAe,EACfkI,kBAAmB,CAAC5sC,EAAQ2zE,KACxB,GAAI3zE,EAAOghC,WAAY,CACnB,GAA4B,SAAxBhhC,EAAOghC,WAAWxkD,GAClB,MAAO,CAACjF,EAAOyoB,EAAQytC,EAAMmmC,KACzBD,EAAgBp8F,EAAOyoB,EAAQytC,EAAMmmC,GACrCnmC,EAAK7U,UAAUn8B,IAAI,mBAAmB,EAG9C,GAAI1lB,KAAK2R,SAASmrF,UAAW,CAGzB,GAD6B,IADZ98F,KAAK08F,WAAWh6E,QAAQwD,SAAS+C,EAAOghC,WAAWxkD,IAGhE,MAAO,CAACjF,EAAOyoB,EAAQytC,EAAMmmC,KACbvlF,OAAO3N,SAASkzF,EAAM5mC,aAAa,mBACxBj2D,KAAK08F,WAAWh0E,iBAAmB,IAEtDloB,EAAQlB,EAAKuU,QAAQ,SAAU,QAAS,mBAE5C+oF,EAAgBp8F,EAAOyoB,EAAQytC,EAAMmmC,EAAM,CAGtD,CACJ,IAGZ,CACD,OAAAhI,GACI,OAAO1xB,EAAU45B,UACpB,CACD,OAAA1hD,GACQr7C,KAAK2pD,MACL3pD,KAAK2pD,KAAKtO,SAEjB,CACD,2BAAA2hD,CAA4BC,GACxB,MAAMlkF,EAAQ/Y,KAAKooC,aAAarT,WAC1BmoE,EAAM38C,MAAM,UACZ/vB,EAAY9uB,OAAOC,KAAK0hE,GAAUvhE,KAAI6E,GAAK08D,EAAS18D,KAC1D,IAAK,MAAMw2F,KAAY3sE,EACnB0sE,EAAIjiE,SAAS,UAAUvnB,IACnBA,EACKwG,KAAK,QAASijF,GACd5/E,KAAKxE,EAAMuZ,uBAAuB6qE,GAAU,IAGzD,MAAM1vF,EAAUyvF,EAAI95C,QAAQ8Q,iBAAiB,UAW7C,OAVgBltD,MAAZi2F,EACAxvF,EAAQ8J,SAAQstC,IACRA,EAAOrkD,OAASy8F,IAChBp4C,EAAOC,UAAW,EACrB,IAILr3C,EAAQ,GAAGq3C,UAAW,EAEnBo4C,CACV,CACD,0BAAAE,CAA2BC,EAAcC,EAASC,GAC9C,MAAMztD,EAAY9vC,KAAKw9F,sBACjBN,EAAM38C,MAAM,UAClB,IAAIk9C,EAAuB,KACvBC,EAAc,EAClB,IAAK,IAAI94F,EAAI,EAAGA,EAAIkrC,EAAUptB,QAAQ+C,MAAO7gB,IAAK,CAC9C,MAAMqkB,EAAS6mB,EAAUptB,QAAQ1e,IAAIY,GAC/BqyF,EAAWhuE,EAAOhE,MAClB+xE,EAAU/tE,EAAOhS,KACjBkM,EAAQ8F,EAAOxjB,GACjB43F,GAAgBA,EAAav3F,QAAQkxF,GAAW,IAEvB,OAAzByG,GAAiCp+F,EAAM2I,cAAcgvF,KACrDyG,EAAuBC,GAE3BR,EAAIjiE,SAAS,UAAUvnB,IACnBA,EACKwG,KAAK,QAASiJ,GACd5F,KAAK05E,EAAS,IAEvByG,IACH,CACD,MAAMjwF,EAAUxJ,MAAM2e,KAAKs6E,EAAI95C,QAAQ8Q,iBAAiB,WACxD,GAAIzmD,EAAQ7L,OAAS,EACjB,GAAeoF,MAAXs2F,GACA,IAAK,MAAMz4C,KAAUp3C,EACjB,GAAIo3C,EAAOrkD,OAAS88F,EAAS,CACzBJ,EAAI95C,QAAQ5iD,MAAQqkD,EAAOrkD,MAC3B,KACH,OAIL,OAAQ+8F,GACJ,KAAKj6B,EAAcq6B,YACfT,EAAI95C,QAAQ5iD,MAAQiN,EAAQ,GAAGjN,MAC/B,MAEJ,KAAK8iE,EAAcs6B,SACfV,EAAI95C,QAAQ5iD,MAAQiN,EAAQ7L,OAAS,EAAI6L,EAAQ,GAAGjN,MAAQiN,EAAQ,GAAGjN,MACvE,MAEJ,KAAK8iE,EAAcu6B,SACfX,EAAI95C,QAAQ5iD,MAAiC,OAAzBi9F,EAAgChwF,EAAQ,GAAGjN,MAAQiN,EAAQgwF,GAAsBj9F,MAMrH,OAAO08F,CACV,CACD,gBAAA7I,CAAiBC,EAAMF,GACnBjnF,MAAMknF,iBAAiBC,EAAMF,GAC7B,MAAMziF,EAAW3R,KAAK2R,UAAY,CAAEmrF,WAAW,EAAMgB,WAAW,GAC1DC,EAAW,CAACp/F,EAAS+D,OAAQ/D,EAAS6D,KAAM7D,EAASK,SAAUL,EAASqE,MAC1ErE,EAASsE,MAAOtE,EAASoE,KAAMpE,EAASmE,MACtCk7F,EAAa,CAACr/F,EAAS+D,OAAQ/D,EAASuE,MAAOvE,EAASqE,MAC1DrE,EAASsE,MAAOtE,EAASoE,KAAMpE,EAASmE,KAAMnE,EAASwE,UACrDogE,EAAO/oB,EAAa+oB,OAC1B,IAAI1R,EAAUuiC,EACd,MAAMgI,EAAa74B,EAAO,+BAAiC,4BACrDrB,WAAa,IACXqB,EACOhjB,MAAM,MAAO6zC,GACf1yC,SAAS,iBACT0B,QAGEgxC,EAGX7wB,EACAhjB,MAAM6zC,GACD5zC,gBAAgB0hB,cAGrB3hB,MAAM6zC,GACDn5D,SAAS,OACTA,SAAS,OAElB42B,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,gBACZqD,KAAKje,EAAKuU,QAAQ,SAAU,QAAS,+BACrConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS06C,GACTnhE,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTxnC,KAAK,OAAQ,gBACbsmC,gBAAgBxgD,KAAKo9F,2BAA2BW,EAAUpsF,EAAS2rF,QAASh6B,EAAcq6B,aAC1Fl4F,GAAG,8BACH29C,WACAnoB,SAAS,UAAUvnB,GAAKA,EACxBguC,SAAS,eACTA,SAAS,2BACTxnC,KAAK,QAAS5a,EAAKuU,QAAQ,SAAU,QAAS,iBAC9CquC,GAAG,SAAS,KACb,MAAM+7C,EAAY32F,SAASgoD,eAAe,8BACpC4uC,EAAY52F,SAASgoD,eAAe,8BACpC6uC,EAAMF,EAAUz9F,MACtBy9F,EAAUz9F,MAAQ09F,EAAU19F,MAC5B09F,EAAU19F,MAAQ29F,CAAG,QAEzBtsC,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,aACZqD,KAAKje,EAAKuU,QAAQ,SAAU,QAAS,4BACrConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTxnC,KAAK,OAAQ,aACbsmC,gBAAgBxgD,KAAKo9F,2BAA2BW,EAAUpsF,EAASysF,QAAS96B,EAAcs6B,UAC1Fn4F,GAAG,8BACH29C,WACLyO,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO,iBACZqD,KAAKje,EAAKuU,QAAQ,SAAU,QAAS,4BACrConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS06C,GACTnhE,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTxnC,KAAK,OAAQ,iBACbsmC,gBAAgBxgD,KAAKg9F,4BAA4BrrF,EAASsrF,UAC1Dx3F,GAAG,8BACH29C,WACAnoB,SAAS,SAASvnB,GAAKA,EAAEsvC,QAAQ,UACjC/nB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTxnC,KAAK,OAAQ,eACbsmC,gBAAgBxgD,KAAKo9F,2BAA2BY,EAAYrsF,EAAS0sF,UAAW/6B,EAAcu6B,UAC9F37C,GAAG,UAAWhlB,IACf,MAAM/Z,EAAQ+Z,EAAGz5B,OAAOjD,MACxBR,KAAKs+F,sBAAsBn7E,EAAM,IAEhC1d,GAAG,+BACH29C,aACLyO,EAAUqQ,aACV3hB,MAAMsR,GACD52B,SAAS,OACTA,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS06C,GACTnhE,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,YACTzmB,SAAS,SAASvnB,IACnBA,EACKjO,GAAG,0BACHwR,KAAK,YACNtF,EAASmrF,WACTppF,EAAEwG,KAAK,UAAW,GAAG,IAExB8oC,QAAQ,IAAM1jD,EAAKuU,QAAQ,SAAU,QAAS,qBAC9ConB,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,YACTzmB,SAAS,SAASvnB,IACnBA,EACKjO,GAAG,0BACHwR,KAAK,YACNtF,EAASmsF,WACTpqF,EAAEwG,KAAK,UAAW,GAAG,IAExB8oC,QAAQ,IAAM1jD,EAAKuU,QAAQ,SAAU,QAAS,sBACtD,CACD,iBAAAsgF,CAAkB31B,GACd,MAAMr7C,EAAQ7b,SAASgoD,eAAe,+BAA+B9uD,MACjE2iB,GACAnjB,KAAKs+F,sBAAsBn7E,GAE3BnjB,KAAKg1B,WAAWmJ,aAAav8B,QAAU,IACvC48D,EAAI0C,UAAU,2EAA4E,SAC1F1C,EAAI+B,yBAAyBhnC,UAAW,EAE/C,CACD,qBAAA+kE,CAAsBn7E,GAClB,MAAM2sB,EAAY9vC,KAAKw9F,sBACjBhqC,EAAW1jB,EAAUptB,QAAQwD,SAAS/C,GACtCyC,EAAMkqB,EAAUptB,QAAQ1e,IAAIwvD,GAC5B+qC,EAAej3F,SAASgoD,eAAe,8BACzC1pC,EAAI3O,MAAQtY,EAAS+D,QACrB67F,EAAahlE,UAAW,EACxBglE,EAAa/9F,MAAQ6iE,EAASm7B,OAG9BD,EAAahlE,UAAW,CAE/B,CACD,oBAAA26D,GACI,MAAM1vF,EAAS2I,MAAM+mF,uBAYrB,OAXI1vF,IACAxE,KAAK2R,SAAW,CACZ2rF,QAASh2F,SAASgoD,eAAe,8BAA8B9uD,MAC/D49F,QAAS92F,SAASgoD,eAAe,8BAA8B9uD,MAC/Dy8F,SAAU31F,SAASgoD,eAAe,8BAA8B9uD,MAChE69F,UAAW/2F,SAASgoD,eAAe,+BAA+B9uD,MAClEs8F,UAAWx1F,SAASgoD,eAAe,0BAA0BgX,QAC7Dw3B,UAAWx2F,SAASgoD,eAAe,0BAA0BgX,SAEjEtmE,KAAKu2C,WAEF/xC,CACV,CACD,UAAA6f,GACI,MAAMhkB,EAAO8M,MAAMkX,aAInB,OAHIrkB,KAAK2R,UACLtS,EAAMwF,WAAWxE,EAAML,KAAK2R,UAEzBtR,CACV,CACD,YAAAyY,CAAazY,GACT8M,MAAM2L,aAAazY,GACfA,IACAL,KAAK2R,SAAWtS,EAAMwF,WAAW7E,KAAK2R,SAAUtR,GAClB,WAA1BL,KAAK2R,SAASsrF,WACdj9F,KAAK2R,SAASsrF,SAAW55B,EAASo7B,SAG7C,CACD,WAAAvjD,GAEI,GADAl7C,KAAK0+F,kBACD1+F,KAAK2pD,KAAM,CACX,MAAMg1C,EAAW3+F,KAAK08F,WAAW7zE,WAE7B81E,EADW3+F,KAAK2pD,KAAKl8C,QAAQmgD,OAAO5lC,WAEpChoB,KAAK4zF,WAAW/xC,UAAUE,OAAO,0BACjC/hD,KAAK00F,iBAAiBp1F,EAAKuU,QAAQ,SAAU,oBAE7C7T,KAAKyN,QAAQ6gD,kBAAoBqwC,EACjC3+F,KAAK2pD,KAAKl8C,QAAQ6gD,kBAAoBqwC,EAGtC3+F,KAAK2pD,KAAKl8C,QAAQ6gD,kBAAoBtuD,KAAKyN,QAAQ6gD,kBAEvDtuD,KAAK2pD,KAAKpT,SACb,CACJ,CACD,mBAAAinD,GAEI,OADgBx9F,KAAKooC,aACN4H,WAClB,CACD,eAAA0uD,GACI1+F,KAAK08F,WAAWj8E,QAChB,MAAMqvB,EAAY9vC,KAAKw9F,sBACvB,IAAK1tD,GAAqC,GAAxBA,EAAUjnB,WACxB,OAEJ,IAAK7oB,KAAK2R,SACN,OAEJ,MAAM2rF,EAAUt9F,KAAK2R,SAAS2rF,QACxBc,EAAUp+F,KAAK2R,SAASysF,QACxBC,EAAYr+F,KAAK2R,SAAS0sF,UAC1B/7D,EAASwN,EAAUptB,QAAQwD,SAASo3E,GACpCsB,EAAS9uD,EAAUptB,QAAQwD,SAASk4E,GACpCS,EAAW/uD,EAAUptB,QAAQwD,SAASm4E,GAC5C,GAAcr3F,MAAVs7B,GAAiCt7B,MAAV43F,GAAmC53F,MAAZ63F,EAE9C,YADA7+F,KAAK20F,yBAAyBr1F,EAAKuU,QAAQ,SAAU,oBAGzD,MAAMirF,EAAchvD,EAAUptB,QAAQ1e,IAAI66F,GACpCE,EAAYjvD,EAAUptB,QAAQ1e,IAAIs+B,GAClC08D,EAAYlvD,EAAUptB,QAAQ1e,IAAI46F,GAClCK,EAAWD,EAAU/5E,MACrBi6E,EAAUF,EAAU/nF,KACpBggF,EAAW8H,EAAU95E,MACrBk6E,EAAY,GACZC,EAAY,GACZ33E,EAAOqoB,EAAUrnB,gBACvB,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAMy6F,EAAW53E,EAAK7iB,GAAGigB,SAASyd,GAC9B68D,EAAUr5F,QAAQu5F,GAAY,GAC9BF,EAAU16F,KAAK46F,GAEnB,MAAMC,EAAW73E,EAAK7iB,GAAGigB,SAAS+5E,GAC9BQ,EAAUt5F,QAAQw5F,GAAY,GAC9BF,EAAU36F,KAAK66F,EAEtB,CACDt/F,KAAK08F,WAAWh6E,QAAQgD,IAAI,CACxBjgB,GAAIw5F,EAAW,KAAOhI,EACtBhyE,MAAOg6E,EAAW,KAAOhI,EACzBt+E,YAAa,GACb1B,KAAMioF,EACN5iF,KAAM0iF,EAAU3iF,cAChBzE,MAAOonF,EAAUpnF,QAErB,MAAM2nF,EAAe,GACrB,IAAIC,EAAoB,KACpBngG,EAAM2I,cAAc+2F,EAAU9nF,MAC9BuoF,EAAoBx/F,KAAKy/F,aAEpBpgG,EAAMiD,mBAAmBwD,QAAQi5F,EAAU9nF,OAAS,IACzDuoF,EAAoBx/F,KAAK0/F,YAE7B,IAAK,IAAI96F,EAAI,EAAGA,EAAIu6F,EAAUv9F,OAAQgD,IAAK,CACvC,MAAMy6F,EAAWF,EAAUv6F,GAC3B,GAAKy6F,EAGA,CACD,MAAMp6E,EAAQu6E,EACRA,EAAkBT,EAAWM,GAC7BA,EACNr/F,KAAK08F,WAAWh6E,QAAQgD,IAAI,CACxBjgB,GAAI45F,EACJp6E,MAAOA,EACPtM,YAAa,GACb2D,KAAMwiF,EAAYziF,cAClBpF,KAAMjX,KAAK2R,SAASsrF,WAAa55B,EAASm7B,MACpCM,EAAY7nF,KAAOtY,EAASsE,MAClC2U,MAAOknF,EAAYlnF,OAE1B,MAfG2nF,EAAa96F,KAAKG,EAgBzB,CACD,IAAI+6F,EAAW,GACf,IAAK,IAAI/6F,EAAI,EAAGA,EAAIw6F,EAAUx9F,OAAQgD,IAClC+6F,EAASl7F,KAAK,IACdk7F,EAAS/6F,GAAGH,KAAK26F,EAAUx6F,IAE/B,IAAK,IAAIA,EAAI,EAAGA,EAAIw6F,EAAUx9F,OAAQgD,IAClC,IAAK,IAAI44B,EAAI,EAAGA,EAAI2hE,EAAUv9F,OAAQ47B,IAC9B+hE,EAAaz5F,QAAQ03B,IAAM,GAE/BmiE,EAAS/6F,GAAGH,KAAKzE,KAAK4/F,aAAa5/F,KAAK2R,SAASsrF,SAAU,CACvDK,QAASt9F,KAAK2R,SAAS2rF,QACvBc,QAASp+F,KAAK2R,SAASysF,QACvBC,UAAWr+F,KAAK2R,SAAS0sF,UACzBiB,SAAUF,EAAUx6F,GACpBy6F,SAAUF,EAAU3hE,MAIhC,GAAIx9B,KAAK2R,SAASmsF,UAAW,CACzB99F,KAAK08F,WAAWh6E,QAAQgD,IAAI,CACxBjgB,GAAI,QACJwf,MAAO3lB,EAAKuU,QAAQ,SAAU,QAAS,kBACvC8E,YAAa,GACb2D,KAAMwiF,EAAYziF,cAClBpF,KAAMjX,KAAK2R,SAASsrF,WAAa55B,EAASm7B,MACpCM,EAAY7nF,KAAOtY,EAASsE,QAEtC,IAAK,IAAI2B,EAAI,EAAGA,EAAI+6F,EAAS/9F,OAAQgD,IAAK,CACtC,MAAM8f,EAAMi7E,EAAS/6F,GACrB,IAAIi7F,EAAa,EACb7/F,KAAK2R,SAASsrF,UAAY55B,EAASy8B,KAChC9/F,KAAK2R,SAASsrF,UAAY55B,EAAS08B,MACtCF,EAAan7E,EAAI,IAErB,IAAK,IAAI8Y,EAAI,EAAGA,EAAI9Y,EAAI9iB,OAAQ47B,IAAK,CACjC,MAAMh9B,EAAQkkB,EAAI8Y,GACJ,OAAVh9B,IACIR,KAAK2R,SAASsrF,WAAa55B,EAASy8B,IAChCt/F,EAAQq/F,IACRA,EAAar/F,GAEZR,KAAK2R,SAASsrF,WAAa55B,EAAS08B,IACrCv/F,EAAQq/F,IACRA,EAAar/F,GAGjBq/F,GAAcr/F,EAGzB,CACGR,KAAK2R,SAASsrF,WAAa55B,EAASo7B,UACpCoB,GAAcn7E,EAAI9iB,OAAS,GAE/B8iB,EAAIjgB,KAAKo7F,EACZ,CACJ,CACD,IAAK,MAAMn7E,KAAOi7E,EACd3/F,KAAK08F,WAAW90E,OAAOlD,GAE3B,GAAI1kB,KAAK2R,SAASmrF,UAAW,CACzB,IAAIkD,EAAY,GAEhBA,EAAUv7F,KAAK,MACf,IAAK,IAAIG,EAAI,EAAGA,EAAI5E,KAAK08F,WAAWh6E,QAAQ+C,MAAO7gB,IAAK,CACpD,MAAM6iB,EAAOznB,KAAK08F,WAAWj0E,gBAC7B,IAAIw3E,EAAa,EACbjgG,KAAK2R,SAASsrF,UAAY55B,EAASy8B,KAChC9/F,KAAK2R,SAASsrF,UAAY55B,EAAS08B,MACtCE,EAAax4E,EAAK,GAAG5C,SAASjgB,IAElC,IAAK,IAAI44B,EAAI,EAAGA,EAAI/V,EAAK7lB,OAAQ47B,IAAK,CAClC,MAAMh9B,EAAQinB,EAAK+V,GAAG3Y,SAASjgB,GACjB,OAAVpE,IACIR,KAAK2R,SAASsrF,WAAa55B,EAASy8B,IAChCt/F,EAAQy/F,IACRA,EAAaz/F,GAEZR,KAAK2R,SAASsrF,WAAa55B,EAAS08B,IACrCv/F,EAAQy/F,IACRA,EAAaz/F,GAGjBy/F,GAAcz/F,EAGzB,CACGR,KAAK2R,SAASsrF,WAAa55B,EAASo7B,UACpCwB,GAAcx4E,EAAK7lB,QAEvBo+F,EAAUv7F,KAAKw7F,EAClB,CACDjgG,KAAK08F,WAAW90E,OAAOo4E,GACvBhgG,KAAK4zF,WAAW/xC,UAAUn8B,IAAI,yBACjC,MAEG1lB,KAAK4zF,WAAW/xC,UAAUE,OAAO,yBAExC,CACD,YAAA69C,CAAanuE,EAAMhkB,GACf,OAAQgkB,GACJ,KAAK4xC,EAAS68B,IACV,OAAOlgG,KAAK4xD,IAAInkD,GACpB,KAAK41D,EAASo7B,QACV,OAAOz+F,KAAKmgG,QAAQ1yF,GACxB,KAAK41D,EAASy8B,IACV,OAAO9/F,KAAK8G,IAAI2G,GACpB,KAAK41D,EAAS08B,IACV,OAAO//F,KAAK6G,IAAI4G,GACpB,KAAK41D,EAASm7B,MACV,OAAOx+F,KAAKylB,MAAMhY,GACtB,QACI,OAAO,EAElB,CACD,WAAA4uF,GACI,OAAOr8F,KAAK2R,QACf,CACD,UAAA+tF,CAAWz2E,EAAQzoB,GACf,MAAMqrD,EAAmD,kBAA1CnqD,OAAO4mB,UAAU/T,SAASu3C,KAAKtrD,GAC9C,IAAImrD,GAAYnrD,GAAS,IAAI+T,WAC7B,GAAIs3C,EACA,GAAI5iC,GAAUA,EAAO5M,eACdgvC,EAAWpH,KAAKh7B,EAAO5M,eAC1BsvC,EAAW1iC,EAAO5M,cAAcxR,QAAQwgD,GAAY,CAACpe,EAAGx2B,IAC7CnX,EAAKuX,gBAAgBrW,EAAOyoB,EAAOhS,KAAMR,SAGnD,CACD,MAAMlD,EAASjU,EAAK2S,mBACd85C,EAAc,CAAEjgD,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,WAClE,OAAQid,EAAOhS,MACX,KAAKtY,EAAS6D,KACVmpD,EAAWnrD,EAAMsS,mBAAmBS,GACpC,MACJ,KAAK5U,EAAS4D,KACVopD,EAAWnrD,EAAMwS,mBAAmBO,EAAQw4C,GAC5C,MACJ,KAAKptD,EAASK,SACV2sD,EAAW,GAAGnrD,EAAMsS,mBAAmBS,MAAW/S,EAAMwS,mBAAmBO,EAAQw4C,KAG9F,CAEL,OAAOJ,CACV,CACD,YAAA8zC,CAAax2E,EAAQzoB,GACjB,IAAImrD,GAAYnrD,GAAS,IAAI+T,WAY7B,MAXoB,iBAAT/T,IAGHmrD,EAFA1iC,GAAUA,EAAO5M,eACdgvC,EAAWpH,KAAKh7B,EAAO5M,eACf4M,EAAO5M,cAAcxR,QAAQwgD,GAAY,CAACpe,EAAGx2B,IAC7CnX,EAAKyX,YAAYvW,EAAOiW,KAIxBjW,EAAMiX,kBAGlBk0C,CACV,CACD,GAAAiG,CAAInkD,GACA,IAAIjJ,EAAS,EACb,MACMijB,EADYznB,KAAKw9F,sBACA/0E,gBACvB,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM06F,EAAW73E,EAAK7iB,GAAGigB,SAASpX,EAAQ2wF,SACpCiB,EAAW53E,EAAK7iB,GAAGigB,SAASpX,EAAQ6vF,SAC1C,GAAIgC,IAAa7xF,EAAQ6xF,UAClBD,IAAa5xF,EAAQ4xF,SACxB,SAGJ76F,GADmBijB,EAAK7iB,GAAGigB,SAASpX,EAAQ4wF,UAE/C,CACD,OAAO75F,CACV,CACD,OAAA27F,CAAQ1yF,GACJ,IAAIjJ,EAAS,EACTihB,EAAQ,EACZ,MACMgC,EADYznB,KAAKw9F,sBACA/0E,gBACvB,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM06F,EAAW73E,EAAK7iB,GAAGigB,SAASpX,EAAQ2wF,SACpCiB,EAAW53E,EAAK7iB,GAAGigB,SAASpX,EAAQ6vF,SAC1C,GAAIgC,IAAa7xF,EAAQ6xF,UAClBD,IAAa5xF,EAAQ4xF,SACxB,SAGJ76F,GADmBijB,EAAK7iB,GAAGigB,SAASpX,EAAQ4wF,WAE5C54E,GACH,CAGD,OAFa,GAATA,IACAjhB,GAAkBihB,GACfjhB,CACV,CACD,GAAAsC,CAAI2G,GACA,IAAI3G,EAAMwQ,OAAO8oF,iBACjB,MACM34E,EADYznB,KAAKw9F,sBACA/0E,gBACvB,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM06F,EAAW73E,EAAK7iB,GAAGigB,SAASpX,EAAQ2wF,SACpCiB,EAAW53E,EAAK7iB,GAAGigB,SAASpX,EAAQ6vF,SAC1C,GAAIgC,IAAa7xF,EAAQ6xF,UAClBD,IAAa5xF,EAAQ4xF,SACxB,SAEJ,MAAMgB,EAAa54E,EAAK7iB,GAAGigB,SAASpX,EAAQ4wF,WACxCgC,EAAav5F,IACbA,EAAMu5F,EAEb,CACD,OAAIv5F,GAAOwQ,OAAO8oF,iBACP,KACJt5F,CACV,CACD,GAAAD,CAAI4G,GACA,IAAI5G,EAAMyQ,OAAOgpF,iBACjB,MACM74E,EADYznB,KAAKw9F,sBACA/0E,gBACvB,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM06F,EAAW73E,EAAK7iB,GAAGigB,SAASpX,EAAQ2wF,SACpCiB,EAAW53E,EAAK7iB,GAAGigB,SAASpX,EAAQ6vF,SAC1C,GAAIgC,IAAa7xF,EAAQ6xF,UAClBD,IAAa5xF,EAAQ4xF,SACxB,SAEJ,MAAMgB,EAAa54E,EAAK7iB,GAAGigB,SAASpX,EAAQ4wF,WACxCgC,EAAax5F,IACbA,EAAMw5F,EAEb,CACD,OAAIx5F,GAAOyQ,OAAOgpF,iBACP,KACJz5F,CACV,CACD,KAAA4e,CAAMhY,GAEF,IAAIgY,EAAQ,EACZ,MAAMgC,EAFYznB,KAAKw9F,sBAEA/0E,gBACvB,IAAK,IAAI7jB,EAAI,EAAGA,EAAI6iB,EAAK7lB,OAAQgD,IAAK,CAClC,MAAM06F,EAAW73E,EAAK7iB,GAAGigB,SAASpX,EAAQ2wF,SACpCiB,EAAW53E,EAAK7iB,GAAGigB,SAASpX,EAAQ6vF,SACtCgC,IAAa7xF,EAAQ6xF,UAClBD,IAAa5xF,EAAQ4xF,UAG5B55E,GACH,CACD,OAAOA,CACV,EAGL,MAAM86E,uBAAuBpN,YACzB,WAAAtzF,GACIsN,SAAS0tE,WACT76E,KAAK2pD,KAAO,KACZ3pD,KAAK4gD,MAAQw2B,EAAOvjE,QAAQ,SAAU,YAAa,cACnD7T,KAAKozF,YAAchc,EAAOvjE,QAAQ,SAAU,YAAa,WAC5D,CACD,IAAAkzB,CAAKkU,GACD9tC,MAAM45B,KAAKkU,GACXj7C,KAAKwgG,YACR,CACD,WAAAnE,GACI,OAAOr8F,KAAK2R,QACf,CACD,UAAA6uF,GACQxgG,KAAK2pD,MACL3pD,KAAK2pD,KAAKtO,UACd,MAAM5tC,EAAUzN,KAAKooD,UAAU36C,SAAW,CAAA,EACtCA,EAAQgzF,eACRzgG,KAAK2pD,KAAOl8C,EAAQgzF,aAAazgG,KAAK4zF,WAAY5zF,KAAK60F,YAE1C,MAAb70F,KAAK2pD,OACL3pD,KAAK2pD,KAAO,IAAIooC,eAAe/xF,KAAK4zF,aAExCnmF,EAAQk8C,KAAOl8C,EAAQk8C,MAAQ,CAAA,EAC/Bl8C,EAAQk8C,KAAKsoC,aAAc,EAC3BxkF,EAAQk8C,KAAK+2C,YAAa,EAC1B,MAAMrkE,EAAUr8B,KAAKooC,aACrB36B,EAAQk8C,KAAKg3C,OAAS3gG,KAAK2R,SAC3B3R,KAAK2pD,KAAK5iB,KAAK1K,EAAS5uB,EAAQk8C,KACnC,CACD,OAAAkrC,GACI,OAAO1xB,EAAUy9B,QACpB,CACD,UAAAnM,GACI,OAAO,CACV,CACD,WAAAv5C,GACSl7C,KAAK2pD,MAEV3pD,KAAK2pD,KAAKpT,SACb,CACD,OAAA8E,GACQr7C,KAAK2pD,MACL3pD,KAAK2pD,KAAKtO,SAEjB,EAGL,MAAMwlD,uBAAuB7lD,OACzB,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAK8gG,OAAS,GACd9gG,KAAKyN,QAAU,GACfzN,KAAKikB,MAAQuQ,EAAYujB,MAC5B,CACD,WAAAuD,GACI,IAAK,MAAMylD,KAAS/gG,KAAK8gG,OACrBC,EAAM1lD,UAEVr7C,KAAKygB,OACR,CACD,cAAAugF,CAAe/pF,GACX,MAAMxJ,EAAUzN,KAAKyN,QAAQwJ,GAC7B,OAAQA,GACJ,KAAKksD,EAAUi2B,MACX,OAAO,IAAI8C,WAAWl8F,KAAMyN,GAChC,KAAK01D,EAAU45B,WACX,OAAO,IAAIN,gBAAgBz8F,KAAMyN,GACrC,QACI,OAAO,IAAI8yF,eAAevgG,KAAMyN,GAE3C,CACD,QAAAunB,GACI,OAAOh1B,KAAKooC,aAAapT,UAC5B,EAGL,MAAMisE,aACF,WAAAphG,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EACfr8B,KAAKsM,QAAU,IAClB,CACD,IAAA00C,CAAKkgD,EAAY,MACb,IAAKlhG,KAAKsM,QAAS,CACf,MAAMgS,EAAUte,KAAKq8B,QAAQgX,mBAC7B,GAAsB,GAAlB/0B,EAAQ1c,OACR,MAAMoL,MAAM,oCAChBk0F,EAAYA,GAAa5iF,EAAQ,GACjCte,KAAKsM,QAAU,IAAIsC,SAAQ,CAACC,EAASC,KACjC,MAAMilF,EAAK/zF,KAAKq8B,QAAQwM,cAAcsG,WAAW,iBAC3C9nC,EAAOk5C,MAAM,OACdmB,SAAS,qBACTzmB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,aACTzmB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,yCACTzmB,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,kBAAmB,YAC5BxnC,KAAK,MAAO,iBACZ8oC,QAAQo0B,EAAOvjE,QAAQ,wBACvBonB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,eACTzmB,SAAS,UAAUvnB,IACpBA,EACKwG,KAAK,OAAQ,iBACbzU,GAAG,gBACR,IAAK,MAAMkF,KAAU3K,KAAKq8B,QAAQgX,mBAC9B3/B,EAAEkxC,UAAU,CACRpkD,MAAOmK,EACPi2C,MAAOw2B,EAAOvjE,QAAQlJ,IAAWA,EACjCm6C,SAAUo8C,GAAav2F,GAE9B,UAEAy4C,QACL2wC,EAAGvyF,KAAK,CACJo/C,MAAOw2B,EAAOvjE,QAAQ,kBACtBxM,KAAMA,EACN02D,SAAU,KACN,MAAMpzD,EAAStD,EAAKq5D,cAAc,iBAAiBlgE,MAMnD,OALAR,KAAKq8B,QAAQ0d,aAAa,CACtBpvC,OAAQA,EACRklC,QAAShhC,EACTI,MAAOH,KAEJ,CAAI,GAEjB,GAET,CACD,OAAO9O,KAAKsM,QAAQQ,SAAQ,IAAM9M,KAAKsM,QAAU,MACpD,EAGL,MAAM60F,0BAA0BN,eAC5B,WAAAhhG,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKohG,kBAAoB,EACzBphG,KAAK0uD,aAAc,EACnB1uD,KAAKyN,QAAU,CACX4zF,kBAAkB,EAClBC,mBAAmB,EACnBC,oBAAoB,EACpBC,iBAAiB,EACjBC,sBAAsB,EACtBC,WAAY,CAACv+B,EAAUy9B,SAAUz9B,EAAUi2B,MAAOj2B,EAAU45B,aAEhE/8F,KAAK2hG,UAAY,CACb,CAAEl8F,GAAI09D,EAAUy9B,SAAUrjF,KAAMje,EAAKuU,QAAQ,SAAU,eAAgB,cACvE,CAAEpO,GAAI09D,EAAUi2B,MAAO77E,KAAMje,EAAKuU,QAAQ,SAAU,eAAgB,UACpE,CAAEpO,GAAI09D,EAAU45B,WAAYx/E,KAAMje,EAAKuU,QAAQ,SAAU,eAAgB,WAE7E7T,KAAK4hG,gBAAmBv/F,KAChBrC,KAAKyN,QAAQi0F,WAAW57F,QAAQzD,EAAKoD,IAAM,KAE3CpD,EAAKoD,KAAO09D,EAAUy9B,UAC+D,IAA9E5gG,KAAK8gG,OAAO1+F,QAAO2+F,GAASA,EAAMlM,WAAa1xB,EAAUy9B,WAAUh/F,QAI7E5B,KAAKi7C,KAAK4G,UAAU3mB,SAAS,GAAGl7B,KAAKktD,oBACtCltD,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBAEpCltD,KAAK6hG,oBACR,CACD,aAAI30C,GACA,MAAO,aACV,CACD,aAAAvX,GACI,MAAO,aACV,CAMD,IAAA5O,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAK+zC,WAAWtmC,GAChBzN,KAAKs7C,cACLt7C,KAAK48E,sBACL58E,KAAK8hG,YACR,CACD,mBAAAllB,GACI,MAAMxnD,EAAQp1B,KAAKg1B,WACfh1B,KAAKq9E,sBACLjoD,EAAMqQ,sBAAsBzlC,KAAKq9E,sBAErCr9E,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IAEjD,MAAMg7C,EAAQh7C,EAAM3pB,KAChB2kE,EAAMntC,MAAQ1D,EAAgB5H,KAG9By4C,EAAMrhE,QAAU3D,OAGpBA,KAAK+hG,eACL/hG,KAAKk7C,aAAY,GAAK,GAE7B,CACD,WAAAA,CAAY1wB,GAAQ,IACZxqB,KAAK0uD,aAAelkC,KACpBxqB,KAAKygB,QACLzgB,KAAKgiG,gBACLhiG,KAAKswD,UAETtwD,KAAKiiG,yBACLjiG,KAAKkiG,oBACLliG,KAAKmiG,oBACR,CACD,aAAAH,GACIhiG,KAAKoiG,QAAU,IAAInwB,UAAU,CACzBpyD,MAAO7f,KAAK2hG,UACZl8F,GAAI,kBAEX,CACD,kBAAA08F,GACI,MACMp7E,EADU/mB,KAAKooC,aACC4H,YAAYnnB,WAClC7oB,KAAKqiG,WAAWz/C,UAAYtjD,EAAKuU,QAAQ,SAAU,qBAAuB,IAAMkT,EACnE,GAATA,EACAw5B,MAAMvgD,KAAKsiG,WAAWphD,OAGtBX,MAAMvgD,KAAKsiG,WAAWthD,MAE7B,CACD,kBAAA6gD,GAEI7hG,KAAKuiG,cAAgBhiD,MAAM,OACtBmB,SAAS,GAAG1hD,KAAKktD,qBACjBjyB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,kBAA6B1F,EAAayF,qBACtDkD,QALQ,0VAMRC,OACR,CACD,kBAAAjI,GACQn7C,KAAKyN,QAAQg0F,uBAGRzhG,KAAKuiG,cAAct+B,YAAcjkE,KAAK4wD,UACvC5wD,KAAK4wD,QAAQyX,WAAW9wD,SAAQysC,IAC5BzD,MAAMyD,GAAI9C,MAAM,IAEpBlhD,KAAK4wD,QAAQvmB,YAAYrqC,KAAKuiG,eAGzC,CACD,gBAAAnnD,GACI,GAAIp7C,KAAKyN,QAAQg0F,sBACTzhG,KAAKuiG,cAAct+B,WACnB,IACIjkE,KAAKuiG,cAAct+B,WACdp5B,YAAY7qC,KAAKuiG,cACzB,CACD,MAAOjjE,GACN,CACO,QACJt/B,KAAKkiG,mBAAkB,EAC1B,CAGZ,CACD,MAAA5xC,GACItwD,KAAK0uD,aAAc,EACnB1uD,KAAK0wD,UAAYnQ,MAAM,MAAOvgD,KAAKi7C,MAC9ByG,SAAS,GAAG1hD,KAAKktD,oBACjB9J,QACLpjD,KAAKwiG,QACDjiD,MAAM,MAAOvgD,KAAK0wD,WACbhP,SAAS,GAAG1hD,KAAKktD,kBACjB9J,QACTpjD,KAAKyiG,OAASliD,MAAM,KAAMvgD,KAAKwiG,SAC1B9gD,SAAS,GAAG1hD,KAAKktD,sBACjB9J,QACLpjD,KAAK4wD,QACDrQ,MAAM,MAAOvgD,KAAKi7C,MACbyG,SAAS,GAAG1hD,KAAKktD,kBACjB9J,QACT,IAAK,MAAM29C,KAAS/gG,KAAK8gG,OACrB9gG,KAAK0iG,YAAY3B,GAErBxgD,MAAMvgD,KAAKwiG,SACNvnE,SAAS,OAAOvnB,GAAK1T,KAAK2iG,eAAiBjvF,EAC3CguC,SAAS,GAAG1hD,KAAKktD,wBACjBtM,MAAMthD,EAAKuU,QAAQ,SAAU,kBAC7BonB,SAAS,KAAKvnB,GAAKA,EACnBwG,KAAK,OAAQ,wBACbgoC,GAAG,SAAU5iB,GAAMt/B,KAAK4iG,gBAAgBtjE,KACxC8jB,UACL,MAAMy/C,EAAYtiD,MAAM,MAAOvgD,KAAK0wD,WAC/BhP,SAAS,GAAG1hD,KAAKktD,oBACjB9J,QAIL,GAHApjD,KAAKqiG,WAAa9hD,MAAM,MAAOsiD,GAC1BnhD,SAAS,GAAG1hD,KAAKktD,wBACjB9J,QACDpjD,KAAKyN,QAAQ6zF,mBAAqBthG,KAAKyN,QAAQ4zF,kBAAoBrhG,KAAKyN,QAAQ8zF,mBAAoB,CACpG,MAAMuB,EAAMviD,MAAM,MAAOsiD,GACpBnhD,SAAS,GAAG1hD,KAAKktD,2BACjB9J,QACDpjD,KAAKyN,QAAQ4zF,mBACbrhG,KAAKsiG,UAAY/hD,MAAM,SAAUuiD,GAC5B5gD,GAAG,SAAS,IAAMliD,KAAK+iG,kBACvBrhD,SAAS,GAAG1hD,KAAKktD,oBACjBxL,SAAS,GAAG1hD,KAAKktD,2BACjBtM,MAAMthD,EAAKuU,QAAQ,SAAU,mBAC7BuvC,SAELpjD,KAAKyN,QAAQ6zF,mBACb/gD,MAAM,SAAUuiD,GACX5gD,GAAG,SAAS,IAAMliD,KAAKgjG,mBACvBthD,SAAS,GAAG1hD,KAAKktD,oBACjBxL,SAAS,GAAG1hD,KAAKktD,4BACjBtM,MAAMthD,EAAKuU,QAAQ,SAAU,oBAElC7T,KAAKyN,QAAQ8zF,qBACbvhG,KAAKijG,eAAiB1iD,MAAM,SAAUuiD,GACjC5gD,GAAG,SAAS,IAAMliD,KAAKyN,QAAQ+zF,gBAAkBxhG,KAAKkjG,iBAAgB,GAAQljG,KAAKkjG,oBACnFxhD,SAAS,GAAG1hD,KAAKktD,oBACjBxL,SAAS,GAAG1hD,KAAKktD,6BACjBtM,MAAMthD,EAAKuU,QAAQ,SAAU,qBAC7BuvC,QAEZ,CACJ,CACD,cAAA4/C,GACI,MAAM3mE,EAAUr8B,KAAKooC,aACrB/L,EAAQ6M,UAAU,CACd2G,QAAS,KAELxT,EAAQga,eAAe7hB,EAAYujB,OAAO,GAGrD,CACD,aAAAgrD,GACI,MAAM1mE,EAAUr8B,KAAKooC,aACrB,IAAI64D,aAAa5kE,GACZ2kB,MACR,CACD,eAAAkiD,CAAgBC,GACZ,IAAIzvF,EAAI6sC,MAAMvgD,KAAKi7C,MACnB,GAAIkoD,EACAzvF,EAAEsuC,YAAY,GAAG9B,uBACblgD,KAAKi7C,KAAK4G,UAAU3mB,SAAS,GAAGglB,wBAChClgD,KAAKijG,eAAeriD,MAAQthD,EAAKuU,QAAQ,SAAU,mBACnD7T,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,6BAA6B,GAC1EltD,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,4BAA4B,KAGzEltD,KAAKijG,eAAeriD,MAAQthD,EAAKuU,QAAQ,SAAU,oBACnD7T,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,4BAA4B,GACzEltD,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,6BAA6B,QAG7E,CACD,MAAMk2C,GAAepjG,KAAKi7C,KAAKgM,aAAa,qBACxCm8C,GACApjG,KAAKi7C,KAAKyF,aAAa,oBAAqB,IAC5C1gD,KAAKijG,eAAeriD,MAAQthD,EAAKuU,QAAQ,SAAU,mBACnD7T,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,6BAA6B,GAC1EltD,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,4BAA4B,KAGzEltD,KAAKi7C,KAAK8F,gBAAgB,qBAC1B/gD,KAAKijG,eAAeriD,MAAQthD,EAAKuU,QAAQ,SAAU,oBACnD7T,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,4BAA4B,GACzEltD,KAAKijG,eAAephD,UAAUI,OAAO,GAAGjiD,KAAKktD,6BAA6B,IAE5D5lD,SAAS4sD,iBAAiB,sBAClC38C,SAAQysC,IACVo/C,EACAp/C,EAAGtD,aAAa,QAAS,kBAGzBsD,EAAGjD,gBAAgB,QACtB,GAER,CACD/gD,KAAK8gG,OAAOvpF,SAAQ8rF,GAAYA,EAASvO,YAC5C,CACD,iBAAAoN,CAAkB3rD,GAAU,GACxBv2C,KAAKyiG,OAAOvuC,iBAAiB,MACxB38C,SAAQ,CAACysC,EAAI39C,KACV29C,EAAGnC,UAAU3mB,SAAS,WACtB8oB,EAAGnC,UAAUE,OAAO,UAEpB/hD,KAAKohG,mBAAqB/6F,GAC1B29C,EAAGnC,UAAUn8B,IAAI,SACpB,IAEL1lB,KAAK4wD,QAAQsD,iBAAiB,IAAIhU,WAC7B3oC,SAAQ,CAACysC,EAAI39C,KACdk6C,MAAMyD,GAAI9C,OACNlhD,KAAKohG,mBAAqB/6F,IAC1Bk6C,MAAMyD,GAAIhD,OACNzK,GACAv2C,KAAK8gG,OAAOz6F,GAAOkwC,UAE1B,GAER,CACD,WAAAmsD,CAAY3B,GACR/gG,KAAKsjG,eAAevC,GACpB,MAAM15F,EAAOrH,KAAKujG,gBAAgBxC,GAClCA,EAAMh6D,KAAK1/B,EACd,CACD,cAAAi8F,CAAevC,GACX,OAAOxgD,MAAM,KAAMvgD,KAAKyiG,QAGnBxnE,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,GAAGxB,oBACZgC,GAAG,SAAU5iB,IACdA,EAAE4nB,kBACFlnD,KAAKwjG,qBAAqBzC,EAAM,MAE/B9lE,SAAS,KAAKvnB,GAAKA,EACnBsvC,QAAQ+9C,EAAMngD,OACd1mC,KAAK,OAAQ,wBAEb+gB,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,GAAGxB,iBACZgC,GAAG,SAAU5iB,IACdA,EAAE4nB,kBACFlnD,KAAKyjG,kBAAkB1C,EAAM,MAE5B7+C,GAAG,SAAU5iB,GAAMt/B,KAAK0jG,mBAAmB3C,KAC3C39C,OACR,CACD,eAAAmgD,CAAgBxC,GAKZ,OAJcxgD,MAAM,MAAOvgD,KAAK4wD,SAC3BlP,SAAS,GAAGxB,WACZgB,OACAkC,OAER,CACD,gBAAAugD,GACI3jG,KAAKyiG,OAAOvuC,iBAAiB,MACxB38C,SAASlV,IACVrC,KAAKyiG,OAAO53D,YAAYxoC,EAAK,IAEjC,IAAK,MAAM0+F,KAAS/gG,KAAK8gG,OACrB9gG,KAAKsjG,eAAevC,EAE3B,CACD,WAAA6C,CAAY7C,GACR,MAAM16F,EAAQrG,KAAK8gG,OAAOh7F,QAAQi7F,GAClC,GAAI16F,GAAS,EAAG,CACZrG,KAAK8gG,OAAO36F,OAAOE,EAAO,GAC1B,MAAMhF,EAASrB,KAAKyiG,OAAOp6B,WAAWhiE,GACtCrG,KAAKyiG,OAAO53D,YAAYxpC,GACxB,MAAMgG,EAAOrH,KAAK4wD,QAAQyX,WAAWhiE,GACrCrG,KAAK4wD,QAAQ/lB,YAAYxjC,GACrBrH,KAAK8gG,OAAOl/F,OAAS,EACrB5B,KAAKohG,iBACD/6F,EAAQrG,KAAK8gG,OAAOl/F,OACdyE,EACArG,KAAK8gG,OAAOl/F,OAAS,EAG/B5B,KAAKohG,kBAAoB,EAE7BphG,KAAKkiG,oBACLliG,KAAKiiG,wBACR,CACJ,CACD,eAAAW,CAAgB1lE,GACZl9B,KAAKoiG,QAAQ9uB,SAAS,CAClBtZ,OAAQ98B,EAAGz5B,OACXqqE,mBAAoB9tE,KAAK4hG,gBACzBpuB,qBAAuBnzE,IACnB,MAAM0gG,EAAQ/gG,KAAKghG,eAAe3gG,EAAKoF,IACjCo+F,EAAY7jG,KAAKujG,gBAAgBxC,GACvCA,EAAMh6D,KAAK88D,GACX9C,EAAMjN,qBACDrnF,MAAKwnF,IACFA,GACAj0F,KAAK8gG,OAAOr8F,KAAKs8F,GACjB/gG,KAAKohG,iBAAmBphG,KAAK8gG,OAAOl/F,OAAS,EAC7C5B,KAAKsjG,eAAevC,GACpB/gG,KAAKkiG,oBACLliG,KAAK8jG,cAGL9jG,KAAK4wD,QAAQ/lB,YAAYg5D,EAC5B,IAGAj3F,OAAMqC,GAASX,QAAQW,MAAMA,IAAO,GAGpD,CACD,kBAAAy0F,CAAmB3C,GACf,MAAM16F,EAAQrG,KAAK8gG,OAAOh7F,QAAQi7F,GAClC/gG,KAAK+jG,eAAe19F,EACvB,CACD,oBAAAm9F,CAAqBzC,GACjBA,EAAMjN,qBACDrnF,MAAKwnF,IACFA,IACAj0F,KAAK2jG,mBACL3jG,KAAKkiG,oBACLliG,KAAK8jG,aACR,IAEAl3F,OAAMqC,GAASX,QAAQW,MAAMA,IACrC,CACD,iBAAAw0F,CAAkB1C,GACH/gG,KAAKuzF,mBACb51B,YAAYr+D,EAAKuU,QAAQ,SAAU,uBAAwBvU,EAAKuU,QAAQ,SAAU,yBAChFhJ,QAAQ,eAAgBk2F,EAAMngD,QAC9Bn0C,MAAKu3F,IACFA,IACAhkG,KAAK4jG,YAAY7C,GACjB/gG,KAAK8jG,aACR,IAEAl3F,OAAMqC,GAASX,QAAQW,MAAMA,IACrC,CACD,KAAAwR,GACIzgB,KAAK0uD,aAAc,EACnB1uD,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,4BAAAqhD,GACI,GAA2B,IAAvBjkG,KAAK8gG,OAAOl/F,OAAc,CAC1B,MAAMm/F,EAAQ/gG,KAAKghG,eAAe79B,EAAUy9B,UAC5C5gG,KAAK8gG,OAAOr8F,KAAKs8F,GACjB/gG,KAAKohG,iBAAmB,CAC3B,CACJ,CACD,sBAAAa,GACIjiG,KAAK2iG,eAAehrE,OACwB,GADf33B,KAAKoiG,QAAQt8E,WACrC1jB,OAAOpC,KAAK4hG,iBAAiBhgG,MACrC,CACD,cAAAmiG,CAAe19F,GACPrG,KAAKohG,kBAAoB/6F,IACzBrG,KAAKohG,iBAAmB/6F,EACxBrG,KAAKkiG,oBACLliG,KAAK8jG,YAAW,GAEvB,CACD,UAAA/vD,CAAWtmC,GACPpO,EAAMwF,WAAW7E,KAAKyN,QAASA,EAClC,CACD,gBAAA8lF,GACI,OAAOvzF,KAAKooC,aACPS,cACAsG,WAAW,gBACnB,CACD,UAAA20D,CAAWI,GAAa,GACpB,MAAM9uE,EAAQp1B,KAAKg1B,WACnBI,EAAM4G,UAAY5G,EAAM4G,WAAa,CAAA,EACrC5G,EAAM4G,UAAU8kE,OAAS,CACrBxqC,OAAQt2D,KAAKohG,iBACbvhF,MAAO7f,KAAK8gG,OAAOh/F,KAAI4c,GAAKA,EAAE2F,gBAElC+Q,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgBgwE,OACtBnsE,OAAQksE,EAAa9vE,EAAkBgwE,SAAWhwE,EAAkB7H,IACpE5oB,OAAQ3D,MAEf,CACD,YAAA+hG,GACI,IAAK,MAAMhB,KAAS/gG,KAAK8gG,OACrBC,EAAM1lD,UAEVr7C,KAAK8hG,YACR,CACD,UAAAA,GACI,MAAM1sE,EAAQp1B,KAAKg1B,WAEnB,GADAh1B,KAAK8gG,OAAS,GACV1rE,EAAM4G,WAAa5G,EAAM4G,UAAU8kE,OAAQ,CAC3C,MAAMjhF,EAAQuV,EAAM4G,UAAU8kE,OAAOjhF,MACrC,IAAK,MAAMwkF,KAAMxkF,EAAO,CACpB,MAAMkhF,EAAQ/gG,KAAKghG,eAAeqD,EAAGptF,MACrC8pF,EAAMjoF,aAAaurF,GACnBrkG,KAAK8gG,OAAOr8F,KAAKs8F,EACpB,CACD,MAAMzqC,EAASlhC,EAAM4G,UAAU8kE,OAAOxqC,OACtCt2D,KAAKohG,iBAAoB9qC,GAAU,EAC7BA,EACAt2D,KAAK8gG,OAAOl/F,OAAS,CAC9B,MAEG5B,KAAKikG,8BAEZ,EAGL,MAAMK,qBAAqBtpD,OACvB,aAAArF,GACI,MAAO,cACV,CACD,WAAA91C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKyN,QAAU,CACXyzF,UAAW,MACXqD,cAAc,GAElBvkG,KAAKwkG,aAAgBtnE,IACZl9B,KAAKi7C,KAAKgM,aAAa,aACxB,IAAIg6C,aAAajhG,KAAKq8B,SAAS2kB,KAAKhhD,KAAKyN,QAAQyzF,UAAU,EAEnElhG,KAAKikB,MAAQuQ,EAAYjI,GAC5B,CACD,IAAAwa,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAKyN,QAAUpO,EAAMwF,WAAW7E,KAAKyN,QAASA,GAC9CzN,KAAKi7C,KAAKtI,iBAAiB,QAAS3yC,KAAKwkG,aAC5C,CACD,WAAAtpD,GACQl7C,KAAKyN,QAAQ82F,cAAgBvkG,KAAKq8B,QAAQ2T,aACvChwC,KAAKq8B,QAAQ2T,YAAYtnB,iBAAmB,EAC/C1oB,KAAKi7C,KAAK8F,gBAAgB,YAG1B/gD,KAAKi7C,KAAKyF,aAAa,WAAY,GAE1C,CACD,WAAApF,GACIt7C,KAAKi7C,KAAK8F,gBAAgB,YAC1B/gD,KAAKi7C,KAAKpG,oBAAoB,QAAS70C,KAAKwkG,aAC/C,EAGL,MAAMC,qBACF,aAAIv3C,GACA,MAAO,SACV,CACD,WAAArtD,CAAY4N,GAKR,GAJAzN,KAAK0kG,YAAc,CACfhiF,QAAS,IAEb1iB,KAAK2kG,QAAU,IACVl3F,IAAYA,EAAQwtC,KACrB,MAAM,IAAIjuC,MAAM,oBACpB,IAAKS,IAAYA,EAAQ2nB,MACrB,MAAM,IAAIpoB,MAAM,qBACpBhN,KAAKi7C,KAAOxtC,EAAQwtC,KACpBj7C,KAAKo1B,MAAQ3nB,EAAQ2nB,MACrBp1B,KAAK4kG,UAAYn3F,EAAQm3F,UACzB5kG,KAAK6kG,kBACL7kG,KAAK8kG,WACR,CACD,MAAAx0C,GACItwD,KAAKo1E,qBACLp1E,KAAK+kG,kBACL/kG,KAAKglG,SACR,CACD,eAAAD,GACI,MAAMjpE,EAAe97B,KAAKo1B,MAAMmI,yBAC1Bzb,EAASga,EAAarY,oBACtBooB,EAAQ/P,EAAanY,gBAC3B,IAAK,MAAMM,KAASnC,EAChB9hB,KAAKilG,MAAMnjF,OAAOrd,KAAK,CACnBie,QAASuB,EAAMvB,UAGvB,IAAK,MAAMyB,KAAQ0nB,EACf7rC,KAAKilG,MAAMpjF,WAAWpd,KAAK,CACvB0e,MAAOgB,EAAKhB,MACZD,OAAQiB,EAAKjB,SAGrBljB,KAAKilG,MAAMC,YAAcppE,EAAahY,iBACtC9jB,KAAKilG,MAAME,YAAcrpE,EAAa/X,gBACzC,CACD,mBAAAqhF,GACI,OAAOplG,KAAKo1B,MAAM+I,aAAa/7B,QAAO8hB,GAAKA,EAAE4S,SAChD,CACD,UAAAuuE,GACIrlG,KAAKi7C,KAAK2H,UAAY,GACtB,MAAMngC,EAAOziB,KAAKolG,sBACZE,EAAQ/kD,MAAMvgD,KAAKi7C,MACzB,IAAIsqD,EAAe,KACfC,EAAoB,KACpBC,EAAuB,KAC3B,MAAM5jF,EAAa7hB,KAAKilG,MAAMpjF,WAC9B,IAAI6jF,GAAgB,EACpB,IAAK,MAAM9/E,KAAOnD,EAAM,CACpB,GAAI8iF,GACIA,EAAa7iF,QAAQ5c,QAAQ8f,EAAIngB,KAAO,EAAG,CAE3CzF,KAAK0+E,aAAa8mB,EAAmB5/E,GAAK,GAC1C,QACH,CAGL,GADA2/E,EAAevlG,KAAK2lG,kBAAkB//E,EAAIngB,IACtB,MAAhB8/F,EAAsB,CACtBG,IAEA,MAAME,EAAarlD,MAAM,MAAOvgD,KAAKi7C,MAChCyG,SAAS,GAAG1hD,KAAKktD,mBACjB7sD,KAAK,SAAU,GAAGqlG,KACvBF,EAAoBjlD,MAAM,MAAOqlD,EAAWxiD,SACvC1B,SAAS,GAAG1hD,KAAKktD,qBACtBltD,KAAK0+E,aAAa8mB,EAAmB5/E,GAAK,GAC1C,QACH,CACD,MAAMzB,EAAOtC,EAAWzf,QAAOqR,GAAKA,EAAE0P,OAASyC,EAAIngB,KAAI,GACvD,GAAI0e,EAAJ,CACI,MAAM0hF,EAAYtlD,MAAM,MAAOvgD,KAAKi7C,MAC/ByG,SAAS,GAAG1hD,KAAKktD,kBACtBltD,KAAK0+E,aAAamnB,EAAWjgF,GAAK,EAAMzB,EAAKjB,QAC7C2iF,EACK5qE,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAG1hD,KAAKktD,qBACjBjyB,SAAS,UAAUvnB,GAAKA,EACxBguC,SAAS,GAAG1hD,KAAKktD,wBACjBtM,MAAMw2B,EAAOvjE,QAAQ,eAAgB,cACrCquC,GAAG,QAASliD,KAAK8lG,0BAA0BrzD,KAAKzyC,UAExD,MACD,GAAIA,KAAK0kG,YAAYhiF,QAAQ5c,QAAQ8f,EAAIngB,KAAO,EAAhD,CAEI,GAA4B,MAAxBggG,EAA8B,CAC9B,MAAMM,EAAgBxlD,MAAM,MAAOvgD,KAAKi7C,MACnCyG,SAAS,GAAG1hD,KAAKktD,sBACtBu4C,EAAuBllD,MAAM,MAAOwlD,EAAc3iD,SAC7C1B,SAAS,GAAG1hD,KAAKktD,oBACzB,CACDltD,KAAK0+E,aAAa+mB,EAAsB7/E,GAAK,EAEhD,MAED5lB,KAAK0+E,aAAa4mB,EAAO1/E,GAAK,EACjC,CACD,GAAI6/E,EAAsB,CACtB,MAAMO,EAAmBzlD,MAAM,MAAOklD,EAAqBriD,QAAQhD,eAC9DsB,SAAS,GAAG1hD,KAAKktD,qBACtB84C,EAAiB/qE,SAAS,UAAUvnB,GAAKA,EACpCguC,SAAS,GAAG1hD,KAAKktD,uBACjBtM,MAAMw2B,EAAOvjE,QAAQ,eAAgB,aACrCquC,GAAG,QAASliD,KAAKimG,qBAAqBxzD,KAAKzyC,SACT,GAAnCA,KAAK0kG,YAAYhiF,QAAQ9gB,QACzBokG,EAAiB/qE,SAAS,UAAUvnB,GAAKA,EACpCguC,SAAS,GAAG1hD,KAAKktD,sBACjBtM,MAAMw2B,EAAOvjE,QAAQ,eAAgB,YACrCquC,GAAG,QAASliD,KAAKkmG,oBAAoBzzD,KAAKzyC,QAEtD,CACDugD,MAAMvgD,KAAKi7C,MACNhgB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAG1hD,KAAKktD,oBACjBjyB,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,oBACTzmB,SAAS,SAASvnB,IACnBA,EAAEwG,KAAK,OAAQ,YACXla,KAAKilG,MAAME,aACXzxF,EAAEwG,KAAK,UAAW,IAEtBxG,EAAEwuC,GAAG,SAAUliD,KAAKmmG,4BAA4B1zD,KAAKzyC,MAAM,IAE1Di7B,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,kBACTzmB,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,eACTsB,QAAQo0B,EAAOvjE,QAAQ,eAAgB,2BACvConB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAG1hD,KAAKktD,yBACjBjyB,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,oBACTzmB,SAAS,SAASvnB,IACnBA,EAAEwG,KAAK,OAAQ,YACXla,KAAKilG,MAAMC,aACXxxF,EAAEwG,KAAK,UAAW,IAEtBxG,EAAEwuC,GAAG,SAAUliD,KAAKomG,2BAA2B3zD,KAAKzyC,MAAM,IAEzDi7B,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,kBACTzmB,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,eACTsB,QAAQo0B,EAAOvjE,QAAQ,eAAgB,2BAC7B7T,KAAKi7C,KAAKiZ,iBAAiB,IAAIl0D,KAAKktD,mBAC5C31C,SAAQysC,IACXzD,MAAMyD,GACD/oB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAG1hD,KAAKktD,qBACjBjyB,SAAS,UAAUvnB,GAAKA,EACxBguC,SAAS,GAAG1hD,KAAKktD,yBACjBtM,MAAMw2B,EAAOvjE,QAAQ,eAAgB,eACrCquC,GAAG,QAASliD,KAAKqmG,2BAA2B5zD,KAAKzyC,UAAQ,IAElEA,KAAKsmG,oBACR,CACD,kBAAAA,GACI,GAAwC,IAApCtmG,KAAK0kG,YAAYhiF,QAAQ9gB,OACzB,OACJ,IAAI2kG,EAAaC,EAAaC,EAAc,KAC5C,IAAK,IAAI7hG,EAAI,EAAGA,EAAI5E,KAAKi7C,KAAKotB,WAAWzmE,OAAQgD,IAAK,CAClD,MAAMo/C,EAAKhkD,KAAKi7C,KAAKotB,WAAWzjE,GAC5Bo/C,EAAGnC,UAAU3mB,SAAS,GAAGl7B,KAAKktD,sBAC1Bq5C,GAAeA,EAAY1kD,UAAU3mB,SAAS,GAAGl7B,KAAKktD,sBACtDs5C,EAAcD,GAGbviD,EAAGnC,UAAU3mB,SAAS,GAAGl7B,KAAKktD,qBAC/Bq5C,GAAeA,EAAY1kD,UAAU3mB,SAAS,GAAGl7B,KAAKktD,wBACtDu5C,EAAcziD,GAGtBuiD,EAAcviD,CACjB,CACD,IAAK,IAAIp/C,EAAI,EAAGA,EAAI5E,KAAKi7C,KAAKotB,WAAWzmE,OAAQgD,IAAK,CAClD,MAAMo/C,EAAKhkD,KAAKi7C,KAAKotB,WAAWzjE,GAC5Bo/C,EAAGnC,UAAU3mB,SAAS,GAAGl7B,KAAKktD,qBAAuBlJ,GAAMwiD,GAAexiD,GAAMyiD,GAChFziD,EAAGsN,kBAAkBA,kBAAkB5Q,aAAa,WAAY,GAEvE,CACD,MAAMgmD,EAAW,IAAI1mG,KAAKktD,uBAAuBltD,KAAKktD,sBAAsBltD,KAAKktD,mBAC3Ey5C,EAAe3mG,KAAKi7C,KAAKiZ,iBAAiBwyC,GAChD,IAAK,IAAI9hG,EAAI,EAAGA,EAAI+hG,EAAa/kG,OAAS,EAAGgD,IAAK,CACnC+hG,EAAa/hG,GACrB0sD,kBAAkBA,kBAAkB5Q,aAAa,WAAY,GACnE,CACJ,CACD,OAAAkmD,GACI,MAAMC,EAAc7mG,KAAK0kG,YAAYhiF,QAAQ9gB,OACvCklG,EAAW9mG,KAAKilG,MAAMpjF,WAAWjgB,OAAS,EAC1CiiB,EAAY7jB,KAAKilG,MAAMnjF,OAAOlgB,OAAS,EACvCmlG,EAAY/mG,KAAKilG,MAAMC,YACvB8B,EAAYhnG,KAAKilG,MAAME,YAC7B,OAAI0B,IAEAhjF,EACOijF,GAAYE,IAEnBF,IACOjjF,GAAakjF,GAG3B,CACD,oBAAAE,GACI,MAAMJ,EAAc7mG,KAAK0kG,YAAYhiF,QAAQ9gB,OACvCklG,EAAW9mG,KAAKilG,MAAMpjF,WAAWjgB,OAAS,EAC1CiiB,EAAY7jB,KAAKilG,MAAMnjF,OAAOlgB,OAAS,EACvCmlG,EAAY/mG,KAAKilG,MAAMC,YACvBgC,EAAclnG,KAAKilG,MAAME,YAC/B,OAAI0B,EACO,GAAGzvB,EAAOvjE,QAAQ,eAAgB,qBACzCgQ,GAAcijF,GAAaI,GAE3BJ,GAAajjF,GAAckjF,EAExB,GAAG3vB,EAAOvjE,QAAQ,eAAgB,0BAD9B,GAAGujE,EAAOvjE,QAAQ,eAAgB,2BAFlC,GAAGujE,EAAOvjE,QAAQ,eAAgB,wBAIhD,CACD,WAAAwoF,GACI,MAAM1qF,EAAW,IAAIgQ,oBAAoB3hB,KAAKo1B,OAC9C,IAAK,MAAMnR,KAASjkB,KAAKilG,MAAMnjF,OAC3BnQ,EAAS6Q,SAAS,CAAEE,QAASuB,EAAMvB,UAEvC,IAAK,MAAMyB,KAAQnkB,KAAKilG,MAAMpjF,WAC1BlQ,EAASqR,mBAAmBmB,EAAKhB,MAAOgB,EAAKjB,QAQjD,OANIljB,KAAKilG,MAAMC,aACXvzF,EAAS0R,iBAETrjB,KAAKilG,MAAME,aACXxzF,EAAS2R,YAEN3R,CACV,CACD,YAAA+sE,CAAahrE,EAAGkS,EAAKuhF,EAASjkF,EAAS,MACnCxP,EAAEunB,SAAS,OAAOvnB,IACdA,EAAErT,KAAK,QAASulB,EAAIngB,IACpB,MAAMiT,EAAUwK,EACV,GAAG0C,EAAIlN,YAAY1Y,KAAK2kG,QAAQzhF,GAAQxK,WACxCkN,EAAIlN,QACLyuF,EAeDzzF,EACKguC,SAAS,GAAG1hD,KAAKktD,yBACjBlK,QAAQtqC,GAhBbhF,EACKguC,SAAS,GAAG1hD,KAAKktD,oBACjBjyB,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,YACTzmB,SAAS,SAASvnB,IACnBA,EAAEwG,KAAK,OAAQ,YACXla,KAAK0kG,YAAYhiF,QAAQ5c,QAAQ8f,EAAIngB,KAAO,GAC5CiO,EAAEwG,KAAK,UAAW,IAEtBxG,EAAEwuC,GAAG,SAAUliD,KAAKonG,yBAAyB30D,KAAKzyC,MAAM,IAEvDgjD,QAAQtqC,IAMhB,GAER,CACD,iBAAAitF,CAAkBxiF,GACd,MAAM9c,EAAQrG,KAAKqnG,uBAAuBlkF,GAC1C,OAAI9c,GAAS,EACFrG,KAAKilG,MAAMnjF,OAAOzb,GACtB,IACV,CACD,sBAAAghG,CAAuBlkF,GACnB,IAAK,IAAIve,EAAI,EAAGA,EAAI5E,KAAKilG,MAAMnjF,OAAOlgB,OAAQgD,IAAK,CAE/C,GADc5E,KAAKilG,MAAMnjF,OAAOld,GACtB8d,QAAQ5c,QAAQqd,IAAU,EAChC,OAAOve,CACd,CACD,OAAQ,CACX,CACD,0BAAAwhG,CAA2BlpE,GACvBl9B,KAAKilG,MAAMC,aAAellG,KAAKilG,MAAMC,YACrCllG,KAAK4kG,WAAa5kG,KAAK4kG,WAC1B,CACD,2BAAAuB,CAA4BjpE,GACxBl9B,KAAKilG,MAAME,aAAenlG,KAAKilG,MAAME,YACrCnlG,KAAK4kG,WAAa5kG,KAAK4kG,WAC1B,CACD,wBAAAwC,CAAyBlqE,GACrB,MACM/Z,EADQ+Z,EAAGz5B,OACG28C,cAAcA,cAAc6V,aAAa,cAEvD5vD,EAAQrG,KAAK0kG,YAAYhiF,QAAQ5c,QAAQqd,GAC/C,GAAI9c,GAAS,EACTrG,KAAK0kG,YAAYhiF,QAAQvc,OAAOE,EAAO,OAEtC,CACDrG,KAAK0kG,YAAYhiF,QAAQje,KAAK0e,GAC9B,MAAMV,EAAOziB,KAAKolG,sBAClBplG,KAAK0kG,YAAYhiF,QAAU1iB,KAAK0kG,YAAYhiF,QAAQlP,MAAK,CAAC+sB,EAAMC,IAC7C/d,EAAK6kF,WAAUpjF,GAAKA,EAAEze,IAAM86B,IAC5B9d,EAAK6kF,WAAUpjF,GAAKA,EAAEze,IAAM+6B,KAGlD,CACDxgC,KAAKglG,SACR,CACD,oBAAAiB,GACIjmG,KAAKilG,MAAMnjF,OAAOrd,KAAK,CAAEie,QAAS1iB,KAAK0kG,YAAYhiF,UACnD,MAAMD,EAAOziB,KAAKolG,sBAClBplG,KAAKilG,MAAMnjF,OAAS9hB,KAAKilG,MAAMnjF,OAAOtO,MAAK,CAAC+zF,EAAIC,IAC5B/kF,EAAK6kF,WAAUpjF,GAAKA,EAAEze,IAAM8hG,EAAG7kF,QAAQ,KACvCD,EAAK6kF,WAAUpjF,GAAKA,EAAEze,IAAM+hG,EAAG9kF,QAAQ,OAG3D1iB,KAAK6kG,kBACL7kG,KAAKglG,SACR,CACD,0BAAAqB,CAA2BnpE,GACvB,MAAMuqE,EAAMvqE,EAAGz5B,OACT4C,EAAQiR,OAAO3N,SAAS89F,EAAIrnD,cAAcA,cAAc6V,aAAa,gBAC3Ej2D,KAAKilG,MAAMnjF,OAAO3b,OAAOE,EAAO,GAChCrG,KAAKglG,SACR,CACD,yBAAAc,CAA0B5oE,GACtB,MACM/Z,EADM+Z,EAAGz5B,OACG28C,cAAcA,cAAcsgB,cAAc,IAAI1gE,KAAKktD,yBAChE+I,aAAa,cACZ5vD,EAAQrG,KAAKilG,MAAMpjF,WAAWylF,WAAU7zF,GAAKA,EAAE0P,OAASA,IAC1D9c,GAAS,IACTrG,KAAKilG,MAAMpjF,WAAW1b,OAAOE,EAAO,GACpCrG,KAAKglG,UAEZ,CACD,mBAAAkB,CAAoBhpE,GAChBl9B,KAAKo1B,MAAML,WACX,MAAM5R,EAAQnjB,KAAK0kG,YAAYhiF,QAAQ,GACjCkD,EAAM5lB,KAAKolG,sBAAsBhjG,QAAO8hB,GAAKA,EAAEze,IAAM0d,IAAO,GAClEnjB,KAAK00E,aAAapB,SAAS,CACvBtZ,OAAQ98B,EAAGz5B,OACXqqE,mBAAqBzrE,GACVrC,KAAK2kG,QAAQtiG,EAAKoD,IAAI4nB,aAAavnB,QAAQ8f,EAAI5K,KAAK/M,WAAa,EAE5EulE,qBAAuBnzE,IACnBL,KAAKilG,MAAMpjF,WAAWpd,KAAK,CACvB0e,MAAOA,EACPD,OAAQ7iB,EAAKoF,KAEjBzF,KAAK6kG,kBACL7kG,KAAKglG,SAAS,GAGzB,CACD,KAAAvkF,GACIzgB,KAAK6kG,kBACL7kG,KAAK8kG,YACL9kG,KAAKglG,SACR,CACD,eAAAH,GACI7kG,KAAK0kG,YAAc,CACfhiF,QAAS,GAEhB,CACD,SAAAoiF,GACI9kG,KAAKilG,MAAQ,CACTnjF,OAAQ,GACRD,WAAY,GACZsjF,aAAa,EACbD,aAAa,EAEpB,CACD,OAAAF,GACIhlG,KAAK4kG,WAAa5kG,KAAK4kG,YACvB5kG,KAAKqlG,YACR,CACD,kBAAAjwB,GACI,MAAMr8D,EAAQ/Y,KAAKo1B,MAAML,WACnB8jD,EAAQ74E,KAAKo1B,MAAML,WAAWjC,mBAC9BjT,EAAQ,GACd,IAAK,MAAM4R,KAAQonD,EAAO,CAEtB,IAAKpnD,GAAmB,OAAXA,EAAKhsB,IAA0B,OAAXgsB,EAAKhsB,IAA0B,UAAXgsB,EAAKhsB,GACtD,SACJzF,KAAK2kG,QAAQlzE,EAAKhsB,IAAMgsB,EACxB,MAAMe,EAAczZ,EACfuZ,uBAAuBb,EAAKhsB,IAC3BpD,EAAO,CACToD,GAAIgsB,EAAKhsB,GACT8X,KAAMiV,GAEV3S,EAAMpb,KAAKpC,EACd,CACD,IAAI8mE,EAASnpE,KAAKi7C,KAAKx1C,GACnB0jE,IACAA,GAAU,kBAEd,MAAM+P,EAAc,CAChBr5D,MAAOA,EACPpa,GAAI0jE,EACJsC,sBAAsB,EACtBvC,iBAAiB,GAErBlpE,KAAK00E,aAAe,IAAIzC,UAAUiH,EACrC,EAGL,MAAMwuB,mBACF,WAAA7nG,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EACfr8B,KAAKsM,QAAU,IAClB,CACD,IAAA00C,CAAK5rB,GACD,MAAMuyE,EAAYvyE,GAASp1B,KAAKq8B,QAAQrH,WAsDxC,OApDAh1B,KAAKo1B,MAAQp1B,KAAKq8B,QAAQuE,cAC1B5gC,KAAKo1B,MAAMtc,aAAa6uF,EAAUjyE,cAG7B11B,KAAKsM,UACNtM,KAAKsM,QAAU,IAAIsC,SAAQ,CAACC,EAASC,KACjC,MAAMilF,EAAK/zF,KAAKq8B,QAAQwM,cAAcsG,WAAW,iBACjDnvC,KAAKqH,KAAOrH,KAAK2wD,aACjB,IAAI6N,EAAMu1B,EAAGvyF,KAAK,CACdo/C,MAAOw2B,EAAOvjE,QAAQ,eAAgB,mBACtCxM,KAAMrH,KAAKqH,KACX02D,SAAU,MACF/9D,KAAKo1B,MAAMsG,oBAAsB17B,KAAK0nD,SAASk/C,aAEnDe,EAAUjsE,kBAAoB17B,KAAKo1B,MAAMsG,kBACrCisE,EAAUjsE,mBACVisE,EAAUjqE,gBAAe/rB,IACrB,MAAM4iE,EAAIv0E,KAAK0nD,SAAS20C,cACxB1qF,EAASmH,aAAay7D,EAAElwD,aAAa,IAG7CsjF,EAAU/vE,iBAAiB,CACvBC,KAAM1D,EAAgBkJ,YACtBY,aAAa,IAEjBpvB,KACO,GAEXurD,SAAU,KACNvrD,GAAS,IAGjB7O,KAAK0nD,SAAW,IAAI+8C,qBAAqB,CACrCxpD,KAAMj7C,KAAKqH,KAAKq5D,cAAc,0BAC9BtrC,MAAOp1B,KAAKo1B,MACZwvE,UAAW,KACPpmC,EAAImC,aACJ,MAAMimC,EAAU5mG,KAAK0nD,SAASk/C,UAC9B,IAAKA,EAAS,CACV,MAAM33F,EAAQjP,KAAK0nD,SAASu/C,uBAC5BzoC,EAAI0C,UAAUjyD,EAAO,UACxB,CACWuvD,EAAI8B,iBACXI,cAAc,wBACfnnC,UAAYqtE,GAAW5mG,KAAKo1B,MAAMsG,iBAAiB,IAG3D17B,KAAKo1B,MAAMsG,mBACX17B,KAAK0nD,SAAS4I,QACjB,KAGFtwD,KAAKsM,QAAQM,OAAM0yB,GAAKhxB,QAAQW,MAAMqwB,KACxCxyB,SAAQ,IAAM9M,KAAKsM,QAAU,MACrC,CACD,UAAAqkD,GAoBI,OAnBUpQ,MAAM,OACXtlB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,sBACTzmB,SAAS,SAASvnB,GAAKA,EACvBguC,SAAS,oBACTzmB,SAAS,SAASvnB,IACnBA,EAAEwG,KAAK,OAAQ,YACXla,KAAKo1B,MAAMsG,mBACXhoB,EAAEwG,KAAK,UAAW,IAEtBxG,EAAEwuC,GAAG,SAAUliD,KAAK4nG,gCAAgCn1D,KAAKzyC,MAAM,IAE9Di7B,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,kBACTzmB,SAAS,QAAQvnB,GAAKA,EACtBguC,SAAS,eACTsB,QAAQo0B,EAAOvjE,QAAQ,eAAgB,0BACvConB,SAAS,OAAOvnB,GAAKA,EACrBjO,GAAG,2BACC29C,OACZ,CACD,+BAAAwkD,CAAgCtoE,GAG5B,GAFAt/B,KAAKo1B,MAAMsG,mBAAqB17B,KAAKo1B,MAAMsG,kBAC3C17B,KAAKqH,KAAKq5D,cAAc,0BAA0B9d,UAAY,GAC1D5iD,KAAKo1B,MAAMsG,kBACX17B,KAAK0nD,SAAS4I,aAEb,CACD,MAAMm3C,EAAMznG,KAAKqH,KAAOrH,KAAKqH,KAAKwgG,QAAQ,eAAennC,cAAc,+BAAiC,KACpG+mC,IACAA,EAAIluE,UAAW,EAEtB,CACJ,EAML,MAAMuuE,uBAAuB9sD,OAMzB,WAAAn7C,CAAYo7C,EAAMmmC,GACdj0E,MAAM8tC,GACNj7C,KAAK+nG,kBAAoB,KACrB,IAAIL,mBAAmB1nG,KAAKq8B,SAAS2kB,KAAKhhD,KAAKg1B,WAAW,EAE9Dh1B,KAAKq9E,qBAAuB,KAC5Br9E,KAAKohF,YAAcA,EACnBphF,KAAKikB,MAAQuQ,EAAY3B,MAAQ2B,EAAY8kB,WAChD,CACD,IAAAvS,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAKs7C,cACLt7C,KAAK48E,qBACR,CACD,aAAI1vB,GACA,MAAO,YACV,CACD,aAAAvX,GACI,MAAO,gBACV,CAID,WAAAuF,GACIl7C,KAAKswD,QACR,CACD,WAAA03C,GACI,MAAM5yE,EAAQp1B,KAAKg1B,WACnB,GAAII,EAAMsG,kBAAmB,CACzB,MAAMI,EAAe1G,EAAMmI,yBACrBzb,EAASga,EAAarY,oBACtBooB,EAAQ/P,EAAanY,gBAC3B,IAAIskF,EAAW,GACf,MAAMxlF,EAAO2S,EAAM+I,aACnB,IAAK,MAAMla,KAASnC,EAAQ,CACxB,MAAMomF,EAAWjkF,EAAMvB,QAAQ5gB,KAAItB,IAC/B,MAAMolB,EAAMnD,EAAKgb,MAAKvZ,GAAKA,EAAEze,IAAMjF,IACnC,OAAIolB,EACOA,EAAIlN,QAGJ,EACV,IAELuvF,EAASxjG,KAAK,IAAIyjG,EAAS3mG,KAAK,SACnC,CACD,MAAM4mG,EAAcF,EAAS1mG,KAAK,MAClC,IAAI6mG,EAAU,GACd,MAAMvvB,EAAQzjD,EAAML,WAAWjC,mBAC/B,IAAK,MAAM3O,KAAQ0nB,EAAO,CACtB,MAAMjmB,EAAMnD,EAAKgb,MAAKvZ,GAAKA,EAAEze,IAAM0e,EAAKhB,QAClCsO,EAAOonD,EAAMp7C,MAAK/e,GAAKA,EAAEjZ,IAAM0e,EAAKjB,SACtC0C,GAAO6L,GACP22E,EAAQ3jG,KAAK,GAAGmhB,EAAIlN,YAAY+Y,EAAK/Y,WAE5C,CACD,MAAM2vF,EAAaD,EAAQ7mG,KAAK,MAChC,MAAO,GAAG4mG,GAAe/wB,EAAOvjE,QAAQ,eAAgB,wBAAwBw0F,EAAa,IAAIA,KAAgBjxB,EAAOvjE,QAAQ,eAAgB,iBACnJ,CAEG,OAAOujE,EAAOvjE,QAAQ,eAAgB,qBAE7C,CACD,MAAAy8C,GACItwD,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBAChC,MAAMo7C,EAAW9tD,EAAayF,oBAC1BqoD,GACAtoG,KAAKi7C,KAAK4G,UAAUn8B,IAAI4iF,GAEvBtoG,KAAKuoG,aACNvoG,KAAKuoG,WAAajhG,SAAS8iC,cAAc,KACzCpqC,KAAKuoG,WAAW7nD,aAAa,OAAQ,sBACrC1gD,KAAKi7C,KAAK5Q,YAAYrqC,KAAKuoG,aAG/BvoG,KAAKuoG,WAAWxgC,YAAc/nE,KAAKgoG,cACnChoG,KAAKuoG,WAAW1zD,oBAAoB,QAAS70C,KAAK+nG,mBAClD/nG,KAAKuoG,WAAW51D,iBAAiB,QAAS3yC,KAAK+nG,kBAClD,CACD,KAAAtnF,GACIzgB,KAAKi7C,KAAK2H,UAAY,GACtB5iD,KAAKuoG,WAAa,IACrB,CACD,mBAAA3rB,GACI,MAAMxnD,EAAQp1B,KAAKg1B,WACnBh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IACjDhqB,KAAKk7C,aAAa,GAEzB,CACD,mBAAAyhC,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKg1B,WACbyQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,WAAA/hC,GACIt7C,KAAKygB,QACLzgB,KAAK28E,qBACR,CACD,QAAA3nD,GACI,OAAOh1B,KAAKohF,aAAephF,KAAKq8B,QAAQrH,UAC3C,EAGL,MAAMwzE,qBAAqBxtD,OAKvB,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKyoG,aAAe,KAChB,MAAMt2F,EAAYnS,KAAK0oG,SAASloG,MAChClB,EAAK4S,iBAAiBC,GACtBnS,KAAKq8B,QAAQga,eAAe7hB,EAAYjI,IAAI,EAEhDvsB,KAAKikB,MAAQuQ,EAAY9H,IAC5B,CACD,IAAAqa,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GACpBzN,KAAKygB,QACLzgB,KAAKswD,QACR,CACD,aAAA3a,GACI,MAAO,cACV,CACD,MAAA2a,GACI,MAAMq4C,EAAUrpG,EAAKgU,aACrB,GAAIq1F,EAAQ/mG,OAAS,EAAG,CACpB5B,KAAK0oG,SAAWphG,SAAS8iC,cAAc,UACvC,IAAK,IAAI72B,KAAUo1F,EAAS,CACxB,IAAIC,EAAWthG,SAAS8iC,cAAc,UACtCw+D,EAASpoG,MAAQ+S,EAAOA,OACxBq1F,EAAShmD,UAAY5iD,KAAK6oG,kBAAkBt1F,GAC5CvT,KAAK0oG,SAASr+D,YAAYu+D,EAC7B,CACD5oG,KAAK0oG,SAASloG,MAAQlB,EAAK2S,mBAC3BjS,KAAK0oG,SAAS7mD,UAAUn8B,IAAI,cAC5B1lB,KAAK0oG,SAAS/1D,iBAAiB,SAAU3yC,KAAKyoG,cAC9CzoG,KAAKi7C,KAAK5Q,YAAYrqC,KAAK0oG,SAC9B,CACJ,CACD,iBAAAG,CAAkBt1F,GACd,OAAIA,EAAOrC,aAAeqC,EAAOpC,YACtB,GAAGoC,EAAOrC,iBAAiBqC,EAAOpC,cAEpCoC,EAAOrC,YACLqC,EAAOrC,YAETqC,EAAOpC,YACLoC,EAAOpC,YAEXoC,EAAOA,MACjB,CACD,KAAAkN,GACIzgB,KAAKi7C,KAAK2H,UAAY,EACzB,CACD,WAAAtH,GACIt7C,KAAKygB,OACR,EAML,MAAMqoF,wBAAwB9tD,OAK1B,WAAAn7C,CAAYo7C,GACR9tC,MAAM8tC,GACNj7C,KAAKq9E,qBAAuB,KAC5Br9E,KAAKikB,MAAQuQ,EAAY3B,MAAQ2B,EAAY8kB,YAC7Ct5C,KAAK+oG,aAAe,QACvB,CACD,IAAAhiE,CAAK1K,EAAS5uB,GACVN,MAAM45B,KAAK1K,EAAS5uB,GAChBA,GAAWA,EAAQs7F,eACnB/oG,KAAK+oG,aAAet7F,EAAQs7F,cAEhC/oG,KAAKs7C,cACLt7C,KAAK48E,qBACR,CACD,aAAI1vB,GACA,MAAO,iBACV,CACD,aAAAvX,GACI,MAAO,WACV,CAID,WAAAuF,GACIl7C,KAAKswD,QACR,CACD,MAAAA,GACItwD,KAAKi7C,KAAK4G,UAAUn8B,IAAI,GAAG1lB,KAAKktD,aAChC,MAAMo7C,EAAW9tD,EAAayF,oBAC1BqoD,GACAtoG,KAAKi7C,KAAK4G,UAAUn8B,IAAI4iF,GAEvBtoG,KAAKgpG,WACNhpG,KAAKgpG,SAAW1hG,SAAS8iC,cAAc,OACvCpqC,KAAKgpG,SAASnnD,UAAUn8B,IAAI,GAAG1lB,KAAKktD,kBACpCltD,KAAKgpG,SAASnnD,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBACpCltD,KAAKi7C,KAAK5Q,YAAYrqC,KAAKgpG,WAE1BhpG,KAAKipG,eACNjpG,KAAKipG,aAAe3hG,SAAS8iC,cAAc,QAC3CpqC,KAAKipG,aAAarmD,UAAY,IAC9B5iD,KAAKipG,aAAapnD,UAAUn8B,IAAI,GAAG1lB,KAAKktD,sBACxCltD,KAAKi7C,KAAK5Q,YAAYrqC,KAAKipG,eAE1BjpG,KAAKkpG,cACNlpG,KAAKkpG,YAAc5hG,SAAS8iC,cAAc,QAC1CpqC,KAAKkpG,YAAYrnD,UAAUn8B,IAAI,GAAG1lB,KAAKktD,qBACvCltD,KAAKkpG,YAAYrnD,UAAUn8B,IAAI,GAAG1lB,KAAKktD,mBACvCltD,KAAKi7C,KAAK5Q,YAAYrqC,KAAKkpG,cAG/B,MAAM9zE,EAAQp1B,KAAKq8B,QAAQrH,WACrBm0E,EAAY/zE,EAAMrW,UAClBqqF,EAAmBh0E,EAAMyM,kBAAoB,GAC7CtkB,EAAOvd,KAAK+oG,aACbl+F,QAAQ,SAAUs+F,GAClBt+F,QAAQ,gBAAiBu+F,GAC9BppG,KAAKgpG,SAASjhC,YAAcxqD,EAC5Bvd,KAAKkpG,YAAYnhC,YAAcxqD,EAC/Bvd,KAAKipG,aAAarxF,MAAMsgD,WAAa9iC,EAAMmG,aAAe,UAAY,QACzE,CACD,KAAA9a,GACIzgB,KAAKi7C,KAAK2H,UAAY,GACtB5iD,KAAKgpG,SAAW,KAChBhpG,KAAKkpG,YAAc,KACnBlpG,KAAKipG,aAAe,IACvB,CACD,mBAAArsB,GACI,MAAMxnD,EAAQp1B,KAAKq8B,QAAQrH,WAC3Bh1B,KAAKq9E,qBAAuBjoD,EAAM6H,oBAAmBjT,IACjDhqB,KAAKk7C,aAAa,GAEzB,CACD,mBAAAyhC,GACI,GAAI38E,KAAKq9E,qBAAsB,CACbr9E,KAAKq8B,QAAQrH,WACrByQ,sBAAsBzlC,KAAKq9E,qBACpC,CACJ,CACD,WAAA/hC,GACIt7C,KAAKygB,QACLzgB,KAAK28E,qBACR,EAGL,MAAM0sB,KAEF,WAAAxpG,GACIG,KAAKspG,SAAW,CAAChiG,UACjBtH,KAAKupG,mBAAqB,CACtBhF,cAAc,EACdiF,kCAAkC,EAClCC,oBAAqB,4BACrBjlG,OAAQ,CACJklG,0BAA0B,EAC1BC,WAAW,EACXlI,sBAAsB,GAE1BpvD,QAAS,CACLu3D,WAAY,CACRlJ,YAAY,IAGpBvsD,SAAU,CAAE,GAEhBn0C,KAAK6pG,YAAc,GACnB7pG,KAAK8pG,cAAgB,GACrB9pG,KAAKukG,cAAe,EACpBvkG,KAAK8sC,SAAWV,kBAAkBC,cAClCrsC,KAAK+pG,eACL/pG,KAAKgqG,eACR,CACD,YAAAD,GACI/pG,KAAKq8B,QFxvMb,SAAS4tE,kBACL,IAAK5vD,EACD,MAAMrtC,MAAM,uBAEhB,OAAOqtC,GACX,CEmvMuB4vD,EAClB,CACD,gBAAA1W,GACI,OAAOvzF,KAAK8sC,SAASqC,WAAW,gBACnC,CACD,IAAApI,CAAKt5B,GACD,IACIzN,KAAKq8B,QAAQyX,YAETrmC,GAAWA,EAAQy8F,cACnBlqG,KAAKspG,SAAWtpG,KAAKspG,SAAS9oF,OAAO/S,EAAQy8F,cACjDlqG,KAAK6pG,YAAc7pG,KAAKmqG,YAAY18F,GACpCzN,KAAK8pG,cAAgBzqG,EAAMwF,WAAW7E,KAAKupG,mBAAmB/kG,OAAQxE,KAAK6pG,YAAYrlG,QACvFxE,KAAKoqG,YAAYpqG,KAAK6pG,aACtB7pG,KAAKq8B,QAAQ0K,KAAK/mC,KAAK6pG,aACvB7pG,KAAKqqG,UACR,CACD,MAAO9iE,GACHvnC,KAAKq8B,QAAQ2a,WAAW,CAAEhf,OAAQ,OAAQ8a,YAAavL,GAC1D,CACJ,CACD,WAAA4iE,CAAY18F,GAkBR,OAjBAA,EAAUpO,EAAMwF,WAAW7E,KAAKupG,mBAAoB97F,IAEvC4kC,QAAQi4D,WACjB78F,EAAQ4kC,QAAQi4D,SAAW78F,EAAQ4kC,QAAQu3D,YAAc,IAGzDn8F,EAAQgjC,oBACRzwC,KAAKq8B,QAAQ5uB,QAAQgjC,kBAAoBhjC,EAAQgjC,mBAGrDhjC,EAAQ4kC,QAAQi4D,SAAS18C,OACrBvuD,EAAMwF,WAAW,GAAI4I,EAAQjJ,OAAOopD,OAAQngD,EAAQ4kC,QAAQi4D,SAAS18C,QACzE5tD,KAAKukG,aAAe92F,EAAQ82F,eAAgB,EACvC92F,EAAQ4kC,QAAQk4D,eACjB98F,EAAQ4kC,QAAQk4D,aAAe,IAEnC98F,EAAQ4kC,QAAQk4D,aAAahG,aAAevkG,KAAKukG,aAC1C92F,CACV,CACD,WAAA28F,CAAY38F,GACR,IAAIq8E,EAAa,aACb0gB,EAAe,eACfC,EAAgB,gBAChBC,EAAc,cACdC,EAAa,aAEbC,EAAY,YACZC,EAAa,aACbC,EAAiB,iBACjBrC,EAAe,eACfsC,EAAiB,iBACjBC,EAAc,oBACdC,EAAc,cACdC,EAAe,eACfC,EAAiB,iBACjB19F,EAAQ29F,QACRL,EAAiBt9F,EAAQ29F,MAAML,gBAAkBA,EACjDjhB,EAAar8E,EAAQ29F,MAAMthB,YAAcA,EACzC0gB,EAAe/8F,EAAQ29F,MAAMZ,cAAgBA,EAC7CG,EAAal9F,EAAQ29F,MAAMT,YAAcA,EACzCF,EAAgBh9F,EAAQ29F,MAAMX,eAAiBA,EAC/CC,EAAcj9F,EAAQ29F,MAAMV,aAAeA,EAC3CI,EAAiBr9F,EAAQ29F,MAAMN,gBAAkBA,EACjDD,EAAap9F,EAAQ29F,MAAMP,YAAcA,EACzCpC,EAAeh7F,EAAQ29F,MAAM3C,cAAgBA,EAC7CuC,EAAcv9F,EAAQ29F,MAAMJ,aAAeA,EAC3CC,EAAcx9F,EAAQ29F,MAAMC,iBAAmBJ,EAC/CL,EAAYn9F,EAAQ29F,MAAMR,WAAaA,EACvCM,EAAez9F,EAAQ29F,MAAME,eAAiBJ,EAC9CC,EAAiB19F,EAAQ29F,MAAMD,gBAAkBA,GAErD,MAAMI,EAAYvrG,KAAKwrG,eAAef,GAClCc,IAAcvrG,KAAKyrG,sBACnBzrG,KAAKyrG,oBAAsBzrG,KAAK0rG,0BAA0BH,GAC1DvrG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKyrG,sBAEhC,MAAME,EAAY3rG,KAAKwrG,eAAehB,GAClCmB,IAAc3rG,KAAK4rG,qBACnB5rG,KAAK4rG,mBAAqB5rG,KAAK6rG,yBAAyBF,GACxD3rG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAK4rG,qBAEhC,MAAME,EAAY9rG,KAAKwrG,eAAeb,GAClCmB,IAAc9rG,KAAK+rG,mBACnB/rG,KAAK+rG,iBAAmB/rG,KAAKgsG,uBAAuBF,GACpD9rG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAK+rG,mBAEhC,MAAM/b,EAAYhwF,KAAKwrG,eAAe1hB,GAMtC,GALIkG,IAAchwF,KAAKisG,mBACnBjsG,KAAKisG,iBAAmBjsG,KAAKksG,uBAAuBlc,GACpDhwF,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKisG,mBAEhCjsG,KAAKmsG,gBAAkBnsG,KAAKwrG,eAAed,GACvC1qG,KAAKmsG,gBAAiB,CACtB,IAAKnsG,KAAKosG,iBAAkB,CACxB,IAAIC,EAAY9wD,WAAWv7C,KAAKmsG,gBAAiB,MAAO,CAAE1wD,SAAU,oBACpEz7C,KAAKosG,iBAAmBpsG,KAAKssG,uBAAuBD,GACpDrsG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKosG,iBAC/B,CACD,GAAIpsG,KAAK8pG,cAAcH,YAAc3pG,KAAKusG,YAAa,CACnD,IAAIC,EAAajxD,WAAWv7C,KAAKmsG,gBAAiB,MAAO,CAAE1wD,SAAU,oBACrE+wD,EAAW50F,MAAM0yB,QAAU,OAC3BtqC,KAAKusG,YAAcvsG,KAAKysG,kBAAkBD,GAC1CxsG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKusG,YAC/B,CACJ,CACD,MAAMG,EAAY1sG,KAAKwrG,eAAeT,GAClC2B,IAAc1sG,KAAK2sG,kBACnB3sG,KAAK2sG,gBAAkB3sG,KAAK4sG,sBAAsBF,GAClD1sG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAK2sG,kBAEhC,MAAME,EAAY7sG,KAAKwrG,eAAeZ,GAClCiC,IAAc7sG,KAAK8sG,kBACnB9sG,KAAK8sG,gBAAkB9sG,KAAK+sG,sBAAsBF,GAClD7sG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAK8sG,kBAEhC,MAAME,EAAYhtG,KAAKwrG,eAtEN,cAuEbwB,IAAchtG,KAAKitG,mBACnBjtG,KAAKitG,iBAAmBjtG,KAAKktG,uBAAuBF,GACpDhtG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKitG,mBAEhC,MAAME,EAAYntG,KAAKwrG,eAAeX,GAClCsC,IAAcntG,KAAKotG,gBACnBptG,KAAKotG,cAAgBptG,KAAKqtG,oBAAoBF,GAC9CntG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKotG,gBAEhC,MAAME,EAAYttG,KAAKwrG,eAAeV,GAClCwC,IAActtG,KAAKutG,uBACnBvtG,KAAKutG,qBAAuBvtG,KAAKwtG,2BAA2BF,GAC5DttG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKutG,uBAEhC,MAAME,EAAYztG,KAAKwrG,eAAe/C,GACtC,GAAIgF,EAAW,CACX,MAAMh4D,EAASz1C,KAAK0tG,mBAAmBD,GACvCztG,KAAKq8B,QAAQ4Z,UAAUR,EAC1B,CACD,MAAMk4D,EAAY3tG,KAAKwrG,eAAeR,GAClC2C,IAAc3tG,KAAK4tG,yBACnB5tG,KAAK4tG,uBAAyB5tG,KAAK6tG,wBAAwBF,GAC3D3tG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAK4tG,yBAEhC,MAAME,EAAY9tG,KAAKwrG,eAAeN,GAClC4C,IAAc9tG,KAAKuqG,eACnBvqG,KAAKuqG,aAAevqG,KAAK+tG,mBAAmBD,GAC5C9tG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKuqG,eAEhCvqG,KAAKguG,gBAAkBhuG,KAAKwrG,eAAeP,GAC3C,MAAMgD,EAAejuG,KAAKwrG,eAAeL,GACrC8C,IAAiBjuG,KAAKkuG,uBACtBluG,KAAKkuG,qBAAuBluG,KAAKmuG,2BAA2BF,GAC5DjuG,KAAKq8B,QAAQ4Z,UAAUj2C,KAAKkuG,sBAEnC,CACD,QAAA7D,GAAc,CACd,cAAAmB,CAAe4C,GACX,GAA2B,iBAAhBA,EAA0B,CACjC,IAAK,MAAMC,KAAWruG,KAAKspG,SAAU,CACjC,MAAMtlD,EAAKqqD,EAAQ/+C,eAAe8+C,GAClC,GAAIpqD,EACA,OAAOA,CACd,CACD,OAAO,IACV,CACD,OAAOoqD,CACV,CACD,0BAAAE,CAA2B5yD,GACvB,IAAIl3C,EAAS,GACb,IAAK,MAAM6pG,KAAWruG,KAAKspG,SAAU,CACjC,MAAMiF,EAAWF,EAAQn6C,iBAAiB,IAAMxY,GAChD,IAAK,IAAI92C,EAAI,EAAGA,EAAI2pG,EAAS3sG,OAAQgD,IACjCJ,EAAOC,KAAK8pG,EAAS3pG,GAE5B,CACD,OAAOJ,CACV,CAKD,mBAAAgqG,CAAoB/oF,GACZzlB,KAAKguG,sBAAqC,IAAVvoF,IAChCzlB,KAAKguG,gBAAgBp2F,MAAM0yB,QAAU,SACrCtqC,KAAKguG,gBAAgBprD,UAAYtjD,EAAKuU,QAAQ,kBAAkBhJ,QAAQ,MAAO4a,EAAMlR,YAE5F,CACD,UAAA6zB,GACI,OAAOpoC,KAAKq8B,OACf,CAKD,gBAAAoyE,CAAiB1sC,GACb/hE,KAAKq8B,QAAQwM,cAAcmG,gBAAgB,iBAAiB,IAAM+yB,GACrE,CAED,YAAA2sC,CAAajhG,GACTa,QAAQC,KAAK,yDACbvO,KAAKkpC,UAAUz7B,EAClB,CAKD,SAAAy7B,CAAUz7B,GACNA,EAAUA,GAAW,CAAE8oC,SAAS,GAChCv2C,KAAKq8B,QAAQ8a,cAETn3C,KAAKq8B,QAAQrH,WAAWnW,YAAc7e,KAAK8pG,cAAc6E,oBAE7D3uG,KAAK4uG,oBACL5uG,KAAKq8B,QAAQ6M,UAAU,CACnB+H,cAAexjC,EAAQwjC,cACvBpB,QAAUrrC,IACNxE,KAAK6uG,oBACL7uG,KAAK8uG,sBACL9uG,KAAKwuG,oBAAoBxuG,KAAKq8B,QAAQ2T,YAAYnnB,aAC1B,IAApBpb,EAAQ8oC,SACRv2C,KAAKq8B,QAAQga,eAAe7hB,EAAYujB,QAExCtqC,EAAQsc,UACRtc,EAAQsc,WAERtc,EAAQoiC,SACRpiC,EAAQoiC,SACX,EAEL5gC,MAAO,KACHjP,KAAK6uG,mBAAmB,IAGnC,CACD,mBAAAC,GACQ9uG,KAAKukG,cAAgBvkG,KAAKq8B,QAAQ2T,aAC/BhwC,KAAKq8B,QAAQ2T,YAAYtnB,iBAAmB,EAC/C1oB,KAAK+uG,sBAGL/uG,KAAKgvG,sBAEZ,CACD,mBAAAD,GAEC,CACD,oBAAAC,GAEC,CACD,aAAAhF,GAEIhqG,KAAKivG,YAAc1uD,MAAM,OACpBmB,SAAS,uBACTzmB,SAAS,OAAOvnB,GAAKA,EACrBguC,SAAS,GAAGxB,kBAA6B1F,EAAayF,qBACtDkD,QALQ,0VAMRC,OACR,CACD,iBAAAwrD,GACI,GAAI5uG,KAAK8pG,cAAcrI,sBAAwBzhG,KAAKmsG,kBAC3CnsG,KAAKivG,YAAYhrC,WAAY,CAC9B,IAAK,IAAIr/D,EAAI,EAAGA,EAAI5E,KAAKmsG,gBAAgB9iD,SAASznD,OAAQgD,IAAK,CAE3D27C,MADWvgD,KAAKmsG,gBAAgB9iD,SAASzkD,IAC/Bs8C,MACb,CACDlhD,KAAKmsG,gBAAgB9hE,YAAYrqC,KAAKivG,YACzC,CAER,CACD,iBAAAJ,GACI,GAAI7uG,KAAK8pG,cAAcrI,sBAAwBzhG,KAAKmsG,iBAC5CnsG,KAAKivG,YAAYhrC,WAAY,CAC7BjkE,KAAKivG,YAAYhrC,WAAWp5B,YAAY7qC,KAAKivG,aAC7C,IAAK,IAAIrqG,EAAI,EAAGA,EAAI5E,KAAKmsG,gBAAgB9iD,SAASznD,OAAQgD,IAAK,CAE3D27C,MADWvgD,KAAKmsG,gBAAgB9iD,SAASzkD,IAC/Bo8C,MACb,CACJ,CAER,CAMD,iBAAAyrD,CAAkBzX,GACd,OAAIh1F,KAAK8pG,cAAcoF,oBACZlvG,KAAK8pG,cAAcoF,oBAAoBla,GAGvC,IAAIgE,cAAchE,EAEhC,CAMD,sBAAAsX,CAAuBtX,GACnB,OAAIh1F,KAAK8pG,cAAcqF,mBACZnvG,KAAK8pG,cAAcqF,mBAAmBna,GAGtC,IAAIjD,eAAeiD,EAEjC,CAMD,yBAAA0W,CAA0BzwD,GACtB,OAAO,IAAIwoB,cAAcxoB,EAC5B,CAMD,wBAAA4wD,CAAyB5wD,GACrB,OAAO,IAAIghC,aAAahhC,EAC3B,CAMD,sBAAAixD,CAAuBjxD,GACnB,OAAO,IAAIsyC,WAAWtyC,EACzB,CAMD,kBAAAyyD,CAAmBzyD,GACf,OAAO,IAAIutD,aAAavtD,EAC3B,CAMD,mBAAAoyD,CAAoBpyD,GAChB,OAAO,IAAIu3C,cAAcv3C,EAC5B,CAMD,sBAAA+wD,CAAuB/wD,GACnB,OAAO,IAAIkmC,WAAWlmC,EACzB,CAMD,qBAAA8xD,CAAsB9xD,GAClB,OAAO,IAAIy0C,UAAUz0C,EACxB,CAMD,sBAAAiyD,CAAuBjyD,GACnB,OAAO,IAAIooC,WAAWpoC,EACzB,CAMD,qBAAA2xD,CAAsB3xD,GAClB,OAAO,IAAI6tD,gBAAgB7tD,EAC9B,CAKD,0BAAAuyD,CAA2BvyD,GACvB,OAAO,IAAIq3C,eAAer3C,EAC7B,CAKD,uBAAA4yD,CAAwB5yD,GACpB,OAAO,IAAIkmD,kBAAkBlmD,EAChC,CAKD,kBAAA8yD,CAAmB9yD,GACf,OAAO,IAAIqpD,aAAarpD,EAC3B,CAKD,0BAAAkzD,CAA2BlzD,GACvB,OAAO,IAAI6sD,eAAe7sD,EAC7B,CACD,MAAAm0D,GACQpvG,KAAKyrG,sBACLzrG,KAAKyrG,oBAAoBpwD,UACzBr7C,KAAKyrG,oBAAsB,MAE3BzrG,KAAK4rG,qBACL5rG,KAAK4rG,mBAAmBvwD,UACxBr7C,KAAK4rG,mBAAqB,MAE1B5rG,KAAKisG,mBACLjsG,KAAKisG,iBAAiB5wD,UACtBr7C,KAAKisG,iBAAmB,MAExBjsG,KAAK+rG,mBACL/rG,KAAK+rG,iBAAiB1wD,UACtBr7C,KAAK+rG,iBAAmB,MAExB/rG,KAAKosG,mBACLpsG,KAAKosG,iBAAiB/wD,UACtBr7C,KAAKosG,iBAAmB,MAExBpsG,KAAKusG,cACLvsG,KAAKusG,YAAYlxD,UACjBr7C,KAAKusG,YAAc,MAEnBvsG,KAAK2sG,kBACL3sG,KAAK2sG,gBAAgBtxD,UACrBr7C,KAAK2sG,gBAAkB,MAEvB3sG,KAAKotG,gBACLptG,KAAKotG,cAAc/xD,UACnBr7C,KAAKotG,cAAgB,MAErBptG,KAAKqvG,eACLrvG,KAAKqvG,aAAah0D,UAClBr7C,KAAKqvG,aAAe,MAEpBrvG,KAAKutG,uBACLvtG,KAAKutG,qBAAqBlyD,UAC1Br7C,KAAKutG,qBAAuB,MAE5BvtG,KAAK8sG,kBACL9sG,KAAK8sG,gBAAgBzxD,UACrBr7C,KAAK8sG,gBAAkB,MAEvB9sG,KAAKitG,mBACLjtG,KAAKitG,iBAAiB5xD,UACtBr7C,KAAKitG,iBAAmB,MAExBjtG,KAAKsvG,kBACLtvG,KAAKsvG,gBAAgBj0D,UACrBr7C,KAAKsvG,gBAAkB,MAEvBtvG,KAAKuqG,eACLvqG,KAAKuqG,aAAalvD,UAClBr7C,KAAKuqG,aAAe,MAEpBvqG,KAAK4tG,yBACL5tG,KAAK4tG,uBAAuBvyD,UAC5Br7C,KAAK4tG,uBAAyB,MAE9B5tG,KAAKguG,kBACLhuG,KAAKguG,gBAAgBprD,UAAY,GACjC5iD,KAAKguG,gBAAkB,MAEvBhuG,KAAKmsG,kBACLnsG,KAAKmsG,gBAAgBvpD,UAAY,GACjC5iD,KAAKmsG,gBAAkB,MAE3BnsG,KAAKspG,SAAW,CAAChiG,UACjBtH,KAAK+pG,cACR,EAuvBL,MAAMwF,mBAAmBlG,KACrB,WAAAxpG,GACIsN,QACAnN,KAAKwvG,QAAU,GACfxvG,KAAKyvG,YAAc,GACnBzvG,KAAKsrG,cAAgB,GACrBtrG,KAAK0vG,YAAc,cACnB1vG,KAAK2vG,cAAgB,gBACrB3vG,KAAKukG,cAAe,EACpBvkG,KAAK4vG,gBAAiB,EACtB5vG,KAAK6vG,oBAAqB,EAC1B7vG,KAAK8vG,oBAAsB,yhBAQ3B9vG,KAAKq8B,QAAQyU,uBAAwB,EACrC9wC,KAAK+vG,yBAA2B,CAAC7yC,EAAY59B,KACzC,IAAK49B,EAAWrb,UAAU3mB,SAASl7B,KAAK2vG,eAAgB,CACpD,MAAMhlG,EAASuyD,EAAWjH,aAAa,eACvCj2D,KAAKq8B,QAAQ0d,aAAa,CAAEpvC,OAAQA,GACvC,GAEL3K,KAAKgwG,8BAAgChwG,KAAKiwG,uBAAuBx9D,KAAKzyC,MACtEA,KAAKkwG,4BAA8BlwG,KAAKmwG,qBAAqB19D,KAAKzyC,MAClEA,KAAKowG,6BAA+BpwG,KAAKqwG,sBAAsB59D,KAAKzyC,MACpEA,KAAKswG,6BAA+BtwG,KAAKuwG,sBAAsB99D,KAAKzyC,MACpEA,KAAKwwG,+BAAiCxwG,KAAKywG,wBAAwBh+D,KAAKzyC,MACxEA,KAAK0wG,mCAAqC1wG,KAAK2wG,4BAA4Bl+D,KAAKzyC,MAChFw6C,EAAawF,qBAAoB/S,IAC7B3lC,SAASspG,SAASC,QAAQ,GAEjC,CACD,WAAA1G,CAAY18F,GAaR,YAX2C,KAD3CA,EAAUN,MAAMg9F,YAAY18F,IACS,oBACjCzN,KAAK6vG,mBAAqBpiG,EAAQqjG,wBAEM,IAAhCrjG,EAA0B,qBAClCzN,KAAK6vG,mBAAqBpiG,EAAQoiG,oBAEtCpiG,EAAQqjG,kBAAoB9wG,KAAK6vG,wBACO,IAA5BpiG,EAAsB,iBAC9BzN,KAAK4vG,eAAiBniG,EAAQmiG,gBAElC5vG,KAAK+wG,gBAAkBtjG,EAAQsjG,gBACxBtjG,CACV,CACD,QAAA48F,GACIl9F,MAAMk9F,WACQrqG,KAAKq8B,QAAQrH,WACrBiI,oBAAoBjT,IACtB,MAAM+a,EAAY/a,EAAM3pB,KACpB0kC,IAC4B,kBAAxBA,EAAUisE,YACVhxG,KAAKq8B,QAAQ8a,cACbn3C,KAAKq8B,QAAQga,eAAe7hB,EAAYujB,QACxC/3C,KAAKq8B,QAAQga,eAAe7hB,EAAY3B,SAGxC7yB,KAAKgvG,uBACDhvG,KAAKguG,kBACLhuG,KAAKguG,gBAAgBp2F,MAAM0yB,QAAU,UAKjD,IAAI2mE,GAAgBlsE,GACW,kBAAxBA,EAAUisE,YACVjsE,EAAUlN,MAAQ1D,EAAgB+8E,WAClCnsE,EAAUlN,MAAQ1D,EAAgBgwE,OACrCgN,GAAc,EAClB,GAAInxG,KAAK6vG,mBAAoB,CACR9qE,GAAqC,kBAAxBA,EAAUisE,aAAmCjsE,EAAUqsE,SAEjFD,GAAc,EACdnxG,KAAKqxG,WAAW,CACZxhE,QAAS,MAEAohE,GAAgBjxG,KAAK6pG,YAAYyH,mBAClCtxG,KAAKkpC,WACR,IAIhB,EAEI+nE,GAAgBjxG,KAAK8pG,cAAcJ,2BACpC1pG,KAAKq8B,QAAQ8a,cACbn3C,KAAKq8B,QAAQga,eAAe7hB,EAAYujB,SAEvCk5D,GAAiBE,IAAenxG,KAAK6pG,YAAYyH,mBAClDtxG,KAAKkpC,WACR,IAELzhC,OAAOmjB,YAAW,KACd5qB,KAAKq8B,QAAQmc,cAAc,CACvB3I,QAAUxvC,IACN,GAAI4D,MAAMC,QAAQ7D,GAAO,CACrBL,KAAKwvG,QAAUnvG,EACAL,KAAKwvG,QAAQptG,QAAOqnB,GAAKA,EAAEhkB,IAAMzF,KAAK+wG,kBAAiBnvG,OAAS,EAE3E5B,KAAKuxG,iBAAiB,CAAEC,SAAUxxG,KAAK+wG,kBAGvC/wG,KAAKuxG,kBAEZ,IAEP,GACH,IACN,CACD,WAAAnH,CAAY38F,GACRN,MAAMi9F,YAAY38F,GAClB,IAAIgkG,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAyB,yBACzBzG,EAAkB,cAClBC,EAAgB,sBAChBoE,EAAc1vG,KAAK0vG,YACnBjiG,EAAQ29F,QACRC,EAAkB59F,EAAQ29F,MAAMC,iBAAmBA,EACnDC,EAAgB79F,EAAQ29F,MAAME,eAAiBA,EAC/CmG,EAAoBhkG,EAAQ29F,MAAMqG,mBAAqBA,EACvDC,EAAkBjkG,EAAQ29F,MAAMsG,iBAAmBA,EACnDC,EAAmBlkG,EAAQ29F,MAAMuG,kBAAoBA,EACrDC,EAAmBnkG,EAAQ29F,MAAMwG,kBAAoBA,EACrDC,EAAqBpkG,EAAQ29F,MAAMyG,oBAAsBA,EACzDC,EAAyBrkG,EAAQ29F,MAAM0G,wBAA0BA,EACjEpC,EAAcjiG,EAAQ29F,MAAMsE,aAAeA,GAE/C1vG,KAAKsrG,cAAgBtrG,KAAKspG,SAAS33C,QAAO,CAACogD,EAAO7wF,IAAS6wF,EAAMvxF,OAAOvc,MAAM2e,KAAK1B,EAAKgzC,iBAAiB,IAAIw7C,QAAkB,IAC/H1vG,KAAKukG,aAAe92F,EAAQ82F,aACxBvkG,KAAKukG,aAELvkG,KAAKsrG,cAAc/zF,SAASypD,IACxBA,EAAOruB,iBAAiB,QAAS3yC,KAAK+vG,yBAAyB,IAInE/vG,KAAKgyG,oBAEThyG,KAAKiyG,uBAAyBjyG,KAAKwrG,eAAeF,GAC7CtrG,KAAKyxG,oBACNzxG,KAAKyxG,kBAAoBzxG,KAAKwrG,eAAeiG,GACzCzxG,KAAKyxG,mBACLzxG,KAAKyxG,kBAAkB9+D,iBAAiB,QAAS3yC,KAAKgwG,gCAGzDhwG,KAAK0xG,kBACN1xG,KAAK0xG,gBAAkB1xG,KAAKwrG,eAAekG,GACvC1xG,KAAK0xG,iBACL1xG,KAAK0xG,gBAAgB/+D,iBAAiB,QAAS3yC,KAAKkwG,8BAGvDlwG,KAAK2xG,mBACN3xG,KAAK2xG,iBAAmB3xG,KAAKwrG,eAAemG,GACxC3xG,KAAK2xG,kBACL3xG,KAAK2xG,iBAAiBh/D,iBAAiB,QAAS3yC,KAAKowG,+BAGxDpwG,KAAK4xG,mBACN5xG,KAAK4xG,iBAAmB5xG,KAAKwrG,eAAeoG,GACxC5xG,KAAK4xG,kBACL5xG,KAAK4xG,iBAAiBj/D,iBAAiB,QAAS3yC,KAAKswG,+BAGxDtwG,KAAK6xG,qBACN7xG,KAAK6xG,mBAAqB7xG,KAAKwrG,eAAeqG,GAC1C7xG,KAAK6xG,oBACL7xG,KAAK6xG,mBAAmBl/D,iBAAiB,QAAS3yC,KAAKwwG,iCAG1DxwG,KAAK8xG,yBACN9xG,KAAK8xG,uBAAyB9xG,KAAKwrG,eAAesG,GAE7C9xG,KAAK8xG,yBACN9xG,KAAK8xG,uBAAyB9xG,KAAKwrG,eAAe,uBAElDxrG,KAAK8xG,wBACL9xG,KAAK8xG,uBAAuBn/D,iBAAiB,QAAS3yC,KAAK0wG,qCAGnE1wG,KAAKkyG,eAAiB5qG,SAASgoD,eAAe,cAC9CtvD,KAAKguG,gBAAkBhuG,KAAKwrG,eAAeH,EAC9C,CAID,SAAA8G,GACI,MACM3zC,EADKx+D,KAAKuzF,mBACD/xF,KAAK,CAChBo/C,MAAOthD,EAAKuU,QAAQ,qBACpBxM,KAAMrH,KAAK8vG,oBACXjyC,YAAY,EACZD,UAAU,EACVE,YAAY,EACZG,eAAe,EACfC,gBAAgB,EAChBC,WAAY,KACR,MAAMxa,EAAQr8C,SAASgoD,eAAe,0BACtC3L,EAAMnjD,MAAQlB,EAAKuU,QAAQ,oBACXvM,SAASgoD,eAAe,4BAChC1M,UAAYtjD,EAAKuU,QAAQ,sBACnBvM,SAASgoD,eAAe,+BAChC1M,UAAYtjD,EAAKuU,QAAQ,mBAC/B8vC,EAAMhD,OAAO,EAEjBod,SAAU,KACN,MACMorC,EADY7hG,SAASgoD,eAAe,0BACd9uD,MAC5B,GAAI2oG,GAAaA,EAAUt+F,QAAQ,MAAO,IAAIjJ,OAAS,EAAG,CACtD48D,EAAImC,aACJnC,EAAIuC,iBACJ,MAAM1/D,EAASm9D,EAAI8B,iBAAiBI,cAAc,UAC5C0xC,EAAY7xD,MAAM,MAAOl/C,GAC1BqgD,SAAS,0BACT0B,QAECivD,EADY/qG,SAASgoD,eAAe,6BACd9uD,MAC5BR,KAAKq8B,QAAQmL,SAAS,CAClBjnC,KAAM4oG,EACNxwF,YAAa05F,EACbxiE,QAAS,KACL2uB,EAAIU,QACJ,MAAM9pC,EAAQp1B,KAAKq8B,QAAQrH,WACrBw8E,EAAWp8E,EAAMtW,QACvB9e,KAAKsyG,qBAAqB,CAAE7sG,GAAI+rG,EAAUjxG,KAAM60B,EAAMrW,UAAWpG,YAAayc,EAAMyM,mBACpF7hC,KAAKuxG,iBAAiB,CAAEC,SAAUA,GAAW,EAEjDviG,MAAQA,IACJ5N,EAAOwpC,YAAYunE,GACnB5zC,EAAIyC,gBACJzC,EAAI0C,UAAUjyD,EAAO,QAAQ,GAGxC,CACD,OAAO,CAAK,GAGvB,CAKD,UAAAsjG,CAAWf,GACP,IAAKA,EACD,KAAM,mBAEV,IAAIgB,EAAexyG,KAAKyyG,eAAejB,GACvC,IAAKgB,EACD,OACJ,MACMp9E,EADOp1B,KACMq8B,QAAQrH,WACrB09E,aAAe,KACjB1yG,KAAK2yG,oBACL3yG,KAAKq8B,QAAQ2T,YAAYvvB,QACzB2U,EAAMwC,iBAAiB,CACnBC,KAAM1D,EAAgB5H,IACtB6kF,QAAQ,EACRJ,WAAY,mBAEhBhxG,KAAKkpC,WAAW,EAEpB,IAAI0pE,EAAgB5yG,KAAK4vG,eAAiB5vG,KAAK6yG,0BAA0BL,GAAgB,KACrFI,GACAx9E,EAAM3U,QACN2U,EAAMuK,aAAaizE,EAAe,CAAE3zE,UAAU,IAC9CyzE,gBAGA1yG,KAAKq8B,QAAQsL,UAAU,CACnBF,QAAS+pE,EACT57E,QAAQ,EACRia,QAAS,KACL7vC,KAAK8yG,yBAAyBN,EAAcp9E,EAAM8L,UAClDwxE,cAAc,IAI1B1yG,KAAK+yG,gBAAgBvB,EACxB,CAID,mBAAAwB,GACI,MAAM59E,EAAQp1B,KAAKq8B,QAAQrH,WAErBwpC,EADKx+D,KAAKuzF,mBACD/xF,KAAK,CAChBo/C,MAAOthD,EAAKuU,QAAQ,sBACpBxM,KAAMrH,KAAK8vG,oBACXjyC,YAAY,EACZD,UAAU,EACVE,YAAY,EACZG,eAAe,EACfC,gBAAgB,EAChBC,WAAY,KACR,MAAMxa,EAAQr8C,SAASgoD,eAAe,0BACtC3L,EAAMnjD,MAAQ40B,EAAMrW,UACJzX,SAASgoD,eAAe,4BAChC1M,UAAYtjD,EAAKuU,QAAQ,sBACnBvM,SAASgoD,eAAe,+BAChC1M,UAAYtjD,EAAKuU,QAAQ,mBAClBvM,SAASgoD,eAAe,6BAChC9uD,MAAQ40B,EAAMyM,iBACnB8hB,EAAMhD,OAAO,EAEjBod,SAAU,KACN,MACMv9D,EADQ8G,SAASgoD,eAAe,0BAClB9uD,MACpB,GAAIA,GAASA,EAAMqK,QAAQ,MAAO,IAAIjJ,OAAS,EAAG,CAC9CwzB,EAAMwM,MAAMviC,EAAMuK,WAAWpJ,EAAMqK,QAAQ,MAAO,MAClD2zD,EAAImC,aACJnC,EAAIuC,iBACJ,MAAM1/D,EAASm9D,EAAI8B,iBAAiBI,cAAc,UAC5C0xC,EAAY7xD,MAAM,MAAOl/C,GAC1BqgD,SAAS,0BACT0B,QAECh1C,EADO9G,SAASgoD,eAAe,6BACnB9uD,MAClB40B,EAAM0M,eAAe1zB,GACrBpO,KAAKq8B,QAAQmL,SAAS,CAClB1I,YAAY,EACZv+B,KAAMC,EACNqvC,QAAS,KACL2uB,EAAIU,QACJl/D,KAAKq8B,QAAQga,eAAe7hB,EAAY3B,OACxC,MACM2+E,EADaxxG,KAAKq8B,QAAQrH,WACJlW,QAC5B9e,KAAKkpC,YACLlpC,KAAKsyG,qBAAqB,CAAE7sG,GAAI+rG,EAAUjxG,KAAM60B,EAAMrW,UAAWpG,YAAayc,EAAMyM,mBACpF7hC,KAAKuxG,iBAAiB,CAAEC,SAAUA,IAClCxxG,KAAK+yG,gBAAgBvB,GACrBxxG,KAAK2yG,mBAAmB,EAE5B1jG,MAAQA,IACJ5N,EAAOwpC,YAAYunE,GACnB5zC,EAAIyC,gBACJzC,EAAI0C,UAAUjyD,EAAO,QAAQ,GAGxC,CACD,OAAO,CAAK,GAGvB,CAID,mBAAAgkG,GACI,MAAMC,EAASlzG,KAAKq8B,QAAQrH,WACjBh1B,KAAKuzF,mBACb51B,YAAYr+D,EAAKuU,QAAQ,wBAAyBvU,EAAKuU,QAAQ,uBAAuBhJ,QAAQ,eAAgBqoG,EAAOn0F,YACnHtS,MAAKjI,IACN,GAAIA,EAAQ,CACR,MAAMgtG,EAAW0B,EAAOp0F,QACxB9e,KAAKq8B,QAAQ2L,YAAY,CACrBP,QAAS+pE,EACT3hE,QAAS,KACL,MAAMxpC,EAAQrG,KAAKmzG,qBAAqB3B,GACxCxxG,KAAKuxG,iBAAiB,CAAE6B,YAAa/sG,GAAQ,GAGxD,IAER,CAID,UAAAgrG,CAAW5jG,GACP,GAAIzN,KAAK4vG,eAAgB,CACrB,MAAMx6E,EAAQp1B,KAAKq8B,QAAQrH,WACrBq+E,EAAgBrzG,KAAKyyG,eAAer9E,EAAMtW,SAC5Cu0F,IACAA,EAAcC,YAAc9wG,KAAKoQ,MACjC5S,KAAK8yG,yBAAyBO,EAAej+E,EAAM8L,UAE1D,CACDlhC,KAAKq8B,QAAQoN,UAAU,CACnBoG,QAAU7G,IACFA,EAAa5T,OACbp1B,KAAKq8B,QAAQga,eAAe7hB,EAAY3B,OAExCmW,EAAanb,WACb7tB,KAAKq8B,QAAQga,eAAe7hB,EAAY2kB,WAExC1rC,GAAWA,EAAQoiC,SACnBpiC,EAAQoiC,QAAQ7G,EACnB,GAGZ,CAKD,eAAA+pE,CAAgBvB,GACZ,IAAI+B,EAAUvzG,KAAKkyG,eAAeh+C,iBAAiB,MACnD,IAAK,IAAItvD,EAAI,EAAGA,EAAI2uG,EAAQ3xG,OAAQgD,IAAK,CACrC,MAAMvC,EAAOkxG,EAAQ3uG,GACrBvC,EAAKw/C,UAAUE,OAAO,UACV1/C,EAAK4zD,aAAa,cAClBu7C,GACRnvG,EAAKw/C,UAAUn8B,IAAI,SAE1B,CACJ,CAID,iBAAAitF,GACI,IAAIv9E,EAAQp1B,KAAKq8B,QAAQrH,WACT1tB,SAASgoD,eAAe,eAC9B1M,UAAYxtB,EAAMrW,UAC5B,MAAMyrF,EAAeljG,SAASo5D,cAAc,gBAC5C,GAAI8pC,EAAc,CACdA,EAAa5nD,UAAY,4BACzB,IAAIlgC,EAAU0S,EAAM+I,aACpB,IAAK,IAAIlV,KAAUvG,EACf8nF,EAAa5nD,WAAa,qCAAuC35B,EAAOvQ,QAAU,UAEzF,CACJ,CAKD,gBAAA64F,CAAiB9jG,GAEb,GADAzN,KAAKwzG,sBACAxzG,KAAKkyG,eAAe38F,QAAQ,MAAO,CACpCvV,KAAKkyG,eAAetvD,UAAY,GAChCn1C,EAAUA,GAAW,CAAE+jG,SAAWxxG,KAAKwvG,QAAQ5tG,OAAS,EAAI5B,KAAKwvG,QAAQ,GAAG/pG,GAAK,MACjF,IAAIgxD,EAAKnvD,SAAS8iC,cAAc,MAChCqsB,EAAG/a,UAAY,8BACf17C,KAAKkyG,eAAe7nE,YAAYosB,GAChC,IAAK,IAAIy8C,KAAUlzG,KAAKwvG,QACpBxvG,KAAKyzG,uBAAuBP,EAAQz8C,GAKxC,GAHIhpD,EAAQ+jG,UACRxxG,KAAKuyG,WAAW9kG,EAAQ+jG,eAES,IAAzB/jG,EAAmB,YAAmB,CAC9C,IAAI9H,EAAM8H,EAAQ2lG,YACdztG,GAAO3F,KAAKwvG,QAAQ5tG,SACpB+D,EAAM3F,KAAKwvG,QAAQ5tG,OAAS,GAC5B+D,EAAM,GAAK3F,KAAKwvG,QAAQ5tG,OAAS,IACjC+D,EAAM,GACNA,GAAO,GACP3F,KAAKuyG,WAAWvyG,KAAKwvG,QAAQ7pG,GAAKF,GACzC,CACJ,CACJ,CACD,MAAA2pG,GACQpvG,KAAKiyG,yBACLjyG,KAAK0zG,oBACL1zG,KAAKsrG,cAAc/zF,SAASypD,IACxBA,EAAOnsB,oBAAoB,QAAS70C,KAAK+vG,yBAAyB,IAEtE/vG,KAAKsrG,cAAgB,GACrBtrG,KAAKiyG,uBAAyB,MAE9BjyG,KAAKyxG,oBACLzxG,KAAKyxG,kBAAkB58D,oBAAoB,QAAS70C,KAAKgwG,+BACzDhwG,KAAKyxG,kBAAoB,MAEzBzxG,KAAK0xG,kBACL1xG,KAAK0xG,gBAAgB78D,oBAAoB,QAAS70C,KAAKkwG,6BACvDlwG,KAAK0xG,gBAAkB,MAEvB1xG,KAAK2xG,mBACL3xG,KAAK2xG,iBAAiB98D,oBAAoB,QAAS70C,KAAKowG,8BACxDpwG,KAAK2xG,iBAAmB,MAExB3xG,KAAK4xG,mBACL5xG,KAAK4xG,iBAAiBj/D,iBAAiB,QAAS3yC,KAAKswG,8BACrDtwG,KAAK4xG,iBAAmB,MAExB5xG,KAAK6xG,qBACL7xG,KAAK6xG,mBAAmBh9D,oBAAoB,QAAS70C,KAAKwwG,gCAC1DxwG,KAAK6xG,mBAAqB,MAE1B7xG,KAAK8xG,yBACL9xG,KAAK8xG,uBAAuBj9D,oBAAoB,QAAS70C,KAAK0wG,oCAC9D1wG,KAAK6xG,mBAAqB,MAE1B7xG,KAAKkyG,iBACLlyG,KAAKkyG,eAAetvD,UAAY,GAChC5iD,KAAKkyG,eAAiB,MAEtBlyG,KAAKguG,kBACLhuG,KAAKguG,gBAAgBprD,UAAY,GACjC5iD,KAAKguG,gBAAkB,MAE3B7gG,MAAMiiG,QACT,CAMD,sBAAAqE,CAAuBP,EAAQz8C,GACtBA,IACDA,EAAKz2D,KAAKkyG,eAAexxC,cAAc,OAE3C,IAAIizC,EAAaT,EAAO3yG,MAAQ2yG,EAAOv6F,aAAe,GAClD49C,EAAKjvD,SAAS8iC,cAAc,MAChCmsB,EAAG7a,UAAY,kBACf6a,EAAG3+C,MAAMwxC,OAAS,UAClBmN,EAAG7V,aAAa,WAAYwyD,EAAOztG,IACnC8wD,EAAG7T,UAAYixD,EACXT,EAAOv6F,cACP49C,EAAG3V,MAAQsyD,EAAOv6F,aAEtB49C,EAAG5jB,iBAAiB,SAAUrT,IAC1B,MACMs0E,EADSt0E,EAAE77B,OACEwyD,aAAa,YAChCj2D,KAAKuyG,WAAWqB,EAAI,IAExBn9C,EAAGpsB,YAAYksB,EAClB,CAID,kBAAAi9C,GACI,MAAMK,EAAmBvsG,SAASgoD,eAAe,oBAC3CwkD,EAAgBxsG,SAASgoD,eAAe,iBAC1CtvD,KAAKwvG,QAAQ5tG,OAAS,GACtB5B,KAAK47C,YAAYk4D,GACjB9zG,KAAK67C,YAAYg4D,KAGjB7zG,KAAK47C,YAAYi4D,GACjB7zG,KAAK67C,YAAYi4D,GAExB,CAED,WAAAl4D,CAAYJ,GACJA,IACAA,EAAQ5jC,MAAMsgD,WAAa,SAElC,CACD,WAAArc,CAAYL,GACJA,GACAA,EAAQ5jC,MAAM6qC,eAAe,aAEpC,CAKD,oBAAA6vD,CAAqBY,GACjBlzG,KAAKwvG,QAAQ/qG,KAAKyuG,EACrB,CAMD,oBAAAC,CAAqB3B,GACjB,IAAInrG,EAAQrG,KAAK+zG,kBAAkBvC,GAGnC,OAFInrG,GAAS,GACTrG,KAAKwvG,QAAQrpG,OAAOE,EAAO,GACxBA,CACV,CACD,iBAAA0tG,CAAkBvC,GACd,IAAK,IAAI5sG,EAAI,EAAGA,EAAI5E,KAAKwvG,QAAQ5tG,OAAQgD,IACrC,GAAI5E,KAAKwvG,QAAQ5qG,GAAGa,KAAO+rG,EACvB,OAAO5sG,EAEf,OAAQ,CACX,CAID,sBAAAqrG,GACIjwG,KAAKg0G,cACLh0G,KAAKq8B,QAAQyC,YAChB,CAID,2BAAA6xE,GACI3wG,KAAKkpC,WACR,CAID,qBAAAqnE,GACIvwG,KAAKgzG,qBACR,CAID,qBAAA3C,GACIrwG,KAAKuyG,WAAW,YACnB,CAID,uBAAA9B,GACIzwG,KAAKizG,qBACR,CAID,oBAAA9C,GACInwG,KAAKmyG,WACR,CAKD,YAAA8B,CAAahlG,GACZ,CAID,WAAA+kG,GACC,CAID,oBAAAhF,GACIhvG,KAAKgyG,mBACR,CAID,mBAAAjD,GACI/uG,KAAK0zG,mBACR,CAID,iBAAA1B,GACQhyG,KAAKiyG,yBACLjyG,KAAKiyG,uBAAuBr6F,MAAM0yB,QAAU,OAEnD,CAID,iBAAAopE,GACQ1zG,KAAKiyG,yBACLjyG,KAAKiyG,uBAAuBr6F,MAAM0yB,QAAU,UAEnD,CAMD,wBAAAwoE,CAAyBI,EAAQ98C,GAC7B,IAAI/zD,EAAOrC,KAAKk0G,oBAAoBhB,EAAOztG,IACtCpD,IACDA,EAAO,CAAEoD,GAAIytG,EAAOztG,IACpBzF,KAAKyvG,YAAYhrG,KAAKpC,IAE1BA,EAAKixG,YAAcJ,EAAOI,YAC1BjxG,EAAK+zD,QAAUA,CAClB,CAMD,yBAAAy8C,CAA0BK,GACtB,IAAI7wG,EAAOrC,KAAKk0G,oBAAoBhB,EAAOztG,IAC3C,OAAIpD,GAAQA,EAAKixG,cAAgBJ,EAAOI,YAC7BjxG,EAAK+zD,QAET,IACV,CACD,cAAAq8C,CAAehtG,GACX,IAAK,IAAIpD,KAAQrC,KAAKwvG,QAClB,GAAIntG,EAAKoD,KAAOA,EACZ,OAAOpD,EAGf,OAAO,IACV,CACD,mBAAA6xG,CAAoBzuG,GAChB,IAAK,IAAIpD,KAAQrC,KAAKyvG,YAClB,GAAIptG,EAAKoD,KAAOA,EACZ,OAAOpD,EAGf,OAAO,IACV,GAGL,SAAS8xG,0BACL70G,EAAK+T,WAAWtB,IACZ,GAAKA,GAASA,EAAKX,MAEnB,IAAK,IAAIugC,KAAQ5/B,EAAKX,MAClB,OAAQugC,GACJ,IAAK,iBACD5/B,EAAKX,MAA2B,oBAAIW,EAAKX,MAAMugC,GAC/C,MACJ,IAAK,qBACD5/B,EAAKX,MAA+B,wBAAIW,EAAKX,MAAMugC,GACnD,MACJ,IAAK,mCACD5/B,EAAKX,MAAoC,6BAAIW,EAAKX,MAAMugC,GACxD,MACJ,IAAK,qBACD5/B,EAAKX,MAAsB,eAAIW,EAAKX,MAAMugC,GAC1C,MACJ,IAAK,eACD5/B,EAAKX,MAAiB,UAAIW,EAAKX,MAAMugC,GACrC,MACJ,IAAK,cACD5/B,EAAKX,MAAgB,SAAIW,EAAKX,MAAMugC,GACpC,MACJ,IAAK,eACD5/B,EAAKX,MAAuB,gBAAIW,EAAKX,MAAMugC,GAC3C,MACJ,IAAK,qBACD5/B,EAAKX,MAAuB,gBAAIW,EAAKX,MAAMugC,GAC3C,MACJ,IAAK,iBACD5/B,EAAKX,MAAuB,gBAAIW,EAAKX,MAAMugC,GAGtD,GAET,CA4NAwiE,GA3NA,SAASC,sBACL90G,EAAKoV,mBAAmB,CACpB2/F,iBAAkB,YAClBC,0BAA2B,sBAC3B1xC,YAAa,QACbtxD,aAAc,SACdijG,YAAa,QACbC,WAAY,OACZC,WAAY,OACZ5xC,UAAW,MACXxxD,SAAU,KACVqjG,WAAY,UACZC,qBAAsB,gBACtBC,aAAc,cACdC,SAAU,QACVC,UAAW,SACXC,gBAAiB,gBACjBC,sBAAuB,8CACvBC,gBAAiB,gBACjBC,gBAAiB,0BACjBC,gBAAiB,aACjBC,kBAAmB,kBACnBC,iBAAkB,gBAClBC,oBAAqB,mBACrBC,uBAAwB,sBACxBC,aAAc,kBACdC,6BAA8B,yCAC9BC,aAAc,mBACdC,oBAAqB,0BACrBC,uBAAwB,wBACxBlkG,MAAO,QACPmkG,YAAa,MACbC,YAAa,MACbC,aAAc,OACdC,eAAgB,UAChBC,QAAS,MACTC,QAAS,KACTC,WAAY,MACZC,SAAU,KACVC,kBAAmB,oBACnBC,MAAO,KACPC,aAAc,eACdC,kBAAmB,iBACnBC,oBAAqB,gBACrBC,iBAAkB,mBAClBC,kBAAmB,qBACnBC,iBAAkB,0BAClBC,kBAAmB,yBACnBC,aAAc,eACdC,YAAa,YACbC,eAAgB,oBAChBC,MAAO,KACPC,oBAAqB,8BACrBC,wBAAyB,mDACzBC,iBAAkB,iBAClBC,oBAAqB,iBACrBC,oBAAqB,UACrBC,oBAAqB,kBACrBC,0BAA2B,aAC3B/lG,KAAM,OACNgmG,cAAe,UACfC,aAAc,6BACdC,eAAgB,0BAChBC,aAAc,iBACdC,aAAc,YACdC,oBAAqB,mBACrBC,gBAAiB,gBACjBC,iBAAkB,iBAClBC,cAAe,aACfC,aAAc,UACdC,eAAgB,iBAChBC,aAAc,aACdC,gBAAiB,qBACjBC,gBAAiB,aACjBC,aAAc,cACdC,cAAe,gBACfC,iBAAkB,aAClBC,cAAe,UACfC,YAAa,QACbC,iBAAkB,SAClBC,kBAAmB,UACnBC,cAAe,cACfC,iBAAkB,oBAClBC,oBAAqB,uBACrBC,eAAgB,gBAChBC,aAAc,aACdC,YAAa,YACbC,aAAc,kBACdC,UAAW,UACXC,YAAa,YACbC,WAAY,YACZC,YAAa,iBACbC,eAAgB,oBAChBC,cAAe,uBACfC,cAAe,mBACfC,cAAe,mBACfC,gBAAiB,SACjBC,eAAgB,qCAChBC,aAAc,gBAEdC,mBAAoB,oBACpBC,sBAAuB,kDAEvBC,UAAW,QACXC,YAAa,UAEbC,iBAAkB,eAClBC,mBAAoB,8BACpBC,cAAe,YACfC,gBAAiB,mBACjBC,gBAAiB,YACjBC,eAAgB,aAChBC,iBAAkB,eAClBC,iBAAkB,mBAClBC,kBAAmB,eACnBC,oBAAqB,uDACrBC,oBAAqB,iCACrBC,cAAe,cACfC,wBAAyB,qBAEzBC,iBAAkB,aAClBC,kBAAmB,aACnBC,mBAAoB,cACpBC,mBAAoB,eACpBC,gBAAiB,gBACjBC,qBAAsB,gBACtBC,oBAAqB,kDAErBpX,OAAQ,CACJqX,kBAAmB,iBACnBC,aAAc,CACVriB,MAAO,QACPsiB,MAAO,cACPzgB,UAAW,cAEf0gB,iBAAkB,mBAClBC,mBAAoB,2CACpBC,gBAAiB,UACjBC,eAAgB,SAChBC,iBAAkB,WAClBC,gBAAiB,eACjBC,oBAAqB,eACrBC,sBAAuB,0DACvBC,gBAAiB,cACjBC,kBAAmB,GACnBC,cAAe,YACfC,aAAc,WACdC,gBAAiB,uCACjBC,iBAAkB,2QAGlBC,eAAgB,oDAChBrjB,MAAO,CACHsjB,WAAY,QACZC,SAAU,iBACVC,wBAAyB,cACzBC,yBAA0B,eAC1BC,uBAAwB,aACxBC,gBAAiB,8BAErBrB,MAAO,CACHgB,WAAY,cACZC,SAAU,iBACVK,aAAc,6BACdC,yBAA0B,eAC1BC,sBAAuB,YACvBC,sBAAuB,YACvBC,eAAgB,aAChBC,eAAgB,gBAChBC,eAAgB,SAEpBriB,UAAW,CACPyhB,WAAY,eACZC,SAAU,yBAGlBY,eAAgB,SAChBC,iBAAkB,eAClBC,eAAgB,gBAEhBC,eAAgB,gBAChBC,kBAAmB,SACnBC,IAAO,MACPC,MAAS,QACTC,IAAO,MACP,aAAc,0BAEdC,aAAc,CACVC,SAAU,2BACVC,WAAY,kBACZC,QAAS,4BACTC,UAAW,4BACXX,iBAAkB,oBAClBY,iBAAkB,+BAClBC,gBAAiB,uBACjBC,gBAAiB,qBACjBC,cAAe,8CACfC,oBAAqB,wCACrBC,qBAAsB,iDACtBC,mBAAoB,wDACpBC,cAAe,YACfC,aAAc,kBACdC,mBAAoB,sBAExBz7C,UAAW,CACP6yB,KAAM,aACNC,IAAK,YACLC,OAAQ,eACRC,MAAO,cACPC,SAAU,iBACVC,MAAO,cACPC,MAAO,cACPC,UAAW,kBACXC,KAAM,aACNC,YAAa,qBACbxB,IAAK,cAGjB,CAEAkf,GAEiBhoE,kBAAkBC,cAC1B2C,gBAAgB,iBAAiB,IAAM,IAAI0uB,uBAE/CohD,QAAQx2F,UAAU/S,UACnBupG,QAAQx2F,UAAU/S,QACdupG,QAAQx2F,UAAUy2F,mBACXD,QAAQx2F,UAAU02F,uBAG7Bv3G,OAAiB,WAAMA,OAAiB,SAAE6gB,UAAU/Q,UACpD9P,OAAiB,SAAE6gB,UAAU/Q,QAAUtT,MAAMqkB,UAAU/Q,SAGtDtT,MAAMqkB,UAAUg/E,YACjBrjG,MAAMqkB,UAAUg/E,UAAY,SAAUliE,GAClC,GAAY,MAARplC,KACA,MAAM,IAAIi/G,UAAU,yDAExB,GAAyB,mBAAd75E,EACP,MAAM,IAAI65E,UAAU,gCAMxB,IAJA,IAGIz+G,EAHAsxC,EAAOpwC,OAAO1B,MACd4B,EAASkwC,EAAKlwC,SAAW,EACzB8wF,EAAU7X,UAAU,GAEfj2E,EAAI,EAAGA,EAAIhD,EAAQgD,IAExB,GADApE,EAAQsxC,EAAKltC,GACTwgC,EAAU0mB,KAAK4mC,EAASlyF,EAAOoE,EAAGktC,GAClC,OAAOltC,EAGf,OAAQ,CAChB,GCnicA,MAEMs6G,EAAS,CAAC,GAAI,IAAK,KACzBt4G,KAAKwR,MAAQxR,KAAKwR,OAAS,SAAUgT,GACjC,OAAIhjB,MAAMgjB,GACCC,IAEPD,EAAI,EACGxkB,KAAK2C,MAAM6hB,GAEfxkB,KAAK0kB,KAAKF,EACrB,EACA,MAAM+zF,EAAM,CACRC,KAAM,EACNC,WAAY,MACZC,GAAI,SAAU17G,GACV,GAAKA,GAAQA,EAAIhC,OAIjB,IACI,IACI29G,EAsChB,SAASC,IAAIv2G,GAIT,IAHA,IAAIw2G,EAQR,SAASC,QAAQz2G,GACb,IAAIsrE,EAAItrE,EAGR,QADAsrE,GADAA,EAAIA,EAAE1pE,QAAQ,KAAM,MACdA,QAAQ,KAAM,MACVjJ,OAAS,GACf,KAAK,EACD,MACJ,KAAK,EACD2yE,GAAK,KACL,MACJ,KAAK,EACDA,GAAK,IAGb,OAAO9sE,OAAOk4G,KAAKprC,EACvB,CAvBwBmrC,CAAQz2G,GACxBlD,EAAM05G,EAAc79G,OACpBg+G,EAAQ,IAAIC,WAAW95G,GAClBnB,EAAI,EAAGA,EAAImB,EAAKnB,IACrBg7G,EAAMh7G,GAAK66G,EAAcK,WAAWl7G,GAExC,OAAOg7G,CACX,CA9C4BJ,CADJ57G,EAAI4T,MAAM,EAAG5T,EAAIhC,OAAS,KAElCm+G,EAAQn8G,EAAI4T,MAAM5T,EAAIhC,OAAS,IACnC,IAAIo+G,GAAM,EACV,IAAK,MAAMC,KAASf,EAAQ,CACxB,IAAIgB,EAAMC,IAAIF,GACd,GAAIF,EAAM,KAAOG,EAAI,IAAMH,EAAM,KAAOG,EAAI,GAAI,CAC5CF,GAAM,EACN,KACH,CACJ,CACIA,IACDb,EAAIC,MAAQ,GAIhB,GAAIW,EAAM,IAAYK,QADVC,EACyB,IAEjC,YADAlB,EAAIC,MAAQ,GAGhB,GAAIW,EAAM,IAAMK,QAAQb,EAAU,IAC9B,OAGJ,GADAJ,EAAIC,KAAOW,EAAM,IAAMK,QAAQb,EAAU,IAAM,EAAI,EAClC,IAAbJ,EAAIC,KAAY,CAChB,IAAIkB,EAAM,GAgD1B,SAASC,IAAIx4G,GAET,IADA,IAAIiO,EAAI,EACCpR,EAAI,EAAGA,EAAImD,EAAInG,SAAUgD,EAC9BoR,GAAKwqG,EAAO16G,QAAQiC,EAAInD,IAAMgC,KAAK65G,IAAID,EAAO5+G,OAAQmG,EAAInG,OAASgD,EAAI,GAC3E,OAAOoR,CACX,CArD6BuqG,CAAIR,EAAMrqG,UAAU,EAAG,GAAKqqG,EAAMrqG,UAAU,OACrDgrG,EAAK,IAAIl+G,KAAK,IAAO8U,OAAO3N,SAAS22G,EAAI5qG,UAAU,EAAG,IAAK4B,OAAO3N,SAAS22G,EAAI5qG,UAAU,EAAG,IAAM,EAAG4B,OAAO3N,SAAS22G,EAAI5qG,UAAU,IAAK,EAAG,EAAG,EAAG,GACjJlT,KAAKoQ,MAAQ8tG,EAAGj2G,YAChB00G,EAAIC,KAAO,EAElB,CACJ,CACD,MAAOnwG,GACN,MArCGjP,KAAKo/G,MAAQ,CAsCpB,GAEL,SAASgB,QAAQh1F,EAAG1X,EAAI,IACpB,OAAOhR,OAAO+hD,aAAa,GAAKr5B,EAAI1X,EACxC,CA0BA,MAAM8sG,EAAS,uCACf,SAASL,IAAIp4G,GAET,IADA,IAAIvD,EAAS,GACNuD,EAAM,GACTvD,EAASg8G,EAAOz4G,EAAMy4G,EAAO5+G,QAAU4C,EACvCuD,GAAOy4G,EAAO5+G,OAElB,OAAO4C,CACX,CAQA,MAAMm8G,oBAAoBxoF,UACtB,WAAAt4B,GACIsN,SAAS0tE,WACT76E,KAAK4gH,UAAW,EAChB5gH,KAAK6gH,eAAgB,EACrB7gH,KAAK8gH,QAAS,CACjB,CACD,UAAA7pF,GACI,OAAOj3B,KAAK4gH,UAAa5gH,KAAK80B,aAAe90B,KAAK80B,YAAYmC,YACjE,CACD,WAAAE,CAAY32B,GACRR,KAAK4gH,SAAWpgH,GAAUR,KAAK80B,aAAe90B,KAAK80B,YAAYmC,aAC/Dj3B,KAAKq4B,YAAcr4B,KAAKq4B,WAAW9gB,SAAS+gB,IACxCA,EAAKnB,YAAY32B,EAAM,GAE9B,CACD,eAAAu4B,GACI,OAAO/4B,KAAK6gH,aACf,CACD,gBAAA7nF,CAAiBx4B,GACbR,KAAK6gH,cAAgBrgH,CACxB,CACD,QAAAy4B,GACI,OAAOj5B,KAAK8gH,MACf,CACD,SAAA5nF,CAAU14B,GACNR,KAAK8gH,OAAStgH,CACjB,CACD,YAAAsY,CAAaC,EAAO1Y,GAEhB,GADA8M,MAAM2L,aAAaC,EAAO1Y,KACtB8+G,EAAIC,MAAQ,UAEa,IAAlB/+G,EAAKugH,UACZ5gH,KAAKm3B,YAAY92B,EAAKugH,eAEC,IAAhBvgH,EAAKygH,QACZ9gH,KAAKk5B,UAAU74B,EAAKygH,aAEU,IAAvBzgH,EAAKwgH,eACZ7gH,KAAKg5B,iBAAiB34B,EAAKwgH,eAI3BxgH,EAAK2/B,OACL,IAAK,IAAIp7B,EAAI,EAAGA,EAAIvE,EAAK2/B,MAAMp+B,OAAQgD,IAAK,CACxC,IAAIm8G,EAAU/gH,KAAKo1B,MAAM8K,kBACzB6gF,EAAQjoG,aAAaC,EAAO1Y,EAAK2/B,MAAMp7B,IACvC5E,KAAKq4B,WAAW5zB,KAAKs8G,GACrBA,EAAQroF,UAAU14B,KACrB,CAER,CACD,UAAAqkB,GACI,IAAI1b,EAAMwE,MAAMkX,aAChB,GAAI86F,EAAIC,MAAQ,EACZ,OAAOz2G,EAUX,GATI3I,KAAKi3B,eACLtuB,EAAIi4G,SAAW5gH,KAAKi3B,cAEpBj3B,KAAK+4B,oBACLpwB,EAAIk4G,cAAgB7gH,KAAK+4B,mBAEzB/4B,KAAKi5B,aACLtwB,EAAIm4G,OAAS9gH,KAAKi5B,YAElBj5B,KAAK8c,KAAOwX,EAAQuE,MAAO,CAG3BlwB,EAAIq3B,MAAQ,GACZ,IAAK,IAAIp7B,EAAI,EAAGA,EAAI5E,KAAKq4B,WAAWz2B,OAAQgD,IACxC+D,EAAIq3B,MAAMv7B,KAAKzE,KAAKq4B,WAAWzzB,GAAGyf,aAEzC,CACD,OAAO1b,CACV,EAGL,MAAMq4G,sBAAsB9qF,YACxB,WAAAr2B,GACIsN,SAAS0tE,WACT76E,KAAK4gH,UAAW,CACnB,CACD,UAAA3pF,GACI,OAAOj3B,KAAK4gH,QACf,CACD,WAAAzpF,CAAY32B,GACRR,KAAK4gH,SAAWpgH,CACnB,CAMD,YAAAsY,CAAaC,EAAOwe,GAChBpqB,MAAM2L,aAAaC,EAAOwe,GACtB4nF,EAAIC,MAAQ,GAEZ7nF,QAC+B,IAApBA,EAAQqpF,WACf5gH,KAAK4gH,SAAWrpF,EAAQqpF,SAGnC,CACD,UAAAv8F,GACI,IAAIkT,EAAUpqB,MAAMkX,aACpB,OAAI86F,EAAIC,MAAQ,GAEZp/G,KAAKi3B,eACLM,EAAQqpF,SAAW5gH,KAAKi3B,cAFjBM,CAKd,EAGL,MAAM0pF,gBAAgBpuF,MAClB,WAAAhzB,CAAYkZ,EAAOtL,GACfN,MAAM4L,EAAO,KAAMtL,EACtB,CACD,IAAAmxB,GACI,OAAOugF,EAAIC,KAAO,CACrB,CACD,cAAA9pF,GACI,OAAO,IAAI2rF,QAAQjhH,KAAK+Y,MAAO,CAAEsjB,QAASr8B,KAAKq8B,SAClD,CACD,eAAA6D,CAAgBpjB,EAAMwX,EAAQgF,QAC1B,OAAI6lF,EAAIC,MAAQ,EACLjyG,MAAM+yB,gBAAgBpjB,GAC1B,IAAI6jG,YAAY3gH,KAAM8c,EAChC,CACD,YAAAujB,CAAaxJ,GAAa,GACtB,OAAIsoF,EAAIC,MAAQ,EACLjyG,MAAMkzB,aAAaxJ,GACvB,IAAImqF,cAAchhH,KAAM62B,EAClC,CAMD,iBAAAgN,CAAkB9jC,EAAY+jC,GAAoB,GAC9C,GAAIq7E,EAAIC,MAAQ,EACZ,OAAOjyG,MAAM02B,kBAAkB9jC,EAAY+jC,GAC/C,IAAItrB,EAASzY,EAAWyY,QAAUxY,KAAKikC,mBACnCi9E,EAAQnhH,EAAW25B,UAAYlhB,EAAO+f,WAAa94B,EAAS8sB,IAAM9sB,EAASgtB,IAAMhtB,EAAS8sB,KAC1FtI,EAAQjkB,KAAKkgC,gBAAgB5L,EAAQuE,OAEzC,GADA5U,EAAMsU,SAAW2oF,EACbp9E,EAAmB,CACnB,IAAI/qB,EAAQ/Y,KAAK+0B,WACb7a,EAAOnB,EAAMgZ,kBACjB,GAAI7X,EAAM,CACN,IAAIgX,EAAKnY,EAAM4Z,0BAA0BzY,GACrCoe,EAAOt4B,KAAKkkC,4BAA4BhqB,EAAMgX,EAAI,IACtDjN,EAAMmV,aAAad,EACtB,CACJ,CAED,OADA9f,EAAO4gB,aAAanV,GACbA,CACV,CACD,sBAAA8f,CAAuBhkC,EAAY+jC,GAAoB,GAEnD,OADA/jC,EAAWyY,OAASzY,EAAWyY,QAAUxY,KAAKu8B,gBAC1C4iF,EAAIC,MAAQ,EACLjyG,MAAM42B,uBAAuBhkC,EAAY+jC,GAC7C9jC,KAAK6jC,kBAAkB9jC,EACjC,CACD,cAAA2mC,GACI,MAAM3tB,EAAQ/Y,KAAK+0B,WACnB,GAAIoqF,EAAIC,MAAQ,EACZ,OAAOp/G,KAAK0mC,iBAChB,GAAI3tB,EAAM8E,gBACN,OAAO7d,KAAK0mC,iBAChB,MAAMJ,EAAWtmC,KAAKqmC,qBACtB,GAAuB,GAAnBC,EAAS1kC,OACT,MAAMoL,MAAM,oCAEhB,IAAI25B,EAAO,IAAI5L,KAAKuL,EAAS,IAC7B,IAAK,IAAI1hC,EAAI,EAAGA,EAAI0hC,EAAS1kC,OAAQgD,IAAK,CACtC,MAAMoV,EAASssB,EAAS1hC,GACxB,GAAI+hC,EAAKzL,SAASlhB,GACd,SAEJ,IAAImnG,EAAOnhH,KAAKohH,SAASz6E,EAAKnmC,MAAOwZ,GACrC,GAAY,MAARmnG,EAKA,MAAMn0G,MAAM,6CAHZ25B,EAAO3mC,KAAKqhH,cAAc16E,EAAOw6E,EAAK,KAAOx6E,EAAKnmC,MAAS2gH,EAAK3pG,MAAM,GAAK2pG,EAKlF,CAED,OADAx6E,EAAKtL,aACEsL,CACV,CACD,aAAA06E,CAAc16E,EAAMw6E,GAChB,GAAmB,GAAfA,EAAKv/G,OACL,OAEJ,IAAI0/G,GAAY,EAChB,IAAK,IAAInmF,KAASwL,EAAK3L,OACnB,GAAIG,EAAM36B,QAAU2gH,EAAK,GAAI,CACzBG,GAAY,EACRH,EAAKv/G,OAAS,IACdu5B,EAAQn7B,KAAKqhH,cAAclmF,EAAOgmF,EAAK3pG,MAAM,KACjD,KACH,CAEL,IAAK8pG,EAAW,CAEZ,GADWthH,KAAK+0B,WAAWrD,SAASiV,EAAKnmC,MAAO2gH,EAAK,IAC3C,CACN,IAAII,EAAU,IAAIxmF,KAAKomF,EAAK,IAC5Bx6E,EAAK1L,SAASsmF,GACVJ,EAAKv/G,OAAS,IACd2/G,EAAUvhH,KAAKqhH,cAAcE,EAASJ,EAAK3pG,MAAM,IACxD,KACI,IAAKmvB,EAAKnuB,OAQX,MAAMxL,MAAM,6CARO,CACnB,IAAIw0G,EAAO,IAAIzmF,KAAK4L,IACpBA,EAAO,IAAI5L,KAAKomF,EAAK,KAChBlmF,SAASumF,GACVL,EAAKv/G,OAAS,IACd+kC,EAAO3mC,KAAKqhH,cAAc16E,EAAMw6E,EAAK3pG,MAAM,IAClD,CAGA,CACJ,CACD,OAAOmvB,CACV,CACD,QAAAy6E,CAASzvF,EAAYC,GACjB,IAAI6vF,EAAU,GACVC,EAAU,GACVC,EAAW,GACXC,EAAiB,GACjBC,GAAY,EAIhB,IAHAJ,EAAQh9G,KAAKktB,GACb+vF,EAAQj9G,KAAKg9G,GACbG,EAAen9G,KAAKktB,IACZkwF,GAAW,CACfF,EAAW,GACX,IAAK,IAAIR,KAAQO,EAEb,GADAG,EAAY7hH,KAAK8hH,UAAUX,EAAMvvF,EAAU+vF,EAAUC,GACjDC,EAAW,CACXV,EAAK18G,KAAKmtB,GACV6vF,EAAUN,EACV,KACH,CAGL,GADAO,EAAU,IACLG,EAAW,CACZ,GAAuB,GAAnBF,EAAS//G,OACT,OAAO,KAEX,IAAK,IAAIu/G,KAAQQ,EACbD,EAAQj9G,KAAK08G,EACpB,CACJ,CACD,OAAOM,CACV,CACD,SAAAK,CAAUX,EAAMvvF,EAAU+vF,EAAUC,GAChC,MAAMG,EAAWZ,EAAKA,EAAKv/G,OAAS,GAC9BogH,EAAchiH,KAAK+0B,WAAWjD,iBAAiBiwF,GACrD,IAAK,IAAIlwF,KAAQmwF,EAAa,CAC1B,IAAIC,EAAU,KAOd,GALIA,EADApwF,EAAKF,YAAcowF,EACTlwF,EAAKD,SAGLC,EAAKF,WAEfswF,GAAWrwF,EAEX,OADA+vF,EAAW,IACJ,EAGX,GAAIR,EAAKr7G,QAAQm8G,GAAW,GAAKL,EAAe97G,QAAQm8G,GAAW,EAAG,CAClEL,EAAen9G,KAAKw9G,GACpB,IAAIC,EAAU,IAAIj+G,MAClBi+G,EAAUA,EAAQ1hG,OAAO2gG,GACzBe,EAAQz9G,KAAKw9G,GACbN,EAASl9G,KAAKy9G,EACjB,CACJ,CACD,OAAO,CACV,EAGL,MAAMC,qBACF,WAAAtiH,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,CAClB,CACD,IAAA0K,GACC,CACD,QAAAS,CAAS/5B,GAEL,MAAM2nB,GADN3nB,EAAUA,GAAW,IACC2nB,OAASp1B,KAAKq8B,QAAQrH,WACtCjc,EAAQ/Y,KAAKq8B,QAAQtH,WACrBoM,EAAU1zB,EAAQ0zB,UAAYpoB,EAAQA,EAAM+F,QAAU,IACxDrR,EAAQg6B,SACRrS,EAAMwM,MAAMn0B,EAAQg6B,SAEpBh6B,EAAQlN,MACR60B,EAAM4J,QAAQvxB,EAAQlN,MAEtBkN,EAAQkL,aACRyc,EAAM0M,eAAer0B,EAAQkL,aAEjC,IAAIywB,EAAc,CACdhU,MAASA,EAAMM,cAEfjoB,EAAQpN,OACR+oC,EAAkB,KAAI37B,EAAQpN,MAElC,MAAMH,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,WAAY,CAAE5H,QAASA,IAEhE,OADanhC,KAAKq8B,QAAQwM,cAAcC,gBAC5Bl7B,KAAK1N,EAAKkpC,GACjB38B,MAAMu8B,GACAA,EAAa5T,OAE3B,CACD,YAAA+R,CAAa15B,GAET,MAAM0zB,GADN1zB,EAAUA,GAAW,IACG0zB,SAAWnhC,KAAKq8B,QAAQtH,WAAWjW,QACrD5e,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,eAAgB,CAAE5H,QAASA,IAEpE,OADanhC,KAAKq8B,QAAQwM,cAAcC,gBAC5B9kC,IAAI9D,GACXuM,MAAMu8B,GACFA,EAAa2P,QAKX3P,EAAa2P,QAJT/pC,QAAQE,OAAO,CAClB5B,QAAS,2BAKxB,CACD,SAAAy6B,CAAUl6B,GACNA,EAAUA,GAAW,GACrB,MAAMsL,EAAQ/Y,KAAKq8B,QAAQtH,WACrBK,EAAQp1B,KAAKq8B,QAAQrH,WACrBmM,EAAU1zB,EAAQ0zB,SAAWpoB,EAAM+F,QACnC2oB,EAAUh6B,EAAQg6B,SAAWrS,EAAMtW,QACnC5e,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,WAAY,CAAE5H,QAASA,EAASsG,QAASA,IAElF,OADaznC,KAAKq8B,QAAQwM,cAAcC,gBAC5B9kC,IAAI9D,GACXuM,MAAMu8B,GACAA,EAAa5T,OAE3B,CACD,SAAAyS,CAAUp6B,GAEN,MAAM2nB,GADN3nB,EAAUA,GAAW,IACC2nB,OAASp1B,KAAKq8B,QAAQrH,WACtCyS,EAAUh6B,EAAQg6B,SAAWrS,EAAMtW,QACrCrR,EAAQg6B,SACRrS,EAAMwM,MAAMn0B,EAAQg6B,SAExB,MAAMtG,EAAU1zB,EAAQ0zB,SAAW/L,EAAML,WAAWjW,QAChDrR,EAAQg6B,SACRrS,EAAMwM,MAAMn0B,EAAQg6B,SAExB,IAAI2B,EAAc,CACdhU,MAASA,EAAMM,cAEfjoB,EAAQpN,OACR+oC,EAAkB,KAAI37B,EAAQpN,MAElC,MAAMH,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,YAAa,CAAE5H,QAASA,EAASsG,QAASA,IAEnF,OADaznC,KAAKq8B,QAAQwM,cAAcC,gBAC5Bh7B,IAAI5N,EAAKkpC,GAChB38B,MAAMu8B,GACAA,EAAa5T,OAE3B,CACD,WAAA4S,CAAYv6B,GACRA,EAAUA,GAAW,GACrB,MACM2nB,EADUp1B,KAAKq8B,QACCrH,WAChBmM,EAAU1zB,EAAQ0zB,SAAW/L,EAAML,WAAWjW,QAC9C2oB,EAAUh6B,EAAQg6B,SAAWrS,EAAMtW,QACzC,IAAIsqB,EAAc,CACdjI,QAAWA,EACXsG,QAAWA,GAEXh6B,EAAQpN,OACR+oC,EAAkB,KAAI37B,EAAQpN,MAElC,MAAMH,EAAMF,KAAKq8B,QAAQ0M,gBAAgB,cAAe,CAAE5H,QAASA,EAASsG,QAASA,IAErF,OADaznC,KAAKq8B,QAAQwM,cAAcC,gBAC5Bs5E,OAAOliH,EAAKkpC,GAAa78B,YACxC,EAGL,MAAM81G,oBAAoBryF,WAG1B,MAAMsyF,8BACF,WAAAziH,CAAYw8B,GACRr8B,KAAKq8B,QAAUA,EAEfr8B,KAAKuiH,aAAe,GACpBviH,KAAKwiH,QAAU,KACfxiH,KAAK0zD,cAAgB,IAAI3oB,sBAAsB1O,EAClD,CACD,gBAAAyP,GACI,OAAO9rC,KAAK0zD,aACf,CACD,WAAA+uD,GACIziH,KAAK87B,aAAe97B,KAAKq8B,QAAQrH,WAAWuI,yBAC5Cv9B,KAAK8hB,OAAS9hB,KAAK87B,aAAavY,YAChCvjB,KAAK6hB,WAAa7hB,KAAK87B,aAAanY,gBACpC3jB,KAAK0iH,WAAa1iH,KAAK87B,aAAanY,gBAAgB7hB,KAAI2R,GAAKA,EAAE0P,QAC/DnjB,KAAK69B,SAAW79B,KAAKq8B,QAAQ2T,YAAYttB,QAAQoD,WAC5C1jB,QAAOwjB,GAAO5lB,KAAK0iH,WAAW58G,QAAQ8f,EAAIngB,KAAO,IACtDzF,KAAKuiH,aAAe,GACpBviH,KAAKwiH,QAAU,IAClB,CACD,4BAAAG,GACI,MAAO,CACH/wD,IAAK,EACL9qD,IAAKwQ,OAAOsrG,UACZ/7G,IAAKyQ,OAAOurG,UAEnB,CACD,SAAA92E,CAAUt+B,GACNzN,KAAKyiH,cACLziH,KAAK0zD,cAAcjzC,SACnBhT,EAAUA,GAAW,IACbu+B,SAAWv+B,EAAQu+B,UAAY,EACjCv+B,EAAQu+B,SAAW,EACzB,IAAI82E,EAAc9iH,KAAK8hB,OAAOlgB,OAAS,EACvC,IAAK,IAAIonE,EAAa,EAAGA,EAAa85C,EAAa95C,IAAc,CAC7D,IAAI+5C,EAAc,CAAEt9F,MAAO,EAAG/C,QAAS,CAAE,GACzC1iB,KAAKgjH,iBAAiBD,GACtB/iH,KAAKuiH,aAAa99G,KAAKs+G,EAC1B,CACD,MAAME,EAAUjjH,KAAKq8B,QAAQ2T,YAAYvnB,gBACzC,GAAIw6F,EAAQrhH,OAAS,EAAG,CACpB,IAAK,MAAM8iB,KAAOu+F,EACdjjH,KAAKkjH,eAAex+F,GAGxB,IAAK,IAAIskD,EAAa,EAAGA,EAAa85C,EAAa95C,IAC/ChpE,KAAKmjH,iBAAiBn6C,GAGtBhpE,KAAK87B,aAAahY,kBAClB9jB,KAAKmjH,iBAAiB,EAE7B,CACD,OAAOv0G,QAAQC,SAClB,CACD,gBAAAm0G,CAAiBI,GACb,IAAK,MAAMC,KAAWrjH,KAAK69B,SACvBulF,EAAU1gG,QAAQ2gG,EAAQ59G,IAAMzF,KAAK2iH,+BAEzCS,EAAU39F,MAAQ,CACrB,CACD,cAAAy9F,CAAex+F,GACX,MAAM4+F,EAAoBtjH,KAAKujH,iBAAiB7+F,GAChD,GAAI4+F,GAAqB,EACrB,IAAK,IAAIt6C,EAAas6C,EAAmBt6C,EAAahpE,KAAKuiH,aAAa3gH,OAAQonE,IAC5EhpE,KAAKmjH,iBAAiBn6C,GAG1BhpE,KAAK87B,aAAahY,kBAClB9jB,KAAKwjH,kBAAkB,EAAG9+F,GAE9B,IAAIskD,EAAa,EACjB,IAAK,MAAM/kD,KAASjkB,KAAK8hB,OACrB9hB,KAAKwjH,kBAAkBx6C,EAAYtkD,GACnCskD,IAEJhpE,KAAKwiH,QAAU99F,CAClB,CAGD,gBAAA6+F,CAAiB7+F,GACb,GAAoB,MAAhB1kB,KAAKwiH,QACL,OAAQ,EACZ,IAAK,IAAIiB,EAAa,EAAGA,EAAazjH,KAAK8hB,OAAOlgB,OAAQ6hH,IAAc,CACpE,IAAIx/F,EAAQjkB,KAAK8hB,OAAO2hG,GACxB,IAAK,MAAMtgG,KAASc,EAAMvB,QAAS,CAC/B,MAAMliB,EAAQkkB,EAAIG,SAAS1B,GACrBugG,EAAY1jH,KAAKwiH,QAAQ39F,SAAS1B,GACxC,IAAKnjB,KAAK87B,aAAazZ,cAAcqhG,EAAWljH,GAC5C,OAAOijH,EAAa,CAE3B,CACJ,CACD,OAAQ,CACX,CAID,gBAAAN,CAAiBn6C,GACb,IAAI+5C,EAAc/iH,KAAKuiH,aAAav5C,GACpC,MAAM/kD,EAAQ+kD,EAAa,EAAIhpE,KAAK8hB,OAAOknD,EAAa,GAAK,KAC7D,IAAI79B,EAAWnrC,KAAK87B,aAAarX,cAAcR,EAAOjkB,KAAKwiH,SAC3D,IAAImB,EAAc,CAAA,EAClB,IAAK,MAAMx/F,KAAQnkB,KAAK6hB,WAAY,CAChC,MAAM+hG,EAAeb,EAAYrgG,QAAQyB,EAAKhB,OAC9CwgG,EAAYx/F,EAAKhB,OAASnjB,KAAK6jH,cAAc1/F,EAAKjB,OAAQ0gG,EAAcb,EAC3E,CACG/iH,KAAK87B,aAAa/X,mBAClB4/F,EAAY3jH,KAAK87B,aAAa5Z,kBAAoB6gG,EAAYt9F,OAElEzlB,KAAK0zD,cAAchoB,oBAAoBs9B,EAAY79B,EAAUw4E,GAC7D3jH,KAAKgjH,iBAAiBD,EACzB,CACD,aAAAc,CAAc3gG,EAAQ0gG,EAAcb,GAChC,OAAQ7/F,GACJ,IAAK,MACD,OAAO0gG,EAAahyD,IACxB,IAAK,MACD,OAAOgyD,EAAahyD,IAAMmxD,EAAYt9F,MAC1C,IAAK,QACL,IAAK,SACD,OAAOs9F,EAAYt9F,MACvB,IAAK,MACD,OAAOm+F,EAAa98G,IACxB,IAAK,MACD,OAAO88G,EAAa/8G,IAE/B,CAID,iBAAA28G,CAAkBx6C,EAAYtkD,GAC1B,MAAMq+F,EAAc/iH,KAAKuiH,aAAav5C,GACtC+5C,EAAYt9F,OAAS,EACrB,IAAK,MAAMtB,KAAQnkB,KAAK6hB,WAAY,CAChC,MAAMrhB,EAAQkkB,EAAIG,SAASV,EAAKhB,OAC1BygG,EAAeb,EAAYrgG,QAAQyB,EAAKhB,OAC9CygG,EAAahyD,KAAOpxD,EAChBA,EAAQojH,EAAa98G,MACrB88G,EAAa98G,IAAMtG,GAEnBA,EAAQojH,EAAa/8G,MACrB+8G,EAAa/8G,IAAMrG,EAE1B,CACJ,CACD,iBAAA2rC,GACI,OAAO,CACV,CACD,KAAAtN,GACC,EAGL,SAASilF,WAAW76G,GAChB,OAAIA,GACsB,KAAfA,EAAIjI,MAInB,CACA,MAAM+iH,EAAgB,wCAChBC,EAAY7E,EAAIE,WACtB,MAAM4E,SACF,WAAApkH,CAAYw8B,GACRr8B,KAAK4oC,KAAO,IAAIx7B,WAChBpN,KAAKq8B,QAAUA,CAClB,CACD,IAAA2kB,GACI,MAAM+gB,EAAgB,IAAIrE,qBAC1B19D,KAAKkkH,UAAYniD,EAAcpD,UAAU,CACrC,CACIf,UAAU,EACVE,YAAY,EACZG,eAAe,EACfrd,MAAO,+BACPv5C,KAAMrH,KAAKmkH,iBACXnkD,iBAAkB,SAClBY,QAAS5gE,KAAKokH,aAAa3xE,KAAKzyC,MAChC+9D,SAAU/9D,KAAKqkH,kBAAkB5xE,KAAKzyC,OAE1C,CACI49D,UAAU,EACVE,YAAY,EACZG,eAAe,EACfrd,MAAO,0BACPv5C,KAAMrH,KAAKskH,gBACXtkD,iBAAkB,kBAClBY,QAAS5gE,KAAKokH,aAAa3xE,KAAKzyC,MAChC+9D,SAAU/9D,KAAKukH,iBAAiB9xE,KAAKzyC,OAEzC,CACI49D,UAAU,EACVE,YAAY,EACZD,YAAY,EACZjd,MAAO,UACPv5C,KAAMrH,KAAKwkH,oBAEf,CACI5mD,UAAU,EACVE,YAAY,EACZD,YAAY,EACZjd,MAAO,UACPv5C,KAAMrH,KAAKykH,sBAGnB,MAAMC,EAAU1kH,KAAKkkH,UAAU1iH,KAAK,GACpCopB,YAAW,KACP5qB,KAAKokH,aAAaM,GAClB,MAAMC,EAAar9G,SAASgoD,eAAe,eACvCq1D,GACAA,EAAWhkE,OACd,GACF,IACN,CACD,WAAAikE,CAAYtwB,GACR,MAAMqwB,EAAarwB,EAAK5zB,cAAc,gBACtC,GAAIikD,EACA,OAAQb,WAAWa,EAAWnkH,QAC1BmkH,EAAWnkH,MACNqI,cACA2N,MAAM,yJAEnB,MAAMquG,EAAYvwB,EAAK5zB,cAAc,eACrC,OAAImkD,IACQf,WAAWe,EAAUrkH,SACxB4H,OAAOy8G,EAAUrkH,QAClBqkH,EAAUrkH,OAASqkH,EAAUrkH,MAAMQ,QACR,IAA3B6jH,EAAUrkH,MAAMoB,MAG3B,CACD,YAAAwiH,CAAa/lD,GACYA,EAAOkC,yBACfhnC,UAAYv5B,KAAK4kH,YAAYvmD,EAAOiC,iBACpD,CACD,aAAAwkD,CAAcC,EAAeC,GACzBD,EACK9pF,SAAS,SAASvnB,GAAKA,EACvBwG,KAAK,MAAO8qG,EAAav/G,IACzB09C,QAAQ,GAAG6hE,EAAa//F,SAAS+/F,EAAaC,SAAW,kCAAoC,UAC7FhqF,SAAS,SAASvnB,IACnBA,EAAEjO,GAAGu/G,EAAav/G,IAClBiO,EAAEnT,KAAKykH,EAAazkH,MAAQykH,EAAav/G,IACzCiO,EAAEuD,KAAK+tG,EAAa/tG,MAAQ,aACQ,IAAxB+tG,EAAkB,OAC1BtxG,EAAElT,MAAMwkH,EAAaxkH,OAErBwkH,EAAapkD,SACbltD,EAAEwuC,GAAG,QAAS8iE,EAAapkD,QAC9B,GAER,CACD,cAAAujD,GACI,IAAI7vB,EACA4wB,EACJ,MAAMC,EAAc5kE,MAAM,OA4B1B,OA3BA4kE,EAAYlqF,SAAS,OAAOvnB,GAAKA,EAC5BivC,KAAK,kPAEVwiE,EACKzjE,SAAS,aACTzmB,SAAS,OAAOvnB,IACjBwxG,EAAuBxxG,EACvBA,EAAEguC,SAAS,2BACXhuC,EAAEguC,SAAS,gBAAgB,IAE/B1hD,KAAK8kH,cAAcI,EAAsB,CACrCz/G,GAAI,cACJlF,KAAM,QACN0kB,MAAO,QACPggG,UAAU,IAEdjlH,KAAK8kH,cAAcI,EAAsB,CACrCz/G,GAAI,aACJlF,KAAM,cACN0kB,MAAO,kBACPggG,UAAU,IAEdE,EAAYlqF,SAAS,OAAOvnB,GAAKA,EAC5BivC,KAAK,iWAGV2xC,EAAO6wB,EAAY/hE,QACZkxC,CACV,CACD,aAAAgwB,GACI,IAAIhwB,EACA4wB,EACJ,MAAMC,EAAc5kE,MAAM,OAqB1B,OApBA4kE,EAAYlqF,SAAS,OAAOvnB,GAAKA,EAC5BivC,KAAK,iMAEVwiE,EACKzjE,SAAS,aACTzmB,SAAS,OAAOvnB,IACjBwxG,EAAuBxxG,EACvBA,EAAEguC,SAAS,2BACXhuC,EAAEguC,SAAS,gBAAgB,IAE/B1hD,KAAK8kH,cAAcI,EAAsB,CACrCz/G,GAAI,aACJlF,KAAM,OACN0kB,MAAO,oBACPggG,UAAU,IAEdE,EAAYlqF,SAAS,OAAOvnB,GAAKA,EAC5BivC,KAAK,8MAEV2xC,EAAO6wB,EAAY/hE,QACZkxC,EAAK8wB,SACf,CACD,gBAAAZ,GACI,IAAIlwB,EACJ,MAAM6wB,EAAc5kE,MAAM,OAI1B,OAHA4kE,EAAYlqF,SAAS,OAAOvnB,GAAKA,EAC5BivC,KAAK,qGACV2xC,EAAO6wB,EAAY/hE,QACZkxC,EAAK8wB,SACf,CACD,gBAAAX,GACI,IAAInwB,EACJ,MAAM6wB,EAAc5kE,MAAM,OAI1B,OAHA4kE,EAAYlqF,SAAS,OAAOvnB,GAAKA,EAC5BivC,KAAK,iBACV2xC,EAAO6wB,EAAY/hE,QACZkxC,EAAK8wB,SACf,CACD,iBAAAf,CAAkB7lD,GACd,MAAMmmD,EAAar9G,SAASgoD,eAAe,eACrC+1D,EAAY/9G,SAASgoD,eAAe,cACpCg2D,EAAYX,EAAWnkH,MACvB+kH,EAAWF,EAAU7kH,MA2B3B,OA1BAg+D,EAAIuC,iBACJ/gE,KAAK4oC,KAAKh7B,KAAKlO,EAAQysB,YAAY43F,EAAe,YAAa,CAC3DyB,MAAOF,EACP/kH,KAAMglH,EACNllH,KAAM,CACFolH,KAAMzlH,KAAKq8B,QAAQyZ,YAAY7+B,KAC/ByuG,QAAS1lH,KAAKq8B,QAAQyZ,YAAYz4B,UAEvC,CAAEpP,SAAU,SACVxB,MAAKjI,IACN,GAAsB,IAAlBA,EAAOyI,OACP,MAAM,IAAID,MAAMxI,EAAO0I,SAE3B,MAAMsxD,EAAMx+D,KAAKkkH,UAAU/hD,SAAS,CAAEqjD,MAAOF,IAC7C16F,YAAW,KACP5qB,KAAKokH,aAAa5lD,GAClB,MAAMqmD,EAAYv9G,SAASgoD,eAAe,cACtCu1D,GACAA,EAAUlkE,OACb,GACF,IAAI,IAEN/zC,OAAMqC,IACPuvD,EAAI0C,UAAUjyD,EAAM/B,QAAS,SAAS,GACtCsxD,EAAIyC,eAAe,KAEhB,CACV,CACD,gBAAAsjD,CAAiB/lD,GACb,MACMmnD,EADYr+G,SAASgoD,eAAe,cACf9uD,MA2C3B,OA1CAg+D,EAAIuC,iBACJ/gE,KAAK4oC,KAAKh7B,KAAKlO,EAAQysB,YAAY43F,EAAe,WAAY,CAC1Dh4F,MAAO45F,EACPF,KAAMzlH,KAAKq8B,QAAQyZ,YAAY7+B,KAC/B+G,QAASgmG,GACV,CAAE/1G,SAAU,SACVxB,MAAKjI,IACN,OAAQA,EAAOyI,QACX,KAAK,EACD,MAAM/M,EAAMR,EAAQysB,YAAYnsB,KAAKq8B,QAAQwb,kBAAmB,OAChE73C,KAAK4oC,KAAKh7B,KAAK1N,EAAK,CAChB8d,QAASgmG,EACTpgH,IAAKY,EAAOZ,KACb,CAAEqK,SAAU,SACVxB,MAAKwgC,GAAKjtC,KAAKkkH,UAAU1iH,KAAK,EAAG,CAClC0L,QAAS,qGACT+/B,GAAKjtC,KAAKkkH,UAAU1iH,KAAK,EAAG,CAC5B0L,QAAS,6OAIb,MACJ,KAAK,EACDlN,KAAKkkH,UAAU1iH,KAAK,EAAG,CACnB0L,QAAS,yNAGb,MACJ,KAAK,EACDlN,KAAKkkH,UAAU1iH,KAAK,EAAG,CACnB0L,QAAS,iPAGb,MACJ,QACI,MAAM,IAAIF,MAAMxI,EAAO0I,SAC9B,IAEAN,OAAMqC,IACPuvD,EAAI0C,UAAUjyD,EAAM/B,QAAS,SAAS,GACtCsxD,EAAIyC,eAAe,KAEhB,CACV,EAwDL,MAAM2kD,4BAA4Br1E,UAC9B,aAAAwC,CAAcC,GACV,MAAMvhB,KAAQ7tB,IAEV,GADAu7G,EAAIG,GAAG17G,GACHu7G,EAAIC,KAAO,EAAG,CACd,MAAMtyE,EAAW9sC,KAAK6oC,cACtBiE,EAASuB,2BAA0BhS,GAAW,IAAIgmF,cAClDv1E,EAASyB,uBAAsBlS,GAAW,IAAI4kF,QAAQ5kF,EAAQtH,WAAY,CAAEsH,QAASA,MACrFyQ,EAAS4B,8BAA6BrS,GAAW,IAAI8lF,qBAAqB9lF,KAC1EyQ,EAASiC,8BAA6B1S,GAAW,IAAIimF,8BAA8BjmF,KAClE,IAAb8iF,EAAIC,OACJ9wG,QAAQC,KAAK,iIAEbvO,KAAK6lH,gBACLj7F,YAAW,KACP5qB,KAAK8lH,cACLl7F,YAAW,KAAQ5qB,KAAK+lH,aAAa,GAAK,IAAK,GAChD,KAEV,MAzEb,SAASC,mBAAmB3pF,GACxB,IAAiB,GAAb8iF,EAAIC,KACQ,IAAI6E,SAAS5nF,GACrB2kB,WAEH,CACD,IAAIJ,EAAOv5C,EAAM4+G,EAAaC,EAErB,IADD/G,EAAIC,MAEJx+D,EAAQ,8BACRv5C,EAAO,mPAEP4+G,EAAc,gBACdC,EAAY,eAGZtlE,EAAQ,6BACRv5C,EAAO,+IACoB28G,uHACuEA,IAClGiC,EAAc,UACdC,EAAY,6BAGpB,MAQMC,GARK,IAAIzoD,sBACAl8D,KAAK,CAChBo8D,UAAU,EACVE,YAAY,EACZD,YAAY,EACZjd,MAAOA,EACPv5C,KAAMA,IAESi5D,iBAAiBI,cAAc,UAClDngB,MAAM4lE,GACDrkE,YAAY,eACZV,SAAS,kBAAmB,UAC5BnmB,SAAS,UAAUvnB,GAAKA,EACxBguC,SAAS,cAAe,WACxBsB,QAAQijE,GACR/jE,GAAG,SAAU5iB,IACd73B,OAAOmpG,SAASrmE,KAAO27E,CAAS,MAEpB,GAAZ/G,EAAIC,MACJ7+D,MAAM4lE,GACDlrF,SAAS,UAAUvnB,GAAKA,EACxBguC,SAAS,eACTsB,QAAQ,gBACRd,GAAG,SAAU5iB,IACd73B,OAAOmpG,SAASrmE,KAAO,2BAA2B,KAG7D,CACL,CAuBgBy7E,CAAmBhmH,KACtB,EAEL,GAAmC,iBAAvB,EACRyxB,KAAKuhB,OAEJ,IAAmC,mBAAvB,EA0Bb,MAAM,IAAIhmC,MAAM,+GA1BgC,CAChD,MAAM47B,EAAO5oC,KAAK6oC,cAAcC,gBAChC,IAAI5oC,EAAMR,EAAQysB,YAAYnsB,KAAK63C,kBAAmB,QACtDjP,EAAK5kC,IAAI9D,GACJuM,MAAKjI,IACNitB,KAAKjtB,EAAOZ,IAAI3C,MAAM,IAAIkX,UAAU5W,KAAK,KACzCvB,KAAKg2C,WAAW,CACZ/+B,KAAMzS,EAAO4hH,YACb/oG,QAAS7Y,EAAO6hH,UAEpBrzE,GAAmB,IAElBpmC,OAAMqC,IACP/O,EAAMR,EAAQysB,YAAYnsB,KAAK63C,kBAAmB,OAClDjP,EAAK5kC,IAAI9D,GACJuM,MAAKjI,IACNitB,KAAKjtB,EAAOvD,MAAM,IAAIkX,UAAU5W,KAAK,KACrCyxC,GAAmB,IAElBpmC,OAAMqC,GAASjP,KAAKg3C,WAAW,CAChChf,OAAQ,MACR8a,YAAa7jC,KACd,GAEV,CAGA,CACJ,CACD,aAAA42G,GAGI,IAAIS,EAAWh/G,SAAS8iC,cAAc,OACtCk8E,EAAS1uG,MAAMqlC,SAAW,QAC1BqpE,EAAS1uG,MAAMwlC,OAAS,IACxBkpE,EAAS1uG,MAAMulC,MAAQ,SACvBmpE,EAAS1uG,MAAMxQ,MAAQ,QACvBk/G,EAAS1uG,MAAMwkC,OAAS,QACxBkqE,EAAS1uG,MAAMo2D,MAAQ,OACvBs4C,EAAS1uG,MAAM2uG,UAAY,SAC3BD,EAAS1uG,MAAM4uG,QAAU,MACzBF,EAAS1uG,MAAM6uG,KAAO,+EACtBH,EAAS1uG,MAAM8uG,WAAa,oBAC5B,MAAMrlH,EAASiG,SAAS8iC,cAAc,OAChCu8E,EAAKr/G,SAAS8iC,cAAc,QAClCu8E,EAAGjkE,UAAY,YACfikE,EAAG/uG,MAAMo2D,MAAQ,UACjB24C,EAAG/uG,MAAMgvG,WAAa,OACtBvlH,EAAOgpC,YAAYs8E,GACnB,MAAME,EAAQv/G,SAAS8iC,cAAc,QACrCy8E,EAAMnkE,UAAY,eAClBmkE,EAAMjvG,MAAM0zD,WAAa,OACzBjqE,EAAOgpC,YAAYw8E,GACnBP,EAASj8E,YAAYhpC,GACrB,MAAMylH,EAAYx/G,SAAS8iC,cAAc,OACzC08E,EAAUpkE,UAAY,qBACtBokE,EAAUlvG,MAAM0yD,SAAW,QAC3Bw8C,EAAUlvG,MAAMmvG,WAAa,OAC7BT,EAASj8E,YAAYy8E,GACrBx/G,SAASD,KAAKgjC,YAAYi8E,GAC1BtmH,KAAKgnH,gBAAkBV,CAC1B,CACD,WAAAR,GACQ9lH,KAAKgnH,kBACLhnH,KAAKgnH,gBAAgBpvG,MAAMulC,MAAQ,IAE1C,CACD,WAAA4oE,GACQ/lH,KAAKgnH,kBACLhnH,KAAKgnH,gBAAgBpvG,MAAMulC,MAAQ,SACnCvyB,YAAW,KACP5qB,KAAKgnH,gBAAgB/iD,WAAWp5B,YAAY7qC,KAAKgnH,gBAAgB,GAClE,KAEV,EAEL1sE,2BAA0B,IAAM,IAAIsrE,sBCpiCpCn+G,OAAOkrC,iBAAiB,QAAQ,WAE5B,IAAIk3D,EAAc,CACdod,YAAY,EACZ1iB,cAAc,EACd/uD,gBAAiB,CAAC,MAAO,QAAS,aAAc,OAEhDq6D,oBAAoB,EACpB17D,SAAU,CACNS,QAAS,SAAUvY,EAASptB,GACxBX,QAAQW,MAAMA,EAAM6jC,YACvB,GAELtuC,OAAQ,CAEJmlG,WAAW,EAEX/7C,OAAQ,CACJ5lC,SAAU,KAIlB4oB,kBAAkB,EAElB0E,eAAgB,mBAEhB4xE,EAAa,IAAI3X,WACrB2X,EAAW9+E,aACN2N,YAAY,wBACZhD,eAAc,WACfm0E,EAAWngF,KAAK8iE,EACxB,IACIviG,SAAqB,WAAI4/G,CAC7B","x_google_ignoreList":[0,1,2,3,4]}