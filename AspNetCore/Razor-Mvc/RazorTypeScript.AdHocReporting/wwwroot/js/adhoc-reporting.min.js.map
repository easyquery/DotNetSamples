{"version":3,"file":"adhoc-reporting.min.js","sources":["../../node_modules/@easydata/core/dist/easydata.core.esm.js","../../node_modules/@easyquery/core/dist/easyquery.core.esm.js","../../node_modules/@easydata/ui/dist/easydata.ui.esm.js","../../node_modules/@easyquery/ui/dist/easyquery.ui.esm.js","../../node_modules/@easyquery/enterprise/dist/easyquery.enterprise.esm.js","../../ts/adhoc-reporting.ts"],"sourcesContent":["\n/*\n * EasyData.JS Core v1.5.3\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nconst EditorTag = {\n    /** Unknown tag value */\n    Unknown: \"Unknown\",\n    /** Edit tag value */\n    Edit: \"EDIT\",\n    /** DateTime tag value  */\n    DateTime: \"DATETIME\",\n    /** List tag value */\n    List: \"LIST\",\n    /** CustomList tag value */\n    CustomList: \"CUSTOMLIST\",\n    /** File tag value */\n    File: \"FILE\"\n};\n\n/**\n * Represents a date/time value that can return either a date itself or a special date name\n */\nclass TimeValue {\n    constructor(dt) {\n        if (dt instanceof Date) {\n            this.date = dt;\n        }\n        else {\n            this._name = dt;\n        }\n    }\n    asTime(settings) {\n        if (this.date) {\n            return this.date;\n        }\n        else {\n            specialDatesResolver.getDateByName(this._name);\n        }\n    }\n    get name() {\n        return this.name;\n    }\n}\nclass SpecialDatesResolver {\n    getDateByName(name, settings) {\n        if (this[name]) {\n            return this[name](settings);\n        }\n        else {\n            return undefined;\n        }\n    }\n    Today(settings) {\n        return new Date();\n    }\n    Yesterday(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() - 1);\n        return d;\n    }\n    Tomorrow(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() + 1);\n        return d;\n    }\n    FirstDayOfMonth(settings) {\n        let d = new Date();\n        d.setDate(1);\n        return d;\n    }\n    LastDayOfMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 0);\n        return d;\n    }\n    FirstDayOfNextMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 1);\n        return d;\n    }\n    FirstDayOfPrevMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() - 1, 1);\n        return d;\n    }\n    FirstDayOfYear(settings) {\n        const d = new Date();\n        d.setMonth(0, 1);\n        return d;\n    }\n    FirstDayOfPrevYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() - 1, 0, 1);\n        return d;\n    }\n    FirstDayOfNextYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() + 1, 0, 1);\n        return d;\n    }\n    FirstDayOfWeek(settings) {\n        const d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfPrevWeek(settings) {\n        let d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfNextWeek(settings) {\n        let d = new Date();\n        var day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() + day);\n        return d;\n    }\n}\nvar specialDatesResolver = new SpecialDatesResolver();\nfunction registerSpecialDatesResolver(resolver) {\n    specialDatesResolver = resolver;\n}\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nclass HttpRequest {\n    constructor(xhr, descriptor) {\n        this.xhr = xhr;\n        this.method = descriptor.method;\n        this.url = descriptor.url;\n        this.headers = descriptor.headers;\n        this.queryParams = descriptor.queryParams;\n        this.data = descriptor.data;\n    }\n    setHeader(name, value) {\n        this.headers[name] = value;\n    }\n    setQueryParam(name, value) {\n        this.queryParams[name] = value;\n    }\n    getXMLHttpRequest() {\n        return this.xhr;\n    }\n    getResponseHeaders() {\n        if (this.xhr.readyState == this.xhr.HEADERS_RECEIVED) {\n            const headers = this.xhr.getAllResponseHeaders();\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            // Create a map of header names to values\n            const headerMap = {};\n            for (const line of arr) {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n                headerMap[header] = value;\n            }\n            return headerMap;\n        }\n        return {};\n    }\n    open() {\n        if (this.xhr.readyState !== this.xhr.UNSENT)\n            return;\n        let url = this.url;\n        if (this.queryParams && Object.keys(this.queryParams).length > 0) {\n            url += encodeURI('?' + Object.keys(this.queryParams)\n                .map(param => param + '=' + this.queryParams[param])\n                .join('&'));\n        }\n        this.xhr.open(this.method, url, true);\n        this.xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        for (const header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header]);\n        }\n    }\n    abort() {\n        this.xhr.abort();\n    }\n}\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        if (!target) {\n            target = {};\n        }\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source && source.hasOwnProperty) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source && source.hasOwnProperty) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        //we don't make a deep copy of HTML elements and any other property marked as a 'reference' (ends with 'Ref')\n                        if (sourceVal !== null && typeof sourceVal === 'object'\n                            && !key.endsWith('Ref') && !(sourceVal instanceof HTMLElement)) {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part\n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\nclass HttpActionResult {\n    constructor(request, promise) {\n        this.request = request;\n        this.promise = promise;\n    }\n    getPromise() {\n        return this.promise;\n    }\n    getRequest() {\n        return this.request;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n}\n\nclass HttpResponseError extends Error {\n    constructor(status, message) {\n        super(message);\n        Object.setPrototypeOf(this, HttpResponseError.prototype);\n        this.status = status;\n    }\n}\nclass HttpClient {\n    /** Gets the response body for the latest request  */\n    get responseBody() {\n        return this._responseBody;\n    }\n    constructor() {\n        this.defaultHeaders = {};\n        this.customPayload = undefined;\n    }\n    get(url, options) {\n        return this.send(HttpMethod.Get, url, null, options);\n    }\n    post(url, data, options) {\n        return this.send(HttpMethod.Post, url, data, options);\n    }\n    put(url, data, options) {\n        return this.send(HttpMethod.Put, url, data, options);\n    }\n    delete(url, data, options) {\n        return this.send(HttpMethod.Delete, url, data, options);\n    }\n    send(method, url, data, options) {\n        options = options || {};\n        const dataType = options.dataType || 'json';\n        const contentType = options.contentType || (dataType !== 'form-data')\n            ? 'application/json'\n            : null;\n        if (data && dataType != 'form-data' && this.customPayload) {\n            data.data = utils.assignDeep(data.data || {}, this.customPayload);\n        }\n        const XHR = ('onload' in new XMLHttpRequest())\n            ? XMLHttpRequest\n            : window[\"XDomainRequest\"]; //IE support\n        const xhr = new XHR();\n        const desc = {\n            method: method,\n            url: url,\n            headers: Object.assign(Object.assign({}, this.defaultHeaders), options.headers || {}),\n            queryParams: options.queryParams || {},\n            data: data\n        };\n        if (contentType)\n            desc.headers['Content-Type'] = contentType;\n        const request = new HttpRequest(xhr, desc);\n        if (this.beforeEachRequest) {\n            console.warn(`HttpClient: 'beforeEachRequest' is deprecated and will be removed in future updates.\r\n            Use 'onRequest' instead`);\n            this.beforeEachRequest(request);\n        }\n        if (this.onRequest) {\n            this.onRequest(request);\n        }\n        const dataToSend = (request.data && typeof request.data !== 'string'\n            && dataType == 'json')\n            ? JSON.stringify(request.data)\n            : request.data;\n        request.open();\n        return new HttpActionResult(request, new Promise((resolve, reject) => {\n            if (options.responseType)\n                xhr.responseType = options.responseType;\n            xhr.onerror = (error) => {\n                reject(new HttpResponseError(xhr.status, xhr.responseText));\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState != 4)\n                    return; //we process only the state change to DONE(4)\n                const responseContentType = xhr.getResponseHeader('Content-Type') || '';\n                const status = xhr.status;\n                if (status === 0) {\n                    reject(new HttpResponseError(status, \"Network error or the request was aborted\"));\n                }\n                else if (status >= 200 && status < 400) {\n                    //Success\n                    const responseObj = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? xhr.response\n                        : (responseContentType.indexOf('application/json') == 0\n                            ? JSON.parse(xhr.responseText)\n                            : xhr.responseText);\n                    this._responseBody = responseObj;\n                    if (this.onResponse) {\n                        this.onResponse(xhr);\n                    }\n                    resolve(responseObj);\n                }\n                else {\n                    //Error\n                    const rtPromise = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? HttpClient.decodeArrayBuffer(xhr.response)\n                        : Promise.resolve(xhr.responseText);\n                    rtPromise.then(responseText => {\n                        const responseObj = (responseContentType.indexOf('application/json') == 0)\n                            ? JSON.parse(responseText)\n                            : responseText;\n                        this._responseBody = responseObj;\n                        const message = responseObj.message ||\n                            (status == 404\n                                ? `No such endpoint: ${url}`\n                                : responseObj);\n                        reject(new HttpResponseError(status, message));\n                    });\n                }\n            };\n            xhr.send(dataToSend);\n        }));\n    }\n    static decodeArrayBuffer(uintArray) {\n        var reader = new FileReader();\n        return new Promise((resolve) => {\n            reader.onloadend = function () {\n                if (reader.readyState == FileReader.DONE) {\n                    resolve(reader.result);\n                }\n            };\n            reader.readAsText(new Blob([uintArray]));\n        });\n    }\n}\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    /**\n     * Updates the default texts for the current locale and all other locales available now\n     * This function does rewrite the texts in the locales, it just adds new textual resources if they didn't exists previously\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeInfo) {\n        mapInfo(localeInfo);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeInfo.localeId) {\n                localeInfo.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeInfo);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'u') {\n                format = buildUniversalDateTimeFormat(dataType);\n            }\n            else {\n                format = buildUniversalDateTimeFormat(dataType);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildUniversalDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        const dateFormat = 'yyyy-MM-dd';\n        switch (dataType) {\n            case DataType.Date:\n                format = dateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = dateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param num - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(num, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(num, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return num.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(num), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return num.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\n/**\n * Represents one entity.\n */\nclass MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        /** Returns false if this entity is read-only */\n        this.isEditable = true;\n        this.name = \"\";\n        this.caption = \"\";\n        this.description = \"\";\n        this.parent = parent;\n        this.attributes = new Array();\n        this.subEntities = new Array();\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param dto The JSON representation object.\n    */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.name = dto.name;\n            this.captionPlural = dto.namePlur;\n            this.caption = dto.name;\n            this.description = dto.desc;\n            if (typeof (dto.ied) !== 'undefined')\n                this.isEditable = dto.ied;\n            this.subEntities = new Array();\n            if (dto.ents) {\n                for (let i = 0; i < dto.ents.length; i++) {\n                    let newEntity = model.createEntity(this);\n                    newEntity.loadFromData(model, dto.ents[i]);\n                    this.subEntities.push(newEntity);\n                }\n            }\n            this.attributes = new Array();\n            if (dto.attrs) {\n                for (let i = 0; i < dto.attrs.length; i++) {\n                    let newAttr = model.createEntityAttr(this);\n                    newAttr.loadFromData(model, dto.attrs[i]);\n                    this.attributes.push(newAttr);\n                }\n            }\n        }\n    }\n    scan(processAttribute, processEntity) {\n        let opts = { stop: false };\n        let internalProcessEntity = (entity) => {\n            if (processEntity)\n                processEntity(entity, opts);\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; (i < attrCount) && !opts.stop; i++) {\n                    let attr = entity.attributes[i];\n                    if (processAttribute) {\n                        processAttribute(attr, opts);\n                    }\n                    if (opts.stop)\n                        return;\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; (i < subEntityCount) && !opts.stop; i++) {\n                    internalProcessEntity(entity.subEntities[i]);\n                }\n            }\n        };\n        internalProcessEntity(this);\n    }\n    getFirstPrimaryAttr() {\n        return this.getPrimaryAttrs()[0];\n    }\n    getPrimaryAttrs() {\n        return this.attributes.filter(attr => attr.isPrimaryKey);\n    }\n}\nclass MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        this.id = \"\";\n        this.caption = \"{Unrecognized attribute}\";\n        this.dataType = DataType.String;\n        this.size = 0;\n        this.isPrimaryKey = false;\n        this.isForeignKey = false;\n        this.isNullable = true;\n        this.showOnView = true;\n        this.isEditable = true;\n        this.showOnCreate = true;\n        this.showOnEdit = true;\n        this.showInLookup = false;\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n        this.entity = entity;\n        this.kind = EntityAttrKind.Data;\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param dto The JSON representation object.\n     */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.description = dto.desc;\n            this.caption = dto.cptn;\n            this.dataType = dto.dtype;\n            this.isPrimaryKey = dto.ipk;\n            this.isForeignKey = dto.ifk;\n            this.size = dto.size;\n            this.lookupAttr = dto.lattr;\n            this.lookupEntity = dto.lent;\n            this.dataAttr = dto.dattr;\n            this.lookupDataAttr = dto.ldattr;\n            const isDataType = utils.getDateDataTypes().indexOf(this.dataType);\n            this.defaultValue = dto.defVal && isDataType ? new Date(dto.defVal) : dto.defVal;\n            this.isNullable = utils.getIfDefined(dto.nul, this.isNullable);\n            this.isEditable = utils.getIfDefined(dto.ied, this.isEditable);\n            this.showOnView = utils.getIfDefined(dto.ivis || dto.sov, this.showOnView);\n            this.showOnCreate = utils.getIfDefined(dto.soc, this.showOnCreate);\n            this.showOnEdit = utils.getIfDefined(dto.soe, this.showOnEdit);\n            this.showInLookup = utils.getIfDefined(dto.sil, this.showInLookup);\n            this.kind = dto.kind;\n            this.displayFormat = dto.dfmt;\n            if (dto.udata)\n                this.userData = dto.udata;\n            if (dto.edtr) {\n                this.defaultEditor = model.getEditorById(dto.edtr) || model.createValueEditor();\n            }\n        }\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.tag = EditorTag.Unknown;\n        this.resType = DataType.Unknown;\n        this.defValue = \"\";\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        if (data) {\n            this.id = data.id;\n            this.tag = data.tag;\n            this.defValue = data.defval;\n            this.resType = data.rtype;\n            this.accept = data.accept;\n            this.multiline = data.multiline;\n            if (data.subType) {\n                this.resType = data.subType;\n            }\n            if (data.name) {\n                this.name = data.name;\n            }\n            if (data.values) {\n                this.values = data.values;\n            }\n        }\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (!this.values)\n            return result;\n        if (Array.isArray(value)) {\n            for (let item of this.values) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.values) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n}\n\n/**\n * Represents a data model\n */\nclass MetaData {\n    /** The default constructor. */\n    constructor() {\n        this.mainEntity = null;\n        this.id = '__none';\n        this.name = 'Empty model';\n        this.rootEntity = this.createEntity();\n        this.displayFormats = new Map();\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    createEntity(parent) {\n        return new MetaEntity(parent);\n    }\n    createEntityAttr(parent) {\n        return new MetaEntityAttr(parent);\n    }\n    createValueEditor() {\n        return new ValueEditor();\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.version = data.vers;\n        //Editors\n        this.editors = new Array();\n        if (data.editors) {\n            for (let i = 0; i < data.editors.length; i++) {\n                let newEditor = this.createValueEditor();\n                newEditor.loadFromData(data.editors[i]);\n                this.editors.push(newEditor);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //DataFormats\n        this.displayFormats = new Map();\n        if (data.displayFormats) {\n            for (const dtypeStr in data.displayFormats) {\n                const dtype = DataType[dtypeStr];\n                const formats = data.displayFormats[dtypeStr] || new Array();\n                this.displayFormats.set(dtype, formats);\n            }\n        }\n    }\n    /**\n     * Gets the display formats.\n     * @returns The display formats.\n     */\n    getDisplayFormats() {\n        return this.displayFormats;\n    }\n    /**\n     * Gets the display formats for type\n     * @param type The type\n     * @returns An array of display formats\n     */\n    getDisplayFormatsForType(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type);\n        }\n        return [];\n    }\n    /**\n     * Gets the default display format for the provided type\n     * @param type The type\n     * @returns The default type format or null\n     */\n    getDefaultFormat(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type).filter(f => f.isdef)[0];\n        }\n        return null;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Checks wether the data model is empty.\n     * @returns `true` if the data model is empty, otherwise `false`.\n     */\n    isEmpty() {\n        return this.rootEntity.subEntities.length === 0 && this.rootEntity.attributes.length === 0;\n    }\n    /**\n     * Gets ID of the data model.\n     * @returns The ID.\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Gets name of the data model.\n     * @returns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        for (let editor of this.editors) {\n            if (editor.id === editorId) {\n                return editor;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        let idx;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (idx = 0; idx < attrCount; idx++) {\n                if (entity.attributes[idx].id == attrId) {\n                    return entity.attributes[idx];\n                }\n            }\n        }\n        let res;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (idx = 0; idx < subEntityCount; idx++) {\n                res = this.getEntityAttrById(entity.subEntities[idx], attrId);\n                if (res)\n                    return res;\n            }\n        }\n        return null;\n    }\n    listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(this.createEntity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this.listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(this.createEntity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name) || ent.caption;\n                    let newEnt = utils.assign(this.createEntity(), {\n                        id: ent.name,\n                        text: caption,\n                        items: [],\n                        isEntity: true,\n                        description: ent.description\n                    });\n                    let newOpts = utils.assign({}, opts);\n                    newOpts.includeRootData = false;\n                    newEnt.items = this.listByEntity(ent, newOpts, filterFunc);\n                    if (newEnt.items.length > 0) {\n                        resultEntities.push(newEnt);\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                    resultAttributes.push(utils.assign(this.createEntityAttr(entity), {\n                        id: attr.id, text: caption,\n                        dataType: attr.dataType, lookupAttr: attr.lookupAttr,\n                        description: attr.description\n                    }));\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        this.rootEntity = this.createEntity();\n        this.editors = [];\n        this.version = '';\n    }\n    /**\n     * Add default value editors.\n     */\n    addDefaultValueEditors() {\n        let ve;\n        ve = this.addOrUpdateValueEditor('_DTE', EditorTag.Edit, DataType.String);\n        ve.defValue = '';\n        this.addOrUpdateValueEditor('_DPDE', EditorTag.DateTime, DataType.DateTime);\n        this.addOrUpdateValueEditor('_DPTE', EditorTag.DateTime, DataType.DateTime);\n    }\n    /**\n    * Add or update a value editor.\n    * @param id The id.\n    * @param tag The tag.\n    * @param resType The result type.\n    * @returns The value editor.\n    */\n    addOrUpdateValueEditor(id, tag, resType) {\n        let ve = utils.findItemById(this.editors, id);\n        if (!ve) {\n            ve = this.createValueEditor();\n            ve.id = id;\n            this.editors.push(ve);\n        }\n        ve.tag = tag;\n        ve.resType = resType;\n        return ve;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this.listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this.listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        if (!entity)\n            return '';\n        sep = sep || ' ';\n        let entityCaption = '';\n        if (entity.caption && !root) {\n            let entityText = i18n.getText('Entities', entity.caption);\n            entityCaption = entityText ? entityText : entity.caption;\n        }\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let i = 0; i < attrCount; i++) {\n                if (entity.attributes[i].id == attrId) {\n                    return entityCaption;\n                }\n            }\n        }\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let i = 0; i < subEntityCount; i++) {\n                let ent = entity.subEntities[i];\n                let res = this.getEntityPathByAttr(ent, attrId, sep, false);\n                if (res !== '') {\n                    if (entityCaption !== '')\n                        res = entityCaption + sep + res;\n                    return res;\n                }\n            }\n        }\n        return '';\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        let attrText = i18n.getText('Attributes', attr.id);\n        if (!attrText) {\n            attrText = attr.caption;\n        }\n        if (!format) {\n            return attrText;\n        }\n        let result = '';\n        let entityPath = this.getFullEntityPathByAttr(attr.id, ' ');\n        if (entityPath) {\n            result = format.replace(new RegExp('{attr}', 'g'), attrText);\n            result = result.replace(new RegExp('{entity}', 'g'), entityPath);\n        }\n        else {\n            result = attrText;\n        }\n        return result.trim();\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n}\n\n/**\n * Defines aggregations settings for the current context.\n * Group, aggregate columns, grand totals, etc.\n */\nclass AggregationSettings {\n    constructor(colStore) {\n        this.colStore = colStore;\n        this.aggregates = [];\n        this.groups = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this._caseSensitiveGroups = false;\n        this.COUNT_FIELD_NAME = 'GRPRECCNT';\n    }\n    get caseSensitiveGroups() {\n        return this._caseSensitiveGroups;\n    }\n    set caseSensitiveGroups(value) {\n        this._caseSensitiveGroups = value;\n        this.updateCompareProc();\n    }\n    updateCompareProc() {\n        this.compareValues = this._caseSensitiveGroups\n            ? this.strictCompare\n            : this.caseInsensitiveCompare;\n    }\n    addGroup(settings) {\n        const cols = settings.columns || this.colStore.getColumnIds(settings.from, settings.to);\n        if (!this.colStore.validateColumns(cols))\n            throw \"Invalid columns: \" + cols;\n        if (this.hasColumnsInUse(cols))\n            throw \"Can't add same columns to different groups/aggregates\";\n        this.groups.push(Object.assign({ columns: cols }, settings));\n        return this;\n    }\n    addAggregateColumn(colIndexOrId, funcId) {\n        const colId = typeof colIndexOrId == 'string'\n            ? colIndexOrId\n            : this.colStore.getColumnIds(colIndexOrId, colIndexOrId)[0];\n        if (this.hasColumnsInUse([colId]) || !this.colStore.validateAggregate(colId, funcId))\n            throw 'Invalid aggregation function for the column: ' + colId;\n        this.aggregates.push({ colId, funcId });\n        return this;\n    }\n    addGrandTotals() {\n        this.useGrandTotals = true;\n        return this;\n    }\n    addCounts() {\n        this.useRecordCount = true;\n        return this;\n    }\n    getGroups() {\n        let cols = [];\n        const mappedGrops = this.groups.map(grp => {\n            cols = cols.concat(grp.columns);\n            return Object.assign(Object.assign({}, grp), { columns: Array.from(cols), aggregates: Array.from(this.aggregates) });\n        });\n        return mappedGrops;\n    }\n    getInternalGroups() {\n        return this.groups;\n    }\n    lastGroup() {\n        const groups = this.getGroups();\n        return groups[groups.length - 1];\n    }\n    getAggregates() {\n        return this.aggregates;\n    }\n    hasAggregates() {\n        return this.aggregates.length > 0;\n    }\n    hasGroups() {\n        return this.groups.length > 0;\n    }\n    hasGrandTotals() {\n        return this.useGrandTotals;\n    }\n    hasRecordCount() {\n        return this.useRecordCount;\n    }\n    isEmpty() {\n        return !(this.hasAggregates() || this.hasGroups() ||\n            this.hasGrandTotals() || this.hasRecordCount());\n    }\n    isValid() {\n        return (this.hasGroups() && (this.hasAggregates() || this.hasRecordCount()))\n            || (this.hasAggregates && this.hasGrandTotals());\n    }\n    drop() {\n        console.warn('\"drop()\" method is obsolete. Use \"clear()\" instead');\n        this.clear();\n    }\n    clear() {\n        this.groups = [];\n        this.aggregates = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this.caseSensitiveGroups = false;\n        return this;\n    }\n    /**\n     * Checks if all columns from the list passed in the parameter are \"unused\".\n     * Here \"unused column\" means a column that is included neither in any group nor in the aggregates list.\n     * @param cols - the array of column IDs\n     * @returns true if all columns in the list are not used anywhere, othervise - fals\n     */\n    hasColumnsInUse(cols) {\n        for (const group of this.groups) {\n            const interCols = group.columns\n                .filter(c => cols.indexOf(c) >= 0);\n            if (interCols.length > 0)\n                return true;\n        }\n        for (const aggr of this.aggregates) {\n            if (cols.indexOf(aggr.colId) >= 0)\n                return true;\n        }\n        return false;\n    }\n    needAggrCalculation() {\n        return (this.hasAggregates() || this.hasRecordCount())\n            && (this.hasGrandTotals() || this.hasGroups());\n    }\n    saveToData() {\n        return {\n            groups: Array.from(this.groups),\n            ugt: this.useGrandTotals,\n            urc: this.useRecordCount,\n            csg: this.caseSensitiveGroups,\n            aggregates: Array.from(this.aggregates)\n        };\n    }\n    loadFromData(data) {\n        if (data) {\n            if (typeof data.ugt !== 'undefined')\n                this.useGrandTotals = data.ugt;\n            if (typeof data.urc !== 'undefined')\n                this.useRecordCount = data.urc;\n            if (typeof data.csg !== 'undefined')\n                this.caseSensitiveGroups = data.csg;\n            if (data.groups) {\n                this.groups = Array.from(data.groups);\n            }\n            if (data.aggregates) {\n                this.aggregates = Array.from(data.aggregates);\n            }\n        }\n    }\n    buildGroupKey(group, row) {\n        const caseInsensitive = !this.caseSensitiveGroups;\n        let result = {};\n        if (group) {\n            for (const colId of group.columns) {\n                let keyVal = row.getValue(colId);\n                if (caseInsensitive && typeof (keyVal) === 'string') {\n                    keyVal = keyVal.toLowerCase();\n                }\n                result[colId] = keyVal;\n            }\n        }\n        return result;\n    }\n    //returns true if value1 == value2\n    strictCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else\n            return value1 === value2;\n    }\n    //makes a case insensative comparision of two values and return true if there are equal\n    caseInsensitiveCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else {\n            const val1 = (typeof value1 === 'string') ? value1.toLowerCase() : value1;\n            const val2 = (typeof value2 === 'string') ? value2.toLowerCase() : value2;\n            return val1 === val2;\n        }\n    }\n}\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\nclass DataColumn {\n    constructor(desc) {\n        if (!desc)\n            throw Error(\"Options are required\");\n        if (!desc.id)\n            throw Error(\"Field Id is required\");\n        if (!desc.label)\n            throw Error(\"Label is required\");\n        this.id = desc.id;\n        this.type = utils.getIfDefined(desc.type, DataType.String);\n        this.label = desc.label;\n        this.originAttrId = desc.originAttrId;\n        this.isAggr = desc.isAggr || false;\n        this.displayFormat = desc.dfmt;\n        this.groupFooterColumnTemplate = desc.gfct;\n        this.style = desc.style || {};\n        this.description = desc.description;\n        this.calculatedWidth = 0;\n    }\n}\nclass DataColumnList {\n    constructor() {\n        this.items = [];\n        this.mapper = {};\n        this._dateColumnIdx = [];\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(colOrDesc) {\n        let col;\n        if (colOrDesc instanceof DataColumn) {\n            col = colOrDesc;\n        }\n        else {\n            col = new DataColumn(colOrDesc);\n        }\n        const index = this.items.length;\n        this.items.push(col);\n        this.mapper[col.id] = index;\n        if ([DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0) {\n            this._dateColumnIdx.push(index);\n        }\n        return index;\n    }\n    updateDateColumnIdx() {\n        this._dateColumnIdx = this.getItems()\n            .filter(col => [DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0)\n            .map((col, index) => index);\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.count) {\n            this.items[index] = col;\n            this.updateDateColumnIdx();\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex) {\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n            this.updateDateColumnIdx();\n        }\n    }\n    get(index) {\n        if (index >= 0 && index < this.count) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    getIndex(id) {\n        return this.mapper[id];\n    }\n    getItems() {\n        return this.items;\n    }\n    getDateColumnIndexes() {\n        return this._dateColumnIdx;\n    }\n    removeAt(index) {\n        const col = this.get(index);\n        this.items.splice(index, 1);\n        const removeDate = this._dateColumnIdx.indexOf(index);\n        if (removeDate >= 0) {\n            this._dateColumnIdx.splice(removeDate, 1);\n        }\n        delete this.mapper[col.id];\n    }\n    clear() {\n        this.items = [];\n        this._dateColumnIdx = [];\n        this.mapper = {};\n    }\n}\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\nclass EasyDataTable {\n    constructor(options) {\n        this._chunkSize = 1000;\n        this._elasticChunks = false;\n        this.cachedRows = [];\n        this.total = 0;\n        this.loader = null;\n        this.needTotal = true;\n        this.isInMemory = false;\n        options = options || {};\n        this._chunkSize = options.chunkSize || this._chunkSize;\n        this._elasticChunks = options.elasticChunks || this._elasticChunks;\n        this.loader = options.loader;\n        if (typeof options.inMemory !== 'undefined') {\n            this.isInMemory = options.inMemory;\n        }\n        if (this.isInMemory) {\n            this.needTotal = false;\n        }\n        this._columns = new DataColumnList();\n        this.onUpdate = options.onUpdate;\n        if (options.columns) {\n            for (const colDesc of options.columns) {\n                this._columns.add(colDesc);\n            }\n        }\n        if (options.rows) {\n            for (const rowData of options.rows) {\n                const row = this.createRow(rowData);\n                this.addRow(row);\n            }\n        }\n        this.needTotal = !this._elasticChunks;\n    }\n    get columns() {\n        return this._columns;\n    }\n    get chunkSize() {\n        return this._chunkSize;\n    }\n    set chunkSize(value) {\n        this._chunkSize = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    get elasticChunks() {\n        return this._elasticChunks;\n    }\n    set elasticChunks(value) {\n        this._elasticChunks = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    getRows(params) {\n        let fromIndex = 0, count = this._chunkSize;\n        if (params) {\n            if ('page' in params) {\n                fromIndex = params.pageSize * (params.page - 1);\n                count = params.pageSize;\n            }\n            else {\n                fromIndex = params.offset;\n                count = params.limit;\n            }\n        }\n        let endIndex = fromIndex + count; //the first index of the next page\n        //if we don't calculate total on this request\n        if (!this.needTotal && !this.elasticChunks) {\n            if (fromIndex >= this.total) {\n                return Promise.resolve([]);\n            }\n            if (endIndex > this.total) {\n                endIndex = this.total;\n            }\n        }\n        if (this.isInMemory && endIndex > this.cachedRows.length) {\n            endIndex = this.cachedRows.length;\n        }\n        let allChunksCached = endIndex <= this.cachedRows.length;\n        if (allChunksCached) {\n            return Promise.resolve(this.cachedRows.slice(fromIndex, endIndex));\n        }\n        //if loader is not defined\n        if (!this.loader) {\n            throw `Loader is not defined. Can't get the rows from ${fromIndex} to ${endIndex}`;\n        }\n        // we need total only for the first request\n        const needTotal = this.needTotal;\n        if (this.needTotal) {\n            this.needTotal = false;\n        }\n        let offset = this.cachedRows.length;\n        let limit = endIndex - offset;\n        if (limit < this._chunkSize) {\n            limit = this._chunkSize;\n        }\n        const resultPromise = this.loader.loadChunk({\n            offset: offset,\n            limit: limit,\n            needTotal: needTotal\n        })\n            .then(result => {\n            if (needTotal) {\n                this.total = result.total;\n            }\n            Array.prototype.push.apply(this.cachedRows, result.table.getCachedRows());\n            if (endIndex > this.cachedRows.length) {\n                endIndex = this.cachedRows.length;\n            }\n            if (this.elasticChunks) {\n                const count = result.table.getCachedCount();\n                if (count < limit) {\n                    this.total = this.cachedRows.length;\n                }\n            }\n            this.fireUpdated();\n            return this.cachedRows.slice(fromIndex, endIndex);\n        });\n        return resultPromise;\n    }\n    getRow(index) {\n        return this.getRows({ offset: index, limit: 1 })\n            .then(rows => rows.length > 0 ? rows[0] : null);\n    }\n    getTotal() {\n        return this.total;\n    }\n    setTotal(total) {\n        this.total = total;\n        this.needTotal = false;\n    }\n    getCachedCount() {\n        return this.cachedRows.length;\n    }\n    clear() {\n        this.columns.clear();\n        this.cachedRows = [];\n        this.total = 0;\n        this.needTotal = !this._elasticChunks;\n        this.fireUpdated();\n    }\n    createRow(dataOrRow) {\n        const dateIdx = this._columns.getDateColumnIndexes();\n        const values = new Array(this._columns.count);\n        const getValue = dataOrRow instanceof DataRow\n            ? (colId) => dataOrRow.getValue(colId)\n            : (colId) => dataOrRow[colId];\n        if (dataOrRow) {\n            this.columns.getItems().forEach((column) => {\n                const value = getValue(column.id);\n                const index = this.columns.getIndex(column.id);\n                values[index] = (dateIdx.indexOf(index) >= 0)\n                    ? this.mapDate(value, column.type)\n                    : value;\n            });\n        }\n        return new DataRow(this._columns, values);\n    }\n    mapDate(value, dtype) {\n        if (value) {\n            let result = new Date(value);\n            if (isNaN(result.getTime())\n                && dtype == DataType.Time) {\n                result = utils.strToTime(value);\n            }\n            return result;\n        }\n        return null;\n    }\n    addRow(rowOrValues) {\n        let newRow;\n        if (Array.isArray(rowOrValues)) {\n            let values = rowOrValues;\n            const dateIdx = this._columns.getDateColumnIndexes();\n            if (dateIdx.length > 0) {\n                for (const idx of dateIdx) {\n                    if (values[idx]) {\n                        values[idx] = this.mapDate(values[idx], this._columns.get(idx).type);\n                    }\n                }\n            }\n            newRow = new DataRow(this._columns, values);\n        }\n        else {\n            newRow = this.createRow(rowOrValues);\n        }\n        this.cachedRows.push(newRow);\n        const cachedTotal = this.getCachedCount();\n        if (cachedTotal > this.total) {\n            this.total = cachedTotal;\n        }\n        return newRow;\n    }\n    getCachedRows() {\n        return this.cachedRows;\n    }\n    totalIsKnown() {\n        if (this.elasticChunks) {\n            const count = this.getCachedCount();\n            return count === this.total;\n        }\n        return !this.needTotal;\n    }\n    fireUpdated() {\n        if (this.onUpdate) {\n            this.onUpdate(this);\n        }\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nfunction repeatString(str, times) {\n    return str.repeat(times);\n}\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction strEndsWith(str, symbol) {\n    return str && str.lastIndexOf(symbol) == (str.length - symbol.length);\n}\n/**\n * Adds two paths and returns the result\n * Correctly processes leading and trailing slashes\n * @param path1\n * @param path2\n */\nfunction combinePath(path1, path2) {\n    let result = path1;\n    if (result != null && result.length > 0) {\n        if (result.charAt(result.length - 1) != '/')\n            result += \"/\";\n        result += path2;\n    }\n    else {\n        result = path2;\n    }\n    return result;\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nexport { AggregationSettings, ColumnAlignment, DataColumn, DataColumnList, DataRow, DataType, EasyDataTable, EasyGuid, EditorTag, EntityAttrKind, EventEmitter, HttpClient, HttpMethod, HttpRequest, HttpResponseError, MetaData, MetaEntity, MetaEntityAttr, SpecialDatesResolver, TimeValue, ValueEditor, combinePath, i18n, liquid, registerSpecialDatesResolver, repeatString, reverseString, strEndsWith, utils };\n","\n/*\n * EasyQuery.JS Core v7.3.1\n * Copyright 2024 Korzh.com\n * Licensed under MIT\n *\n * Build time: 3/4/2024 9:09:32 AM\n */\n\nimport { i18n, DataType, utils, ValueEditor, MetaEntity, MetaEntityAttr, EditorTag, MetaData, EventEmitter, AggregationSettings, HttpClient, EasyDataTable } from '@easydata/core';\nexport { i18n } from '@easydata/core';\n\n/**\n * Represents a parser for format expressions in operators\n */\nclass FormatParser {\n    constructor(format) {\n        this.start(format);\n    }\n    /**\n     * Starts parsing of the format string passed in the parameter\n     * @param format\n     */\n    start(format) {\n        this.formatStr = format;\n        this.pos = 0;\n        this.exprNum = 0;\n        this.tokenText = '';\n    }\n    /**\n     * Skips all spcaes till the beginning of next token\n     */\n    skipSpaces() {\n        while (this.pos < this.formatStr.length && this.formatStr.charAt(this.pos) === ' ')\n            this.pos++;\n    }\n    /**\n     * Scans the source and gets the next token\n     */\n    next() {\n        this.skipSpaces();\n        if (this.pos >= this.formatStr.length)\n            return false;\n        var npos = 0;\n        if (this.formatStr.charAt(this.pos) === '{') {\n            npos = this.formatStr.indexOf('}', this.pos);\n            if (npos < 0)\n                return false;\n            this.tokenText = this.formatStr.substring(this.pos, npos + 1);\n            if (this.tokenText.indexOf('{expr') === 0) {\n                this.token = 'expression';\n                this.exprNum = parseInt(this.tokenText.substring(5, this.tokenText.length));\n            }\n            this.pos = npos + 1;\n        }\n        else if (this.formatStr.charAt(this.pos) === '[' && this.pos < this.formatStr.length - 1 && this.formatStr.charAt(this.pos + 1) === '[') {\n            this.pos += 2;\n            npos = this.formatStr.indexOf(']]', this.pos);\n            this.token = 'operator';\n            this.tokenText = this.formatStr.substring(this.pos, npos);\n            this.pos = npos + 2;\n        }\n        else {\n            this.token = 'text';\n            var npos1 = this.formatStr.indexOf('{', this.pos);\n            if (npos1 < 0)\n                npos1 = this.formatStr.length;\n            var npos2 = this.formatStr.indexOf('[[', this.pos);\n            if (npos2 < 0)\n                npos2 = this.formatStr.length;\n            npos = Math.min(npos1, npos2);\n            this.tokenText = this.formatStr.substring(this.pos, npos).trim();\n            this.pos = npos;\n        }\n        return true;\n    }\n    /**\n     * Returns current token\n     */\n    getToken() {\n        return {\n            type: this.token,\n            text: this.tokenText,\n            index: this.exprNum - 1\n        };\n    }\n    /**\n     * Parses all source string passed in constructor and returns the list of tokens\n     */\n    parse() {\n        let result = [];\n        while (this.next()) {\n            result.push(this.getToken());\n        }\n        return result;\n    }\n}\n\n/** Represents type of linking of conditions in group (predicate).*/\nvar LinkType;\n(function (LinkType) {\n    /**\n     * None of the conditions must be truth (all must be false).\n     * In SQL it will look like: `NOT (Condition1 OR Condition2 OR ...)`.\n     */\n    LinkType[LinkType[\"None\"] = 0] = \"None\";\n    /** At least one condition must be truth. In SQL they are connected by `OR` operator.*/\n    LinkType[LinkType[\"Any\"] = 1] = \"Any\";\n    /**\n     * Not all conditions must be truth (at least one must false).\n     * In SQL it will look like: `NOT(Condition1 AND Condition2 AND ...)`.\n     */\n    LinkType[LinkType[\"NotAll\"] = 2] = \"NotAll\";\n    /** All conditions must be truth, in result SQL they are connected by `AND` operator;*/\n    LinkType[LinkType[\"All\"] = 3] = \"All\";\n})(LinkType || (LinkType = {}));\n\nvar equtils;\n(function (equtils) {\n    /**\n     * Adds two paths and returns the result\n     * Correctly processes leading and trailing slashes\n     * @param path1\n     * @param path2\n     */\n    function combinePath(path1, path2) {\n        let result = path1;\n        if (result != null && result.length > 0) {\n            if (result.charAt(result.length - 1) != '/')\n                result += \"/\";\n            result += path2;\n        }\n        else {\n            result = path2;\n        }\n        return result;\n    }\n    equtils.combinePath = combinePath;\n    /**\n     * Converts a string to a `LinkType` value\n     * @param str\n     */\n    function strToLinkType(str) {\n        if (str == \"All\") {\n            return LinkType.All;\n        }\n        else if (str == \"NotAll\") {\n            return LinkType.NotAll;\n        }\n        else if (str == \"Any\") {\n            return LinkType.Any;\n        }\n        else {\n            return LinkType.None;\n        }\n    }\n    equtils.strToLinkType = strToLinkType;\n    /**\n     * Converts a `LinkType` value to a string\n     * @param type\n     */\n    function linkTypeToStr(type) {\n        if (type === LinkType.All) {\n            return \"All\";\n        }\n        else if (type === LinkType.NotAll) {\n            return \"NotAll\";\n        }\n        else if (type == LinkType.Any) {\n            return \"Any\";\n        }\n        else {\n            return \"None\";\n        }\n    }\n    equtils.linkTypeToStr = linkTypeToStr;\n    /**\n     * Parses the operator's format string and returns a list of tokens\n     * @param operator\n     */\n    function parseOperatorFormat(operator) {\n        let format = i18n.getText('Operators', operator.id, 'format');\n        if (!format) {\n            format = i18n.getText('Operators', operator.id, 'displayFormat');\n        }\n        if (!format) {\n            format = operator.displayFormat;\n        }\n        const parser = new FormatParser(format);\n        return parser.parse();\n    }\n    equtils.parseOperatorFormat = parseOperatorFormat;\n    //----------- value converstion utils --------------\n    /**\n     * Converts a value from one DataType to another\n     * @param value\n     * @param fromDataType - the original data type\n     * @param toDataType - the data type we want to get\n     */\n    function convertValue(value, fromDataType, toDataType) {\n        switch (toDataType) {\n            case DataType.String:\n                return value;\n            case DataType.Autoinc, DataType.Byte, DataType.Int32, DataType.Int64, DataType.Word:\n                let resInt = parseInt(value);\n                return isNaN(resInt) ? '' : resInt.toString();\n            case DataType.Currency, DataType.Float:\n                let resFloat = parseFloat(value);\n                return isNaN(resFloat) ? '' : resFloat.toString();\n            default:\n                return '';\n        }\n    }\n    equtils.convertValue = convertValue;\n})(equtils || (equtils = {}));\n\n/**\n * Represents an aggregate function\n */\nclass AggrFunction {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.caption = \"\";\n        this.sqlExpr = \"\";\n        this.displayFormat = \"\";\n        this.appliedTypes = [];\n    }\n    /**\n     * Loads an aggregate function from its JSON representation object\n     * @param aggrFunction The JSON representation object\n     */\n    loadFromData(aggrFunction) {\n        if (aggrFunction) {\n            this.id = aggrFunction.id;\n            this.caption = aggrFunction.cptn;\n            this.displayFormat = aggrFunction.fmt;\n            this.sqlExpr = aggrFunction.expr;\n            this.appliedTypes = aggrFunction.dtypes || this.appliedTypes;\n        }\n    }\n    getAppliedTypesOrDefault() {\n        if (this.appliedTypes.length > 0)\n            return this.appliedTypes;\n        if (this.id === 'SUM' || this.id === 'AVG') {\n            return [DataType.Autoinc, DataType.Byte, DataType.Currency, DataType.Float, DataType.Int32,\n                DataType.Int64, DataType.Word];\n        }\n        else if (this.id === 'MIN' || this.id === 'MAX') {\n            return [DataType.Autoinc, DataType.BCD, DataType.Byte, DataType.Currency, DataType.Date, DataType.DateTime, DataType.Time,\n                DataType.Float, DataType.Int32, DataType.Int64, DataType.Word];\n        }\n        return utils.getAllDataTypes();\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass EqValueEditor extends ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        super();\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            if (data.sql) {\n                this.statement = data.sql;\n            }\n            if (data.extraParams) {\n                this.extraParams = data.extraParams;\n            }\n        }\n    }\n}\n\n/** Represents expression kinds.*/\nvar DataKind;\n(function (DataKind) {\n    /** Represents one value of some type: one constant or one attribute (field).*/\n    DataKind[DataKind[\"Scalar\"] = 0] = \"Scalar\";\n    /** The same as Scalar but represents only one constant value of some type.*/\n    DataKind[DataKind[\"Const\"] = 1] = \"Const\";\n    /** The same as Scalar but represents only one attribute.*/\n    DataKind[DataKind[\"Attribute\"] = 2] = \"Attribute\";\n    /** Represents a list of scalar values. */\n    DataKind[DataKind[\"List\"] = 4] = \"List\";\n    /** Special expression kind which represents a sub query.*/\n    DataKind[DataKind[\"Query\"] = 5] = \"Query\";\n    /** Special expression kind which represents a binding to parent column.*/\n    DataKind[DataKind[\"ParentColumn\"] = 6] = \"ParentColumn\";\n})(DataKind || (DataKind = {}));\n\n/**\n * Represents a logical expression or predicate, like comparisions or `LIKE` predicate.\n */\nclass Operator {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.expr = \"\";\n        this.constValueFormat = \"{const}\";\n        this.caption = \"{Unrecognized operator}\";\n        this.displayFormat = \"{expr1} [[{unrecognized operator}]] {expr2}\";\n        this.isRange = false;\n        this.caseIns = false;\n        this.paramCount = 2;\n        this.defaultOperand = new Operand();\n        this.appliedTypes = [];\n        this.operands = new Array();\n    }\n    /**\n    * Loads operator from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        if (data) {\n            this.id = data.id;\n            this.caption = data.cptn;\n            this.caseIns = data.caseIns;\n            this.isRange = data.isRange;\n            this.displayFormat = data.fmt;\n            this.paramCount = data.pcnt;\n            this.expr = data.expr;\n            this.appliedTypes = data.dtypes || this.appliedTypes;\n            if (data.defOperand) {\n                this.defaultOperand.loadFromData(model, data.defOperand);\n            }\n            if (data.editor) {\n                this.defaultOperand.editor = model.getEditorById(data.editor) || new EqValueEditor();\n            }\n            if (data.operands) {\n                for (let i = 0; i < data.operands.length; i++) {\n                    let newOperand = new Operand();\n                    newOperand.loadFromData(model, data.operands[i]);\n                    if (data.editor) {\n                        newOperand.editor = model.getEditorById(data.editor) || new EqValueEditor();\n                    }\n                    this.operands.push(newOperand);\n                }\n            }\n        }\n    }\n}\n/**\n * Represents one operand in some operator's expression\n */\nclass Operand {\n    /** The default constructor. */\n    constructor() {\n        this.kind = DataKind.Scalar;\n        this.dataType = DataType.Unknown;\n        this.editor = new EqValueEditor();\n        this.defValue = \"\";\n    }\n    /**\n     * Loads operand from its JSON representation object.\n     * @param model The Data Model.\n     * @param operand A plain JS object that represents the operand.\n     */\n    loadFromData(model, operand) {\n        this.kind = operand.kind;\n        this.dataType = operand.dtype;\n        this.defValue = operand.val;\n        this.defText = operand.txt;\n        if (operand.editor) {\n            this.editor = model.getEditorById(operand.editor) || new EqValueEditor();\n        }\n    }\n    /**\n     * Copies operand from other operand.\n     * @param src The source operand.\n     */\n    copyFrom(src) {\n        utils.assign(this, src);\n    }\n}\n\n/**\n * Represents one entity.\n */\nclass Entity extends MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        super(parent);\n        this.useInConditions = false;\n        this.useInResult = false;\n        this.useInSorting = false;\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (data) {\n            this.useInConditions = data.uic;\n            this.useInResult = data.uir;\n            this.useInSorting = data.uis;\n        }\n    }\n    scan(processAttribute, processEntity) {\n        super.scan((attr, opts) => processAttribute && processAttribute(attr, opts), (entity, opts) => processEntity && processEntity(entity, opts));\n    }\n}\n/**\n * Represents entity attribute.\n */\nclass EntityAttr extends MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        super(entity);\n        /**\n         * The parameters associated with this entity attribute\n         */\n        this.params = [];\n        this.useInConditions = true;\n        this.useInResult = true;\n        this.useInSorting = true;\n        this.defaultOperator = \"\";\n        this.operators = new Array();\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param data The JSON representation object.\n     */\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (data) {\n            this.useInConditions = data.uic;\n            this.useInResult = data.uir;\n            this.useInSorting = data.uis;\n            this.expr = data.sql;\n            this.defaultOperator = data.defOperator;\n            this.operators = data.ops;\n            if (data.udata)\n                this.userData = data.udata;\n        }\n    }\n}\n\n/** Represents editor tags*/\nconst EqEditorTag = Object.assign(Object.assign({}, EditorTag), { \n    /** SqlList tag value */\n    SqlList: \"SQLLIST\", \n    /** SubQuery tag value */\n    SubQuery: \"SUBQUERY\", \n    /** Bind to parent column tag value */\n    BindToParentColumn: \"BINDTOPARENTCOLUMN\" });\n\n/**\n * Represents a data model\n */\nclass DataModel extends MetaData {\n    /** The default constructor. */\n    constructor() {\n        super();\n        this.mainEntity = null;\n        this.nullAttribute = new EntityAttr(null);\n        this.nullOperator = new Operator();\n        this.operators = new Array();\n        this.rootEntity = new Entity();\n        this.aggrFunctions = new Array();\n        this.dateMacros = ['Today', 'Yesterday',\n            'Tomorrow', 'FirstDayOfMonth', 'LastDayOfMonth',\n            'FirstDayOfWeek', 'FirstDayOfYear', 'FirstDayOfNextWeek', 'FirstDayOfPrevMonth',\n            'FirstDayOfNextMonth', 'FirstDayOfNextYear', 'FirstDayOfPrevYear', 'FirstDayOfPrevWeek'];\n        this.timeMacros = ['Now', 'HourStart', 'Midnight', 'Noon'];\n        this.links = [];\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        super.loadFromData(data);\n        //Operators\n        this.operators = new Array();\n        if (data.operators) {\n            for (let i = 0; i < data.operators.length; i++) {\n                let newOperator = new Operator();\n                newOperator.loadFromData(this, data.operators[i]);\n                this.operators.push(newOperator);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //Aggr Functions\n        this.aggrFunctions = new Array();\n        if (data.aggrfuncs) {\n            for (let i = 0; i < data.aggrfuncs.length; i++) {\n                let newAggrFunc = new AggrFunction();\n                newAggrFunc.loadFromData(data.aggrfuncs[i]);\n                this.aggrFunctions.push(newAggrFunc);\n            }\n        }\n    }\n    /**\n     * Gets the data model object.\n     * @returns Tha data model.\n     */\n    getObject() {\n        return this;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Creates entity.\n     * @param parent The parent entity.\n     * @returns The Entity.\n     */\n    createEntity(parent) {\n        return new Entity(parent);\n    }\n    /**\n     * Creates entity attribute.\n     * @param parent The parent entity.\n     * @returns The entity attribute.\n     */\n    createEntityAttr(parent) {\n        return new EntityAttr(parent);\n    }\n    /**\n     * Creates new EqValueEditor\n     * @returns An instance of EqValueEditor class\n     */\n    createValueEditor() {\n        return new EqValueEditor();\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        return super.getEditorById(editorId);\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n    * Gets entity attribute by its ID.\n    * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n    * @param attrId The attribute ID.\n    * @returns The attribute or `nullAttribute`.\n    */\n    getAttributeByIdSafe(attrId) {\n        const attr = this.getAttributeById(attrId);\n        if (!attr)\n            return this.nullAttribute;\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        return super.getEntityAttrById(entity, attrId);\n    }\n    _listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(new Entity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this._listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(new Entity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    _listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    if (opts.addUIC !== false && ent.useInConditions !== false ||\n                        opts.addUIR !== false && ent.useInResult !== false ||\n                        opts.addUIS !== false && ent.useInSorting !== false) {\n                        caption = i18n.getText('Entities', ent.name) || ent.caption;\n                        let newEnt = utils.assign(new Entity(), {\n                            id: ent.name,\n                            text: caption,\n                            items: [],\n                            isEntity: true,\n                            description: ent.description\n                        });\n                        let newOpts = utils.assign({}, opts);\n                        newOpts.includeRootData = false;\n                        newEnt.items = this._listByEntity(ent, newOpts, filterFunc);\n                        if (newEnt.items.length > 0) {\n                            resultEntities.push(newEnt);\n                        }\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    if (opts.addUIC !== false && attr.useInConditions !== false ||\n                        opts.addUIR !== false && attr.useInResult !== false ||\n                        opts.addUIS !== false && attr.useInSorting !== false) {\n                        caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                        resultAttributes.push(utils.assign(new EntityAttr(entity), { id: attr.id, text: caption, dataType: attr.dataType, lookupAttr: attr.lookupAttr, description: attr.description }));\n                    }\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        super.clear();\n        this.operators = [];\n        this.aggrFunctions = [];\n    }\n    /**\n     * Add or update an operator.\n     * @param desc The operator descriptor.\n     * @returns The operator.\n     */\n    addOrUpdateOperator(desc) {\n        let op = utils.findItemById(this.operators, desc.id);\n        if (!op) {\n            op = new Operator();\n            op.id = desc.id;\n            this.operators.push(op);\n        }\n        op.caption = desc.caption;\n        op.expr = desc.expr || '';\n        op.displayFormat = desc.format;\n        op.defaultOperand = new Operand();\n        op.defaultOperand.kind = desc.kind || DataKind.Scalar;\n        if (desc.appliedTypes)\n            op.appliedTypes = desc.appliedTypes;\n        if (desc.paramCount > 0) {\n            op.paramCount = desc.paramCount;\n        }\n        this.runThroughEntities((attr, opts) => {\n            if (attr.operators.indexOf(op.id) < 0 && op.appliedTypes.indexOf(attr.dataType) >= 0) {\n                attr.operators.push(op.id);\n            }\n        });\n        return op;\n    }\n    /**\n     * Removes an operator.\n     * @param id The id.\n     * @param soft If `false` - removes operators from model and attributes. Otherwise only\n     * from attributes.\n     */\n    removeOperator(id, soft = false) {\n        let op = utils.findItemById(this.operators, id);\n        if (op) {\n            if (!soft)\n                utils.removeArrayItem(this.operators, op);\n            this.runThroughEntities((attr, opts) => {\n                utils.removeArrayItem(attr.operators, op.id);\n            });\n        }\n    }\n    /**\n     * Get operators for data type.\n     * @param type The data type\n     * @return The array of operator ids.\n     */\n    getOperatorIdsByDataType(type) {\n        switch (type) {\n            case DataType.String:\n            case DataType.Memo:\n                return 'StartsWith,EndsWith,Contains,Equal,InList,NotStartsWith,NotEndsWith,NotContains,NotEqual,NotInList,IsNull,IsNotNull'.split(',');\n            case DataType.Guid:\n                return 'Equal,NotEqual'.split(',');\n            case DataType.Date:\n            case DataType.DateTime:\n                return 'DateWithinToday,DateWithinThisWeek,DateWithinPrevWeek,DateWithinThisMonth,DateWithinPrevMonth,DateWithinThisYear,DateWithinPrevYear,DateBeforePrecise,DateAfterPrecise,DatePeriodPrecise,IsNull,IsNotNull'.split(',');\n            case DataType.Time:\n                return 'TimeBeforePrecise,TimeAfterPrecise,TimePeriodPrecise,IsNull,IsNotNull'.split(',');\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Int32:\n            case DataType.Int64:\n            case DataType.Float:\n            case DataType.Currency:\n            case DataType.BCD:\n            case DataType.Autoinc:\n            case DataType.Unknown:\n                return 'Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,InList,NotEqual,NotBetween,NotInList,IsNull,IsNotNull'.split(',');\n            case DataType.Bool:\n                return 'IsTrue,NotTrue'.split(',');\n            default:\n                const result = [];\n                for (let op of this.operators)\n                    if (op.appliedTypes.indexOf(type) >= 0)\n                        result.push(op.id);\n                return result;\n        }\n    }\n    findAggrFunctionById(funcId) {\n        for (const func of this.aggrFunctions) {\n            if (func.id === funcId)\n                return func;\n        }\n        return null;\n    }\n    /**\n     * Finds link between two entities.\n     * @param entityFrom The entity `from`.\n     * @param entityTo The entity `to`.\n     * @return The link.\n     */\n    findLink(entityFrom, entityTo) {\n        for (let link of this.links) {\n            if (link.entityFrom == entityFrom\n                && link.entityTo == entityTo)\n                return link;\n        }\n        return null;\n    }\n    /**\n     * Get links with the entity.\n     * @param entity The entity.\n     * @return The link.\n     */\n    getLinksByEntity(entity) {\n        const result = [];\n        for (let link of this.links) {\n            if (link.entityFrom == entity || link.entityTo == entity) {\n                result.push(link);\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this._listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this._listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        return super.getEntityPathByAttr(entity, attrId, sep, root);\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        return super.getAttributeText(attr, format);\n    }\n    getFirstUICAttr() {\n        return this.getFirstUICAttrInEntity(this.getRootEntity());\n    }\n    /**\n     * Gets first `UIC` attribute in specified entity\n     * (`UIC` stands for `use in conditions` - so such attribute can be used in conditions)\n     * @param entity Entity object to search our attribute in.\n     * @returns The entity attribute or `null`\n     */\n    getFirstUICAttrInEntity(entity) {\n        if (entity.useInConditions !== false) {\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; i < attrCount; i++) {\n                    if (entity.attributes[i].useInConditions) {\n                        return entity.attributes[i];\n                    }\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; i < subEntityCount; i++) {\n                    let result = this.getFirstUICAttrInEntity(entity.subEntities[i]);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n    /**\n     * Finds operator in model by its ID.\n     * This function runs through all operators inside specified model and returns the one with specified ID.\n     * @param operatorId An operator ID.\n     * @returns The operator or `null`.\n     */\n    findOperatorById(operatorId) {\n        if (this.operators.length > 0) {\n            let opCount = this.operators.length;\n            for (let idx = 0; idx < opCount; idx++) {\n                if (this.operators[idx].id == operatorId) {\n                    return this.operators[idx];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Finds operator in model by its ID.\n     * his function runs through all operators inside specified model and returns the one with specified ID.\n     * @param operatorId Operator ID.\n     * @returns The operator or special `NullOperator` object if operator is not found.\n     */\n    getOperatorById(operatorId) {\n        let op = this.findOperatorById(operatorId);\n        if (!op)\n            return this.nullOperator;\n        return op;\n    }\n    getDefaultOperatorIdForAttr(attr) {\n        if (attr.defaultOperator) {\n            return attr.defaultOperator;\n        }\n        else if (attr.operators.length > 0) {\n            return attr.operators[0];\n        }\n        else {\n            return this.nullOperator.id;\n        }\n    }\n    /**\n     * Gets caption of the aggregate function.\n     * @param funcId The function id.\n     * @returns The caption.\n     */\n    getAggrFunctionCaption(funcId) {\n        let funcTexts = i18n.getText('AggregateFunctions', funcId);\n        let funcCaption = funcTexts ? funcTexts.caption : i18n.getText('Aggr' + funcId.replace(' ', '') + '_Caption');\n        if (funcCaption) {\n            return funcCaption;\n        }\n        let func = utils.findItemById(this.aggrFunctions, funcId);\n        if (!func || !func.caption)\n            return funcId;\n        return func.caption;\n    }\n    /**\n     * Gets format of the aggregate function.\n     * @param funcId The function id.\n     * @returns The caption.\n     */\n    getAggrFunctionFormat(funcId) {\n        let funcTexts = i18n.getText('AggregateFunctions', funcId);\n        let funcFormat = funcTexts ? funcTexts.displayFormat : i18n.getText('Aggr' + funcId.replace(' ', '') + '_Format');\n        if (funcFormat) {\n            return funcFormat;\n        }\n        let func = utils.findItemById(this.aggrFunctions, funcId);\n        if (!func || !func.displayFormat)\n            return '';\n        return func.displayFormat;\n    }\n    /**\n     * Gets default operator for an attribute.\n     * @param attr The attribute.\n     * @returns The operator.\n     */\n    getDefaultOperatorForAttr(attr) {\n        let operatorId = this.getDefaultOperatorIdForAttr(attr);\n        return this.getOperatorById(operatorId);\n    }\n    /**\n     * Gets operand.\n     * @param attr The attribute.\n     * @param operator The operator.\n     * @param index The index.\n     * @returns The operand.\n     */\n    getOperand(attr, operator, index) {\n        let defOperand = new Operand();\n        if (operator && operator.defaultOperand) {\n            defOperand.copyFrom(operator.defaultOperand);\n            if (!defOperand.defValue) {\n                defOperand.defValue = '';\n            }\n            if (!defOperand.defText) {\n                defOperand.defText = '';\n            }\n        }\n        else {\n            defOperand.kind = DataKind.Scalar;\n            defOperand.dataType = attr.dataType;\n            defOperand.defValue = '';\n            defOperand.defText = '';\n            defOperand.editor = null;\n        }\n        let result = defOperand;\n        if (result.dataType === DataType.Unknown && attr) {\n            result.dataType = attr.dataType;\n        }\n        if (operator && (index >= 0)) {\n            if (operator.operands && operator.operands[index - 1]) {\n                result = utils.assign(result, operator.operands[index - 1]);\n            }\n        }\n        if (!result.editor) {\n            if (defOperand.editor) {\n                result.editor = defOperand.editor;\n            }\n            else if (defOperand.kind === DataKind.Query) {\n                result.editor.tag = EqEditorTag.SubQuery;\n            }\n            else if (attr && attr.defaultEditor) {\n                result.editor = attr.defaultEditor;\n            }\n            else if (result.dataType === DataType.Date || result.dataType === DataType.DateTime\n                || result.dataType === DataType.Time) {\n                result.editor.tag = EqEditorTag.DateTime;\n            }\n            else {\n                result.editor.tag = EqEditorTag.Edit;\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets the list of aggegate functions.\n     * @returns AN array of aggregate functions.\n     */\n    getAggrFunctions() {\n        return this.aggrFunctions;\n    }\n    /**\n     * Checks wether macro value is date.\n     * @param macroExpr The macro value.\n     * @retruns `true` if the macro value is date, otherwise `false`.\n     */\n    isDateMacro(macroExpr, macroProcessor) {\n        const match = macroExpr.match(/\\${{?(.*?)}?}/);\n        if (match != null) {\n            const macroId = match[1];\n            if (utils.indexOfArrayItem(this.dateMacros, macroId) >= 0) {\n                if (macroProcessor) {\n                    macroProcessor(macroId);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks whether the expression passed in the parameter is an time macro.\n     * @param macroExpr The macro expression\n     * @retruns `true` if the expression is a time macro (like Now), otherwise `false`.\n     */\n    isTimeMacro(macroExpr, macroProcessor) {\n        const match = macroExpr.match(/\\${{?(.*?)}?}/);\n        if (match != null) {\n            const macroId = match[1];\n            if (utils.indexOfArrayItem(this.timeMacros, macroId) >= 0) {\n                if (macroProcessor) {\n                    macroProcessor(macroId);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Gets date by its macro value.\n     * @param macroExpr The macro value.\n     * @returns The date or `null`\n     */\n    getDateMacroValue(macroExpr) {\n        let d = new Date();\n        const res = this.isDateMacro(macroExpr, macroId => {\n            switch (macroId) {\n                case 'Today':\n                    break;\n                case 'Yesterday':\n                    d.setDate(d.getDate() - 1);\n                    break;\n                case 'Tomorrow':\n                    d.setDate(d.getDate() + 1);\n                    break;\n                case 'FirstDayOfMonth':\n                    d.setDate(1);\n                    break;\n                case 'LastDayOfMonth':\n                    d.setMonth(d.getMonth() + 1, 0);\n                    break;\n                case 'FirstDayOfPrevWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() - day);\n                    break;\n                case 'FirstDayOfWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() - day);\n                    break;\n                case 'FirstDayOfYear':\n                    d.setMonth(0, 1);\n                    break;\n                case 'FirstDayOfNextWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() + day);\n                    break;\n                case 'FirstDayOfNextMonth':\n                    d.setMonth(d.getMonth() + 1, 1);\n                    break;\n                case 'FirstDayOfPrevMonth':\n                    d.setMonth(d.getMonth() - 1, 1);\n                    break;\n                case 'FirstDayOfPrevYear':\n                    d.setFullYear(d.getFullYear() - 1, 0, 1);\n                    break;\n                case 'FirstDayOfNextYear':\n                    d.setFullYear(d.getFullYear() + 1, 0, 1);\n                    break;\n            }\n        });\n        return res ? d : null;\n    }\n    /**\n    * Gets the date value by a macro expression of the expression itself.\n    * @param macroExpr The macro value.\n    * @returns The date or macro valu.\n    */\n    getDateOrMacroValue(macroExpr) {\n        let d = this.getDateMacroValue(macroExpr);\n        return d ? d : macroExpr;\n    }\n    /**\n    * Gets time by its macro value.\n    * @param macroExpr The macro value.\n    * @returns The date or `null`.\n    */\n    getTimeMacroValue(macroExpr) {\n        let d = new Date();\n        const res = this.isDateMacro(macroExpr, macroId => {\n            switch (macroId) {\n                case 'Now':\n                    break;\n                case 'HourStart':\n                    d.setMinutes(0, 0, 0);\n                    break;\n                case 'Midnight':\n                    d.setHours(0, 0, 0, 0);\n                    break;\n                case 'Noon':\n                    d.setHours(12, 0, 0, 0);\n                    break;\n            }\n        });\n        return res ? d : null;\n    }\n    /**\n     * Gets a time value by macor or the macro itself.\n     * @param time The macro or time value.\n     * @returns The time value or a macro that represents a particular time.\n     */\n    getTimeOrMacroValue(time) {\n        var t = this.getTimeMacroValue(time);\n        return t ? t : time;\n    }\n    // /**\n    //  * Gets all date marcos.\n    //  * @returns The array of marcos\n    //  */\n    getAllDateMacros() {\n        return this.dateMacros;\n    }\n    /**\n     * Gets all time marcos.\n     * @returns The array of marcos\n     */\n    getAllTimeMacros() {\n        return this.timeMacros;\n    }\n}\n\n/** Contains several constant definitions for expressions tag */\nvar ExprTag;\n(function (ExprTag) {\n    /** Unknown expression */\n    ExprTag[ExprTag[\"Unknown\"] = 0] = \"Unknown\";\n    /** Constant expression */\n    ExprTag[ExprTag[\"Constant\"] = 1] = \"Constant\";\n    /** Entity attributre expression */\n    ExprTag[ExprTag[\"EntityAttribute\"] = 2] = \"EntityAttribute\";\n    /** Parent entity attribute expression */\n    ExprTag[ExprTag[\"ParentEntityAttribute\"] = 3] = \"ParentEntityAttribute\";\n    /** Agrregate function expression */\n    ExprTag[ExprTag[\"AggregateFunction\"] = 4] = \"AggregateFunction\";\n    /** Parent column expression */\n    ExprTag[ExprTag[\"ParentColumn\"] = 5] = \"ParentColumn\";\n    /** Query expression */\n    ExprTag[ExprTag[\"Query\"] = 11] = \"Query\";\n    /** Custom sql expression */\n    ExprTag[ExprTag[\"CustomSql\"] = 21] = \"CustomSql\";\n})(ExprTag || (ExprTag = {}));\n\n/**\n * Represents expression object.\n */\nclass Expression {\n    /** The default constructor. */\n    constructor(parent) {\n        this.parent = parent;\n        /** The tag. */\n        this.tag = ExprTag.Constant;\n        /** The data kind. */\n        this.kind = DataKind.Scalar;\n        /** The data type. */\n        this.dataType = DataType.Unknown;\n        /** The value. */\n        this._value = ''; //DO NOT forget remove any\n        /**\n         * The distinct option. (e.g `SELECT DISTINCT`)\n         */\n        this.distinct = false;\n        this._isDefaultValue = false;\n        this.getText = () => this.text || this._value;\n        this.args = new Array();\n    }\n    getParent() {\n        return this.parent;\n    }\n    getModel() {\n        return this.parent.getQuery().getModel();\n    }\n    /**\n     * Loads expression from its JSON representation object.\n     * @param model The Data Model.\n     * @param data The JSON representation object.\n     */\n    loadFromData(model, data) {\n        if (data) {\n            this.tag = data.tag;\n            if (data.val) {\n                this._value = data.val;\n                this.text = data.txt;\n            }\n            else if (data.id) {\n                this.kind = DataKind.Attribute;\n                this._value = data.id;\n                this.text = data.txt;\n            }\n            if (typeof data.dtype !== 'undefined') {\n                this.dataType = data.dtype;\n            }\n            if (this.tag == ExprTag.EntityAttribute\n                || this.tag == ExprTag.ParentEntityAttribute) {\n                this.kind = DataKind.Attribute;\n                //We don't load other info for EntityAttr\n            }\n            else {\n                if (typeof data.kind !== 'undefined') {\n                    this.kind = data.kind;\n                }\n                if (data.query) {\n                    this.subQuery = this.parent.getQuery().createSubQuery();\n                    this.subQuery.loadFromDataOrJson(data.query);\n                }\n                if (typeof data.distinct !== 'undefined') {\n                    this.distinct = data.distinct;\n                }\n                if (data.func) {\n                    this.func = data.func;\n                    if (data.args) {\n                        for (let i = 0; i < data.args.length; i++) {\n                            const arg = new Expression(this.parent);\n                            arg.loadFromData(model, data.args[i]);\n                            this.args.push(arg);\n                        }\n                    }\n                }\n                if (data.sql) {\n                    this.sql = data.sql;\n                    this.baseAttrId = data.baseAttrId;\n                }\n            }\n        }\n    }\n    /**\n    * Saves expression from JSON representation object.\n    * @returns The JSON representation object.\n    */\n    saveToData() {\n        let obj = {\n            tag: this.tag\n        };\n        obj.dtype = this.dataType;\n        //Do not save other info for EntityAttr\n        if (this.tag == ExprTag.EntityAttribute || this.tag == ExprTag.ParentEntityAttribute) {\n            if (this._value) {\n                obj.id = this._value;\n                obj.val = this._value;\n            }\n            if (this.text) {\n                obj.txt = this.text;\n            }\n            //Do not save other info for EntityAttr\n        }\n        else {\n            if (this.subQuery) {\n                obj.query = this.subQuery.toJSONData();\n            }\n            if (typeof this.kind !== \"undefined\") {\n                obj.kind = this.kind;\n            }\n            if (this._value) {\n                obj.val = this._value;\n            }\n            if (this.text) {\n                obj.txt = this.text;\n            }\n            if (this.distinct) {\n                obj.distinct = this.distinct;\n            }\n            if (this.func) {\n                obj.func = this.func;\n                obj.args = [];\n                for (let i = 0; i < this.args.length; i++) {\n                    obj.args.push(this.args[i].saveToData());\n                }\n            }\n            if (this.sql) {\n                obj.sql = this.sql;\n                obj.baseAttrId = this.baseAttrId;\n            }\n        }\n        return obj;\n    }\n    getIndex() {\n        return this.parent.getExpressionIndex(this);\n    }\n    get value() {\n        return this._value;\n    }\n    setValue(val, silent = false) {\n        this.setContent(val, undefined, silent);\n    }\n    setContent(val, txt, silent = false) {\n        let oldValue = this.value;\n        if (this.kind == DataKind.Attribute && val) {\n            const attr = this.getModel().getAttributeById(val);\n            if (!attr) {\n                throw \"No such entity attribute:\" + val;\n            }\n            this.dataType = attr.dataType;\n        }\n        this._value = val;\n        if (typeof txt !== 'undefined') {\n            this.text = txt;\n        }\n        else if (typeof this.text !== 'undefined') {\n            this.text = val;\n        }\n        this._isDefaultValue = false;\n        if (!silent) {\n            this.parent.expressionChanged(this, oldValue);\n        }\n    }\n    isEmpty() {\n        return !(this.text || this._value);\n    }\n    hasText() {\n        return this.text && this.text.length > 0;\n    }\n    tryCopyValueFrom(expr) {\n        if (this.kind == expr.kind) {\n            if (this.dataType == expr.dataType) {\n                this.setContent(expr.value.length ? expr.value : this._value, (expr.text && expr.text.length) ? expr.text : this.text, true);\n            }\n            else {\n                const val = equtils.convertValue(expr.value, expr.dataType, this.dataType);\n                this.setContent(val.length ? val : this._value, (expr.text && expr.text.length) ? expr.text : this.text, true);\n            }\n            this.subQuery = expr.subQuery;\n            this.sql = expr.sql;\n            this.baseAttrId = expr.baseAttrId;\n        }\n        else if (!this._isDefaultValue) {\n            this.setContent('', '', true);\n            this.subQuery = null;\n            this.sql = null;\n            this.baseAttrId = null;\n        }\n    }\n}\n\nvar QueryChangePart;\n(function (QueryChangePart) {\n    QueryChangePart[QueryChangePart[\"Conditions\"] = 1] = \"Conditions\";\n    QueryChangePart[QueryChangePart[\"Columns\"] = 2] = \"Columns\";\n    QueryChangePart[QueryChangePart[\"SortingColumns\"] = 4] = \"SortingColumns\";\n    QueryChangePart[QueryChangePart[\"Properties\"] = 32] = \"Properties\";\n    QueryChangePart[QueryChangePart[\"ExtraData\"] = 64] = \"ExtraData\";\n    QueryChangePart[QueryChangePart[\"Facets\"] = 128] = \"Facets\";\n    QueryChangePart[QueryChangePart[\"Aggregation\"] = 256] = \"Aggregation\";\n    QueryChangePart[QueryChangePart[\"All\"] = 511] = \"All\";\n})(QueryChangePart || (QueryChangePart = {}));\nvar QueryChangeAction;\n(function (QueryChangeAction) {\n    QueryChangeAction[QueryChangeAction[\"Add\"] = 1] = \"Add\";\n    QueryChangeAction[QueryChangeAction[\"Modify\"] = 2] = \"Modify\";\n    QueryChangeAction[QueryChangeAction[\"Delete\"] = 4] = \"Delete\";\n    QueryChangeAction[QueryChangeAction[\"Activate\"] = 8] = \"Activate\";\n    QueryChangeAction[QueryChangeAction[\"All\"] = 127] = \"All\";\n})(QueryChangeAction || (QueryChangeAction = {}));\n\n/** Represents sorting direction. */\nvar SortDirection;\n(function (SortDirection) {\n    /** No sorting. */\n    SortDirection[SortDirection[\"None\"] = 0] = \"None\";\n    /** Ascending order. */\n    SortDirection[SortDirection[\"Ascending\"] = 1] = \"Ascending\";\n    /** Descending order. */\n    SortDirection[SortDirection[\"Descending\"] = 2] = \"Descending\";\n})(SortDirection || (SortDirection = {}));\n/**\n * Represents some column which will be queried\n */\nclass QueryColumn {\n    get id() {\n        return this._id;\n    }\n    /** Column sorting direction */\n    get sorting() {\n        if (this.query) {\n            return this.query.getColumnSorting(this);\n        }\n        else {\n            return this._sorting;\n        }\n    }\n    ;\n    set sorting(direction) {\n        if (this.query) {\n            this.query.setColumnSorting(this, direction);\n        }\n        else {\n            this._sorting = direction;\n        }\n    }\n    /** The index of the column in the sorting list. */\n    get sortIndex() {\n        if (this.query) {\n            return this.query.getColumnSortIndex(this);\n        }\n        else {\n            return this._sortIndex;\n        }\n    }\n    ;\n    set sortIndex(index) {\n        if (this.query) {\n            this.query.setColumnSortIndex(this, index);\n        }\n        else {\n            this._sortIndex = index;\n        }\n    }\n    ;\n    /** the default constructor. */\n    constructor(query, justsorted = false) {\n        this.query = query;\n        this.justsorted = justsorted;\n        /** Column is enabled */\n        this.enabled = true;\n        /** The parameters associated with this column */\n        this.params = [];\n        this._isHidden = false;\n        this.query = query;\n        this._id = utils.generateId('col');\n        this.caption = '';\n        this._sorting = SortDirection.None;\n        this._sortIndex = -1;\n        this.expr = new Expression(this);\n        this.blockId = '';\n        this.justsorted = justsorted;\n    }\n    getModel() {\n        return this.query.getModel();\n    }\n    getQuery() {\n        return this.query;\n    }\n    /** Indicates whether this column is read-only */\n    isReadOnly() {\n        return false;\n    }\n    /** Indicates whether this column is just-sorted */\n    isJustSorted() {\n        return this.justsorted;\n    }\n    setReadOnly(value) {\n        //do nothing. Read-only columns are not supported here\n    }\n    /** Indicates whether this column is invisible */\n    isHidden() {\n        return this._isHidden;\n    }\n    setHidden(value) {\n        this._isHidden = value;\n    }\n    getDataType() {\n        if (this.expr.dataType === DataType.Unknown) {\n            let attrId = null;\n            if (this.expr.func) {\n                if (this.expr.func == \"COUNT\" || this.expr.func == \"CNTDST\")\n                    return DataType.Int64;\n                attrId = this.expr.args[0].value;\n            }\n            else {\n                attrId = this.expr.value;\n            }\n            const attr = this.query.getModel()\n                .getAttributeById(attrId);\n            if (attr)\n                return attr.dataType;\n        }\n        return this.expr.dataType;\n    }\n    /**\n      * Loads column from its JSON representation object.\n      * @param model The Data Model.\n      * @param colData The JSON representation object.\n      */\n    loadFromData(model, colData) {\n        if (colData) {\n            if (colData.id) {\n                this._id = colData.id;\n            }\n            this.caption = colData.cptn;\n            if (typeof colData.srt !== 'undefined') {\n                this._sorting = colData.srt;\n                this._sortIndex = (typeof colData.srtidx !== 'undefined')\n                    ? colData.srtidx\n                    : -1;\n            }\n            if (colData.enabled === false) {\n                this.enabled = colData.enabled;\n            }\n            this.expr.loadFromData(model, colData.expr);\n            this.blockId = colData.blockId;\n            this.displayFormat = colData.dfmt;\n            this.groupFooterColumnTemlate = colData.gfct;\n            if (colData.hidden) {\n                this.setHidden(true);\n            }\n        }\n    }\n    /**\n     * Saves the column to a data transfer object (ready for sending to the server-side) .\n     * @returns An plain object that represents the column.\n     */\n    saveToData() {\n        let obj = {};\n        obj.id = this._id;\n        if (typeof this.caption !== 'undefined') {\n            obj.cptn = this.caption;\n        }\n        if (this.sorting != SortDirection.None) {\n            obj.srt = this.sorting;\n            obj.srtidx = this.sortIndex;\n        }\n        obj.expr = this.expr.saveToData();\n        if (this.blockId) {\n            obj.blockId = this.blockId;\n        }\n        if (this.enabled === false) {\n            obj.enabled = this.enabled;\n        }\n        obj.dfmt = this.displayFormat;\n        obj.gfct = this.groupFooterColumnTemlate;\n        if (this.isHidden()) {\n            obj.hidden = true;\n        }\n        return obj;\n    }\n    fireChangedEvent() {\n        this.query.fireChangedEvent({\n            part: (this.justsorted)\n                ? QueryChangePart.SortingColumns\n                : QueryChangePart.Columns,\n            action: QueryChangeAction.Modify,\n            changee: this\n        });\n    }\n    getExpressionIndex(expr) {\n        return 0;\n    }\n    expressionChanged(expr, oldValue) {\n    }\n}\n\n/**\n * Represents a type of condition.\n * Current we have 2 possible types: a simple condition or a predicate - a group of conditions\n*/\nvar CondTag;\n(function (CondTag) {\n    /** An unknown type of condition (just in case).*/\n    CondTag[CondTag[\"Unknown\"] = 0] = \"Unknown\";\n    /** A simple condition (e.g. SomeField > SomeValue).*/\n    CondTag[CondTag[\"Simple\"] = 1] = \"Simple\";\n    /** A predicate (a group of conditions).*/\n    CondTag[CondTag[\"Group\"] = 51] = \"Group\";\n})(CondTag || (CondTag = {}));\n\nvar ConditionPart;\n(function (ConditionPart) {\n    ConditionPart[ConditionPart[\"EntityAttr\"] = 2] = \"EntityAttr\";\n    ConditionPart[ConditionPart[\"Operator\"] = 4] = \"Operator\";\n    ConditionPart[ConditionPart[\"Value\"] = 8] = \"Value\";\n    ConditionPart[ConditionPart[\"All\"] = 14] = \"All\";\n})(ConditionPart || (ConditionPart = {}));\n\n/**\n * Represents some condition.\n */\nclass Condition {\n    get id() {\n        return this._id;\n    }\n    get enabled() {\n        return this._enabled && (!this.getParent() || this.getParent().enabled);\n    }\n    set enabled(value) {\n        this._enabled = value && (!this.getParent() || this.getParent().enabled);\n        this.conditions && this.conditions.forEach((cond) => {\n            cond.enabled = value;\n        });\n    }\n    /**\n     * The default constructor.\n     * @param tag The condition tag\n     */\n    constructor(query, tag) {\n        this.query = query;\n        /**\n         *  The linking type.\n         */\n        this.linkType = LinkType.All; //only for predicates\n        this.parent = null;\n        this._id = utils.generateId('cond');\n        this.justAdded = false;\n        this.tag = tag || CondTag.Unknown;\n        this.enabled = true;\n        this.operatorId = '';\n        this.blockId = '';\n        this.expressions = new Array();\n        this.conditions = new Array();\n    }\n    getQuery() {\n        return this.query;\n    }\n    getModel() {\n        return this.query.getModel();\n    }\n    getParent() {\n        return this.parent;\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getConditions() {\n        return this.conditions;\n    }\n    isEmpty() {\n        return this.conditions.length === 0;\n    }\n    isGroup() {\n        return (this.tag == CondTag.Group) || (this.parent == null);\n    }\n    getLevel() {\n        const parent = this.getParent();\n        return parent ? parent.getLevel() + 1 : 0;\n    }\n    /**\n     * Indicates whether this condition is read-only.\n     */\n    isReadOnly() {\n        return false;\n    }\n    setReadOnly(value) {\n    }\n    /**\n     * The value indicating whether this condition is parameterized.\n     */\n    isParameterized() {\n        return false;\n    }\n    setParameterized(value) {\n    }\n    /**\n     * Indicates whether this condition must be placed into `JOIN` clause in result `SQL`.\n     */\n    isInJoin() {\n        return false;\n    }\n    setInJoin(value) {\n    }\n    clearConditions() {\n        this.conditions = [];\n    }\n    addCondition(cond) {\n        cond.setParent(this);\n        return this.conditions.push(cond);\n    }\n    removeConditionAt(index) {\n        this.conditions.splice(index, 1);\n    }\n    /**\n    * Loads condtion from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        if (data) {\n            this.tag = data.tag;\n            if (!this.tag) {\n                this.tag = (!this.parent || this.conditions.length > 0) ? CondTag.Group : CondTag.Simple;\n            }\n            if (typeof data.enabled !== 'undefined') {\n                this.enabled = data.enabled;\n            }\n            if (typeof data.disabled !== 'undefined') {\n                this.enabled = !data.disabled;\n            }\n            if (this.tag == CondTag.Simple) {\n                this.operatorId = data.op;\n                if (data.exprs) {\n                    for (let i = 0; i < data.exprs.length; i++) {\n                        let newExpr = new Expression(this);\n                        newExpr.loadFromData(model, data.exprs[i]);\n                        this.expressions.push(newExpr);\n                    }\n                }\n            }\n            this.linkType = data.linking;\n        }\n    }\n    /**\n     * Saves condition to JSON representation object.\n     * @returns The JSON representation object.\n     */\n    saveToData() {\n        let obj = {};\n        obj.tag = this.tag;\n        if (!this.enabled) {\n            obj.enabled = this.enabled;\n        }\n        if (this.tag == CondTag.Simple) {\n            obj.op = this.operatorId;\n            obj.exprs = [];\n            for (let i = 0; i < this.expressions.length; i++) {\n                obj.exprs.push(this.expressions[i].saveToData());\n            }\n        }\n        if (this.tag == CondTag.Group) {\n            //if condition group\n            obj.linking = this.linkType;\n        }\n        return obj;\n    }\n    fireChangedEvent(condPart = ConditionPart.All) {\n        this.query.fireChangedEvent({\n            part: QueryChangePart.Conditions,\n            action: QueryChangeAction.Modify,\n            changee: this,\n            condPart: condPart\n        });\n    }\n    getExpressionIndex(expr) {\n        return this.expressions.indexOf(expr, 0);\n    }\n    expressionChanged(expr, oldValue) {\n        if (expr.getIndex() == 0 && expr.tag == ExprTag.EntityAttribute) {\n            //this is a base entity attribute, we need to re-pack the whole condition\n            this.tuneOperatorForAttr(expr.value);\n        }\n    }\n    getOperatorId() {\n        return this.operatorId;\n    }\n    setOperatorId(newOperatorId, silent = false) {\n        const oldOperatorId = this.operatorId;\n        this.operatorId = newOperatorId;\n        if (!silent) {\n            const model = this.getModel();\n            const operator = model.getOperatorById(newOperatorId);\n            const attrId = this.expressions[0].value;\n            const attr = model.getAttributeById(attrId);\n            this.tuneValueExpressions(attr, operator, attr.id, oldOperatorId);\n        }\n    }\n    tuneOperatorForAttr(oldAttrId) {\n        const model = this.getModel();\n        const attrId = this.expressions[0].value;\n        const attr = model.getAttributeById(attrId);\n        if (attr != null) {\n            let newOperator = this.getModel().getDefaultOperatorForAttr(attr);\n            let oldOperatorId = this.operatorId;\n            this.operatorId = newOperator.id;\n            this.tuneValueExpressions(attr, newOperator, oldAttrId, oldOperatorId);\n        }\n    }\n    tuneValueExpressions(attr, operator, oldAttrId, oldOperatorId) {\n        const model = this.getModel();\n        if (!operator)\n            return;\n        let exprCount = this.expressions.length;\n        oldAttrId ? model.getAttributeById(oldAttrId) : null;\n        let oldOperator = null;\n        if (oldOperatorId) {\n            oldOperator = model.getOperatorById(oldOperatorId);\n        }\n        if (oldOperator && oldOperator.paramCount == operator.paramCount) {\n            //add  necessary expressions\n            let i = 1;\n            while (i < operator.paramCount) {\n                let oldOperand = model.getOperand(attr, oldOperator, i);\n                let operand = model.getOperand(attr, operator, i);\n                if (operand.dataType == DataType.Unknown) {\n                    operand.dataType = attr.dataType;\n                }\n                const editor = operand.editor && operand.editor.tag !== EditorTag.Unknown\n                    ? operand.editor\n                    : (attr.defaultEditor && attr.defaultEditor.tag !== EditorTag.Unknown\n                        ? attr.defaultEditor\n                        : new EqValueEditor());\n                if (i >= exprCount) {\n                    var valExpr = this.createValueExpr(operand);\n                    this.expressions.push(valExpr);\n                }\n                else {\n                    var oldExpr = this.expressions[i];\n                    //create new value expression according to the corresponding operand\n                    var newExpr = this.createValueExpr(operand);\n                    if (this.areCompitableEditors(oldOperand.editor, editor)) {\n                        newExpr.tryCopyValueFrom(oldExpr);\n                    }\n                    this.expressions[i] = newExpr;\n                }\n                i++;\n            }\n            if (exprCount > i) {\n                //remove all redundant expressions\n                this.expressions.splice(i, exprCount - i);\n            }\n        }\n        else {\n            this.expressions.splice(1, this.expressions.length - 1);\n            for (let i = 1; i < operator.paramCount; i++) {\n                let operand = model.getOperand(attr, operator, i);\n                if (operand.dataType == DataType.Unknown) {\n                    operand.dataType = attr.dataType;\n                }\n                var valExpr = this.createValueExpr(operand);\n                this.expressions.push(valExpr);\n            }\n        }\n    }\n    areCompitableEditors(oldEditor, newEditor) {\n        if (newEditor.tag != oldEditor.tag)\n            return false;\n        if (newEditor.resType != oldEditor.resType)\n            return false;\n        return true;\n    }\n    addExpressionByOperand(operand, val = null) {\n        let expr = this.createValueExpr(operand, val);\n        this.expressions.push(expr);\n        return expr;\n    }\n    createValueExpr(operand, val = null) {\n        let valueNotDefined = val === null || typeof val === 'undefined';\n        let value = val ? val : operand.defValue;\n        let text = val ? val : operand.defText;\n        let result = new Expression(this);\n        if (operand.kind === DataKind.Query) {\n            result.tag = ExprTag.Query;\n            result.dataType = operand.dataType;\n            result.kind = operand.kind;\n            result.setContent(value, text, true);\n        }\n        else if (operand.kind === DataKind.Attribute) {\n            if (!valueNotDefined) {\n                let defAttr = this.getModel().getFirstAttributeByFilter((attr) => {\n                    return attr.useInConditions == true && (!operand.dataType || attr.dataType == operand.dataType);\n                });\n                value = defAttr ? defAttr.id : null;\n            }\n            result.tag = ExprTag.EntityAttribute;\n            result.kind = operand.kind;\n            result.dataType = operand.dataType;\n            result.setContent(value, text, true);\n        }\n        else {\n            if (valueNotDefined) {\n                if (operand.defValue && operand.defValue != \"\") {\n                    value = operand.defValue;\n                }\n                else {\n                    if (operand.editor && operand.editor.defValue) {\n                        value = operand.editor.defValue;\n                    }\n                    else {\n                        value = '';\n                    }\n                }\n                if (operand.editor) {\n                    text = operand.editor.getValueText(value);\n                }\n            }\n            result.tag = ExprTag.Constant;\n            result.dataType = operand.dataType;\n            result.kind = operand.kind;\n            result.setContent(value, text, true);\n            result._isDefaultValue = valueNotDefined;\n        }\n        return result;\n    }\n}\n\nclass Tree {\n    constructor(value = null) {\n        this.childs = [];\n        this.value = null;\n        this.parent = null;\n        if (value) {\n            if (Array.isArray(value)) {\n                this.value = value[0];\n                if (value.length > 1) {\n                    this.addChild(new Tree(value.slice(1)));\n                }\n            }\n            else if (value instanceof Tree) {\n                this.value = value.value;\n                this.childs = value.childs;\n            }\n            else {\n                this.value = value;\n            }\n        }\n    }\n    contains(value) {\n        if (this.value === value)\n            return true;\n        for (let child of this.childs) {\n            if (child.contains(value))\n                return true;\n        }\n        return false;\n    }\n    findNode(value) {\n        if (this.value === value)\n            return this;\n        for (let child of this.childs) {\n            let result = child.findNode(value);\n            if (result)\n                return result;\n        }\n        return null;\n    }\n    addChild(child) {\n        child.parent = this;\n        this.childs.push(child);\n    }\n    setParents() {\n        for (let child of this.childs) {\n            child.parent = this;\n            child.setParents();\n        }\n    }\n}\n\n/**\n * The error that appears when the query is not valid\n */\nclass InvalidQueryError extends Error {\n    /**\n     * Creates an instance of error type.\n     * @param message The error message\n     */\n    constructor(message) {\n        super(message);\n        if (typeof Error[\"captureStackTrace\"] === \"function\") {\n            Error[\"captureStackTrace\"].apply(this, [InvalidQueryError]);\n        }\n        this.name = 'InvalidQueryError';\n    }\n}\n/**\n * Represents Query.\n */\nclass Query {\n    isModified() {\n        return this._isModified;\n    }\n    resetModified() {\n        this._isModified = false;\n    }\n    get enableAggregation() {\n        return this._enableAggregation;\n    }\n    set enableAggregation(value) {\n        const oldValue = this._enableAggregation;\n        this._enableAggregation = value;\n        if (!oldValue && value) {\n            this.processQueryForAggregation();\n            this.columns.filter(c => c.enabled\n                && c.expr.tag == ExprTag.AggregateFunction);\n        }\n        if (!this._enableAggregation) {\n            this.aggrSettings.clear();\n        }\n    }\n    /**\n     * The default constructor.\n     * @param model The data model.\n     * @param data JSON representation object.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    constructor(model, data, options) {\n        /**\n         * Contains user-defined extra data for current query.\n         */\n        this.extraData = {};\n        this.innerData = {};\n        this.isNewbie = true;\n        this._isModified = false;\n        this._enableAggregation = false;\n        this.parentQuery = null;\n        this.drillDowns = [];\n        this.syncSortOrderWithColumnsOrder = true;\n        if (options) {\n            this.context = options.context;\n            if (this.context) {\n                this.syncSortOrderWithColumnsOrder = this.context.options.syncSortOrderWithColumnsOrder;\n            }\n        }\n        this.eventEmitter = new EventEmitter(this);\n        this.root = new Condition(this, CondTag.Group);\n        this.extraConditions = new Condition(this, CondTag.Group);\n        this.columns = new Array();\n        //this.justsorted = new Array<QueryColumn>();\n        this.sortedColumns = new Array();\n        if (!this.id) {\n            this.regenerateId();\n        }\n        this.setDefaultName();\n        this.description = \"\";\n        this.model = (model) ? model : new DataModel();\n        if (data) {\n            this.loadFromData(data);\n        }\n        this.attributeExprTag = (options) ? options.attrTag || ExprTag.EntityAttribute : ExprTag.EntityAttribute;\n        this.clientListRequestHandler = (options) ? options.clientListRequestHandler : new Array();\n        this.serverListRequestHandler = (options) ? options.serverListRequestHandler : new Array();\n        this.timezoneOffset = (new Date()).getTimezoneOffset();\n        this.aggrSettings = new AggregationSettings(this);\n        if (options) {\n            this.parentQuery = options.parent;\n        }\n        this.addChangedCallback(ev => {\n            if (ev.data\n                && ((ev.data.part & QueryChangePart.Columns) > 0)\n                && !ev.data.aggregation) {\n                if (this._enableAggregation && this.updateAggregationSettings()) {\n                    this.fireChangedEvent({\n                        part: QueryChangePart.Aggregation\n                    });\n                }\n            }\n        });\n    }\n    updateAggregationSettings() {\n        let hasChanged = false;\n        const aggrSettings = this.getAggregationSettings();\n        for (let i = aggrSettings.groups.length - 1; i >= 0; i--) {\n            const group = aggrSettings.groups[i];\n            for (let j = group.columns.length - 1; j >= 0; j--) {\n                const colId = group.columns[j];\n                if (!this.columns.find(col => col.id === colId)) {\n                    group.columns.splice(j, 1);\n                    hasChanged = true;\n                }\n            }\n            if (group.columns.length == 0) {\n                aggrSettings.groups.splice(i, 1);\n            }\n        }\n        const aggregates = aggrSettings.getAggregates();\n        for (let i = aggregates.length - 1; i >= 0; i--) {\n            const aggr = aggregates[i];\n            if (!this.columns.find(col => col.id === aggr.colId)) {\n                aggregates.splice(i, 1);\n                hasChanged = true;\n            }\n        }\n        // const isValidAggration = (aggrSettings.hasGroups() && (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())) \n        //                          || (aggrSettings.hasAggregates && aggrSettings.hasGrandTotals());\n        // if (!isValidAggration) {\n        //     this.enableAggregation = false;\n        // }\n        return hasChanged;\n    }\n    createSubQuery() {\n        return new Query(this.model, null, { parent: this, context: this.context });\n    }\n    useAggregation(settingsTuner, silent = false) {\n        this.aggrSettings.clear();\n        settingsTuner(this.aggrSettings);\n        if (this.enableAggregation) {\n            this.processQueryForAggregation(silent);\n        }\n        else if (!silent) {\n            console.warn('Aggregation is turned off. Turn it on with query.enableAggregation = true');\n            return;\n        }\n    }\n    useDefaultAggregation() {\n        this._enableAggregation = true;\n        this.useAggregation((settings) => {\n            const aggrCols = this.columns.filter(c => c.enabled\n                && c.expr.tag == ExprTag.AggregateFunction);\n            if (aggrCols.length) {\n                // query contains aggregate columns\n                const colsToGroup = this.columns.filter(c => c.enabled\n                    && c.expr.tag == ExprTag.EntityAttribute);\n                const aggrsToAdd = [];\n                for (const col of aggrCols) {\n                    aggrsToAdd.push({ id: col.id, func: col.expr.func });\n                    this.changeColumnType(col, ExprTag.EntityAttribute);\n                }\n                for (const aggr of aggrsToAdd) {\n                    settings.addAggregateColumn(aggr.id, aggr.func);\n                }\n                for (const col of colsToGroup) {\n                    settings.addGroup({ columns: [col.id], name: col.caption });\n                }\n                settings.addGrandTotals();\n                this.fireChangedEvent({\n                    part: QueryChangePart.Columns,\n                    wasModified: false\n                });\n            }\n            else {\n                // query does not has any aggr columns\n                const colToAggr = this.getColumns()\n                    .filter(c => c.enabled && c.expr.tag == ExprTag.EntityAttribute\n                    && this.model.getAttributeById(c.expr.value).dataType === DataType.Currency)[0];\n                const colToGroup = this.getColumns()\n                    .filter(c => c.enabled && c.expr.tag == ExprTag.EntityAttribute\n                    && this.model.getAttributeById(c.expr.value).dataType === DataType.String)[0];\n                if ((!colToAggr && !settings.hasAggregates()) || !colToGroup)\n                    return;\n                settings.addGrandTotals()\n                    .addAggregateColumn(colToAggr.id, 'SUM')\n                    .addGroup({ columns: [colToGroup.id], name: 'Default' });\n            }\n        });\n    }\n    processQueryForAggregation(silent = false) {\n        const aggrSettings = this.getAggregationSettings();\n        const groups = aggrSettings.getGroups();\n        if (groups.length > 0) {\n            const groupColIds = groups[groups.length - 1].columns;\n            //take the list of grouped columns from the latest group\n            let groupedCols = [];\n            let sortedCols = [];\n            for (const col of this.getColumns()) {\n                if (groupColIds.indexOf(col.id) >= 0) {\n                    groupedCols.push(col);\n                }\n                else if (this.getColumnSorting(col) != SortDirection.None) {\n                    sortedCols.push(col);\n                }\n            }\n            let sortIndex = 0;\n            groupedCols.forEach(col => {\n                if (this.getColumnSorting(col) == SortDirection.None) {\n                    this.setColumnSorting(col, SortDirection.Ascending);\n                }\n                this.setColumnSortIndex(col, sortIndex++);\n                //col.sortIndex = sortIndex++;\n            });\n            sortedCols.forEach(col => {\n                this.setColumnSortIndex(col, sortIndex++);\n                //     col.sortIndex = sortIndex++;\n            });\n            if (!silent) {\n                this.fireChangedEvent({\n                    part: QueryChangePart.Columns,\n                    aggregation: true,\n                    wasModified: false\n                });\n            }\n        }\n    }\n    getAggregationSettings() {\n        return this.aggrSettings;\n    }\n    getColumnIds(from, to) {\n        to = to || from;\n        return this.columns.slice(from, to - from + 1)\n            .map(c => c.id);\n    }\n    /**\n     * Checks if the columns with IDs passed in function's parameter exist and are valid\n     */\n    validateColumns(colIds) {\n        const enabledColIds = this.columns.filter(c => c.enabled).map(c => c.id);\n        let prevIndex = -1;\n        for (const col of colIds) {\n            const index = enabledColIds.indexOf(col);\n            if (index < 0)\n                return false;\n            if (prevIndex > index)\n                return false;\n            prevIndex = index;\n        }\n        return true;\n    }\n    validateAggregate(colId, funcId) {\n        const col = this.columns.filter(c => c.enabled && c.id === colId)[0];\n        const func = this.model.findAggrFunctionById(funcId);\n        if (!func || !col || func.appliedTypes.indexOf(col.expr.dataType) < 0)\n            return false;\n        return true;\n    }\n    isEx() {\n        return false;\n    }\n    /**\n     * Resets the query: clears all its conditions and columns, regenerate the ID and sets the default name.\n     * @param clearQuery Indicates whether we need to clear the content of the query on reset (default: true)\n     */\n    reset(clearQuery = true) {\n        if (clearQuery) {\n            this.clear();\n        }\n        this.regenerateId();\n        this.setDefaultName();\n        this._isModified = false;\n        this.isNewbie = true;\n    }\n    hasEnabledAggrColumns() {\n        return this.columns.filter(col => col.enabled\n            && col.expr.tag === ExprTag.AggregateFunction).length > 0;\n    }\n    setDefaultName() {\n        this.setName(i18n.getText('NewQueryName'));\n        return this.getName();\n    }\n    /**\n     * Validates wether the query corresponds to the model.\n     * @param options Validate options.\n     * @throws {InvalidQueryError} If query is not valid.\n     */\n    validate(options) {\n        options = options || {};\n        const entityAttrNotExistError = \"EntityAttribute isn't declared in the model: \";\n        const wrongExprTag = \"The expression has wrond tag: \";\n        if (!this.model) {\n            throw new InvalidQueryError(\"Model is not declared\");\n        }\n        if (this.columns) {\n            for (let column of this.columns) {\n                if (column.expr.tag == ExprTag.EntityAttribute\n                    || column.expr.tag === ExprTag.ParentEntityAttribute) {\n                    const attr = this.model.getAttributeById(column.expr.value);\n                    if (!attr) {\n                        throw new InvalidQueryError(entityAttrNotExistError + column.expr.value);\n                    }\n                }\n                else if (column.expr.tag === ExprTag.AggregateFunction) {\n                    const attr = this.model.getAttributeById(column.expr.args[0].value);\n                    if (!attr) {\n                        throw new InvalidQueryError(entityAttrNotExistError + column.expr.args[0].value);\n                    }\n                }\n                else if (column.expr.tag === ExprTag.Unknown) {\n                    throw new InvalidQueryError(wrongExprTag + column.expr.tag);\n                }\n            }\n        }\n        if (this.root && this.root.getConditions()) {\n            this.validateConditionGroup(this.root, options);\n        }\n    }\n    getAggregatedColumns() {\n        return this.getColumns().filter(col => col.enabled\n            && col.expr.tag === ExprTag.AggregateFunction);\n    }\n    /**\n     * Validates wether the query corresponds to the model.\n     * @param options Validate options.\n     * @returns `true` if it is valid, otherwise `false`\n     */\n    tryValidate(options) {\n        try {\n            this.validate(options);\n            return true;\n        }\n        catch (e) {\n            if (e instanceof InvalidQueryError) {\n                return false;\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    validateConditionGroup(curCond, options) {\n        if (curCond.isGroup()) {\n            for (let condition of curCond.getConditions()) {\n                if (!condition.enabled)\n                    continue;\n                this.validateConditionGroup(condition, options);\n            }\n        }\n        else if (curCond.expressions[0].tag === ExprTag.EntityAttribute) {\n            const attrId = curCond.expressions[0].value;\n            const attr = this.model.getAttributeById(attrId);\n            if (!attr) {\n                throw new InvalidQueryError(\"EntityAttribute isn't declared in the model: \" + attrId);\n            }\n            if (!options.checkExpressions)\n                return;\n            for (let i = 1; i < curCond.expressions.length; i++) {\n                const expr = curCond.expressions[i];\n                if (expr.tag !== ExprTag.Constant)\n                    continue;\n                //validate number exprs\n                if (utils.isNumericType(expr.dataType)) {\n                    if (!expr.value)\n                        continue;\n                    let values = [];\n                    if (expr.kind === DataKind.List) {\n                        values = expr.value.split(/\\s*,\\s*/);\n                    }\n                    else {\n                        values = [expr.value];\n                    }\n                    for (let value of values) {\n                        const parsedVal = +value;\n                        if (isNaN(parsedVal)) {\n                            throw new InvalidQueryError(\"Expression constant is NaN in condition:\" + curCond.id);\n                        }\n                        if (utils.isIntType(expr.dataType) && parsedVal != parseInt(value, 10)) {\n                            throw new InvalidQueryError(\"Expression constant is wrong interger in condition: \" + curCond.id);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Sets data to the query.\n     * @param data A plain JS object that represents the query or a JSON string\n     * @param options An instance of LoadQueryFromDataOptions interface that can contain different loading options\n     */\n    loadFromDataOrJson(data, options) {\n        if (data) {\n            if (typeof data === \"string\") {\n                this.loadFromJson(data, options);\n            }\n            else {\n                this.loadFromData(data, options);\n            }\n        }\n    }\n    /**\n     * Loads query from JSON.\n     * @param json The JSON string.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    loadFromJson(json, options) {\n        let data = JSON.parse(json);\n        this.loadFromData(data, options);\n    }\n    /**\n     * Loads query from data representation.\n     * @param data The query DTO.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    loadFromData(data, options) {\n        options = utils.assign({\n            changeStatus: true,\n            validate: true\n        }, options || {});\n        let noErrors = false;\n        this.clear();\n        this.clearDrillDowns();\n        if (data) {\n            this.id = data.id;\n            this.root.loadFromData(this.model, data.root);\n            if (data.root && data.root.conds) {\n                for (let i = 0; i < data.root.conds.length; i++) {\n                    const condData = data.root.conds[i];\n                    if (condData.conds && !this.isEx()) {\n                        console.error(\"Community version doesn't support working with groups.\");\n                        continue;\n                    }\n                    const cond = this.createCondition();\n                    cond.loadFromData(this.model, condData);\n                    this.root.addCondition(cond);\n                }\n            }\n            this.name = data.name;\n            this.description = data.desc;\n            //this.justsorted = [];\n            this.sortedColumns = [];\n            if (data.justsortcols) {\n                for (let i = 0; i < data.justsortcols.length; i++) {\n                    let newCol = this.createColumn(true);\n                    newCol.loadFromData(this.model, data.justsortcols[i]);\n                    //this.justsorted.push(newCol);\n                    this.addColumnToSorted(newCol);\n                }\n            }\n            if (data.cols) {\n                for (let i = 0; i < data.cols.length; i++) {\n                    let newCol = this.createColumn();\n                    newCol.loadFromData(this.model, data.cols[i]);\n                    this.columns.push(newCol);\n                    if (newCol._sorting != SortDirection.None) {\n                        this.addColumnToSorted(newCol);\n                    }\n                }\n            }\n            this.sortedColumns.sort((col1, col2) => {\n                return col1._sortIndex - col2._sortIndex;\n            });\n            this.fixupSortingIndices();\n            if (data.extraData) {\n                this.extraData = data.extraData;\n            }\n            this.innerData = data.innerData || this.innerData;\n            if (this.innerData && this.innerData.aggr) {\n                this._enableAggregation = this.innerData.aggr.enabled || false;\n                this.useAggregation(settings => {\n                    settings.loadFromData(this.innerData.aggr);\n                }, true);\n            }\n            if (data.dds && data.dds.length) {\n                for (let dd of data.dds) {\n                    const query = this.addDrillDown();\n                    query.loadFromData(dd);\n                }\n            }\n        }\n        if (this._enableAggregation) {\n            this.updateAggregationSettings();\n        }\n        noErrors = true;\n        if (noErrors) {\n            if (options.changeStatus) {\n                this.isNewbie = false;\n                this._isModified = false;\n            }\n        }\n        if (options.validate) {\n            this.validate();\n        }\n    }\n    /**\n     *\n     */\n    addDrillDown() {\n        const query = this.context.createQuery();\n        query.parentQuery = this;\n        this.drillDowns.push(query);\n        return query;\n    }\n    getDrillDowns() {\n        return this.drillDowns;\n    }\n    getParentQuery() {\n        return this.parentQuery;\n    }\n    /**\n     *\n     */\n    findColumnById(colId) {\n        for (let col of this.columns) {\n            if (col.id === colId)\n                return col;\n        }\n        return null;\n    }\n    /**\n     * Gets DataModel object associated with this query.\n     * @retruns The data model.\n     */\n    getModel() {\n        return this.model;\n    }\n    /**\n     * Sets DataModel object associated with this query.\n     * @param model The data model.\n     */\n    setModel(model) {\n        this.model = model;\n    }\n    /**\n     * Loads data model.\n     * @param model JSON representation object or JSON string.\n     */\n    loadModelData(model) {\n        this.model.setData(model);\n    }\n    /**\n     * Returns JSON representation of this query.\n     * @retruns JSON string.\n     */\n    toJSON() {\n        return JSON.stringify(this.toJSONData());\n    }\n    /**\n     * Returns JSON representation of this query.\n     * @retruns JSON representation object.\n     */\n    toJSONData() {\n        this.fixupSortingIndices();\n        let obj = {\n            modelId: this.model ? this.model.getId() : null,\n            modelName: this.model ? this.model.getName() : null\n        };\n        obj.id = this.id;\n        obj.name = this.name;\n        if (this.description) {\n            obj.desc = this.description;\n        }\n        obj.cols = [];\n        for (let i = 0; i < this.columns.length; i++) {\n            obj.cols.push(this.columns[i].saveToData());\n        }\n        obj.justsortcols = [];\n        // for (let i = 0; i < this.justsorted.length; i++) {\n        //     obj.justsortcols.push(this.justsorted[i].saveToData());\n        // }\n        this.sortedColumns.forEach(col => {\n            if (col.isJustSorted()) {\n                obj.justsortcols.push(col.saveToData());\n            }\n        });\n        if (this.extraData) {\n            obj.extraData = this.extraData;\n        }\n        if (this.innerData) {\n            obj.innerData = this.innerData;\n            obj.innerData.aggr = this.aggrSettings.saveToData();\n            obj.innerData.aggr.enabled = this._enableAggregation;\n        }\n        const rootCondToData = (condGroup) => {\n            const result = condGroup.saveToData();\n            result.conds = [];\n            const conditions = condGroup.getConditions();\n            for (let i = 0; i < conditions.length; i++) {\n                if (conditions[i].isGroup() && !this.isEx()) {\n                    console.error(\"Community version doesn't support working with groups.\");\n                    continue;\n                }\n                result.conds.push(conditions[i].saveToData());\n            }\n            return result;\n        };\n        obj.root = rootCondToData(this.root);\n        obj.extraConds = rootCondToData(this.extraConditions);\n        if (this.drillDowns.length > 0) {\n            obj.dds = [];\n            for (let dd of this.drillDowns) {\n                obj.dds.push(dd.toJSONData());\n            }\n        }\n        obj.timezoneOffset = this.timezoneOffset;\n        obj.locale = i18n.getCurrentLocale();\n        return obj;\n    }\n    /**\n     * Checks wether query does not contains any condtion.\n     * @retruns `true` if query does not contain any condition, otherwise `false`.\n     */\n    isEmptyConditions() {\n        return this.root.isEmpty();\n    }\n    /**\n     * Checks wether query does not contains any column.\n     * @retruns `true` if query does not contain any column, otherwise `false`.\n     */\n    isEmptyColumns() {\n        return !this.columns || this.columns.length === 0;\n    }\n    /**\n     * Checks wether query does not contains any column and any condition.\n     * @retruns `true` if query does not contain any column and any condition, otherwise `false`.\n     */\n    isEmpty() {\n        return this.isEmptyColumns() && this.isEmptyConditions();\n    }\n    /**\n     * Clears the query (all conditions, columns, extraData, etc).\n     */\n    clear() {\n        this._enableAggregation = false;\n        this.aggrSettings.clear();\n        this.clearColumns();\n        this.clearConditions();\n        this.clearExtraConditions();\n        this.innerData = {};\n        this.extraData = {};\n    }\n    /**\n     * Clears all columns in query\n     */\n    clearColumns() {\n        this.columns = [];\n        //this.justsorted = [];\n        this.sortedColumns = [];\n    }\n    /**\n     * Clears all conditions in query.\n     */\n    clearConditions() {\n        this.root.clearConditions();\n        this.root.linkType = LinkType.All;\n        this.root.enabled = true;\n    }\n    /**\n     * Clears all extra conditions in query\n     */\n    clearExtraConditions() {\n        this.extraConditions.clearConditions();\n    }\n    /**\n     * Clears all drill downs\n     */\n    clearDrillDowns() {\n        this.drillDowns = [];\n    }\n    /**\n     * Gets query ID.\n     * @returns The ID>\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Sets query ID.\n     * @param id New Query ID.\n     */\n    setId(id) {\n        this.id = id;\n    }\n    /**\n     * Regenerates the query ID.\n     */\n    regenerateId() {\n        this.id = utils.generateId(\"quer\");\n    }\n    /**\n     * Gets name of the query.\n     * @retruns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Sets name of the query\n     * @param name New name.\n     */\n    setName(name) {\n        this.name = name;\n    }\n    /**\n     * Gets description of the query.\n     * @retruns The description.\n     */\n    getDescription() {\n        return this.description;\n    }\n    /**\n     * Sets description of the query\n     * @param description New description.\n     */\n    setDescription(description) {\n        this.description = description;\n    }\n    /**\n     * Get array of columns.\n     * @retruns Columns.\n     */\n    getColumns() {\n        return this.columns;\n    }\n    /**\n     * Gets array of columns that are used as keys\n     * for totals.\n     */\n    getUsedInTotalsColumns() {\n        const aggrs = this.getAggregatedColumns();\n        if (aggrs.length === 0)\n            return [];\n        const cols = this.getColumns()\n            .filter(col => col.enabled && col.expr.tag === ExprTag.EntityAttribute);\n        if (cols.length)\n            cols.pop();\n        return cols;\n    }\n    addColumnToSorted(col) {\n        const colJson = JSON.stringify(col.expr.saveToData());\n        let isUnique = true;\n        this.sortedColumns.forEach(scol => {\n            const qcolJson = JSON.stringify(scol.expr.saveToData());\n            if (qcolJson === colJson) {\n                isUnique = false;\n            }\n        });\n        if (isUnique) {\n            this.sortedColumns.push(col);\n        }\n    }\n    /**\n     * Get array of columns used only in sorting.\n     * @retruns Columns.\n     */\n    getJustSortedColumns() {\n        return this.sortedColumns.filter(col => {\n            return col.isJustSorted();\n        });\n    }\n    /**\n     * Gets array of columns used in sorting\n     * @retruns Columns\n     */\n    getSortedColumns() {\n        return this.sortedColumns;\n    }\n    /**\n     * Gets Colummn sorting index.\n     * @param col The column.\n     * @retruns The index.\n     */\n    getColumnSortIndex(col) {\n        return this.sortedColumns.indexOf(col);\n    }\n    setColumnSortIndex(col, index) {\n        if (index < 0)\n            return;\n        let colIdx = this.getColumnSortIndex(col);\n        if (colIdx < 0) {\n            this.addColumnToSorted(col);\n            colIdx = this.sortedColumns.length - 1;\n        }\n        utils.moveArrayItem(this.sortedColumns, colIdx, index);\n        this.fixupSortingIndices();\n    }\n    getColumnSorting(col) {\n        const idx = this.getColumnSortIndex(col);\n        if (idx >= 0) {\n            return col._sorting != SortDirection.None ? col._sorting : SortDirection.Ascending;\n        }\n        else {\n            return SortDirection.None;\n        }\n    }\n    setColumnSorting(col, direction) {\n        const idx = this.getColumnSortIndex(col);\n        col._sorting = direction;\n        if (idx >= 0) {\n            if (direction == SortDirection.None) {\n                utils.removeArrayItem(this.sortedColumns, col);\n                this.fixupSortingIndices();\n            }\n        }\n        else {\n            if (direction != SortDirection.None) {\n                this.addColumnToSorted(col);\n                this.fixupSortingIndices();\n            }\n        }\n        this.adjustColumnsSorting();\n    }\n    fixupSortingIndices() {\n        this.sortedColumns.forEach((col, index) => {\n            col._sortIndex = index;\n        });\n    }\n    adjustColumnsSorting() {\n        if (!this.syncSortOrderWithColumnsOrder) {\n            return;\n        }\n        if (this.getJustSortedColumns().length > 0) {\n            return;\n        }\n        let idx = 0;\n        this.columns.forEach(col => {\n            if (col.sorting != SortDirection.None) {\n                const colIdx = this.getColumnSortIndex(col);\n                if (colIdx >= 0) {\n                    utils.moveArrayItem(this.sortedColumns, colIdx, idx);\n                    idx++;\n                }\n            }\n        });\n        this.fixupSortingIndices();\n    }\n    createColumn(justsorted = false) {\n        return new QueryColumn(this, justsorted);\n    }\n    getColumnById(id) {\n        return utils.findItemById(this.columns, id);\n    }\n    /**\n     * Adds a new column with specified parameters\n     * @param descriptor The descriptor of the new column. Can contain different parameters like:\n     * `attribute` - a reference to a EntityAttr object,\n     * `attributeId` - an ID of the entity attribute we need (if we don't indicate `attribute`),\n     * `index`, sorting`, 'sortIndex` and other\n     *\n     * @param silent Indicates if we should raise a queryChanged event. If true - the operation will be performed silently, so no event is raised.\n     * @retruns The column.\n     * @example\n     * query.addColumn({\n     *     attributeId: 'Customers.CompanyName',\n     *     sortIndex: SortDirection.Ascending\n     * }});\n     */\n    addColumn(descriptor, silent = false) {\n        let newColumn;\n        const justsorted = descriptor.justsorted || (descriptor.column && descriptor.column.isJustSorted());\n        if (descriptor.column) {\n            newColumn = descriptor.column;\n        }\n        else {\n            newColumn = this.createColumn(descriptor.justsorted);\n            let attr;\n            if (descriptor.attribute) {\n                attr = descriptor.attribute;\n            }\n            else if (descriptor.attributeId) {\n                attr = this.model.getAttributeById(descriptor.attributeId);\n                if (!attr) {\n                    throw new Error(`Incorrect attribute id (${descriptor.attributeId}): addColumn`);\n                }\n            }\n            else if (typeof descriptor.constValue === 'undefined' && !descriptor.customSql) {\n                throw new Error('Not enought data for addColumn operation. One of the following options must be defined: attribute, attributeId, constValue or customSlq');\n            }\n            if (attr) {\n                let checkedOption = justsorted ? attr.useInSorting : attr.useInResult;\n                if (!checkedOption) {\n                    if (attr.lookupAttr) {\n                        attr = this.model.getAttributeById(attr.lookupAttr);\n                        checkedOption = justsorted ? attr.useInSorting : attr.useInResult;\n                    }\n                    if (!checkedOption) {\n                        throw new Error(`Can't use this attribute for a column`);\n                    }\n                }\n            }\n            if (descriptor.aggrFuncId && descriptor.customSql) {\n                console.warn(\"Column cannot be created using aggrFuncId and customSql at the same time. \" +\n                    \"cusomSql will be used.\");\n            }\n            if (typeof descriptor.constValue !== 'undefined') {\n                newColumn.expr.tag = ExprTag.Constant;\n                newColumn.expr.setValue(descriptor.constValue);\n                newColumn.expr.kind = DataKind.Scalar;\n                newColumn.expr.dataType = descriptor.constType || DataType.String;\n            }\n            else if (descriptor.customSql) {\n                newColumn.caption = 'Custom SQL Column';\n                newColumn.expr.tag = ExprTag.CustomSql;\n                newColumn.expr.sql = descriptor.customSql;\n                newColumn.expr.kind = DataKind.Query;\n                newColumn.expr.dataType = DataType.Unknown;\n                newColumn.expr.baseAttrId = descriptor.attributeId;\n                if (!this.context.options.allowCustomExpressions) {\n                    newColumn.enabled = false;\n                }\n            }\n            else if (descriptor.aggrFuncId) {\n                const funcId = descriptor.aggrFuncId;\n                newColumn.expr.tag = ExprTag.AggregateFunction;\n                newColumn.expr.func = descriptor.aggrFuncId;\n                newColumn.expr.kind = DataKind.Scalar;\n                newColumn.expr.dataType = funcId == 'COUNT' || funcId == 'CNTDST' ? 4 : attr.dataType;\n                newColumn.expr.distinct = false;\n                const arg = new Expression(newColumn);\n                arg.setValue(attr.id, true);\n                arg.tag = ExprTag.EntityAttribute;\n                arg.kind = DataKind.Attribute;\n                arg.dataType = attr.dataType;\n                newColumn.expr.args.push(arg);\n            }\n            else {\n                newColumn.expr.setValue(attr.id, true);\n                newColumn.expr.tag = ExprTag.EntityAttribute;\n                newColumn.expr.kind = DataKind.Attribute;\n                newColumn.expr.dataType = attr.dataType;\n                newColumn.params.concat(attr.params);\n            }\n            newColumn.caption = descriptor.caption || this.context.getDefaultColumnCaption(newColumn);\n            newColumn._sorting = descriptor.sorting || SortDirection.None;\n            newColumn._sortIndex = descriptor.sortIndex || -1;\n            newColumn.enabled = utils.getIfDefined(descriptor.enabled, true);\n            newColumn.setReadOnly(utils.getIfDefined(descriptor.readonly, false));\n        }\n        if (!justsorted) {\n            if (descriptor.index && descriptor.index >= 0 && descriptor.index < this.columns.length) {\n                this.columns.splice(descriptor.index, 0, newColumn);\n            }\n            else {\n                this.columns.push(newColumn);\n            }\n        }\n        this.setColumnSorting(newColumn, newColumn._sorting);\n        if (!silent) {\n            this.fireColumnsChangedEvent(QueryChangeAction.Add, newColumn, justsorted);\n        }\n        return newColumn;\n    }\n    /**\n     * Adds a new column with specified index.\n     * @param column The column or array of columns\n     * @param index The index of new column\n     * @param author The author.\n     * @example\n     * const column = new Column();\n     * column.caption = \"Company name\";\n     *\n     * query.addColumnObj(column, 1)\n     */\n    addColumnObj(column, index, author) {\n        let columns = this.columns;\n        if (typeof column.length == \"undefined\") {\n            if (typeof index == \"number\") {\n                columns.splice(index, 0, column);\n            }\n            else {\n                columns.push(column);\n            }\n            if (column.sorting != SortDirection.None) {\n                this.addColumnToSorted(column);\n            }\n            this.fixupSortingIndices();\n        }\n        else {\n            if (typeof index == \"number\") {\n                columns.push.apply(columns, [index, 0].concat(column));\n            }\n            else {\n                columns.push.apply(columns, [].concat(column));\n            }\n            column.forEach(col => {\n                if (col.sorting != SortDirection.None) {\n                    this.addColumnToSorted(col);\n                }\n            });\n            this.fixupSortingIndices();\n        }\n    }\n    /**\n     * Changes column to Aggregate function, custom expression or simple column.\n     * @param column The column to change.\n     * @param tag New column expression tag.\n     * @param args The arguments (Contains aggregate function id)\n     */\n    changeColumnType(column, tag, args) {\n        if (column.isJustSorted())\n            return;\n        args = args || {};\n        if (tag === ExprTag.AggregateFunction) {\n            if (!args.funcId)\n                throw Error('\"funcId\" argument is not defined');\n            if (column.expr.tag == ExprTag.AggregateFunction) {\n                column.expr.func = args.funcId;\n                return;\n            }\n            const expr = new Expression(column);\n            expr.tag = ExprTag.AggregateFunction;\n            expr.func = args.funcId;\n            expr.distinct = false;\n            expr.dataType = args.funcId == 'COUNT' || args.funcId == 'CNTDST' ? 4 : column.expr.dataType;\n            const arg = new Expression(column);\n            arg.loadFromData(this.model, column.expr.saveToData());\n            expr.args.push(arg);\n            column.expr = expr;\n        }\n        else if (tag === ExprTag.CustomSql) {\n            const attrId = (column.expr.tag == ExprTag.AggregateFunction)\n                ? column.expr.args[0].value\n                : column.expr.value;\n            let sqlText = '';\n            if (this.model) {\n                sqlText = this.model.getAttributeById(attrId).expr;\n            }\n            const customSqlExpr = new Expression(column);\n            customSqlExpr.tag = ExprTag.CustomSql;\n            customSqlExpr.dataType = DataType.String; //the default data type\n            customSqlExpr.sql = sqlText;\n            customSqlExpr.baseAttrId = attrId;\n            column.expr = customSqlExpr;\n        }\n        else if (tag === ExprTag.EntityAttribute) {\n            if (column.expr.tag === ExprTag.EntityAttribute\n                || column.expr.tag === ExprTag.ParentEntityAttribute) {\n                return;\n            }\n            const attrId = (column.expr.tag == ExprTag.AggregateFunction)\n                ? column.expr.args[0].value\n                : column.expr.baseAttrId;\n            const attr = attrId\n                ? this.model.getAttributeById(attrId)\n                : this.model.getFirstUICAttr();\n            const expr = new Expression(column);\n            expr.tag = ExprTag.EntityAttribute;\n            expr.dataType = attr.dataType;\n            expr.setValue(attr.id, true);\n            column.expr = expr;\n        }\n        column.caption = this.context.getDefaultColumnCaption(column);\n    }\n    /**\n     * Moves the column with specified index to another position.\n     * @param index1 The index of the column that should be moved.\n     * @param index2 The index of the position the column should be moved to\n     */\n    moveColumn(index1, index2) {\n        const columns = this.getColumns();\n        utils.moveArrayItem(columns, index1, index2);\n        this.adjustColumnsSorting();\n    }\n    /**\n     * Removes a column.\n     * @param column The column to be removed.\n     */\n    removeColumn(column) {\n        utils.removeArrayItem(this.columns, column);\n        utils.removeArrayItem(this.sortedColumns, column);\n    }\n    /**\n     * Adds a condition group - a group of simple conditions (predicates) linked by AND or OR\n     * @param descriptor The descriptor of the new condition group.\n     * @returns The new search condition.\n     */\n    addConditionGroup(descriptor, addChildCondition = true) {\n        console.error(\"Community version doesn't support working with groups.\");\n        return null;\n    }\n    addExtraConditionGroup(descriptor, addChildCondition = true) {\n        console.error(\"Community version doesn't support working with groups.\");\n        return null;\n    }\n    createCondition(tag = CondTag.Simple) {\n        return new Condition(this, tag);\n    }\n    /**\n     *  Adds a new simple condition (a predicate)\n     * @param descriptor The descriptor which defines different parameters of the new condition\n     * @returns The new condition.\n     */\n    addSimpleCondition(descriptor) {\n        let parent = descriptor.parent || this.getRootCondition();\n        let model = this.getModel();\n        if (!model)\n            return null;\n        if (!descriptor.attribute && !descriptor.attributeId) {\n            throw new Error(\"Either `attribute` or `attributeId` parameter must have a value\");\n        }\n        if (!descriptor.attribute) {\n            descriptor.attribute = model.getAttributeById(descriptor.attributeId);\n            if (!descriptor.attribute) {\n                throw new Error(\"Could not find this attribute: \" + descriptor.attributeId);\n            }\n        }\n        if (!descriptor.operator && descriptor.operatorId) {\n            descriptor.operator = model.getOperatorById(descriptor.operatorId);\n        }\n        if (!descriptor.operator) {\n            descriptor.operator = model.getDefaultOperatorForAttr(descriptor.attribute);\n        }\n        let cond = this.createSimpleConditionObject(descriptor.attribute, descriptor.operator, descriptor.value);\n        parent.addCondition(cond);\n        cond.enabled = utils.getIfDefined(descriptor.enabled, true);\n        cond.setReadOnly(utils.getIfDefined(descriptor.readonly, false));\n        return cond;\n    }\n    addSimpleExtraCondition(descriptor) {\n        descriptor.parent = descriptor.parent || this.extraConditions;\n        return this.addSimpleCondition(descriptor);\n    }\n    createSimpleConditionObject(attr, operator, inputValues) {\n        if (!attr || !attr.useInConditions) {\n            let attrCaption = attr ? attr.caption : 'NULL';\n            throw \"Can't add a condition with such attribute: \" + attrCaption;\n        }\n        let cond = this.createCondition(CondTag.Simple);\n        cond.setOperatorId(operator.id, true);\n        let attrExpr = new Expression(cond);\n        attrExpr.setValue(attr.id, true);\n        attrExpr.tag = this.attributeExprTag;\n        attrExpr.kind = DataKind.Attribute;\n        attrExpr.dataType = attr.dataType;\n        cond.expressions.push(attrExpr);\n        let model = this.getModel();\n        const valCount = operator.paramCount;\n        let values = utils.fillArray(new Array(valCount - 1), null);\n        if (inputValues !== null && typeof inputValues !== \"undefined\") {\n            if (Array.isArray(inputValues)) {\n                utils.copyArrayTo(inputValues, values);\n            }\n            else if (valCount > 0) {\n                values[0] = inputValues;\n            }\n        }\n        var valLength = values.length;\n        for (var i = 0; i < valLength; i++) {\n            let operand = model.getOperand(attr, operator, i + 1);\n            cond.addExpressionByOperand(operand, values[i]);\n        }\n        return cond;\n    }\n    /**\n     * Removes several columns passed as array.\n     * @param columnsToRemove The list of columns to be removed.\n     * @param author The author.\n     */\n    removeColumns(columnsToRemove, author) {\n        let justSortedColumns = columnsToRemove.filter(c => c.isJustSorted());\n        let columns = columnsToRemove.filter(c => !c.isJustSorted());\n        function removeFromArray(arr, arrToRemove) {\n            let ctrLen = arrToRemove.length;\n            for (let i = 0; i < ctrLen; i++) {\n                let index = arr.indexOf(arrToRemove[i]);\n                if (index >= 0) {\n                    arr.splice(index, 1);\n                }\n            }\n        }\n        if (columns.length > 0) {\n            removeFromArray(this.getColumns(), columns);\n            removeFromArray(this.sortedColumns, columns);\n        }\n        if (justSortedColumns.length > 0) {\n            //removeFromArray(this.getJustSortedColumns(), justSortedColumns);\n            removeFromArray(this.sortedColumns, justSortedColumns);\n        }\n        this.fixupSortingIndices();\n    }\n    /**\n     * Fires process event.\n     * @param data The data.\n     */\n    fireProcessEvent(data) {\n        this.eventEmitter.fire('query.process', data);\n    }\n    fireChangedEvent(params, postpone, wasModified) {\n        params = params || { part: QueryChangePart.All };\n        if (typeof (postpone) != 'undefined' || typeof (wasModified) != 'undefined') {\n            params.postpone = postpone || 0;\n            params.wasModified = wasModified;\n            console.warn('Method with \\'postpone\\' and \\'wasModified\\' args is deprecated. Pass params in data object');\n        }\n        this._isModified = typeof (params.wasModified) != 'undefined'\n            ? params.wasModified\n            : true;\n        const eventData = params || {\n            part: QueryChangePart.All\n        };\n        this.eventEmitter.fire('query.change', eventData, params.postpone || 0);\n    }\n    fireColumnsChangedEvent(action, column, justsorted = false) {\n        this.fireChangedEvent({\n            part: (justsorted)\n                ? QueryChangePart.SortingColumns\n                : QueryChangePart.Columns,\n            action: action,\n            changee: column\n        });\n    }\n    fireConditionsChangedEvent(action, condition) {\n        this.fireChangedEvent({\n            part: QueryChangePart.Conditions,\n            action: action,\n            changee: condition\n        });\n    }\n    /**\n     * Runs through condition with this callback.\n     * @param processCondition The function to process condition.\n     */\n    runThroughConditions(processCondition) {\n        let processGroup = function (predicate) {\n            for (let i = 0; i < predicate.getConditions().length; i++) {\n                let cond = predicate.getConditions()[i];\n                if (cond.isGroup()) {\n                    processGroup(cond);\n                }\n                else {\n                    if (processCondition)\n                        processCondition(cond);\n                }\n            }\n        };\n        processGroup(this.getRootCondition());\n    }\n    /**\n     * Gets one value for the attribute\n     * @param attrId The attribute ID.\n     * @retruns The value.\n     */\n    getOneValueForAttr(attrId) {\n        let res = null;\n        this.runThroughConditions(function (cond) {\n            if (cond.enabled) {\n                const expr = cond.expressions[0];\n                const opid = cond.getOperatorId();\n                if (expr.value == attrId && cond.expressions[1] &&\n                    (opid == \"Equal\" || opid == \"InList\" || opid == \"StartsWith\")) {\n                    res = cond.expressions[1].value;\n                }\n            }\n        });\n        return res;\n    }\n    /**\n     * Gets root predicate\n     * @retruns The condition.\n     */\n    getRootCondition() {\n        return this.root;\n    }\n    /**\n     * Add process callback\n     * @param callback The callback.\n     * @retruns The callback ID.\n     */\n    addProcessCallback(callback) {\n        return this.eventEmitter.subscribe('query.process', callback);\n    }\n    /**\n     * Remove process callback\n     * @param callbackId The callback ID.\n     */\n    removeProcessCallback(callbackId) {\n        this.eventEmitter.unsubscribe('query.process', callbackId);\n    }\n    /**\n     * Add changed callback\n     * @param callback The callback ID.\n     */\n    addChangedCallback(callback) {\n        return this.eventEmitter.subscribe('query.change', callback);\n    }\n    /**\n     * Remove changed callback\n     * @param callbackId The callback ID.\n     */\n    removeChangedCallback(callbackId) {\n        this.eventEmitter.unsubscribe('query.change', callbackId);\n    }\n    /**\n     * Retruns conditions text\n     */\n    getConditionsText() {\n        const model = this.getModel();\n        if (!model)\n            return '';\n        const getConditionGroupText = (group) => {\n            let result = '', conjKey = 'Conj' + equtils.linkTypeToStr(group.linkType), conjText = i18n.getText(conjKey), condText, i;\n            for (i = 0; i < group.getConditions().length; i++) {\n                condText = '';\n                let cond = group.getConditions()[i];\n                if (cond.enabled || typeof (cond.enabled) === 'undefined') {\n                    if (cond.isGroup()) {\n                        condText = getConditionGroupText(cond);\n                        if (condText) {\n                            condText = '(' + condText + ')';\n                        }\n                    }\n                    else {\n                        let opId = cond.getOperatorId();\n                        let operator = model.getOperatorById(opId);\n                        let parts = equtils.parseOperatorFormat(operator);\n                        let plen = parts.length;\n                        for (let pi = 0; pi < plen; pi++) {\n                            let part = parts[pi];\n                            let txt = part.text;\n                            if (part.type == 'expression') {\n                                let expr = cond.expressions[part.index];\n                                if (expr.kind == DataKind.Attribute || expr.tag == ExprTag.EntityAttribute) {\n                                    let attr = model.getAttributeById(expr.value);\n                                    if (attr != null) {\n                                        txt = model.getAttributeText(attr, '{entity} {attr}');\n                                    }\n                                }\n                                if (expr.kind == DataKind.Query) {\n                                    txt = ': (' + expr.subQuery.getConditionsText() + ')';\n                                }\n                                else {\n                                    txt = expr.getText();\n                                    if (this.model.isDateMacro(txt) || this.model.isTimeMacro(txt)) {\n                                        const macroText = txt.substring(3, txt.length - 2);\n                                        const res = i18n.getText(macroText);\n                                        txt = res || txt;\n                                    }\n                                }\n                            }\n                            if (pi > 0)\n                                condText += ' ';\n                            condText += txt;\n                        }\n                    }\n                }\n                if (condText) {\n                    if (i > 0 && result) {\n                        result += ' ' + conjText + ' ';\n                    }\n                    result += condText;\n                }\n            }\n            if (group.linkType == LinkType.None || group.linkType == LinkType.NotAll) {\n                result = 'not ( \" + result + \" )';\n            }\n            return result;\n        };\n        return getConditionGroupText(this.getRootCondition());\n    }\n    /**\n    * Retruns conditions text\n    */\n    getConditionsTextAsHtml() {\n        const model = this.getModel();\n        if (!model)\n            return '<div class=\"eqjs-query-text\"></div>';\n        const quoteExprText = (expr) => {\n            if (expr.kind == DataKind.Query) {\n                return `&lt;${expr.getText()}&gt;`;\n            }\n            else if (expr.kind == DataKind.List) {\n                return `[${expr.getText()}]`;\n            }\n            else if (expr.dataType == DataType.String\n                || expr.dataType == DataType.Memo\n                || expr.dataType == DataType.FixedChar) {\n                return `&quot;${expr.getText()}&quot;`;\n            }\n            else {\n                let txt = expr.getText();\n                if (this.model.isDateMacro(txt) || this.model.isTimeMacro(txt)) {\n                    const macroText = txt.substring(3, txt.length - 2);\n                    const res = i18n.getText(macroText);\n                    txt = res || txt;\n                }\n                return txt;\n            }\n        };\n        const getConditionGroupText = (group) => {\n            let result = '', conjKey = \"Conj\" + equtils.linkTypeToStr(group.linkType), conjText = `<span class=\"eqjs-query-text-conj\">${i18n.getText(conjKey)}</span>`, condText, i;\n            for (i = 0; i < group.getConditions().length; i++) {\n                condText = \"\";\n                let cond = group.getConditions()[i];\n                if (cond.enabled || typeof (cond.enabled) === \"undefined\") {\n                    if (cond.isGroup()) {\n                        condText = getConditionGroupText(cond);\n                        if (condText) {\n                            condText = \"(\" + condText + \")\";\n                        }\n                    }\n                    else {\n                        let opId = cond.getOperatorId();\n                        let operator = model.getOperatorById(opId);\n                        let parts = equtils.parseOperatorFormat(operator);\n                        let plen = parts.length;\n                        for (let pi = 0; pi < plen; pi++) {\n                            let part = parts[pi];\n                            let txt = part.text;\n                            if (part.type == \"expression\") {\n                                let expr = cond.expressions[part.index];\n                                if (expr.kind == DataKind.Attribute || expr.tag == ExprTag.EntityAttribute) {\n                                    let attr = model.getAttributeById(expr.value);\n                                    txt = `<span class=\"eqjs-query-text-attr\">${model.getAttributeText(attr, \"{entity} {attr}\")}</span>`;\n                                }\n                                else {\n                                    txt = `<span class=\"eqjs-query-text-expr\">${quoteExprText(expr)}</span>`;\n                                }\n                            }\n                            else if (part.type == \"operator\") {\n                                txt = `<span class=\"eqjs-query-text-op\">${txt}</span>`;\n                            }\n                            if (pi > 0)\n                                condText += \" \";\n                            condText += txt;\n                        }\n                    }\n                }\n                if (condText) {\n                    if (i > 0 && result) {\n                        result += \" \" + conjText + \" \";\n                    }\n                    result += condText;\n                }\n            }\n            if (group.linkType == LinkType.None || group.linkType == LinkType.NotAll) {\n                result = \"<span class=\\\"eqjs-query-text-conj\\\">not</span> ( \" + result + \" )\";\n            }\n            return result;\n        };\n        return `<div class=\"eqjs-query-text\">${getConditionGroupText(this.getRootCondition())}</div>`;\n    }\n    /**\n     * Gets an array of all entities used in the query.\n     */\n    getEntitiesInQuery() {\n        if (this.model.id !== this.id)\n            throw Error('Model mithmatch');\n        const entities = [];\n        const columns = this.getColumns();\n        for (let column of columns) {\n            if (!column.enabled)\n                continue;\n            this.addEntityByExpression(entities, column.expr);\n        }\n        const rootCond = this.getRootCondition();\n        this.fillEntitiesByCondtionGroup(entities, rootCond);\n        return entities;\n    }\n    fillEntitiesByCondtionGroup(entities, root) {\n        for (let condition of root.getConditions()) {\n            if (!condition.isGroup()) {\n                for (let expr of condition.expressions) {\n                    this.addEntityByExpression(entities, expr);\n                    if (expr.args) {\n                        for (let arg of expr.args) {\n                            this.addEntityByExpression(entities, arg);\n                        }\n                    }\n                }\n            }\n            else {\n                this.fillEntitiesByCondtionGroup(entities, condition);\n            }\n        }\n    }\n    addEntityByExpression(entities, expr) {\n        if (expr.tag !== ExprTag.EntityAttribute)\n            return;\n        const attrId = expr.baseAttrId || expr.value;\n        if (attrId) {\n            const attr = this.model.getAttributeById(attrId);\n            if (attr) {\n                if (attr.entity && utils.indexOfArrayItem(entities, attr.entity) < 0) {\n                    entities.push(attr.entity);\n                }\n            }\n        }\n    }\n    /**\n     * Builds and returns the path (actually the tree) between the entities used in the query.\n     */\n    buildQueryPath() {\n        let entity = this.model.getMainEntity() || this.model.rootEntity;\n        const tree = this.createTreeNodeFromEntity(entity);\n        tree.setParents();\n        return tree;\n    }\n    createTreeNodeFromEntity(entity) {\n        let tree = new Tree(entity);\n        for (let subEnentity of entity.subEntities) {\n            tree.addChild(this.createTreeNodeFromEntity(subEnentity));\n        }\n        return tree;\n    }\n}\n\nclass BrowserQueryStorage {\n    constructor(context) {\n        this.context = context;\n        console.warn('BrowserQueryStorage is used for managing queries');\n    }\n    init(options) {\n        let keyPrefix = 'eq';\n        if (options && options.keyPrefix) {\n            keyPrefix = options.keyPrefix;\n        }\n        this.queryListKey = keyPrefix + '-querylist';\n        this.queryKeyPrefix = keyPrefix;\n    }\n    getQueryList(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const itemsString = localStorage.getItem(this.queryListKey);\n                if (itemsString) {\n                    resolve(JSON.parse(itemsString));\n                }\n                resolve([]);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    newQuery(options) {\n        return new Promise((resolve, reject) => {\n            const query = new Query(this.context.getModel(), null, { context: this.context });\n            query.reset();\n            query.setDefaultName();\n            if (options) {\n                if (options.query) {\n                    query.loadFromData(options.query.toJSONData());\n                }\n                if (options.queryId) {\n                    query.setId(options.queryId);\n                }\n                if (options.name) {\n                    query.setName(options.name);\n                }\n                if (options.description) {\n                    query.setDescription(options.description);\n                }\n            }\n            this._saveQuery(query);\n            resolve(query.toJSONData());\n        });\n    }\n    loadQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const queryItem = localStorage.getItem(this.queryKeyPrefix + '-' + options.queryId);\n                if (queryItem) {\n                    resolve(JSON.parse(queryItem));\n                }\n                throw new Error('Query is not found: ' + options.queryId);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    saveQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const modelId = options.modelId || this.context.getModel().getId();\n                const query = options.query || this.context.getQuery();\n                this._saveQuery(query);\n                resolve(null);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    _saveQuery(query) {\n        let queryList = [];\n        const itemsString = localStorage.getItem(this.queryListKey);\n        if (itemsString) {\n            queryList = JSON.parse(itemsString);\n        }\n        let item = utils.findItemById(queryList, query.getId());\n        if (!item) {\n            item = { id: query.getId(), name: query.getName(), text: query.getDescription() };\n            queryList.push(item);\n        }\n        item.name = query.getName();\n        item.text = query.getDescription();\n        localStorage.setItem(this.queryListKey, JSON.stringify(queryList));\n        localStorage.setItem(this.queryKeyPrefix + '-' + query.getId(), query.toJSON());\n    }\n    removeQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const modelId = options.modelId || this.context.getModel().getId();\n                const queryId = options.queryId || this.context.getQuery().getId();\n                let queryList = [];\n                const itemsString = localStorage.getItem(this.queryListKey);\n                if (itemsString) {\n                    queryList = JSON.parse(itemsString);\n                }\n                queryList = queryList.filter(item => item.id != queryId);\n                localStorage.setItem(this.queryListKey, JSON.stringify(queryList));\n                localStorage.removeItem(this.queryKeyPrefix + '-' + queryId);\n                resolve();\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n}\n\nclass EqModelLoader {\n    constructor(context) {\n        this.context = context;\n        this.modelPromise = null;\n    }\n    init(options) {\n    }\n    getContext() {\n        return this.context;\n    }\n    createModelLoadingPromise() {\n        this.modelPromise = new Promise((resolve, reject) => {\n            this.modelLoadingResolveFunc = resolve;\n            this.modelLoadingRejectFunc = reject;\n        });\n    }\n    /**\n     * Returns the `Promise` of the model loading process\n     */\n    getModelPromise() {\n        return this.modelPromise\n            || Promise.reject(new Error(\"Model has been never loaded.\"));\n    }\n    startModelLoading(options) {\n        this.createModelLoadingPromise();\n        this.sendLoadModelRequest(options);\n        return this.modelPromise;\n    }\n}\n\nclass EqServerModelLoader extends EqModelLoader {\n    constructor(context) {\n        super(context);\n    }\n    init() {\n    }\n    sendLoadModelRequest(options) {\n        const context = this.getContext();\n        const http = context.getServices().getHttpClient();\n        const url = context.resolveEndpoint('GetModel', { modelId: options.modelId });\n        http.get(url)\n            .then((responseData) => {\n            if (!responseData.model) {\n                this.modelLoadingRejectFunc(new Error('Wrong response format for \"GetModel\" request'));\n            }\n            this.modelLoadingResolveFunc(responseData.model);\n        })\n            .catch(error => {\n            this.modelLoadingRejectFunc(error);\n        });\n    }\n}\n\nclass EqServerDataFetcher {\n    constructor(context) {\n        this.context = context;\n    }\n    fetchData(fetchOptions) {\n        const query = fetchOptions.query || this.context.getQuery();\n        const queryId = query.getId();\n        let requestData = {\n            'options': fetchOptions.options\n        };\n        if (typeof (fetchOptions.queryId) !== 'undefined') {\n            requestData.queryId = fetchOptions.queryId;\n        }\n        else {\n            requestData.query = query.toJSONData();\n        }\n        if (fetchOptions.debug) {\n            requestData.debug = fetchOptions.debug;\n        }\n        if (fetchOptions.chunk) {\n            requestData.chunk = fetchOptions.chunk;\n        }\n        if (fetchOptions.data) {\n            requestData.data = fetchOptions.data;\n        }\n        if (typeof (fetchOptions.aux) != 'undefined') {\n            requestData.aux = fetchOptions.aux;\n        }\n        const url = this.context.resolveEndpoint('FetchData', { modelId: query.getModel().getId(), queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then(data => data);\n    }\n}\n\nclass EqServerQuerySynchronizer {\n    constructor(context) {\n        this.context = context;\n    }\n    syncQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const ops = options.options || {};\n        let requestData = {\n            'query': query.toJSONData(),\n            'options': ops,\n        };\n        if (options.data) {\n            requestData.data = options.data;\n        }\n        const url = this.context.resolveEndpoint('SyncQuery', { modelId: query.getModel().getId(), queryId: query.getId() });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then(responseData => responseData);\n    }\n}\n\nclass EqServerValueListResolver {\n    constructor(context) {\n        this.context = context;\n    }\n    loadValueList(options) {\n        const modelId = options.modelId || this.context.getModel().getId();\n        const requestData = utils.assign({ modelId: modelId }, options.params);\n        const editorId = requestData.editorId;\n        const http = this.context.getServices().getHttpClient();\n        const url = this.context.resolveEndpoint('GetValueList', { modelId: modelId, listId: editorId });\n        let queryParams = {};\n        if (options && options.params && options.params.queryParams) {\n            queryParams = options.params.queryParams;\n        }\n        return http.get(url, { queryParams: queryParams })\n            .then((responseData) => {\n            if (responseData && responseData.values) {\n                return responseData.values;\n            }\n            else {\n                throw new Error('Wrong response format. No \"values\" property');\n            }\n        });\n    }\n}\n\nclass EqQueryFileLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    getQueryFile(options) {\n        const query = options.query || this.context.getQuery();\n        const url = this.context.resolveEndpoint('GetQueryFile', { modelId: query.getModel().getId(),\n            format: options.format || 'xml' });\n        const http = this.context.getServices().getHttpClient();\n        const actionResult = http.post(url, {\n            query: query.toJSONData()\n        });\n        const request = actionResult.getRequest();\n        return actionResult.then((responseData) => {\n            const blob = new Blob([responseData]);\n            const dispositionHeader = request.getXMLHttpRequest().getResponseHeader(\"Content-Disposition\");\n            let fileName = dispositionHeader\n                ? dispositionHeader.match(/filename=\"(.*)\"/)[1]\n                : 'query.json';\n            if (options.fileName) {\n                fileName = options.fileName\n                    + fileName.substring(fileName.lastIndexOf('.'));\n            }\n            if (window.navigator['msSaveOrOpenBlob']) {\n                // Internet Explorer\n                window.navigator['msSaveOrOpenBlob'](blob, fileName);\n            }\n            else {\n                const a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style.display = \"none\";\n                a.href = window.URL.createObjectURL(blob);\n                a.download = fileName;\n                a.click();\n                window.URL.revokeObjectURL(a.href);\n                document.body.removeChild(a);\n            }\n        });\n    }\n    uploadQueryFile(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const url = this.context.resolveEndpoint('UploadQueryFile', { modelId: query.getModel().getId() });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, options.data, {\n            dataType: 'form-data'\n        })\n            .then(responseData => {\n            return responseData.query;\n        });\n    }\n}\n\nclass EqAggregatesContainer {\n    constructor(context) {\n        this.context = context;\n        this.levels = {};\n    }\n    getAggregateData(level, groupKey) {\n        return new Promise((resolve, reject) => {\n            const processFunc = (data) => {\n                // map values\n                const keyStr = this.groupKeyToStr(groupKey);\n                const value = data.get(keyStr);\n                if (value) {\n                    resolve(value);\n                }\n                else {\n                    reject(`Can't find data for ${keyStr}`);\n                }\n            };\n            const desc = this.getLevelDesc(level, false);\n            if (desc && desc.data) {\n                processFunc(desc.data);\n            }\n            else {\n                desc.receivedCallbacks.push(processFunc);\n            }\n        });\n    }\n    setAggregateData(level, data) {\n        const desc = this.getLevelDesc(level, true);\n        desc.data = data;\n        if (desc.receivedCallbacks) {\n            for (const callback of desc.receivedCallbacks) {\n                callback(desc.data);\n            }\n        }\n        desc.receivedCallbacks = [];\n    }\n    updateAggregateData(level, groupKey, values) {\n        const desc = this.getLevelDesc(level, true);\n        const key = this.groupKeyToStr(groupKey);\n        desc.data.set(key, values);\n    }\n    groupKeyToStr(groupKey) {\n        return JSON.stringify(groupKey);\n    }\n    getLevelDesc(level, createIfNotExists) {\n        let desc = this.levels[level];\n        if (!desc && createIfNotExists) {\n            desc = {\n                receivedCallbacks: [],\n                data: new Map()\n            };\n            this.levels[level] = desc;\n        }\n        return desc;\n    }\n    clear() {\n        this.levels = [];\n    }\n}\nclass DefaultAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        this.aggrs = null;\n    }\n    getAggrContainer() {\n        return this.aggrs;\n    }\n    calculate(options) {\n        console.warn(\"Grand totals and sub totals aggregation calculation can be used in Enterprise version only\");\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        this.aggrs = new EqAggregatesContainer(this.context);\n        const query = this.context.createQuery();\n        query.loadFromData(this.context.getQuery().toJSONData());\n        const settings = this.context.getQuery().getAggregationSettings();\n        const aggrColId = settings.getAggregates().map(a => a.colId);\n        const columns = query.getColumns()\n            .filter(col => aggrColId.indexOf(col.id) < 0);\n        for (let i = 0; i < columns.length; i++) {\n            columns[i].enabled = false;\n        }\n        if (settings.hasGrandTotals()) {\n            this.aggrs.setAggregateData(0, new Map());\n            if (options.resultObtained)\n                options.resultObtained({}, 0);\n        }\n        const groups = settings.getGroups();\n        for (let level = 1; level <= groups.length && level <= options.maxLevel; level++) {\n            this.aggrs.setAggregateData(level, new Map());\n            if (options.resultObtained)\n                options.resultObtained({}, level);\n        }\n        return Promise.resolve();\n    }\n    needRecalculation() {\n        return true;\n    }\n    reset() {\n    }\n}\n\nclass EqServiceProvider {\n    static getInstance() {\n        if (!EqServiceProvider._instance) {\n            EqServiceProvider._instance = new EqServiceProvider();\n        }\n        return EqServiceProvider._instance;\n    }\n    constructor() {\n        this.modelLoader = null;\n        this.queryStorage = null;\n        this.querySynchronizer = null;\n        this.dataFetcher = null;\n        this.valueListResolver = null;\n        this.queryFileLoader = null;\n        this.aggrCalculator = null;\n        this.services = {};\n        this.httpClient = new HttpClient();\n        this.httpClient.defaultHeaders['x-eqjs-version'] = '7.3.0';\n        this.modelResolver = (_) => new DataModel();\n        this.modelStorageResolver = null;\n        this.queryResolver = (context) => new Query(context.getModel(), null, { context: context });\n        this.modelLoaderResolver = (context) => new EqServerModelLoader(context);\n        this.queryStorageResolver = (context) => new BrowserQueryStorage(context);\n        this.querySynchronizerResolver = (context) => new EqServerQuerySynchronizer(context);\n        this.vlrResolver = (context) => new EqServerValueListResolver(context);\n        this.dataFetcherResolver = (context) => new EqServerDataFetcher(context);\n        this.queryFileLoaderResolver = (context) => new EqQueryFileLoader(context);\n        this.aggrCalculatoResolver = (context) => new DefaultAggregatesCalculator(context);\n    }\n    reset() {\n        this.modelStorage = null;\n        this.modelLoader = null;\n        this.queryStorage = null;\n        this.querySynchronizer = null;\n    }\n    getHttpClient() {\n        return this.httpClient;\n    }\n    createDataModel(context) {\n        if (!this.modelResolver) {\n            throw 'Model resolver is not defined';\n        }\n        return this.modelResolver(context);\n    }\n    createQuery(context) {\n        if (!this.queryResolver) {\n            throw 'Query resolver is not defined';\n        }\n        return this.queryResolver(context);\n    }\n    getModelLoader(context) {\n        if (!this.modelLoader) {\n            if (!this.modelLoaderResolver) {\n                throw 'ModelLoaderResolver is not defined';\n            }\n            this.modelLoader = this.modelLoaderResolver(context);\n        }\n        return this.modelLoader;\n    }\n    getModelStorage(context) {\n        if (!this.modelStorage) {\n            if (!this.modelStorageResolver) {\n                throw 'ModelStorageResolver is not defined';\n            }\n            this.modelStorage = this.modelStorageResolver(context);\n        }\n        return this.modelStorage;\n    }\n    getQueryStorage(context) {\n        if (!this.queryStorage) {\n            if (!this.queryStorageResolver) {\n                throw 'QueryStorageResolver is not defined';\n            }\n            this.queryStorage = this.queryStorageResolver(context);\n        }\n        return this.queryStorage;\n    }\n    getQuerySynchronizer(context) {\n        if (!this.querySynchronizer) {\n            if (!this.querySynchronizerResolver) {\n                throw 'QuerySynchronizerResolver is not defined';\n            }\n            this.querySynchronizer = this.querySynchronizerResolver(context);\n        }\n        return this.querySynchronizer;\n    }\n    getDataFetcher(context) {\n        if (!this.dataFetcher) {\n            if (!this.dataFetcherResolver) {\n                throw 'DataFetcherResolver is not defined';\n            }\n            this.dataFetcher = this.dataFetcherResolver(context);\n        }\n        return this.dataFetcher;\n    }\n    getValueListResolver(context) {\n        if (!this.valueListResolver) {\n            if (!this.vlrResolver) {\n                throw 'Resolver for ValueListResolver is not defined';\n            }\n            this.valueListResolver = this.vlrResolver(context);\n        }\n        return this.valueListResolver;\n    }\n    getQueryFileLoader(context) {\n        if (!this.queryFileLoader) {\n            if (!this.queryFileLoaderResolver) {\n                throw 'Resolver for QueryFileLoader is not defined';\n            }\n            this.queryFileLoader = this.queryFileLoaderResolver(context);\n        }\n        return this.queryFileLoader;\n    }\n    getAggregatesCalculator(context) {\n        if (!this.aggrCalculator) {\n            if (!this.aggrCalculatoResolver) {\n                throw 'Resolver for AggregatesCalculator is not defined';\n            }\n            this.aggrCalculator = this.aggrCalculatoResolver(context);\n        }\n        return this.aggrCalculator;\n    }\n    registerDataModelResolver(resolver) {\n        this.modelResolver = resolver;\n    }\n    registerQueryResolver(resolver) {\n        this.queryResolver = resolver;\n    }\n    registerModelLoaderResolver(resolver) {\n        this.modelLoaderResolver = resolver;\n    }\n    registerModelStorageResolver(resolver) {\n        this.modelStorageResolver = resolver;\n    }\n    registerQueryStorageResolver(resolver) {\n        this.queryStorageResolver = resolver;\n    }\n    registerDataFetcherResolver(resolver) {\n        this.dataFetcherResolver = resolver;\n    }\n    registerQuerySyncronizerResolver(resolver) {\n        this.querySynchronizerResolver = resolver;\n    }\n    registerValueListResolver(resolver) {\n        this.vlrResolver = resolver;\n    }\n    registerQueryFileLoaderResolver(resolver) {\n        this.queryFileLoaderResolver = resolver;\n    }\n    registerAggregatesCalculator(resolver) {\n        this.aggrCalculatoResolver = resolver;\n    }\n    registerService(serviceId, serviceResolver) {\n        this.services[serviceId] = serviceResolver;\n    }\n    getService(serviceId) {\n        const serviceResolver = this.services[serviceId];\n        if (serviceResolver) {\n            return serviceResolver();\n        }\n    }\n}\n\n/** Represents groups of widgets. Used to identify widgets */\nvar WidgetGroup;\n(function (WidgetGroup) {\n    /** None widget group. */\n    WidgetGroup[WidgetGroup[\"None\"] = 0] = \"None\";\n    /** The group of widgets responsible for the Model. */\n    WidgetGroup[WidgetGroup[\"Model\"] = 1] = \"Model\";\n    /** The group of widgets responsible for the Query. */\n    WidgetGroup[WidgetGroup[\"Query\"] = 2] = \"Query\";\n    /** The group of widgets responsible for the Result. */\n    WidgetGroup[WidgetGroup[\"Result\"] = 4] = \"Result\";\n    /** The group of widgets responsible for the statement. */\n    WidgetGroup[WidgetGroup[\"Statement\"] = 8] = \"Statement\";\n    /** The group of widgets responsible for tracking Query status. */\n    WidgetGroup[WidgetGroup[\"QueryStatus\"] = 16] = \"QueryStatus\";\n    /** All. */\n    WidgetGroup[WidgetGroup[\"All\"] = 65535] = \"All\";\n})(WidgetGroup || (WidgetGroup = {}));\n\n//possibly move it to the EasyData lib on the next update\nvar EmptyChunk = {\n    offset: 0,\n    limit: 0,\n    needTotal: false\n};\n\nclass EqServerExporter {\n    constructor(context) {\n        this.context = context;\n    }\n    setFormat(format, responseType) {\n        this.format = format;\n        this.responseType = responseType;\n    }\n    export(exportOptions) {\n        exportOptions = exportOptions || {};\n        const http = this.context.getServices().getHttpClient();\n        const format = this.format || \"csv\";\n        const query = exportOptions.query || this.context.getQuery();\n        const modelId = query.getModel().getId();\n        let requestData = {\n            'settings': exportOptions.settings,\n            'chunk': EmptyChunk\n        };\n        if (typeof (exportOptions.queryId) !== 'undefined') {\n            requestData.queryId = exportOptions.queryId;\n        }\n        else {\n            requestData.query = query.toJSONData();\n        }\n        if (exportOptions.data) {\n            requestData.data = exportOptions.data;\n        }\n        if (exportOptions.options) {\n            requestData.options = exportOptions.options;\n        }\n        const url = this.context.resolveEndpoint('ExportResult', { modelId: modelId, format: format });\n        const actionResult = http.post(url, requestData, { responseType: this.responseType });\n        const request = actionResult.getRequest();\n        return actionResult.then((responseData) => {\n            const blob = new Blob([responseData]);\n            const dispositionHeader = request.getXMLHttpRequest().getResponseHeader(\"Content-Disposition\");\n            const filename = dispositionHeader\n                ? dispositionHeader.match(/filename=\"(.*)\"/)[1]\n                : 'export-data.' + format;\n            if (window.navigator['msSaveOrOpenBlob']) {\n                // Internet Explorer\n                window.navigator['msSaveOrOpenBlob'](blob, filename);\n            }\n            else {\n                var a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style.display = \"none\";\n                a.href = window.URL.createObjectURL(blob);\n                a.download = filename;\n                a.click();\n                window.URL.revokeObjectURL(a.href);\n                document.body.removeChild(a);\n            }\n        });\n    }\n}\n\nclass EasyQueryDataLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    loadChunk(chunk) {\n        // We have to refactor page logic in view to make it simplier to integrate \n        // different grids\n        this.dataLoadPromise = new Promise((resolve, reject) => {\n            const fetchOptions = {\n                chunk: chunk,\n                success: (result) => {\n                    const dataTable = new EasyDataTable({\n                        loader: this.context.dataLoader, //TODO: Why not just `this`?\n                        chunkSize: this.context.resultTable.chunkSize\n                    });\n                    const resultSet = result.resultSet;\n                    for (const col of resultSet.cols) {\n                        dataTable.columns.add(col);\n                    }\n                    dataTable.setTotal(result.meta.totalRecords);\n                    for (const row of resultSet.rows) {\n                        dataTable.addRow(row);\n                    }\n                    let totalRecords = 0;\n                    if (result.meta && result.meta.totalRecords) {\n                        totalRecords = result.meta.totalRecords;\n                    }\n                    resolve({\n                        table: dataTable,\n                        total: totalRecords,\n                        hasNext: !chunk.needTotal || chunk.offset + chunk.limit < totalRecords\n                    });\n                },\n                error: (error) => reject(error)\n            };\n            if (this.context.debugMode) {\n                fetchOptions.debug = `Data Chunk. Offset: ${chunk.offset}`;\n            }\n            this.context.fetchDataChunk(fetchOptions);\n        });\n        return this.dataLoadPromise;\n    }\n}\n\nvar EqActionResult;\n(function (EqActionResult) {\n    EqActionResult[EqActionResult[\"Error\"] = 0] = \"Error\";\n    EqActionResult[EqActionResult[\"Success\"] = 1] = \"Success\";\n})(EqActionResult || (EqActionResult = {}));\n\nvar EqAction;\n(function (EqAction) {\n    EqAction[\"LoadModel\"] = \"LoadModel\";\n    EqAction[\"LoadQuery\"] = \"LoadQuery\";\n    EqAction[\"LoadQueryList\"] = \"LoadQueryList\";\n    EqAction[\"NewQuery\"] = \"NewQuery\";\n    EqAction[\"SaveQuery\"] = \"SaveQuery\";\n    EqAction[\"RemoveQuery\"] = \"RemoveQuery\";\n    EqAction[\"SyncQuery\"] = \"SyncQuery\";\n    EqAction[\"FetchData\"] = \"FetchData\";\n    EqAction[\"GetValueList\"] = \"GetValueList\";\n    EqAction[\"ExportResult\"] = \"ExportResult\";\n    EqAction[\"GetQueryFile\"] = \"GetQueryFile\";\n    EqAction[\"UploadQueryFile\"] = \"UploadQueryFile\";\n})(EqAction || (EqAction = {}));\n\n/**\n * Encapsulates all information about EasyQuery components on some webpage\n * and provides some basic operation over those components\n * Each context includes the following main components:\n *  - one data model,\n *  - one query,\n *  - one result set\n *  - several UI widgets.\n */\nclass EqContext {\n    constructor() {\n        this.options = {\n            syncSortOrderWithColumnsOrder: true,\n            attributeFormat: '{entity} {attr}',\n            columnTitleFormat: null //means it will be the same as attributeFormat\n        };\n        this.servicesInitialized = false;\n        this.internalListCache = {};\n        this.loadModelOnStart = true;\n        this.loadQueryOnStart = false;\n        this.useStoredQueryOnFetch = false;\n        this.debugMode = false;\n        this._backendInfo = {\n            type: 'EQN-ANC',\n            subType: 'asp-net-core-razor'\n        };\n        //----------- endpoint processing functions --------------\n        this.endpointVarsRegex = /\\{.*?\\}/g;\n        this.elasticPaging = false;\n        this._predefinedListRequestHandlers = {\n            '_DSDE': (params, onResult) => {\n                const data = this.getModel().getAllDateMacros()\n                    .map(macroId => {\n                    return { id: '${{' + macroId + '}}', text: i18n.getText(macroId) };\n                });\n                onResult(data);\n                return true;\n            },\n            '_DSTE': (params, onResult) => {\n                const data = this.getModel().getAllTimeMacros()\n                    .map(macroId => {\n                    return { id: '${{' + macroId + '}}', text: i18n.getText(macroId) };\n                });\n                onResult(data);\n                return true;\n            }\n        };\n        this._listRequestHandler = (options, onResult) => {\n            if (options == null || !options.listName)\n                return;\n            const query = this.getQuery();\n            const params = utils.assign({ listName: options.listName }, options.editorParams);\n            const reqParams = {};\n            const attrPattern = /@{{(.+?)}}/;\n            for (const prop in params) {\n                if (!params[prop])\n                    continue;\n                let match = params[prop].match(attrPattern);\n                if (match) {\n                    let paramValue = query.getOneValueForAttr(match[1]);\n                    if (!paramValue) {\n                        paramValue = '';\n                    }\n                    reqParams[prop] = params[prop].replace(attrPattern, paramValue);\n                }\n            }\n            const requestParams = {\n                listName: reqParams.listName,\n                editorId: options.editorId,\n                queryParams: reqParams\n            };\n            let list = this.getListFromCache(options);\n            if (list && list.length > 0) {\n                onResult(list);\n                return;\n            }\n            let processed = false;\n            const predefinedHandler = this._predefinedListRequestHandlers[options.editorId];\n            if (predefinedHandler) {\n                processed = predefinedHandler(options, onResult);\n            }\n            if (!processed && this.clientListRequestHandler) {\n                processed = this.clientListRequestHandler(options, onResult);\n            }\n            if (!processed) {\n                this.loadValueList({\n                    params: requestParams,\n                    success: (data) => {\n                        if (data) {\n                            this.addListToCache(options, data);\n                        }\n                        onResult(data);\n                    },\n                    error: (message) => {\n                        onResult(null);\n                    }\n                });\n            }\n        };\n        this.baseEndpoint = 'api/easyquery';\n        this.eqServices = EqServiceProvider.getInstance();\n        this.widgets = new Array();\n        this.eventEmitter = new EventEmitter(this);\n        this.exporters = new Map();\n        this.endpoints = new Map();\n        this.dataLoader = new EasyQueryDataLoader(this);\n        this.resultTable = new EasyDataTable({\n            loader: this.dataLoader,\n            onUpdate: this.onResultTableUpdate.bind(this)\n        });\n        this.resultTable.id = 'ResultTable';\n        this.errorHandlerId = this.addEventListener('error', (context, status) => {\n            status.result = EqActionResult.Error;\n            const msgTitle = status.action ? status.action + ' error' : 'Error';\n            let msgText = status.text ? status.text : '';\n            if (status.sourceError && status.sourceError.message !== msgText) {\n                msgText += '\\n' + status.sourceError;\n            }\n            console.error(msgTitle + ': ' + msgText);\n        });\n    }\n    getServices() {\n        return this.eqServices;\n    }\n    /**\n    * Activates `Enterprise` functionality of the library. Works only with @easyquery/enterprise packag and a proper license key.\n    * @param keyOrInitCallback The license key or a callback wich is called after\n    * loading the license key from the back-end.\n    * If the callback function is called useEnterprise will try to get the license key from {base}/lck endpoint\n    *\n    * @example\n    * context.useEnterprise('license key');\n    * //or\n    * context.useEnterprise(() => {\n    *   //further logic\n    *\tview.init(options);\n    * });\n    */\n    useEnterprise(keyOrInitCallback) {\n        console.warn('This method does nothing and should not be called in the Community version of the library');\n    }\n    registerExporter(format, resolver) {\n        this.exporters.set(format, resolver);\n    }\n    registerServerExporter(format, responseType) {\n        this.registerExporter(format, (context) => {\n            const exporter = new EqServerExporter(context);\n            exporter.setFormat(format, responseType);\n            return exporter;\n        });\n    }\n    getExporter(format) {\n        const resolver = this.exporters.get(format);\n        if (resolver) {\n            return resolver(this);\n        }\n        return null;\n    }\n    getExportFormats() {\n        return Array.from(this.exporters.keys());\n    }\n    addDefaultExporters() {\n        this.registerServerExporter('csv', 'arraybuffer');\n        this.registerServerExporter('excel-html', 'arraybuffer');\n    }\n    resolveEndpoint(endpointKey, options) {\n        options = options || {};\n        let result = this.endpoints.get(endpointKey);\n        if (!result) {\n            throw endpointKey + ' endpoint is not defined';\n        }\n        let matches = result.match(this.endpointVarsRegex);\n        if (matches) {\n            for (let match of matches) {\n                let opt = match.substring(1, match.length - 1);\n                let optVal = options[opt];\n                if (!optVal) {\n                    if (opt == 'modelId') {\n                        optVal = this.getModel().getId();\n                    }\n                    else if (opt == 'queryId') {\n                        optVal = this.getQuery().getId();\n                    }\n                    else {\n                        throw `Parameter [${opt}] is not defined`;\n                    }\n                }\n                result = result.replace(match, optVal);\n            }\n        }\n        return result;\n    }\n    setEndpoint(key, value) {\n        this.endpoints.set(key, value);\n    }\n    setEndpointIfNotExist(key, value) {\n        if (!this.endpoints.has(key))\n            this.endpoints.set(key, value);\n    }\n    setDefaultEndpoints(endpointBase) {\n        this.setEndpointIfNotExist('GetModel', equtils.combinePath(endpointBase, 'models/{modelId}'));\n        this.setEndpointIfNotExist('GetQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('SaveQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('SyncQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}/sync'));\n        this.setEndpointIfNotExist('NewQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries'));\n        this.setEndpointIfNotExist('RemoveQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('GetQueryList', equtils.combinePath(endpointBase, 'models/{modelId}/queries'));\n        this.setEndpointIfNotExist('FetchData', equtils.combinePath(endpointBase, 'models/{modelId}/fetch'));\n        this.setEndpointIfNotExist('GetValueList', equtils.combinePath(endpointBase, 'models/{modelId}/valuelists/{listId}'));\n        this.setEndpointIfNotExist('ExportResult', equtils.combinePath(endpointBase, 'models/{modelId}/export/{format}'));\n        this.setEndpointIfNotExist('GetQueryFile', equtils.combinePath(endpointBase, 'models/{modelId}/getqueryfile/{format}'));\n        this.setEndpointIfNotExist('UploadQueryFile', equtils.combinePath(endpointBase, 'models/{modelId}/uploadqueryfile'));\n    }\n    initStart() {\n        this.servicesInitialized = true;\n    }\n    /**\n     * Initializes the context\n     * @param options\n     */\n    init(options) {\n        if (!this.servicesInitialized)\n            this.initStart();\n        options = options || {};\n        this.setOptions(options);\n        if (typeof (options.debugMode) !== 'undefined') {\n            this.debugMode = options.debugMode;\n        }\n        if (typeof (options.chunkSize) !== 'undefined') {\n            this.resultTable.chunkSize = options.chunkSize;\n        }\n        if (typeof (options.elasticPaging) !== 'undefined') {\n            this.elasticPaging = options.elasticPaging;\n        }\n        if (options.listCache) {\n            this.setExternalListCache(options.listCache);\n        }\n        if (options.locale) {\n            i18n.setCurrentLocale(options.locale);\n        }\n        if (options.localeSettings) {\n            i18n.updateLocaleSettings(options.localeSettings);\n        }\n        if (options.endpoint) {\n            this.baseEndpoint = options.endpoint;\n            console.warn('The `endpoint` option is deprecated.\\n'\n                + 'Please use `context.useEndpoint(endpointURL)` function instead.');\n        }\n        this.setDefaultEndpoints(this.baseEndpoint);\n        if (options.modelStorageResolver) {\n            const eqServices = this.getServices();\n            eqServices.registerModelStorageResolver(options.modelStorageResolver);\n        }\n        this.loadQueryOnStart = false;\n        if (options.loadQueryOnStart) {\n            this.loadQueryOnStart = options.loadQueryOnStart;\n        }\n        this.loadModelOnStart = true;\n        if (typeof options.loadModelOnStart !== 'undefined') {\n            this.loadModelOnStart = options.loadModelOnStart;\n        }\n        if (options.handlers) {\n            if (options.handlers.onInit) {\n                this.addEventListener('ready', options.handlers.onInit);\n            }\n            if (options.handlers.afterLoadModel) {\n                this.addEventListener('loadModel', options.handlers.afterLoadModel);\n            }\n            if (options.handlers.afterLoadQuery) {\n                this.addEventListener('loadQuery', options.handlers.afterLoadQuery);\n            }\n            if (options.handlers.afterSyncQuery) {\n                this.addEventListener('syncQuery', options.handlers.afterSyncQuery);\n            }\n            if (options.handlers.afterFetchData) {\n                this.addEventListener('fetchData', options.handlers.afterFetchData);\n            }\n            if (options.handlers.afterExportResult) {\n                this.addEventListener('exportResult', options.handlers.afterExportResult);\n            }\n            if (options.handlers.onProcessStart) {\n                this.addEventListener('processStart', options.handlers.onProcessStart);\n            }\n            if (options.handlers.onProcessEnd) {\n                this.addEventListener('processEnd', options.handlers.onProcessEnd);\n            }\n            if (options.handlers.onError) {\n                this.removeEventListener('error', this.errorHandlerId);\n                this.addEventListener('error', options.handlers.onError);\n            }\n            if (options.handlers.onListRequest) {\n                this.clientListRequestHandler = options.handlers.onListRequest;\n            }\n            if (options.handlers.beforeLoadModel) {\n                this.beforeLoadModel = options.handlers.beforeLoadModel;\n            }\n            if (options.handlers.beforeLoadQuery) {\n                this.beforeLoadQuery = options.handlers.beforeLoadQuery;\n            }\n            if (options.handlers.beforeSyncQuery) {\n                this.beforeSyncQuery = options.handlers.beforeSyncQuery;\n            }\n            if (options.handlers.beforeFetchData) {\n                this.beforeFetchData = options.handlers.beforeFetchData;\n            }\n            if (options.handlers.beforeExportResult) {\n                this.beforeExportResult = options.handlers.beforeExportResult;\n            }\n        }\n        this.initialQuery = options.initialQuery;\n        this.defaultQueryId = options.defaultQueryId || '';\n        this.defaultModelId = options.defaultModelId || '__default';\n        const modelLoader = this.eqServices.getModelLoader(this);\n        modelLoader.init(options);\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        queryStorage.init(options);\n        if (options.useDefaultExporters !== false) {\n            this.addDefaultExporters();\n        }\n        if (options.serverExporters) {\n            this.exporters.clear();\n            for (const format of options.serverExporters) {\n                this.registerServerExporter(format, \"arraybuffer\");\n            }\n        }\n        const query = this.getQuery();\n        if (options.defaultQueryId) {\n            query.setId(options.defaultQueryId);\n        }\n        //init widgets\n        this.widgets.forEach((widget) => {\n            let widgetOptions = {};\n            if (options.widgets && options.widgets[widget.getWidgetType()]) {\n                widgetOptions = options.widgets[widget.getWidgetType()];\n            }\n            widget.init(this, widgetOptions);\n        });\n        if (this.loadModelOnStart) {\n            this.loadDefaultModel();\n        }\n        else {\n            this.fireEvent('ready');\n        }\n    }\n    setOptions(options) {\n        utils.assign(this.options, options);\n    }\n    get backendInfo() {\n        return this._backendInfo;\n    }\n    /**\n     * Sets endpoint for all EasyQuery actions. Should be called before `init` and\n     * `useEnterprise` methods\n     * @param endpoint\n     * @example\n     * ```\n     * view.getContext()\n     *     .useEndpoint('/api/easyquery')\n     *     .useEnterprise(function () {\n     *          view.init();\n     *     });\n     * ```\n     */\n    useEndpoint(endpoint) {\n        this.baseEndpoint = endpoint;\n        return this;\n    }\n    /**\n     * Allows to specify the type of backend service.\n     *\n     * @param backendInfo - the structure that contains information about the app used on the backend\n     * Possible values for `ptag` property: 'EQN-ANC' - ASP.NET Core or 'EQN-ASP' - for ASP.NET 4 backend\n     */\n    useBackend(backendInfo) {\n        if (backendInfo.type) {\n            this._backendInfo.type = backendInfo.type;\n        }\n        if (backendInfo.subType) {\n            this._backendInfo.subType = backendInfo.subType;\n        }\n        else {\n            switch (this._backendInfo.type) {\n                case 'EQN-ANC':\n                    this._backendInfo.subType = 'asp-net-core-razor';\n                    break;\n                case 'EQN-ASP':\n                    this._backendInfo.subType = 'asp-net-4-mvc';\n                    break;\n                default:\n                    this._backendInfo.subType = 'other';\n                    break;\n            }\n        }\n        return this;\n    }\n    /**\n     * Add a new widget to the context.\n     * After that the widget will start to receive messages from other context components.\n     * @param widget\n     */\n    addWidget(widget) {\n        this.widgets.push(widget);\n    }\n    /**\n     * Returns all widgets with current type.\n     * @param widgetType The widget type\n     */\n    getAllWidgetsByType(widgetType) {\n        return this.widgets\n            .filter(widget => widget.getWidgetType() === widgetType);\n    }\n    /**\n     * Returns first registerd widget with current type\n     * @param widgetType The widget type\n     */\n    getWidgetByType(widgetType) {\n        const widgets = this.getAllWidgetsByType(widgetType);\n        return widgets.length > 0 ? widgets[0] : null;\n    }\n    /**\n     * This method is called automatically when some change was made either in context's data model or query\n     * @param groups\n     */\n    refreshWidgets(groups = WidgetGroup.All) {\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.refresh();\n            }\n        });\n    }\n    /**\n     * Register a new handler for 'query changed' event\n     * @param callback\n     */\n    addQueryChangedCallback(callback) {\n        this.getQuery().addChangedCallback(callback);\n    }\n    /**\n     * Removes the function from the list of registerd handlers for 'query changed' event\n     * @param callback\n     */\n    removeQueryChangedCallback(callback) {\n        this.getQuery().removeChangedCallback(callback);\n    }\n    /**\n     * Creates a new query object using the current instance of EqServices\n     */\n    createQuery() {\n        return this.eqServices.createQuery(this);\n    }\n    /**\n     * Gets the current query\n     */\n    getQuery() {\n        if (!this.query) {\n            if (!this.servicesInitialized) {\n                throw new Error(\"Can't create query until the context is initialized\");\n            }\n            this.query = this.createQuery();\n        }\n        return this.query;\n    }\n    /**\n     * Gets the current data model\n     */\n    getModel() {\n        if (!this.dataModel) {\n            this.dataModel = this.eqServices.createDataModel(this);\n        }\n        return this.dataModel;\n    }\n    /**\n     * Sets the content of the current data model\n     */\n    loadModelFromData(modelPlainData) {\n        this.getQuery().loadModelData(modelPlainData);\n        this.dataModel = this.getQuery().getModel();\n    }\n    /**\n     * Sets the ID of the default model\n     * @param modelId\n     */\n    setDefaultModelId(modelId) {\n        this.defaultModelId = modelId;\n    }\n    /**\n     * Notifies context components about starting of some long process (e.g. model loading)\n     * This method raises onProcessStart event in the context and all its widgets\n     * @param message\n     * @param groups\n     */\n    startProcess(message, groups) {\n        this.eventEmitter.fire('processStart', message);\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.onProcessStart();\n            }\n        });\n    }\n    /**\n     * Notifies all context components about the finishing of some long process\n     * @param status\n     * @param groups\n     */\n    endProcess(status, groups) {\n        this.eventEmitter.fire('processEnd', status);\n        if (status.result === EqActionResult.Error) {\n            this.throwError(status);\n        }\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.onProcessEnd();\n            }\n        });\n    }\n    /**\n     * Throws the error passed in the function parameter.\n     * If onError event handler is defined - we call that method.\n     * Otherwise - just place the error message to the browser console.\n     * @param status an instance of ActionStatus inteface that represents the action on which the error occurred\n     */\n    throwError(status) {\n        status.result = EqActionResult.Error;\n        this.eventEmitter.fire('error', status);\n    }\n    /**\n     * If `defaultModelId` property is define - this method calls `loadModel` function in the broker\n     * to load the model with such ID.\n     */\n    loadDefaultModel() {\n        this.loadModel({\n            modelId: this.defaultModelId,\n            silent: true,\n            success: () => {\n                this.refreshWidgets(WidgetGroup.Model);\n                let query = this.getQuery();\n                this.fireEvent('initialModelLoad');\n                if (this.initialQuery) {\n                    query.loadFromData(this.initialQuery, {\n                        changeStatus: false\n                    });\n                }\n                if (this.loadQueryOnStart) {\n                    this.loadQuery({\n                        queryId: this.defaultQueryId,\n                        modelId: this.defaultModelId,\n                        success: () => {\n                            //if we load query on start - then we should throw the 'ready' event only after its successful loading\n                            this.throwReady();\n                        },\n                        error: () => {\n                            //if the default query can't be loaded - we still throw the 'ready' event\n                            this.throwReady();\n                        }\n                    });\n                }\n                else {\n                    this.throwReady();\n                }\n            }\n        });\n    }\n    /**\n     * Refreshes all widgets and raises 'ready' event\n     */\n    throwReady() {\n        this.refreshWidgets(WidgetGroup.Query);\n        this.fireEvent('ready');\n    }\n    /**\n     * Clears the content of the current query\n     */\n    clearQuery() {\n        const query = this.getQuery();\n        query.clear();\n        query.fireChangedEvent({\n            part: QueryChangePart.All\n        });\n    }\n    /**\n     * Clears all query results (the data set and the statement, if any)\n     */\n    clearResult() {\n        this.resultTable.clear(); // do not set resultTable to null. Just clear\n        this.resultStatement = null;\n        this.resultContent = null;\n    }\n    /**\n     * Sets the external 'list cache' provider - an object which implements `ExternalListCache` inteface\n     * @param cache\n     */\n    setExternalListCache(cache) {\n        this.externalListCache = cache;\n    }\n    getListFromCache(params) {\n        const key = this.getListCacheKey(params);\n        if (this.externalListCache) {\n            return this.externalListCache.get(key);\n        }\n        else {\n            return this.internalListCache[key];\n        }\n    }\n    getListCacheKey(params) {\n        let key = params.listName == 'SQL' ? 'SQL_' + params.editorId : params.listName;\n        if (params.queryParams) {\n            key += '_' + Object.keys(params.queryParams).filter(k => k != 'listName')\n                .map(k => params.queryParams[k])\n                .join('_');\n        }\n        return key;\n    }\n    addListToCache(params, list) {\n        const key = this.getListCacheKey(params);\n        if (this.externalListCache) {\n            this.externalListCache.set(key, list);\n        }\n        else {\n            this.internalListCache[key] = list;\n        }\n    }\n    /**\n     * Clears the current list cache.\n     */\n    resetListCache() {\n        if (this.externalListCache) {\n            this.externalListCache.clear();\n        }\n        else {\n            this.internalListCache = {};\n        }\n    }\n    /**\n     * Gets the handler for 'GetList' requests\n     */\n    getListRequestHandler() {\n        return this._listRequestHandler;\n    }\n    /**\n     * Adds the translations of the EasyQuery messages for some locale\n     * @param locale - the ISO code of the locale (like `en` or `uk`)\n     * @param localeInfo - Locale settings and translations of EasyQuery texts and messages.\n     * We expected an object with the struture of LocaleInfo interface here.\n     */\n    addLocale(locale, localeInfo) {\n        i18n.addLocale(locale, localeInfo);\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, (event) => handler(this, event.data));\n    }\n    /**\n     * Remove event handler for event type .\n     * @param eventType The event type.\n     * @param handlerId The handler id.\n     */\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    fireEvent(eventType, data) {\n        this.eventEmitter.fire(eventType, data);\n    }\n    getBaseEndpoint() {\n        return this.baseEndpoint;\n    }\n    /**\n     * Sends a `loadValueList` requesthe server and processes the response.\n     * @param options A map of options to pass to `loadValueList` function.\n     */\n    loadValueList(options) {\n        options = options || {};\n        this.startProcess({\n            action: EqAction.GetValueList,\n            text: 'Loading values'\n        }, WidgetGroup.Result);\n        const valueListResolver = this.eqServices.getValueListResolver(this);\n        valueListResolver.loadValueList(options)\n            .then((values) => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.GetValueList,\n                text: 'Values loaded'\n            }, WidgetGroup.Result);\n            if (options.success) {\n                options.success(values);\n            }\n        })\n            .catch((error) => {\n            const editorId = options && options.params ? options.params.editorId : 'undefined';\n            const errorMessage = `Can't load the value list for editor ${editorId}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.GetValueList,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Result);\n            if (options.error) {\n                options.error(errorMessage, 'GetValueList');\n            }\n        });\n    }\n    /**\n     * Starts the process of the model loading.\n     * This method can initiate a request to EasyQueryServer backend or get the model from OData or GraphQL endpoint\n     * The content of the `options` parameter depends on concrete loader implementation.\n     * @param options A map of options to pass to `loadModel` function (can be ommited)\n     * @example\n     * context.loadModel()\n     *    .then(model => {\n     *       alert(\"Model loaded!\");\n     *    });\n     */\n    loadModel(options) {\n        if (this.beforeLoadModel) {\n            this.beforeLoadModel(this, options);\n        }\n        const modelId = options.modelId || '__default';\n        const silent = options.silent || false;\n        this.startProcess({\n            action: EqAction.LoadModel,\n            text: 'Loading model: ' + modelId\n        }, WidgetGroup.Model);\n        const modelLoader = this.eqServices.getModelLoader(this);\n        return modelLoader.startModelLoading(options)\n            .then((value) => {\n            if (value) {\n                this.loadModelFromData(value);\n                if (this.dataModel.isEmpty()) {\n                    console.warn(`Empty model has been loaded. Model ID: ${this.dataModel.getId()}`);\n                }\n            }\n            else {\n                console.warn('Model has not been changed.');\n            }\n            this.fireEvent('loadModel');\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.LoadModel,\n                text: 'Model loaded: ' + modelId\n            }, WidgetGroup.Model);\n            if (!silent) {\n                this.clearQuery();\n                this.clearResult();\n                this.refreshWidgets();\n            }\n            if (options.success) {\n                options.success(this.getModel());\n            }\n            return this.getModel();\n        })\n            .catch(error => {\n            const errorMessage = `Can't load model ${modelId}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.LoadModel,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Model);\n            if (options.error) {\n                options.error(errorMessage, \"LoadModel\");\n            }\n            return this.getModel();\n        });\n    }\n    callWhenModelLoaded(callFunc) {\n        const modelLoader = this.eqServices.getModelLoader(this);\n        modelLoader.getModelPromise().then(() => {\n            callFunc();\n        });\n    }\n    /**\n     * Loads the query\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks and `queryId` property of the query to load.\n     * @example\n     * context.loadQuery({\n     *      queryId: \"query-id\"\n     * });\n     */\n    loadQuery(options) {\n        options = options || {};\n        const modelLoader = this.eqServices.getModelLoader(this);\n        this.clearResult();\n        modelLoader.getModelPromise()\n            .then(() => {\n            options = options || {};\n            const queryId = options.queryId;\n            const silent = options.silent || false;\n            if (this.beforeLoadQuery) {\n                this.beforeLoadQuery(this, options);\n            }\n            this.startProcess({\n                action: EqAction.LoadQuery,\n                text: \"Query loading: \" + queryId\n            }, WidgetGroup.Query);\n            const queryStorage = this.eqServices.getQueryStorage(this);\n            queryStorage.loadQuery(options)\n                .then((data) => {\n                if (data) {\n                    this.query.loadFromData(data, {\n                        validate: false\n                    });\n                }\n                this.limitCustomSqlColumns();\n                this.fireEvent('loadQuery');\n                this.endProcess({\n                    result: EqActionResult.Success,\n                    action: EqAction.LoadQuery,\n                    text: 'Query loaded: ' + queryId\n                }, WidgetGroup.Query);\n                this.query.resetModified();\n                if (!silent) {\n                    this.query.fireChangedEvent({\n                        part: QueryChangePart.Properties,\n                        wasModified: this.query.isModified()\n                    });\n                    this.refreshWidgets();\n                }\n                if (options.success) {\n                    options.success(this.query);\n                }\n            })\n                .catch((error) => {\n                const query = this.getQuery();\n                error.message = \"Can't load query [\" + query.getId() + \"]\\n\" + (error.message || \"\");\n                if (options.error) {\n                    options.error(error.message, EqAction.LoadQuery);\n                }\n                this.endProcess({\n                    result: EqActionResult.Error,\n                    action: EqAction.LoadQuery,\n                    text: error.message,\n                    sourceError: error\n                }, WidgetGroup.Query);\n            });\n        })\n            .catch((error) => {\n            console.error(error);\n        });\n    }\n    /**\n     * Loads the list of queries available for the current user.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks\n     */\n    loadQueryList(options) {\n        const modelLoader = this.eqServices.getModelLoader(this);\n        modelLoader.getModelPromise()\n            .then(() => {\n            this.startQueryListLoading(options);\n        })\n            .catch((error) => {\n            const errorMessage = `Can't load the list of available queries.\\n ${error.message}`;\n            this.throwError({\n                action: EqAction.LoadQueryList,\n                text: errorMessage,\n                sourceError: error\n            });\n        });\n    }\n    startQueryListLoading(options) {\n        options = options || {};\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        const queryListLoadingPromise = queryStorage.getQueryList(options);\n        queryListLoadingPromise\n            .then((queries) => {\n            if (options.success) {\n                options.success(queries);\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't load the list of available queries.\\n ${error.message}`;\n            if (options.error) {\n                options.error(errorMessage, 'LoadQueryList');\n            }\n            else {\n                this.throwError({\n                    action: EqAction.LoadQueryList,\n                    text: errorMessage,\n                    sourceError: error\n                });\n            }\n        });\n    }\n    /**\n     * Creates a new query and returns its content back to the client-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks and `silent` option\n     * @example\n     * context.newQuery({\n     *    silent: true\n     * });\n     */\n    newQuery(options) {\n        options = options || {};\n        const clearQuery = typeof options.clearQuery !== 'undefined' ? options.clearQuery : true;\n        this.query.reset(clearQuery);\n        if (options.queryId) {\n            this.query.setId(options.queryId);\n        }\n        if (options.name) {\n            this.query.setName(options.name);\n        }\n        if (options.description) {\n            this.query.setDescription(options.description);\n        }\n        const silent = options.silent || false;\n        let useStorage = true;\n        if (typeof options.useStorage !== 'undefined') {\n            useStorage = options.useStorage;\n        }\n        const onNewQuery = () => {\n            const query = this.getQuery();\n            query.isNewbie = true;\n            if (!silent) {\n                query.fireChangedEvent({\n                    part: QueryChangePart.All,\n                    wasModified: query.isModified()\n                });\n            }\n        };\n        if (useStorage) {\n            this.startProcess({\n                action: EqAction.NewQuery,\n                text: 'New query creation...'\n            }, WidgetGroup.Query);\n            const queryStorage = this.eqServices.getQueryStorage(this);\n            queryStorage.newQuery(options)\n                .then((queryData) => {\n                if (queryData) {\n                    this.query.loadFromData(queryData);\n                }\n                this.endProcess({\n                    result: EqActionResult.Success,\n                    action: EqAction.NewQuery,\n                    text: 'A new query has been created'\n                }, WidgetGroup.Query);\n                onNewQuery();\n                if (options.success) {\n                    options.success();\n                }\n            })\n                .catch((error) => {\n                const errorMessage = `Can't create a new query.\\n${error.message}`;\n                this.endProcess({\n                    result: EqActionResult.Error,\n                    action: EqAction.NewQuery,\n                    text: errorMessage,\n                    sourceError: error\n                }, WidgetGroup.Query);\n                if (options.error) {\n                    options.error(errorMessage, \"NewQuery\");\n                }\n            });\n        }\n        else {\n            onNewQuery();\n        }\n        return this.query;\n    }\n    /**\n     * Saves the current query to some storage on the server-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    saveQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.SaveQuery,\n            text: 'Query saving: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        queryStorage.saveQuery(options)\n            .then((data) => {\n            this.endProcess({\n                action: EqAction.SaveQuery,\n                result: EqActionResult.Success,\n                text: \"Query saved: \" + query.getId()\n            }, WidgetGroup.Query);\n            if (data) {\n                query.loadFromData(data);\n            }\n            query.resetModified();\n            query.isNewbie = false;\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't save query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                action: EqAction.SaveQuery,\n                result: EqActionResult.Error,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, EqAction.SaveQuery);\n            }\n        });\n    }\n    /**\n     * Removes the current query from some storage on the server-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    removeQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.RemoveQuery,\n            text: 'Query deleting: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryStorage = this.eqServices.getQueryStorage(this);\n        queryStorage.removeQuery(options)\n            .then(() => {\n            query.reset();\n            this.endProcess({\n                action: EqAction.RemoveQuery,\n                result: EqActionResult.Success,\n                text: \"Query deleted: \" + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't remove query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                action: EqAction.RemoveQuery,\n                result: EqActionResult.Error,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'RemoveQuery');\n            }\n        });\n    }\n    /**\n     * Syncronizes the current query.\n     * @param options\n     * The content of the `options` parameter depends on `QuerySyncronizer` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    syncQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        if (this.beforeSyncQuery) {\n            this.beforeSyncQuery(this, options);\n        }\n        this.startProcess({\n            action: EqAction.SyncQuery,\n            text: 'Query syncing: ' + query.getId()\n        }, WidgetGroup.Query);\n        const querySyncrhonizer = this.eqServices.getQuerySynchronizer(this);\n        querySyncrhonizer.syncQuery(options)\n            .then((result) => {\n            this.resultStatement = result && result.statement\n                ? result.statement\n                : '';\n            this.fireEvent('syncQuery');\n            this.refreshWidgets(WidgetGroup.Statement);\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.SyncQuery,\n                text: 'Query synced: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (result) {\n                if (result.querySaved) {\n                    const q = result.query;\n                    if (q) {\n                        query.setId(q.id);\n                        query.setName(q.name);\n                        query.setDescription(q.desc);\n                        query.extraData = q.extraData;\n                    }\n                    query.resetModified();\n                    this.refreshWidgets(WidgetGroup.QueryStatus);\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't synchronize query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.SyncQuery,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'SyncQuery');\n            }\n        });\n    }\n    /**\n     * Fetches the data (usuall by executing current query) and processes the result.\n     * @param options\n     * The `options` parameter in addition to the options defined in FetchDataOptions structure may also contain `success` and `error` callbacks.\n     * @example\n     * context.fetchData({ success: function(result) {\n     *   //do whatever you want with the result\n     * }})\n     *\n     */\n    fetchData(options) {\n        options = options || {};\n        const elasticPaging = typeof (options.elasticPaging) !== 'undefined'\n            ? options.elasticPaging\n            : this.elasticPaging;\n        this.resultTable.elasticChunks = elasticPaging;\n        options.chunk = options.chunk ||\n            {\n                offset: 0,\n                limit: this.resultTable.chunkSize,\n                needTotal: !elasticPaging\n            };\n        if (this.debugMode) {\n            options.debug = 'Fetching the result set. Initial chunk';\n        }\n        if (!this.query.tryValidate({\n            checkExpressions: true\n        })) {\n            return;\n        }\n        //just to support the old way of catching \"group fetch\" operation finish\n        if (options.groupFetchSuccess) {\n            this.afterGroupFetch = options.groupFetchSuccess;\n        }\n        if (this.resultTable.elasticChunks) {\n            options.chunk.limit++;\n        }\n        this.fetchDataChunk(Object.assign(Object.assign({}, options), { success: (result) => {\n                if (result.statement) {\n                    this.resultStatement = result.statement;\n                    this.refreshWidgets(WidgetGroup.Statement);\n                }\n                const aggrCalculator = this.getServices().getAggregatesCalculator(this);\n                aggrCalculator.reset();\n                this.resultContent = result;\n                if (result.resultSet) {\n                    this.resultTable.clear();\n                    this.resultTable.id = this.query.getId();\n                    const resultSet = result.resultSet;\n                    for (const col of resultSet.cols) {\n                        this.resultTable.columns.add(col);\n                    }\n                    if (result.meta && typeof (result.meta.totalRecords) !== 'undefined') {\n                        this.resultTable.setTotal(result.meta.totalRecords);\n                    }\n                    const count = resultSet.rows.length;\n                    if (this.resultTable.elasticChunks && count === options.chunk.limit) {\n                        resultSet.rows.splice(resultSet.rows.length - 1, 1);\n                    }\n                    for (const row of resultSet.rows) {\n                        this.resultTable.addRow(row);\n                    }\n                    if (this.resultTable.elasticChunks) {\n                        this.resultTable['total'] = (count < options.chunk.limit)\n                            ? resultSet.rows.length\n                            : 0;\n                    }\n                    this.resultTable.fireUpdated();\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            } }));\n    }\n    getQueryFile(options) {\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.GetQueryFile,\n            text: 'Getting query file: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryFileLoader = this.getServices().getQueryFileLoader(this);\n        queryFileLoader.getQueryFile(options)\n            .then(() => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.GetQueryFile,\n                text: 'Getting query file: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch(error => {\n            const errorMessage = `Can't get file for query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.GetQueryFile,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'GetQueryFile');\n            }\n        });\n    }\n    uploadQueryFile(options) {\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.UploadQueryFile,\n            text: 'Uploading query file: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryFileLoader = this.getServices().getQueryFileLoader(this);\n        queryFileLoader.uploadQueryFile(options)\n            .then((data) => {\n            query.loadFromData(data);\n            this.fireEvent('loadQuery');\n            this.refreshWidgets();\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.UploadQueryFile,\n                text: 'Uploading query file: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch(error => {\n            const errorMessage = `Can't upload a file for query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.UploadQueryFile,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'UploadQueryFile');\n            }\n        });\n    }\n    fetchDataChunk(options) {\n        const queryId = this.getQuery().getId();\n        let fetchOptions = options || {};\n        if (this.useStoredQueryOnFetch) {\n            fetchOptions.queryId = this.query.getId();\n        }\n        if (this.beforeFetchData) {\n            this.beforeFetchData(this, fetchOptions);\n        }\n        this.startProcess({\n            action: EqAction.FetchData,\n            text: 'Fetching data for the query: ' + queryId\n        }, WidgetGroup.Result);\n        const dataFetcher = this.eqServices.getDataFetcher(this);\n        dataFetcher.fetchData(fetchOptions)\n            .then((result) => {\n            if (result.statement) {\n                this.resultStatement = result.statement;\n            }\n            this.resultContent = result;\n            // we need to call success callback before firing fetchData,\n            // because otherwise, it won't update the result table \n            // in the context before afterFetchData callback is called.\n            if (fetchOptions.success) {\n                fetchOptions.success(result);\n            }\n            this.fireEvent('fetchData');\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.FetchData,\n                text: 'Data fetching is finished for the query: ' + queryId\n            }, WidgetGroup.Result);\n        })\n            .catch((error) => {\n            const errorMessage = `Data fetching error for the query ${queryId}. \\n${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.FetchData,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Result);\n            if (fetchOptions.error) {\n                fetchOptions.error(errorMessage, EqAction.FetchData);\n            }\n        });\n    }\n    onResultTableUpdate() {\n        const aggrSettings = this.query.getAggregationSettings();\n        const calculator = this.getServices().getAggregatesCalculator(this);\n        if (aggrSettings.needAggrCalculation() && calculator.needRecalculation()) {\n            calculator.calculate({\n                maxLevel: aggrSettings.getGroups().length + 1,\n                resultObtained: (result, level) => {\n                    if (this.afterGroupFetch) {\n                        this.afterGroupFetch(result);\n                    }\n                },\n                errorOccurred: error => {\n                    const errorMessage = `Data fetching error on group level ${error.level} query. \\n${error.message}`;\n                    this.throwError({\n                        action: EqAction.FetchData,\n                        text: errorMessage,\n                        sourceError: error\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Fetches the data for a drill-down query (if defined) and processes the result.\n     * @param options\n     */\n    fetchDrillDownData(options) {\n        options = options || {};\n        options.chunk = options.chunk ||\n            {\n                offset: 0,\n                limit: this.resultTable.chunkSize,\n                needTotal: true\n            };\n        const query = options.query;\n        const queryId = query.getId();\n        this.startProcess({\n            action: EqAction.FetchData,\n            text: 'DrillDown executing: ' + queryId\n        }, WidgetGroup.Result);\n        const queryExecutor = this.eqServices.getDataFetcher(this);\n        queryExecutor.fetchData(options)\n            .then((result) => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.FetchData,\n                text: 'DrillDown execution error: ' + queryId\n            }, WidgetGroup.Result);\n            if (options.success) {\n                options.success(result);\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Drill-down data fetching error for query ${queryId}. \\n${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.FetchData,\n                text: errorMessage,\n            }, WidgetGroup.Result);\n            if (options.error) {\n                options.error(errorMessage, 'DrillDown');\n            }\n            else {\n                this.throwError({\n                    action: EqAction.FetchData,\n                    text: errorMessage\n                });\n            }\n        });\n    }\n    /**\n     * Fetches the data for defined by this context and exports them to the specified format.\n     * @param options\n     * The content of the `options` parameter depends on `EqExporter` implementation.\n     * Usually it contains `format` property which defines the format of the exported data (e.g. `csv`),\n     * and `success` and `error` callbacks\n     * @example\n     * context.exportResult({\n     *      format: csv\n     * });\n     *\n     */\n    exportResult(options) {\n        options = options || {};\n        options.chunk = options.chunk || EmptyChunk;\n        if (this.beforeExportResult) {\n            this.beforeExportResult(this, options);\n        }\n        const format = options.format;\n        if (format) {\n            const exporter = this.getExporter(format);\n            if (exporter) {\n                const queryId = this.getQuery().getId();\n                if (this.useStoredQueryOnFetch) {\n                    options.queryId = queryId;\n                }\n                this.startProcess({\n                    action: EqAction.ExportResult,\n                    text: 'Exporting result for query: ' + queryId\n                }, WidgetGroup.Result);\n                const localeSettings = i18n.getLocaleSettings();\n                options.settings = localeSettings;\n                const aggrSettings = this.query.getAggregationSettings();\n                if (aggrSettings.hasAggregates()\n                    && (aggrSettings.hasGrandTotals() || aggrSettings.hasGroups())) {\n                    options.aggregates = aggrSettings.saveToData();\n                }\n                exporter.export(options)\n                    .then((result) => {\n                    this.fireEvent('exportResult');\n                    this.endProcess({\n                        result: EqActionResult.Success,\n                        action: EqAction.ExportResult,\n                        text: `The result set for query [${queryId}] has been successfully exported`\n                    }, WidgetGroup.Result);\n                    if (options.success) {\n                        options.success();\n                    }\n                })\n                    .catch((error) => {\n                    const errorMessage = `Error on exporting data for query  ${queryId}. \\n${error.message}`;\n                    this.endProcess({\n                        result: EqActionResult.Error,\n                        action: EqAction.ExportResult,\n                        text: errorMessage,\n                        sourceError: error\n                    }, WidgetGroup.Result);\n                    if (options.error) {\n                        options.error(errorMessage, 'ExportResult');\n                    }\n                });\n            }\n            else {\n                console.error('No exporter for this format: ' + format);\n            }\n        }\n    }\n    limitCustomSqlColumns() {\n        if (!this.options.allowCustomExpressions) {\n            this.query.getColumns().forEach(col => {\n                if (col.expr.tag === ExprTag.CustomSql) {\n                    col.enabled = false;\n                }\n            });\n        }\n    }\n    getAttributeTitle(attr) {\n        const format = this.options.attributeFormat;\n        return this.getModel().getAttributeText(attr, format);\n    }\n    getColumnTitle(attr) {\n        const format = this.options.columnTitleFormat || this.options.attributeFormat;\n        return this.getModel().getAttributeText(attr, format);\n    }\n    getDefaultColumnCaption(column) {\n        let attr;\n        const model = this.getModel();\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return \"Contant Column\";\n            case ExprTag.CustomSql:\n                return \"SQL Column\";\n            case ExprTag.ParentColumn:\n                return \"Parent Column\";\n            case ExprTag.Query:\n                return \"Query Column\";\n            case ExprTag.EntityAttribute:\n            case ExprTag.ParentEntityAttribute:\n                attr = model.getAttributeById(column.expr.value);\n                return this.getColumnTitle(attr);\n            case ExprTag.AggregateFunction:\n                attr = model.getAttributeById(column.expr.args[0].value);\n                return this.getColumnTitle(attr) + ' ' + model.getAggrFunctionCaption(column.expr.func);\n            default:\n                return 'Column';\n        }\n    }\n}\n\nlet eqContextResolver;\nfunction registerEqContextResolver(resolver) {\n    eqContextResolver = resolver;\n}\nfunction createEqContext() {\n    if (!eqContextResolver) {\n        throw Error('No context resolver');\n    }\n    return eqContextResolver();\n}\n\nregisterEqContextResolver(() => new EqContext());\n\nvar eqconsts;\n(function (eqconsts) {\n    /**\n     * Defines some commonly used constants\n     */\n    class ConstLists {\n        constructor() {\n            /**\n             * Contains macros for the special dates (like Today, First day of the month, etc)\n             */\n            this.SpecDateValues = [\n                { id: '${Today}', key: 'Today', isDefault: true },\n                { id: '${Yesterday}', key: 'Yesterday' },\n                { id: '${Tomorrow}', key: 'Tomorrow' },\n                { id: '${FirstDayOfMonth}', key: 'FirstDayOfMonth' },\n                { id: '${FirstDayOfYear}', key: 'FirstDayOfYear' }\n            ];\n            /**\n             * Contains macros for the special times (like Now, Noon, etc)\n             */\n            this.SpecTimeValues = [\n                { id: '${Now}', key: 'Now', isDefault: true },\n                { id: '${HourStart}', key: 'HourStart' },\n                { id: '${Midnight}', key: 'Midnight' },\n                { id: '${Noon}', key: 'Noon' }\n            ];\n            /**\n             * Boolean values macros (true and false)\n             */\n            this.BooleanValues = [\n                { id: '${false}', key: 'False' },\n                { id: '${true}', key: 'True', isDefault: true }\n            ];\n        }\n    }\n    /**\n     * Contains some constants (macros) with special date/time and boolean values.\n     */\n    eqconsts.constLists = new ConstLists();\n    /**\n     * Constants representing various types of relationships between conditions\n     */\n    eqconsts.predicateLinkTypeList = [\n        { id: 'All', key: 'LinkTypeAll' },\n        { id: 'Any', key: 'LinkTypeAny' },\n        { id: 'None', key: 'LinkTypeNone' },\n        { id: 'NotAll', key: 'LinkTypeNotAll' }\n    ];\n})(eqconsts || (eqconsts = {}));\n\n/**\n * Represents Google data table class\n */\nclass GoogleDataConverter {\n    /**\n     * The default constructor.\n     * @param data The table instance or its JSON representation.\n     */\n    constructor(data) {\n        if (!data) {\n            data = {\n                cols: [],\n                rows: []\n            };\n        }\n        if (typeof data === \"string\") {\n            this.loadFromJSON(data);\n        }\n        else {\n            this.tableObj = data;\n        }\n    }\n    /**\n     * Loads data table from JSON.\n     * @param json The JSON representation.\n     */\n    loadFromJSON(json) {\n        this.tableObj = JSON.parse(json);\n    }\n    /**\n     * Saves data table to JSON.\n     * @returns The JSON representation.\n     */\n    toJSON() {\n        return JSON.stringify(this.tableObj);\n    }\n    /**\n     * Gets the google data table object.\n     * @returns The data table.\n     */\n    getObject() {\n        return this.tableObj;\n    }\n    /**\n     * Cheсks wether the table is empty\n     * @returns `true` if the table is empty, `false` if it is not.\n     */\n    isEmpty() {\n        return this.getNumberOfColumns() == 0 || this.getNumberOfRows() == 0;\n    }\n    /**\n     * Gets the number of columns\n     * @returns The number.\n     */\n    getNumberOfColumns() {\n        return this.tableObj.cols.length;\n    }\n    /**\n     * Gets the column object.\n     * @param colIndex The column index.\n     * @returns The column object.\n     */\n    getColumnObject(colIndex) {\n        return colIndex < this.tableObj.cols.length ? this.tableObj.cols[colIndex] : null;\n    }\n    /**\n     * Gets the column ID.\n     * @param colIndex The column index.\n     * @returns The column ID.\n     */\n    getColumnId(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.id : null;\n    }\n    /**\n     * Gets the column LABEL.\n     * @param colIndex The column index.\n     * @returns The column ID.\n     */\n    getColumnLabel(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.label : null;\n    }\n    /**\n     *  Gets the column type.\n     * @param colIndex The column index.\n     * @returns The column type.\n     */\n    getColumnType(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.type : null;\n    }\n    /**\n     * Gets the column properties.\n     * @param colIndex The column index.\n     * @returns The column properties.\n     */\n    getColumnProperties(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.p : null;\n    }\n    /**\n     * Gets the number of rows.\n     * @returns The number.\n     */\n    getNumberOfRows() {\n        return this.tableObj.rows.length;\n    }\n    convertValue(value, colIndex) {\n        const colType = this.googleDataTypeToDataType(this.getColumnType(colIndex));\n        if ([DataType.Date, DataType.DateTime, DataType.Time].includes(colType)) {\n            // return eval(`new ${value}`)\n            return new Function(value, 'return new value');\n        }\n        return value;\n    }\n    /**\n     *  Gets the value.\n     * @param rowIndex\n     * @param colIndex\n     */\n    getValue(rowIndex, colIndex) {\n        const row = rowIndex < this.tableObj.rows.length ? this.tableObj.rows[rowIndex] : null;\n        if (row) {\n            const cell = colIndex < this.tableObj.cols.length ? row.c[colIndex] : null;\n            if (cell) {\n                return this.convertValue(cell.v, colIndex);\n            }\n        }\n        return null;\n    }\n    getRow(rowIndex) {\n        const googleRow = rowIndex < this.tableObj.rows.length ? this.tableObj.rows[rowIndex] : null;\n        const googleCells = googleRow.c;\n        const row = googleCells.map((obj, idx) => this.convertValue(obj.v, idx), this);\n        return row;\n    }\n    convertTo(dataTable) {\n        const colCount = this.getNumberOfColumns();\n        for (let i = 0; i < colCount; i++) {\n            dataTable.columns.add({\n                id: this.getColumnId(i),\n                label: this.getColumnLabel(i),\n                type: this.googleDataTypeToDataType(this.getColumnType(i))\n            });\n        }\n        const rowCount = this.getNumberOfRows();\n        for (let i = 0; i < rowCount; i++) {\n            dataTable.addRow(this.getRow(i));\n        }\n    }\n    googleDataTypeToDataType(googleDataType) {\n        switch (googleDataType) {\n            case 'string':\n                return DataType.String;\n            case 'number':\n                return DataType.Float;\n            case 'boolean':\n                return DataType.Bool;\n            case 'date':\n                return DataType.Date;\n            case 'datetime':\n                return DataType.DateTime;\n            case 'timeofday':\n                return DataType.Time;\n            default:\n                return DataType.String;\n        }\n    }\n}\n\nclass InMemoryModelStorage {\n    constructor(models) {\n        this.models = [];\n        if (models) {\n            utils.assign(this.models, [], models);\n        }\n    }\n    getModels() {\n        return new Promise((resolve, reject) => {\n            resolve(this.models);\n        });\n    }\n}\n\n/**\n * Represents a widget - a visual element with \"knows\" how to render itself.\n * Some widgets just display some information from the context (like the generated SQL or the result set).\n * Others - allow user to interact with them to define query conditions or columns.\n */\nclass Widget {\n    /**\n     Initializes a new instance of the `Widget` class\n     * @param slot - an HTML element in which we should place our widget.\n     */\n    constructor(slot) {\n        this.slot = slot;\n        this._id = utils.generateId(this.getWidgetType());\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Initializes the widget and assign it to some context\n     * @param context\n     * @param options\n     */\n    init(context, options) {\n        this.context = context;\n    }\n    /**\n     * Returns current context (the one this widget belongs to)\n     */\n    getContext() {\n        return this.context;\n    }\n    /**\n     * Refreshes the widget's content\n     */\n    refresh() {\n        this.refreshCore();\n    }\n    /**\n     * This function is called from `refresh` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget\n     */\n    refreshCore() {\n    }\n    /**\n     * This function is called on the start of some process this widget participates in.\n     * For example, some widgets can show a spinner or a progress bar\n     * at the beginning of some long process (e.g. model loading).\n     */\n    onProcessStart() {\n        this.onProcessStartCore();\n    }\n    /**\n     * This function is called from `onProcessStart` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget.\n     */\n    onProcessStartCore() {\n    }\n    /**\n     * This function is called on the end of some process this widget participates in.\n     * For example, some widgets should be updated on model loading\n     * or after the execution of the current query\n     */\n    onProcessEnd() {\n        this.onProcessEndCore();\n    }\n    /**\n     * This function is called from `onProcessEnd` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget.\n     */\n    onProcessEndCore() {\n    }\n    /**\n     * Returns `true` if the widget belongs to one of the groups specified in the parameter\n     * @param groups\n     */\n    belongsToGroup(groups) {\n        if (typeof groups != 'undefined' && groups != null) {\n            if ((groups & this.group) === 0)\n                return false;\n        }\n        return true;\n    }\n    destroy() {\n        this.destroyCore();\n    }\n    destroyCore() {\n    }\n}\n\nclass EqVersionInfo {\n    constructor(major, minor, update) {\n        this.major = major;\n        this.minor = minor;\n        this.update = update;\n    }\n    toString() {\n        return `${this.major}.${this.minor}.${this.update}`;\n    }\n}\nconst versionInfo = new EqVersionInfo(6, 2, 0);\n\nfunction addEasyQueryCoreTexts() {\n    i18n.updateDefaultTexts({\n        NewQueryName: '[New query]',\n        //DateTime macroses\n        Today: 'Today',\n        Yesterday: 'Yesterday',\n        Tomorrow: 'Tomorrow',\n        FirstDayOfMonth: 'First day of the month',\n        LastDayOfMonth: 'Last day of the month',\n        FirstDayOfWeek: 'First day of the week',\n        FirstDayOfYear: 'First day of the year',\n        FirstDayOfNextWeek: 'First day of the next week',\n        FirstDayOfNextMonth: 'First day of the next month',\n        FirstDayOfNextYear: 'First day of the next year',\n        Now: 'Now',\n        HourStart: 'This hour start',\n        Midnight: 'Midnight',\n        Noon: 'Noon',\n        Entities: {},\n        Attributes: {},\n        Operators: {},\n        AggregateFunctions: {}\n    });\n}\naddEasyQueryCoreTexts();\n\nexport { AggrFunction, BrowserQueryStorage, CondTag, Condition, ConditionPart, DataKind, DataModel, DefaultAggregatesCalculator, EasyQueryDataLoader, EmptyChunk, Entity, EntityAttr, EqAction, EqActionResult, EqAggregatesContainer, EqContext, EqEditorTag, EqModelLoader, EqQueryFileLoader, EqServerDataFetcher, EqServerExporter, EqServerModelLoader, EqServerQuerySynchronizer, EqServerValueListResolver, EqServiceProvider, EqValueEditor, ExprTag, Expression, FormatParser, GoogleDataConverter, InMemoryModelStorage, InvalidQueryError, LinkType, Operand, Operator, Query, QueryChangeAction, QueryChangePart, QueryColumn, SortDirection, Tree, Widget, WidgetGroup, createEqContext, eqconsts, equtils, registerEqContextResolver, versionInfo };\n","\n/*\n * EasyData.JS UI v1.5.3\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\nimport { utils, ColumnAlignment, DataType, i18n, EventEmitter, DataRow, liquid } from '@easydata/core';\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    let mobileModeChangeHandler;\n    function isIE() {\n        {\n            const ua = navigator.userAgent;\n            return ua.includes('MSIE') || ua.includes('Trident');\n        }\n    }\n    browserUtils.isIE = isIE;\n    function isEdge() {\n        const ua = window.navigator.userAgent;\n        return !isIE() && ua.includes('Edge/');\n    }\n    browserUtils.isEdge = isEdge;\n    function isFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().includes('firefox');\n        }\n        return _isFirefox;\n    }\n    browserUtils.isFirefox = isFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n})(browserUtils || (browserUtils = {}));\n\n/**\n * Wraps all the elements inside \"parent\" by \"wrapper\" element\n * @param parent The element to add wrapper to.\n * @param wrapper The element that will wrap child elements.\n */\nfunction wrapInner(parent, wrapper) {\n    parent.appendChild(wrapper);\n    while (parent.firstChild !== wrapper) {\n        wrapper.appendChild(parent.firstChild);\n    }\n}\n/**\n * Creates ands adds a new [[HTMLElement]] to \"parent\"\n * @param parent The element to add new element to.\n * @param tag Html tag of the new element.\n * @param options The options. In particular, options.cssClass sets the new element class.\n * @returns New element.\n */\nfunction addElement(parent, tag, options) {\n    let element = document.createElement(tag);\n    let opts = options || {};\n    if (opts.cssClass) {\n        element.className = opts.cssClass;\n    }\n    parent.appendChild(element);\n    return element;\n}\n/**\n * Adds css class to the html element.\n * @param element The element to add css class to.\n * @param className The name of the css class to be added.\n */\nfunction addCssClass(element, className) {\n    element.className = (element.className)\n        ? element.className + ' ' + className\n        : className;\n}\n/**\n * Hides the html element.\n * @param element The element to be hidden.\n */\nfunction hideElement(element) {\n    element.style.display = 'none';\n}\n/**\n * Shows the html element.\n * @param element The element to be shown.\n * @param display The value of \"display\" style to be set. Default value is \"block\".\n */\nfunction showElement(element, display) {\n    if (!display) {\n        display = '';\n    }\n    element.style.display = display;\n}\n/**\n * Hides the \"first\" element and shows the \"second\".\n * @param first The element to be hidden.\n * @param second The element to be shown.\n * @param options The options. The following options are applied:\n * - display - the value of \"display\" style to be set. Default value is \"block\"\n * - duration - the duration of fading in and out\n * - complete - the callback to be called when toggle is complete\n */\nfunction toggleVisibility(first, second, options) {\n    if (!options) {\n        options = {};\n    }\n    if (!options.display) {\n        options.display = '';\n    }\n    if (!options.duration) {\n        options.duration = 200;\n    }\n    //TODO: later we need to make it fading in and out\n    hideElement(first);\n    showElement(second, options.display);\n    if (options.complete) {\n        options.complete();\n    }\n}\n/**\n * Checks if element is visible\n * @param element The element to check.\n * @returns `true` if visible, otherwise - `false`.\n */\nfunction isVisible(element) {\n    return element.style.display != 'none'\n        && element.offsetWidth != 0\n        && element.offsetHeight != 0;\n}\nfunction createBrowserEvent(eventName) {\n    var event;\n    if (typeof (Event) === 'function') {\n        event = new Event(eventName);\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    }\n    return event;\n}\nfunction getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getDocSize() {\n    if (browserUtils.isIE())\n        return getWinSize();\n    const width = Math.max(document.documentElement.clientWidth, document.body.clientWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight, document.body.clientHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getScrollPos() {\n    const body = document.body;\n    const docElem = document.documentElement;\n    return {\n        top: window.pageYOffset || docElem.scrollTop || body.scrollTop,\n        left: window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n    };\n}\nfunction getElementAbsolutePos(element) {\n    let res = { x: 0, y: 0 };\n    if (element !== null) {\n        const position = offset(element);\n        res = { x: position.left, y: position.top };\n    }\n    return res;\n}\nfunction offset(element) {\n    const defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };\n    let box;\n    try {\n        box = element.getBoundingClientRect();\n    }\n    catch (_a) {\n        box = defaultBoundingClientRect;\n    }\n    const body = document.body;\n    const docElem = document.documentElement;\n    const scollPos = getScrollPos();\n    const scrollTop = scollPos.top;\n    const scrollLeft = scollPos.left;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return { top: Math.round(top), left: Math.round(left) };\n}\nfunction getWinSize() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\nfunction slideDown(target, duration, callback) {\n    target.style.removeProperty('display');\n    let display = window.getComputedStyle(target).display;\n    if (display === 'none')\n        display = 'block';\n    target.style.display = display;\n    let height = target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    target.offsetHeight;\n    target.style.boxSizing = 'border-box';\n    target.style.transitionProperty = \"height, margin, padding\";\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = height + 'px';\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    window.setTimeout(() => {\n        target.style.removeProperty('height');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nfunction slideUp(target, duration, callback) {\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.boxSizing = 'border-box';\n    target.style.height = target.offsetHeight + 'px';\n    target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    window.setTimeout(() => {\n        target.style.display = 'none';\n        target.style.removeProperty('height');\n        target.style.removeProperty('padding-top');\n        target.style.removeProperty('padding-bottom');\n        target.style.removeProperty('margin-top');\n        target.style.removeProperty('margin-bottom');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\nfunction getMobileCssClass() {\n    return browserUtils.isMobileMode() ? 'k-mobile' : null;\n}\n\nfunction mask(input, maskPattern) {\n    const d = { 9: '[0-9]', a: '[a-z]' };\n    const mask = maskPattern.split('');\n    const keyDownHandler = (e) => {\n        // backspace key or delete key\n        if (e.keyCode === 8 || e.keyCode === 46) {\n            e.preventDefault();\n            let mskd = [];\n            let startSelection = input.selectionStart;\n            if (startSelection == 0)\n                return;\n            let selection = startSelection;\n            let onlyLodash = true;\n            for (let index = mask.length - 1; index >= 0; index--) {\n                const el = mask[index];\n                if (d[el]) {\n                    let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                    if (t && index != startSelection - 1) {\n                        onlyLodash = false;\n                    }\n                    if (index === startSelection - 1)\n                        selection--;\n                    mskd.push(t && index != startSelection - 1\n                        ? input.value.charAt(index)\n                        : '_');\n                }\n                else {\n                    if (index === selection - 1)\n                        selection--;\n                    if (startSelection - 1 === index)\n                        startSelection--;\n                    mskd.push(el);\n                }\n            }\n            input.value = !onlyLodash ? mskd.reverse().join('') : '';\n            input.selectionStart = input.selectionEnd = selection < 0 ? 0 : selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const keyPressHandler = (e) => {\n        const char = String.fromCharCode(e.charCode);\n        if (char) {\n            e.preventDefault();\n            let mskd = [];\n            let selectionStart = input.selectionStart;\n            let selection = selectionStart;\n            mask.forEach((el, index) => {\n                if (d[el]) {\n                    const ch = (index != selectionStart)\n                        ? input.value.charAt(index)\n                        : char;\n                    let t = new RegExp(d[el], 'i').test(ch);\n                    mskd.push(t ? ch : '_');\n                    if (t && selectionStart === index)\n                        selection++;\n                }\n                else {\n                    mskd.push(el);\n                    if (selection === index)\n                        selection++;\n                    if (selectionStart === index)\n                        selectionStart++;\n                }\n            });\n            input.value = mskd.join('');\n            input.selectionStart = input.selectionEnd = selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const inputHandler = (e) => {\n        if (e.type === 'focus' && input.value !== '')\n            return;\n        let mskd = [];\n        let startSelection = input.selectionStart;\n        mask.forEach((el, index) => {\n            if (d[el]) {\n                let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                mskd.push(t ? input.value.charAt(index) : '_');\n            }\n            else {\n                mskd.push(el);\n            }\n        });\n        input.value = mskd.join('');\n        input.selectionStart = input.selectionEnd = startSelection;\n    };\n    input.addEventListener('keydown', keyDownHandler);\n    input.addEventListener('keypress', keyPressHandler);\n    input.addEventListener('input', inputHandler);\n    input.addEventListener('focus', inputHandler);\n}\n\nclass DomElementBuilder {\n    constructor(tag, parent) {\n        if (typeof tag === \"string\") {\n            this.element = document.createElement(tag);\n        }\n        else {\n            this.element = tag;\n        }\n        if (parent && this.element.parentElement !== parent) {\n            parent.appendChild(this.element);\n        }\n    }\n    addChild(tag, childBuilder) {\n        const builder = domel(tag, this.element);\n        if (childBuilder) {\n            childBuilder(builder);\n        }\n        return this;\n    }\n    addChildElement(element) {\n        if (element) {\n            this.element.appendChild(element);\n        }\n        return this;\n    }\n    attr(attrId, attrValue) {\n        this.element.setAttribute(attrId, attrValue);\n        return this;\n    }\n    id(value) {\n        return this.attr(\"id\", value);\n    }\n    focus() {\n        this.element.focus();\n        return this;\n    }\n    title(value) {\n        return this.attr('title', value);\n    }\n    data(dataId, dataValue = null) {\n        if (dataValue === null) {\n            this.element.removeAttribute('data-' + dataId);\n            return this;\n        }\n        else {\n            return this.attr('data-' + dataId, dataValue);\n        }\n    }\n    show() {\n        return this.removeStyle('display');\n    }\n    hide(toHide = true) {\n        return (toHide) ? this.setStyle('display', 'none') : this;\n    }\n    visible(isVisible = true) {\n        return isVisible ? this.setStyle('visibility', 'visible') : this.setStyle('visibility', 'hidden');\n    }\n    isVisible() {\n        return !!(this.element.offsetWidth || this.element.offsetHeight || this.element.getClientRects().length);\n    }\n    addClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.add(fullList[i]);\n        }\n        return this;\n    }\n    removeClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.remove(fullList[i]);\n        }\n        return this;\n    }\n    toggleClass(className, force = undefined) {\n        if (className) {\n            this.element.classList.toggle(className, force);\n        }\n        return this;\n    }\n    on(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.addEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    off(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.removeEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    setStyle(styleId, styleValue) {\n        this.element.style.setProperty(styleId, styleValue);\n        return this;\n    }\n    removeStyle(styleId) {\n        this.element.style.removeProperty(styleId);\n        return this;\n    }\n    text(text) {\n        this.element.innerText = text;\n        return this;\n    }\n    html(html) {\n        this.element.innerHTML = html;\n        return this;\n    }\n    clear() {\n        const oldElem = this.element;\n        this.element = document.createElement(this.element.tagName);\n        oldElem.replaceWith(this.element);\n    }\n    addText(text) {\n        const textEl = document.createTextNode(text);\n        this.element.appendChild(textEl);\n        return this;\n    }\n    addHtml(html) {\n        this.element.innerHTML += html;\n        return this;\n    }\n    toDOM() {\n        return this.element;\n    }\n    appendTo(parent) {\n        if (parent) {\n            parent.appendChild(this.element);\n        }\n        return this;\n    }\n}\nclass DomTextAreaElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"textarea\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    rows(rows) {\n        this.element.rows = rows;\n        return this;\n    }\n    cols(cols) {\n        this.element.cols = cols;\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nclass DomInputElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"input\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    type(value) {\n        this.element.type = value;\n        return this;\n    }\n    size(value) {\n        this.element.size = value;\n        return this;\n    }\n    value(value) {\n        if (value instanceof Date) {\n            this.element.valueAsDate = value;\n        }\n        else if (typeof value === \"number\") {\n            this.element.valueAsNumber = value;\n        }\n        else {\n            this.element.value = value;\n        }\n        return this;\n    }\n    mask(maskPattern) {\n        mask(this.element, maskPattern);\n        return this;\n    }\n}\nclass DomSelectElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"select\", parent);\n        }\n    }\n    addOption(value) {\n        const option = document.createElement('option');\n        if (typeof value === \"string\") {\n            option.value = value;\n            option.innerHTML = value;\n        }\n        else {\n            option.value = value.value;\n            option.innerHTML = value.title || value.value;\n            option.selected = value.selected || false;\n        }\n        this.element.appendChild(option);\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nfunction domel(tag, parent) {\n    if (tag === \"div\" || tag instanceof HTMLDivElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    if (tag === \"span\" || tag instanceof HTMLSpanElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"a\" || tag instanceof HTMLAnchorElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"button\" || tag instanceof HTMLButtonElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"img\" || tag instanceof HTMLImageElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"input\" || tag instanceof HTMLInputElement) {\n        return new DomInputElementBuilder(tag instanceof HTMLInputElement ? tag : null, parent);\n    }\n    else if (tag === \"textarea\" || tag instanceof HTMLTextAreaElement) {\n        return new DomTextAreaElementBuilder(tag instanceof HTMLTextAreaElement ? tag : null, parent);\n    }\n    else if (tag === \"select\" || tag instanceof HTMLSelectElement) {\n        return new DomSelectElementBuilder(tag instanceof HTMLSelectElement ? tag : null, parent);\n    }\n    return new DomElementBuilder(tag, parent);\n}\n\nconst touchEventIsDefined = typeof TouchEvent !== 'undefined';\nvar DropEffect;\n(function (DropEffect) {\n    DropEffect[\"None\"] = \"none\";\n    DropEffect[\"Allow\"] = \"allow\";\n    DropEffect[\"Forbid\"] = \"forbid\";\n})(DropEffect || (DropEffect = {}));\nclass EqDragEvent {\n    constructor(item, dragImage, sourceEvent) {\n        this.dropEffect = DropEffect.Allow;\n        this.pageX = 0;\n        this.pageY = 0;\n        this.item = item;\n        this.dragImage = dragImage;\n        this.data = item.data;\n        this.sourceEvent = sourceEvent;\n        if (sourceEvent && sourceEvent instanceof MouseEvent) {\n            this.pageX = sourceEvent.pageX,\n                this.pageY = sourceEvent.pageY;\n        }\n        if (sourceEvent && touchEventIsDefined && sourceEvent instanceof TouchEvent\n            && sourceEvent.touches[0]) {\n            this.pageX = sourceEvent.touches[0].pageX,\n                this.pageY = sourceEvent.touches[0].pageY;\n        }\n    }\n}\nclass Position {\n    constructor(ev) {\n        if (ev && ev instanceof MouseEvent) {\n            this.x = ev.pageX,\n                this.y = ev.pageY;\n        }\n        if (ev && touchEventIsDefined && ev instanceof TouchEvent && ev.touches[0]) {\n            this.x = ev.touches[0].pageX,\n                this.y = ev.touches[0].pageY;\n        }\n    }\n}\nclass DragManager {\n    constructor() {\n        this.delta = 5;\n        this.draggableItem = null;\n        this.dragImage = null;\n        this.finishedSuccessfully = false;\n        this.mouseDownPosition = null;\n        this.containerDescriptors = [];\n        this.containerDescriptorIndex = -1;\n        this.dropEffect = DropEffect.None;\n        this.classPrefix = 'eqjs-drop';\n        this.DRAG_DISABLED_ATTR = 'drag-disabled';\n    }\n    registerDraggableItem(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in draggle item is null or undefined\");\n        }\n        element.ondragstart = function () {\n            return false;\n        };\n        const detectDragging = (ev) => {\n            if (element.hasAttribute(this.DRAG_DISABLED_ATTR)) {\n                return;\n            }\n            ev.preventDefault();\n            if (ev instanceof MouseEvent) {\n                ev.stopPropagation();\n            }\n            const cursorPosition = new Position(ev);\n            if (Math.abs(cursorPosition.x - this.mouseDownPosition.x) > this.delta\n                || Math.abs(cursorPosition.y - this.mouseDownPosition.y) > this.delta) {\n                startDragging(ev);\n            }\n        };\n        const mouseMoveEventListener = (ev) => {\n            this.mouseMoveDragListener(ev);\n        };\n        const startDragging = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            this.finishedSuccessfully = false;\n            if (descriptor.beforeDragStart)\n                descriptor.beforeDragStart();\n            this.dragImage = domel('div')\n                .setStyle('position', 'absolute')\n                .setStyle('z-index', '65530')\n                .toDOM();\n            document.body.appendChild(this.dragImage);\n            this.dragImage.appendChild(element.cloneNode(true));\n            if (descriptor.renderer) {\n                descriptor.renderer(this.dragImage);\n            }\n            this.dropEffect = DropEffect.None;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n            this.draggableItem = {\n                element: element,\n                scope: descriptor.scope,\n                data: descriptor.data\n            };\n            this.updateDragItemPosition(ev);\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = this.dropEffect;\n            if (descriptor.onDragStart) {\n                descriptor.onDragStart(event);\n            }\n            if (this.dropEffect !== event.dropEffect) {\n                this.dropEffect = event.dropEffect;\n                this.updateImageClass(this.dropEffect);\n            }\n            document.addEventListener('mousemove', mouseMoveEventListener, true);\n            document.addEventListener('touchmove', mouseMoveEventListener, true);\n        };\n        const mouseDownListener = (ev) => {\n            if (touchEventIsDefined && ev instanceof TouchEvent) {\n                ev.preventDefault();\n            }\n            this.mouseDownPosition = new Position(ev);\n            element.addEventListener('mousemove', detectDragging);\n            element.addEventListener('touchmove', detectDragging);\n            document.addEventListener('mouseup', mouseUpListener);\n            document.addEventListener('touchend', mouseUpListener);\n        };\n        element.addEventListener('mousedown', mouseDownListener);\n        element.addEventListener('touchstart', mouseDownListener);\n        const mouseUpListener = (ev) => {\n            this.mouseDownPosition = null;\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            document.removeEventListener('mousemove', mouseMoveEventListener, true);\n            document.removeEventListener('touchmove', mouseMoveEventListener, true);\n            if (this.draggableItem) {\n                endDraggind(ev);\n            }\n        };\n        const endDraggind = (ev) => {\n            try {\n                if (this.containerDescriptorIndex >= 0) {\n                    const dropContDesc = this.containerDescriptors[this.containerDescriptorIndex];\n                    const container = {\n                        element: dropContDesc.element,\n                        scopes: dropContDesc.scopes,\n                        data: dropContDesc.data\n                    };\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    try {\n                        if (container.scopes.indexOf(this.draggableItem.scope) >= 0\n                            && this.dropEffect === DropEffect.Allow) {\n                            this.finishedSuccessfully = true;\n                            if (dropContDesc.onDrop) {\n                                dropContDesc.onDrop(container, event);\n                            }\n                        }\n                    }\n                    finally {\n                        if (dropContDesc.onDragLeave) {\n                            dropContDesc.onDragLeave(container, event);\n                        }\n                    }\n                }\n            }\n            finally {\n                try {\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    event.data.finishedSuccessfully = this.finishedSuccessfully;\n                    if (descriptor.onDragEnd) {\n                        descriptor.onDragEnd(event);\n                    }\n                }\n                finally {\n                    this.draggableItem = null;\n                    if (this.dragImage && this.dragImage.parentElement) {\n                        this.dragImage.parentElement.removeChild(this.dragImage);\n                    }\n                    this.dragImage = null;\n                    this.finishedSuccessfully = false;\n                    document.removeEventListener('mouseup', mouseUpListener);\n                    document.removeEventListener('touchend', mouseUpListener);\n                }\n            }\n        };\n    }\n    registerDropContainer(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in drop container is null or undefined\");\n        }\n        this.containerDescriptors.push(descriptor);\n    }\n    removeDropContainer(descriptorOrSlot) {\n        const descs = this.containerDescriptors\n            .filter(desc => desc === descriptorOrSlot\n            || desc.element == descriptorOrSlot);\n        if (descs) {\n            for (const desc of descs) {\n                utils.removeArrayItem(this.containerDescriptors, desc);\n            }\n        }\n    }\n    mouseMoveDragListener(ev) {\n        if (ev instanceof MouseEvent) {\n            ev.preventDefault();\n        }\n        ev.stopPropagation();\n        this.updateDragItemPosition(ev);\n        if (this.containerDescriptorIndex == -1) {\n            for (let i = 0; i < this.containerDescriptors.length; i++) {\n                const descriptor = this.containerDescriptors[i];\n                if (this.detectDragEnterEvent(descriptor.element, ev)) {\n                    this.containerDescriptorIndex = i;\n                    break;\n                }\n            }\n            if (this.containerDescriptorIndex >= 0) {\n                this.dragEnterEvent(ev);\n            }\n        }\n        else {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            if (this.detectDragLeaveEvent(descriptor.element, ev)) {\n                this.dragLeaveEvent(ev);\n                this.containerDescriptorIndex = -1;\n            }\n        }\n        if (this.containerDescriptorIndex >= 0) {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            const container = {\n                element: descriptor.element,\n                scopes: descriptor.scopes,\n                data: descriptor.data\n            };\n            if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n                const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                event.dropEffect = this.dropEffect;\n                if (descriptor.onDragOver) {\n                    descriptor.onDragOver(container, event);\n                }\n            }\n        }\n    }\n    updateCusror(dropEffect) {\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n            case DropEffect.Forbid:\n                this.setCursorStyle(this.dragImage, 'no-drop');\n                break;\n            default:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n        }\n    }\n    updateImageClass(dropEffect) {\n        this.dragImage.classList.remove(`${this.classPrefix}-allow`);\n        this.dragImage.classList.remove(`${this.classPrefix}-forbid`);\n        this.dragImage.classList.remove(`${this.classPrefix}-none`);\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.dragImage.classList.add(`${this.classPrefix}-allow`);\n                break;\n            case DropEffect.None:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n            case DropEffect.Forbid:\n                this.dragImage.classList.add(`${this.classPrefix}-forbid`);\n                break;\n            default:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n        }\n    }\n    setCursorStyle(element, cursor) {\n        if (element) {\n            element.style.cursor = cursor;\n            for (let i = 0; i < element.children.length; i++) {\n                this.setCursorStyle(element.children[i], cursor);\n            }\n        }\n    }\n    updateDragItemPosition(ev) {\n        if (this.dragImage) {\n            const pos = new Position(ev);\n            this.dragImage.style.top = (pos.y - this.dragImage.offsetHeight / 2) + 'px';\n            this.dragImage.style.left = (pos.x - this.dragImage.offsetWidth / 2) + 'px';\n        }\n    }\n    dragEnterEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.Allow;\n            if (descriptor.onDragEnter) {\n                descriptor.onDragEnter(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n        else {\n            if (this.dropEffect !== DropEffect.Forbid) {\n                this.dropEffect = DropEffect.None;\n                this.updateCusror(this.dropEffect);\n                this.updateImageClass(this.dropEffect);\n            }\n        }\n    }\n    dragLeaveEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.None;\n            if (descriptor.onDragLeave) {\n                descriptor.onDragLeave(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n    }\n    detectDragEnterEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y < containerPos.y || pos.y > containerPos.y + container.offsetHeight) {\n            return false;\n        }\n        if (pos.x < containerPos.x || pos.x > containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n    detectDragLeaveEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y > containerPos.y && pos.y < containerPos.y + container.offsetHeight\n            && pos.x > containerPos.x && pos.x < containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n}\n//global variable\nconst eqDragManager = new DragManager();\n\nvar AutoResizeColumns;\n(function (AutoResizeColumns) {\n    AutoResizeColumns[AutoResizeColumns[\"Always\"] = 0] = \"Always\";\n    AutoResizeColumns[AutoResizeColumns[\"Once\"] = 1] = \"Once\";\n    AutoResizeColumns[AutoResizeColumns[\"Never\"] = 2] = \"Never\";\n})(AutoResizeColumns || (AutoResizeColumns = {}));\n\n//import { CellRendererType } from \"./easy_grid_cell_renderer\";\n//import { GridCellRenderer } from './easy_grid_cell_renderer';\nconst DEFAULT_WIDTH_STRING = 250;\nconst ROW_NUM_WIDTH = 60;\nvar GridColumnAlign;\n(function (GridColumnAlign) {\n    GridColumnAlign[GridColumnAlign[\"NONE\"] = 1] = \"NONE\";\n    GridColumnAlign[GridColumnAlign[\"LEFT\"] = 2] = \"LEFT\";\n    GridColumnAlign[GridColumnAlign[\"CENTER\"] = 3] = \"CENTER\";\n    GridColumnAlign[GridColumnAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(GridColumnAlign || (GridColumnAlign = {}));\nfunction MapAlignment(alignment) {\n    switch (alignment) {\n        case ColumnAlignment.Left:\n            return GridColumnAlign.LEFT;\n        case ColumnAlignment.Center:\n            return GridColumnAlign.CENTER;\n        case ColumnAlignment.Right:\n            return GridColumnAlign.RIGHT;\n        default:\n            return GridColumnAlign.NONE;\n    }\n}\nclass GridColumn {\n    constructor(column, grid, isRowNum = false) {\n        this._label = null;\n        this._description = null;\n        //public left: number;\n        this.align = GridColumnAlign.NONE;\n        this.isVisible = true;\n        this.isRowNum = false;\n        this.dataColumn = column;\n        this.grid = grid;\n        const widthOptions = grid.options.columnWidths || {};\n        if (column) {\n            if (column.style.alignment) {\n                this.align = MapAlignment(column.style.alignment);\n            }\n            this.width = (widthOptions && widthOptions[this.type]) ? widthOptions[this.type].default : DEFAULT_WIDTH_STRING;\n            this._description = column.description;\n        }\n        else if (isRowNum) {\n            this.isRowNum = true;\n            this.width = (widthOptions && widthOptions.rowNumColumn) ? widthOptions.rowNumColumn.default : ROW_NUM_WIDTH;\n            this._label = '';\n        }\n    }\n    get label() {\n        return this._label ? this._label : this.isRowNum ? '' : this.dataColumn.label;\n    }\n    ;\n    set label(value) {\n        this._label = this.label;\n    }\n    /** Get column description. */\n    get description() {\n        return this._description;\n    }\n    get type() {\n        return this.dataColumn ? this.dataColumn.type : null;\n    }\n}\nclass GridColumnList {\n    constructor(columnList, grid) {\n        this.items = [];\n        this.grid = grid;\n        this.sync(columnList);\n    }\n    sync(columnList, hasRowNumCol = true) {\n        this.clear();\n        const rowNumCol = new GridColumn(null, this.grid, true);\n        this.add(rowNumCol);\n        if (!hasRowNumCol) {\n            rowNumCol.isVisible = false;\n        }\n        if (columnList) {\n            for (let column of columnList.getItems()) {\n                const col = new GridColumn(column, this.grid);\n                if (this.grid.options.onSyncGridColumn) {\n                    this.grid.options.onSyncGridColumn(col);\n                }\n                this.add(col);\n            }\n        }\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(col) {\n        const index = this.items.length;\n        this.items.push(col);\n        return index;\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.items.length) {\n            this.items[index] = col;\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex)\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n    }\n    get(index) {\n        if (index >= 0 && index < this.items.length) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    //    public getIndex(name: string) : number {\n    //        return this.mapper[name];\n    //    }\n    getItems() {\n        return this.items;\n    }\n    removeAt(index) {\n        this.get(index);\n        this.items.splice(index, 1);\n        //delete this.mapper[col.name];\n    }\n    clear() {\n        this.items = [];\n        //this.mapper = {};\n    }\n}\n\nconst cssPrefix$1 = \"keg\";\nconst DFMT_REGEX = /{0:(.*?)}/g;\nvar CellRendererType;\n(function (CellRendererType) {\n    CellRendererType[CellRendererType[\"STRING\"] = 1] = \"STRING\";\n    CellRendererType[CellRendererType[\"NUMBER\"] = 2] = \"NUMBER\";\n    CellRendererType[CellRendererType[\"DATETIME\"] = 3] = \"DATETIME\";\n    CellRendererType[CellRendererType[\"BOOL\"] = 4] = \"BOOL\";\n})(CellRendererType || (CellRendererType = {}));\nconst StringCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const text = value ? value.toString().replace(/\\n/g, '\\u21B5 ') : '';\n    cellValueElement.innerText = text;\n    cellValueElement.title = text;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-left`);\n    }\n};\nconst NumberCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    let strValue = (value || '').toString();\n    if (typeof value == 'number') {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.numberToStr(value, $1);\n            });\n        }\n        else {\n            strValue = value.toLocaleString();\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst DateTimeCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const isDate = Object.prototype.toString.call(value) === '[object Date]';\n    let strValue = (value || '').toString();\n    if (isDate) {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.dateTimeToStrEx(value, column.type, $1);\n            });\n        }\n        else {\n            const locale = i18n.getCurrentLocale();\n            const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n            switch (column.type) {\n                case DataType.Date:\n                    strValue = value.toLocaleDateString(locale);\n                    break;\n                case DataType.Time:\n                    strValue = value.toLocaleTimeString(locale, timeOptions);\n                    break;\n                case DataType.DateTime:\n                    strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                    break;\n            }\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst BoolCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    if (column.dataColumn && column.dataColumn.displayFormat\n        && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n        const strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n            return i18n.booleanToStr(value, $1);\n        });\n        return StringCellRendererDefault(strValue, column, cellValueElement);\n    }\n    else {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-bool`);\n        cellValueElement.classList.add(`${cssPrefix$1}-${value ? 'cell-value-true' : 'cell-value-false'}`);\n    }\n};\nclass GridCellRendererStore {\n    constructor(options) {\n        this.renderers = {};\n        this.defaultRenderers = {};\n        this.registerRenderer('StringDefault', StringCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.STRING, StringCellRendererDefault);\n        this.registerRenderer('NumberDefault', NumberCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.NUMBER, NumberCellRendererDefault);\n        this.registerRenderer('DateTimeDefault', DateTimeCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.DATETIME, DateTimeCellRendererDefault);\n        this.registerRenderer('BoolDefault', BoolCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.BOOL, BoolCellRendererDefault);\n    }\n    getDefaultRenderer(columnType) {\n        const cellType = this.getCellType(columnType);\n        return this.defaultRenderers[CellRendererType[cellType]];\n    }\n    getDefaultRendererByType(rendererType) {\n        return this.defaultRenderers[CellRendererType[rendererType]];\n    }\n    setDefaultRenderer(cellType, renderer) {\n        if (renderer) {\n            this.defaultRenderers[CellRendererType[cellType]] = renderer;\n        }\n    }\n    getRenderer(name) {\n        return this.renderers[name];\n    }\n    registerRenderer(name, renderer) {\n        this.renderers[name] = renderer;\n    }\n    getCellType(dataType) {\n        switch (dataType) {\n            case DataType.Autoinc:\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Currency:\n            case DataType.Float:\n            case DataType.Int32:\n            case DataType.Int64:\n                return CellRendererType.NUMBER;\n            case DataType.Date:\n            case DataType.DateTime:\n            case DataType.Time:\n                return CellRendererType.DATETIME;\n            case DataType.Bool:\n                return CellRendererType.BOOL;\n            default:\n                return CellRendererType.STRING;\n        }\n    }\n}\n\nconst DEFAULT_ROW_HEIGHT = 36;\n/** Represents a grid widget with columns rows, paging, custom rendering and more */\nclass EasyGrid {\n    /** Creates and initializes all internal properties of the grid object */\n    constructor(options) {\n        this.cssPrefix = \"keg\";\n        this.pagination = { page: 1, pageSize: 30, total: 0 };\n        this.paginationOptions = {\n            maxButtonCount: 10,\n            useBootstrap: false\n        };\n        this.defaultDataGridOptions = {\n            slot: null,\n            dataTable: null,\n            fixHeightOnFirstRender: false,\n            syncGridColumns: true,\n            useRowNumeration: true,\n            allowDragDrop: false,\n            aggregates: {\n                settings: null,\n                calculator: null\n            },\n            paging: {\n                enabled: true,\n                pageSize: 30,\n                pageSizeItems: [20, 30, 50, 100, 200]\n            },\n            columnWidths: {\n                autoResize: AutoResizeColumns.Always,\n                stringColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                numberColumns: {\n                    min: 60,\n                    default: 120\n                },\n                boolColumns: {\n                    min: 50,\n                    default: 80\n                },\n                dateColumns: {\n                    min: 80,\n                    default: 200\n                },\n                otherColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                rowNumColumn: {\n                    min: 40,\n                    default: 60\n                }\n            },\n            showPlusButton: false,\n            viewportRowsCount: null,\n            showActiveRow: true\n        };\n        this.rowsOnPagePromise = null;\n        this.containerInitialHeight = 0;\n        this.firstRender = true;\n        this.prevRowTotals = null;\n        this.landingIndex = -1;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this._activeRowIndex = -1;\n        if (options && options.paging) {\n            options.paging = utils.assign(this.defaultDataGridOptions.paging, options.paging);\n        }\n        this.options = this.mergeOptions(options);\n        this.processColumnWidthsOptions();\n        if (!this.options.slot)\n            throw Error('\"slot\" parameter is required to initialize EasyDataGrid');\n        if (!this.options.dataTable)\n            throw Error('\"dataTable\" parameter is required to initialize EasyDataGrid');\n        this.dataTable = options.dataTable;\n        this.eventEmitter = new EventEmitter(this);\n        this.cellRendererStore = new GridCellRendererStore(options);\n        this.columns = new GridColumnList(this.dataTable.columns, this);\n        this.setSlot(this.options.slot);\n        this.init(this.options);\n    }\n    mergeOptions(options) {\n        const aggrOptions = utils.assignDeep({}, this.defaultDataGridOptions.aggregates, options.aggregates);\n        const colWidthOptions = utils.assignDeep({}, this.defaultDataGridOptions.columnWidths, options.columnWidths);\n        const pagingOptions = utils.assignDeep({}, this.defaultDataGridOptions.paging, options.paging);\n        const result = utils.assign({}, this.defaultDataGridOptions, options);\n        result.aggregates = aggrOptions;\n        result.columnWidths = colWidthOptions;\n        result.paging = pagingOptions;\n        return result;\n    }\n    processColumnWidthsOptions() {\n        const widthOptions = this.options.columnWidths;\n        if (!widthOptions)\n            return;\n        //string columns\n        utils.getStringDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.stringColumns), widthOptions[dataType]);\n        });\n        //numeric columns\n        utils.getNumericDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.numberColumns), widthOptions[dataType]);\n        });\n        //bool columns\n        widthOptions[DataType.Bool] = Object.assign(Object.assign({}, widthOptions.boolColumns), widthOptions[DataType.Bool]);\n        //date columns\n        utils.getDateDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.dateColumns), widthOptions[dataType]);\n        });\n        //other columns\n        const knownTypes = [\n            ...utils.getStringDataTypes(),\n            ...utils.getNumericDataTypes(),\n            ...utils.getDateDataTypes(),\n            DataType.Bool\n        ];\n        utils.getAllDataTypes().forEach(dataType => {\n            if (!(dataType in knownTypes)) {\n                widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.otherColumns), widthOptions[dataType]);\n            }\n        });\n        widthOptions[DataType.Unknown] = widthOptions.otherColumns;\n    }\n    setSlot(slot) {\n        if (typeof slot === 'string') {\n            if (slot.length) {\n                if (slot[0] === '#') {\n                    this.slot = document.getElementById(slot.substring(1));\n                }\n                else if (slot[0] === '.') {\n                    const result = document.getElementsByClassName(slot.substring(1));\n                    if (result.length)\n                        this.slot = result[0];\n                }\n                else {\n                    throw Error('Unrecognized slot parameter ' +\n                        '(Must be id, class or HTMLElement): ' + slot);\n                }\n            }\n        }\n        else {\n            this.slot = slot;\n        }\n    }\n    /** Initializes grid widget according to the options passed in the parameter */\n    init(options) {\n        if (options.onInit) {\n            this.addEventListener('init', options.onInit);\n        }\n        if (options.onRowClick) {\n            this.addEventListener('rowClick', options.onRowClick);\n        }\n        if (options.onRowDbClick) {\n            this.addEventListener('rowDbClick', options.onRowDbClick);\n        }\n        if (options.onPlusButtonClick) {\n            this.addEventListener('plusButtonClick', options.onPlusButtonClick);\n        }\n        if (options.onColumnChanged) {\n            this.addEventListener('columnChanged', options.onColumnChanged);\n        }\n        if (options.onColumnDeleted) {\n            this.addEventListener('columnDeleted', options.onColumnDeleted);\n        }\n        if (options.onColumnMoved) {\n            this.addEventListener('columnMoved', options.onColumnMoved);\n        }\n        if (options.onPageChanged) {\n            this.addEventListener('pageChanged', options.onPageChanged);\n        }\n        if (options.onActiveRowChanged) {\n            this.addEventListener('activeRowChanged', options.onActiveRowChanged);\n        }\n        this.addEventListener('pageChanged', ev => this.activeRowIndex = -1);\n        utils.assign(this.paginationOptions, options.pagination);\n        this.pagination.pageSize = this.options.paging.pageSize\n            || this.pagination.pageSize;\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"gridColumnMove\"],\n                onDragEnter: (_, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (_, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (_, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (_, ev) => {\n                    this.dataTable.columns.move(ev.data.column, this.landingIndex);\n                    this.refresh();\n                    this.fireEvent({\n                        type: 'columnMoved',\n                        columnId: ev.data.column.id,\n                        newIndex: this.landingIndex\n                    });\n                }\n            });\n        }\n        this.refresh();\n        this.fireEvent('init');\n    }\n    /** Fires a grid event. You can pass either an event type\n     * (like 'init', 'rowClick', 'pageChanged', etc )\n     * or a ready-to-use grid event object\n     * */\n    fireEvent(event) {\n        if (typeof event === \"string\") {\n            this.eventEmitter.fire(event);\n        }\n        else {\n            this.eventEmitter.fire(event.type, event);\n        }\n    }\n    /** Allows to set the data (represented by a EasyDataTable object)\n     *  or to replace the existing one associated with the grid */\n    setData(data) {\n        this.dataTable = data;\n        this.clear();\n        this.refresh();\n    }\n    /** Returns the EasyDataTable object associated with the grid via `setData()` call */\n    getData() {\n        return this.dataTable;\n    }\n    /** Gets the list of grid columns */\n    getColumns() {\n        return this.columns;\n    }\n    /** This function is called when the grid is destroyed */\n    destroy() {\n        this.slot.innerHTML = \"\";\n    }\n    /** Clears the current DOM object and re-renders everything from the scratch */\n    refresh() {\n        this.clearDOM();\n        this.render();\n    }\n    clearDOM() {\n        this.slot.innerHTML = '';\n    }\n    /** Clears all DOM object in the grid and return it to its initial state */\n    clear() {\n        this.pagination.page = 1;\n        this.clearDOM();\n    }\n    /** Renders the grid */\n    render() {\n        if (!this.hasData() && !this.options.showPlusButton)\n            return;\n        this.containerInitialHeight = this.slot.clientHeight;\n        this.rootDiv = document.createElement('div');\n        this.rootDiv.style.width = '100%';\n        this.rootDiv.classList.add(`${this.cssPrefix}-root`);\n        this.columns.sync(this.dataTable.columns, this.options.useRowNumeration);\n        this.renderHeader();\n        this.rootDiv.appendChild(this.headerDiv);\n        this.renderBody();\n        this.rootDiv.appendChild(this.bodyDiv);\n        this.renderFooter();\n        this.rootDiv.appendChild(this.footerDiv);\n        let gridContainer = document.createElement('div');\n        gridContainer.classList.add(`${this.cssPrefix}-container`);\n        gridContainer.appendChild(this.rootDiv);\n        this.slot.appendChild(gridContainer);\n        const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise\n                .then(() => this.updateHeight())\n                .then(() => {\n                this.firstRender = false;\n                this.rowsOnPagePromise = null;\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.updateHeight()\n                    .then(() => {\n                    this.firstRender = false;\n                    if (needAutoResize) {\n                        this.resizeColumns();\n                    }\n                });\n            }, 100);\n        }\n    }\n    updateHeight() {\n        return new Promise((resolve) => {\n            if (this.options.viewportRowsCount) {\n                const firstRow = this.bodyCellContainerDiv.firstElementChild;\n                const rowHeight = firstRow ? firstRow.offsetHeight : DEFAULT_ROW_HEIGHT;\n                const rowCount = this.options.viewportRowsCount; // || DEFAULT_ROW_COUNT;\n                let viewportHeight = rowHeight * rowCount;\n                domel(this.bodyViewportDiv)\n                    .setStyle('height', `${viewportHeight}px`);\n                setTimeout(() => {\n                    const sbHeight = this.bodyViewportDiv.offsetHeight - this.bodyViewportDiv.clientHeight;\n                    viewportHeight = viewportHeight + sbHeight;\n                    domel(this.bodyViewportDiv)\n                        .setStyle('height', `${viewportHeight}px`);\n                    resolve();\n                }, 100);\n                return;\n            }\n            else if (this.containerInitialHeight > 0) ;\n            resolve();\n        })\n            .then(() => {\n            if (this.options.fixHeightOnFirstRender && this.firstRender) {\n                this.slot.style.height = `${this.slot.offsetHeight}px`;\n            }\n        });\n    }\n    getContainerWidth() {\n        return this.columns.getItems()\n            .filter(col => col.isVisible)\n            .map(col => col.width)\n            .reduce((sum, current) => { return sum + current; });\n    }\n    renderHeader() {\n        this.headerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.headerViewportDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-header-viewport`)\n            .toDOM();\n        this.headerCellContainerDiv = domel('div', this.headerViewportDiv)\n            .addClass(`${this.cssPrefix}-header-cell-container`)\n            .toDOM();\n        this.headerRowDiv = domel('div', this.headerCellContainerDiv)\n            .addClass(`${this.cssPrefix}-header-row`)\n            .toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let hd = this.renderColumnHeader(column, index);\n            this.headerRowDiv.appendChild(hd);\n            if (column.isRowNum) {\n                domel(hd)\n                    .addChildElement(this.renderHeaderButtons());\n            }\n        });\n        const containerWidth = this.getContainerWidth();\n        domel(this.headerCellContainerDiv)\n            .setStyle('width', `${containerWidth}px`);\n    }\n    hasData() {\n        return this.dataTable.columns.count > 0;\n    }\n    renderColumnHeader(column, index) {\n        let colBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-header-cell`)\n            .data('col-idx', `${index}`)\n            .setStyle('width', `${column.width}px`);\n        if (column.dataColumn) {\n            colBuilder\n                .data('col-id', `${column.dataColumn.id}`);\n        }\n        let colDiv = colBuilder.toDOM();\n        domel('div', colDiv)\n            .addClass(`${this.cssPrefix}-header-cell-resize`);\n        if (!column.isRowNum) {\n            domel('div', colDiv)\n                .addClass(`${this.cssPrefix}-header-cell-label`)\n                .text(column.label);\n        }\n        if (column.description) {\n            domel('div', colDiv)\n                .addClass('question-mark')\n                .title(column.description);\n        }\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: colDiv,\n                scope: \"gridColumnMove\",\n                data: { column: column },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('div');\n                    attrLabel.innerText = column.label;\n                    dragImage.classList.add(`${this.cssPrefix}-sortable-helper`);\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    ev.dropEffect = DropEffect.Allow;\n                }\n            });\n        }\n        return colDiv;\n    }\n    renderBody() {\n        this.bodyDiv = domel('div')\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n        this.bodyViewportDiv = domel('div', this.bodyDiv)\n            .addClass(`${this.cssPrefix}-body-viewport`)\n            .attr('tabIndex', '0')\n            .toDOM();\n        this.bodyCellContainerDiv = domel('div', this.bodyViewportDiv)\n            .addClass(`${this.cssPrefix}-cell-container`)\n            .toDOM();\n        const showAggrs = this.canShowAggregates();\n        if (this.dataTable) {\n            this.showProgress();\n            this.rowsOnPagePromise = this.getRowsToRender()\n                .then((rows) => {\n                this.pagination.total = this.dataTable.getTotal();\n                this.hideProgress();\n                //prevent double rendering (bad solution, we have to figure out how to avoid this behavior properly)\n                this.bodyCellContainerDiv.innerHTML = '';\n                this.prevRowTotals = null;\n                let rowsToRender = 0;\n                if (rows.length) {\n                    const groups = showAggrs\n                        ? this.options.aggregates.settings.getGroups()\n                        : [];\n                    rowsToRender = (rows.length < this.pagination.pageSize)\n                        ? rows.length\n                        : this.pagination.pageSize;\n                    rows.forEach((row, index) => {\n                        if (showAggrs)\n                            this.updateTotalsState(groups, row);\n                        //we don't actually render the last row\n                        if (index < rowsToRender) {\n                            const tr = this.renderRow(row, index);\n                            this.bodyCellContainerDiv.appendChild(tr);\n                        }\n                    });\n                    const showGrandTotalsOnEachPage = this.options.aggregates && this.options.aggregates.showGrandTotalsOnEachPage;\n                    if (showAggrs && (this.isLastPage() || showGrandTotalsOnEachPage)) {\n                        const row = new DataRow(this.dataTable.columns, new Array(this.dataTable.columns.count));\n                        this.updateTotalsState(groups, row, true);\n                    }\n                }\n                const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n                if (needAutoResize) {\n                    this.resizeColumns();\n                }\n                else {\n                    const containerWidth = this.getContainerWidth();\n                    domel(this.bodyCellContainerDiv)\n                        .setStyle('width', `${containerWidth}px`);\n                }\n                return rowsToRender;\n            })\n                .catch(error => { console.error(error); return 0; });\n        }\n        this.bodyViewportDiv.addEventListener('scroll', ev => {\n            domel(this.headerViewportDiv)\n                .setStyle('margin-left', `-${this.bodyViewportDiv.scrollLeft}px`);\n        });\n        this.bodyViewportDiv.addEventListener('keydown', this.onViewportKeydown.bind(this));\n    }\n    isLastPage() {\n        if (this.dataTable.elasticChunks) {\n            return this.dataTable.totalIsKnown()\n                && (this.pagination.page * this.pagination.pageSize) >= this.pagination.total;\n        }\n        return this.pagination.page * this.pagination.pageSize >= this.pagination.total;\n    }\n    canShowAggregates() {\n        if (!this.options || !this.options.aggregates || !this.options.aggregates.settings)\n            return false;\n        const aggrSettings = this.options.aggregates.settings;\n        const result = (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())\n            && (aggrSettings.hasGroups() || aggrSettings.hasGrandTotals());\n        return result;\n    }\n    updateTotalsState(groups, newRow, isLast = false) {\n        const aggrSettings = this.options.aggregates.settings;\n        if (this.prevRowTotals && aggrSettings.hasGroups()) {\n            let changeLevel = -1;\n            for (let level = 1; level <= groups.length; level++) {\n                const group = groups[level - 1];\n                for (const col of group.columns) {\n                    if (!aggrSettings.compareValues(this.prevRowTotals.getValue(col), newRow.getValue(col))) {\n                        changeLevel = level;\n                        break;\n                    }\n                }\n                if (changeLevel !== -1)\n                    break;\n            }\n            if (changeLevel !== -1) {\n                for (let level = groups.length; level >= changeLevel; level--) {\n                    const row = new DataRow(this.dataTable.columns, this.prevRowTotals.toArray());\n                    const tr = this.renderTotalsRow(level, row);\n                    this.bodyCellContainerDiv.appendChild(tr);\n                }\n            }\n        }\n        if (isLast && aggrSettings.hasGrandTotals() && aggrSettings.hasAggregates()) {\n            const tr = this.renderTotalsRow(0, newRow);\n            this.bodyCellContainerDiv.appendChild(tr);\n        }\n        this.prevRowTotals = newRow;\n    }\n    applyGroupColumnTemplate(template, value, count) {\n        let result = template.replace(/{{\\s*GroupValue\\s*}}/g, value ? `${value}` : '-');\n        result = result.replace(/{{\\s*GroupCount\\s*}}/g, count ? `${count}` : '-');\n        return result;\n    }\n    renderTotalsRow(level, row) {\n        const aggrSettings = this.options.aggregates.settings;\n        const group = (level > 0)\n            ? aggrSettings.getGroups()[level - 1]\n            : { columns: [], aggregates: aggrSettings.getAggregates() };\n        const rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-totals`)\n            .addClass(`${this.cssPrefix}-totals-lv${level}`)\n            .data('totals-level', `${level}`)\n            .attr('tabindex', '-1');\n        const rowElement = rowBuilder.toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let val = '';\n            const colIndex = !column.isRowNum\n                ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                : -1;\n            if (!column.isRowNum && column.dataColumn) {\n                if (group.columns.indexOf(column.dataColumn.id) >= 0) {\n                    val = row.getValue(colIndex);\n                }\n            }\n            if (colIndex == this.dataTable.columns.count - 1) {\n                val = '.  .  .  .  .  .';\n            }\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        const aggrContainer = this.options.aggregates.calculator.getAggrContainer();\n        const aggrCols = aggrSettings.getAggregates().map(c => c.colId);\n        const key = aggrSettings.buildGroupKey(group, row);\n        aggrContainer.getAggregateData(level, key)\n            .then((values) => {\n            for (const aggrColId of aggrCols) {\n                row.setValue(aggrColId, values[aggrColId]);\n            }\n            rowElement.innerHTML = '';\n            this.columns.getItems().forEach((column, index) => {\n                if (!column.isVisible) {\n                    return;\n                }\n                let val = '';\n                const colIndex = !column.isRowNum\n                    ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                    : -1;\n                if (!column.isRowNum) {\n                    let isLastGroupColumn = false;\n                    if (column.dataColumn) {\n                        const groupColIndex = group.columns.indexOf(column.dataColumn.id);\n                        const aggrColIndex = aggrCols.indexOf(column.dataColumn.id);\n                        if (level > 0) {\n                            isLastGroupColumn = groupColIndex == group.columns.length - 1;\n                        }\n                        else {\n                            //if it's a grand total row consider first column as the last group column\n                            isLastGroupColumn = colIndex == 0;\n                        }\n                        if (groupColIndex >= 0 || aggrColIndex >= 0) {\n                            val = row.getValue(colIndex);\n                        }\n                    }\n                    let groupFooterTemplate = '';\n                    if (level > 0) {\n                        groupFooterTemplate = column.dataColumn.groupFooterColumnTemplate;\n                        //set the default template for the last grouping column\n                        if (!groupFooterTemplate && aggrSettings.hasRecordCount() && isLastGroupColumn) {\n                            groupFooterTemplate = '{{GroupValue}} ({{GroupCount}})';\n                        }\n                    }\n                    if (groupFooterTemplate) {\n                        const cellDiv = this.renderCell(column, index, val, rowElement);\n                        const innerCell = cellDiv.firstChild;\n                        val = innerCell.innerHTML;\n                        val = this.applyGroupColumnTemplate(groupFooterTemplate, val, values[aggrSettings.COUNT_FIELD_NAME]);\n                    }\n                }\n                const cellDiv = this.renderCell(column, index, val, rowElement);\n                rowElement.appendChild(cellDiv);\n            });\n        })\n            .catch((error) => console.error(error));\n        return rowElement;\n    }\n    onViewportKeydown(ev) {\n        if (this.options.showActiveRow) {\n            const rowCount = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row`).length;\n            let newValue;\n            switch (ev.key) {\n                case 'ArrowLeft':\n                    break;\n                case 'ArrowRight':\n                    break;\n                case 'ArrowUp':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? rowCount - 1 : this.activeRowIndex - 1;\n                    this.activeRowIndex = newValue >= 0 ? newValue : 0;\n                    break;\n                case 'ArrowDown':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? 0 : this.activeRowIndex + 1;\n                    this.activeRowIndex = newValue < rowCount ? newValue : rowCount - 1;\n                    break;\n            }\n        }\n    }\n    ensureRowVisibility(rowOrIndex) {\n        const row = typeof rowOrIndex === 'number'\n            ? this.getDataRow(rowOrIndex)\n            : rowOrIndex;\n        if (row) {\n            let rowRect = row.getBoundingClientRect();\n            const viewportRect = this.bodyViewportDiv.getBoundingClientRect();\n            const rowTop = rowRect.top - viewportRect.top;\n            const rowBottom = rowRect.bottom - viewportRect.top;\n            const viewportHeight = this.bodyViewportDiv.clientHeight;\n            const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n            if (rowTop > 0 &&\n                rowBottom <= viewportHeight &&\n                rowRect.top > 0 &&\n                rowRect.bottom < windowHeight) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowTop;\n            }\n            else if (rowBottom > viewportHeight) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowBottom - viewportHeight;\n            }\n            rowRect = row.getBoundingClientRect();\n            if (rowRect.top < 0) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.top;\n            }\n            else if (rowRect.bottom > windowHeight) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.bottom - windowHeight;\n            }\n        }\n    }\n    /** Returns a promise with the list of the rows to render on one page.\n     * The list contains pageSize+1 row to make it possible\n     * to render the totals row (if it appears to be on the edge between pages)\n     */\n    getRowsToRender() {\n        if (this.options.paging.enabled === false) {\n            return Promise.resolve(this.dataTable.getCachedRows());\n        }\n        return this.dataTable.getRows({\n            offset: (this.pagination.page - 1) * this.pagination.pageSize,\n            limit: this.pagination.pageSize + 1\n        })\n            .catch(error => {\n            console.error(error);\n            return [];\n        });\n    }\n    renderFooter() {\n        this.footerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-footer`)\n            .toDOM();\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise.then(count => {\n                this.footerDiv.innerHTML = '';\n                this.footerPaginateDiv = this.renderPageNavigator();\n                this.footerDiv.appendChild(this.footerPaginateDiv);\n                const pageInfoBlock = this.renderPageInfoBlock(count);\n                this.footerDiv.appendChild(pageInfoBlock);\n            });\n        }\n    }\n    renderPageInfoBlock(count) {\n        const pageInfoDiv = domel('div')\n            .addClass(`${this.cssPrefix}-page-info`)\n            .toDOM();\n        const rowCount = this.dataTable.getTotal();\n        if (rowCount > 0) {\n            const fistPageRecordNum = count\n                ? (this.pagination.page - 1) * this.pagination.pageSize + 1\n                : 0;\n            const lastPageRecordNum = count\n                ? fistPageRecordNum + count - 1\n                : 0;\n            let totalStr = this.dataTable.getTotal().toString();\n            if (this.dataTable.elasticChunks) {\n                const count = this.dataTable.getCachedCount();\n                const total = this.dataTable.getTotal();\n                if (count !== total)\n                    totalStr = '?';\n            }\n            pageInfoDiv.innerHTML = i18n.getText('GridPageInfo')\n                .replace('{FirstPageRecordNum}', `<span>${fistPageRecordNum.toString()}</span>`)\n                .replace('{LastPageRecordNum}', `<span>${lastPageRecordNum.toString()}</span>`)\n                .replace('{Total}', `<span>${totalStr}</span>`);\n        }\n        return pageInfoDiv;\n    }\n    showProgress() {\n    }\n    hideProgress() {\n    }\n    getLocalIndexByGlobal(index) {\n        if (this.pagination) {\n            return index % this.pagination.pageSize;\n        }\n        else {\n            return index;\n        }\n    }\n    getGlobalIndexByLocal(index) {\n        if (this.pagination) {\n            return (this.pagination.page - 1) * this.pagination.pageSize + index;\n        }\n        else {\n            return index;\n        }\n    }\n    renderRow(row, index) {\n        let indexGlobal = this.getGlobalIndexByLocal(index);\n        let rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-${index % 2 == 1 ? 'odd' : 'even'}`)\n            .data('row-idx', `${indexGlobal}`)\n            .attr('tabindex', '-1')\n            .on('click', (ev) => {\n            this.activeRowIndex = index;\n            this.fireEvent({\n                type: 'rowClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        })\n            .on('dblclick', (ev) => {\n            this.fireEvent({\n                type: 'rowDbClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        });\n        if (index == 0) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-first`);\n        }\n        let rowElement = rowBuilder.toDOM();\n        if (this.options.showActiveRow && index == this.activeRowIndex) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-active`);\n        }\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            const colindex = column.isRowNum ? -1 : this.dataTable.columns.getIndex(column.dataColumn.id);\n            let val = column.isRowNum ? indexGlobal + 1 : row.getValue(colindex);\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        return rowElement;\n    }\n    renderCell(column, colIndex, value, rowElement) {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-cell`)\n            .data('col-idx', `${colIndex}`)\n            .attr('tabindex', '-1')\n            .setStyle('width', `${column.width}px`);\n        if (column.align == GridColumnAlign.LEFT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-left`);\n        }\n        else if (column.align == GridColumnAlign.RIGHT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-right`);\n        }\n        else if (column.align == GridColumnAlign.CENTER) {\n            builder.addClass(`${this.cssPrefix}-cell-align-center`);\n        }\n        const cellElement = builder.toDOM();\n        const valueCell = cellElement.appendChild(domel('div')\n            .addClass(`${this.cssPrefix}-cell-value`)\n            .toDOM());\n        const cellRenderer = this.getCellRenderer(column);\n        if (cellRenderer) {\n            cellRenderer(value, column, valueCell, rowElement);\n        }\n        return cellElement;\n    }\n    getCellRenderer(column) {\n        let cellRenderer;\n        if (column.isRowNum) {\n            cellRenderer = this.cellRendererStore.getDefaultRendererByType(CellRendererType.NUMBER);\n        }\n        else {\n            cellRenderer = this.cellRendererStore.getDefaultRenderer(column.type);\n        }\n        if (this.options && this.options.onGetCellRenderer) {\n            cellRenderer = this.options.onGetCellRenderer(column, cellRenderer) || cellRenderer;\n        }\n        return cellRenderer;\n    }\n    /** Sets current grid pages (if paging is used) */\n    setPage(page) {\n        this.pagination.page = page;\n        this.fireEvent({ type: \"pageChanged\", page: page });\n        this.refresh();\n        this.bodyViewportDiv.focus();\n    }\n    renderPageNavigator() {\n        let paginateDiv = document.createElement('div');\n        paginateDiv.className = `${this.cssPrefix}-pagination-wrapper`;\n        const rowCount = this.dataTable.getTotal();\n        const totalRows = this.dataTable.getTotal();\n        const pageSize = this.pagination.pageSize;\n        const totalPages = Math.ceil(totalRows / pageSize);\n        const distance = 8, islandSize = 3;\n        const prefix = this.paginationOptions.useBootstrap ? '' : `${this.cssPrefix}-`;\n        if (!this.options.paging || !this.options.paging.enabled || rowCount <= pageSize) {\n            return paginateDiv;\n        }\n        const buttonClickHandler = (ev) => {\n            const element = ev.target;\n            if (element.hasAttribute('data-page')) {\n                const page = parseInt(element.getAttribute('data-page'));\n                this.setPage(page);\n            }\n        };\n        const renderPaginationItem = (pageIndex, content, disabled, extreme, active, title) => {\n            const li = document.createElement('li');\n            li.className = `${prefix}page-item`;\n            if (!extreme) {\n                if (active) {\n                    li.className += ' active';\n                }\n                const a = document.createElement('a');\n                a.setAttribute('href', 'javascript:void(0)');\n                a.innerHTML = content || pageIndex.toString();\n                a.setAttribute(\"data-page\", `${pageIndex}`);\n                a.className = `${prefix}page-link`;\n                a.addEventListener(\"click\", buttonClickHandler);\n                if (title) {\n                    a.setAttribute(\"title\", title);\n                }\n                li.appendChild(a);\n                return li;\n            }\n            let a = document.createElement('span');\n            a.setAttribute('aria-hidden', 'true');\n            a.className = `${prefix}page-link`;\n            if (disabled) {\n                li.className += ' disabled';\n            }\n            else {\n                if (this.paginationOptions.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${pageIndex}`);\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute('data-page', `${pageIndex}`);\n                    a = newA;\n                }\n                a.className = `${prefix}page-link`;\n                a.addEventListener(\"click\", buttonClickHandler);\n            }\n            a.innerHTML = content;\n            if (title) {\n                a.setAttribute(\"title\", title);\n            }\n            li.appendChild(a);\n            return li;\n        };\n        const pageIndex = this.pagination.page || 1;\n        let ul = document.createElement('ul');\n        ul.className = `${prefix}pagination`;\n        ul.style.userSelect = 'none';\n        paginateDiv.appendChild(ul);\n        if (this.dataTable.elasticChunks) {\n            let cell = renderPaginationItem(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n            ul.appendChild(cell);\n            cell = renderPaginationItem(pageIndex + 1, '&raquo;', this.isLastPage(), true, false);\n            ul.appendChild(cell);\n        }\n        else {\n            if (totalPages > 10) {\n                ul.appendChild(renderPaginationItem(pageIndex - 10, '&laquo;', pageIndex <= 10, true, false, \"Jump left on 10 pages\"));\n            }\n            ul.appendChild(renderPaginationItem(pageIndex - 1, '&lsaquo;', pageIndex == 1, true, false, \"Prev Page\"));\n            ul.appendChild(renderPaginationItem(1, '1', pageIndex == 1, false, pageIndex === 1));\n            if (totalPages <= 10) {\n                for (let i = 2; i < totalPages; i++) {\n                    ul.appendChild(renderPaginationItem(i, `${i}`, pageIndex === i, false, pageIndex === i));\n                }\n            }\n            else {\n                if (pageIndex < distance) {\n                    for (let i = 2; i <= distance; i++) {\n                        ul.appendChild(renderPaginationItem(i, `${i}`, false, false, pageIndex === i));\n                    }\n                    if (totalPages > distance) {\n                        ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    }\n                }\n                else if (pageIndex <= totalPages && pageIndex > totalPages - distance + 1) {\n                    if (totalPages > distance) {\n                        ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    }\n                    for (let i = totalPages - distance + 1; i < totalPages; i++) {\n                        ul.appendChild(renderPaginationItem(i, `${i}`, pageIndex === i, false, pageIndex === i));\n                    }\n                }\n                else {\n                    ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    // Island Left Side\n                    for (let i = islandSize; i > 0; i--) {\n                        ul.appendChild(renderPaginationItem(pageIndex - i, `${pageIndex - i}`, false, false, false));\n                    }\n                    // Center of Island\n                    ul.appendChild(renderPaginationItem(pageIndex, `${pageIndex}`, false, false, true));\n                    // Island Right Size\n                    for (let i = 1; i <= islandSize; i++) {\n                        ul.appendChild(renderPaginationItem(pageIndex + i, `${pageIndex + i}`, false, false, false));\n                    }\n                    ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                }\n            }\n            if (totalPages > 1 || pageIndex < totalPages) {\n                ul.appendChild(renderPaginationItem(totalPages, `${totalPages}`, pageIndex === totalPages, false, pageIndex === totalPages));\n            }\n            ul.appendChild(renderPaginationItem(pageIndex + 1, '&rsaquo;', pageIndex == totalPages, true, false, \"Next Page\"));\n            if (totalPages > 10) {\n                ul.appendChild(renderPaginationItem(pageIndex + 10, '&raquo;', pageIndex >= totalPages - 10, true, false, \"Jump right on 10 pages\"));\n            }\n        }\n        if (this.options.paging.allowPageSizeChange) {\n            const selectChangeHandler = (ev) => {\n                const newValue = parseInt(ev.target.value);\n                this.pagination.pageSize = newValue;\n                this.pagination.page = 1;\n                this.refresh();\n            };\n            const pageSizes = document.createElement('div');\n            pageSizes.className = `${this.cssPrefix}-page-sizes`;\n            const selectSize = document.createElement('div');\n            selectSize.className = `kfrm-select ${this.cssPrefix}-page-sizes-select`;\n            pageSizes.appendChild(selectSize);\n            const sel = document.createElement('select');\n            const selOptions = this.options.paging.pageSizeItems || [];\n            const selSet = new Set(selOptions);\n            selSet.add(this.options.paging.pageSize || 20);\n            Array.from(selSet).forEach(el => {\n                const option = document.createElement(\"option\");\n                option.value = el.toString();\n                option.text = el.toString();\n                sel.appendChild(option);\n            });\n            sel.value = (this.pagination.pageSize || 20).toString();\n            selectSize.appendChild(sel);\n            sel.addEventListener('change', selectChangeHandler);\n            const labelDiv = document.createElement('div');\n            labelDiv.className = `${this.cssPrefix}-page-sizes-label`;\n            pageSizes.appendChild(labelDiv);\n            const label = document.createElement('span');\n            label.innerText = i18n.getText('GridItemsPerPage');\n            labelDiv.appendChild(label);\n            paginateDiv.appendChild(pageSizes);\n        }\n        return paginateDiv;\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, event => handler(event.data));\n    }\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    renderHeaderButtons() {\n        if (this.options.showPlusButton) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-header-btn-plus`)\n                .title(this.options.plusButtonTitle || 'Add')\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .on('click', (e) => {\n                e.preventDefault();\n                this.fireEvent({\n                    type: 'plusButtonClick',\n                    sourceEvent: e\n                });\n            }))\n                .toDOM();\n        }\n        return domel('span')\n            .addText('#')\n            .toDOM();\n    }\n    showLandingSlot(pageX, pageY) {\n        const colElems = this.headerRowDiv.querySelectorAll(`[class*=${this.cssPrefix}-table-col]`);\n        const cols = [];\n        for (let i = 1; i < colElems.length; i++) {\n            const rowElem = colElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            cols.push(rowElem);\n        }\n        if (cols.length === 0) {\n            this.landingIndex = 0;\n            this.headerRowDiv.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let col of cols) {\n            const colPos = getElementAbsolutePos(col);\n            const width = col.offsetWidth;\n            if (pageX > colPos.x && pageX < colPos.x + width) {\n                // -1 as we don't need to count add button here\n                newLandingIndex = parseInt(col.getAttribute('data-col-idx')) - 1;\n            }\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < cols.length) {\n                this.headerRowDiv.insertBefore(this.landingSlot, cols[this.landingIndex]);\n            }\n            else {\n                this.headerRowDiv.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    get activeRowIndex() {\n        return this._activeRowIndex;\n    }\n    set activeRowIndex(value) {\n        if (value !== this._activeRowIndex) {\n            const oldValue = this._activeRowIndex;\n            this._activeRowIndex = value;\n            this.updateActiveRow();\n            this.fireEvent({\n                type: 'activeRowChanged',\n                oldValue,\n                newValue: this.activeRowIndex,\n                rowIndex: this.getGlobalIndexByLocal(this.activeRowIndex)\n            });\n        }\n    }\n    updateActiveRow() {\n        if (this.options.showActiveRow) {\n            const rows = this.bodyCellContainerDiv.querySelectorAll(`[class*=${this.cssPrefix}-row-active]`);\n            rows.forEach(el => { el.classList.remove(`${this.cssPrefix}-row-active`); });\n            const activeRow = this.getActiveRow();\n            if (activeRow) {\n                activeRow.classList.add(`${this.cssPrefix}-row-active`);\n                this.ensureRowVisibility(this.activeRowIndex);\n            }\n        }\n    }\n    getActiveRow() {\n        return this.getDataRow(this.activeRowIndex);\n    }\n    getDataRow(index) {\n        const rows = Array.from(this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row:not(.${this.cssPrefix}-row-totals)`));\n        if (index >= 0 && index < rows.length)\n            return rows[index];\n        return null;\n    }\n    /** Makes the grid focused for keyboard events */\n    focus() {\n        this.bodyViewportDiv.focus();\n    }\n    /** Resizes columns according to the data they represent */\n    resizeColumns() {\n        if (this.options.columnWidths.autoResize === AutoResizeColumns.Never)\n            return;\n        const containerWidth = this.bodyCellContainerDiv.style.width;\n        this.bodyCellContainerDiv.style.visibility = 'hidden';\n        this.bodyCellContainerDiv.style.width = '1px';\n        //this.headerRowDiv.style.visibility = 'hidden';\n        this.headerRowDiv.style.width = '1px';\n        let sumWidth = 0;\n        const columns = this.columns.getItems();\n        const headerCells = this.headerCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-header-cell`);\n        let headerIdx = 0;\n        for (let idx = 0; idx < this.columns.count; idx++) {\n            const column = columns[idx];\n            if (!column.isVisible)\n                continue;\n            const calculatedWidth = this.options.columnWidths.autoResize !== AutoResizeColumns.Always && column.dataColumn\n                ? column.dataColumn.calculatedWidth\n                : 0;\n            const cellValues = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-cell[data-col-idx=\"${idx}\"] > .${this.cssPrefix}-cell-value`);\n            let maxWidth = 0;\n            if (calculatedWidth > 0) {\n                sumWidth += calculatedWidth;\n                column.width = calculatedWidth;\n                cellValues.forEach(value => {\n                    value.parentElement.style.width = `${calculatedWidth}px`;\n                });\n                headerCells[headerIdx].style.width = `${calculatedWidth}px`;\n            }\n            else {\n                if (cellValues.length == 0) {\n                    headerCells[headerIdx].style.width = null;\n                    headerCells[headerIdx].style.whiteSpace = 'nowrap';\n                }\n                maxWidth = headerCells[headerIdx].offsetWidth;\n                if (cellValues.length > 0) {\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = null;\n                        const width = value.parentElement.offsetWidth;\n                        if (width > maxWidth) {\n                            maxWidth = width;\n                        }\n                    });\n                    maxWidth += 3;\n                    const maxOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.max || 500\n                        : this.options.columnWidths[column.dataColumn.type].max || 2000;\n                    const minOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.min || 0\n                        : this.options.columnWidths[column.dataColumn.type].min || 20;\n                    if (maxWidth > maxOption) {\n                        maxWidth = maxOption;\n                    }\n                    if (maxWidth < minOption) {\n                        maxWidth = minOption;\n                    }\n                    if (utils.isNumericType(column.type)) {\n                        //increase the calculated width in 1.3 times for numeric columns\n                        maxWidth = Math.round(maxWidth * 1.3);\n                    }\n                    sumWidth += maxWidth;\n                    column.width = maxWidth;\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = `${maxWidth}px`;\n                    });\n                    headerCells[headerIdx].style.width = `${maxWidth}px`;\n                    if (column.dataColumn) {\n                        column.dataColumn.calculatedWidth = maxWidth;\n                    }\n                }\n                else {\n                    sumWidth += maxWidth;\n                }\n            }\n            headerIdx++;\n        }\n        if (sumWidth > 0) {\n            this.bodyCellContainerDiv.style.width = `${sumWidth}px`;\n            this.headerCellContainerDiv.style.width = `${sumWidth}px`;\n        }\n        else {\n            this.bodyCellContainerDiv.style.width = containerWidth;\n            this.headerCellContainerDiv.style.width = containerWidth;\n        }\n        this.bodyCellContainerDiv.style.visibility = null;\n        this.headerRowDiv.removeAttribute('style');\n    }\n}\n\nclass Calendar {\n    get cssPrefix() {\n        return 'kdtp-cal';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n        if (!this.options.yearRange) {\n            this.options.yearRange = 'c-10:c+10';\n        }\n    }\n    setDate(date) {\n        this.currentDate = new Date(date);\n    }\n    getDate() {\n        return new Date(this.currentDate);\n    }\n    dateChanged(apply) {\n        if (this.options.onDateChanged) {\n            this.options.onDateChanged(this.currentDate, apply);\n        }\n    }\n}\n\nclass DateTimePicker {\n    get cssPrefix() {\n        return 'kdtp';\n    }\n    constructor(options) {\n        this.calendar = null;\n        this.timePicker = null;\n        this.options = options;\n        this.render();\n    }\n    setDateTime(dateTime) {\n        this.currentDateTime = new Date(dateTime);\n        if (this.calendar) {\n            this.calendar.setDate(this.currentDateTime);\n        }\n        if (this.timePicker) {\n            this.timePicker.setTime(this.currentDateTime);\n        }\n    }\n    getDateTime() {\n        return new Date(this.currentDateTime);\n    }\n    render() {\n        if (this.options.showCalendar) {\n            this.calendar = this.createCalendar({\n                yearRange: this.options.yearRange,\n                showDateTimeInput: this.options.showDateTimeInput,\n                timePickerIsUsed: this.options.showTimePicker,\n                oneClickDateSelection: this.options.oneClickDateSelection,\n                onDateChanged: (date, apply) => {\n                    this.currentDateTime = date;\n                    if (this.timePicker) {\n                        this.timePicker.setTime(this.currentDateTime);\n                    }\n                    if (this.options.showTimePicker) {\n                        this.dateTimeChanged();\n                    }\n                    if (apply) {\n                        this.apply(this.currentDateTime);\n                    }\n                }\n            });\n            if (this.calendar)\n                this.calendar.render();\n        }\n        if (this.options.showTimePicker) {\n            this.timePicker = this.createTimePicker({\n                onTimeChanged: (time) => {\n                    this.currentDateTime.setHours(time.getHours());\n                    this.currentDateTime.setMinutes(time.getMinutes());\n                    if (this.calendar) {\n                        this.calendar.setDate(this.currentDateTime);\n                    }\n                    this.dateTimeChanged();\n                }\n            });\n            if (this.timePicker)\n                this.timePicker.render();\n        }\n        this.setDateTime(new Date());\n    }\n    createCalendar(options) {\n        return null;\n    }\n    createTimePicker(options) {\n        return null;\n    }\n    show(anchor) {\n        if (this.options.beforeShow) {\n            this.options.beforeShow();\n        }\n        const pos = getElementAbsolutePos(anchor || document.body);\n        this.slot.style.top = pos.y + anchor.clientHeight + 'px';\n        this.slot.style.left = pos.x + 'px';\n    }\n    apply(date) {\n        if (this.options.onApply) {\n            this.options.onApply(date);\n        }\n        this.destroy();\n    }\n    cancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n        this.destroy();\n    }\n    destroy() {\n        if (this.slot && this.slot.parentElement) {\n            this.slot.parentElement.removeChild(this.slot);\n        }\n    }\n    dateTimeChanged() {\n        if (this.options.onDateTimeChanged) {\n            this.options.onDateTimeChanged(this.currentDateTime);\n        }\n    }\n}\n\nclass DefaultCalendar extends Calendar {\n    constructor(slot, options) {\n        super(slot, options);\n        this.daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.calendarBody = null;\n        this.isManualInputChanging = false;\n        for (let i = 0; i < this.daysOfWeek.length; i++) {\n            this.daysOfWeek[i] = i18n.getShortWeekDayName(i + 1);\n        }\n        for (let i = 0; i < this.months.length; i++) {\n            this.months[i] = i18n.getLongMonthName(i + 1);\n        }\n    }\n    setDate(date) {\n        super.setDate(date);\n        this.selectedMonth = this.currentDate.getMonth();\n        this.selectedYear = this.currentDate.getFullYear();\n        this.rerenderMonth();\n    }\n    render() {\n        const header = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`);\n        if (this.options.showDateTimeInput) {\n            header\n                .addChildElement(this.renderManualDateInput());\n        }\n        else {\n            header\n                .addChild('span', builder => this.headerTextElem = builder.toDOM());\n        }\n        domel(this.slot)\n            .addChildElement(this.renderCalendarButtons());\n        this.calendarBody = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n    }\n    getInputDateFormat() {\n        const settings = i18n.getLocaleSettings();\n        return (this.options.timePickerIsUsed)\n            ? `${settings.editDateFormat} ${settings.editTimeFormat}`\n            : settings.editDateFormat;\n    }\n    renderManualDateInput() {\n        const format = this.getInputDateFormat();\n        const builder = domel('input')\n            .attr('placeholder', format)\n            .addClass(`${this.cssPrefix}-header-input`);\n        builder\n            .mask(format.replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99'))\n            .on('input', ev => {\n            builder.removeClass('error');\n            try {\n                this.isManualInputChanging = true;\n                const newDate = utils.strToDateTime(this.manualInputElem.value, format);\n                this.currentDate = newDate;\n                this.jump(this.currentDate.getFullYear(), this.currentDate.getMonth());\n                this.dateChanged(false);\n            }\n            catch (e) {\n                builder.addClass('error');\n            }\n            finally {\n                this.isManualInputChanging = false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.manualInputElem.className.indexOf('error') < 0\n                    && !this.isManualInputChanging)\n                    this.dateChanged(true);\n            }\n        })\n            .on('focus', () => {\n            setTimeout(() => {\n                this.manualInputElem.selectionStart = 0;\n                this.manualInputElem.selectionEnd = 0;\n            }, 50);\n        });\n        this.manualInputElem = builder.toDOM();\n        return this.manualInputElem;\n    }\n    updateDisplayedDateValue() {\n        if (this.manualInputElem) {\n            if (!this.isManualInputChanging) {\n                const format = this.getInputDateFormat();\n                this.manualInputElem.value = i18n.dateTimeToStr(this.currentDate, format);\n                this.manualInputElem.focus();\n            }\n        }\n        else if (this.headerTextElem) {\n            const locale = i18n.getCurrentLocale();\n            this.headerTextElem.innerText = this.currentDate.toLocaleString(locale == 'en' ? undefined : locale, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            });\n        }\n    }\n    renderCalendarButtons() {\n        const builder = domel('nav')\n            .addClass(`${this.cssPrefix}-nav`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-prev`)\n            .on('click', () => {\n            this.prev();\n        })\n            .addChild('span', builder => builder.html('&lsaquo;')))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-selectors`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-month`)\n            .addChild('select', builder => {\n            builder\n                .on('change', () => {\n                this.jump(this.selectedYear, parseInt(this.selectMonthElem.value));\n            });\n            for (let i = 0; i < this.months.length; i++) {\n                builder.addChild('option', builder => builder\n                    .attr('value', i.toString())\n                    .text(this.months[i]));\n            }\n            this.selectMonthElem = builder.toDOM();\n        }))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-year`)\n            .addChild('select', builder => this.selectYearElem = builder\n            .on('change', () => {\n            this.jump(parseInt(this.selectYearElem.value), this.selectedMonth);\n        })\n            .toDOM())))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-next`)\n            .on('click', () => {\n            this.next();\n        })\n            .addChild('span', builder => builder.html('&rsaquo;')));\n        return builder.toDOM();\n    }\n    prev() {\n        this.selectedYear = (this.selectedMonth === 0) ? this.selectedYear - 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth === 0) ? 11 : this.selectedMonth - 1;\n        this.rerenderMonth();\n    }\n    next() {\n        this.selectedYear = (this.selectedMonth === 11) ? this.selectedYear + 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth + 1) % 12;\n        this.rerenderMonth();\n    }\n    rerenderSelectYear() {\n        const match = /c-(\\d*):c\\+(\\d*)/g.exec(this.options.yearRange);\n        let minusYear = 0;\n        let plusYear = 1;\n        if (match !== null) {\n            minusYear = parseInt(match[1]);\n            plusYear = parseInt(match[2]);\n        }\n        this.selectYearElem.innerHTML = '';\n        for (let i = 0; i <= minusYear + plusYear; i++) {\n            let op = document.createElement(\"option\");\n            let year = this.selectedYear - minusYear + i;\n            op.value = year.toString();\n            op.innerText = year.toString();\n            this.selectYearElem.appendChild(op);\n        }\n    }\n    jump(year, month) {\n        this.selectedYear = year;\n        this.selectedMonth = month;\n        this.rerenderMonth();\n    }\n    rerenderMonth() {\n        //header text\n        this.updateDisplayedDateValue();\n        this.rerenderSelectYear();\n        let firstDay = (new Date(this.selectedYear, this.selectedMonth)).getDay();\n        let daysInMonth = new Date(this.selectedYear, this.selectedMonth + 1, 0).getDate();\n        this.calendarBody.innerHTML = \"\";\n        this.selectYearElem.value = this.selectedYear.toString();\n        this.selectMonthElem.value = this.selectedMonth.toString();\n        this.daysOfWeek.forEach((day, idx) => {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-weekday`)\n                .addClass(idx == 0 || idx == 6 ? `${this.cssPrefix}-weekend` : '')\n                .text(day);\n        });\n        // Add empty cells before first day\n        for (let i = 0; i < firstDay; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n        // Add all month days\n        const today = new Date();\n        for (let day = 1; day <= daysInMonth; day++) {\n            const builder = domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day`)\n                .attr('data-date', day.toString())\n                .text(day.toString())\n                .on('click', (e) => {\n                this.currentDate.setFullYear(this.selectedYear);\n                this.currentDate.setMonth(this.selectedMonth);\n                this.currentDate.setDate(parseInt(e.target.getAttribute('data-date')));\n                this.dateChanged(this.options.oneClickDateSelection);\n            });\n            if (day === today.getDate() && this.selectedYear === today.getFullYear() && this.selectedMonth === today.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-current`);\n            }\n            if (day === this.currentDate.getDate() && this.selectedYear === this.currentDate.getFullYear() && this.selectedMonth === this.currentDate.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-selected`);\n            }\n            const dayOfWeek = (firstDay + day - 1) % 7;\n            if (dayOfWeek == 0 || dayOfWeek == 6) {\n                builder.addClass(`${this.cssPrefix}-weekend`);\n            }\n            if (typeof this.options.onDrawDay === \"function\") {\n                this.options.onDrawDay.apply(builder.toDOM(), [\n                    builder.toDOM(),\n                    new Date(this.selectedYear, this.selectedMonth, day)\n                ]);\n            }\n        }\n        // Add empty cells after last day\n        const cellsDrawnInLastRow = (firstDay + daysInMonth) % 7;\n        const cellsToDraw = cellsDrawnInLastRow == 0 ? 0 : 7 - cellsDrawnInLastRow;\n        for (let i = 0; i < cellsToDraw; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n    }\n    dateChanged(apply) {\n        super.dateChanged(apply);\n        this.rerenderMonth();\n    }\n}\n\nclass TimePicker {\n    get cssPrefix() {\n        return 'kdtp-tp';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n    }\n    setTime(time) {\n        this.currentTime = new Date(time);\n    }\n    getTime() {\n        return new Date(this.currentTime);\n    }\n    timeChanged() {\n        if (this.options.onTimeChanged) {\n            this.options.onTimeChanged(this.currentTime);\n        }\n    }\n}\n\nclass DefaultTimePicker extends TimePicker {\n    setTime(time) {\n        super.setTime(time);\n        this.updateDisplayedTime();\n        this.hoursInput.valueAsNumber = time.getHours();\n        this.minutesInput.valueAsNumber = time.getMinutes();\n    }\n    render() {\n        domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-time`)\n            .addChild('span', builder => this.timeText = builder.toDOM())\n            .toDOM();\n        const slidersBuilder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-sliders`);\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Hours')\n            .addChild('input', builder => this.hoursInput = builder\n            .addClass(`${this.cssPrefix}-input-hours`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '23')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setHours(this.hoursInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Minutes')\n            .addChild('input', builder => this.minutesInput = builder\n            .addClass(`${this.cssPrefix}-input-minutes`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '59')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setMinutes(this.minutesInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        return this.slot;\n    }\n    updateDisplayedTime() {\n        const locale = i18n.getCurrentLocale();\n        const timeToDraw = this.currentTime.toLocaleString(locale == 'en' ? undefined : locale, {\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        this.timeText.innerText = timeToDraw;\n    }\n}\n\nclass DefaultDateTimePicker extends DateTimePicker {\n    render() {\n        const sb = domel('div', document.body)\n            .addClass(`${this.cssPrefix}`)\n            .attr('tabIndex', '0')\n            .setStyle('position', 'absolute')\n            .setStyle('top', '-1000px')\n            .setStyle('left', '-1000px')\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.cancel();\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                this.apply(this.getDateTime());\n            }\n            return false;\n        });\n        if (this.options.zIndex) {\n            sb.setStyle('z-index', `${this.options.zIndex}`);\n        }\n        this.slot = sb.toDOM();\n        super.render();\n        this.renderButtons();\n        this.globalMouseDownHandler = (e) => {\n            let event = window.event || e;\n            event.srcElement || event.target;\n            let isOutside = !this.slot.contains(event.target);\n            if (isOutside) {\n                document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n                this.cancel();\n            }\n            return true;\n        };\n    }\n    renderButtons() {\n        const builder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-buttons`)\n            .addChild('button', b => this.nowButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-now`)\n            .text(i18n.getText('ButtonNow'))\n            .on('click', () => {\n            this.setDateTime(new Date());\n            this.dateTimeChanged();\n            return false;\n        })\n            .toDOM());\n        if (this.options.showTimePicker || !this.options.oneClickDateSelection) {\n            builder.addChild('button', b => this.submitButton = b\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', () => {\n                this.apply(this.getDateTime());\n                return false;\n            })\n                .toDOM());\n        }\n        builder.addChild('button', b => this.submitButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-cancel`)\n            .text(i18n.getText('ButtonCancel'))\n            .on('click', () => {\n            this.cancel();\n            return false;\n        })\n            .toDOM());\n    }\n    createCalendar(options) {\n        this.calendarSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-cal`)\n                .toDOM();\n        return new DefaultCalendar(this.calendarSlot, options);\n    }\n    createTimePicker(options) {\n        this.timePickerSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-tp`)\n                .toDOM();\n        return new DefaultTimePicker(this.timePickerSlot, options);\n    }\n    show(anchor) {\n        if (this.options.showDateTimeInput) {\n            if (this.options.beforeShow) {\n                this.options.beforeShow();\n            }\n            const anchorPos = getElementAbsolutePos(anchor || document.body);\n            const parentPos = getElementAbsolutePos(anchor ? anchor.parentElement || anchor : document.body);\n            this.slot.style.top = parentPos.y + 'px';\n            this.slot.style.left = anchorPos.x + 'px';\n        }\n        else {\n            super.show(anchor);\n            this.slot.focus();\n        }\n        setTimeout(() => {\n            document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n        }, 1);\n    }\n}\n\nvar DialogFooterAlignment;\n(function (DialogFooterAlignment) {\n    DialogFooterAlignment[DialogFooterAlignment[\"Left\"] = 1] = \"Left\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Center\"] = 2] = \"Center\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Right\"] = 3] = \"Right\";\n})(DialogFooterAlignment || (DialogFooterAlignment = {}));\n\nconst cssPrefix = \"kdlg\";\nclass DefaultDialogService {\n    openConfirm(title, content, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-confirm\">${content}</div>`;\n        const options = {\n            title: title,\n            closable: false,\n            submitable: true,\n            cancelable: true,\n            body: template\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                callback(true);\n            };\n            options.onCancel = () => {\n                callback(false);\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                resolve(true);\n            };\n            options.onCancel = () => {\n                resolve(false);\n            };\n            this.open(options);\n        });\n    }\n    openPrompt(title, content, defVal, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-content\">${content}</label>\r\n                <input type=\"text\" name=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        const options = {\n            title: title,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            body: template,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                input.focus();\n            }\n        };\n        const processInput = (callback) => {\n            const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n            const result = input.value;\n            if (result && result.replace(/\\s/g, '').length > 0) {\n                callback(result);\n                return true;\n            }\n            input.classList.add('eqjs-invalid');\n            return false;\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                return processInput(callback);\n            };\n            options.onCancel = () => {\n                callback(\"\");\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                return processInput(resolve);\n            };\n            options.onCancel = () => {\n                resolve(\"\");\n            };\n            this.open(options);\n        });\n    }\n    open(options, data) {\n        const dialog = new DefaultDialog(options, data);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    createSet(options) {\n        return new DefaultDialogSet(options, this);\n    }\n    untrack(dlg) {\n        const index = DefaultDialogService.openDialogs.indexOf(dlg);\n        if (index >= 0) {\n            DefaultDialogService.openDialogs.splice(index, 1);\n        }\n    }\n    track(dlg) {\n        DefaultDialogService.openDialogs.push(dlg);\n    }\n    openProgress(options) {\n        const dialog = new DefaultProgressDialog(options);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    getAllDialogs() {\n        return Array.from(DefaultDialogService.openDialogs);\n    }\n    closeAllDialogs() {\n        for (const dialog of Array.from(DefaultDialogService.openDialogs)) {\n            dialog.close();\n        }\n    }\n}\nDefaultDialogService.openDialogs = [];\nclass DefaultDialog {\n    constructor(options, data) {\n        this.options = options;\n        this.submitHandler = (token) => {\n            if (this.options.onSubmit && this.options.onSubmit(this, token) === false) {\n                return false;\n            }\n            this.destroy();\n            return true;\n        };\n        this.cancelHandler = () => {\n            if (this.options.onCancel) {\n                this.options.onCancel(this);\n            }\n            this.destroy();\n        };\n        this.keydownHandler = (ev) => {\n            if (ev.keyCode == 13 && this.isActiveDialog()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.submitHandler()) {\n                    window.removeEventListener('keydown', this.keydownHandler, false);\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.dialogId = utils.generateId('dlg');\n        this.data = data;\n        this.slot =\n            domel('div', document.body)\n                .attr('tab-index', '-1')\n                .data('dialog-id', this.dialogId)\n                .addClass(`${cssPrefix}-modal`, 'is-active')\n                .focus()\n                .addChild('div', b => b\n                .addClass('kdlg-modal-background'))\n                .addChild('div', b => this.windowElement = b\n                .addClass(`${cssPrefix}-modal-window`)\n                .addChild('header', b => {\n                this.headerElement = b\n                    .addClass(`${cssPrefix}-header`)\n                    .addChild('p', b => b\n                    .addClass(`${cssPrefix}-header-title`)\n                    .addText(options.title))\n                    .toDOM();\n                if (options.closable !== false)\n                    b.addChild('button', b => b\n                        .addClass(`${cssPrefix}-modal-close`)\n                        .on('click', () => {\n                        this.cancelHandler();\n                    })\n                        .focus());\n            })\n                .addChild('div', b => {\n                b.addClass(`${cssPrefix}-alert-container`);\n                this.alertElement = b.toDOM();\n            })\n                .addChild('section', b => {\n                this.bodyElement = b\n                    .addClass(`${cssPrefix}-body`)\n                    .toDOM();\n                if (typeof options.body === 'string') {\n                    const html = liquid.renderLiquidTemplate(options.body, data);\n                    b.addHtml(html);\n                }\n                else {\n                    b.addChildElement(options.body);\n                }\n            })\n                .addChild('footer', b => {\n                let alignClass = null;\n                if (options.footerAlignment && options.footerAlignment == DialogFooterAlignment.Center) {\n                    alignClass = 'align-center';\n                }\n                else {\n                    alignClass = 'align-right';\n                }\n                this.footerElement = b\n                    .addClass(`${cssPrefix}-footer`)\n                    .toDOM();\n                b.addClass(alignClass);\n                if (options.submitable === false)\n                    return;\n                b.addChild('button', bb => {\n                    bb.id(this.dialogId + '-btn-submit')\n                        .addClass('kfrm-button', 'is-info')\n                        .addText(options.submitButtonText || i18n.getText('ButtonOK'));\n                    if (options.recaptchaSiteKey) {\n                        bb.data('sitekey', options.recaptchaSiteKey);\n                        bb.addClass('g-recaptcha');\n                        bb.on('click', (e) => {\n                            if (grecaptcha) {\n                                grecaptcha.ready(() => {\n                                    grecaptcha.execute(options.recaptchaSiteKey, { action: 'submit' })\n                                        .then((token) => {\n                                        this.submitHandler(token);\n                                    });\n                                });\n                            }\n                            else {\n                                this.submitHandler();\n                            }\n                        });\n                    }\n                    else {\n                        bb.on('click', (e) => {\n                            this.submitHandler();\n                        });\n                    }\n                    bb.focus();\n                });\n                if (options.cancelable !== false)\n                    b.addChild('button', bb => bb\n                        .id(this.dialogId + '-btn-cancel')\n                        .addClass('kfrm-button')\n                        .addText(options.cancelButtonText || i18n.getText('ButtonCancel'))\n                        .on('click', (e) => {\n                        this.cancelHandler();\n                    }));\n            })\n                .toDOM())\n                .toDOM();\n    }\n    getData() {\n        return this.data;\n    }\n    getRootElement() {\n        return this.slot;\n    }\n    getSubmitButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-submit');\n    }\n    getCancelButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-cancel');\n    }\n    open() {\n        if (this.options.beforeOpen) {\n            this.options.beforeOpen(this);\n        }\n        domel(this.slot).show();\n        if (this.options.arrangeParents) {\n            this.arrangeParents(true);\n        }\n        const windowDiv = this.slot\n            .querySelector(`.${cssPrefix}-modal-window`);\n        if (this.options.height) {\n            windowDiv.style.height = typeof this.options.height === 'string'\n                ? this.options.height\n                : `${this.options.height}px`;\n        }\n        if (this.options.width) {\n            windowDiv.style.width = typeof this.options.width === 'string'\n                ? this.options.width\n                : `${this.options.width}px`;\n        }\n        if (this.options.submitOnEnter) {\n            window.addEventListener('keydown', this.keydownHandler, false);\n        }\n        //clear alert on change in any input element \n        this.slot.querySelectorAll('input')\n            .forEach(element => element.addEventListener('input', () => {\n            this.clearAlert();\n            if (this.options.onInput) {\n                this.options.onInput(this);\n            }\n        }));\n        if (this.options.onShow) {\n            this.options.onShow(this);\n        }\n    }\n    submit() {\n        this.submitHandler();\n    }\n    cancel() {\n        this.cancelHandler();\n    }\n    close() {\n        this.destroy();\n    }\n    disableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = true);\n    }\n    enableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = false);\n    }\n    showAlert(text, reason, replace) {\n        let alert = domel('div')\n            .addClass(`${cssPrefix}-alert ${reason || ''}`)\n            .addChild('span', b => b\n            .addClass(`${cssPrefix}-alert-closebtn`)\n            .text('×')\n            .on('click', (ev) => {\n            const alert = ev.target.parentElement;\n            alert.parentElement.removeChild(alert);\n        }))\n            .addText(text)\n            .toDOM();\n        if (replace === true) {\n            this.clearAlert();\n        }\n        this.alertElement.appendChild(alert);\n    }\n    clearAlert() {\n        this.alertElement.innerHTML = '';\n    }\n    destroy() {\n        const elem = document.querySelectorAll(`[data-dialog-id=\"${this.dialogId}\"]`);\n        if (elem.length <= 0)\n            return;\n        if (this.options.arrangeParents) {\n            this.arrangeParents(false);\n        }\n        document.body.removeChild(this.slot);\n        if (this.options.submitOnEnter) {\n            window.removeEventListener('keydown', this.keydownHandler, false);\n        }\n        if (this.options.onDestroy) {\n            this.options.onDestroy(this);\n        }\n    }\n    isActiveDialog() {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal');\n        return windowDivs[windowDivs.length - 1] === this.slot;\n    }\n    arrangeParents(turnOn) {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal-window');\n        for (let i = 0; i < windowDivs.length - 1; i++) {\n            if (turnOn) {\n                const offset = i == 0 ? 20 : i * 40 + 20;\n                domel(windowDivs[i])\n                    .setStyle('margin-top', `${offset}px`)\n                    .setStyle('margin-left', `${offset}px`);\n            }\n            else {\n                domel(windowDivs[i])\n                    .removeStyle('margin-top')\n                    .removeStyle('margin-left');\n            }\n        }\n    }\n}\nclass DefaultProgressDialog extends DefaultDialog {\n    constructor(options, data) {\n        let contentElement;\n        let progressElement;\n        const body = domel('div')\n            .addChild('div', b => contentElement = b\n            .text(options.content || '')\n            .toDOM())\n            .addChild('div', b => {\n            b\n                .addClass(`${cssPrefix}-progress-line`)\n                .addChild('div', b => {\n                progressElement = b\n                    .addClass('fill')\n                    .toDOM();\n                if (options.determinated) {\n                    b.setStyle('width', '0%');\n                }\n                else {\n                    b.addClass('indeterminate');\n                }\n            });\n        })\n            .toDOM();\n        super({\n            title: options.title,\n            body: body,\n            beforeOpen: options.beforeOpen,\n            onSubmit: options.onSubmit,\n            width: options.width,\n            height: options.height,\n            submitable: false,\n            cancelable: false,\n            closable: false,\n            onDestroy: options.onDestroy\n        }, data);\n        this.contentElement = contentElement;\n        this.progressElement = progressElement;\n    }\n    updateContent(content) {\n        this.contentElement.innerText = content;\n    }\n    updateProgress(progress) {\n        progress = this.in01(progress);\n        this.progressElement.style.width = `${progress * 100}%`;\n        if (progress === 1) {\n            // postpone for 0.5s for smooth closing\n            setTimeout(() => {\n                this.submit();\n            }, 500);\n        }\n    }\n    in01(num) {\n        if (num > 1)\n            return 1;\n        if (num < 0)\n            return 0;\n        return num;\n    }\n}\nclass DefaultDialogSet {\n    constructor(options, dialogService) {\n        this.options = options;\n        this.dialogService = dialogService;\n        this.currentDialog = null;\n        this.currentIndex = 0;\n        this.options = options;\n        this.dialogService = dialogService;\n    }\n    getCurrent() {\n        return this.currentDialog;\n    }\n    openNext(data) {\n        return this.open(this.currentIndex + 1, data);\n    }\n    openPrev(data) {\n        return this.open(this.currentIndex - 1, data);\n    }\n    open(page, data) {\n        if (page < 0) {\n            this.currentIndex = 0;\n        }\n        else if (page >= this.options.length) {\n            this.currentIndex = this.options.length - 1;\n        }\n        else {\n            this.currentIndex = page;\n        }\n        if (this.currentDialog) {\n            try {\n                this.currentDialog.close();\n            }\n            catch (e) { }\n        }\n        const dlgOptions = this.options[this.currentIndex];\n        this.currentDialog = this.dialogService.open(dlgOptions, data);\n        return this.currentDialog;\n    }\n    close() {\n        if (this.currentDialog) {\n            this.currentDialog.close();\n            this.currentDialog = null;\n        }\n    }\n}\n\nfunction addEasyDataUITexts() {\n    i18n.updateDefaultTexts({\n        GridPageInfo: '{FirstPageRecordNum} - {LastPageRecordNum} of {Total} records',\n        GridItemsPerPage: 'items per page',\n        ButtonOK: \"OK\",\n        ButtonCancel: \"Cancel\",\n        ButtonApply: 'Apply',\n        ButtonNow: 'Now',\n        LblTotal: 'Total'\n    });\n}\naddEasyDataUITexts();\n\nvar PRE_SELECT;\n(function (PRE_SELECT) {\n    PRE_SELECT[PRE_SELECT[\"THIS_WEEK\"] = 0] = \"THIS_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"LAST_WEEK\"] = 1] = \"LAST_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"THIS_MONTH\"] = 2] = \"THIS_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"FIRST_MONTH\"] = 3] = \"FIRST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"LAST_MONTH\"] = 4] = \"LAST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"THIS_YEAR\"] = 5] = \"THIS_YEAR\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_1\"] = 6] = \"QUARTER_1\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_2\"] = 7] = \"QUARTER_2\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_3\"] = 8] = \"QUARTER_3\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_4\"] = 9] = \"QUARTER_4\";\n})(PRE_SELECT || (PRE_SELECT = {}));\nvar JUMP_TO;\n(function (JUMP_TO) {\n    JUMP_TO[\"UNDEF\"] = \"-1\";\n    JUMP_TO[\"TODAY\"] = \"1\";\n    JUMP_TO[\"YESTERDAY\"] = \"2\";\n    JUMP_TO[\"TOMORROW\"] = \"3\";\n    JUMP_TO[\"WEEK_START\"] = \"4\";\n    JUMP_TO[\"WEEK_END\"] = \"5\";\n    JUMP_TO[\"MONTH_START\"] = \"6\";\n    JUMP_TO[\"MONTH_END\"] = \"7\";\n    JUMP_TO[\"YEAR_START\"] = \"8\";\n    JUMP_TO[\"YEAR_END\"] = \"9\";\n})(JUMP_TO || (JUMP_TO = {}));\nconst DEFAULT_WEEK_START = 0;\nclass TimeSpanPicker extends DefaultDialog {\n    constructor(options) {\n        super({\n            title: options.title || `Select a period`,\n            body: \"\",\n            submitButtonText: options.submitButtonText || `OK`,\n            cancelButtonText: options.cancelButtonText || `Cancel`,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            beforeOpen: (dlg) => {\n                this.setupDialog();\n            },\n            onSubmit: (dlg) => {\n                if (typeof options.onSubmit === \"function\") {\n                    options.onSubmit.apply(dlg, [this.result(this.from), this.result(this.to)]);\n                }\n            }\n        });\n        this.yearRange = options.yearRange;\n        this.weekStart = options.weekStart || DEFAULT_WEEK_START;\n        this.bodyElement.append(this.drawDialog());\n        this.calendar1.render();\n        this.calendar2.render();\n        this.from = this.alignDate(options.start ? options.start : new Date());\n        this.to = this.alignDate(options.finish && this.alignDate(options.finish) > this.from ? options.finish : new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 1));\n        this.represent();\n    }\n    alignDate(date) {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }\n    drawDialog() {\n        const body = domel('div')\n            .addClass('tsp__container')\n            .addChild('div', b => {\n            b\n                .addClass('tsp__intervals')\n                .addChild('button', b => b.addClass('tsp__button').addText('This Week').on('click', () => { this.select(PRE_SELECT.THIS_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Week').on('click', () => { this.select(PRE_SELECT.LAST_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Month').on('click', () => { this.select(PRE_SELECT.THIS_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('First Month').on('click', () => { this.select(PRE_SELECT.FIRST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Month').on('click', () => { this.select(PRE_SELECT.LAST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Year').on('click', () => { this.select(PRE_SELECT.THIS_YEAR); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 1').on('click', () => { this.select(PRE_SELECT.QUARTER_1); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 2').on('click', () => { this.select(PRE_SELECT.QUARTER_2); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 3').on('click', () => { this.select(PRE_SELECT.QUARTER_3); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 4').on('click', () => { this.select(PRE_SELECT.QUARTER_4); }));\n        })\n            .addChild('div', b => {\n            b\n                .addClass('tsp__form')\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Start');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(1, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar1 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            this.from = this.alignDate(date);\n                            this.calendar1.setDate(this.from);\n                            if (this.to < this.from) {\n                                this.to = this.from;\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            })\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Finish');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(2, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar2 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            if (this.alignDate(date) >= this.from) {\n                                this.to = this.alignDate(date);\n                            }\n                            else {\n                                this.calendar2.setDate(this.to);\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            });\n        })\n            .toDOM();\n        return body;\n    }\n    setupDialog() {\n    }\n    jump(cal, to, select) {\n        let target = cal === 1 ? 'from' : 'to';\n        let jumpTo;\n        const curr = new Date();\n        switch (to) {\n            case JUMP_TO.TODAY: {\n                jumpTo = curr;\n                break;\n            }\n            case JUMP_TO.YESTERDAY: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1);\n                break;\n            }\n            case JUMP_TO.TOMORROW: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1);\n                break;\n            }\n            case JUMP_TO.WEEK_START: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart));\n                break;\n            }\n            case JUMP_TO.WEEK_END: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6 + this.weekStart));\n                break;\n            }\n            case JUMP_TO.MONTH_START: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                break;\n            }\n            case JUMP_TO.MONTH_END: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case JUMP_TO.YEAR_START: {\n                jumpTo = new Date(curr.getFullYear(), 0, 1);\n                break;\n            }\n            case JUMP_TO.YEAR_END: {\n                jumpTo = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        jumpTo = this.alignDate(jumpTo);\n        select.value = JUMP_TO.UNDEF;\n        if (target === \"from\") {\n            this.from = jumpTo;\n            if (this.to < this.from) {\n                this.to = this.from;\n            }\n        }\n        else {\n            if (jumpTo >= this.from) {\n                this[target] = jumpTo;\n            }\n        }\n        this.represent();\n    }\n    represent() {\n        this.calendar1.setDate(this.from);\n        this.calendar2.setDate(this.to);\n    }\n    select(interval) {\n        switch (interval) {\n            case PRE_SELECT.THIS_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay());\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.LAST_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay() - 7);\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.THIS_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case PRE_SELECT.FIRST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 1, 0);\n                break;\n            }\n            case PRE_SELECT.LAST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth() - 1, 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth(), 0);\n                break;\n            }\n            case PRE_SELECT.THIS_YEAR: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_1: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 3, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_2: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 3, 1);\n                this.to = new Date(curr.getFullYear(), 6, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_3: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 6, 1);\n                this.to = new Date(curr.getFullYear(), 9, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_4: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 9, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        this.represent();\n    }\n    result(date) {\n        const curr = this.alignDate(new Date());\n        const constants = {\n            \"Today\": this.alignDate(new Date()),\n            \"Yesterday\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1)),\n            \"Tomorrow\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1)),\n            \"FirstDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), 1)),\n            \"LastDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 0)),\n            \"FirstDayOfWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart))),\n            \"FirstDayOfYear\": this.alignDate(new Date(curr.getFullYear(), 0, 1)),\n            \"FirstDayOfNextWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart + 7))),\n            \"FirstDayOfNextMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 1)),\n            \"FirstDayOfNextYear\": this.alignDate(new Date(curr.getFullYear() + 1, 0, 1)),\n        };\n        for (let k in constants) {\n            console.log(constants[k], date);\n            if (constants[k].getTime() === date.getTime()) {\n                return `\\${{${k}}}`;\n            }\n        }\n        return i18n.dateTimeToStr(date, i18n.getLocaleSettings().editDateFormat);\n    }\n}\nconst showTimeSpanPicker = (options) => new TimeSpanPicker(options).open();\n\n// grid\n// export dialogs to use outside of context as global\nconst dialogs = new DefaultDialogService();\n\nexport { AutoResizeColumns, Calendar, CellRendererType, DFMT_REGEX, DateTimePicker, DefaultCalendar, DefaultDateTimePicker, DefaultDialog, DefaultDialogService, DefaultDialogSet, DefaultProgressDialog, DefaultTimePicker, DialogFooterAlignment, DomElementBuilder, DomInputElementBuilder, DomSelectElementBuilder, DomTextAreaElementBuilder, DragManager, DropEffect, EasyGrid, EqDragEvent, GridCellRendererStore, GridColumn, GridColumnAlign, GridColumnList, JUMP_TO, PRE_SELECT, TimePicker, TimeSpanPicker, addCssClass, addElement, browserUtils, createBrowserEvent, dialogs, domel, eqCssMobile, eqCssPrefix, eqDragManager, getDocSize, getElementAbsolutePos, getMobileCssClass, getScrollPos, getViewportSize, getWinSize, hideElement, isVisible, mask, showElement, showTimeSpanPicker, slideDown, slideUp, toggleVisibility, wrapInner };\n","import { utils, i18n, DataType, EasyDataTable, AggregationSettings } from '@easydata/core';\nimport { Widget, WidgetGroup, QueryChangePart, QueryChangeAction, ExprTag, SortDirection, i18n as i18n$1, equtils, eqconsts, ConditionPart, DataKind, Query, Expression, CondTag, EqEditorTag, EqValueEditor, EqServiceProvider, createEqContext } from '@easyquery/core';\nimport { browserUtils, eqDragManager, getElementAbsolutePos, getScrollPos, getWinSize, getViewportSize, domel, DropEffect, createBrowserEvent, DomElementBuilder, DefaultDateTimePicker, slideDown, slideUp, EasyGrid, addCssClass, hideElement, showElement, isVisible, toggleVisibility, addElement, DefaultDialogService } from '@easydata/ui';\n\nfunction findHighestZIndex(elem) {\n    let highest = 0;\n    while (elem !== null) {\n        const zindex = document.defaultView.getComputedStyle(elem, null)\n            .getPropertyValue(\"z-index\");\n        if (zindex != 'auto') {\n            const numZIndex = parseInt(zindex);\n            if (numZIndex > highest) {\n                highest = numZIndex;\n            }\n        }\n        elem = elem.parentElement;\n    }\n    return highest;\n}\n// simetimes setting focus in the main thread doesn't work correctly (in Firefox). So we need to 'hack' it.\nfunction safeFocus(element) {\n    setTimeout(_ => {\n        if (element) {\n            element.focus();\n        }\n    }, 100);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\nfunction getMobileCssClass() {\n    return browserUtils.isMobileMode() ? eqCssMobile : null;\n}\n\n/**\n * The entities panel wiget, implemented without JQuery.\n */\nclass EntitiesPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-ep';\n    }\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.queryChangedCallbackId = null;\n        this.group = WidgetGroup.Model | WidgetGroup.Query;\n        this.panel = slot;\n    }\n    getWidgetType() {\n        return 'entitiesPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n    }\n    /**\n    * Refresh widget implementation\n    */\n    refreshCore() {\n        this.render();\n        if (this.options.syncWithColumns) {\n            this.refreshCheckedStateByColumns();\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.panel.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.panel.removeChild(this.progressBlock);\n        }\n    }\n    destroyCore() {\n        this.slot.innerHTML = '';\n    }\n    setOptions(options) {\n        this.options = {\n            showToolbar: true,\n            syncWithColumns: false,\n            showSelectAllButton: false,\n            showClearSelectionButton: true,\n            showAddColumnButton: true,\n            showAddConditionButton: true,\n            showCheckboxes: true,\n            showTooltips: true,\n            draggableAttributes: true,\n            showAttributes: { useInConditions: true, useInResult: true, useInSorting: false },\n            showFilterBox: false,\n            filterBoxMode: 0,\n            showIndicatorOnLoad: true,\n            attrPlacement: 0,\n            sortEntities: false,\n            autoClearSelection: true,\n            entityRenderedCallback: null,\n            attributeRenderedCallback: null,\n        };\n        if (options) {\n            utils.assignDeep(this.options, options);\n        }\n        if (this.queryChangedCallbackId) {\n            const query = this.context.getQuery();\n            query.removeChangedCallback(this.queryChangedCallbackId);\n        }\n        if (this.options.syncWithColumns) {\n            const query = this.context.getQuery();\n            this.queryChangedCallbackId = query.addChangedCallback((ev) => {\n                const edata = ev.data;\n                if (!edata || (edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                    return;\n                }\n                this.refreshCheckedStateByColumns();\n            });\n        }\n    }\n    render() {\n        let model = this.context.getModel();\n        this.clear();\n        this.panel.classList.add(`${this.cssPrefix}-panel`);\n        this.panel.classList.add(getMobileCssClass());\n        this.rootEntityBlock = document.createElement('div');\n        if (model != null && !model.isEmpty()) {\n            let entTree = model.getEntitiesTree({\n                addUIC: this.options.showAttributes.useInConditions && !this.options.syncWithColumns,\n                addUIR: this.options.showAttributes.useInResult,\n                addUIS: this.options.showAttributes.useInSorting && !this.options.syncWithColumns,\n                attrPlacement: this.options.attrPlacement,\n                sortEntities: this.options.sortEntities,\n                includeRootData: true\n            });\n            this.entityTreeBlock = this.renderEntity(entTree, this.rootEntityBlock, 0);\n            this.panel.appendChild(this.entityTreeBlock);\n        }\n        if (this.options.showFilterBox) {\n            this.createFilterBox();\n        }\n        else {\n            this.rootEntityBlock.style.top = '0';\n        }\n        if (this.options.showToolbar && !this.options.syncWithColumns) {\n            this.createToolPanel();\n        }\n        else {\n            this.rootEntityBlock.style.bottom = '0';\n        }\n    }\n    renderEntity(entity, block, offset) {\n        let entityBlock;\n        let entityNode = document.createElement('div');\n        entityNode.classList.add(`${this.cssPrefix}-entity-node`);\n        entityNode.classList.add(getMobileCssClass());\n        let entityChildren = document.createElement('div');\n        entityChildren.classList.add(`${this.cssPrefix}-entity-children`);\n        entityChildren.classList.add(getMobileCssClass());\n        let nodeLabel = document.createElement('label');\n        nodeLabel.classList.add(`${this.cssPrefix}-entity-node-label`);\n        let nodeInput = document.createElement('input');\n        nodeInput.type = 'checkbox';\n        nodeInput.title = entity.text;\n        let nodeToggleButton = document.createElement('a');\n        nodeToggleButton.href = 'javascript:void(0)';\n        nodeToggleButton.title = `${i18n.getText(\"EntityToggle\")} ${entity.text}`;\n        nodeToggleButton.classList.add(`${this.cssPrefix}-entity-node-button`);\n        let attrNode, attrLabel, attrInput;\n        let currentOffset = offset;\n        let isAttributeInTree = (attrId, entityBlock) => {\n            let res = entityBlock.querySelectorAll(`.${this.cssPrefix}-entity-attr[data-id=\"${attrId}\"]`);\n            return res.length > 0;\n        };\n        if (block) {\n            entityBlock = block;\n            entityBlock.innerHTML = '';\n        }\n        else {\n            entityBlock = document.createElement('div');\n        }\n        entityBlock.classList.add(`${this.cssPrefix}-entity`);\n        entityBlock.classList.add(getMobileCssClass());\n        if (entity.id && entity.id != \"\") {\n            nodeLabel.innerText = entity.text;\n            entityNode.appendChild(nodeLabel); //caption\n            if (this.options.showCheckboxes) {\n                nodeLabel.insertBefore(nodeInput, nodeLabel.firstChild);\n            }\n            entityNode.insertBefore(nodeToggleButton, entityNode.firstChild);\n            if (this.options.showTooltips && entity.description) {\n                nodeLabel.setAttribute('title', entity.description);\n            }\n            for (let i = 0; i < currentOffset; i++) {\n                let divElem = document.createElement('div');\n                divElem.classList.add(`${this.cssPrefix}-entity-offset`);\n                entityNode.insertBefore(divElem, entityNode.firstChild);\n            }\n            entityBlock.appendChild(entityNode);\n            entityChildren.hidden = true;\n            currentOffset++;\n        }\n        let itemsLength = entity.items ? entity.items.length : 0;\n        for (let i = 0; i < itemsLength; i++) {\n            let item = entity.items[i];\n            if (item.isEntity) {\n                entityChildren.appendChild(this.renderEntity(item, null, currentOffset));\n            }\n            else {\n                if (!item.lookupAttr || !(isAttributeInTree(item.lookupAttr, entityChildren))) {\n                    attrLabel = document.createElement('label');\n                    attrLabel.innerText = item.text;\n                    attrLabel.classList.add(`${this.cssPrefix}-entity-attr-label`);\n                    if (this.options.showCheckboxes) {\n                        attrInput = document.createElement('input');\n                        attrInput.type = 'checkbox';\n                        attrInput.title = item.text;\n                        attrLabel.insertBefore(attrInput, attrLabel.firstChild);\n                        if (this.options.syncWithColumns) {\n                            attrInput.addEventListener('change', (ev) => {\n                                const model = this.context.getModel();\n                                const query = this.context.getQuery();\n                                const checkbox = ev.currentTarget;\n                                const attrId = checkbox.parentElement.parentElement.getAttribute('data-id');\n                                if (model.checkAttrProperty(attrId, \"useInResult\")) {\n                                    if (checkbox.checked) {\n                                        const attr = model.getAttributeById(attrId);\n                                        const column = query.addColumn({\n                                            attribute: attr\n                                        }, true);\n                                        query.fireColumnsChangedEvent(QueryChangeAction.Add, column);\n                                    }\n                                    else {\n                                        const columns = query.getColumns()\n                                            .filter(col => col.expr.tag === ExprTag.EntityAttribute\n                                            && col.expr.value === attrId);\n                                        if (columns.length > 0) {\n                                            query.removeColumn(columns[0]);\n                                            query.fireColumnsChangedEvent(QueryChangeAction.Delete, columns[0]);\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    if (this.options.showTooltips && item.description) {\n                        attrLabel.setAttribute('title', item.description);\n                    }\n                    for (let j = 0; j < currentOffset + 1; j++) {\n                        let divElem = document.createElement('div');\n                        divElem.classList.add(`${this.cssPrefix}-entity-offset`);\n                        attrLabel.insertBefore(divElem, attrLabel.firstChild);\n                    }\n                    attrNode = document.createElement('div');\n                    attrNode.classList.add(`${this.cssPrefix}-entity-attr`);\n                    if (entityNode.innerHTML.length == 0) {\n                        attrNode.classList.add(`${this.cssPrefix}-entity-attr-root`);\n                    }\n                    attrNode.innerHTML = \"\";\n                    attrNode.appendChild(attrLabel);\n                    attrNode.setAttribute('data-id', item.id);\n                    if (this.options.draggableAttributes && !this.options.syncWithColumns) {\n                        eqDragManager.registerDraggableItem({\n                            element: attrNode,\n                            scope: \"entityAttr\",\n                            data: { attrId: item.id },\n                            renderer: (dragImage) => {\n                                dragImage.innerHTML = '';\n                                const attrLabel = document.createElement('span');\n                                attrLabel.innerText = item.text;\n                                dragImage.appendChild(attrLabel);\n                            }\n                        });\n                    }\n                    if (this.options.attributeRenderedCallback) {\n                        this.options.attributeRenderedCallback(attrNode);\n                    }\n                    entityChildren.appendChild(attrNode);\n                }\n            }\n        }\n        if (entityChildren.innerHTML.length) {\n            entityBlock.appendChild(entityChildren);\n            nodeToggleButton.addEventListener('click', (event) => {\n                entityChildren.hidden = !entityChildren.hidden;\n                let element = event.target;\n                let className = `${this.cssPrefix}-entity-node-button-open`;\n                if (element.classList.contains(className)) {\n                    element.classList.remove(className);\n                }\n                else {\n                    element.classList.add(className);\n                }\n                event.preventDefault();\n            });\n        }\n        if (entityChildren) {\n            const checkboxes = entityChildren.querySelectorAll(`.${this.cssPrefix}-entity-attr > label > input`);\n            for (let i = 0; i < checkboxes.length; i++) {\n                const checkbox = checkboxes[i];\n                checkbox.addEventListener('click', (event) => {\n                    let element = event.target;\n                    if (element.checked && !nodeInput.checked) {\n                        nodeInput.checked = true;\n                    }\n                    else if (entityChildren.querySelectorAll('input:checked').length === 0) {\n                        nodeInput.checked = false;\n                    }\n                    event.stopPropagation();\n                });\n            }\n        }\n        nodeInput.addEventListener('click', (event) => {\n            let element = event.target;\n            const entities = entityChildren.querySelectorAll('label input');\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                entity.checked = element.checked;\n            }\n            if (this.options.syncWithColumns) {\n                const query = this.context.getQuery();\n                const model = this.context.getModel();\n                const attrList = [];\n                const attrElems = Array.from(entityChildren.querySelectorAll(`.${this.cssPrefix}-entity-attr`));\n                for (const elem of attrElems) {\n                    const attrId = elem.getAttribute('data-id');\n                    if (model.checkAttrProperty(attrId, 'useInResult')) {\n                        attrList.push(attrId);\n                    }\n                }\n                if (element.checked) {\n                    for (const attrId of attrList) {\n                        query.addColumn({ attributeId: attrId }, true);\n                    }\n                }\n                else {\n                    const columns = query.getColumns()\n                        .filter(col => col.expr.tag === ExprTag.EntityAttribute\n                        && attrList.indexOf(col.expr.value) >= 0);\n                    query.removeColumns(columns, null);\n                }\n                query.fireColumnsChangedEvent();\n            }\n            event.stopPropagation();\n        });\n        if (block != this.rootEntityBlock && this.options.entityRenderedCallback) {\n            this.options.entityRenderedCallback(entityBlock);\n        }\n        return entityBlock;\n    }\n    createFilterBox() {\n        this.filterBoxBlock = document.createElement('div');\n        this.filterBoxBlock.classList.add(`${this.cssPrefix}-filter-box`);\n        this.filterBoxBlock.classList.add(getMobileCssClass());\n        this.filterBoxInput = document.createElement('input');\n        this.filterBoxInput.classList.add(`${this.cssPrefix}-filter-box-input`);\n        this.filterBoxInput.addEventListener('input', (e) => {\n            const attrs = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n            for (let i = 0; i < attrs.length; i++) {\n                const attr = attrs[i];\n                attr.hidden = !this.checkFilterAttribute(attr);\n            }\n            const entities = this.panel.querySelectorAll(`:scope > .${this.cssPrefix}-entity`);\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                let attrs = entity.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let displayAttrCount = 0;\n                for (let i = 0; i < attrs.length; i++) {\n                    if (attrs[i].style.display !== 'None') {\n                        displayAttrCount++;\n                    }\n                }\n                entity.hidden = displayAttrCount === 0;\n            }\n            if (this.filterBoxInput.value === '')\n                this.collapseAll();\n            else\n                this.expandAll();\n        });\n        this.filterBoxBlock.appendChild(this.filterBoxInput);\n        this.panel.insertBefore(this.filterBoxBlock, this.panel.firstChild);\n    }\n    createToolPanel() {\n        let defClass = `${this.cssPrefix}-tool-panel`;\n        let toolPanelBlock = document.createElement('div');\n        toolPanelBlock.classList.add(defClass);\n        toolPanelBlock.classList.add(getMobileCssClass());\n        let toolSelectAll = document.createElement('div');\n        toolSelectAll.classList.add(`${defClass}-select-all`);\n        toolSelectAll.title = 'Select all';\n        let toolDeselectAll = document.createElement('div');\n        toolDeselectAll.classList.add(`${defClass}-deselect-all`);\n        toolDeselectAll.title = 'Clear selection';\n        let toolAddColumns = document.createElement('div');\n        toolAddColumns.classList.add(`${defClass}-add-columns`);\n        toolAddColumns.title = 'Add column';\n        let toolAddCond = document.createElement('div');\n        toolAddCond.classList.add(`${defClass}-add-cond`);\n        toolAddCond.title = 'Add condition';\n        let toolLeftBlock = document.createElement('div');\n        toolLeftBlock.classList.add(`${defClass}-left-side`);\n        let toolRightBlock = document.createElement('div');\n        toolRightBlock.classList.add(`${defClass}-right-side`);\n        let model = this.context.getModel();\n        if (this.options.showSelectAllButton) {\n            toolSelectAll.title = i18n.getText(\"ButtonSelectAll\");\n            toolLeftBlock.appendChild(toolSelectAll);\n            toolSelectAll.addEventListener('click', () => {\n                this.selectAll();\n            });\n        }\n        if (this.options.showClearSelectionButton) {\n            toolDeselectAll.title = i18n.getText(\"ButtonDeselectAll\");\n            toolLeftBlock.appendChild(toolDeselectAll);\n            toolDeselectAll.addEventListener('click', () => {\n                this.deselectAll();\n            });\n        }\n        if (this.options.showAddColumnButton) {\n            toolAddColumns.title = i18n.getText(\"ButtonAddColumns\");\n            toolRightBlock.appendChild(toolAddColumns);\n            toolAddColumns.addEventListener('click', () => {\n                const attrElements = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let attrList = [];\n                let attrId;\n                const query = this.context.getQuery();\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"start\"\n                });\n                for (let i = 0; i < attrElements.length; i++) {\n                    const attrElement = attrElements[i];\n                    let input = attrElement.getElementsByTagName('input')[0];\n                    if (input.checked) {\n                        attrId = attrElement.getAttribute('data-id');\n                        if (model.checkAttrProperty(attrId, \"useInResult\")) {\n                            attrList.push(attrId);\n                        }\n                    }\n                }\n                for (let attrId of attrList) {\n                    const attr = model.getAttributeById(attrId);\n                    query.addColumn({\n                        attribute: attr\n                    }, true);\n                }\n                query.fireChangedEvent();\n                if (this.options.autoClearSelection) {\n                    this.deselectAll();\n                }\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"finish\"\n                });\n            });\n        }\n        if (this.options.showAddConditionButton) {\n            toolAddCond.title = i18n.getText(\"ButtonAddConditions\");\n            toolRightBlock.appendChild(toolAddCond);\n            toolAddCond.addEventListener('click', () => {\n                let attrElements = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let attrList = [];\n                let attrId;\n                let query = this.context.getQuery();\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"start\"\n                });\n                for (let i = 0; i < attrElements.length; i++) {\n                    const attrElement = attrElements[i];\n                    let input = attrElement.getElementsByTagName('input')[0];\n                    if (input.checked) {\n                        attrId = attrElement.getAttribute('data-id');\n                        if (model.checkAttrProperty(attrId, \"useInConditions\")) {\n                            attrList.push(attrId);\n                        }\n                    }\n                }\n                for (let attrId of attrList) {\n                    query.addSimpleCondition({\n                        attributeId: attrId\n                    });\n                }\n                query.fireChangedEvent();\n                if (this.options.autoClearSelection) {\n                    this.deselectAll();\n                }\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"finish\"\n                });\n            });\n        }\n        toolPanelBlock.appendChild(toolLeftBlock);\n        toolPanelBlock.appendChild(toolRightBlock);\n        this.panel.appendChild(toolPanelBlock);\n    }\n    checkFilterAttribute(attr) {\n        const inputElem = attr.querySelector('label input');\n        if (inputElem.checked) {\n            return true;\n        }\n        const labelElem = attr.querySelector('label');\n        const attrCaption = labelElem.textContent;\n        if (this.checkFilterText(attrCaption)) {\n            return true;\n        }\n        const entityNode = attr.parentElement.parentElement.querySelector(`.${this.cssPrefix}-entity-node`);\n        const entityCaption = entityNode.querySelector('label').textContent;\n        if (this.checkFilterText(entityCaption)) {\n            return true;\n        }\n        return false;\n    }\n    checkFilterText(value) {\n        let filterText = this.filterBoxInput.value;\n        if (filterText == \"\")\n            return true;\n        if (this.options.filterBoxMode == 0 && value.toLowerCase().indexOf(filterText.toLowerCase()) >= 0)\n            return true;\n        if (this.options.filterBoxMode == 1 && value.toLowerCase().indexOf(filterText.toLowerCase()) == 0)\n            return true;\n        return false;\n    }\n    refreshCheckedStateByColumns() {\n        this.deselectAll();\n        const query = this.context.getQuery();\n        const exprColumns = query.getColumns()\n            .filter(col => col.expr.tag === ExprTag.EntityAttribute);\n        for (const column of exprColumns) {\n            const attrNode = this.rootEntityBlock\n                .querySelector(`.${this.cssPrefix}-entity-attr[data-id=\"${column.expr.value}\"]`);\n            let checkbox = attrNode.querySelector(`label > input`);\n            checkbox.checked = true;\n            let entChildren = attrNode.parentElement;\n            while (entChildren\n                && entChildren.classList\n                    .contains(`${this.cssPrefix}-entity-children`)) {\n                entChildren.hidden = false;\n                const entElem = entChildren.parentElement;\n                if (entElem && entChildren !== entElem.firstElementChild) {\n                    checkbox = entElem.firstElementChild\n                        .querySelector(`label > input`);\n                    checkbox.checked = true;\n                    entChildren = entElem.parentElement;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n    }\n    expandAll() {\n        for (let i = 0; i < this.rootEntityBlock.childNodes.length; i++) {\n            const child = this.rootEntityBlock.childNodes[0];\n            const childs = child.querySelectorAll(`.${this.cssPrefix}-entity-children`);\n            for (let j = 0; j < childs.length; j++) {\n                const elem = childs[j];\n                elem.hidden = false;\n            }\n        }\n        const nodeButtons = this.rootEntityBlock.querySelectorAll(`.${this.cssPrefix}-entity-node-button`);\n        for (let i = 0; i < nodeButtons.length; i++) {\n            const elem = nodeButtons[i];\n            elem.classList.add(`${this.cssPrefix}-entity-node-button-open`);\n        }\n    }\n    collapseAll() {\n        for (let i = 0; i < this.rootEntityBlock.childNodes.length; i++) {\n            const child = this.rootEntityBlock.childNodes[0];\n            const childs = child.querySelectorAll(`.${this.cssPrefix}-entity-children`);\n            for (let j = 0; j < childs.length; j++) {\n                const elem = childs[j];\n                elem.hidden = true;\n            }\n        }\n        const nodeButtons = this.rootEntityBlock.querySelectorAll(`.${this.cssPrefix}-entity-node-button`);\n        for (let i = 0; i < nodeButtons.length; i++) {\n            const elem = nodeButtons[i];\n            elem.classList.remove(`${this.cssPrefix}-entity-node-button-open`);\n        }\n    }\n    selectAll() {\n        const inputs = this.entityTreeBlock.querySelectorAll('input');\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            input.checked = true;\n        }\n    }\n    deselectAll() {\n        const inputs = this.entityTreeBlock.querySelectorAll('input');\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            input.checked = false;\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n    clear() {\n        this.panel.innerHTML = \"\";\n    }\n}\n\nclass MenuLevel {\n    get applyItem() {\n        return this._applyItem;\n    }\n    get cssPrefix() {\n        return 'eqjs-menu';\n    }\n    constructor(options) {\n        this.isFilteringMode = false;\n        this.showSelected = false;\n        //menu, items, levelIndex\n        this.parentMenu = options.menu || null;\n        this.parentLevel = options.parent || null;\n        this.parentElement = options.container || document.body;\n        this.levelIndex = options.levelIndex || 0;\n        this.levelDiv = null;\n        this.domWriteItemsId = options.domWriteItemsId || false;\n        this.menuId = options.menuId || '';\n        this.itemRenderedCallback = options.itemRenderedCallback || null;\n        //we need to define special \"apply\" item for this level\n        this._applyItem = { id: null, text: null, itemDiv: null };\n        this.items = options.items || [];\n        this.activeItem = null;\n        this.selectedItem = null;\n        this.initialized = false;\n        this.showSelected = options.showSelected;\n        this.updated = 0;\n        this.renderContent();\n    }\n    getItems() {\n        return this.items;\n    }\n    setItems(items) {\n        this.items = items;\n    }\n    renderContent() {\n        if (!this.items) {\n            return;\n        }\n        //define internal variables used in this function\n        const itemBgColor = this.parentMenu.style.colors.bgON || \"white\";\n        const itemFgColor = this.parentMenu.style.colors.fgON || \"black\";\n        this.parentMenu.style.colors.bgOVER || \"LightSteelBlue\";\n        const itemFontFamily = this.parentMenu.style.itemStyle.fontFamily || \"\";\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || \"14px\";\n        const multiselect = this.parentMenu.options.multiselect;\n        const isSubQuery = this.parentMenu.options.isSubQuery;\n        //add base DIV element which is also used to show the shadow\n        const baseDivBuilder = domel('div')\n            .addClass(getMobileCssClass());\n        if (this.parentMenu.options.useDefaultStyles) {\n            baseDivBuilder\n                .setStyle('backgroundColor', itemBgColor)\n                .setStyle('border', '1px solid')\n                .setStyle('borderColor', itemBgColor)\n                .setStyle('backgroundColor', this.parentMenu.style.colors.border)\n                .setStyle('margin', '-2px 2px 2px -2px')\n                .setStyle('width', 'auto')\n                .setStyle('height', 'auto');\n        }\n        baseDivBuilder\n            .setStyle('z-index', this.parentMenu.zIndex)\n            .setStyle('position', 'absolute')\n            .setStyle('display', 'none');\n        let baseDiv = baseDivBuilder.toDOM();\n        baseDiv['menuLevel'] = this;\n        const applyItem = this._applyItem;\n        //if multiselect option is on - then we should add special \"apply\" item\n        if (multiselect && this.levelIndex === 0 && this.parentMenu.options.hideButtons !== true) {\n            const applyDiv = document.createElement(\"div\");\n            applyDiv.classList.add(`${this.cssPrefix}-applyDiv`);\n            applyDiv['menuItem'] = applyItem;\n            this.applyBtn = document.createElement('button');\n            if (this.parentMenu.options.useDefaultStyles) {\n                applyDiv.style.borderBottom = '1px solid';\n                applyDiv.style.padding = '5px';\n                applyDiv.style.marginBottom = '5px';\n                this.applyBtn.style.padding = '0 5px';\n                this.applyBtn.style.cursor = \"pointer\";\n            }\n            const applyTextNode = document.createTextNode(this.parentMenu.options.buttons.submit);\n            this.applyBtn.appendChild(applyTextNode);\n            applyDiv.appendChild(this.applyBtn);\n            //cancel btn\n            const cancelBtn = document.createElement('button');\n            cancelBtn.classList.add(`${this.cssPrefix}-cancel`);\n            if (this.parentMenu.options.useDefaultStyles) {\n                cancelBtn.style.padding = '0 5px';\n                cancelBtn.style.cursor = 'pointer';\n                cancelBtn.style.marginLeft = '15px';\n            }\n            const cancelText = document.createTextNode(this.parentMenu.options.buttons.cancel);\n            cancelBtn.appendChild(cancelText);\n            applyDiv.appendChild(cancelBtn);\n            baseDiv.appendChild(applyDiv);\n            applyItem.itemDiv = applyDiv;\n            this.applyBtn.addEventListener('click', () => {\n                this.submit(this._applyItem);\n            });\n            cancelBtn.addEventListener('click', () => {\n                this.parentMenu.hideMenu();\n            });\n        }\n        // if too many items - then we add a special \"search\" item\n        // or there is an options to show always\n        if (this.parentLevel == null\n            && (this.parentMenu.options.searchBoxAlwaysShown || this.items.length >= this.parentMenu.options.showSearchBoxAfter)) {\n            const searchDivBuilder = domel('div')\n                .addClass(`${this.cssPrefix}-searchDiv`);\n            if (this.parentMenu.options.useDefaultStyles) {\n                searchDivBuilder\n                    .setStyle('border-bottom', '1px solid #666')\n                    .setStyle('background-color', itemBgColor)\n                    .setStyle('border-color', this.parentMenu.style.colors.border);\n                if (itemFontFamily != \"\") {\n                    searchDivBuilder.setStyle('font-family', itemFontFamily);\n                }\n                searchDivBuilder\n                    .setStyle('font-size', itemFontSize)\n                    .setStyle('color', itemFgColor)\n                    .setStyle('cursor', 'pointer')\n                    .setStyle('text-align', 'left')\n                    .setStyle('padding', '5px');\n            }\n            const searchEditBoxBuilder = domel('input')\n                .id('searchBox')\n                .name('searchBox')\n                .type('text')\n                .size(16)\n                .addClass(`${this.cssPrefix}-searchBox`)\n                .on('input', (ev) => {\n                this.deactivateItem(this.activeItem);\n                this.renderItems(this.searchBox.value);\n            })\n                .on('keydown', (ev) => {\n                let keyCode = ev.keyCode;\n                switch (keyCode) {\n                    case 13: //enter\n                        if (this.activeItem) {\n                            this.activeItem.itemDiv.click();\n                        }\n                        break;\n                    case 38: // up\n                        this.moveActiveItemUp();\n                        break;\n                    case 40: // down\n                        this.moveActiveItemDown();\n                        break;\n                    case 39: // right\n                        if (!this.searchBox.value) {\n                            this.openSubLevel(this.activeItem);\n                        }\n                        break;\n                }\n            });\n            if (this.parentMenu.options.useDefaultStyles) {\n                searchEditBoxBuilder\n                    .setStyle('font-family', 'monospace')\n                    .setStyle('font-size', '8pt')\n                    .setStyle('width', '100%');\n            }\n            if (isSubQuery) {\n                searchEditBoxBuilder.addClass('eqjs-dialog');\n            }\n            this.searchBox = searchEditBoxBuilder.toDOM();\n            this.searchDiv = searchDivBuilder.toDOM();\n            this.searchDiv.appendChild(this.searchBox);\n            baseDiv.appendChild(this.searchDiv);\n        }\n        const scrollDiv = document.createElement(\"div\");\n        scrollDiv.tabIndex = 1;\n        domel(scrollDiv)\n            .addClass(`${this.cssPrefix}-scrollDiv`)\n            .addClass(getMobileCssClass());\n        scrollDiv.style.overflowX = \"hidden\";\n        scrollDiv.style.overflowY = \"auto\";\n        scrollDiv.style.position = \"relative\";\n        baseDiv.appendChild(scrollDiv);\n        this.levelDiv = baseDiv;\n        this.scrollDiv = scrollDiv;\n        if (this.menuId) {\n            this.levelDiv.id = this.menuId;\n        }\n        if (this.parentLevel) {\n            this.levelDiv.style.zIndex\n                = this.parentLevel.levelDiv.style.zIndex;\n        }\n        this.renderItems();\n        const scrollDivKeyDownHandler = (event) => {\n            switch (event.which) {\n                case 13: // enter\n                    if (this.parentMenu.options.multiselect) {\n                        this.parentMenu.getRootLevel().applyBtn.click();\n                    }\n                    else {\n                        if (this.activeItem) {\n                            this.activeItem.itemDiv.click();\n                        }\n                    }\n                    break;\n                case 32: // space\n                    if (this.activeItem) {\n                        this.activeItem.itemDiv.click();\n                    }\n                    break;\n                case 37: // left\n                    if (this.parentLevel && !this.isFilteringMode) {\n                        this.deactivateItem(this.activeItem);\n                        this.parentLevel.focus();\n                    }\n                    break;\n                case 39: // right\n                    this.openSubLevel(this.activeItem);\n                    break;\n                case 38: // up\n                    this.moveActiveItemUp();\n                    break;\n                case 40: // down\n                    this.moveActiveItemDown();\n                    break;\n                default: return; // exit this handler for other keys\n            }\n            event.preventDefault(); // prevent the default action (scroll / move caret)            \n        };\n        scrollDiv.addEventListener(\"keydown\", scrollDivKeyDownHandler);\n        if (browserUtils.isMobileMode()) {\n            this.closeDiv =\n                domel('div', baseDiv)\n                    .addClass('eqjs-menu-close-btn')\n                    .addText(i18n.getText('ButtonClose'))\n                    .on('click', () => {\n                    this.parentMenu.hideMenu();\n                })\n                    .toDOM();\n        }\n    }\n    moveActiveItemDown() {\n        const items = this.isFilteringMode ? this.filteredItems : this.items;\n        if (this.activeItem) {\n            const idx = items.indexOf(this.activeItem);\n            if (idx < items.length - 1) {\n                this.activateItem(items[idx + 1], false);\n            }\n        }\n        else {\n            this.activateItem(items[0], false);\n        }\n    }\n    moveActiveItemUp() {\n        const items = this.isFilteringMode ? this.filteredItems : this.items;\n        if (this.activeItem) {\n            const idx = items.indexOf(this.activeItem);\n            if (idx > 0) {\n                this.activateItem(items[idx - 1], false);\n            }\n        }\n        else {\n            this.activateItem(items[items.length - 1], false);\n        }\n    }\n    openSubLevel(menuItem) {\n        if (menuItem && menuItem.items && !this.isFilteringMode) {\n            this.showSubLevel(menuItem);\n            menuItem.subLevel.activateItem(menuItem.subLevel.items[0]);\n        }\n    }\n    focusScrollDiv() {\n        this.scrollDiv.focus();\n    }\n    turnCheckboxes(items) {\n        //turn checkboxes on for selected items\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.itemCheckbox)\n                item.itemCheckbox.checked = this.isItemSelected(item);\n            if (item.items) {\n                this.turnCheckboxes(item.items);\n            }\n        }\n    }\n    isItemSelected(item) {\n        if (item.items) {\n            for (var i = 0; i < item.items.length; i++) {\n                if (this.isItemSelected(item.items[i])) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return item.selected;\n        }\n    }\n    setItemSelected(item, value) {\n        if (item.items) {\n            for (let i = 0; i < item.items.length; i++) {\n                this.setItemSelected(item.items[i], value);\n            }\n        }\n        else {\n            item.selected = value;\n        }\n    }\n    submitItems(items, selectedItems) {\n        for (let j = 0; j < items.length; j++) {\n            if (items[j].items) {\n                this.submitItems(items[j].items, selectedItems);\n            }\n            else {\n                if (items[j].selected) {\n                    selectedItems.push(items[j]);\n                }\n            }\n        }\n    }\n    allSubitemsAreFiltered(items, filterCallback) {\n        for (let i = 0; i < items.length; i++) {\n            if (filterCallback(items[i]))\n                return false;\n        }\n        return true;\n    }\n    isItemDiv(element) {\n        return element['menuItem'] ? true : false;\n    }\n    isLevelDiv(element) {\n        return element['menuLevel'] ? true : false;\n    }\n    getMenuItem(element) {\n        let el = element;\n        while (!this.isItemDiv(el)) {\n            if (this.isLevelDiv(el)) {\n                throw \"Can't get menu item\";\n            }\n            el = el.parentElement;\n        }\n        return el['menuItem'];\n    }\n    renderItemsWithoutFilter() {\n        this.isFilteringMode = false;\n        const scrollDiv = this.scrollDiv;\n        const multiselect = this.parentMenu.options.multiselect;\n        const activateOnMouseOver = this.parentMenu.options.activateOnMouseOver;\n        const itemFgColor = this.parentMenu.style.colors.fgON || 'black';\n        this.parentMenu.style.colors.bgOVER || 'LightSteelBlue';\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || '14px';\n        const itemFilterCallback = this.parentMenu.getItemFilterCallback();\n        scrollDiv.innerHTML = \"\";\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (!item || !item.text)\n                continue;\n            if (itemFilterCallback) {\n                if (!itemFilterCallback(item))\n                    continue;\n                if (item.items && this.allSubitemsAreFiltered(item.items, itemFilterCallback))\n                    continue;\n            }\n            item.data = (propName) => {\n                return this[propName];\n            };\n            if (typeof (item.selected) == \"undefined\") {\n                item.selected = false;\n            }\n            if (item.selected && this.selectedItem == null) {\n                this.selectedItem = item;\n            }\n            const itemDiv = document.createElement(\"div\");\n            domel(itemDiv)\n                .addClass(`${this.cssPrefix}-itemDiv`)\n                .addClass(getMobileCssClass());\n            if (item.selected && this.showSelected && !multiselect) {\n                itemDiv.classList.add(`${this.cssPrefix}-selected`);\n            }\n            if (this.domWriteItemsId && this.menuId) {\n                itemDiv.id = 'item-' + this.menuId + '-' + item.id;\n            }\n            scrollDiv.appendChild(itemDiv);\n            itemDiv['menuItem'] = item;\n            itemDiv['menuLevel'] = this;\n            item.itemDiv = itemDiv;\n            if (this.parentMenu.options.useDefaultStyles) {\n                itemDiv.style.fontSize = itemFontSize;\n                itemDiv.style.color = itemFgColor;\n                itemDiv.style.paddingLeft = \"15px\";\n                itemDiv.style.paddingRight = \"6px\";\n                itemDiv.style.cursor = \"pointer\";\n            }\n            if (item.text == '---') {\n                itemDiv.appendChild(document.createElement('hr'));\n            }\n            else {\n                if (multiselect) {\n                    var cb = document.createElement(\"input\");\n                    cb.type = \"checkbox\";\n                    cb.id = \"cb\" + item.id;\n                    cb.checked = this.isItemSelected(item);\n                    cb.defaultChecked = this.isItemSelected(item);\n                    itemDiv.appendChild(cb);\n                    item.itemCheckbox = cb;\n                    if (this.parentMenu.options.useDefaultStyles) {\n                        cb.style.margin = \"4px 10px 0 0\";\n                        cb.style.verticalAlign = \"top\";\n                    }\n                }\n                let itemText = item.text;\n                if (this.parentMenu.options.showItemIds) {\n                    itemText = item.id + ':' + itemText;\n                }\n                const itemTextNode = document.createTextNode(itemText);\n                itemDiv.appendChild(itemTextNode);\n                if (item.items && item.items.length > 0) {\n                    itemDiv.classList.add(`${this.cssPrefix}-itemDiv-hasChildren`);\n                    const arrowSpan = document.createElement('span');\n                    arrowSpan.classList.add(`${this.cssPrefix}-itemDiv-arrow`);\n                    itemDiv.appendChild(arrowSpan);\n                    const arrowText = document.createTextNode('>');\n                    arrowSpan.appendChild(arrowText);\n                }\n                const itemClickHandler = (ev) => {\n                    const menuItem = this.getMenuItem(ev.target);\n                    if (multiselect) {\n                        if (!menuItem.items || ev.target == menuItem.itemCheckbox) {\n                            const itemSelected = this.isItemSelected(menuItem);\n                            this.setItemSelected(menuItem, !itemSelected);\n                            menuItem.itemCheckbox.checked = !itemSelected;\n                            this.parentMenu.refreshCheckboxes();\n                        }\n                        else {\n                            this.activateItem(menuItem);\n                        }\n                    }\n                    else {\n                        this.activateItem(menuItem);\n                        this.submit(menuItem);\n                    }\n                    return false;\n                };\n                itemDiv.removeEventListener(\"click\", itemClickHandler);\n                itemDiv.addEventListener('click', itemClickHandler);\n                itemDiv.addEventListener('mouseenter', (ev) => {\n                    const item = this.getMenuItem(ev.target);\n                    this.parentMenu.isCursorInside = true;\n                    if (activateOnMouseOver) {\n                        this.activateItem(item);\n                    }\n                });\n                itemDiv.addEventListener('mouseleave', (ev) => {\n                    const item = this.getMenuItem(ev.target);\n                    this.parentMenu.isCursorInside = false;\n                    setTimeout(() => {\n                        if (!this.parentMenu.isCursorInside) {\n                            if (activateOnMouseOver && item == this.activeItem && !item.subLevel) {\n                                this.deactivateItem(item);\n                            }\n                        }\n                    }, 200);\n                });\n            }\n            if (this.itemRenderedCallback) {\n                this.itemRenderedCallback(this.menuId, itemDiv);\n            }\n        }\n    }\n    renderItemsWithFilter(filter) {\n        this.isFilteringMode = true;\n        const scrollDiv = this.scrollDiv;\n        scrollDiv.innerHTML = \"\";\n        const filterSections = filter.split('>');\n        const pureFilterTexts = filterSections.map(section => section.replace(/\\*/g, ''));\n        const items = this.filterItems(this.items, filterSections);\n        this.filteredItems = [];\n        for (let i = 0; i < items.length; i++) {\n            this.renderItemWithFilter(items[i], pureFilterTexts, 0);\n        }\n    }\n    matchesFilter(text, regexp) {\n        if (text && regexp) {\n            return regexp.test(text);\n        }\n        else {\n            return true;\n        }\n    }\n    filterItems(items, filterSections) {\n        const resultItems = [];\n        const filter = filterSections.length > 0 ? filterSections[0] : '';\n        const restFilterSections = filterSections.length > 1 ? filterSections.slice(1) : filterSections;\n        const filterRegexp = filter ? new RegExp(filter.replace(/\\*/g, '.+?'), 'i') : null;\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.items) {\n                const groupItem = utils.assign({}, item);\n                const groupItemMatches = this.matchesFilter(item.text, filterRegexp);\n                //if we have only one filter section (or an empty filter)\n                if (filterSections.length < 2) {\n                    //if current group item matches the filter -> show all sub-items\n                    if (groupItemMatches && filterSections.length < 2) {\n                        groupItem.items = utils.createArrayFrom(item.items);\n                    }\n                    else {\n                        groupItem.items = this.filterItems(item.items, restFilterSections);\n                    }\n                }\n                //if we have more than 1 filter section and there is a match -> filter sub-items as well\n                else if (groupItemMatches) {\n                    groupItem.items = this.filterItems(item.items, restFilterSections);\n                }\n                //otherwise we skip this group at all\n                else {\n                    groupItem.items = [];\n                }\n                if (groupItem.items.length > 0) {\n                    resultItems.push(groupItem);\n                }\n            }\n            else {\n                if (this.matchesFilter(item.text, filterRegexp)) {\n                    resultItems.push(item);\n                }\n            }\n        }\n        return resultItems;\n    }\n    renderItemWithFilter(item, filterTexts, level) {\n        const scrollDiv = this.scrollDiv;\n        const levelFilterText = level < filterTexts.length ? filterTexts[level] : filterTexts[filterTexts.length - 1];\n        const multiselect = this.parentMenu.options.multiselect;\n        const activateOnMouseOver = this.parentMenu.options.activateOnMouseOver;\n        const itemFgColor = this.parentMenu.style.colors.fgON || 'black';\n        this.parentMenu.style.colors.bgOVER || 'LightSteelBlue';\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || '14px';\n        const itemFilterCallback = this.parentMenu.getItemFilterCallback();\n        if (!item || !item.text)\n            return;\n        if (itemFilterCallback) {\n            if (!itemFilterCallback(item))\n                return;\n            if (item.items && this.allSubitemsAreFiltered(item.items, itemFilterCallback))\n                return;\n        }\n        item.data = function (propName) {\n            return this[propName];\n        };\n        if (typeof (item.selected) == \"undefined\") {\n            item.selected = false;\n        }\n        if (item.selected && this.selectedItem == null) {\n            this.selectedItem = item;\n        }\n        const itemDiv = document.createElement(\"div\");\n        domel(itemDiv)\n            .addClass(`${this.cssPrefix}-itemDiv`)\n            .addClass(getMobileCssClass());\n        itemDiv.style.marginLeft = `${level * 10}px`;\n        if (item.selected && !multiselect) {\n            itemDiv.classList.add(`${this.cssPrefix}-selected`);\n        }\n        if (this.domWriteItemsId && this.menuId) {\n            itemDiv.id = 'item-' + this.menuId + '-' + item.id;\n        }\n        scrollDiv.appendChild(itemDiv);\n        itemDiv['menuItem'] = item;\n        itemDiv['menuLevel'] = this;\n        item.itemDiv = itemDiv;\n        if (this.parentMenu.options.useDefaultStyles) {\n            itemDiv.style.fontSize = itemFontSize;\n            itemDiv.style.color = itemFgColor;\n            itemDiv.style.paddingLeft = \"15px\";\n            itemDiv.style.paddingRight = \"6px\";\n            itemDiv.style.cursor = \"pointer\";\n        }\n        if (item.text == '---') {\n            itemDiv.appendChild(document.createElement('hr'));\n        }\n        else {\n            if (multiselect) {\n                var cb = document.createElement(\"input\");\n                cb.type = \"checkbox\";\n                cb.id = \"cb\" + item.id;\n                cb.checked = this.isItemSelected(item);\n                cb.defaultChecked = this.isItemSelected(item);\n                itemDiv.appendChild(cb);\n                item.itemCheckbox = cb;\n                if (this.parentMenu.options.useDefaultStyles) {\n                    cb.style.margin = \"4px 10px 0 0\";\n                    cb.style.verticalAlign = \"top\";\n                }\n            }\n            const itemText = document.createElement('span');\n            itemText.innerHTML = this.highlightText(item.text, levelFilterText);\n            itemDiv.appendChild(itemText);\n            if (item.items && item.items.length > 0) {\n                itemDiv.classList.add(`${this.cssPrefix}-itemDiv-filter-hasChildren`);\n            }\n            else {\n                this.filteredItems.push(item);\n                const itemClickHandler = (event) => {\n                    if (multiselect) {\n                        if (!item.items || event.target == item.itemCheckbox) {\n                            const itemSelected = this.isItemSelected(item);\n                            this.setItemSelected(item, !itemSelected);\n                            item.itemCheckbox.checked = !itemSelected;\n                            this.parentMenu.refreshCheckboxes();\n                        }\n                        else {\n                            this.activateItem(item);\n                        }\n                    }\n                    else {\n                        this.activateItem(item);\n                        this.submit(item);\n                    }\n                    return false;\n                };\n                itemDiv.removeEventListener(\"click\", itemClickHandler);\n                itemDiv.addEventListener('click', itemClickHandler);\n                itemDiv.addEventListener('mouseenter', (ev) => {\n                    this.parentMenu.isCursorInside = true;\n                    if (activateOnMouseOver) {\n                        this.activateItem(item);\n                    }\n                });\n                itemDiv.addEventListener('mouseleave', (ev) => {\n                    this.parentMenu.isCursorInside = false;\n                    setTimeout(() => {\n                        if (!this.parentMenu.isCursorInside) {\n                            if (activateOnMouseOver && item == this.activeItem && !item.subLevel) {\n                                this.deactivateItem(item);\n                            }\n                        }\n                    }, 200);\n                });\n            }\n        }\n        if (item.items) {\n            for (let i = 0; i < item.items.length; i++) {\n                this.renderItemWithFilter(item.items[i], filterTexts, level + 1);\n            }\n        }\n        if (this.itemRenderedCallback) {\n            this.itemRenderedCallback(this.menuId, itemDiv);\n        }\n    }\n    highlightText(content, text) {\n        if (text && text.length > 0) {\n            const lowerText = text.toLowerCase();\n            const lowerContent = content.toLowerCase();\n            const insertValue1 = `<span class='eqjs-menu-itemDiv-highlight'>`;\n            const insertValue2 = `</span>`;\n            const startIndex = lowerContent.indexOf(lowerText);\n            if (startIndex >= 0) {\n                let pos = 0;\n                const value = content;\n                const indexInMas = [];\n                while (true) {\n                    const index = lowerContent.indexOf(lowerText, pos);\n                    if (index >= 0) {\n                        indexInMas.push(index);\n                        pos = index + text.length;\n                    }\n                    else {\n                        pos++;\n                    }\n                    if (pos >= value.length - 1) {\n                        break;\n                    }\n                }\n                if (indexInMas.length > 0) {\n                    content = '';\n                    for (let i = 0; i < indexInMas.length; i++) {\n                        if (i === 0) {\n                            content += value.substring(0, indexInMas[i]);\n                        }\n                        content += insertValue1 + value.substring(indexInMas[i], indexInMas[i] + text.length) + insertValue2;\n                        if (i < indexInMas.length - 1) {\n                            content += value.substring(indexInMas[i] + text.length, indexInMas[i + 1]);\n                        }\n                        else {\n                            content += value.substring(indexInMas[i] + text.length);\n                        }\n                    }\n                }\n            }\n        }\n        return content;\n    }\n    renderItems(filter) {\n        if (!filter && !browserUtils.isMobileMode()) {\n            this.renderItemsWithoutFilter();\n        }\n        else {\n            filter = filter || '';\n            this.renderItemsWithFilter(filter.toLowerCase());\n        }\n    }\n    activateItem(menuItem, openSubLevel = true) {\n        if (this.activeItem != null) {\n            this.deactivateItem(this.activeItem);\n        }\n        this.activeItem = menuItem;\n        const rowElement = menuItem.itemDiv;\n        rowElement.classList.add('active');\n        if (this.parentMenu.options.useDefaultStyles) {\n            this.parentMenu.style.colors.bgON;\n            this.parentMenu.style.colors.fgON;\n            const itemOverBgColor = this.parentMenu.style.colors.bgOVER;\n            const itemOverFgColor = this.parentMenu.style.colors.fgOVER || \"\";\n            this.parentMenu.style.itemClass || \"\";\n            const itemClassOver = this.parentMenu.style.itemClassOver || \"\";\n            if (itemClassOver != \"\") {\n                rowElement.style.backgroundColor = \"\";\n                rowElement.style.color = \"\";\n            }\n            else {\n                rowElement.style.backgroundColor = itemOverBgColor;\n                rowElement.style.color = itemOverFgColor;\n            }\n        }\n        if (menuItem.items && !this.isFilteringMode && openSubLevel) {\n            this.showSubLevel(menuItem);\n        }\n    }\n    deactivateItem(menuItem) {\n        if (!menuItem)\n            return;\n        const rowElement = menuItem.itemDiv;\n        rowElement.classList.remove('active');\n        if (this.parentMenu.options.useDefaultStyles) {\n            const itemBgColor = this.parentMenu.style.colors.bgON;\n            const itemFgColor = this.parentMenu.style.colors.fgON;\n            const itemClass = this.parentMenu.style.itemClass || \"\";\n            if (itemClass != \"\") {\n                rowElement.style.backgroundColor = \"\";\n                rowElement.style.color = \"\";\n            }\n            else {\n                rowElement.style.backgroundColor = itemBgColor;\n                rowElement.style.color = itemFgColor;\n            }\n        }\n        if (menuItem.subLevel) {\n            menuItem.subLevel.hide();\n        }\n        this.activeItem = null;\n    }\n    showSubLevel(menuItem) {\n        if (!menuItem.subLevel) {\n            let levelId = '';\n            if (this.menuId) {\n                levelId = this.menuId + \"-\" + menuItem.id;\n            }\n            menuItem.subLevel = new MenuLevel({\n                showSelected: this.showSelected,\n                menu: this.parentMenu,\n                parent: this,\n                container: this.parentElement,\n                items: menuItem.items,\n                levelIndex: this.levelIndex + 1,\n                domWriteItemsId: this.domWriteItemsId,\n                menuId: levelId,\n                itemRenderedCallback: this.itemRenderedCallback\n            });\n        }\n        const pos = getElementAbsolutePos(menuItem.itemDiv);\n        const scroll = getScrollPos();\n        const winSize = getWinSize();\n        //show menu to the side that have more space available\n        const leftSpace = pos.x - scroll.left;\n        const rightSpace = winSize.width - leftSpace - menuItem.itemDiv.offsetWidth;\n        pos.x += menuItem.itemDiv.offsetParent.offsetWidth;\n        pos.y += 1;\n        menuItem.subLevel.showAt(pos.x, pos.y, true, true);\n        menuItem.subLevel.levelDiv.style.width = '';\n        menuItem.subLevel.levelDiv.style.right = '';\n        if ((rightSpace >= menuItem.subLevel.levelDiv.offsetWidth) || (rightSpace >= leftSpace)) { //show level to the right\n            if (rightSpace < menuItem.subLevel.levelDiv.offsetWidth) {\n                menuItem.subLevel.levelDiv.style.right = -scroll.left + 'px';\n            }\n        }\n        else { //show level to the left\n            if (leftSpace < menuItem.subLevel.levelDiv.offsetWidth) {\n                menuItem.subLevel.levelDiv.style.left = scroll.left + 4 + 'px';\n            }\n            else {\n                menuItem.subLevel.levelDiv.style.left = '';\n            }\n            menuItem.subLevel.levelDiv.style.right = getViewportSize().width - pos.x + menuItem.itemDiv.offsetWidth - 6 + 'px';\n        }\n        menuItem.subLevel.levelDiv.style.visibility = 'visible';\n        menuItem.subLevel.focus();\n    }\n    adjustTopPos(top) {\n        const winSize = getWinSize();\n        const levelBottom = top - getScrollPos().top + this.levelDiv.offsetHeight;\n        let res = top;\n        if (levelBottom > winSize.height - 5) {\n            res -= levelBottom - winSize.height + 5;\n            if (res < getScrollPos().top) {\n                res = getScrollPos().top + 10;\n            }\n        }\n        return res;\n    }\n    showAt(x, y, adjustTopPos, hidden) {\n        if (!this.items) {\n            return;\n        }\n        this.initLevelDiv();\n        //crocodile\n        this.turnCheckboxes(this.items);\n        this.renderItems();\n        const levelStyle = this.levelDiv.style;\n        if (hidden) {\n            this.levelDiv.style.visibility = 'hidden';\n        }\n        levelStyle.display = 'block';\n        levelStyle.left = x + 'px';\n        levelStyle.top = y + 'px';\n        this.scrollDiv.style.width = \"auto\";\n        this.scrollDiv.style.height = \"auto\";\n        //adjusting level top position\n        if (adjustTopPos) {\n            y = this.adjustTopPos(y);\n            levelStyle.top = y + 'px';\n        }\n        //setting minimal level width if it is defined\n        let minItemWidth = this.parentMenu.minItemWidth;\n        if (minItemWidth > 0 && this.scrollDiv.offsetWidth < minItemWidth) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].itemDiv.style.width = minItemWidth + \"px\";\n            }\n        }\n        let maxItemWidth = this.parentMenu.maxItemWidth;\n        if (maxItemWidth > 0 && this.scrollDiv.offsetWidth > maxItemWidth) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].itemDiv.style.width = maxItemWidth + \"px\";\n                this.items[i].itemDiv.style.overflowX = \"hidden\";\n            }\n        }\n        const winSize = getWinSize();\n        //adjustinng maximum height of the menu level if it does not fit to browser window\n        let maxHeight = winSize.height - (y - getScrollPos().top) - 15; //document.documentElement.scrollTop\n        if (this.parentMenu.maxHeight > 0 && maxHeight > this.parentMenu.maxHeight) {\n            maxHeight = this.parentMenu.maxHeight;\n        }\n        if (this._applyItem != null && this._applyItem.itemDiv != null) {\n            maxHeight -= this._applyItem.itemDiv.offsetHeight + 5;\n        }\n        if (this.searchDiv != null) {\n            maxHeight -= this.searchDiv.offsetHeight;\n        }\n        if (this.closeDiv != null) {\n            maxHeight -= this.closeDiv.offsetHeight;\n        }\n        if (this.levelDiv.offsetHeight > maxHeight) {\n            let newHeight = maxHeight;\n            if (newHeight < 50) {\n                newHeight = 50;\n            }\n            this.scrollDiv.style.height = newHeight + \"px\";\n        }\n        else {\n            this.scrollDiv.style.height = \"auto\";\n        }\n        this.activeItem = null;\n    }\n    focus() {\n        window.setTimeout(() => {\n            this.scrollDiv.focus();\n            if (this.searchBox != null) {\n                if (this.parentMenu.options.searchBoxAutoFocus) {\n                    this.searchBox.focus();\n                }\n                this.searchBox.value = \"\";\n            }\n        }, 100);\n    }\n    hide() {\n        if (this.activeItem !== null) {\n            if (this.activeItem.subLevel) {\n                this.activeItem.subLevel.hide();\n            }\n        }\n        if (this.levelDiv) {\n            var levelStyle = this.levelDiv.style;\n            levelStyle.display = 'none';\n            if (this.initialized) {\n                this.parentElement.removeChild(this.levelDiv);\n                this.initialized = false;\n            }\n        }\n    }\n    initLevelDiv() {\n        if (!this.initialized) {\n            this.parentElement.appendChild(this.levelDiv);\n            domel(this.levelDiv)\n                .addClass(`${this.cssPrefix}-levelDiv`)\n                .addClass(getMobileCssClass());\n            this.initialized = true;\n        }\n    }\n    submit(menuItem) {\n        if (menuItem != null) {\n            if (!menuItem.items) {\n                this.parentMenu.hideMenu();\n                let selectedItems = [];\n                if (menuItem == this._applyItem) {\n                    this.submitItems(this.items, selectedItems);\n                }\n                this.parentMenu.submitMenu(menuItem, selectedItems);\n            }\n        }\n    }\n    remove() {\n        //remove old level elements\n        for (let i = 0; i < this.items.length; i++) {\n            let item = this.items[i];\n            if (item.subLevel) {\n                item.subLevel.remove();\n            }\n        }\n        if (this.levelDiv) {\n            this.levelDiv.innerHTML = \"\";\n            const parentNode = this.levelDiv.parentNode;\n            if (parentNode != null) {\n                parentNode.removeChild(this.levelDiv);\n            }\n        }\n        this.levelDiv = null;\n    }\n    update(newItems) {\n        this.remove();\n        //create new level\n        this.items = newItems;\n        this.activeItem = null;\n        this.selectedItem = null;\n        this._applyItem.itemDiv = null;\n        this.initialized = false;\n        this.updated++;\n        this.renderContent();\n    }\n    refreshCheckboxes() {\n        for (var i = 0; i < this.items.length; i++) {\n            var item = this.items[i];\n            if (item.itemCheckbox) {\n                item.itemCheckbox.checked = this.isItemSelected(item);\n            }\n            if (item.subLevel) {\n                item.subLevel.refreshCheckboxes();\n            }\n        }\n    }\n    refreshItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (item.itemDiv) {\n                if (item.hidden) {\n                    item.itemDiv.style.display = \"none\";\n                }\n                else {\n                    item.itemDiv.style.display = \"block\";\n                }\n            }\n            if (item.subLevel) {\n                item.subLevel.refreshItems();\n            }\n        }\n    }\n    findItem(searchedText) {\n        const txt = searchedText.toLowerCase();\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (item.text.toLowerCase().indexOf(txt) == 0) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\nclass PopupMenu {\n    get cssPrefix() {\n        return 'eqjs-menu';\n    }\n    constructor(options) {\n        this.isCursorInside = false;\n        this.mouseIsOverBlock = false;\n        this.mouseIsOverLink = false;\n        this.toId = null;\n        this.active = false;\n        this.ancorFocused = null;\n        this.options = {\n            items: [],\n            buttons: {\n                submit: i18n.getText('ButtonApply'),\n                cancel: i18n.getText('ButtonCancel')\n            },\n            itemFilterCallback: null,\n            useDefaultStyles: false,\n            multiselect: false,\n            adjustHeight: true,\n            showSearchBoxAfter: 30,\n            activateOnMouseOver: true,\n            container: document.body,\n            domWriteItemsId: false,\n            itemRenderedCallback: null,\n            showItemIds: false\n        };\n        if (options) {\n            utils.assign(this.options, options);\n            utils.assign(this.options.buttons, options.buttons);\n        }\n        if (this.options.hideButtons) {\n            this.options.submitOnBlur = true;\n        }\n        this.menuId = PopupMenu.lastMenuID++;\n        this.updateProps();\n        this.rootLevel = new MenuLevel({\n            menu: this,\n            items: this.options.items,\n            levelIndex: 0,\n            container: this.options.container,\n            domWriteItemsId: this.options.domWriteItemsId,\n            menuId: this.options.id,\n            itemRenderedCallback: this.options.itemRenderedCallback,\n            showSelected: this.options.showSelected,\n        });\n        this.rootLevel.levelDiv.classList.add(`${this.cssPrefix}-rootLevel`);\n        if (this.options.zIndex)\n            this.rootLevel.levelDiv.style.zIndex = `${this.options.zIndex}`;\n        this.menuKeyUpHandler = (e) => {\n            if (e.which == 27) {\n                this.hideMenu();\n                e.stopImmediatePropagation();\n            }\n        };\n        this.globalMouseDownHandler = (e) => {\n            if (!this.active)\n                return true;\n            let event = window.event || e;\n            let o = event.srcElement || event.target;\n            let isOutside = true;\n            while (o) {\n                if (o.tagName && o.tagName.toLowerCase() == 'div') {\n                    // it is added in renderContent of MenuLevel class\n                    if (o.menuLevel) {\n                        if (o.menuLevel.parentMenu == this) {\n                            isOutside = false;\n                            break;\n                        }\n                    }\n                }\n                o = o.parentNode || o.parentElement;\n            }\n            if (isOutside) {\n                if (this.options.submitOnBlur) {\n                    this.rootLevel.submit(this.rootLevel.applyItem);\n                }\n                this.hideMenu();\n            }\n            return true;\n        };\n        this.render();\n    }\n    getItems() {\n        return this.rootLevel.getItems();\n    }\n    updateProps() {\n        this.style = {};\n        this.style.colors = { border: \"#666666\", shadow: \"#888888\", bgON: \"white\", fgON: \"black\", bgOVER: \"#B6BDD2\", fgOVER: \"black\" };\n        this.style.itemStyle = { fontSize: \"14px\" };\n        this.minItemWidth = 0;\n        this.maxItemWidth = 0;\n        this.maxHeight = 0;\n        this.zIndex = `${this.options.zIndex}`;\n        this.commandTemplate = \"\";\n        this.args = [];\n        this.active = false;\n    }\n    render() {\n    }\n    clearItemsMenuProps(items) {\n        if (!items)\n            return;\n        for (var i = 0; i < items.length; i++) {\n            this.clearItemMenuProps(items[i]);\n        }\n    }\n    clearItemMenuProps(item) {\n        //don't clear properties they belong this menu\n        if (item.subLevel && item.subLevel.parentMenu == this)\n            return;\n        if (item.subLevel) {\n            item.subLevel.remove();\n            item.subLevel = null;\n        }\n        if (item.itemDiv) {\n            item.itemDiv = null;\n        }\n        if (item.items) {\n            this.clearItemsMenuProps(item.items);\n        }\n    }\n    setSelectedItems(items, selectedIds) {\n        const itemsLength = items ? items.length : 0;\n        for (let i = 0; i < itemsLength; i++) {\n            const item = items[i];\n            if (item.items) {\n                this.setSelectedItems(item.items, selectedIds);\n            }\n            else {\n                item.selected = selectedIds.indexOf(item.id) >= 0;\n            }\n        }\n    }\n    getRootLevel() {\n        return this.rootLevel;\n    }\n    getItemFilterCallback() {\n        return this.itemFilterCallback;\n    }\n    showMenu(options) {\n        this.ancorFocused = options.anchor == document.activeElement ? options.anchor : null;\n        this.clearItemsMenuProps(this.options.items);\n        this.itemSelectedCallback = options.itemSelectedCallback || null;\n        this.menuClosedCallback = options.menuClosedCallback || null;\n        this.itemFilterCallback = options.itemFilterCallback || null;\n        if (options.items) {\n            this.options.items = options.items;\n            this.rootLevel.setItems(options.items);\n        }\n        if (options.onMenuItemSelected) {\n            this.options.onMenuItemSelected = options.onMenuItemSelected;\n        }\n        let selectedIds = options.selectedIds || null;\n        if (selectedIds) {\n            if (typeof selectedIds === \"string\") {\n                selectedIds = selectedIds.split(\",\");\n            }\n        }\n        else {\n            selectedIds = [];\n        }\n        this.active = true;\n        this.setSelectedItems(this.options.items, selectedIds);\n        if (browserUtils.isMobileMode()) {\n            this.rootLevel.showAt(0, 0, true, true);\n            this.rootLevel.levelDiv.style.top = '0px';\n            this.rootLevel.levelDiv.style.bottom = '0px';\n            this.rootLevel.levelDiv.style.right = '0px';\n            this.rootLevel.levelDiv.style.position = 'fixed';\n            this.rootLevel.levelDiv.style.fontSize = '20px';\n        }\n        else {\n            const anchor = options.anchor || document.documentElement;\n            const srcPos = getElementAbsolutePos(anchor);\n            const anchorHeight = anchor.offsetHeight;\n            const anchorWidth = anchor.offsetWidth;\n            const pos = {\n                x: srcPos.x,\n                y: srcPos.y + anchorHeight + 2\n            };\n            const scroll = getScrollPos();\n            const winSize = getWinSize();\n            //show menu to the side that have more space available\n            const leftSpace = pos.x + anchorWidth - scroll.left;\n            const rightSpace = winSize.width - leftSpace + anchorWidth;\n            pos.x += 2;\n            this.rootLevel.showAt(pos.x, pos.y, true, true);\n            this.rootLevel.levelDiv.style.width = '';\n            this.rootLevel.levelDiv.style.right = '';\n            if (!this.rootLevel.levelDiv.style.zIndex) {\n                // z-index is at least 10000 and more if anchor has bigger\n                this.rootLevel.levelDiv.style.zIndex = `${Math.max(10000, findHighestZIndex(anchor) + 1)}`;\n            }\n            if ((rightSpace >= this.rootLevel.levelDiv.offsetWidth) || (rightSpace >= leftSpace)) {\n                //show level to the right\n                if (rightSpace < this.rootLevel.levelDiv.offsetWidth) {\n                    this.rootLevel.levelDiv.style.right = -scroll.left + 'px';\n                }\n            }\n            else {\n                //show level to the left\n                if (leftSpace < this.rootLevel.levelDiv.offsetWidth) {\n                    this.rootLevel.levelDiv.style.left = scroll.left + 4 + 'px';\n                }\n                else {\n                    this.rootLevel.levelDiv.style.left = '';\n                }\n                this.rootLevel.levelDiv.style.right = getViewportSize().width - pos.x - anchorWidth + 'px';\n            }\n            this.rootLevel.levelDiv.style.fontSize = '14px';\n        }\n        this.rootLevel.levelDiv.style.visibility = 'visible';\n        this.rootLevel.focus();\n        document.addEventListener('keyup', this.menuKeyUpHandler);\n        document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n    }\n    hideMenu() {\n        document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n        document.removeEventListener('keyup', this.menuKeyUpHandler);\n        this.rootLevel.hide();\n        if (this.ancorFocused) {\n            this.ancorFocused.focus();\n        }\n        if (this.menuClosedCallback) {\n            this.menuClosedCallback();\n        }\n    }\n    submitMenu(menuItem, selectedItems) {\n        if (this.itemSelectedCallback) {\n            this.itemSelectedCallback(menuItem, selectedItems);\n        }\n    }\n    knockMenuStyle(menu) {\n        menu.removeAttribute('style');\n        const ul = menu.querySelectorAll('ul').item(0);\n        var hasUlStyle = ul && ul.style ? true : false;\n        if (hasUlStyle !== false) {\n            ul.setAttribute('style', '');\n        }\n    }\n    refreshItems() {\n        this.rootLevel.refreshItems();\n    }\n    refreshCheckboxes() {\n        this.rootLevel.refreshCheckboxes();\n    }\n}\nPopupMenu.lastMenuID = 0;\n\nclass DisplayFormatParser {\n    constructor() {\n        this.formatStr = '';\n        this.pos = 0;\n        this.token = 'text';\n        this.tokenText = '';\n    }\n    start(s) {\n        this.formatStr = s;\n        this.pos = 0;\n        this.tokenText = '';\n    }\n    skipSpaces() {\n        while (this.pos < this.formatStr.length && this.formatStr.charAt(this.pos) === ' ')\n            this.pos++;\n    }\n    getToken() {\n        return this.token;\n    }\n    getTokenText() {\n        return this.tokenText;\n    }\n    next() {\n        this.skipSpaces();\n        if (this.pos >= this.formatStr.length)\n            return false;\n        let npos = 0;\n        if (this.formatStr.charAt(this.pos) === '{') {\n            npos = this.formatStr.indexOf('}', this.pos);\n            if (npos < 0)\n                return false;\n            this.tokenText = this.formatStr.substring(this.pos, npos + 1);\n            if (this.tokenText.indexOf('{expr') === 0 || this.tokenText.indexOf('{attr') === 0) {\n                this.token = 'expression';\n            }\n            this.pos = npos + 1;\n        }\n        else if (this.formatStr.charAt(this.pos) === '[' && this.pos < this.formatStr.length - 1 && this.formatStr.charAt(this.pos + 1) === '[') {\n            this.pos += 2;\n            npos = this.formatStr.indexOf(']]', this.pos);\n            this.token = 'function';\n            this.tokenText = this.formatStr.substring(this.pos, npos);\n            this.pos = npos + 2;\n        }\n        else {\n            this.token = 'text';\n            let npos1 = this.formatStr.indexOf('{', this.pos);\n            if (npos1 < 0)\n                npos1 = this.formatStr.length;\n            let npos2 = this.formatStr.indexOf('[[', this.pos);\n            if (npos2 < 0)\n                npos2 = this.formatStr.length;\n            npos = Math.min(npos1, npos2);\n            this.tokenText = this.formatStr.substring(this.pos, npos).trim();\n            this.pos = npos;\n        }\n        return true;\n    }\n}\n\nvar ColumnAction;\n(function (ColumnAction) {\n    ColumnAction[ColumnAction[\"Enable\"] = 0] = \"Enable\";\n    ColumnAction[ColumnAction[\"Delete\"] = 1] = \"Delete\";\n    ColumnAction[ColumnAction[\"Hidden\"] = 2] = \"Hidden\";\n    ColumnAction[ColumnAction[\"SortingNone\"] = 3] = \"SortingNone\";\n    ColumnAction[ColumnAction[\"SortingAsc\"] = 4] = \"SortingAsc\";\n    ColumnAction[ColumnAction[\"SortingDesc\"] = 5] = \"SortingDesc\";\n    ColumnAction[ColumnAction[\"MoveTop\"] = 6] = \"MoveTop\";\n    ColumnAction[ColumnAction[\"MoveUp\"] = 7] = \"MoveUp\";\n    ColumnAction[ColumnAction[\"MoveDown\"] = 8] = \"MoveDown\";\n    ColumnAction[ColumnAction[\"MoveBottom\"] = 9] = \"MoveBottom\";\n    ColumnAction[ColumnAction[\"Menu\"] = 10] = \"Menu\";\n    ColumnAction[ColumnAction[\"Type\"] = 11] = \"Type\";\n    ColumnAction[ColumnAction[\"Format\"] = 12] = \"Format\";\n})(ColumnAction || (ColumnAction = {}));\nclass ColumnRendererCP {\n    constructor(panel, column, slot) {\n        this.functionMenu = null;\n        this.formatsMenu = null;\n        this.buttonMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.panel = panel;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-qc';\n    }\n    get columnEnabled() {\n        return this.column.enabled;\n    }\n    set columnEnabled(value) {\n        this.column.enabled = value;\n    }\n    render() {\n        if (this.getButtonsToShow().indexOf(\"sorting\") >= 0 && this.columnEnabled) {\n            this.sortingButton = this.renderSoringButton(this.column.sorting);\n            if (this.column.sorting !== SortDirection.None) {\n                this.sortingButton.style.display = 'block';\n            }\n        }\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.panel.options.allowDragDrop && !browserUtils.isMobileMode()) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSort\",\n                data: { column: this.column },\n                beforeDragStart: () => {\n                    this.hideButtons();\n                },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('span');\n                    attrLabel.innerText = this.column.caption;\n                    dragImage.classList.add('eqjs-sortable-helper');\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    if (!ev.data.finishedSuccessfully) {\n                        this.element.style.removeProperty('display');\n                    }\n                }\n            });\n        }\n        if (this.isEditable()) {\n            this.createFunctionMenu();\n            this.createFormatsMenu();\n        }\n        this.createButtonMenu();\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderCheckbox())\n            //start sort button\n            .addChild('div', builder => builder\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortbutton-placeholder`)\n            .addChildElement(this.sortingButton));\n        // end sort button\n        builder.addChildElement(this.renderExpressionBlock());\n        if (this.panel.options.showColumnTitles !== false && !browserUtils.isMobileMode()) {\n            builder\n                .addChildElement(this.renderCaptionBlock());\n        }\n        let buttonsIndex = 0;\n        let buttonsList = '';\n        builder\n            //start buttons\n            .addChild('div', builder => {\n            builder\n                .addClass(`${eqCssPrefix}-column-buttonsBlock`, `${this.cssPrefix}-buttonsBlock`)\n                .addClass(getMobileCssClass());\n            //start enable button\n            if (this.getButtonsToShow().indexOf(\"enable\") >= 0 && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderEnabledButton());\n                buttonsIndex++;\n                buttonsList += 'Enable';\n            }\n            //end enable button\n            //start aggr func button\n            if (this.getButtonsToShow().indexOf(\"type\") >= 0 && this.columnEnabled) {\n                builder.addChildElement(this.renderColumnTypeButton());\n                buttonsIndex++;\n                buttonsList += 'Type';\n            }\n            //end aggr func button\n            //start format selector button\n            if (this.getButtonsToShow().indexOf(\"format\") >= 0 && this.columnEnabled) {\n                builder.addChildElement(this.renderColumnFormatButton());\n                buttonsIndex++;\n                buttonsList += 'Format';\n            }\n            //end format selector button\n            //start delete button\n            if (this.getButtonsToShow().indexOf(\"delete\") >= 0 && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderDeleteButton());\n                buttonsIndex++;\n                buttonsList += 'Delete';\n            }\n            //end delete button\n            //start menu button\n            if (this.getButtonsToShow().indexOf(\"menu\") >= 0 && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderMenuButton());\n                buttonsIndex++;\n                buttonsList += 'Menu';\n            }\n            //end menu button\n        });\n        //end buttons\n        builder.addClass(`eqjs-buttons-in-block-${buttonsIndex}`);\n        builder.addClass(`eqjs-buttons-in-block-${buttonsList}`);\n        if (!browserUtils.isMobileMode()) {\n            //start event listeners\n            builder\n                .on('mouseenter', this.onMouseEnter.bind(this))\n                .on('mouseleave', this.onMouseLeave.bind(this));\n            //end event listeners\n        }\n        if (this.panel.options.accentActiveColumn || browserUtils.isMobileMode()) {\n            builder\n                .on('click', this.onMouseClick.bind(this)); //touchstart\n        }\n        if (this.panel.options.alwaysShowButtons) {\n            this.showButtons();\n        }\n        if (this.panel.options.showCheckboxes === false) {\n            builder.addClass(\"eqjs-no-checkbox\");\n        }\n        return this.element;\n    }\n    onMouseClick(ev) {\n        ev.stopPropagation();\n        this.activate();\n        return false;\n    }\n    activate() {\n        this.panel.toggleColumnPicked(this.column);\n        this.adjustButtonsVisibility();\n        if (!browserUtils.isMobileMode()) {\n            this.element.dispatchEvent(createBrowserEvent(\"mouseenter\"));\n        }\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    renderCaptionBlock() {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(getMobileCssClass());\n        if (this.isEditable()) {\n            builder\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .title(this.column.caption)\n                .text(this.column.caption)\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.activate();\n                const element = ev.target;\n                const inputEl = element.parentElement.querySelector('input');\n                if (inputEl) {\n                    element.style.display = 'none';\n                    inputEl.style.removeProperty('display');\n                    inputEl.style.minWidth = `${element.clientWidth}`;\n                    inputEl.focus();\n                    this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n                }\n                return false;\n            }) //TO DO:add localization and input field\n            )\n                .addChild('input', builder => builder\n                .hide()\n                .value(this.column.caption)\n                .on('blur keydown', (ev) => {\n                let isEndEvent = false;\n                let save = true;\n                if (ev instanceof KeyboardEvent) {\n                    // Enter\n                    if (ev.keyCode === 13) {\n                        isEndEvent = true;\n                        //ESC\n                    }\n                    else if (ev.keyCode === 27) {\n                        isEndEvent = true;\n                        save = false;\n                    }\n                }\n                else if (ev instanceof FocusEvent) {\n                    isEndEvent = true;\n                }\n                if (isEndEvent) {\n                    const inputEl = ev.target;\n                    const aEl = inputEl.parentElement.querySelector('a');\n                    if (aEl) {\n                        aEl.style.removeProperty('display');\n                        inputEl.style.display = 'none';\n                    }\n                    if (save && this.column.caption !== inputEl.value) {\n                        this.column.caption = inputEl.value;\n                        this.fireColumnChanged();\n                    }\n                    else {\n                        inputEl.value = this.column.caption;\n                        safeFocus(aEl);\n                    }\n                    this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                }\n                return true;\n            }));\n        }\n        else {\n            builder.addChild('span', b => {\n                b.text(this.column.caption)\n                    .title(this.column.caption);\n            });\n        }\n        return builder.toDOM();\n    }\n    renderSoringButton(sorting) {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass;\n        switch (sorting) {\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n            default:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-none`;\n                break;\n        }\n        if (!this.isEditable() || browserUtils.isMobileMode()) {\n            if (sorting === SortDirection.Ascending\n                || sorting === SortDirection.Descending)\n                return domel('div')\n                    .addClass(sortButtonCssClass, `${eqCssPrefix}-button`, sortButtonDirectionCssClass)\n                    .title(i18n$1.getText('ButtonSorting'))\n                    .toDOM();\n            return null;\n        }\n        return domel('div')\n            .addClass(sortButtonCssClass, `${eqCssPrefix}-button`, sortButtonDirectionCssClass)\n            .data(\"btnplaceholder\", \"\")\n            .title(i18n$1.getText('ButtonSorting'))\n            .attr('tabIndex', '0')\n            .on('click', (ev) => {\n            ev.stopPropagation();\n            this.activate();\n            this.keepShowingButtons = true;\n            const menu = this.getUIS() ? this.panel.sortMenu || this.panel.moveMenu : this.panel.moveMenu;\n            menu.showMenu({\n                anchor: this.sortingButton,\n                selectedIds: this.getButtonMenuSelectedItems(), // this.column.isHidden() ? ['IsHidden'] : null,\n                itemSelectedCallback: (data, items) => {\n                    let action;\n                    switch (data.id) {\n                        case \"IsHidden\":\n                            action = ColumnAction.Hidden;\n                            break;\n                        case \"MoveTop\":\n                            action = ColumnAction.MoveTop;\n                            break;\n                        case \"MoveDown\":\n                            action = ColumnAction.MoveDown;\n                            break;\n                        case \"MoveUp\":\n                            action = ColumnAction.MoveUp;\n                            break;\n                        case \"MoveBottom\":\n                            action = ColumnAction.MoveBottom;\n                            break;\n                        case \"None\":\n                            action = ColumnAction.SortingNone;\n                            break;\n                        case \"Ascending\":\n                            action = ColumnAction.SortingAsc;\n                            break;\n                        case \"Descending\":\n                            action = ColumnAction.SortingDesc;\n                            break;\n                    }\n                    this.buttonMenuHandler(action, null);\n                },\n                menuClosedCallback: () => {\n                    this.keepShowingButtons = false;\n                    if (!this.isMouseOverBlock) {\n                        this.leaveButtonBlock();\n                    }\n                }\n            });\n        })\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderCheckbox() {\n        if (this.panel.options.showCheckboxes && !this.column.isReadOnly()) {\n            return domel(\"div\")\n                .title(i18n$1.getText('CmdToggleEnable'))\n                .attr('tabIndex', '0')\n                .addClass(`${this.cssPrefix}-colelement ${this.cssPrefix}-column-checkbox`)\n                .addClass(`${this.columnEnabled ? 'enabled' : ''}`)\n                .on('click', () => {\n                this.columnEnabled = !this.columnEnabled;\n                this.column.fireChangedEvent();\n                return false;\n            })\n                .on('keypress', evt => { if ([13, 32].includes(evt.keyCode)) {\n                evt.target.click();\n            } })\n                .toDOM();\n        }\n        else {\n            return null;\n        }\n    }\n    renderDeleteButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-deletebutton-placeholder`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-delete`)\n            .title(i18n$1.getText('CmdDelete'))\n            .attr('tabIndex', '0')\n            .on('click', ev => this.buttonMenuHandler(ColumnAction.Delete, ev)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } }))\n            .toDOM();\n    }\n    renderMenuButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-menubutton-placeholder`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-menu`)\n            .title(i18n$1.getText('ButtonMenu'))\n            .attr('tabIndex', '0')\n            .on('click', evt => this.buttonMenuHandler(ColumnAction.Menu, evt)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } }))\n            .toDOM();\n    }\n    getClassesToAdd() {\n        let result = \"\";\n        result += this.columnEnabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.columnEnabled) {\n            result += this.column.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        result += this.column.isHidden() ? ` ${this.cssPrefix}-hidden` : '';\n        return result;\n    }\n    renderColumnTypeButton() {\n        return (this.isEditable() && this.panel.options.allowAggrColumns !== false)\n            ? domel('div')\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-typebutton-placeholder`, `${this.cssPrefix}-button-active`)\n                .data(\"btnplaceholder\", \"\")\n                .addChild('div', b => b\n                .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-type`)\n                .title(i18n$1.getText('ButtonToAggr'))\n                .attr('tabIndex', '0')\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.activate();\n                this.keepShowingButtons = true;\n                this.changeTypeHandler(ev);\n            })\n                .on('keypress', evt => { if (evt.keyCode == 13) {\n                evt.target.click();\n            } }))\n                .toDOM()\n            : null;\n    }\n    renderColumnFormatButton() {\n        const formatItems = this.getFormatsMenuItems();\n        return (this.isEditable() && this.panel.options.allowDisplayFormatChange !== false && formatItems.length > 1)\n            ? domel('div')\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-formatbutton-placeholder`, `${this.cssPrefix}-button-active`)\n                .data(\"btnplaceholder\", \"\")\n                .addChild('div', b => b\n                .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-format`)\n                .title(i18n$1.getText('ButtonFormat'))\n                .attr('tabIndex', '0')\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.keepShowingButtons = true;\n                this.changeFormatHandler(ev);\n            })\n                .on('keypress', evt => { if (evt.keyCode == 13) {\n                evt.target.click();\n            } }))\n                .toDOM()\n            : null;\n    }\n    renderEnabledButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-enablebutton-placeholder`, `${this.cssPrefix}-button-active`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-enable`)\n            .title(i18n$1.getText('CmdToggleEnable'))\n            .addClass(this.columnEnabled ? 'enabled' : '')\n            .attr('tabIndex', '0')\n            .on('click', evt => this.buttonMenuHandler(ColumnAction.Enable, evt)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })).toDOM();\n    }\n    isEditable() {\n        return this.columnEnabled && !this.column.isReadOnly();\n    }\n    changeFormatHandler(ev) {\n        const formats = this.panel\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let itemId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            itemId = this.column.displayFormat;\n        }\n        this.formatsMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: itemId,\n            itemSelectedCallback: (data, items) => {\n                if (data.id != itemId) {\n                    if (data.id == '{0:__default}') {\n                        this.column.displayFormat = '';\n                    }\n                    else {\n                        this.column.displayFormat = data.id;\n                    }\n                    this.column.fireChangedEvent();\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    getUIS() {\n        return this.panel\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n    onMouseEnter(e) {\n        this.isMouseOverBlock = true;\n        this.enterButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    onMouseLeave(e) {\n        this.isMouseOverBlock = false;\n        this.leaveButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    isColumnActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        domel(this.element).data(\"show-buttons\", null);\n    }\n    showButtons() {\n        domel(this.element).data(\"show-buttons\", \"\");\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtons ||\n            ((this.panel.options.accentActiveColumn || browserUtils.isMobileMode())\n                && this.isColumnActive())) {\n            this.showButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (!this.keepShowingButtons && this.panel.options.alwaysShowButtons !== true && (!this.isColumnActive() || this.panel.options.accentActiveColumn != true)) {\n            this.hideButtons();\n        }\n    }\n    createFunctionMenu() {\n        const items = [];\n        const funcs = this.panel.getContext().getModel().getAggrFunctions();\n        let funcAllowed = true;\n        let item = null;\n        const colDataType = this.column.getDataType();\n        let funcCaption;\n        for (const func of funcs) {\n            if (!func)\n                continue;\n            const toInclude = func.getAppliedTypesOrDefault().indexOf(colDataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.panel.getContext().getModel()\n                    .getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        if (!funcAllowed) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.panel;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n$1.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n    createFormatsMenu() {\n        if (this.panel.options.allowDisplayFormatChange == false)\n            return;\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FormatsMenu';\n        }\n        const items = this.getFormatsMenuItems();\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            showSelected: true,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.formatsMenu = new PopupMenu(menuOptions);\n    }\n    getFormatsMenuItems() {\n        const formats = this.panel.getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        return [{ id: '{0:__default}', text: \"Default\" }]\n            .concat(formats.map(format => ({ id: format.format, text: i18n$1.getText(\"DisplayFormats\", format.name) || format.name })));\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && Array.isArray(this.panel.options.buttons) ? this.panel.options.buttons : [\"enable\", \"delete\", \"type\", \"sorting\", \"format\"];\n    }\n    buttonMenuHandler(action, evt) {\n        switch (action) {\n            case ColumnAction.Delete:\n                const curQuery = this.column.getQuery();\n                curQuery.removeColumn(this.column);\n                curQuery.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column);\n                break;\n            case ColumnAction.Enable:\n                this.activate();\n                this.columnEnabled = !this.columnEnabled;\n                this.fireColumnChanged();\n                break;\n            case ColumnAction.Hidden:\n                this.column.setHidden(!this.column.isHidden());\n                this.fireColumnChanged();\n                break;\n            case ColumnAction.MoveTop:\n                this.panel.moveColumn(this.column, \"MoveTop\");\n                break;\n            case ColumnAction.MoveBottom:\n                this.panel.moveColumn(this.column, \"MoveBottom\");\n                break;\n            case ColumnAction.MoveUp:\n                this.panel.moveColumn(this.column, \"MoveUp\");\n                break;\n            case ColumnAction.MoveDown:\n                this.panel.moveColumn(this.column, \"MoveDown\");\n                break;\n            case ColumnAction.SortingAsc:\n                this.column.sorting = SortDirection.Ascending;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.SortingDesc:\n                this.column.sorting = SortDirection.Descending;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.SortingNone:\n                this.column.sorting = SortDirection.None;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.Menu:\n                const colMenu = this.buttonMenu;\n                this.keepShowingButtons = true;\n                this.activate();\n                colMenu.showMenu({\n                    anchor: evt ? evt.target : null,\n                    selectedIds: this.getButtonMenuSelectedItems(),\n                    itemSelectedCallback: (item) => {\n                        let action = item.id;\n                        switch (item.id) {\n                            case \"enable\":\n                                action = ColumnAction.Enable;\n                                break;\n                            case \"delete\":\n                                action = ColumnAction.Delete;\n                                break;\n                            case \"hidden\":\n                                action = ColumnAction.Hidden;\n                                break;\n                            case \"MoveTop\":\n                                action = ColumnAction.MoveTop;\n                                break;\n                            case \"MoveBottom\":\n                                action = ColumnAction.MoveBottom;\n                                break;\n                            case \"MoveUp\":\n                                action = ColumnAction.MoveUp;\n                                break;\n                            case \"MoveDown\":\n                                action = ColumnAction.MoveDown;\n                                break;\n                            case \"None\":\n                                action = ColumnAction.SortingNone;\n                                break;\n                            case \"Ascending\":\n                                action = ColumnAction.SortingAsc;\n                                break;\n                            case \"Descending\":\n                                action = ColumnAction.SortingDesc;\n                                break;\n                        }\n                        this.buttonMenuHandler(action, evt);\n                    },\n                    itemFilterCallback: (item) => {\n                        let result = this.columnEnabled || item.id === \"__group\" || item.id === \"enable\" || item.id === \"delete\";\n                        return result;\n                    },\n                    menuClosedCallback: () => {\n                        this.keepShowingButtons = false;\n                        if (!this.isMouseOverBlock)\n                            this.leaveButtonBlock();\n                    }\n                });\n                break;\n            default:\n                if (!this.processFormatsButtonMenuItems(action, evt))\n                    this.processExtraButtonMenuItems(action, evt);\n                break;\n        }\n        evt && evt.stopPropagation();\n        return false;\n    }\n    createButtonMenu() {\n        if (!this.buttonMenu) {\n            let menuId = this.column.id;\n            if (menuId) {\n                menuId += '-ButtonMenu';\n            }\n            const Appearance = [];\n            Appearance.push({\n                id: \"enable\",\n                text: i18n$1.getText('MenuEnable')\n            });\n            if (this.panel.options.allowHiddenColumns) {\n                Appearance.push({\n                    id: \"hidden\",\n                    text: i18n$1.getText('CmdHiddenColumn')\n                });\n            }\n            Appearance.push({\n                id: \"delete\",\n                text: i18n$1.getText('CmdDelete')\n            });\n            let items = [];\n            items.push({\n                id: '__group',\n                text: i18n$1.getText('CmdGroupAppearance'),\n                items: Appearance\n            });\n            const sortItems = this.panel.options.allowSorting ?\n                [\n                    ...this.panel.getSortMenuList(),\n                    ...this.panel.getMoveMenuList()\n                ] :\n                this.panel.getMoveMenuList();\n            items.push({\n                id: '__group',\n                text: i18n$1.getText('CmdGroupSort'),\n                items: sortItems\n            });\n            const extra = this.getExtraButtonMenuItems();\n            if (extra && Array.isArray(extra)) {\n                items = [...items, ...extra];\n            }\n            const formatItems = this.getFormatsMenuItems();\n            if (formatItems.length > 1) {\n                items.push({\n                    id: '__group',\n                    text: i18n$1.getText('CmdGroupFormat'),\n                    items: formatItems\n                });\n            }\n            const menuOptions = {\n                items: items,\n                id: menuId,\n                searchBoxAlwaysShown: false,\n                domWriteItemsId: true, //this.panel.options.domWriteItemsId\n                showSelected: true\n            };\n            this.buttonMenu = new PopupMenu(menuOptions);\n        }\n    }\n    processFormatsButtonMenuItems(action, evt) {\n        const formats = this.panel\n            .getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        if (action == '{0:__default}') {\n            this.column.displayFormat = '';\n        }\n        else if (formats.filter(f => f.format == action).length > 0) {\n            this.column.displayFormat = action;\n        }\n        else {\n            return false;\n        }\n        this.column.fireChangedEvent();\n        return true;\n    }\n    getButtonMenuSelectedItems() {\n        let arrSelected = [];\n        if (this.columnEnabled) {\n            arrSelected.push(\"enable\");\n        }\n        if (this.column.isHidden()) {\n            arrSelected.push(\"hidden\");\n        }\n        switch (this.column.sorting) {\n            case SortDirection.None:\n                arrSelected.push(\"None\");\n                break;\n            case SortDirection.Ascending:\n                arrSelected.push(\"Ascending\");\n                break;\n            case SortDirection.Descending:\n                arrSelected.push(\"Descending\");\n                break;\n        }\n        const formats = this.panel\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let formatId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            formatId = this.column.displayFormat;\n        }\n        arrSelected.push(formatId);\n        return arrSelected;\n    }\n}\n\nclass AttrColumnRendererCP extends ColumnRendererCP {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    renderExpressionBlock() {\n        return domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`)\n            .addClass(getMobileCssClass())\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderBaseExpression()))\n            .toDOM();\n    }\n    getAttribute() {\n        const model = this.panel.getContext().getModel();\n        return model.getAttributeByIdSafe(this.column.expr.value);\n    }\n    renderBaseExpression() {\n        const baseAttr = this.getAttribute();\n        const attrCaption = this.panel.getContext().getAttributeTitle(baseAttr);\n        if (this.isEditable()) {\n            return domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(attrCaption)\n                .text(attrCaption) //TO DO:add localization\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.activate();\n                this.panel.showEntitiesMenu({\n                    anchor: ev.target,\n                    selectedIds: null,\n                    itemSelectedCallback: this.baseExpressionItemSelectedCallback.bind(this),\n                    itemFilterCallback: item => item.id !== '__AddAll__'\n                });\n                return false;\n            })\n                .toDOM();\n        }\n        return domel('span')\n            .text(attrCaption)\n            .title(attrCaption)\n            .toDOM();\n    }\n    baseExpressionItemSelectedCallback(data, item) {\n        const attrid = data.id;\n        const context = this.panel.getContext();\n        var attr = context.getModel().getAttributeById(attrid);\n        this.updateBaseAttr(attr);\n        this.column.caption = context.getDefaultColumnCaption(this.column);\n        this.fireColumnChanged();\n        return false;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n        this.column.expr.dataType = attr.dataType;\n    }\n    getUIS() {\n        const arg = this.column.expr.args[0];\n        if (arg) {\n            const model = this.panel.getContext().getModel();\n            return model.checkAttrProperty(arg.value, \"useInSorting\");\n        }\n        else {\n            return true;\n        }\n    }\n    changeTypeHandler(ev) {\n        this.keepShowingButtons = true;\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                this.processExtraButtonMenuItems(data.id, null);\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    changeTypeToCustomSql() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.CustomSql);\n        const parentElement = this.element.parentElement;\n        setTimeout(() => {\n            //focus CustomSQL Edit\n            const newElement = parentElement.querySelector(`div[data-id='${this.column.id}']  div[class*='${this.cssPrefix}-expr-block']  div[class*='${this.cssPrefix}-colelement']  a`);\n            if (newElement)\n                newElement.click();\n        }, 500);\n        this.fireColumnChanged();\n    }\n    changeTypeToAggr(funcId) {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.AggregateFunction, { funcId: funcId });\n        this.fireColumnChanged();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        if (action === \"CUSTOMSQL\") {\n            this.changeTypeToCustomSql();\n        }\n        else {\n            this.changeTypeToAggr(action);\n        }\n        return true;\n    }\n    getExtraButtonMenuItems() {\n        const items = [];\n        const funcs = this.panel.getContext().getModel().getAggrFunctions();\n        let toInclude = true;\n        let funcAllowed = true;\n        var item = null;\n        const attribute = this.getAttribute();\n        let funcCaption;\n        for (const func of funcs) {\n            toInclude = func.getAppliedTypesOrDefault().indexOf(attribute.dataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.panel.getContext().getModel().getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        for (let idx = 0; idx < funcs.length; idx++) {\n            if (!funcs[idx])\n                continue;\n        }\n        if (!funcAllowed) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.panel;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: items\n            }];\n    }\n}\n\nclass AggrFuncColumnRendererCP extends AttrColumnRendererCP {\n    constructor() {\n        super(...arguments);\n        this.displayFormatParser = new DisplayFormatParser();\n    }\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-aggr`;\n    }\n    getAttribute() {\n        return this.panel\n            .getContext()\n            .getModel()\n            .getAttributeByIdSafe(this.column.expr.args[0].value);\n    }\n    renderExpressionBlock() {\n        const model = this.panel.getContext().getModel();\n        const exprBlockBuilder = domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`, `${this.cssPrefix}-expr-block-aggr`)\n            .addClass(getMobileCssClass());\n        const format = model.getAggrFunctionFormat(this.column.expr.func);\n        if (!format || format === '')\n            return;\n        const arrFormat = this.parseDisplayFormat(format);\n        if (arrFormat.length === 0)\n            return;\n        let item = null;\n        const arrLength = arrFormat.length;\n        for (let idx = 0; idx < arrLength; idx++) {\n            item = arrFormat[idx];\n            if (item.type === 1) {\n                if (this.isEditable()) {\n                    const functionLink = domel('a')\n                        .attr('href', 'javascript:void(0)')\n                        .text(item.text)\n                        .on('click', (ev) => {\n                        ev.stopPropagation();\n                        this.activate();\n                        this.functionMenu.showMenu({\n                            anchor: functionLink.toDOM(),\n                            selectedIds: null,\n                            itemSelectedCallback: (data, items) => {\n                                if (data.id === \"CUSTOMSQL\") {\n                                    this.changeTypeToCustomSql();\n                                }\n                                else {\n                                    this.column.expr.func = data.id;\n                                    this.column.caption = '';\n                                    this.fireColumnChanged();\n                                }\n                            }\n                        });\n                    });\n                    exprBlockBuilder\n                        .addChild('div', builder => builder\n                        .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-aggrfuncelement`)\n                        .addClass(getMobileCssClass())\n                        .addChildElement(functionLink.toDOM()));\n                }\n                else {\n                    exprBlockBuilder\n                        .addChild('div', b => b\n                        .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-aggrfuncelement`)\n                        .addClass(getMobileCssClass())\n                        .addChild('span', b => b\n                        .text(item.text)\n                        .title(item.text)));\n                }\n            }\n            else if (item.type === 2) {\n                exprBlockBuilder\n                    .addChild('div', builder => builder\n                    .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n                    .addClass(getMobileCssClass())\n                    .addChildElement(this.renderBaseExpression()));\n            }\n            else if (item.type === 3) {\n                exprBlockBuilder\n                    .addChild('span', builder => builder\n                    .addClass(`${this.cssPrefix}-colelement`)\n                    .addClass(getMobileCssClass())\n                    .text(item.text)\n                    .title(item.text));\n            }\n        }\n        return exprBlockBuilder.toDOM();\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    parseDisplayFormat(format) {\n        if (!format)\n            return [];\n        let result = [];\n        const parser = this.displayFormatParser;\n        parser.start(format);\n        while (parser.next()) {\n            const token = parser.getToken();\n            const tokenText = parser.getTokenText();\n            if (token === 'function') {\n                result.push({ type: 1, text: tokenText });\n            }\n            else if (token === 'expression') {\n                result.push({ type: 2 });\n            }\n            else if (token === 'text') {\n                result.push({ type: 3, text: tokenText });\n            }\n        }\n        return result;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.args[0].setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n    }\n    changeTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        this.changeTypeToSimple();\n        return true;\n    }\n    getExtraButtonMenuItems() {\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: [{\n                        id: 'type',\n                        text: i18n.getText('ColTypeSimple')\n                    }]\n            }];\n    }\n}\n\nclass EditableColumnRendererCP extends AttrColumnRendererCP {\n    constructor() {\n        super(...arguments);\n        this.dataTypeMenu = null;\n    }\n    renderEnabledButton() {\n        const elem = super.renderEnabledButton();\n        const child = elem.children[0];\n        child.title = i18n.getText('CmdToggleEnableCustom');\n        return elem;\n    }\n    ;\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr` + super.getClassesToAdd();\n    }\n    renderExpressionBlock() {\n        const exprBlock = domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`)\n            .addClass(getMobileCssClass())\n            .toDOM();\n        //Attribute element\n        let builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(getMobileCssClass());\n        if (this.isEditable()) {\n            builder\n                .addChild('a', b => b\n                .attr('href', 'javascript:void(0)')\n                .title(this.column.caption)\n                .text(this.column.caption)\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                const element = ev.target;\n                const inputEl = element.parentElement.querySelector('input');\n                if (inputEl) {\n                    element.style.display = 'none';\n                    inputEl.style.removeProperty('display');\n                    inputEl.style.width = `100%`;\n                    inputEl.focus();\n                    this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n                }\n            }) //TO DO:add localization and input field\n            )\n                .addChild('input', b => b\n                .hide()\n                .value(this.getColumnValue())\n                .on('blur keydown', (ev) => {\n                let isEndEvent = false;\n                let save = true;\n                if (ev instanceof KeyboardEvent) {\n                    // Enter\n                    if (ev.keyCode === 13) {\n                        isEndEvent = true;\n                        //ESC\n                    }\n                    else if (ev.keyCode === 27) {\n                        isEndEvent = true;\n                        save = false;\n                    }\n                }\n                else if (ev instanceof FocusEvent) {\n                    isEndEvent = true;\n                }\n                if (isEndEvent) {\n                    const inputEl = ev.target;\n                    const aEl = inputEl.parentElement.querySelector('a');\n                    if (aEl) {\n                        aEl.style.removeProperty('display');\n                        inputEl.style.display = 'none';\n                    }\n                    const colVal = this.getColumnValue();\n                    if (save && colVal !== inputEl.value) {\n                        this.setColumnValue(inputEl.value);\n                        this.fireColumnChanged();\n                    }\n                    else {\n                        inputEl.value = colVal;\n                    }\n                    this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                }\n            }));\n        }\n        else {\n            builder\n                .addChild('span', b => {\n                b.text(this.column.caption)\n                    .title(this.column.caption);\n            });\n        }\n        // Colon element\n        builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`)\n            .addChild('span', b => {\n            b.text(':')\n                .title(':');\n        });\n        // DataType element\n        builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(getMobileCssClass());\n        if (this.isEditable()) {\n            this.createDataTypeMenu();\n            builder\n                .addChild('a', dataTypeLink => dataTypeLink\n                .attr('href', 'javascript:void(0)')\n                .title(DataType[this.column.expr.dataType])\n                .text(DataType[this.column.expr.dataType])\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                this.dataTypeMenu.showMenu({\n                    anchor: dataTypeLink.toDOM(),\n                    selectedIds: null,\n                    itemSelectedCallback: (data, items) => {\n                        this.column.expr.dataType = data.id;\n                        this.fireColumnChanged();\n                    }\n                });\n            }));\n        }\n        else {\n            this.column.expr.dataType;\n            builder\n                .addChild('span', b => {\n                b.text(DataType[this.column.expr.dataType])\n                    .title(DataType[this.column.expr.dataType]);\n            });\n        }\n        return exprBlock;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    getColumnValue() {\n        return '';\n    }\n    setColumnValue(value) {\n    }\n    getUIS() {\n        return true;\n    }\n    changeTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        this.changeTypeToSimple();\n        return true;\n    }\n    createFunctionMenu() {\n        // Nothing TO DO\n    }\n    getExtraButtonMenuItems() {\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: [{\n                        id: 'type',\n                        text: i18n.getText('ColTypeSimple')\n                    }]\n            }];\n    }\n    createDataTypeMenu() {\n        const items = [];\n        for (let typeItem in DataType) {\n            if (!isNaN(Number(typeItem))) {\n                const item = {\n                    id: typeItem,\n                    text: DataType[typeItem]\n                };\n                items.push(item);\n            }\n        }\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-DataTypeMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true\n        };\n        this.dataTypeMenu = new PopupMenu(menuOptions);\n    }\n}\nclass CustomSqlColumnRendererCP extends EditableColumnRendererCP {\n    get columnEnabled() {\n        return this.panel.areCustomExpressionsAllowed() ? this.column.enabled : false;\n    }\n    set columnEnabled(value) {\n        if (this.panel.areCustomExpressionsAllowed()) {\n            this.column.enabled = value;\n        }\n        else {\n            this.column.enabled = false;\n        }\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    getColumnValue() {\n        return this.column.expr.sql;\n    }\n    setColumnValue(value) {\n        this.column.expr.sql = value;\n    }\n    getDefaultValue() {\n        return this.column.expr.sql;\n    }\n}\nclass ConstColumnRendererCP extends EditableColumnRendererCP {\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    getColumnValue() {\n        return this.column.expr.value;\n    }\n    setColumnValue(value) {\n        this.column.expr.setValue(value);\n    }\n    getDefaultValue() {\n        return this.column.expr.value;\n    }\n}\n\nclass ColumnsPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-qc';\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            isSubQuery: false,\n            activeColumn: null,\n            showAddRow: true,\n            showHeader: true,\n            showColumnTitles: true,\n            allowAggrColumns: true,\n            allowDuplicates: true,\n            allowCustomExpressions: false,\n            allowSorting: true,\n            attrElementFormat: '{entity} {attr}',\n            titleElementFormat: null,\n            buttons: null,\n            alwaysShowButtons: false,\n            accentActiveColumn: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n            attrPlacement: 0,\n            sortEntities: false,\n            columnRenderedCallback: null,\n            customExpressionText: 0,\n            allowHiddenColumns: false,\n            showAddAllForEntity: false,\n            showIndicatorOnLoad: true\n        };\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this.landingIndex = -1;\n        this.slot.classList.add(`${this.cssPrefix}-panel`);\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'columnsPanel';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n        const model = context.getModel();\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttr\", \"entityAttrSort\"],\n                onDragEnter: (container, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    if (ev.item.scope === \"entityAttrSort\") {\n                        this.showLandingSlot(ev.pageX, ev.pageY);\n                    }\n                    else {\n                        const attrId = ev.data.attrId;\n                        if (!model.checkAttrProperty(attrId, \"useInResult\")) {\n                            ev.dropEffect = DropEffect.Forbid;\n                        }\n                        ev.dragImage.classList.add('eqjs-sortable-helper');\n                    }\n                },\n                onDragOver: (container, ev) => {\n                    const attrId = ev.data.attrId;\n                    if (ev.item.scope === \"entityAttrSort\" ||\n                        model.checkAttrProperty(attrId, \"useInResult\")) {\n                        this.showLandingSlot(ev.pageX, ev.pageY);\n                    }\n                },\n                onDragLeave: (container, ev) => {\n                    if (ev.item.scope === \"entityAttrSort\") {\n                        ev.dropEffect = DropEffect.Forbid;\n                    }\n                    else {\n                        ev.dragImage.classList.remove('eqjs-sortable-helper');\n                        ev.dragImage.style.removeProperty('width');\n                    }\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (ev.item.scope == \"entityAttrSort\") {\n                        const query = this.getQuery();\n                        const columns = query.getColumns();\n                        const index = columns.indexOf(ev.data.column);\n                        this.moveColumnCore(index, this.landingIndex);\n                    }\n                    else {\n                        const attrId = ev.data.attrId;\n                        this.addNewColumn(attrId, this.landingIndex);\n                    }\n                }\n            });\n        }\n    }\n    renderBaseElements() {\n        let minusHeight = 0;\n        if (this.options.showHeader) {\n            const headerBuilder = domel('div', this.slot)\n                .hide()\n                .addClass(`${this.cssPrefix}-header`)\n                .addClass(getMobileCssClass());\n            if (!this.options.alwaysShowButtons) {\n                headerBuilder.addClass(\"eqjs-no-buttons\");\n            }\n            if (this.options.showCheckboxes) {\n                headerBuilder.addChild('div', builder => builder\n                    .setStyle('margin-left', '30px')); //quick fix to adjust title column header when showCheckboxes is on\n            }\n            else {\n                headerBuilder.addClass(\"eqjs-no-checkbox\");\n            }\n            headerBuilder.addChild('div', builder => builder\n                .addClass(`${this.cssPrefix}-header-expression`)\n                .text(i18n.getText('HeaderExpression')));\n            if (this.options.showColumnTitles !== false) {\n                headerBuilder\n                    .addChild('div', builder => builder\n                    .addClass(`${this.cssPrefix}-header-title`)\n                    .text(i18n.getText('HeaderTitle')));\n            }\n            this.headerElement = headerBuilder.toDOM();\n            minusHeight += this.headerElement.offsetHeight;\n        }\n        this.columnsBlock =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowElement =\n                domel('div', this.slot)\n                    .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n                    .addClass(getMobileCssClass())\n                    .addChild('a', builder => builder\n                    .attr('href', 'javascript:void(0)')\n                    .text(i18n.getText('CmdClickToAddColumn'))\n                    .on('click', (e) => {\n                    e.preventDefault();\n                    this.showEntitiesMenu({\n                        anchor: e.target,\n                        selectedIds: null,\n                        itemSelectedCallback: (data, items) => {\n                            if (data.id === '__AddAll__' && data.extra && Array.isArray(data.extra.ids)) {\n                                data.extra.ids.forEach(attrId => this.addNewColumn(attrId));\n                            }\n                            else {\n                                const attrid = data.id;\n                                this.addNewColumn(attrid);\n                            }\n                            return false;\n                        }\n                    });\n                }))\n                    .toDOM();\n            minusHeight += this.addRowElement.offsetHeight;\n        }\n        this.columnsBlock.style.maxHeight = `${this.slot.offsetHeight - minusHeight - 25}px`;\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Columns\n                && edata.part != QueryChangePart.Aggregation\n                && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const columns = edata.changee;\n                    const modifyColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const renderer = this.getColumnRenderer(column, colEl);\n                            if (renderer) {\n                                const newEl = renderer.render();\n                                if (isFocusInside) {\n                                    const focusElem = newEl.querySelector('a') || newEl.querySelector('.eqjs-column-button');\n                                    if (focusElem) {\n                                        focusElem.focus();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => modifyColumn(col));\n                    }\n                    else {\n                        modifyColumn(columns);\n                    }\n                    this.agjustHeaderVisibility();\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const columns = edata.changee;\n                    const addColumn = (column) => {\n                        const index = query.getColumns().indexOf(column);\n                        const newEl = this.addColumnElement(column, index);\n                        if (isFocusInside) {\n                            const focusElem = newEl.querySelector('a');\n                            if (focusElem) {\n                                try {\n                                    focusElem.focus();\n                                }\n                                catch (_a) {\n                                    //do nothing\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => addColumn(col));\n                    }\n                    else {\n                        addColumn(columns);\n                    }\n                    this.agjustHeaderVisibility();\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const columns = edata.changee;\n                    const deleteColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const next = colEl.nextSibling;\n                            const prev = colEl.previousSibling;\n                            this.columnsBlock.removeChild(colEl);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || this.addRowElement;\n                                const focusElem = focusCond.querySelector('a') || focusCond.querySelector('.eqjs-column-button');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    this.agjustHeaderVisibility();\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => deleteColumn(col));\n                    }\n                    else {\n                        deleteColumn(columns);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    showLandingSlot(pageX, pageY) {\n        const rowElems = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const rows = [];\n        for (let i = 0; i < rowElems.length; i++) {\n            const rowElem = rowElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            rows.push(rowElem);\n        }\n        if (rows.length === 0) {\n            this.landingIndex = 0;\n            this.columnsBlock.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        const firstRow = rows[0];\n        const rowHeight = firstRow.offsetHeight;\n        const absPos = getElementAbsolutePos(firstRow);\n        let newLandingIndex = (pageY > absPos.y + rowHeight / 2) ? Math.round((pageY - absPos.y + rowHeight / 2) / rowHeight) : 0;\n        if (newLandingIndex > rows.length) {\n            newLandingIndex = rows.length;\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < rows.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, rows[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n            this.landingSlot.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        this.context.options.allowCustomExpressions = options.allowCustomExpressions;\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        if (browserUtils.isMobileMode()) {\n            this.options.buttons = [\"menu\", \"sorting\"];\n            this.options.showHeader = false;\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.slot.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.slot.removeChild(this.progressBlock);\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    render() {\n        try {\n            this.renderBaseElements();\n            this.createEntitiesMenu();\n            this.createColumnMenus();\n            this.agjustHeaderVisibility();\n            domel(this.slot)\n                .removeClass(eqCssMobile)\n                .addClass(getMobileCssClass());\n            const query = this.context.getQuery();\n            const columns = query.getColumns();\n            for (let column of columns) {\n                this.columnsBlock.appendChild(this.renderColumn(column));\n            }\n        }\n        catch (err) {\n            let error = err;\n            this.context.throwError({\n                action: \"ColumnsPanel rendering\",\n                text: error.message,\n                sourceError: error\n            });\n        }\n    }\n    agjustHeaderVisibility() {\n        if (this.headerElement) {\n            const query = this.context.getQuery();\n            const columns = query.getColumns();\n            this.headerElement.style.display = (columns.length) ? '' : 'none';\n        }\n    }\n    renderColumn(column) {\n        const renderer = this.getColumnRenderer(column);\n        if (renderer)\n            return renderer.render();\n        return null;\n    }\n    toggleColumnPicked(column) {\n        let el;\n        let isActive;\n        if (column) {\n            el = this.columnsBlock.querySelector(`div[data-id=${column.id}]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.columnsBlock.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            domel(row)\n                .removeClass('active');\n            if (!this.options.alwaysShowButtons) {\n                domel(row)\n                    .data(\"show-buttons\", null);\n            }\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    addNewColumn(attrs, index) {\n        this.getContext().getModel();\n        const query = this.getQuery();\n        if (Array.isArray(attrs)) {\n            let col = null;\n            let cols = [];\n            for (let i = 0; i < attrs.length; i++) {\n                col = query.addColumn({\n                    attributeId: attrs[i],\n                    index: index\n                }, true);\n                if (col) {\n                    cols.push(col);\n                }\n            }\n            query.fireChangedEvent({\n                part: QueryChangePart.Columns,\n                action: QueryChangeAction.Add,\n                changee: cols,\n                source: this\n            });\n            return cols;\n        }\n        else {\n            const col = query.addColumn({\n                attributeId: attrs,\n                index: index\n            });\n            return col;\n        }\n    }\n    //adds one column to the panel on the specified position\n    addColumnElement(column, index) {\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const newColBlock = this.renderColumn(column);\n        if (rows.length > 0) {\n            if (index < rows.length) {\n                this.columnsBlock.insertBefore(newColBlock, rows[index]);\n            }\n            else {\n                this.columnsBlock.appendChild(newColBlock);\n                this.scrollToBottom();\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(newColBlock);\n            this.scrollToBottom();\n        }\n        if (this.options.columnRenderedCallback) {\n            this.options.columnRenderedCallback(newColBlock);\n        }\n        return newColBlock;\n    }\n    scrollToBottom() {\n        this.columnsBlock.scrollTop = this.columnsBlock.scrollHeight - this.columnsBlock.clientHeight;\n    }\n    checkColumnsArray(cols) {\n        let len = cols.length;\n        const result = [];\n        for (let i = 0; i < len; i++) {\n            if (this.checkColumn(cols[i]))\n                result.push(cols[i]);\n        }\n        return result;\n    }\n    checkColumn(col) {\n        if (!this.options.allowDuplicates) {\n            const query = this.getQuery();\n            const columns = query.getColumns();\n            for (let i = 0; i < columns.length; i++) {\n                if ((col.expr.tag === ExprTag.EntityAttribute && columns[i].expr.tag === ExprTag.EntityAttribute\n                    || col.expr.tag === ExprTag.ParentEntityAttribute && columns[i].expr.tag === ExprTag.ParentEntityAttribute)\n                    && col.expr.value === columns[i].expr.value) {\n                    return null;\n                }\n            }\n        }\n        return col;\n    }\n    getColumnsBlock() {\n        return this.columnsBlock;\n    }\n    getColumnRenderer(column, slot) {\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return new ConstColumnRendererCP(this, column, slot);\n            case ExprTag.AggregateFunction:\n                return new AggrFuncColumnRendererCP(this, column, slot);\n            case ExprTag.CustomSql:\n                return new CustomSqlColumnRendererCP(this, column, slot);\n            default:\n                return new AttrColumnRendererCP(this, column, slot);\n        }\n    }\n    areCustomExpressionsAllowed() {\n        const query = this.getQuery();\n        return query.isEx() && this.getContext().options.allowCustomExpressions;\n    }\n    addAllColumnsToEntitiesList(list) {\n        const attrIds = list.filter(item => !item.isEntity).map(item => item.id);\n        if (attrIds.length > 0) {\n            list.unshift({\n                id: '__AddAll__',\n                text: i18n.getText('AddAllForEntityText'),\n                extra: {\n                    ids: attrIds\n                }\n            });\n        }\n        list.forEach(item => {\n            if (item.items) {\n                this.addAllColumnsToEntitiesList(item.items);\n            }\n        });\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false, attrPlacement: this.options.attrPlacement, sortEntities: this.options.sortEntities });\n        // add [Add all columns] items\n        if (this.options.showAddAllForEntity) {\n            this.addAllColumnsToEntitiesList(entitiesList);\n        }\n        const options = {\n            id: menuId,\n            items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight,\n            domWriteItemsId: this.options.domWriteItemsId\n        };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    getSortMenuList() {\n        return [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' }\n        ];\n    }\n    getMoveMenuList() {\n        return [\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n    }\n    createSortMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.getSortMenuList().concat(this.moveMenu.getItems());\n        const menuOptions = {\n            id: menuId,\n            \"items\": items,\n            domWriteItemsId: this.options.domWriteItemsId,\n            showSelected: true\n        };\n        utils.assign(menuOptions, this.options.menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    createMoveMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-MoveMenu';\n        }\n        const items = utils.createArrayFrom(this.getMoveMenuList());\n        if (this.options.allowHiddenColumns) {\n            items.push({ id: '---', text: '---' });\n            items.push({ id: 'IsHidden', text: i18n.getText('CmdHiddenColumn') });\n        }\n        const menuOptions = {\n            \"items\": items,\n            id: menuId,\n            domWriteItemsId: this.options.domWriteItemsId,\n            showSelected: true\n        };\n        utils.assign(menuOptions, this.options.menuOptions);\n        this.moveMenu = new PopupMenu(menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu.showMenu(menuOptions);\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        const index = columns.indexOf(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, 0);\n                    break;\n                case 'MoveUp':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index - 1);\n                    break;\n                case 'MoveDown':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index + 1);\n                    break;\n                case 'MoveBottom':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, columns.length - 1);\n                    break;\n            }\n        }\n    }\n    moveColumnCore(index1, index2) {\n        const query = this.getQuery();\n        if (!query)\n            return;\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const colToMove = rows[index1];\n        if (index2 == 0) {\n            this.columnsBlock.insertBefore(colToMove, this.columnsBlock[0]);\n        }\n        else if (index2 > 0 && index2 < rows.length - 1) {\n            if (index1 < index2) {\n                this.columnsBlock.insertBefore(colToMove, rows[index2 + 1]);\n            }\n            else {\n                this.columnsBlock.insertBefore(colToMove, rows[index2]);\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(colToMove);\n        }\n        query.moveColumn(index1, index2);\n        query.fireColumnsChangedEvent();\n    }\n    createColumnMenus() {\n        this.createMoveMenu();\n        if (this.options.allowSorting) {\n            this.createSortMenu();\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n}\n\nclass ColumnRendererCB {\n    constructor(panel, column, slot) {\n        this.functionMenu = null;\n        this.formatsMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.tapedTwice = false;\n        this.bar = panel;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-cb';\n    }\n    render() {\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            //to remove all event listeners\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.bar.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSort\",\n                beforeDragStart: () => this.element.dispatchEvent(createBrowserEvent('mouseleave')),\n                onDragStart: (ev) => {\n                    this.hideButtons();\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    this.element.removeAttribute('style');\n                },\n                data: { column: this.column }\n            });\n        }\n        if (!this.column.isReadOnly()) {\n            this.createFunctionMenu();\n            this.createFormatsMenu();\n        }\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderCaptionBlock())\n            .addChildElement(this.renderSortingImage());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .addChildElement(this.renderButtonsBlock());\n        }\n        //start event listeners\n        builder\n            .on('mouseenter', this.onMouseEnter.bind(this))\n            .on('mouseleave', this.onMouseLeave.bind(this));\n        //end event listeners\n        if (this.bar.options.accentActiveColumn || browserUtils.isMobileMode()) {\n            builder\n                .on('touchstart click', this.onMouseClick.bind(this));\n        }\n        return this.element;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    isEditable() {\n        return this.column.enabled && !this.column.isReadOnly();\n    }\n    renderButtonsBlock() {\n        return domel('div', this.element)\n            .addClass(`${eqCssPrefix}-column-buttonsBlock`, `${this.cssPrefix}-buttonsBlock`)\n            .addChildElement(this.renderSortingButton())\n            .addChildElement(this.renderColumnTypeButton())\n            .addChildElement(this.renderColumnFormatButton())\n            .addChildElement(this.renderDeleteButton())\n            .toDOM();\n    }\n    renderCaptionBlock() {\n        const caption = this.column.caption;\n        if (!this.isEditable()) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n                .addClass(getMobileCssClass())\n                .addChild('div', b => b\n                .title(caption)\n                .text(caption)\n                .attr('tabIndex', '0'))\n                .toDOM();\n        }\n        const tapHandler = (ev) => {\n            if (!this.tapedTwice) {\n                this.tapedTwice = true;\n                setTimeout(() => { this.tapedTwice = false; }, 300);\n            }\n        };\n        let isFocused = false;\n        domel(this.element).on('touchstart dblclick', ev => {\n            if (ev instanceof TouchEvent && !this.tapedTwice) {\n                tapHandler();\n                return true;\n            }\n            ev.stopPropagation();\n            isFocused = this.element.querySelector('a') == document.activeElement;\n            const inputEl = this.element.querySelector(`.${this.cssPrefix}-captionelement input`);\n            const aEl = this.element.querySelector(`.${this.cssPrefix}-captionelement a`);\n            if (inputEl) {\n                inputEl.style.width = `${this.element.clientWidth}px`;\n                aEl.style.display = 'none';\n                inputEl.style.removeProperty('display');\n                inputEl.focus();\n                this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n            }\n            return false;\n        }); //TO DO:add localization and input field);\n        return domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(getMobileCssClass())\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .title(this.column.caption)\n            .text(caption)\n            .on('keydown', e => {\n            const evt = e;\n            const isCtrlEnter = (evt.ctrlKey || evt.metaKey) && (evt.keyCode == 13 || evt.keyCode == 10);\n            if (isCtrlEnter && this.isColumnActive()) {\n                const clickEvent = document.createEvent('MouseEvents');\n                clickEvent.initEvent('dblclick', true, true);\n                this.element.dispatchEvent(clickEvent);\n                evt.stopPropagation();\n                return false;\n            }\n            return true;\n        }))\n            .addChild('input', builder => builder\n            .hide()\n            .value(this.column.caption)\n            .on('blur keydown', (ev) => {\n            let isEndEvent = false;\n            let save = true;\n            if (ev instanceof KeyboardEvent) {\n                // Enter\n                if (ev.keyCode === 13) {\n                    isEndEvent = true;\n                    //ESC\n                }\n                else if (ev.keyCode === 27) {\n                    isEndEvent = true;\n                    save = false;\n                }\n            }\n            else if (ev instanceof FocusEvent) {\n                isEndEvent = true;\n            }\n            if (isEndEvent) {\n                const inputEl = ev.target;\n                const aEl = inputEl.parentElement.querySelector('a');\n                if (aEl) {\n                    aEl.style.removeProperty('display');\n                    inputEl.style.display = 'none';\n                }\n                if (save && this.column.caption !== inputEl.value) {\n                    this.column.caption = inputEl.value;\n                    this.fireColumnChanged();\n                }\n                else {\n                    inputEl.value = this.column.caption;\n                }\n                this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                if (isFocused) {\n                    this.element.querySelector('a').focus();\n                }\n            }\n        }))\n            .toDOM();\n    }\n    renderSortingImage() {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass = sortButtonCssClass;\n        switch (this.column.sorting) {\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n        }\n        if (this.column.sorting == SortDirection.None) {\n            return null;\n        }\n        else {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortimage-placeholder`)\n                .addClass(getMobileCssClass())\n                .addChild('div', builder => builder\n                .addClass(`${this.cssPrefix}-img-sorting`, sortButtonDirectionCssClass)\n                .title(i18n.getText('ButtonSorting')))\n                .toDOM();\n        }\n    }\n    buttonSortingClickHandler(ev, anchor) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        const menu = this.getUIS() ? this.bar.sortMenu || this.bar.moveMenu : this.bar.moveMenu;\n        menu.showMenu({\n            anchor: anchor,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const strToSortDirection = (str) => {\n                    if (str == 'None') {\n                        return SortDirection.None;\n                    }\n                    else if (str == \"Ascending\") {\n                        return SortDirection.Ascending;\n                    }\n                    else if (str == \"Descending\") {\n                        return SortDirection.Descending;\n                    }\n                };\n                if (data.id == 'None' || data.id == \"Ascending\" || data.id == \"Descending\") {\n                    const query = this.bar.getQuery();\n                    this.column.sorting = strToSortDirection(data.id);\n                    this.column._sortIndex = query.getColumnSortIndex(this.column);\n                    this.fireColumnChanged();\n                }\n                else {\n                    this.bar.moveColumn(this.column, data.id);\n                }\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.leaveButtonBlock();\n                }\n            }\n        });\n        return false;\n    }\n    renderSortingButton() {\n        if (!this.isEditable()) {\n            return null;\n        }\n        const builder = domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-sortbutton`, `${eqCssPrefix}-column-sortbutton-none`)\n            .title(i18n.getText('ButtonSorting'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonSortingClickHandler(ev, builder.toDOM()))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } });\n        return builder.toDOM();\n    }\n    buttonDeleteClickHandler(ev) {\n        ev.stopPropagation();\n        const query = this.bar.getQuery();\n        query.removeColumn(this.column);\n        query.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column);\n        return false;\n    }\n    renderDeleteButton() {\n        if (this.column.isReadOnly()) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-delete`)\n            .title(i18n.getText('CmdDelete'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonDeleteClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    getClassesToAdd() {\n        let result = \"\";\n        result += this.column.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.column.enabled) {\n            result += this.column.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        return result;\n    }\n    buttonTypeClickHandler(ev) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        this.changeColumnTypeHandler(ev);\n        return false;\n    }\n    buttonFormatClickHandler(ev) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        this.changeFormatHandler(ev);\n        return false;\n    }\n    formatButtonIsShown() {\n        return this.bar.options.allowDisplayFormatChange !== false &&\n            this.bar\n                .getContext()\n                .getModel()\n                .getDisplayFormatsForType(this.column.getDataType()).length > 0;\n    }\n    changeFormatHandler(ev) {\n        const formats = this.bar\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let itemId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            itemId = this.column.displayFormat;\n        }\n        this.formatsMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: itemId,\n            itemSelectedCallback: (data, items) => {\n                if (data.id != itemId) {\n                    if (data.id == '{0:__default}') {\n                        this.column.displayFormat = '';\n                    }\n                    else {\n                        this.column.displayFormat = data.id;\n                    }\n                    this.column.fireChangedEvent();\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    renderColumnTypeButton() {\n        if (!this.isEditable() || this.bar.options.allowAggrColumns === false) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-type`)\n            .title(i18n.getText('ButtonToAggr'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonTypeClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderColumnFormatButton() {\n        if (!this.isEditable() || !this.formatButtonIsShown()) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-format`)\n            .title(i18n.getText('ButtonFormat'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonFormatClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    getUIS() {\n        return this.bar\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n    onMouseClick(ev) {\n        this.bar.toggleColumnPicked(this.column);\n        this.adjustButtonsVisibility();\n    }\n    onMouseEnter(e) {\n        if (browserUtils.isMobileMode())\n            return;\n        this.isMouseOverBlock = true;\n        this.enterButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    onMouseLeave(e) {\n        if (browserUtils.isMobileMode())\n            return;\n        this.isMouseOverBlock = false;\n        this.leaveButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    isColumnActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        if (browserUtils.isMobileMode()) {\n            if (this.onHideButtonsMobile) {\n                this.onHideButtonsMobile();\n            }\n        }\n        else {\n            domel(this.element).data(\"show-buttons\", null);\n        }\n    }\n    showButtons() {\n        if (browserUtils.isMobileMode()) {\n            if (this.onShowButtonsMobile) {\n                this.onShowButtonsMobile();\n            }\n        }\n        else {\n            domel(this.element).data(\"show-buttons\", \"\");\n        }\n    }\n    adjustButtonsVisibility() {\n        if (this.bar.options.alwaysShowButtons\n            || ((this.bar.options.accentActiveColumn || browserUtils.isMobileMode())\n                && this.isColumnActive())) {\n            this.showButtons();\n        }\n        else {\n            this.hideButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (this.bar.options.alwaysShowButtons != true && (!this.isColumnActive() || this.bar.options.accentActiveColumn != true)) {\n            this.hideButtons();\n        }\n    }\n    createFunctionMenu() {\n        const items = [];\n        const funcs = this.bar.getContext().getModel().getAggrFunctions();\n        let funcAllowed = true;\n        let item = null;\n        const colDataType = this.column.getDataType();\n        let funcCaption;\n        for (const func of funcs) {\n            if (!func)\n                continue;\n            const toInclude = func.getAppliedTypesOrDefault().indexOf(colDataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.bar.getContext().getModel()\n                    .getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        if (!funcAllowed) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.bar;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.element.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n    createFormatsMenu() {\n        if (this.bar.options.allowDisplayFormatChange == false)\n            return;\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FormatsMenu';\n        }\n        const items = this.getFormatsMenuItems();\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            showSelected: true,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.formatsMenu = new PopupMenu(menuOptions);\n    }\n    getFormatsMenuItems() {\n        const formats = this.bar.getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        return [{ id: '{0:__default}', text: \"Default\" }]\n            .concat(formats.map(format => ({ id: format.format, text: i18n.getText(\"DisplayFormats\", format.name) || format.name })));\n    }\n}\n\nclass AttrColumnRendererCB extends ColumnRendererCB {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    baseExpressionItemSelectedCallback(data, item) {\n        const attrid = data.id;\n        const context = this.bar.getContext();\n        var attr = context.getModel().getAttributeById(attrid);\n        this.updateBaseAttr(attr);\n        this.column.caption = context.getDefaultColumnCaption(this.column);\n        this.fireColumnChanged();\n        return false;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n        this.column.expr.dataType = attr.dataType;\n    }\n    getUIS() {\n        const arg = this.column.expr.args[0];\n        if (arg) {\n            const model = this.bar.getContext().getModel();\n            return model.checkAttrProperty(arg.value, \"useInSorting\");\n        }\n        else {\n            return true;\n        }\n    }\n    changeTypeToCustomSql() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.CustomSql);\n        this.fireColumnChanged();\n    }\n    changeTypeToAggr(funcId) {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.AggregateFunction, { funcId: funcId });\n        this.fireColumnChanged();\n    }\n    changeColumnTypeHandler(ev) {\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                if (data.id == \"CUSTOMSQL\") {\n                    this.changeTypeToCustomSql();\n                }\n                else {\n                    this.changeTypeToAggr(data.id);\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n}\n\nclass AggrFuncColumnRendererCB extends AttrColumnRendererCB {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-aggr`;\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.classList.add('aggregated');\n            button.title = i18n.getText('ButtonToSimple');\n        }\n        return button;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.args[0].setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    changeColumnTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n}\n\nclass EditableColumnRendererCB extends ColumnRendererCB {\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr` + super.getClassesToAdd();\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.classList.add('aggregated');\n            button.title = i18n$1.getText('ButtonToSimple');\n        }\n        return button;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    getColumnValue() {\n        return '';\n    }\n    setColumnValue(value) {\n    }\n    getUIS() {\n        return true;\n    }\n    changeColumnTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n}\nclass CustomSqlColumnRendererCB extends EditableColumnRendererCB {\n    get columnEnabled() {\n        return this.bar.areCustomExpressionsAllowed() ? this.column.enabled : false;\n    }\n    set columnEnabled(value) {\n        if (this.bar.areCustomExpressionsAllowed()) {\n            this.column.enabled = value;\n        }\n        else {\n            this.column.enabled = false;\n        }\n    }\n    getColumnValue() {\n        return this.column.expr.sql;\n    }\n    setColumnValue(value) {\n        this.column.expr.sql = value;\n    }\n    getDefaultValue() {\n        return this.column.expr.sql;\n    }\n}\nclass ConstColumnRendererCB extends EditableColumnRendererCB {\n    getColumnValue() {\n        return this.column.expr.value;\n    }\n    setColumnValue(value) {\n        this.column.expr.setValue(value);\n    }\n    getDefaultValue() {\n        return this.column.expr.value;\n    }\n}\n\nclass ColumnsBar extends Widget {\n    get cssPrefix() {\n        return \"eqjs-cb\";\n    }\n    constructor(slot, customQuery) {\n        super(slot);\n        this.options = {\n            isSubQuery: false,\n            activeColumn: null,\n            showAddRow: true,\n            showHeader: true,\n            showColumnTitles: true,\n            allowAggrColumns: true,\n            allowDuplicates: true,\n            allowCustomExpressions: false,\n            allowSorting: true,\n            alwaysShowButtons: false,\n            accentActiveColumn: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n            attrPlacement: 0,\n            sortEntities: false,\n            columnRenderedCallback: null,\n            customExpressionText: 0,\n            showAddAllForEntity: false\n        };\n        this.landingSlot = domel('div')\n            .addClass(`${eqCssPrefix}-highlight`)\n            .toDOM();\n        this.landingIndex = -1;\n        this.sortMenuList = [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' }\n        ];\n        this.moveMenuList = [\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-panel`)\n            .addClass(getMobileCssClass());\n        this.group = WidgetGroup.Query;\n        this.customQuery = customQuery;\n    }\n    getWidgetType() {\n        return 'columnsBar';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttrSort\"],\n                onDragEnter: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (this.landingIndex >= 0) {\n                        const query = this.getQuery();\n                        const columns = query.getColumns();\n                        const index = columns.indexOf(ev.data.column);\n                        this.moveColumnCore(index, this.landingIndex);\n                    }\n                    else {\n                        ev.item.element.removeAttribute('style');\n                    }\n                }\n            });\n        }\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Columns\n                && edata.part != QueryChangePart.Aggregation\n                && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const columns = edata.changee;\n                    const modifyColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const newEl = this.renderColumn(column, colEl);\n                            if (isFocusInside) {\n                                const focusElem = newEl.querySelector('a');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => modifyColumn(col));\n                    }\n                    else {\n                        modifyColumn(columns);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const columns = edata.changee;\n                    const addColumn = (column) => {\n                        const index = query.getColumns().indexOf(column);\n                        this.addColumnElement(column, index);\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => addColumn(col));\n                    }\n                    else {\n                        addColumn(columns);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const columns = edata.changee;\n                    const deleteColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const next = colEl.nextSibling;\n                            const prev = colEl.previousSibling;\n                            this.columnsBlock.removeChild(colEl);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || this.addRowButton;\n                                const focusElem = focusCond.querySelector('a');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => deleteColumn(col));\n                    }\n                    else {\n                        deleteColumn(columns);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    getQuery() {\n        return this.customQuery\n            ? this.customQuery\n            : this.getContext().getQuery();\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    setOptions(options) {\n        this.options = utils.assignDeep(this.options, options);\n        this.getContext().options.allowCustomExpressions = options.allowCustomExpressions;\n    }\n    showLandingSlot(pageX, pageY) {\n        const elements = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const columnSlots = [];\n        for (let i = 0; i < elements.length; i++) {\n            if (elements[i].style.display !== 'none') {\n                columnSlots.push(elements[i]);\n            }\n        }\n        if (columnSlots.length === 0) {\n            this.landingIndex = 0;\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth\n            && pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let i = 0; i < columnSlots.length; i++) {\n            const colSlot = columnSlots[i];\n            const absPos = getElementAbsolutePos(colSlot);\n            const colWidth = colSlot.offsetWidth;\n            const colHeight = colSlot.offsetHeight;\n            const paddingWidth = 0.2 * colWidth;\n            const paddingHeight = 2;\n            if (pageX >= absPos.x + paddingWidth && pageX <= absPos.x + colWidth - paddingWidth\n                && pageY >= absPos.y + paddingHeight && pageY <= absPos.y + colHeight - paddingHeight) {\n                if (pageX > landingPos.x)\n                    newLandingIndex = i + 1;\n                else\n                    newLandingIndex = i;\n                break;\n            }\n        }\n        if (newLandingIndex != this.landingIndex || this.landingSlot.parentElement) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex <= 0) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[0]);\n            }\n            if (this.landingIndex < columnSlots.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n    onProcessStartCore() {\n    }\n    onProcessEndCore() {\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        // if (this.addRowButton) {\n        //     this.addRowButton.innerHTML = \"\";\n        //     this.addRowButton.className = \"\";\n        // }\n        // this.columnsBlock.innerHTML = \"\";\n        this.slot.innerHTML = '';\n    }\n    renderAddRowButton() {\n        domel(this.addRowButton)\n            .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n            .addClass(getMobileCssClass())\n            .title(i18n.getText('CmdClickToAddColumn'))\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            e.preventDefault();\n            this.showEntitiesMenu({\n                anchor: e.target,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    if (data.id === '__AddAll__' && data.extra && Array.isArray(data.extra.ids)) {\n                        data.extra.ids.forEach(attrId => this.addNewColumn(attrId));\n                    }\n                    else {\n                        const attrid = data.id;\n                        this.addNewColumn(attrid);\n                    }\n                    return false;\n                }\n            });\n        }));\n        if (browserUtils.isMobileMode()) {\n            domel(this.columnsBlock)\n                .addChildElement(this.addRowButton);\n        }\n    }\n    render() {\n        this.createEntitiesMenu();\n        if (this.options.allowSorting) {\n            this.createSortMenu();\n        }\n        this.createMoveMenu();\n        this.columnsBlock =\n            domel('div')\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowButton =\n                domel('div')\n                    .toDOM();\n            if (browserUtils.isMobileMode()) {\n                domel(this.columnsBlock)\n                    .addChildElement(this.addRowButton);\n            }\n            else {\n                domel(this.slot)\n                    .addChildElement(this.addRowButton);\n            }\n            this.renderAddRowButton();\n        }\n        domel(this.slot)\n            .addChildElement(this.columnsBlock)\n            .addChildElement(this.renderColumnButtonsBlockMobile());\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        columns.forEach((column, index) => {\n            const slot = this.renderColumn(column);\n            this.columnsBlock.appendChild(slot);\n        });\n    }\n    renderColumnButtonsBlockMobile() {\n        this.columnButtonsBlockMobileArrow = domel('i').toDOM();\n        this.columnButtonsBlockMobile = domel('div')\n            .addClass(`${this.cssPrefix}-column-buttonsBlock`)\n            .addClass(getMobileCssClass())\n            .addChildElement(this.columnButtonsBlockMobileArrow)\n            .hide()\n            .toDOM();\n        this.buttonsBlockSortingButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-sortbutton-none`)\n            .toDOM();\n        domel(this.buttonsBlockSortingButton)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonSortingClickHandler.call(this.currentColumnRenderer, ev, this.buttonsBlockSortingButton);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        });\n        this.buttonsBlockTypeButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-type`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonTypeClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        this.buttonsBlockFormatButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-format`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonFormatClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        this.buttonsBlockDeleteButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-delete`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonDeleteClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button-close-block`)\n            .on('touchstart click', () => {\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n        });\n        return this.columnButtonsBlockMobile;\n    }\n    showColumnButtonsMobile(column, columnRenderer, columnElement) {\n        this.currentActiveColumn = column;\n        this.currentColumnRenderer = columnRenderer;\n        //calculate coordinates\n        const rect = columnElement.getBoundingClientRect();\n        const top = columnElement.offsetTop;\n        const left = columnElement.offsetLeft;\n        domel(this.columnButtonsBlockMobileArrow)\n            .setStyle('left', (left + rect.width / 2).toString() + 'px');\n        if (rect.top > 100) {\n            domel(this.columnButtonsBlockMobile)\n                .removeClass('show-below')\n                .setStyle('top', (top - rect.height).toString() + 'px');\n        }\n        else {\n            domel(this.columnButtonsBlockMobile)\n                .addClass('show-below')\n                .setStyle('top', (top + rect.height).toString() + 'px');\n        }\n        //show/hide separate buttons\n        if (column.enabled && !column.isReadOnly()) {\n            domel(this.buttonsBlockSortingButton).show();\n            domel(this.buttonsBlockTypeButton).show();\n            if (columnRenderer.formatButtonIsShown()) {\n                domel(this.buttonsBlockFormatButton).show();\n            }\n            else {\n                domel(this.buttonsBlockFormatButton).hide();\n            }\n        }\n        else {\n            domel(this.buttonsBlockSortingButton).hide();\n            domel(this.buttonsBlockTypeButton).hide();\n        }\n        //show\n        if (column.isReadOnly()) {\n            domel(this.columnButtonsBlockMobile).hide();\n        }\n        else {\n            domel(this.columnButtonsBlockMobile).show();\n        }\n    }\n    hideColumnButtonsMobile() {\n        domel(this.columnButtonsBlockMobile).hide();\n    }\n    renderColumn(column, elem) {\n        const renderer = this.getColumnRenderer(column, elem);\n        if (renderer) {\n            const columnSlot = renderer.render();\n            renderer.onShowButtonsMobile = () => {\n                this.showColumnButtonsMobile(column, renderer, columnSlot);\n            };\n            renderer.onHideButtonsMobile = () => {\n                this.hideColumnButtonsMobile();\n            };\n            return columnSlot;\n        }\n        return null;\n    }\n    getColumnRenderer(column, slot) {\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return new ConstColumnRendererCB(this, column, slot);\n            case ExprTag.AggregateFunction:\n                return new AggrFuncColumnRendererCB(this, column, slot);\n            case ExprTag.CustomSql:\n                return new CustomSqlColumnRendererCB(this, column, slot);\n            default:\n                return new AttrColumnRendererCB(this, column, slot);\n        }\n    }\n    addNewColumn(attrs, index) {\n        this.getContext().getModel();\n        const query = this.getQuery();\n        if (Array.isArray(attrs)) {\n            let col = null;\n            let cols = [];\n            for (let i = 0; i < attrs.length; i++) {\n                col = query.addColumn({\n                    attributeId: attrs[i],\n                    index: index\n                }, true);\n                if (col) {\n                    cols.push(col);\n                }\n            }\n            return cols;\n        }\n        else {\n            const col = query.addColumn({\n                attributeId: attrs,\n                index: index\n            });\n            return col;\n        }\n    }\n    toggleColumnPicked(column) {\n        let el;\n        let isActive;\n        if (column) {\n            el = this.columnsBlock.querySelector(`div[data-id=${column.id}]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.columnsBlock.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            domel(row)\n                .removeClass('active')\n                .data(\"show-buttons\", null);\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    //adds one column to the bar on the specified position\n    addColumnElement(column, index) {\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const newColBlock = this.renderColumn(column);\n        if (rows.length > 0) {\n            if (index < rows.length - 1) {\n                this.columnsBlock.insertBefore(newColBlock, rows[index]);\n            }\n            else {\n                this.columnsBlock.appendChild(newColBlock);\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(newColBlock);\n        }\n        if (this.options.columnRenderedCallback) {\n            this.options.columnRenderedCallback(newColBlock);\n        }\n    }\n    checkColumnsArray(cols) {\n        let len = cols.length;\n        const result = [];\n        for (let i = 0; i < len; i++) {\n            if (this.checkColumn(cols[i]))\n                result.push(cols[i]);\n        }\n        return result;\n    }\n    checkColumn(col) {\n        if (!this.options.allowDuplicates) {\n            const query = this.getQuery();\n            const columns = query.getColumns();\n            const colJson = JSON.stringify(col.expr);\n            for (let i = 0; i < columns.length; i++) {\n                const qcolJson = JSON.stringify(columns[i].expr);\n                if (qcolJson === colJson) {\n                    return null;\n                }\n            }\n        }\n        return col;\n    }\n    getColumnsBlock() {\n        return this.columnsBlock;\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu && this.entitiesMenu.showMenu(menuOptions);\n    }\n    addAllColumnsToEntitiesList(list) {\n        const attrIds = list.filter(item => !item.isEntity).map(item => item.id);\n        if (attrIds.length > 0) {\n            list.unshift({\n                id: '__AddAll__',\n                text: i18n.getText('AddAllForEntityText'),\n                extra: {\n                    ids: attrIds\n                }\n            });\n        }\n        list.forEach(item => {\n            if (item.items) {\n                this.addAllColumnsToEntitiesList(item.items);\n            }\n        });\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false, attrPlacement: this.options.attrPlacement, sortEntities: this.options.sortEntities });\n        // add [Add all columns] items\n        if (this.options.showAddAllForEntity) {\n            this.addAllColumnsToEntitiesList(entitiesList);\n        }\n        const options = { items: entitiesList, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    createSortMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.sortMenuList.concat(this.moveMenuList);\n        const menuOptions = { \"items\": items, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(menuOptions, this.options.menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    createMoveMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-MoveMenu';\n        }\n        const items = this.moveMenuList;\n        const menuOptions = { \"items\": items, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(menuOptions, this.options.menuOptions);\n        this.moveMenu = new PopupMenu(menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        const index = columns.indexOf(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, 0);\n                    break;\n                case 'MoveUp':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index - 1);\n                    break;\n                case 'MoveDown':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index + 1);\n                    break;\n                case 'MoveBottom':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, columns.length - 1);\n                    break;\n            }\n        }\n    }\n    moveColumnCore(index1, index2) {\n        const query = this.getQuery();\n        if (!query)\n            return;\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const colToMove = rows[index1];\n        if (index2 <= 0) {\n            this.columnsBlock.insertBefore(colToMove, this.columnsBlock[0]);\n        }\n        else if (index2 < rows.length) {\n            this.columnsBlock.insertBefore(colToMove, rows[index2]);\n        }\n        else {\n            this.columnsBlock.appendChild(colToMove);\n        }\n        query.moveColumn(index1, index2);\n        query.fireColumnsChangedEvent(QueryChangeAction.All);\n    }\n    areCustomExpressionsAllowed() {\n        const query = this.getQuery();\n        return query.isEx() && this.getContext().options.allowCustomExpressions;\n    }\n}\nColumnsBar.globalCounter = 0;\n\nclass ColumnRendererSB {\n    constructor(bar, column, slot) {\n        this.functionMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.bar = bar;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-sb';\n    }\n    render() {\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            //to remove all event listeners\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.bar.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSortSB\",\n                beforeDragStart: () => this.element.dispatchEvent(createBrowserEvent('mouseleave')),\n                onDragStart: (ev) => {\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    this.element.removeAttribute('style');\n                },\n                data: { column: this.column }\n            });\n        }\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderCaptionBlock());\n        if (this.isEditable()) {\n            builder\n                .addChildElement(this.renderSortingButton());\n        }\n        return this.element;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    getAttribute() {\n        const model = this.bar.getContext().getModel();\n        return model.getAttributeById(this.column.expr.value);\n    }\n    isEditable() {\n        return this.column.enabled && !this.column.isReadOnly();\n    }\n    renderCaptionBlock() {\n        function getArrow(sd) {\n            switch (sd) {\n                case SortDirection.Ascending:\n                    return ' ↑';\n                case SortDirection.Descending:\n                    return ' ↓';\n                default:\n                    return '';\n            }\n        }\n        let text = this.column.caption;\n        if (!this.isEditable()) {\n            text += getArrow(this.column.sorting);\n        }\n        return domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(getMobileCssClass())\n            .addChild('div', b => b\n            .title(this.column.caption)\n            .text(text))\n            .toDOM();\n    }\n    renderSortingButton() {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass = sortButtonCssClass;\n        switch (this.column.sorting) {\n            case SortDirection.None:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-none`;\n                break;\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n        }\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortimage-placeholder`)\n            .addClass(getMobileCssClass())\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-img-sorting`, sortButtonDirectionCssClass)\n            .title(i18n.getText('ButtonSorting')))\n            .on('touchstart click', (ev) => this.buttonSortingClickHandler(ev, builder.toDOM()));\n        return builder.toDOM();\n    }\n    buttonSortingClickHandler(ev, anchor) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        const menu = this.bar.sortMenu;\n        menu.showMenu({\n            anchor: anchor,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const strToSortDirection = (str) => {\n                    if (str == 'None') {\n                        return SortDirection.None;\n                    }\n                    else if (str == \"Ascending\") {\n                        return SortDirection.Ascending;\n                    }\n                    else if (str == \"Descending\") {\n                        return SortDirection.Descending;\n                    }\n                };\n                if (data.id == 'None' || data.id == \"Ascending\" || data.id == \"Descending\") {\n                    const query = this.bar.getContext().getQuery();\n                    if (this.column.isJustSorted() && data.id == 'None') {\n                        query.removeColumn(this.column);\n                        query.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column, true);\n                    }\n                    else {\n                        this.column.sorting = strToSortDirection(data.id);\n                        this.column._sortIndex = query.getColumnSortIndex(this.column);\n                        this.fireColumnChanged();\n                    }\n                }\n                else {\n                    this.bar.moveColumn(this.column, data.id);\n                }\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n            }\n        });\n        return false;\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    getUIS() {\n        return this.bar\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n}\n\nclass SortingBar extends Widget {\n    get cssPrefix() {\n        return \"eqjs-sb\";\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            showAddRow: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n        };\n        this.sortMenuList = [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' },\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n        this.landingSlot = domel('div')\n            .addClass(`${eqCssPrefix}-highlight`)\n            .toDOM();\n        this.landingIndex = -1;\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-panel`)\n            .addClass(getMobileCssClass());\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'sortingBar';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        this.destroyCore();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttrSortSB\"],\n                onDragEnter: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (this.landingIndex >= 0) {\n                        const query = this.getQuery();\n                        query.setColumnSortIndex(ev.data.column, this.landingIndex);\n                        query.fireColumnsChangedEvent(QueryChangeAction.All);\n                    }\n                    else {\n                        ev.item.element.removeAttribute('style');\n                    }\n                }\n            });\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.SortingColumns\n                && edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            this.refresh();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    getModel() {\n        return this.getContext().getModel();\n    }\n    destroyCore() {\n        this.detachQueryObserver();\n        this.clear();\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    renderAddRowButton() {\n        domel(this.addRowButton)\n            .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n            .addClass(getMobileCssClass())\n            .title(i18n.getText('CmdClickToAddColumn'))\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            e.preventDefault();\n            this.showEntitiesMenu({\n                anchor: e.target,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrid = data.id;\n                    this.addNewColumn(attrid);\n                    return false;\n                }\n            });\n        }));\n        if (browserUtils.isMobileMode()) {\n            domel(this.columnsBlock)\n                .addChildElement(this.addRowButton);\n        }\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu.showMenu(menuOptions);\n    }\n    createEntitiesMenu() {\n        const model = this.getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: false, addUIS: true });\n        const options = { items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    createSortMenu() {\n        const model = this.getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.sortMenuList;\n        const menuOptions = { \"items\": items, id: menuId };\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    render() {\n        this.createEntitiesMenu();\n        this.createSortMenu();\n        this.columnsBlock =\n            domel('div')\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowButton =\n                domel('div')\n                    .toDOM();\n            if (browserUtils.isMobileMode()) {\n                domel(this.columnsBlock)\n                    .addChildElement(this.addRowButton);\n            }\n            else {\n                domel(this.slot)\n                    .addChildElement(this.addRowButton);\n            }\n            this.renderAddRowButton();\n        }\n        domel(this.slot)\n            .addChildElement(this.columnsBlock);\n        const query = this.getQuery();\n        const columns = query.getSortedColumns(); // .getColumns().concat(query.getJustSortedColumns());\n        columns.forEach((column, index) => {\n            const slot = this.renderColumn(column);\n            this.columnsBlock.appendChild(slot);\n        });\n    }\n    addNewColumn(attrId) {\n        this.getModel();\n        const query = this.getQuery();\n        const col = query.addColumn({\n            attributeId: attrId,\n            justsorted: true,\n            sorting: SortDirection.Ascending\n        }, true);\n        query.fireChangedEvent({\n            part: QueryChangePart.SortingColumns,\n            action: QueryChangeAction.Add,\n            changee: col,\n            source: this\n        });\n        return col;\n    }\n    renderColumn(column, elem) {\n        const renderer = new ColumnRendererSB(this, column, elem);\n        if (renderer) {\n            const columnSlot = renderer.render();\n            return columnSlot;\n        }\n        return null;\n    }\n    clear() {\n        this.slot.innerHTML = '';\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getSortedColumns();\n        const index = query.getColumnSortIndex(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    query.setColumnSortIndex(column, 0);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveUp':\n                    query.setColumnSortIndex(column, index > 0 ? index - 1 : 0);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveDown':\n                    query.setColumnSortIndex(column, index < columns.length - 1 ? index + 1 : columns.length - 1);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveBottom':\n                    query.setColumnSortIndex(column, columns.length - 1);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n            }\n        }\n    }\n    showLandingSlot(pageX, pageY) {\n        const elements = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const columnSlots = [];\n        for (let i = 0; i < elements.length; i++) {\n            if (elements[i].style.display !== 'none') {\n                columnSlots.push(elements[i]);\n            }\n        }\n        if (columnSlots.length === 0) {\n            this.landingIndex = 0;\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth\n            && pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let i = 0; i < columnSlots.length; i++) {\n            const colSlot = columnSlots[i];\n            const absPos = getElementAbsolutePos(colSlot);\n            const colWidth = colSlot.offsetWidth;\n            const colHeight = colSlot.offsetHeight;\n            const paddingWidth = 0.2 * colWidth;\n            const paddingHeight = 2;\n            if (pageX >= absPos.x + paddingWidth && pageX <= absPos.x + colWidth - paddingWidth\n                && pageY >= absPos.y + paddingHeight && pageY <= absPos.y + colHeight - paddingHeight) {\n                if (pageX > landingPos.x)\n                    newLandingIndex = i + 1;\n                else\n                    newLandingIndex = i;\n                break;\n            }\n        }\n        if (newLandingIndex != this.landingIndex || this.landingSlot.parentElement) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex <= 0) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[0]);\n            }\n            if (this.landingIndex < columnSlots.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n}\n\n/**\n * Represents parts of Query Panel which can be editable\n */\nvar QPEditablePart;\n(function (QPEditablePart) {\n    QPEditablePart[QPEditablePart[\"None\"] = 0] = \"None\";\n    QPEditablePart[QPEditablePart[\"Value\"] = 1] = \"Value\";\n    QPEditablePart[QPEditablePart[\"Attribute\"] = 2] = \"Attribute\";\n    QPEditablePart[QPEditablePart[\"Operator\"] = 4] = \"Operator\";\n    QPEditablePart[QPEditablePart[\"Addition\"] = 8] = \"Addition\";\n    QPEditablePart[QPEditablePart[\"Removal\"] = 16] = \"Removal\";\n    QPEditablePart[QPEditablePart[\"All\"] = 255] = \"All\";\n    QPEditablePart[QPEditablePart[\"NoAddition\"] = -9] = \"NoAddition\";\n    QPEditablePart[QPEditablePart[\"NoRemoval\"] = -17] = \"NoRemoval\";\n    QPEditablePart[QPEditablePart[\"FixedConditionList\"] = 5] = \"FixedConditionList\";\n})(QPEditablePart || (QPEditablePart = {}));\n\nclass TextRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, text, slot) {\n        this.panel = panel;\n        this.text = text;\n        this.element = slot || domel('div').toDOM();\n    }\n    refresh() {\n        this.render();\n    }\n    render() {\n        domel(this.element)\n            .html('')\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChild('span', builder => builder\n            .text(this.text)\n            .title(this.text))\n            .toDOM();\n        return this.element;\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement`;\n    }\n}\n\nvar ConditionAction;\n(function (ConditionAction) {\n    ConditionAction[ConditionAction[\"AddCondition\"] = 0] = \"AddCondition\";\n    ConditionAction[ConditionAction[\"AddGroup\"] = 1] = \"AddGroup\";\n    ConditionAction[ConditionAction[\"Enable\"] = 2] = \"Enable\";\n    ConditionAction[ConditionAction[\"Delete\"] = 4] = \"Delete\";\n    ConditionAction[ConditionAction[\"Menu\"] = 5] = \"Menu\";\n    ConditionAction[ConditionAction[\"Parameterized\"] = 6] = \"Parameterized\";\n    ConditionAction[ConditionAction[\"InJoin\"] = 7] = \"InJoin\";\n})(ConditionAction || (ConditionAction = {}));\nclass ConditionRenderer {\n    constructor(panel, condition, slot) {\n        this.panel = panel;\n        this.condition = condition;\n        this.element = slot || domel('div').toDOM();\n    }\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    refresh() {\n        this.render();\n    }\n    clear() {\n        if (this.element) {\n            this.element.className = '';\n            this.element.removeAttribute('data-id');\n            this.element.removeAttribute('style');\n            domel(this.element)\n                .html('');\n        }\n    }\n    render(autoAppear) {\n        this.clear();\n        //this.preRender();\n        this.coreRender(autoAppear);\n        if (this.panel.options.onConditionRendered) {\n            this.panel.options.onConditionRendered(this.condition, this.element);\n        }\n        return this.element;\n    }\n    isEditable() {\n        return this.condition.enabled && !this.condition.isReadOnly();\n    }\n}\nclass SimpleConditionRenderer extends ConditionRenderer {\n    getClassesToAdd() {\n        let result = `${this.cssPrefix}-row ${this.cssPrefix}-row-condition`;\n        result += this.condition.isInJoin() ? ` ${this.cssPrefix}-condition-injoin` : '';\n        result += this.condition.isParameterized() ? ` ${this.cssPrefix}-condition-parameterized` : '';\n        if (!browserUtils.isMobileMode()) {\n            const level = this.condition.getLevel();\n            if (level > 0)\n                result += ` ${this.cssPrefix}-level-${level}`;\n        }\n        result += this.condition.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.condition.enabled) {\n            result += this.condition.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        const model = this.panel.getContext().getModel();\n        const operator = model.getOperatorById(this.condition.getOperatorId());\n        const arrFormat = equtils.parseOperatorFormat(operator);\n        let item = null;\n        const arrLength = arrFormat.length;\n        const builder = domel('div');\n        if (this.element && this.element.parentNode) {\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .data('id', this.condition.id)\n            .data('condrow', '')\n            .addChildElement(this.renderCheckbox())\n            .addChildElement(this.renderConjunction());\n        let mayAppear = autoAppear;\n        const minLength = operator == model.nullOperator\n            ? Math.min(arrLength, this.condition.expressions.length + 1)\n            : arrLength;\n        for (let idx = 0; idx < minLength; idx++) {\n            item = arrFormat[idx];\n            if (item.type === 'operator') {\n                const renderer = this.panel.getOperatorRenderer(this.condition, item.text);\n                if (renderer) {\n                    builder.addChildElement(renderer.render());\n                }\n            }\n            else if (item.type === 'expression') {\n                const toAppear = mayAppear && (item.index > 0);\n                const exprRenderer = this.panel.getExpressionRenderer(this.condition.expressions[item.index]);\n                if (exprRenderer) {\n                    const el = exprRenderer.render(toAppear);\n                    builder.addChildElement(el);\n                    setTimeout(() => {\n                        exprRenderer.adjustWidth();\n                    }, 100);\n                }\n                mayAppear = mayAppear && !toAppear;\n            }\n            else if (item.type === 'text') {\n                builder.addChildElement(new TextRenderer(this.panel, item.text).render());\n            }\n        }\n        if (this.panel.options.accentActiveCondition || browserUtils.isMobileMode()) {\n            builder.on('click', ev => {\n                ev.stopPropagation();\n                this.panel.toggleConditionPicked(this.condition);\n                this.adjustButtonsVisibility();\n                if (!browserUtils.isMobileMode()) {\n                    this.element.dispatchEvent(createBrowserEvent(\"mouseenter\"));\n                }\n                return false;\n            });\n        }\n        builder\n            .addChildElement(this.renderButtonsBlock());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .on('mouseenter', event => {\n                this.isMouseOverBlock = true;\n                this.enterButtonBlock();\n                event.stopPropagation();\n                return false;\n            })\n                .on('mouseleave', event => {\n                this.isMouseOverBlock = false;\n                if (!this.keepShowingButtons && domel(this.buttonsBlock).isVisible()) {\n                    this.leaveButtonBlock();\n                }\n                event.stopPropagation();\n                return false;\n            });\n        }\n    }\n    setConditionParameterized(value) {\n        this.condition.setParameterized(value);\n        this.condition.fireChangedEvent();\n    }\n    setConditionInJoin(value) {\n        this.condition.setInJoin(value);\n        this.condition.fireChangedEvent();\n    }\n    getConditionMenu() {\n        return this.panel.getConditionMenu();\n    }\n    renderConjunction() {\n        const parent = this.condition.getParent();\n        if (!parent)\n            return null;\n        const isFirstConditionInGroup = utils.findItemIndexById(parent.getConditions(), this.condition.id) == 0;\n        if (this.panel.options.showConjunctions && !isFirstConditionInGroup) {\n            const linkTypeStr = equtils.linkTypeToStr(this.condition.getParent().linkType);\n            const conjuctionText = i18n.getText(\"Conj\" + linkTypeStr);\n            return domel(\"span\")\n                .text(conjuctionText)\n                .title(conjuctionText)\n                .addClass(`${this.cssPrefix}-condelement ${this.cssPrefix}-condition-conjuction`)\n                .toDOM();\n        }\n        return null;\n    }\n    renderCheckbox() {\n        if (this.panel.options.showCheckboxes && !this.condition.isReadOnly()) {\n            return domel(\"div\")\n                .title(i18n.getText('CmdToggleEnable'))\n                .attr('tabIndex', '0')\n                .addClass(`${this.cssPrefix}-condelement ${this.cssPrefix}-condition-checkbox`)\n                .addClass(`${this.condition.enabled ? 'enabled' : ''}`)\n                .on('click', () => {\n                this.condition.enabled = !this.condition.enabled;\n                this.condition.fireChangedEvent();\n                return false;\n            })\n                .on('keypress', evt => { if ([13, 32].includes(evt.keyCode)) {\n                evt.target.click();\n            } })\n                .toDOM();\n        }\n        else {\n            return null;\n        }\n    }\n    isConditionActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        domel(this.element).data(\"show-buttons\", null);\n    }\n    showButtons() {\n        domel(this.element).data(\"show-buttons\", \"\");\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtonsInConditions\n            || (this.panel.options.accentActiveCondition && this.isConditionActive())) {\n            this.showButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (!this.panel.options.alwaysShowButtonsInConditions\n            && (!this.isConditionActive() || !this.panel.options.accentActiveCondition)) {\n            this.hideButtons();\n        }\n    }\n    conditionMenuHandler(action, evt) {\n        switch (action) {\n            case ConditionAction.AddCondition:\n                if (!this.condition.isGroup())\n                    return;\n                const entMenu = this.panel.getEntitiesMenu();\n                if (entMenu) {\n                    entMenu.showMenu({\n                        anchor: evt.target,\n                        itemSelectedCallback: item => {\n                            const query = this.panel.getQuery();\n                            const descr = {\n                                parent: this.condition,\n                                attributeId: item.id\n                            };\n                            const cond = query.addSimpleCondition(descr);\n                            if (cond) {\n                                query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                            }\n                            return false;\n                        }\n                    });\n                }\n                break;\n            case ConditionAction.AddGroup:\n                if (!this.condition.isGroup())\n                    return;\n                const query = this.panel.getQuery();\n                const descr = {\n                    parent: this.condition\n                };\n                const group = this.panel.getQuery().addConditionGroup(descr);\n                if (group) {\n                    query.fireConditionsChangedEvent(QueryChangeAction.Add, group);\n                }\n                break;\n            case ConditionAction.Enable:\n                this.condition.enabled = !this.condition.enabled;\n                this.condition.fireChangedEvent();\n                break;\n            case ConditionAction.Delete:\n                const parent = this.condition.getParent();\n                if (!parent)\n                    return;\n                const conditions = parent.getConditions();\n                const idx = conditions.indexOf(this.condition);\n                if (idx >= 0) {\n                    conditions.splice(idx, 1);\n                    this.condition.getQuery().fireConditionsChangedEvent(QueryChangeAction.Delete, this.condition);\n                }\n                break;\n            case ConditionAction.Menu:\n                const condMenu = this.getConditionMenu();\n                this.keepShowingButtons = true;\n                condMenu.showMenu({\n                    anchor: evt.target,\n                    selectedIds: this.getConditionMenuSelectedItems(),\n                    itemSelectedCallback: (item) => {\n                        let action;\n                        switch (item.id) {\n                            case \"enable\":\n                                action = ConditionAction.Enable;\n                                break;\n                            case \"delete\":\n                                action = ConditionAction.Delete;\n                                break;\n                            case \"param\":\n                                action = ConditionAction.Parameterized;\n                                break;\n                            case \"inJoin\":\n                                action = ConditionAction.InJoin;\n                                break;\n                            case \"addCondition\":\n                                action = ConditionAction.AddCondition;\n                                break;\n                            case \"addGroup\":\n                                action = ConditionAction.AddGroup;\n                                break;\n                        }\n                        this.conditionMenuHandler(action, evt);\n                    },\n                    itemFilterCallback: (item) => {\n                        let result = this.condition.enabled || item.id === \"enable\" || item.id === \"delete\";\n                        if (item.id === \"enable\") {\n                            const parent = this.condition.getParent();\n                            result = result && parent && parent.enabled;\n                        }\n                        else if (item.id === \"delete\") {\n                            result = result && ((this.panel.options.editableParts & QPEditablePart.Removal) === QPEditablePart.Removal);\n                        }\n                        else if (item.id === \"addGroup\" || item.id === \"addCondition\") {\n                            result = result && ((this.panel.options.editableParts & QPEditablePart.Addition) === QPEditablePart.Addition);\n                        }\n                        return result;\n                    },\n                    menuClosedCallback: () => {\n                        this.keepShowingButtons = false;\n                        if (!this.isMouseOverBlock)\n                            this.leaveButtonBlock();\n                    }\n                });\n                break;\n            case ConditionAction.Parameterized:\n                this.condition.setParameterized(!this.condition.isParameterized());\n                this.condition.fireChangedEvent();\n                break;\n            case ConditionAction.InJoin:\n                this.condition.setInJoin(!this.condition.isInJoin());\n                this.condition.fireChangedEvent();\n                break;\n        }\n        evt.stopPropagation();\n        return false;\n    }\n    getConditionMenuSelectedItems() {\n        let arrSelected = [];\n        if (this.condition.enabled) {\n            arrSelected.push(\"enable\");\n        }\n        if (this.condition.isParameterized()) {\n            arrSelected.push(\"param\");\n        }\n        if (this.condition.isInJoin()) {\n            arrSelected.push(\"inJoin\");\n        }\n        return arrSelected;\n    }\n    renderButtonsBlock() {\n        const onButtonMouseEnter = (evt) => {\n            domel(evt.target)\n                .addClass(`${this.cssPrefix}-condition-button-active`);\n        };\n        const onButtonMouseLeave = (evt) => {\n            domel(evt.target)\n                .removeClass(`${this.cssPrefix}-condition-button-active`);\n        };\n        const builder = domel(\"div\")\n            .addClass(`${this.cssPrefix}-condition-buttonsBlock`)\n            .addClass(getMobileCssClass());\n        this.buttonsBlock = builder.toDOM();\n        if (this.condition.isReadOnly()) {\n            return this.buttonsBlock;\n        }\n        const buttonsToShow = this.getButtonsToShow();\n        if (buttonsToShow.indexOf(\"addCondition\") >= 0 && this.condition.enabled\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-addCondition`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdAddCondition'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.AddCondition, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        const showAddGroupBtn = buttonsToShow.indexOf(\"addGroup\") >= 0 || buttonsToShow.indexOf(\"addPredicate\") >= 0;\n        if (showAddGroupBtn && this.condition.enabled\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-addPredicate`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdAddCondGroup'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.AddGroup, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"enable\") >= 0 && this.condition.getParent() && this.condition.getParent().enabled) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-enable`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdToggleEnable'))\n                        .addClass(this.condition.enabled ? 'enabled' : '')\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Enable, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"delete\") >= 0 && this.condition.getParent()\n            && ((this.panel.options.editableParts & QPEditablePart.Removal) == QPEditablePart.Removal)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-delete`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdDelete'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Delete, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"menu\") >= 0) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-menu`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('ButtonMenu'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Menu, evt));\n                    if (!browserUtils.isMobileMode()) {\n                        b\n                            .on('keypress', evt => { if (evt.keyCode == 13) {\n                            evt.target.click();\n                        } })\n                            .on('mouseenter', onButtonMouseEnter)\n                            .on('mouseleave', onButtonMouseLeave);\n                    }\n                });\n            });\n        }\n        this.adjustButtonsVisibility();\n        return this.buttonsBlock;\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && this.panel.options.buttons.condition && Array.isArray(this.panel.options.buttons.condition) ? this.panel.options.buttons.condition : [\"enable\", \"delete\"];\n    }\n}\n\nclass DomDropDownElementBuilder extends DomElementBuilder {\n    constructor(parent) {\n        super('a', parent);\n        this.attr('href', 'javascript:void(0)');\n        this.on('click', ev => {\n            ev.preventDefault();\n            this.appear();\n            return false;\n        });\n    }\n    onGetMenu(onGetMenu) {\n        this._onGetMenu = onGetMenu;\n        return this;\n    }\n    onItemSelected(onItemSelected) {\n        this._onItemSelected = onItemSelected;\n        return this;\n    }\n    appear() {\n        const menu = this._onGetMenu ? this._onGetMenu() : null;\n        if (menu) {\n            menu.showMenu({\n                anchor: this.element,\n                itemSelectedCallback: item => {\n                    if (this._onItemSelected) {\n                        this._onItemSelected(item.id);\n                    }\n                    return false;\n                }\n            });\n        }\n    }\n}\nfunction dropdown(parent) {\n    return new DomDropDownElementBuilder(parent);\n}\n\nclass ConditionGroupRenderer extends ConditionRenderer {\n    constructor(panel, condition, slot) {\n        super(panel, condition, slot);\n        this.isRoot = !condition.getParent();\n    }\n    getClassesToAdd() {\n        let result = `${this.cssPrefix}-group`;\n        if (this.isRoot) {\n            result += ` ${this.cssPrefix}-group-root`;\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        domel(this.element)\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderGroupRow())\n            .addChildElement(this.renderConditions(autoAppear))\n            .data('id', this.condition.id)\n            .data('group', '');\n    }\n    renderGroupRow() {\n        if (this.isRoot && !this.panel.options.showRootRow) {\n            return null;\n        }\n        else {\n            return new ConditionGroupRowRenderer(this.panel, this.condition).render();\n        }\n    }\n    renderConditions(autoAppear) {\n        const builder = domel('div');\n        builder\n            .addClass(`${this.cssPrefix}-conditions`)\n            .addClass(`${getMobileCssClass()}`)\n            .data('conditions', '');\n        if (this.isRoot) {\n            builder.addClass(`${this.cssPrefix}-conditions-root`);\n        }\n        this.condition.getConditions().forEach((condition, index, array) => {\n            const renderer = this.panel.getConditionRenderer(condition);\n            if (renderer) {\n                builder.addChildElement(renderer.render(autoAppear && index == array.length - 1));\n            }\n        });\n        return builder.toDOM();\n    }\n}\nclass ConditionGroupRowRenderer extends SimpleConditionRenderer {\n    constructor(panel, condition, slot) {\n        super(panel, condition, slot);\n        this.isRoot = !this.condition.getParent();\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && this.panel.options.buttons.group && Array.isArray(this.panel.options.buttons.group) ? this.panel.options.buttons.group : [\"addCondition\", \"addGroup\", \"enable\", \"delete\"];\n    }\n    getClassesToAdd() {\n        let result;\n        if (this.isRoot) {\n            result = `${this.cssPrefix}-row ${this.cssPrefix}-row-group ${this.cssPrefix}-row-group-root`;\n        }\n        else {\n            result = `${this.cssPrefix}-row ${this.cssPrefix}-row-group`;\n            const level = this.condition.getLevel();\n            if (level > 0)\n                result += ` ${this.cssPrefix}-level-${level}`;\n            result += this.condition.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n            if (this.condition.enabled) {\n                result += this.condition.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n            }\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        const builder = domel(this.element)\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .data('group-row', '')\n            .addChildElement(this.renderCheckbox())\n            .addChildElement(this.renderConjunction());\n        const level = this.condition.getLevel();\n        if (level > 0)\n            builder.addClass(`${this.cssPrefix}-level-${level}`);\n        this.buildGroupElements(builder, this.getGroupTitle());\n        if (this.panel.options.accentActiveCondition) {\n            builder.on('click', ev => {\n                this.panel.toggleConditionPicked(this.condition);\n                this.adjustButtonsVisibility();\n                if (!browserUtils.isMobileMode()) {\n                    builder.toDOM().dispatchEvent(createBrowserEvent(\"mouseenter\"));\n                }\n            });\n        }\n        builder\n            .addChildElement(this.renderButtonsBlock());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .on('mouseenter', event => {\n                this.isMouseOverBlock = true;\n                this.enterButtonBlock();\n                event.stopPropagation();\n                return false;\n            })\n                .on('mouseleave', event => {\n                this.isMouseOverBlock = false;\n                if (!this.keepShowingButtons && domel(this.buttonsBlock).isVisible()) {\n                    this.leaveButtonBlock();\n                }\n                event.stopPropagation();\n                return false;\n            });\n        }\n    }\n    getGroupTitle() {\n        let result;\n        if (this.isRoot && !browserUtils.isMobileMode()) {\n            result = i18n.getText('RootConditionGroupTitle');\n            if (!result) {\n                //to support old text key\n                result = i18n.getText('RootPredicateTitle');\n            }\n        }\n        else {\n            result = i18n.getText('ConditionGroupTitle');\n            if (!result) {\n                //to support old text key\n                result = i18n.getText('PredicateTitle');\n            }\n        }\n        return result;\n    }\n    buildGroupElements(builder, groupTitle) {\n        const pos = groupTitle.indexOf('{lt}');\n        if (pos < 0) {\n            //invalid format\n            builder.addText(i18n.getText('ErrIncorrectGroupTitleFormat'));\n            builder.addClass(`${this.cssPrefix}-error`);\n        }\n        else {\n            if (pos > 0) {\n                builder.addChild('span', b => {\n                    b.addClass(`${this.cssPrefix}-grelement`)\n                        .addText(groupTitle.substring(0, pos));\n                });\n            }\n            const linkTypeStr = equtils.linkTypeToStr(this.condition.linkType);\n            let curType = utils.findItemById(eqconsts.predicateLinkTypeList, linkTypeStr);\n            if (!curType) {\n                curType = eqconsts.predicateLinkTypeList[0];\n            }\n            if (this.isEditable()) {\n                dropdown(builder.toDOM())\n                    .onGetMenu(() => this.getLinkTypeMenu())\n                    .onItemSelected(id => {\n                    this.condition.linkType = equtils.strToLinkType(id);\n                    this.condition.fireChangedEvent();\n                })\n                    .addText(i18n.getText(curType.key))\n                    .title(i18n.getText(curType.key))\n                    .addClass(`${this.cssPrefix}-grelement`);\n            }\n            else {\n                builder.addChild('span', b => {\n                    b.text(i18n.getText(curType.key))\n                        .title(i18n.getText(curType.key))\n                        .addClass(`${this.cssPrefix}-grelement`);\n                });\n            }\n            builder.addChild('span', b => {\n                b.addClass(`${this.cssPrefix}-grelement`)\n                    .addText(groupTitle.substring(pos + 4));\n            });\n        }\n    }\n    getConditionMenu() {\n        return this.panel.getConditionGroupMenu(this.condition.getParent() == null);\n    }\n    getLinkTypeMenu() {\n        return this.panel.getLinkTypeMenu();\n    }\n    renderConjunction() {\n        return this.isRoot ? null : super.renderConjunction();\n    }\n    renderCheckbox() {\n        return this.isRoot ? null : super.renderCheckbox();\n    }\n    leaveButtonBlock() {\n        if (!this.panel.options.alwaysShowButtonsInGroups\n            && (!this.isConditionActive() || !this.panel.options.accentActiveCondition)) {\n            this.hideButtons();\n        }\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtonsInGroups\n            || (this.panel.options.accentActiveCondition && this.isConditionActive())) {\n            this.showButtons();\n        }\n    }\n}\n\nclass BaseElementRenderer {\n    constructor(slot) {\n        this.element = slot || domel('div').toDOM();\n    }\n    refresh() {\n        this.render();\n    }\n    render(isEditMode = false) {\n        this.labelElement = this.renderLabelElement();\n        domel(this.element)\n            .html('')\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.labelElement);\n        if (this.isEditable()) {\n            this.renderEditor();\n            if (isEditMode) {\n                setTimeout(() => this.showEditor(), 50);\n            }\n        }\n        return this.element;\n    }\n    isEditable() {\n        return true;\n    }\n    renderLabelElement() {\n        const displayedText = this.getLabelText();\n        if (this.isEditable()) {\n            return domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(displayedText)\n                .text(displayedText)\n                .on('click', (ev) => {\n                ev.preventDefault();\n                this.showEditor();\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            return domel('span')\n                .title(displayedText)\n                .text(displayedText)\n                .toDOM();\n        }\n    }\n    getClassesToAdd() {\n        return '';\n    }\n    getLabelText() {\n        return this.getEmptyText();\n    }\n    getEmptyText() {\n        return '<empty>';\n    }\n}\n\nclass ExpressionRenderer extends BaseElementRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, expression, valueEditor, slot) {\n        super(slot);\n        this.panel = panel;\n        this.expression = expression;\n        this.valueEditor = valueEditor;\n    }\n    render(isEditMode = false) {\n        super.render(isEditMode);\n        if (this.panel.options.onExpressionRendered) {\n            this.panel.options.onExpressionRendered(this.expression, this.element);\n        }\n        return this.element;\n    }\n    getContext() {\n        return this.panel.getContext();\n    }\n    isReadOnly() {\n        const parent = this.expression.getParent();\n        return !parent.enabled || parent.isReadOnly();\n    }\n    isEditable() {\n        return !this.isReadOnly();\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-valueelement`;\n    }\n    getLabelText() {\n        let result = !this.expression.isEmpty()\n            ? this.expression.value\n            : this.getEmptyText();\n        return result;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextValue || i18n.getText('MsgEmptyScalarValue'); //'[enter value]';\n    }\n    setValue(value, silent) {\n        this.expression.setValue(value);\n        if (!silent) {\n            this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n        }\n    }\n    getValue() {\n        return this.expression.value;\n    }\n    validateInput(value) {\n        return { success: true, value: value };\n    }\n    showValidationError(message, target) {\n        this.getContext().throwError({\n            action: \"ui.validation\",\n            \"text\": message\n        });\n    }\n    isEmptyValue() {\n        let v = this.getValue();\n        return (typeof (v) === \"undefined\" || v === null || !v);\n    }\n    adjustWidth() {\n    }\n}\n\nclass InputExpressionRenderer extends ExpressionRenderer {\n    renderEditor() {\n        this.inputBuilder = domel(\"input\")\n            .hide()\n            .addClass(`${this.cssPrefix}-ve-editbox`)\n            .type('text')\n            .on('blur', (ev) => {\n            if (this.inputBuilder.isVisible() && !this.dontProcessBlur) {\n                const validationResult = this.validateInput(this.inputElement.value);\n                if (validationResult.success) {\n                    this.setValue(this.inputElement.value);\n                    this.closeEditor();\n                }\n                else {\n                    this.dontProcessBlur = true;\n                    this.inputElement.focus();\n                    setTimeout(() => { this.dontProcessBlur = false; }, 200);\n                    this.showValidationError(validationResult.message, ev.target);\n                }\n                ev.stopPropagation();\n                return false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.closeEditor();\n                ev.stopPropagation();\n                return false;\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                if (this.inputBuilder.isVisible()) {\n                    this.dontProcessBlur = true;\n                    const validationResult = this.validateInput(this.inputElement.value);\n                    if (validationResult.success) {\n                        this.setValue(this.inputElement.value);\n                        this.closeEditor();\n                        this.dontProcessBlur = false;\n                    }\n                    else {\n                        this.inputElement.focus();\n                        this.showValidationError(validationResult.message, ev.target);\n                        setTimeout(() => { this.dontProcessBlur = false; }, 200);\n                    }\n                    ev.stopPropagation();\n                    return false;\n                }\n            }\n        });\n        this.inputElement = this.inputBuilder.toDOM();\n        domel(this.element)\n            .addChildElement(this.inputElement);\n    }\n    showEditor() {\n        const MIN_WIDTH = 200;\n        if (!browserUtils.isMobileMode()) {\n            let left = this.element.offsetLeft;\n            let width = this.element.offsetWidth > MIN_WIDTH ? this.element.offsetWidth : MIN_WIDTH;\n            let maxWidth = this.element.parentElement.clientWidth - left - 55;\n            this.inputBuilder\n                .removeStyle('left')\n                .removeStyle('right');\n            if (maxWidth < MIN_WIDTH) {\n                this.inputBuilder\n                    .setStyle('right', '55px')\n                    .setStyle('width', `${MIN_WIDTH}px`);\n            }\n            else if (maxWidth < width) {\n                this.inputBuilder\n                    .setStyle('left', `${left}px`)\n                    .setStyle('width', `${maxWidth}px`);\n            }\n            else {\n                this.inputBuilder\n                    .setStyle('left', `${left}px`)\n                    .setStyle('width', `${width}px`);\n            }\n        }\n        domel(this.labelElement).hide();\n        this.inputBuilder\n            .value(this.getValue())\n            .show();\n        this.inputElement.focus();\n    }\n    closeEditor() {\n        this.inputBuilder.hide();\n        domel(this.labelElement).show();\n        this.labelElement.focus();\n    }\n    validateInput(inputValue) {\n        this.inputBuilder.removeClass(\"eqjs-invalid\");\n        const result = {\n            success: true,\n            value: inputValue\n        };\n        if (this.expression.kind == DataKind.List) {\n            this.validateListInput(inputValue, result);\n        }\n        else {\n            this.validateScalarInput(inputValue, result);\n        }\n        return result;\n    }\n    validateListInput(inputValue, result) {\n        let inputValues = inputValue.split(/\\s*,\\s*/);\n        for (let val of inputValues) {\n            this.validateScalarInput(val, result);\n            if (!result.success) {\n                return;\n            }\n        }\n    }\n    validateScalarInput(inputValue, result) {\n        if (!inputValue)\n            return;\n        if (utils.isNumericType(this.expression.dataType)) {\n            let parsedVal = +inputValue;\n            if (isNaN(parsedVal)) {\n                result.success = false;\n                result.message = '\"' + inputValue + '\" ' + i18n.getText('ErrNotNumber');\n            }\n            if (utils.isIntType(this.expression.dataType) && parsedVal != parseInt(inputValue, 10)) {\n                result.success = false;\n                result.message = '\"' + inputValue + '\" ' + i18n.getText('ErrIncorrectInteger');\n            }\n        }\n    }\n    showValidationError(message, target) {\n        super.showValidationError(message, target);\n        this.inputBuilder.addClass(\"eqjs-invalid\");\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n}\n\nclass ListExpressionRenderer extends ExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.menuItemsList = [];\n        this.showWhenReady = false;\n    }\n    isEditable() {\n        return !this.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    setValue(value, silent = false) {\n        const newValue = this.adjustNewValue(value);\n        if (value !== this.expression.value) {\n            const text = this.getValueText(value);\n            this.expression.setContent(newValue, text);\n            if (!silent) {\n                this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n            }\n        }\n        return true;\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (Array.isArray(value)) {\n            for (let item of this.menuItemsList) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.menuItemsList) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextList || i18n.getText('MsgEmptyListValue');\n    }\n    getListName() {\n        return this.valueEditor.name;\n    }\n    renderEditor() {\n        this.fillMenuItemsList(() => {\n            this.renderMenuBlock();\n        });\n    }\n    getLabelText() {\n        if (!this.expression.isEmpty()) {\n            return this.expression.getText();\n        }\n        else {\n            return this.getEmptyText();\n        }\n    }\n    showLoader() {\n        //NOTHING TO DO\n    }\n    hideLoader() {\n        //NOTHING TO DO\n    }\n    showEditor() {\n        if (this.menu) {\n            this.menu.showMenu({\n                anchor: this.labelElement,\n                selectedIds: this.getValuesAsArray(),\n                itemSelectedCallback: (item, selectedItems) => {\n                    if (!this.menu.options.multiselect) {\n                        this.setValue(item.id);\n                    }\n                    else if (selectedItems) {\n                        let selectedIds = [];\n                        let selLength = selectedItems.length;\n                        for (let i = 0; i < selLength; i++)\n                            selectedIds.push(selectedItems[i].id);\n                        this.setValue(selectedIds);\n                    }\n                    return false;\n                }\n            });\n        }\n        else {\n            this.showWhenReady = true;\n            this.showLoader();\n        }\n    }\n    closeEditor() {\n        this.menu.hideMenu();\n    }\n    renderMenuBlock() {\n        let multiSelect = false;\n        if (this.expression) {\n            multiSelect = this.expression.kind === DataKind.List;\n        }\n        const queryPanel = this.panel;\n        const options = {\n            items: this.menuItemsList,\n            multiselect: multiSelect,\n            container: queryPanel ? queryPanel.options.menuContainer : null,\n            showSelected: true,\n            showItemIds: queryPanel ? queryPanel.options.showIdsForListItems : false\n        };\n        if (queryPanel) {\n            utils.assignDeep(options, queryPanel.options.menuOptions);\n        }\n        let menuId = this.element.id;\n        if (menuId) {\n            options.id = menuId + '-EditorMenu';\n        }\n        if (queryPanel) {\n            options.domWriteItemsId = queryPanel.options.domWriteItemsId;\n        }\n        options.buttons = {\n            submit: i18n.getText('ButtonApply'),\n            cancel: i18n.getText('ButtonCancel')\n        };\n        this.menu = new PopupMenu(options);\n    }\n    getValuesAsArray() {\n        if (this.expression.kind !== DataKind.List) {\n            return [this.expression.value];\n        }\n        else {\n            if (this.expression.value) {\n                //splits value by ',' \n                const res = this.expression.value.match(/\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|[^,]+/g);\n                return res\n                    ? res.map(a => {\n                        if (a.charAt(0) == '\"' && a.charAt(a.length - 1) == '\"') {\n                            a = a.substring(1, a.length - 1);\n                            return a.replace(/\\\"/g, '\"');\n                        }\n                        else {\n                            return a;\n                        }\n                    })\n                    : [];\n            }\n            else\n                return [];\n        }\n    }\n    adjustNewValue(newValue) {\n        if (Array.isArray(newValue)) {\n            return newValue.map((a) => {\n                if (a.indexOf(',') >= 0) {\n                    a = a.replace(/\"/g, '\\\"');\n                    return '\"' + a + '\"';\n                }\n                else {\n                    return a;\n                }\n            }).join(',');\n        }\n        else {\n            return newValue;\n        }\n    }\n    fillMenuItemsList(onComplete) {\n        this.menuItemsList = this.valueEditor.values;\n        if (onComplete) {\n            onComplete();\n        }\n    }\n    takeDefaultValue() {\n        if (!this.menuItemsList)\n            return;\n        let itemLen = this.menuItemsList.length;\n        let defValue = this.valueEditor.defValue;\n        for (let i = 0; i < itemLen; i++) {\n            let item = this.menuItemsList[i];\n            if (item.isDefault || defValue == item.id) {\n                this.setValue(item.id, true);\n                break;\n            }\n        }\n    }\n}\nclass CustomListExpressionRenderer extends ListExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.isLoading = false;\n        this.onClickTemp = null;\n    }\n    renderEditor() {\n        if (this.isLoading)\n            return;\n        this.isLoading = true;\n        this.fillMenuItemsList(() => {\n            this.isLoading = false;\n            if (this.isEmptyValue()) {\n                this.takeDefaultValue();\n            }\n            if (!this.expression.isEmpty() && this.expression._isDefaultValue) {\n                const text = this.getValueText(this.expression.value);\n                this.expression.setContent(this.expression.value, text);\n                this.expression.getParent().fireChangedEvent();\n            }\n            this.renderMenuBlock();\n            if (this.showWhenReady) {\n                this.showWhenReady = false;\n                this.hideLoader();\n                this.showEditor();\n            }\n        });\n    }\n    showLoader() {\n        this.labelElement.style.display = 'none';\n        if (!this.loaderElement) {\n            this.loaderElement = domel('div', this.element)\n                .addClass(`${this.cssPrefix}-ve-loader`)\n                .toDOM();\n        }\n        this.loaderElement.style.display = 'block';\n    }\n    hideLoader() {\n        this.loaderElement.style.display = 'none';\n        this.labelElement.removeAttribute('style');\n    }\n    fillMenuItemsList(onComplete) {\n        const listName = this.getListName();\n        const listRequestHandler = this.panel.getContext().getListRequestHandler();\n        if (eqconsts.constLists[listName]) {\n            this.menuItemsList = eqconsts.constLists[listName];\n            if (onComplete) {\n                onComplete();\n            }\n        }\n        else if (listRequestHandler) {\n            listRequestHandler({\n                listName: listName,\n                editorId: this.valueEditor.id,\n                editorParams: this.valueEditor.extraParams,\n                value: this.getValue()\n            }, (list) => {\n                this.menuItemsList = list;\n                if (onComplete) {\n                    onComplete();\n                }\n            });\n        }\n    }\n}\nclass SqlListExpressionRenderer extends CustomListExpressionRenderer {\n    fillMenuItemsList(onComplete) {\n        const context = this.panel.getContext();\n        this.valueEditor;\n        const listRequestHandler = context.getListRequestHandler();\n        if (listRequestHandler) {\n            let requestData = {\n                listName: \"SQL\",\n                editorId: this.valueEditor.id,\n                editorParams: this.valueEditor.extraParams,\n                value: this.getValue()\n            };\n            //requestData.sql = editor.sql;\n            listRequestHandler(requestData, (list) => {\n                this.menuItemsList = list;\n                if (onComplete) {\n                    onComplete();\n                }\n            });\n        }\n    }\n}\n\nclass AttributeExpressionRenderer extends ListExpressionRenderer {\n    constructor(panel, expression, entitiesMenu, slot) {\n        super(panel, expression, null, slot);\n        this.menu = entitiesMenu;\n    }\n    renderEditor() {\n        //create menu\n    }\n    getLabelText() {\n        const model = this.panel.getContext().getModel();\n        const attrId = this.expression.value;\n        const attrObj = attrId ? model.getAttributeByIdSafe(attrId) : null;\n        const attrFormat = this.panel.options.attrElementFormat;\n        return attrObj ? model.getAttributeText(attrObj, attrFormat) : this.getEmptyText();\n    }\n    setValue(value, silent = false) {\n        silent = silent && value !== this.expression.value;\n        const result = super.setValue(value, true);\n        if (!silent) {\n            this.expression.getParent().fireChangedEvent(ConditionPart.EntityAttr | ConditionPart.Operator);\n        }\n        return result;\n    }\n    isEditable() {\n        return !this.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Attribute) === QPEditablePart.Attribute);\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextAttribute || i18n.getText('MsgEmptyAttrValue');\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-attrelement`;\n    }\n    adjustWidth() {\n        if (browserUtils.isMobileMode()) {\n            return;\n        }\n        const elWidth = this.element.clientWidth;\n        const parWidth = this.element.parentElement.clientWidth;\n        if (elWidth > parWidth / 2) {\n            domel(this.element)\n                .addClass(`${this.cssPrefix}-attrelement-wide`);\n        }\n    }\n}\n\nclass DropDownRenderer extends BaseElementRenderer {\n    constructor(slot) {\n        super(slot);\n    }\n    showEditor() {\n        const menu = this.getMenu();\n        if (menu) {\n            menu.showMenu({\n                anchor: this.labelElement,\n                itemSelectedCallback: item => {\n                    this.itemSelected(item.id);\n                    return false;\n                }\n            });\n        }\n    }\n    closeEditor() {\n        const menu = this.getMenu();\n        if (menu)\n            menu.hideMenu();\n    }\n}\n\nclass AddRowRenderer extends DropDownRenderer {\n    constructor(panel, entitiesMenu, slot) {\n        super(slot);\n        this.panel = panel;\n        this.menu = entitiesMenu;\n    }\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    getLabelText() {\n        return i18n.getText('CmdClickToAddCondition');\n    }\n    getClassesToAdd() {\n        return `${eqCssPrefix}-addrow ${this.cssPrefix}-addrow`;\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) === QPEditablePart.Addition);\n    }\n    renderLabelElement() {\n        const displayedText = this.getLabelText();\n        if (this.isEditable()) {\n            this.labelElement = domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(displayedText)\n                .text(displayedText)\n                .on('click', (ev) => {\n                ev.preventDefault();\n                this.showEditor();\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            this.labelElement = domel('div')\n                .toDOM();\n        }\n        return this.labelElement;\n    }\n    renderEditor() {\n        // do nothing - the menu is alredy created\n    }\n    itemSelected(id) {\n        const query = this.panel.getQuery();\n        const descr = {\n            parent: query.getRootCondition(),\n            attributeId: id\n        };\n        const cond = query.addSimpleCondition(descr);\n        if (cond) {\n            query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n        }\n    }\n    getMenu() {\n        return this.menu;\n    }\n}\n\nclass OperatorRenderer extends DropDownRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, condition, text, slot) {\n        super(slot);\n        this.panel = panel;\n        this.condition = condition;\n        this.displayedText = text;\n    }\n    renderEditor() {\n        //create menu\n        const model = this.panel.getContext().getModel();\n        const query = this.panel.getQuery();\n        const items = [];\n        const isRelatedToSubQuery = (operator) => {\n            return operator.defaultOperand.kind == DataKind.Query;\n        };\n        const attrId = (this.condition && this.condition.expressions && this.condition.expressions[0]) ? this.condition.expressions[0].value : null;\n        const attr = attrId ? model.getAttributeById(this.condition.expressions[0].value) : null;\n        if (attr && attr.operators) {\n            attr.operators.forEach(operId => {\n                const operator = model.getOperatorById(operId);\n                const related = isRelatedToSubQuery(operator);\n                if (!query.isEx() && related) {\n                    return;\n                }\n                if (operator && !(this.panel.options.isSubQuery && related)) {\n                    items.push({\n                        id: operId,\n                        text: i18n.getText('Operators', operId, 'caption') || operator.caption\n                    });\n                }\n            });\n        }\n        const options = {\n            items: items,\n            adjustHeight: this.panel.options.adjustEntitiesMenuHeight,\n            id: utils.generateId('opmn'),\n            domWriteItemsId: this.panel.options.domWriteItemsId\n        };\n        utils.assign(options, this.panel.options.menuOptions);\n        this.menu = new PopupMenu(options);\n    }\n    getLabelText() {\n        return this.displayedText;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextOperator || i18n.getText('MsgEmptyOperator');\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-operelement`;\n    }\n    isEditable() {\n        return this.condition.enabled && !this.condition.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Operator) === QPEditablePart.Operator);\n    }\n    itemSelected(id) {\n        this.condition.setOperatorId(id);\n        this.condition.fireChangedEvent(ConditionPart.Operator);\n    }\n    getMenu() {\n        return this.menu;\n    }\n}\n\nclass DateTimeExpressionRenderer extends ExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.dtp = null;\n        this.internalDateFormat = 'yyyy-MM-dd';\n        this.internalTimeFormat = 'HH:mm';\n    }\n    renderEditor() {\n    }\n    showEditor() {\n        if (this.dtp)\n            return;\n        const pickerOptions = {\n            yearRange: this.panel.options.yearRange,\n            showCalendar: this.expression.dataType !== DataType.Time,\n            showTimePicker: this.expression.dataType !== DataType.Date,\n            oneClickDateSelection: this.panel.options.oneClickDateSelection,\n            showDateTimeInput: this.panel.options.showDateTimeInput,\n            onApply: (dateTime) => {\n                const value = this.convertToInternalFormat(dateTime);\n                this.setValue(value);\n                this.dtp = null;\n                setTimeout(() => this.labelElement.focus(), 100);\n            },\n            onCancel: () => {\n                this.labelElement.innerText = this.getLabelText();\n                this.dtp = null;\n                setTimeout(() => this.labelElement.focus(), 100);\n            },\n            onDateTimeChanged: (dateTime) => {\n                const value = i18n.dateTimeToStrEx(dateTime, this.expression.dataType);\n                this.labelElement.innerText = value;\n            }\n        };\n        this.dtp = this.panel.options.dateTimePickerResolver\n            ? this.panel.options.dateTimePickerResolver(pickerOptions)\n            : new DefaultDateTimePicker(pickerOptions);\n        const model = this.expression.getModel();\n        const value = this.expression.value;\n        let dateTime = new Date();\n        if (this.expression.dataType != DataType.Time && model.isDateMacro(value)) {\n            dateTime = model.getDateMacroValue(value);\n        }\n        else if (this.expression.dataType == DataType.Time && model.isTimeMacro(value)) {\n            dateTime = model.getTimeMacroValue(value);\n        }\n        else {\n            dateTime = this.convertFromInternalFormat(value, new Date());\n        }\n        this.dtp.setDateTime(dateTime);\n        this.dtp.show(this.element);\n    }\n    closeEditor() {\n        this.dtp.cancel();\n        this.dtp = null;\n    }\n    getLabelText() {\n        if (!this.expression.value)\n            return this.getEmptyText();\n        const defValue = '${{Today}}';\n        const value = this.expression.value;\n        const model = this.expression.getModel();\n        if (!model) {\n            throw new Error('DataModel is not defined for ' + this.expression.value);\n        }\n        if (model.isDateMacro(value) || model.isTimeMacro(value)) {\n            let macroText = value.substring(3, value.length - 2);\n            let res = i18n.getText(macroText);\n            return res ? res : defValue;\n        }\n        const result = i18n.dateTimeToStrEx(this.convertFromInternalFormat(value), this.expression.dataType);\n        return result;\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    convertFromInternalFormat(dateTimeStr, defautValue) {\n        try {\n            return utils.strToDateTime(dateTimeStr, this.internalDateFormat + ' ' + this.internalTimeFormat);\n        }\n        catch (_a) {\n            return defautValue || new Date();\n        }\n    }\n    convertToInternalFormat(dateTime) {\n        return i18n.dateTimeToStr(dateTime, this.internalDateFormat + ' ' + this.internalTimeFormat);\n    }\n}\n\nclass SubQueryExpressionRenderer extends ExpressionRenderer {\n    renderEditor() {\n        this.dialogBlockBody = domel('div')\n            .addClass(`kfrm-form`)\n            //.setStyle('height', '100%')\n            .toDOM();\n        this.createEntitiesMenu();\n        this.renderColumnBlock();\n        this.renderQueryPanelBlock();\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    setValue(value, silent) {\n        if (value instanceof Query) {\n            this.expression.subQuery = value;\n            if (!silent) {\n                this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n            }\n        }\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        const exprType = this.expression.dataType;\n        this.colEntitiesList = model.getEntitiesTreeWithFilter((ent, attr) => {\n            if (attr) {\n                return attr.useInConditions && attr.dataType === exprType;\n            }\n            else {\n                //if it's entity\n                return ent.attributes && ent.useInConditions;\n            }\n        });\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.element.getAttribute('data-id');\n        if (menuId) {\n            menuId += '-SubColumnMenu';\n        }\n        const options = {\n            items: this.colEntitiesList,\n            adjustHeight: this.panel.options.adjustEntitiesMenuHeight,\n            id: menuId,\n            isSubQuery: true,\n            domWriteItemsId: this.panel.options.domWriteItemsId\n        };\n        utils.assign(options, this.panel.options.menuOptions);\n        this.colEntitiesMenu = new PopupMenu(options);\n    }\n    renderColumnBlock() {\n        this.columnBlock = domel('div', this.dialogBlockBody)\n            .addClass(`kfrm-field`)\n            .addChild('label', b => b\n            .addText(i18n.getText('SubQueryColumnTitle')))\n            .addChild('a', b => this.columnElement = b\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            this.colEntitiesMenu.showMenu({\n                anchor: this.columnElement,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrId = data.id;\n                    this.setResultAttributeId(attrId);\n                    return false;\n                }\n            });\n        })\n            .toDOM())\n            .toDOM();\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextValue || i18n.getText('MsgSubQueryValue');\n    }\n    renderQueryPanelBlock() {\n        const parentEl = domel('div', this.dialogBlockBody)\n            .addClass(`kfrm-field`)\n            .addChild('label', b => b\n            .addText(i18n.getText('SubQueryQueryPanelCaption')))\n            .toDOM();\n        this.subQueryPanelBlock =\n            domel('div', parentEl)\n                .toDOM();\n        let qpId = this.element.getAttribute('data-id');\n        if (qpId) {\n            this.subQueryPanelBlock.id = qpId + '-SubQueryPanel';\n        }\n    }\n    setResultAttributeId(attrId) {\n        let attrObj = this.getContext().getModel().getAttributeById(attrId);\n        if (attrObj && this.subQuery) {\n            let cols = this.subQuery.getColumns();\n            let column;\n            if (cols.length > 0) {\n                column = cols[0];\n                column.expr.setValue(attrId);\n                column.expr.dataType = attrObj.dataType;\n                column.fireChangedEvent();\n            }\n            else {\n                column = this.subQuery.createColumn();\n                column.sorting = SortDirection.None;\n                column.sortIndex = -1;\n                let expr = new Expression(column);\n                expr.setValue(attrId);\n                expr.tag = ExprTag.EntityAttribute;\n                expr.kind = DataKind.Attribute;\n                expr.dataType = attrObj.dataType;\n                column.expr = expr;\n                cols.push(column);\n                this.subQuery.fireColumnsChangedEvent(QueryChangeAction.Add, column);\n            }\n            this.columnElement.innerText = this.getAttributeText(attrObj);\n        }\n    }\n    getAttributeText(attribute) {\n        if (!attribute)\n            return i18n.getText('SubQueryEmptyColumn');\n        let attrText = i18n.getText('Attributes', attribute.id);\n        if (!attrText)\n            attrText = attribute.caption;\n        let format = this.panel.options.attrElementFormat;\n        if (!format)\n            return attrText;\n        let result = format.replace(new RegExp(\"{attr}\", 'g'), attrText);\n        let entityPath = this.getContext()\n            .getModel()\n            .getFullEntityPathByAttr(attribute.id, '.');\n        return result.replace(new RegExp(\"{entity}\", 'g'), entityPath);\n    }\n    showEditor() {\n        const parentPanel = this.panel;\n        const context = this.getContext();\n        this.subQueryPanelBlock.innerHTML = \"\";\n        this.subQuery = context.createQuery();\n        if (this.expression.subQuery) {\n            this.subQuery.loadFromData(this.expression.subQuery.toJSONData());\n        }\n        let subOptions = utils.assign({}, parentPanel.options);\n        subOptions.isSubQuery = true;\n        subOptions.showAddRow = true;\n        subOptions.menuContainer = document.body;\n        subOptions.menuOptions.isSubQuery = true;\n        subOptions.entitiesListFilter = (listItems, listOptions) => {\n            if (parentPanel.options.entitiesListFilter) {\n                let subQueryPanelListOptions = listOptions || {};\n                subQueryPanelListOptions.isSubQuery = true;\n                parentPanel.options.entitiesListFilter(listItems, subQueryPanelListOptions);\n            }\n        };\n        let subQueryPanel = this.panel.clonePanel(this.subQueryPanelBlock, this.subQuery);\n        subQueryPanel.init(this.panel.getContext(), subOptions);\n        let attrId = null;\n        let cols = this.subQuery.getColumns();\n        if (cols.length == 0) {\n            let condition = this.expression.getParent();\n            if (condition.expressions.length > 0) {\n                let attrExpr = condition.expressions[0];\n                attrId = (attrExpr.tag == ExprTag.EntityAttribute\n                    || attrExpr.kind == DataKind.Attribute) ? attrExpr.value : null;\n            }\n        }\n        else {\n            attrId = cols[0].expr.value;\n        }\n        if (attrId) {\n            this.setResultAttributeId(attrId);\n        }\n        else {\n            this.columnElement.innerText = i18n.getText(\"SubQueryEmptyColumn\");\n        }\n        subQueryPanel.refresh();\n        const rootCondEl = this.subQueryPanelBlock.querySelector('.eqjs-qp-conditions-root');\n        if (rootCondEl) {\n            rootCondEl.style.minHeight = '100px';\n        }\n        const dialogService = this.panel\n            .getContext()\n            .getServices()\n            .getService('DialogService');\n        dialogService.open({\n            title: i18n.getText('SubQueryDialogTitle'),\n            body: this.dialogBlockBody,\n            width: this.panel.options.subQueryDialogWidth,\n            //height: this.panel.options.subQueryDialogHeight,\n            closable: true,\n            cancelable: true,\n            onSubmit: () => {\n                const value = this.subQuery;\n                // validate subquery\n                if (value.tryValidate({ checkExpressions: true })) {\n                    this.setValue(value);\n                    return true;\n                }\n                return false;\n            }\n        });\n    }\n    closeEditor() {\n    }\n}\n\nclass BindToParentColumnExpressionRenderer extends CustomListExpressionRenderer {\n    constructor(panel, expression, editor, slot) {\n        super(panel, expression, editor, slot);\n        this.expression.tag = ExprTag.ParentColumn;\n    }\n    fillMenuItemsList(onComplete) {\n        const query = this.panel.getQuery().getParentQuery();\n        const parent = this.expression.getParent();\n        const attrDataType = parent.expressions[0].dataType;\n        this.menuItemsList = query\n            .getColumns()\n            .filter(col => col.expr.dataType == attrDataType)\n            .map(col => {\n            return { id: col.id, text: col.caption };\n        });\n        if (onComplete) {\n            onComplete();\n        }\n    }\n}\n\n/**\n * The query panel wiget, implemented without JQuery.\n */\nclass QueryPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot, customQuery) {\n        super(slot);\n        this.options = {\n            editableParts: QPEditablePart.All,\n            isSubQuery: false,\n            activeCondition: null,\n            entitiesPopupHandler: null,\n            entitiesListFilter: null,\n            menuContainer: document.body,\n            showRootRow: true,\n            showAddRow: true,\n            showCheckboxes: false,\n            allowParameterization: false,\n            allowInJoinConditions: false,\n            showPoweredBy: false,\n            buttons: {\n                condition: null,\n                group: null\n            },\n            alwaysShowButtonsInGroups: false,\n            alwaysShowButtonsInConditions: false,\n            showConjunctions: true,\n            accentActiveCondition: true,\n            activateRootOnStart: true,\n            yearRange: 'c-10:c+10',\n            oneClickDateSelection: true,\n            showDateTimeInput: false,\n            attrElementFormat: '{entity} {attr}',\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                itemRenderedCallback: null\n            },\n            allowDragDrop: true,\n            attrPlacement: 0,\n            sortEntities: false,\n            subQueryDialogWidth: 600,\n            subQueryDialogHeight: 300,\n            dialogZIndex: 100000,\n            numberListSeparators: [',', ';'],\n            autoEditNewCondition: false,\n            onConditionRendered: null,\n            onGetConditionRenderer: null,\n            onGetExpressionRenderer: null,\n            onGetOperatorRenderer: null,\n            onOperatorRendered: null,\n            onGetAddRowRenderer: null,\n            defaultQuery: null,\n            showIndicatorOnLoad: true\n        };\n        this.customQuery = null;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-cond-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        if (!this.slot.classList.contains(`${this.cssPrefix}-panel`)) {\n            this.slot.classList.add(`${this.cssPrefix}-panel`);\n        }\n        this.group = WidgetGroup.Query;\n        if (customQuery) {\n            this.customQuery = customQuery;\n        }\n    }\n    getWidgetType() {\n        return 'queryPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n        //detach previously defined query observer (if any)\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            const model = this.getContext().getModel();\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttr\"],\n                onDragEnter: (container, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    ev.dragImage.classList.add('eqjs-sortable-helper');\n                    this.showLandingSlot();\n                    const attrId = ev.data.attrId;\n                    if (!model.checkAttrProperty(attrId, \"useInConditions\")) {\n                        ev.dropEffect = DropEffect.Forbid;\n                    }\n                },\n                onDragOver: (container, ev) => {\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dragImage.classList.remove('eqjs-sortable-helper');\n                    ev.dragImage.style.removeProperty('width');\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLangindSlot();\n                },\n                onDrop: (container, ev) => {\n                    const query = this.getQuery();\n                    const descr = {\n                        parent: query.getRootCondition(),\n                        attributeId: ev.data.attrId\n                    };\n                    const cond = query.addSimpleCondition(descr);\n                    if (cond) {\n                        query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                    }\n                }\n            });\n        }\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    getEntitiesMenu() {\n        return this.entitiesMenu;\n    }\n    getConditionMenu() {\n        return this.conditionMenu;\n    }\n    getLinkTypeMenu() {\n        return this.linkTypeMenu;\n    }\n    getConditionGroupMenu(isRoot = false) {\n        return isRoot ? this.rootGroupMenu : this.groupMenu;\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to conditions\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Conditions && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const conds = edata.changee;\n                    const modifyCondition = (cond, autoEdit) => {\n                        const el = this.slot.querySelector(`div[data-id=${cond.id}]`);\n                        if (el) {\n                            autoEdit = autoEdit\n                                && ((edata.condPart & ConditionPart.Operator) === ConditionPart.Operator)\n                                && cond.expressions.length > 1\n                                && (cond.expressions[1]._isDefaultValue || cond.expressions[1].value == '' ||\n                                    cond.expressions[1].value == null);\n                            const isActive = el.classList.contains('active');\n                            const renderer = this.getConditionRenderer(cond, el);\n                            if (renderer) {\n                                const newEl = renderer.render(autoEdit);\n                                if (isActive) {\n                                    this.toggleConditionPicked(cond);\n                                }\n                                if (isFocusInside && !autoEdit) {\n                                    const focusElem = newEl.querySelector('a') || newEl.querySelector('.eqjs-qp-condition-button');\n                                    if (focusElem) {\n                                        safeFocus(focusElem);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    let autoEdit = this.options.autoEditNewCondition && !browserUtils.isMobileMode();\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => modifyCondition(cond, autoEdit));\n                        autoEdit = false;\n                    }\n                    else {\n                        modifyCondition(conds, autoEdit);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const conds = edata.changee;\n                    const addCondition = (cond) => {\n                        const renderer = this.getConditionRenderer(cond);\n                        if (renderer) {\n                            const parent = cond.getParent();\n                            const parentEl = this.slot.querySelector(`div[data-id=${parent.id}]`);\n                            if (parentEl) {\n                                const newCondContainer = parentEl.lastChild;\n                                if (newCondContainer) {\n                                    const el = renderer.render(this.options.autoEditNewCondition && !browserUtils.isMobileMode());\n                                    newCondContainer.appendChild(el);\n                                    el.scrollIntoView(false);\n                                    if (isFocusInside && (!this.options.autoEditNewCondition || browserUtils.isMobileMode())) {\n                                        el.querySelector(`a`).focus();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => addCondition(cond));\n                    }\n                    else {\n                        addCondition(conds);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const conds = edata.changee;\n                    const deleteCondition = (cond) => {\n                        const el = this.slot.querySelector(`div[data-id=${cond.id}]`);\n                        if (el) {\n                            const parent = this.slot.querySelector(`div[data-id=${cond.getParent().id}] > .eqjs-qp-row-group`);\n                            const next = el.nextSibling;\n                            const prev = el.previousSibling;\n                            el.parentElement.removeChild(el);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || parent;\n                                const focusElem = focusCond.querySelector('a') || focusCond.querySelector('.eqjs-qp-condition-button');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => deleteCondition(cond));\n                    }\n                    else {\n                        deleteCondition(conds);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        if (this.customQuery) {\n            return this.customQuery;\n        }\n        return this.context.getQuery();\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        // dateFormatValue & dateFormatDisplay back compatibility\n        if (this.options.dateFormatValue) {\n            i18n.updateLocaleSettings({\n                editDateFormat: this.options.dateFormatValue\n            });\n        }\n        if (this.options.dateFormatDisplay) {\n            i18n.updateLocaleSettings({\n                shortDateFormat: this.options.dateFormatDisplay\n            });\n        }\n        if (typeof this.options.editableParts === \"undefined\") {\n            this.options.editableParts = QPEditablePart.All;\n        }\n        if (browserUtils.isMobileMode()) {\n            this.options.buttons = this.options.buttons || {};\n            this.options.buttons.condition = [\"menu\"];\n            this.options.buttons.group = [\"menu\"];\n        }\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    render() {\n        try {\n            this.entitiesMenu = this.createEntitiesMenu();\n            this.createConditionMenus();\n            this.createLinkTypeMenu();\n            this.rootContainer = domel('div', this.slot)\n                .toDOM();\n            domel(this.slot)\n                .removeClass(eqCssMobile)\n                .addClass(getMobileCssClass());\n            const query = this.getQuery();\n            const root = query.getRootCondition();\n            const renderer = this.getConditionRenderer(root, this.rootContainer);\n            if (renderer) {\n                renderer.render();\n            }\n            if (this.options.showAddRow) {\n                this.addRowElement = domel('div', this.slot)\n                    .toDOM();\n                const addrowRenderer = this.getAddRowRenderer(this.addRowElement);\n                if (addrowRenderer)\n                    addrowRenderer.render();\n            }\n        }\n        catch (err) {\n            const error = err;\n            this.context.throwError({\n                action: \"QueryPanel rendering\",\n                text: error.message,\n                sourceError: error\n            });\n        }\n    }\n    getConditionRenderer(condition, slot) {\n        let renderer;\n        if (this.options.onGetConditionRenderer) {\n            renderer = this.options.onGetConditionRenderer(condition, slot);\n            if (renderer) {\n                return renderer;\n            }\n        }\n        switch (condition.tag) {\n            case CondTag.Simple:\n                return new SimpleConditionRenderer(this, condition, slot);\n            case CondTag.Group:\n                return new ConditionGroupRenderer(this, condition, slot);\n        }\n        return null;\n    }\n    getExpressionRenderer(expression, slot) {\n        if (!expression) {\n            throw 'Expression is not defined in the condition';\n        }\n        const model = this.getContext().getModel();\n        const condition = expression.getParent();\n        const operator = model.getOperatorById(condition.getOperatorId());\n        const attribute = model.getAttributeByIdSafe(condition.expressions[0].value);\n        const operand = model.getOperand(attribute, operator, expression.getIndex());\n        let editor;\n        let tag;\n        if (operand && operand.editor && operand.editor.tag !== EqEditorTag.Unknown) {\n            editor = operand.editor;\n        }\n        else if (attribute && attribute.defaultEditor) {\n            editor = attribute.defaultEditor;\n        }\n        else {\n            editor = new EqValueEditor();\n        }\n        tag = editor.tag;\n        let exprType = expression.dataType;\n        if (exprType == DataType.Unknown) {\n            exprType = attribute.dataType;\n        }\n        if (expression.kind === DataKind.Attribute) {\n            if (expression.getIndex() === 0) { // Base attribute expression\n                return new AttributeExpressionRenderer(this, expression, this.entitiesMenu, slot);\n            }\n            else {\n                let attributeMenu = this.createEntitiesMenu((ent, attr) => {\n                    if (attr) {\n                        return attr.useInConditions && attr.dataType === exprType;\n                    }\n                    return true;\n                });\n                return new AttributeExpressionRenderer(this, expression, attributeMenu, slot);\n            }\n        }\n        else if (expression.kind === DataKind.Query) {\n            tag = EqEditorTag.SubQuery;\n        }\n        else if (expression.kind === DataKind.Scalar) {\n            if (tag == EqEditorTag.Unknown && (expression.dataType === DataType.Date\n                || expression.dataType === DataType.DateTime || expression.dataType === DataType.Time)) {\n                tag = EqEditorTag.DateTime;\n            }\n        }\n        else if (expression.kind == DataKind.ParentColumn) {\n            tag = EqEditorTag.BindToParentColumn;\n        }\n        if (this.options.onGetExpressionRenderer) {\n            let renderer = this.options.onGetExpressionRenderer(this, expression, editor, slot);\n            if (renderer) {\n                return renderer;\n            }\n        }\n        switch (tag) {\n            case EqEditorTag.List:\n                return new ListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.SqlList:\n                return new SqlListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.CustomList:\n                return new CustomListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.DateTime:\n                return new DateTimeExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.SubQuery:\n                return new SubQueryExpressionRenderer(this, expression, editor, slot);\n            //move to ERS later\n            case EqEditorTag.BindToParentColumn:\n                return new BindToParentColumnExpressionRenderer(this, expression, editor, slot);\n            default:\n                return new InputExpressionRenderer(this, expression, editor, slot);\n        }\n    }\n    getOperatorRenderer(condition, text, slot) {\n        let renderer;\n        if (this.options.onGetOperatorRenderer)\n            renderer = this.options.onGetOperatorRenderer(condition, text, slot);\n        if (renderer)\n            return renderer;\n        return new OperatorRenderer(this, condition, text, slot);\n    }\n    getAddRowRenderer(slot) {\n        let renderer;\n        if (this.options.onGetAddRowRenderer)\n            renderer = this.options.onGetAddRowRenderer(slot);\n        if (renderer)\n            return renderer;\n        return new AddRowRenderer(this, this.entitiesMenu, slot);\n    }\n    createEntitiesMenu(filterFunc) {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id || \"eq-querypanel\";\n        menuId += '-EntitiesMenu';\n        const entitiesList = model.getEntitiesTree({\n            addUIC: true,\n            addUIR: false,\n            addUIS: false,\n            attrPlacement: this.options.attrPlacement,\n            sortEntities: this.options.sortEntities\n        }, filterFunc);\n        const options = {\n            items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight,\n            id: menuId,\n            domWriteItemsId: this.options.domWriteItemsId\n        };\n        utils.assign(options, this.options.menuOptions);\n        return new PopupMenu(options);\n    }\n    showEntitiesMenu(options) {\n        this.entitiesMenu.showMenu(options);\n    }\n    createConditionMenus() {\n        //ConditionMenu\n        {\n            const query = this.getQuery();\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-ConditionMenu';\n            const items = [\n                {\n                    id: \"enable\",\n                    text: i18n.getText('MenuEnable')\n                },\n                {\n                    id: \"delete\",\n                    text: i18n.getText('CmdDelete')\n                }\n            ];\n            if (query.isEx()) {\n                if (this.options.allowParameterization || this.options.allowInJoinConditions) {\n                    items.push({ id: \"delimiter\", text: \"---\" });\n                }\n                if (this.options.allowParameterization) {\n                    items.push({\n                        id: \"param\",\n                        text: i18n.getText('MenuParameterization')\n                    });\n                }\n                if (this.options.allowInJoinConditions) {\n                    items.push({\n                        id: \"inJoin\",\n                        text: i18n.getText('MenuJoinCond')\n                    });\n                }\n            }\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.conditionMenu = new PopupMenu(options);\n        }\n        //groupMenu\n        {\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-GroupMenu';\n            const items = [\n                {\n                    id: \"enable\",\n                    text: i18n.getText('MenuEnable')\n                },\n                {\n                    id: \"delete\",\n                    text: i18n.getText('CmdDelete')\n                },\n                {\n                    id: \"delimiter\",\n                    text: \"---\"\n                },\n                {\n                    id: \"addCondition\",\n                    text: i18n.getText('CmdAddCondition')\n                },\n                {\n                    id: \"addGroup\",\n                    text: i18n.getText('CmdAddCondGroup')\n                }\n            ];\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.groupMenu = new PopupMenu(options);\n        }\n        //rootGroupMenu\n        {\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-RootGroupMenu';\n            const items = [\n                {\n                    id: \"addCondition\",\n                    text: i18n.getText('CmdAddCondition')\n                },\n                {\n                    id: \"addGroup\",\n                    text: i18n.getText('CmdAddCondGroup')\n                }\n            ];\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.rootGroupMenu = new PopupMenu(options);\n        }\n    }\n    createLinkTypeMenu() {\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-LinkTypeMenu';\n        }\n        const typeList = eqconsts.predicateLinkTypeList;\n        const itemList = typeList.map((item) => {\n            return {\n                id: item.id,\n                text: i18n.getText(item.key)\n            };\n        });\n        const options = { items: itemList, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(options, this.options.menuOptions);\n        this.linkTypeMenu = new PopupMenu(options);\n    }\n    toggleConditionPicked(condition, force = undefined) {\n        let el;\n        let isActive;\n        if (condition) {\n            el = this.slot.querySelector(`div[data-id=${condition.id}][data-condrow], div[data-id=${condition.id}] > div[data-group-row]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.slot.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            if (row.hasAttribute('data-group-row')) {\n                if (!this.options.alwaysShowButtonsInGroups) {\n                    domel(row)\n                        .data(\"show-buttons\", null);\n                }\n            }\n            else {\n                if (!this.options.alwaysShowButtonsInConditions) {\n                    domel(row)\n                        .data(\"show-buttons\", null);\n                }\n            }\n            domel(row)\n                .removeClass('active');\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    showLandingSlot() {\n        const container = this.slot.querySelector('.eqjs-qp-conditions-root');\n        if (container) {\n            container.appendChild(this.landingSlot);\n            this.landingSlot.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n    }\n    hideLangindSlot() {\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.slot.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.slot.removeChild(this.progressBlock);\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n    clonePanel(slot, query) {\n        return new QueryPanel(slot, query);\n    }\n}\n\nclass FilterBar extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            applyOnClose: true,\n            showApplyButton: true,\n            showClearButton: true,\n            queryPanel: {\n                showAddRow: true,\n                showCheckboxes: true,\n                alwaysShowButtonsInGroups: true\n            }\n        };\n        this.headerClickListener = this.headerClickHandler.bind(this);\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'filterBar';\n    }\n    get cssPrefix() {\n        return 'eqjs-fb';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.destroyCore();\n        this.qpElement = domel('div')\n            .addClass(`${this.cssPrefix}-querypanel`)\n            .toDOM();\n        this.queryPanel = new QueryPanel(this.qpElement);\n        this.queryPanel.init(context, this.options.queryPanel || {});\n        this.attachQueryObserver();\n    }\n    setOptions(options) {\n        this.options = utils.assignDeep(this.options, options);\n    }\n    applyBtnClick(ev) {\n        this.applyFilter();\n    }\n    clearBtnClick(ev) {\n        this.clearFilter();\n    }\n    showQueryPanel(callback) {\n        slideDown(this.qpBlock, 200, () => {\n            this.updateHeader();\n            if (callback)\n                callback();\n        });\n    }\n    hideQueryPanel() {\n        slideUp(this.qpBlock, 200, () => {\n            this.updateHeader();\n            if (this.options.applyOnClose) {\n                this.applyFilter();\n            }\n        });\n    }\n    headerClickHandler(ev) {\n        ev.preventDefault();\n        if (domel(this.qpBlock).isVisible()) { // close query panel\n            this.hideQueryPanel();\n        }\n        else { //open query panel\n            this.showQueryPanel();\n        }\n    }\n    updateHeader() {\n        if (!this.headerTextElement)\n            return;\n        let text = '';\n        const query = this.getContext().getQuery();\n        if (query) {\n            text = query.getConditionsText();\n        }\n        if (text == '') {\n            text = i18n.getText('StrNoFilterDefined');\n        }\n        domel(this.headerTextElement)\n            .text(text)\n            .attr('title', text);\n        if (!query || query.isEmptyConditions()) { //empty query, don't show query panel and arrow, show link in header\n            domel(this.headerTextElement).hide();\n            domel(this.headerLinkElement).show();\n            if (!domel(this.qpBlock).isVisible()) {\n                domel(this.headerArrowBlock).hide();\n                this.headerElement.style.cursor = '';\n                this.headerElement.removeEventListener('click', this.headerClickListener);\n            }\n        }\n        else {\n            this.headerElement.style.cursor = 'pointer';\n            this.headerElement.removeEventListener('click', this.headerClickListener);\n            this.headerElement.addEventListener('click', this.headerClickListener);\n            domel(this.headerTextElement).show();\n            domel(this.headerLinkElement).hide();\n            domel(this.headerArrowBlock).show();\n        }\n        if (domel(this.qpBlock).isVisible()) { // close query panel\n            this.headerArrowElement.classList.add(`${this.cssPrefix}-header-arrowUp`);\n        }\n        else {\n            this.headerArrowElement.classList.remove(`${this.cssPrefix}-header-arrowUp`);\n        }\n        this.textResize();\n    }\n    render() {\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-container`)\n            .addClass(getMobileCssClass())\n            .addChild('div', builder => this.headerElement = builder\n            .addClass(`${this.cssPrefix}-header`)\n            .addChild('div', builder => this.headerIconElement = builder\n            .addClass(`${this.cssPrefix}-header-icon`)\n            .toDOM())\n            .addChild('div', builder => this.headerTextBlock = builder\n            .addClass(`${this.cssPrefix}-header-textblock`)\n            .addChild('div', builder => this.headerTextElement = builder\n            .addClass(`${this.cssPrefix}-header-text`)\n            .toDOM())\n            .addChild('div', builder => this.headerLinkElement = builder\n            .addClass(`${this.cssPrefix}-header-text ${this.cssPrefix}-header-link`)\n            .text(i18n.getText('StrNoFilterClickToAdd'))\n            .hide()\n            .on('click', () => {\n            this.queryPanel.showEntitiesMenu({\n                anchor: this.headerLinkElement,\n                selectedIds: null,\n                itemSelectedCallback: (item, items) => {\n                    const attrid = item.id;\n                    this.showQueryPanel(() => {\n                        const query = this.getContext().getQuery();\n                        const descr = {\n                            parent: query.getRootCondition(),\n                            attributeId: attrid\n                        };\n                        const cond = query.addSimpleCondition(descr);\n                        if (cond) {\n                            query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                        }\n                    });\n                }\n            });\n        })\n            .toDOM())\n            .toDOM())\n            .addChild('div', builder => this.headerArrowBlock = builder\n            .addClass(`${this.cssPrefix}-header-arrowblock`)\n            .addChild('div', builder => this.headerArrowElement = builder\n            .addClass(`${this.cssPrefix}-header-arrow`)\n            .toDOM())\n            .toDOM())\n            .toDOM())\n            .addChild('div', builder => this.qpBlock = builder\n            .addClass(`${this.cssPrefix}-querypanelblock`)\n            .addClass(getMobileCssClass())\n            .hide()\n            .addChildElement(this.qpElement)\n            .toDOM());\n        if (this.options.showApplyButton || this.options.showClearButton) {\n            this.buttonsBlock = domel('div', this.qpBlock)\n                .addClass(`${this.cssPrefix}-buttonsblock`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        }\n        if (this.options.showApplyButton) {\n            domel('a', this.buttonsBlock)\n                .attr('href', 'javascript:void(0)')\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', this.applyBtnClick.bind(this));\n        }\n        if (this.options.showClearButton) {\n            domel('a', this.buttonsBlock)\n                .attr('href', 'javascript:void(0)')\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-clear`)\n                .text(i18n.getText('CmdClear'))\n                .on('click', this.clearBtnClick.bind(this));\n        }\n        window.addEventListener('resize', () => {\n            this.textResize();\n        });\n        this.updateHeader();\n        this.queryPanel.refresh();\n        setTimeout(() => this.textResize(), 500);\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    applyFilter() {\n        if (this.options.applyFilterCallback) {\n            this.options.applyFilterCallback();\n        }\n    }\n    clearFilter() {\n        const query = this.getContext().getQuery();\n        if (query) {\n            query.clearConditions();\n            query.fireConditionsChangedEvent(QueryChangeAction.All);\n        }\n    }\n    textResize() {\n        this.headerTextBlock.style.width = (this.slot.clientWidth - this.headerIconElement.offsetWidth\n            - (domel(this.headerArrowBlock).isVisible() ? this.headerArrowBlock.offsetWidth : 0)) + \"px\";\n    }\n    destroyCore() {\n        if (this.queryPanel)\n            this.queryPanel.destroy();\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    attachQueryObserver() {\n        const query = this.getContext().getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.updateHeader();\n        });\n    }\n    detachQueryObserver() {\n        const query = this.getContext().getQuery();\n        if (query)\n            query.removeChangedCallback(this.queryEventCallbackId);\n    }\n}\n\n/**\n * The widget responsed for rendering html content\n */\nclass HtmlContentWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.contentElement = slot;\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'htmlContent';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        if (!this.context.resultContent)\n            return;\n        this.render();\n    }\n    /**\n     * Renders widget\n     */\n    render() {\n        if (this.context.resultContent) {\n            this.contentElement.innerHTML += this.context.resultContent;\n        }\n    }\n    /**\n     * Clears content.\n     */\n    clear() {\n        this.contentElement.innerHTML = \"\";\n    }\n    destroyCore() {\n        this.clear();\n    }\n}\n\n/**\n * The widget responsed for rendering html grid.\n */\nclass EqHtmlGrid extends HtmlContentWidget {\n    /**\n    * The default constructor.\n    * @param slot The html element.\n    */\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            maxButtonCount: 10,\n            useBootstrap: false\n        };\n    }\n    getWidgetType() {\n        return 'eqHtmlGrid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        super.refreshCore();\n        this.renderPageNavigator();\n    }\n    destroyCore() {\n        this.slot.innerHTML = '';\n    }\n    /**\n     * Renders page navigator.\n     */\n    renderPageNavigator() {\n        const pageNavigatorPlaceholder = document.getElementById(\"PageNavigator\");\n        if (!pageNavigatorPlaceholder) {\n            return;\n        }\n        const pageCount = parseInt(pageNavigatorPlaceholder.getAttribute('data-pagecount'));\n        const pageIndex = parseInt(pageNavigatorPlaceholder.getAttribute('data-pageindex'));\n        if (pageCount > 1) {\n            let buttonClick = (ev) => {\n                let element = ev.target;\n                if (element.hasAttribute('data-page')) {\n                    const pageNum = parseInt(element.getAttribute('data-page'));\n                    this.context.fetchDataChunk({\n                        chunk: {\n                            page: pageNum\n                        },\n                        success: () => {\n                            this.context.refreshWidgets(WidgetGroup.Result);\n                        }\n                    });\n                }\n            };\n            const maxButtonCount = this.options.maxButtonCount || 10;\n            const zeroBasedIndex = pageIndex - 1;\n            let firstPageIndex = zeroBasedIndex - (zeroBasedIndex % maxButtonCount) + 1;\n            let lastPageIndex = firstPageIndex + maxButtonCount - 1;\n            if (lastPageIndex > pageCount) {\n                lastPageIndex = pageCount;\n            }\n            let ul = document.createElement('ul');\n            if (this.options.useBootstrap) {\n                ul.className = \"pagination\";\n            }\n            else {\n                ul.className = \"eqv-pagination\";\n            }\n            if (this.options.pageItemCssClass) {\n                ul.className += \" \" + (this.options.pageItemCssClass);\n            }\n            let li = document.createElement('li');\n            if (this.options.useBootstrap) {\n                li.className = \"page-item\";\n            }\n            let a = document.createElement('span');\n            a.setAttribute(\"aria-hidden\", 'true');\n            if (this.options.useBootstrap) {\n                a.className = \"page-link\";\n            }\n            if (firstPageIndex == 1) {\n                li.className += \" disabled\";\n            }\n            else {\n                if (this.options.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${firstPageIndex - 1}`);\n                    a.className = \"page-link\";\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute(\"data-page\", `${firstPageIndex - 1}`);\n                    a = newA;\n                }\n                a.addEventListener(\"click\", buttonClick);\n            }\n            a.innerHTML = \"&laquo;\";\n            li.appendChild(a);\n            ul.appendChild(li);\n            for (let i = firstPageIndex; i <= lastPageIndex; i++) {\n                li = document.createElement('li');\n                if (this.options.useBootstrap) {\n                    li.className = \"page-item\";\n                }\n                if (i == pageIndex)\n                    li.className += \" active\";\n                a = document.createElement('a');\n                a.setAttribute('href', 'javascript:void(0)');\n                a.innerHTML = i.toString();\n                a.setAttribute('data-page', i.toString());\n                a.className = \"page-link\";\n                a.addEventListener(\"click\", buttonClick);\n                li.appendChild(a);\n                ul.appendChild(li);\n            }\n            li = document.createElement('li');\n            if (this.options.useBootstrap) {\n                li.className = \"page-item\";\n            }\n            a = document.createElement(\"span\");\n            a.setAttribute('aria-hidden', 'true');\n            if (this.options.useBootstrap) {\n                a.className = \"page-link\";\n            }\n            if (lastPageIndex == pageCount) {\n                li.className += \"disabled\";\n            }\n            else {\n                if (this.options.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${lastPageIndex + 1}`);\n                    a.className += \" page-link\";\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute(\"data-page\", `${lastPageIndex + 1}`);\n                    a = newA;\n                }\n                a.addEventListener(\"click\", buttonClick);\n            }\n            a.innerHTML = \"&raquo;\";\n            li.appendChild(a);\n            ul.appendChild(li);\n            pageNavigatorPlaceholder.appendChild(ul);\n        }\n    }\n}\n\n/**\n * Base class for GRID.\n */\nclass Grid extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            useCustomLocaleSettings: false\n        };\n        this.slot = slot;\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'grid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        if (options) {\n            utils.assignDeep(this.options, options);\n        }\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        if (!this.context.resultTable) {\n            return;\n        }\n        this.render();\n    }\n    /**\n     * Renders widget\n     */\n    render() {\n        if (this.options.beforeTableRendering) {\n            this.options.beforeTableRendering(this.context.resultTable);\n        }\n        this.applyDisplayFormats();\n    }\n    applyDisplayFormats() {\n    }\n    /**\n     * Clears GRID.\n     */\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n}\n\nclass EasyGridWidget extends Grid {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.hasCustomTotalsSettings = false;\n        //!!!! DO NOT forget to add types for options\n        this.options = { autoRefresh: true };\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'easyGrid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        const gridOptions = Object.assign(Object.assign({}, options), { slot: this.slot, dataTable: context.resultTable });\n        this.options = utils.assign(this.options, options);\n        gridOptions.onPlusButtonClick = (ev) => this.addColumnClickHandler(ev);\n        gridOptions.onColumnMoved = (ev) => this.columnMovedHandler(ev);\n        if (gridOptions.aggregates) {\n            this.hasCustomTotalsSettings = true;\n        }\n        else {\n            gridOptions.aggregates = { settings: context.getQuery().getAggregationSettings(), calculator: null };\n        }\n        gridOptions.aggregates.calculator = this.context.getServices()\n            .getAggregatesCalculator(this.context);\n        this.destroy();\n        this.grid = new EasyGrid(gridOptions);\n        if (this.options.autoRefresh) {\n            this.attachQueryObserver();\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.updateTotalsSettings();\n        this.render();\n    }\n    render() {\n        this.createEntitiesMenu();\n        this.grid.refresh();\n    }\n    attachQueryObserver() {\n    }\n    destroyCore() {\n        this.detachQueryObserver();\n        if (this.grid)\n            this.grid.destroy();\n        this.slot.innerHTML = '';\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getContext().getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    updateTotalsSettings() {\n        const context = this.getContext();\n        if (!this.hasCustomTotalsSettings) {\n            const settings = context.getQuery().getAggregationSettings();\n            this.grid.options.aggregates.settings = settings;\n        }\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false });\n        const options = { items: entitiesList, id: menuId };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    getModel() {\n        return this.context.getModel();\n    }\n    getQuery() {\n        return this.context.getQuery();\n    }\n    clear() {\n        if (this.grid)\n            this.grid.clear();\n    }\n    addColumnClickHandler(ev) {\n        this.entitiesMenu.showMenu({\n            anchor: ev.sourceEvent.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const attrid = data.id;\n                this.addNewColumn(attrid);\n                return false;\n            }\n        });\n    }\n    columnMovedHandler(ev) {\n        const query = this.getQuery();\n        const oldIndex = utils.findItemIndexById(query.getColumns(), ev.columnId);\n        if (oldIndex >= 0) {\n            query.moveColumn(oldIndex, ev.newIndex);\n            query.fireChangedEvent({\n                part: QueryChangePart.Columns,\n                action: QueryChangeAction.All,\n                source: this\n            });\n        }\n    }\n    addNewColumn(attrId) {\n        this.getContext().getModel();\n        const query = this.getContext().getQuery();\n        const col = query.addColumn({\n            attributeId: attrId\n        }, true);\n        query.fireChangedEvent({\n            part: QueryChangePart.Columns,\n            action: QueryChangeAction.Add,\n            changee: col,\n            source: this\n        });\n        return col;\n    }\n}\n\n/**\n * The widget responsed for rendering statement.\n * It's usually added for demonstration purposes only.\n */\nclass StatementPanel extends Widget {\n    /**\n     * The  default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.panel = slot;\n        this.group = WidgetGroup.Statement;\n        if (this.panel.tagName !== \"TEXTAREA\") {\n            this.panel.innerHTML = '<div class=\"eqv-sql-panel-result\"></div>';\n            this.panel = this.panel.querySelector('div');\n        }\n    }\n    getWidgetType() {\n        return 'statementPanel';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    render() {\n        this.panel.textContent = this.context.resultStatement ? this.context.resultStatement : \"\";\n        var statementText = this.panel.innerHTML.replace(/\\r\\n/g, \"<br />\").replace(/  /g, \"&nbsp;&nbsp;\");\n        this.panel.innerHTML = statementText;\n    }\n    destroyCore() {\n        this.clear();\n    }\n    clear() {\n        this.panel.innerHTML = \"\";\n    }\n}\n\n/**\n * The widget responsed for rendering process bar.\n */\nclass ProcessWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.element = slot;\n        this.element.style.display = 'none';\n        this.group = WidgetGroup.All;\n    }\n    getWidgetType() {\n        return 'processIndicator';\n    }\n    /**\n     * On process start implementation\n     */\n    onProcessStartCore() {\n        this.element.style.display = '';\n    }\n    /**\n    * On process end implementation\n    */\n    onProcessEndCore() {\n        this.element.style.display = 'none';\n    }\n}\n\nclass ManageDrillDownWidget extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.clickHandler = () => this.openDialog();\n        this.columnsBar = null;\n        this.queryPanel = null;\n        this.ddQuery = null;\n        this.cssPrefix = eqCssPrefix;\n        this.group = WidgetGroup.None;\n    }\n    getWidgetType() {\n        return 'manageDrillDown';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.options = options;\n        this.refresh();\n        this.slot.addEventListener('click', this.clickHandler);\n    }\n    destroyCore() {\n        this.slot.removeEventListener('click', this.clickHandler);\n    }\n    openDialog() {\n        const dialogService = this.context.getServices().getService('DialogService');\n        const query = this.context.getQuery();\n        const model = this.context.getModel();\n        const dialogBody = domel('div')\n            .addClass(`${this.cssPrefix}-manage-drilldown`)\n            .addChildElement(this.renderColumnsBarBlock())\n            .addChildElement(this.renderQueryPanelBlock())\n            .toDOM();\n        let op = model.addOrUpdateOperator({\n            id: 'BindToParentColumn',\n            caption: 'is bound to',\n            format: '{expr1} [[is bound to]] {expr2}',\n            paramCount: 2,\n            kind: DataKind.ParentColumn,\n            appliedTypes: [DataType.String, DataType.Bool, DataType.Float, DataType.Int32, DataType.Int64, DataType.Word]\n        });\n        op.defaultOperand.dataType = DataType.String;\n        op.defaultOperand.kind = DataKind.ParentColumn;\n        model.runThroughEntities(attr => {\n            const opIdx = attr.operators.indexOf(op.id);\n            if (opIdx > 0) {\n                utils.moveArrayItem(attr.operators, opIdx, 0);\n            }\n        }, null);\n        this.ddQuery = query.createSubQuery();\n        const dds = this.context.getQuery().getDrillDowns();\n        if (dds.length) {\n            const dd = dds[0];\n            this.ddQuery.loadFromData(dd.toJSONData());\n        }\n        dialogService.open({\n            title: 'Manage Drill Down',\n            body: dialogBody,\n            cancelable: true,\n            closable: false,\n            beforeOpen: () => {\n                const columnsBarSlot = dialogBody.getElementsByClassName(`${this.cssPrefix}-columnsbar-slot`)[0];\n                this.columnsBar = new ColumnsBar(columnsBarSlot, this.ddQuery);\n                this.columnsBar.init(this.context, this.options.columnsBar);\n                const queryPanelSlot = dialogBody.getElementsByClassName(`${this.cssPrefix}-querypanel-slot`)[0];\n                this.queryPanel = new QueryPanel(queryPanelSlot, this.ddQuery);\n                this.queryPanel.init(this.context, this.options.queryPanel);\n                this.columnsBar.refresh();\n                this.queryPanel.refresh();\n            },\n            onSubmit: () => {\n                return this.submitDialog();\n            },\n            onDestroy: () => {\n                this.destroyDialog();\n            }\n        });\n    }\n    renderQueryPanelBlock() {\n        return domel('div')\n            .addClass(`${this.cssPrefix}-querypanel-block`)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-querypanel-caption`))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-querypanel-slot`))\n            .toDOM();\n    }\n    renderColumnsBarBlock() {\n        return domel('div')\n            .addClass(`${this.cssPrefix}-columnsbar-block`)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-columnsbar-caption`))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-columnsbar-slot`))\n            .toDOM();\n    }\n    submitDialog() {\n        if (this.ddQuery.tryValidate({\n            checkExpressions: true\n        })) {\n            const dds = this.context.getQuery().getDrillDowns();\n            if (dds.length) {\n                dds[0].loadFromData(this.ddQuery.toJSONData());\n                this.context.getQuery().fireChangedEvent();\n            }\n            else {\n                if (!this.ddQuery.isEmpty()) {\n                    const dd = this.context.getQuery().addDrillDown();\n                    dd.loadFromData(this.ddQuery.toJSONData());\n                    this.context.getQuery().fireChangedEvent();\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    destroyDialog() {\n        const model = this.context.getModel();\n        model.removeOperator('BindToParentColumn', true);\n        this.ddQuery = null;\n        this.columnsBar && this.columnsBar.destroy();\n        this.columnsBar = null;\n        this.queryPanel && this.queryPanel.destroy();\n        this.queryPanel = null;\n    }\n}\n\nvar FacetType;\n(function (FacetType) {\n    FacetType[\"DataGrid\"] = \"DATA_GRID\";\n    FacetType[\"Chart\"] = \"CHART\";\n    FacetType[\"PivotTable\"] = \"PIVOT_TABLE\";\n})(FacetType || (FacetType = {}));\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nclass ResultFacet {\n    constructor(container, options) {\n        this.container = container;\n        this.title = i18n.getText('Facets', 'DefaultFacetTitle');\n        this.cssPrefix = 'eqjs-facet';\n        this.dialogTitle = i18n.getText('Facets', 'DefaultDlgTitle');\n        this.options = {};\n        this.canDisplayFlag = true;\n        this.downloadAllClickHandler = () => {\n            const resultTable = this.getContext().resultTable;\n            if (!resultTable.elasticChunks) {\n                const nextChunkStart = resultTable.getCachedRows().length;\n                const recordsToLoad = resultTable.getTotal() - resultTable.getCachedCount();\n                const ds = this.getDialogService();\n                const dlg = ds.openProgress({\n                    title: i18n.getText('Facets', 'LoadDataDlgTitle'),\n                    content: i18n.getText('Facets', 'LoadDataDlgContent')\n                        .replace('{loadedRecs}', '0')\n                        .replace('{totalRecs}', `${recordsToLoad}`),\n                    onSubmit: () => this.refresh(),\n                    determinated: true\n                });\n                let loadedRecords = 0;\n                setTimeout(() => {\n                    resultTable.getRows({ offset: nextChunkStart, limit: recordsToLoad })\n                        .then(_ => {\n                        loadedRecords += _.length;\n                        const progress = loadedRecords / recordsToLoad;\n                        dlg.updateContent(i18n.getText('Facets', 'LoadDataDlgContent')\n                            .replace('{loadedRecs}', `${loadedRecords}`)\n                            .replace('{totalRecs}', `${recordsToLoad}`));\n                        dlg.updateProgress(progress);\n                    })\n                        .catch(error => {\n                        dlg.submit();\n                        this.getContext().throwError(error);\n                    });\n                }, 10);\n            }\n            else {\n                const ds = this.getDialogService();\n                const dlg = ds.openProgress({\n                    title: i18n.getText('Facets', 'LoadDataDlgTitle'),\n                    onSubmit: () => this.refresh(),\n                    determinated: false\n                });\n                this.loadElasticChunk()\n                    .then(_ => {\n                    dlg.submit();\n                })\n                    .catch(error => {\n                    dlg.submit();\n                    this.getContext().throwError(error);\n                });\n            }\n        };\n        utils.assignDeep(this.options, options);\n    }\n    init(slot) {\n        this.slot = slot;\n        this.contentDiv = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-content`)\n            .toDOM();\n        this.displayMessageDiv = domel('div', this.slot).hide().toDOM();\n    }\n    showSettingsDialog() {\n        return new Promise((resolve) => {\n            const ds = this.getDialogService();\n            const content = this.renderDialogContent();\n            const dlg = ds.open({\n                title: this.dialogTitle,\n                body: content,\n                cancelable: true,\n                closable: false,\n                onSubmit: () => {\n                    const submited = this.submitSettingsDialog();\n                    if (submited) {\n                        resolve(true);\n                    }\n                    return submited;\n                },\n                onCancel: () => {\n                    resolve(false);\n                }\n            });\n            this.afterDialogOpened(dlg);\n        });\n    }\n    afterDialogOpened(dlg) {\n    }\n    renderDialogContent() {\n        let fieldsContainer;\n        let b = domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => fieldsContainer = b\n            .addClass(`${browserUtils.isIE()\n            ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n            : 'kfrm-fields col-a-1 label-align-right'}`)\n            .toDOM());\n        this.renderFormFields(b.toDOM(), fieldsContainer);\n        return b.toDOM();\n    }\n    renderFormFields(form, fieldsContainer) {\n        let cont = fieldsContainer;\n        if (browserUtils.isIE()) {\n            cont = domel('div', fieldsContainer)\n                .addClass('kfrm-field-ie')\n                .toDOM();\n        }\n        domel(cont)\n            .addChild('label', b => b\n            .attr('for', 'tab_name')\n            .addText(i18n.getText('Facets', 'TabNameLabel')))\n            .addChild('input', b => b\n            .id('facetTabName')\n            .name('tab_name')\n            .type('text')\n            .attr('value', this.title));\n    }\n    submitSettingsDialog() {\n        const tabNameInput = document.querySelector('#facetTabName');\n        if (tabNameInput.value.length == 0)\n            return false;\n        this.title = tabNameInput.value;\n        return true;\n    }\n    getDialogService() {\n        return this.getContext()\n            .getServices()\n            .getService('DialogService');\n    }\n    canDisplay() {\n        const context = this.getContext();\n        const resultTable = context.resultTable;\n        return (resultTable.getCachedCount() == resultTable.getTotal());\n    }\n    showErrorMessage(message) {\n        this.displayMessageDiv.innerHTML = message;\n        this.displayMessageDiv.classList.add(`${this.cssPrefix}-error-message`);\n        domel(this.displayMessageDiv).show();\n    }\n    showUnableDisplayMessage(message) {\n        const context = this.getContext();\n        const resultTable = context.resultTable;\n        this.displayMessageDiv.innerHTML = message || i18n.getText('Facets', 'ErrNotEnoughData')\n            .replace('{totalRecs}', `${resultTable.getTotal()}`)\n            .replace('{cachedRecs}', `${resultTable.getCachedCount()}`)\n            .replace(/\\[(.*)\\]/g, `<a href='javascript:void(0)' class=\"${this.cssPrefix}-download-all-link\">$1</a>`);\n        const link = this.displayMessageDiv.querySelector(`a.${this.cssPrefix}-download-all-link`);\n        if (link) {\n            link.addEventListener('click', this.downloadAllClickHandler);\n        }\n        domel(this.contentDiv).hide();\n        domel(this.displayMessageDiv).show();\n    }\n    hideUnableDisplayMessage() {\n        domel(this.displayMessageDiv).hide();\n        domel(this.contentDiv).show();\n    }\n    getContext() {\n        return this.container.getContext();\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    saveToData() {\n        return { title: this.title, type: this.getType() };\n    }\n    loadFromData(data) {\n        if (data) {\n            this.title = data.title;\n        }\n    }\n    refresh() {\n        this.hideUnableDisplayMessage();\n        if (this.canDisplay()) {\n            this.refreshCore();\n        }\n        else {\n            this.showUnableDisplayMessage();\n        }\n    }\n    loadElasticChunk() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resultTable = this.getContext().resultTable;\n            const nextChunkStart = resultTable.getCachedRows().length;\n            //next chunk\n            return resultTable.getRows({ offset: nextChunkStart, limit: resultTable.chunkSize })\n                .then(_ => {\n                return resultTable.totalIsKnown()\n                    ? Promise.resolve()\n                    : this.loadElasticChunk();\n            });\n        });\n    }\n    onResize() {\n    }\n}\n\n/** Represents chart types. */\nvar ChartType;\n(function (ChartType) {\n    ChartType[ChartType[\"Column\"] = 3] = \"Column\";\n    ChartType[ChartType[\"Histogram\"] = 4] = \"Histogram\";\n    ChartType[ChartType[\"Bar\"] = 5] = \"Bar\";\n    ChartType[ChartType[\"Combo\"] = 6] = \"Combo\";\n    ChartType[ChartType[\"Area\"] = 7] = \"Area\";\n    ChartType[ChartType[\"Line\"] = 9] = \"Line\";\n    ChartType[ChartType[\"Pie\"] = 10] = \"Pie\";\n    ChartType[ChartType[\"Polar\"] = 11] = \"Polar\";\n    ChartType[ChartType[\"Doughnut\"] = 12] = \"Doughnut\";\n    ChartType[ChartType[\"Radar\"] = 13] = \"Radar\";\n    ChartType[ChartType[\"SteppedLine\"] = 14] = \"SteppedLine\";\n})(ChartType || (ChartType = {}));\n\nclass ChartWidget extends Widget {\n    get cssPrefix() {\n        return 'eqjs-chart';\n    }\n    /**\n     Initializes a new instance of the `ChartWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.chartType = ChartType.Pie;\n        this.supportedChartTypes = [];\n        this.dataTable = null;\n        this.potentialLabelColumns = [];\n        this.potentialDataColumns = [];\n        this.labelColumn = -1;\n        this.dataColumns = [];\n        this.options = {\n            chartType: ChartType.Pie,\n            showOnPaging: false,\n            hideSettings: false,\n            legend: {\n                show: false,\n                position: 'right'\n            }\n        };\n        this.element = slotElement;\n        this.group = WidgetGroup.Result;\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.dataTable = context.resultTable;\n        this.setOptions(options);\n    }\n    /**\n     * Checks, if widget has data.\n     * @returns `true` if has data, otherwise - `false`.\n     */\n    hasData() {\n        let result = this.dataTable != null;\n        if (result) {\n            result = this.dataTable.getCachedCount() > 0;\n        }\n        return result;\n    }\n    /**\n     * Checks, if there ara colums for chart\n     * @returns `true` if there are columns, otherwise - `false`.\n     */\n    hasColumnsForChart() {\n        return this.potentialLabelColumns.length > 0 && this.potentialDataColumns.length > 0;\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.prepareChartData();\n        this.render();\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        this.supportedChartTypes = this.getSupportedChartTypes();\n        if (this.supportedChartTypes.length == 0) {\n            throw Error(\"Chart widget should support at least one chart type\");\n        }\n        if (options.chartType && this.supportedChartTypes.indexOf(options.chartType) >= 0) {\n            this.chartType = options.chartType;\n        }\n        else {\n            this.chartType = this.supportedChartTypes[0];\n        }\n    }\n    getOptions() {\n        return this.options;\n    }\n    getChartTypeName(ct) {\n        switch (ct) {\n            case ChartType.Area:\n                return i18n.getText('ChartType', 'Area');\n            case ChartType.Bar:\n                return i18n.getText('ChartType', 'Bar');\n            case ChartType.Column:\n                return i18n.getText('ChartType', 'Column');\n            case ChartType.Combo:\n                return i18n.getText('ChartType', 'Combo');\n            case ChartType.Doughnut:\n                return i18n.getText('ChartType', 'Doughnut');\n            case ChartType.Polar:\n                return i18n.getText('ChartType', 'Polar');\n            case ChartType.Radar:\n                return i18n.getText('ChartType', 'Radar');\n            case ChartType.Histogram:\n                return i18n.getText('ChartType', 'Histogram');\n            case ChartType.Line:\n                return i18n.getText('ChartType', 'Line');\n            case ChartType.SteppedLine:\n                return i18n.getText('ChartType', 'SteppedLine');\n            default:\n                return i18n.getText('ChartType', 'Pie');\n        }\n    }\n    updateSettings(settings, updateColumns = true) {\n        if (typeof settings.showLegend !== 'undefined') {\n            this.options.legend = this.options.legend || {};\n            this.options.legend.show = settings.showLegend;\n        }\n        this.chartType = settings.type;\n        this.labelColumn = settings.labelColumn;\n        this.dataColumns[0] = settings.dataColumn;\n        if (updateColumns)\n            this.updateChartColumns();\n    }\n    /**\n     * Prepares data for chart.\n     */\n    prepareChartData() {\n        if (this.dataTable) {\n            this.potentialLabelColumns = [];\n            this.potentialDataColumns = [];\n            let colNum = this.dataTable.columns.count;\n            for (let i = 0; i < colNum; i++) {\n                const column = this.dataTable.columns.get(i);\n                let colType = column.type;\n                let colLabel = column.label;\n                this.potentialLabelColumns.push({ idx: i, label: colLabel });\n                if (utils.isNumericType(colType)) {\n                    this.potentialDataColumns.push({ idx: i, label: colLabel });\n                }\n            }\n            if (this.labelColumn != -1) {\n                if (!this.potentialLabelColumns\n                    .filter(c => c.idx == this.labelColumn)\n                    .length) {\n                    this.labelColumn = -1;\n                }\n            }\n            else {\n                this.labelColumn = (this.potentialLabelColumns.length > 0)\n                    ? this.potentialLabelColumns[0].idx : -1;\n            }\n            if (this.dataColumns.length) {\n                const ids = this.potentialDataColumns.map(d => d.idx);\n                this.dataColumns = this.dataColumns.filter(v => ids.indexOf(v) >= 0);\n                if (!this.dataColumns.length) {\n                    this.dataColumns = (this.potentialDataColumns.length > 0)\n                        ? [].concat(this.potentialDataColumns[0].idx)\n                        : [];\n                }\n            }\n            else {\n                this.dataColumns = (this.potentialDataColumns.length > 0)\n                    ? [].concat(this.potentialDataColumns[0].idx)\n                    : [];\n            }\n            this.initChart();\n        }\n    }\n    getSupportedChartTypes() {\n        const chartTypes = this.options.supportedChartTypes\n            ? this.options.supportedChartTypes\n            : Object.keys(ChartType).map(key => ChartType[key]);\n        return chartTypes.filter(type => this.hasChartTypes.indexOf(type) >= 0);\n    }\n    getCurrentChartType() {\n        return this.chartType;\n    }\n    render() {\n        this.clear();\n        if (this.hasData() && this.hasColumnsForChart()\n            && (this.context.resultTable.getTotal()\n                == this.context.resultTable.getCachedCount())) {\n            let headerDiv = document.createElement('div');\n            addCssClass(headerDiv, `${this.cssPrefix}-header`);\n            let mainDiv = document.createElement('div');\n            addCssClass(mainDiv, `${this.cssPrefix}-main`);\n            if (this.canDraw()) {\n                let chartTypeSelector = document.createElement('select');\n                for (let ct of this.supportedChartTypes) {\n                    let sopt = document.createElement('option');\n                    sopt.value = ct.toString();\n                    sopt.text = this.getChartTypeName(ct);\n                    chartTypeSelector.appendChild(sopt);\n                }\n                chartTypeSelector.value = this.chartType.toString();\n                headerDiv.appendChild(chartTypeSelector);\n                chartTypeSelector.addEventListener('change', (ev) => {\n                    let ctkey = ev.target.value;\n                    this.chartType = parseInt(ctkey);\n                    this.refresh();\n                });\n                this.settingsDiv = document.createElement('div');\n                addCssClass(this.settingsDiv, `${this.cssPrefix}-settings`);\n                hideElement(this.settingsDiv);\n                mainDiv.appendChild(this.settingsDiv);\n                this.chartDiv = document.createElement('div');\n                addCssClass(this.chartDiv, `${this.cssPrefix}-content`);\n                hideElement(this.chartDiv);\n                mainDiv.appendChild(this.chartDiv);\n                this.initSettingsDiv();\n                let chartSettingsBtn = document.createElement('div');\n                addCssClass(chartSettingsBtn, `${this.cssPrefix}-settings-icon`);\n                chartSettingsBtn.title = \"Settings\";\n                headerDiv.appendChild(chartSettingsBtn);\n                chartSettingsBtn.addEventListener('click', (ev) => {\n                    this.toggleSettings();\n                });\n                this.drawChart(100);\n            }\n            else {\n                this.addContentDiv(mainDiv, 'Unable to render  the chart. None of the supported chart libraries (ChartJS, Google Charts, etc) is found.');\n            }\n            if (!this.options.hideSettings) {\n                this.element.appendChild(headerDiv);\n            }\n            this.element.appendChild(mainDiv);\n            this.element.style.display = \"\";\n        }\n        else {\n            this.element.style.display = \"none\";\n        }\n    }\n    addContentDiv(mainDiv, text) {\n        let contentDiv = document.createElement('div');\n        addCssClass(contentDiv, `${this.cssPrefix}-no-data`);\n        contentDiv.innerText = text;\n        mainDiv.appendChild(contentDiv);\n    }\n    /**\n     * Clears the chart.\n     */\n    clear() {\n        this.element.innerHTML = '';\n    }\n    /**\n     * Draws chart with a delay.\n     * @param delay The delay.\n     */\n    drawChart(delay) {\n        showElement(this.chartDiv);\n        if (delay > 0) {\n            setTimeout(() => this.drawCore(), delay);\n        }\n        else {\n            this.drawCore();\n        }\n    }\n    /**\n     * Inititializes the settings div.\n     */\n    initSettingsDiv() {\n        let settingsHeader = document.createElement('div');\n        settingsHeader.textContent = 'SETTINGS';\n        addCssClass(settingsHeader, `${this.cssPrefix}-settings-header`);\n        this.settingsDiv.appendChild(settingsHeader);\n        // Label column\n        let labelDiv = document.createElement('div');\n        addCssClass(labelDiv, `${this.cssPrefix}-settings-single`);\n        this.settingsDiv.appendChild(labelDiv);\n        let labelColumnSelectorCaption = document.createElement('span');\n        showElement(labelColumnSelectorCaption);\n        labelColumnSelectorCaption.textContent = 'Label column';\n        labelDiv.appendChild(labelColumnSelectorCaption);\n        let labelColumnSelector = document.createElement('select');\n        showElement(labelColumnSelector);\n        labelDiv.appendChild(labelColumnSelector);\n        for (let col of this.potentialLabelColumns) {\n            let sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            labelColumnSelector.appendChild(sopt);\n        }\n        if (this.labelColumn >= 0) {\n            labelColumnSelector.value = this.labelColumn.toString();\n        }\n        labelColumnSelector.addEventListener('change', (ev) => {\n            this.labelColumn = parseInt(ev.target.value);\n            this.updateChartColumns();\n            this.toggleSettings(() => {\n                this.drawChart(100);\n            });\n        });\n        // Data column\n        let dataDiv = document.createElement('div');\n        addCssClass(dataDiv, `${this.cssPrefix}-settings-single`);\n        this.settingsDiv.appendChild(dataDiv);\n        let dataColumnSelectorCaption = document.createElement('span');\n        showElement(dataColumnSelectorCaption);\n        dataColumnSelectorCaption.textContent = 'Data column';\n        dataDiv.appendChild(dataColumnSelectorCaption);\n        let dataColumnSelector = document.createElement('select');\n        showElement(dataColumnSelector);\n        dataDiv.appendChild(dataColumnSelector);\n        for (let col of this.potentialDataColumns) {\n            let sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            dataColumnSelector.appendChild(sopt);\n        }\n        if (this.dataColumns.length > 0 && this.dataColumns[0] >= 0) {\n            dataColumnSelector.value = this.dataColumns[0].toString();\n        }\n        dataColumnSelector.addEventListener('change', (ev) => {\n            this.dataColumns[0] = parseInt(ev.target.value);\n            this.updateChartColumns();\n            this.toggleSettings(() => {\n                this.drawChart(100);\n            });\n        });\n    }\n    getPotentialLabelColumns() {\n        return this.potentialLabelColumns;\n    }\n    getPotentialDataColumns() {\n        return this.potentialDataColumns;\n    }\n    getLabelColumnIndex() {\n        return this.labelColumn;\n    }\n    getDataColumnIndex() {\n        return this.dataColumns[0];\n    }\n    /**\n     * Toggles settings.\n     * @param callback The callback.\n     */\n    toggleSettings(callback) {\n        let first;\n        let second;\n        if (isVisible(this.chartDiv)) {\n            first = this.chartDiv;\n            second = this.settingsDiv;\n        }\n        else {\n            first = this.settingsDiv;\n            second = this.chartDiv;\n        }\n        toggleVisibility(first, second, {\n            complete: callback\n        });\n    }\n}\n\nclass ChartJsWidget extends ChartWidget {\n    /**\n     Initializes a new instance of the `ChartJsWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.colors = [\n            '#4dc9f6',\n            '#f67019',\n            '#f53794',\n            '#537bc4',\n            '#acc236',\n            '#166a8f',\n            '#00a950',\n            '#58595b',\n            '#8549ba'\n        ];\n        this.chartLabels = [];\n        this.chartColumns = [];\n        this.hasChartTypes = [\n            ChartType.Column,\n            ChartType.Bar,\n            ChartType.Area,\n            ChartType.Line,\n            ChartType.SteppedLine,\n            ChartType.Doughnut,\n            ChartType.Polar,\n            ChartType.Radar,\n            ChartType.Pie\n            // ChartType.Bubble,\n            // ChartType.Scatter\n        ];\n        this.options.legend = {\n            show: false,\n            position: 'bottom'\n        };\n    }\n    getWidgetType() {\n        return 'chartChartJs';\n    }\n    static hasChartJs() {\n        return typeof Chart !== 'undefined';\n    }\n    canDraw() {\n        return ChartJsWidget.hasChartJs();\n    }\n    initChart() {\n        if (ChartJsWidget.hasChartJs() && this.labelColumn >= 0\n            && this.dataColumns && this.dataColumns.length > 0) {\n            this.updateChartColumns();\n        }\n    }\n    drawCore() {\n        if (ChartJsWidget.hasChartJs() && this.dataTable\n            && this.dataTable.getCachedCount() > 0) {\n            let config = this.generateConfig();\n            let chartCanvas = this.getChartCanvas(this.chartDiv);\n            let chartContext = chartCanvas.getContext('2d');\n            new Chart(chartContext, config);\n        }\n    }\n    updateChartColumns() {\n        if (this.dataTable) {\n            this.chartLabels = [];\n            this.chartColumns = [];\n            const rows = this.dataTable.getCachedRows();\n            for (let i = 0; i < rows.length; i++) {\n                this.chartLabels.push(rows[i].getValue(this.labelColumn));\n                this.chartColumns.push(rows[i].getValue(this.dataColumns[0]));\n            }\n        }\n    }\n    getChartCanvas(slot) {\n        let result;\n        //find canvas element\n        let canvases = slot.getElementsByTagName('canvas');\n        if (canvases && canvases.length > 0) {\n            result = canvases[0];\n        }\n        else {\n            result = addElement(slot, 'canvas');\n        }\n        return result;\n    }\n    generateConfig() {\n        let dataColors = [];\n        let datasetName = this.dataTable.columns.get(this.dataColumns[0]).label;\n        let fillValue = true;\n        let borderColor;\n        if (this.chartType == ChartType.Pie\n            || this.chartType == ChartType.Doughnut\n            || this.chartType == ChartType.Polar\n            || this.chartType == ChartType.Bar\n            || this.chartType == ChartType.Column) {\n            for (let i = 0; i < this.chartLabels.length; i++) {\n                dataColors.push(this.colors[i % this.colors.length]);\n            }\n        }\n        else {\n            dataColors = [this.colors[3]];\n        }\n        if (this.chartType == ChartType.Line\n            || this.chartType == ChartType.SteppedLine) {\n            fillValue = false;\n            borderColor = this.colors[3];\n        }\n        this.options.legend = this.options.legend || {};\n        const dataset1 = {\n            data: this.chartColumns,\n            backgroundColor: dataColors,\n            borderColor: borderColor,\n            label: datasetName,\n            fill: fillValue\n        };\n        if (this.chartType == ChartType.SteppedLine) {\n            dataset1.stepped = this.chartType === ChartType.SteppedLine, // >= 3.0.0\n                dataset1.steppedLine = this.chartType === ChartType.SteppedLine; // <= 3.0.0\n        }\n        const displayLegend = this.options.legend.show && (this.chartType == ChartType.Pie\n            || this.chartType == ChartType.Radar || this.chartType == ChartType.Polar\n            || this.chartType == ChartType.Doughnut);\n        return {\n            type: this.getChartType(),\n            data: {\n                datasets: [dataset1],\n                labels: this.chartLabels\n            },\n            options: {\n                legend: {\n                    display: displayLegend,\n                    position: this.options.legend.position || 'bottom'\n                },\n                title: {\n                    display: true,\n                    text: datasetName\n                }\n            }\n        };\n    }\n    getChartType() {\n        switch (this.chartType) {\n            case ChartType.Column:\n                return \"bar\";\n            case ChartType.Bar:\n                return \"horizontalBar\";\n            case ChartType.Area:\n            case ChartType.SteppedLine:\n            case ChartType.Line:\n                return \"line\";\n            case ChartType.Doughnut:\n                return \"doughnut\";\n            case ChartType.Polar:\n                return \"polarArea\";\n            case ChartType.Radar:\n                return \"radar\";\n            case ChartType.Pie:\n                return \"pie\";\n            default:\n                return \"pie\";\n        }\n    }\n}\n\nclass GoogleChartWidget extends ChartWidget {\n    /**\n     Initializes a new instance of the `GoogleChartWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.hasChartTypes = [\n            ChartType.Column,\n            ChartType.Bar,\n            ChartType.Histogram,\n            ChartType.Combo,\n            ChartType.Area,\n            ChartType.Line,\n            ChartType.SteppedLine,\n            ChartType.Pie,\n            ChartType.Doughnut\n        ];\n        this.options.legend = {\n            show: true,\n            position: 'right'\n        };\n    }\n    getWidgetType() {\n        return 'chartGoogle';\n    }\n    canDraw() {\n        return GoogleChartWidget.hasGoogleCharts();\n    }\n    static hasGoogleCharts() {\n        return typeof google !== 'undefined' && typeof google.charts !== 'undefined';\n    }\n    initChart() {\n        if (GoogleChartWidget.hasGoogleCharts() && this.labelColumn >= 0\n            && this.dataColumns && this.dataColumns.length > 0) {\n            this.googleDataView =\n                new google.visualization.DataView(this.convertToGoogleFormat());\n            this.updateChartColumns();\n        }\n    }\n    convertToGoogleType(type) {\n        switch (type) {\n            case DataType.Date:\n                return \"date\";\n            case DataType.DateTime:\n                return \"datetime\";\n            case DataType.Time:\n                return \"timeofday\";\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Int32:\n            case DataType.Int64:\n            case DataType.Currency:\n            case DataType.Float:\n                return \"number\";\n            default:\n                return \"string\";\n        }\n    }\n    convertToGoogleValue(value, type) {\n        switch (type) {\n            case DataType.Bool:\n                return value ? value.toString() : null;\n            default:\n                return value;\n        }\n    }\n    convertToGoogleFormat() {\n        const googleTable = new google.visualization.DataTable();\n        const columns = this.dataTable.columns;\n        for (let i = 0; i < columns.count; i++) {\n            const column = columns.get(i);\n            googleTable.addColumn(this.convertToGoogleType(column.type), column.label, column.id);\n        }\n        const rows = this.dataTable.getCachedRows();\n        googleTable.addRows(rows.length);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            for (let j = 0; j < columns.count; j++) {\n                googleTable.setCell(i, j, this.convertToGoogleValue(row.getValue(j), columns.get(j).type));\n            }\n        }\n        return googleTable;\n    }\n    drawCore() {\n        if (this.googleDataView != null) {\n            this.options.legend = this.options.legend || {};\n            let chartOptions = {\n                width: \"100%\",\n                height: \"100%\",\n                chartArea: { width: this.getChartAreaWidth }\n            };\n            if (this.chartType == ChartType.Doughnut) {\n                chartOptions.pieHole = 0.4;\n            }\n            if (!this.options.legend.show) {\n                chartOptions.legend = 'none';\n            }\n            else {\n                chartOptions.legend = { position: this.options.legend.position };\n            }\n            let chart = this.createChart(this.chartDiv);\n            chart.draw(this.googleDataView, chartOptions);\n        }\n    }\n    getChartAreaWidth(chartType) {\n        if (chartType == ChartType.Pie) {\n            return \"100%\";\n        }\n        else {\n            return \"50%\";\n        }\n    }\n    updateChartColumns() {\n        if (this.googleDataView) {\n            this.googleDataView.setColumns([].concat(this.labelColumn).concat(this.dataColumns));\n        }\n    }\n    createChart(slot) {\n        switch (this.chartType) {\n            case ChartType.Column:\n                return new google.visualization.ColumnChart(slot);\n            case ChartType.Histogram:\n                return new google.visualization.Histogram(slot);\n            case ChartType.Bar:\n                return new google.visualization.BarChart(slot);\n            case ChartType.Combo:\n                return new google.visualization.ComboChart(slot);\n            case ChartType.Area:\n                return new google.visualization.AreaChart(slot);\n            case ChartType.Line:\n                return new google.visualization.LineChart(slot);\n            case ChartType.SteppedLine:\n                return new google.visualization.SteppedAreaChart(slot);\n            case ChartType.Pie:\n            case ChartType.Doughnut:\n                return new google.visualization.PieChart(slot);\n            default:\n                return new google.visualization.PieChart(slot);\n        }\n    }\n}\n\nclass ChartFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.title = i18n.getText('Facets', 'Chart', 'FacetTitle');\n        this.dialogTitle = i18n.getText('Facets', 'Chart', 'DlgTitle');\n    }\n    init(slot) {\n        super.init(slot);\n        if (GoogleChartWidget.hasGoogleCharts()) {\n            this.chart = new GoogleChartWidget(this.contentDiv);\n        }\n        else {\n            this.chart = new ChartJsWidget(this.contentDiv);\n        }\n        const supportedChartTypes = this.container.options\n            ? this.container.options.supportedChartTypes\n            : null;\n        this.chart.init(this.getContext(), {\n            legend: {\n                show: false\n            },\n            showOnPaging: true,\n            hideSettings: true,\n            supportedChartTypes: supportedChartTypes\n        });\n        //prevent showing chart tab\n        domel(this.slot).hide();\n    }\n    destroy() {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n    }\n    getType() {\n        return FacetType.Chart;\n    }\n    renderFormFields(form, fieldsContainer) {\n        super.renderFormFields(form, fieldsContainer);\n        const isIE = browserUtils.isIE();\n        const horizClass = isIE ? 'kfrm-fields-ie is-horizontal' : 'kfrm-fields is-horizontal';\n        // Chart type\n        let chartTypeSelector = document.createElement('select');\n        chartTypeSelector.id = 'chart_type_selector';\n        chartTypeSelector.name = 'chart_type_selector';\n        for (let ct of this.chart.getSupportedChartTypes()) {\n            let sopt = document.createElement('option');\n            sopt.value = ct.toString();\n            sopt.text = this.chart.getChartTypeName(ct);\n            chartTypeSelector.appendChild(sopt);\n        }\n        chartTypeSelector.value = this.chart.getCurrentChartType().toString();\n        if (!this.settings) {\n            this.chart.prepareChartData();\n            this.settings = {\n                type: this.chart.getCurrentChartType().toString(),\n                labelColumn: `${this.chart.getLabelColumnIndex() >= 0 ? this.chart.getLabelColumnIndex() : ''}`,\n                dataColumn: `${this.chart.getDataColumnIndex() >= 0 ? this.chart.getDataColumnIndex() : ''}`,\n                showLegend: false\n            };\n        }\n        // Label column\n        const labelColumnSelector = document.createElement('select');\n        labelColumnSelector.name = 'label_column_selector';\n        labelColumnSelector.id = 'label_column_selector';\n        for (const col of this.chart.getPotentialLabelColumns()) {\n            const sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            labelColumnSelector.appendChild(sopt);\n        }\n        labelColumnSelector.value = this.settings.labelColumn;\n        // Data column\n        const dataColumnSelector = document.createElement('select');\n        dataColumnSelector.id = 'data_column_selector';\n        dataColumnSelector.name = 'data_column_selector';\n        for (const col of this.chart.getPotentialDataColumns()) {\n            const sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            dataColumnSelector.appendChild(sopt);\n        }\n        dataColumnSelector.value = this.settings.dataColumn.toString();\n        let current = fieldsContainer;\n        const getCurrent = () => {\n            if (isIE) {\n                return domel('div', fieldsContainer)\n                    .addClass('kfrm-field-ie')\n                    .toDOM();\n            }\n            else {\n                return fieldsContainer;\n            }\n        };\n        if (isIE) {\n            domel(form)\n                .addChildElement(getCurrent());\n        }\n        else {\n            domel(fieldsContainer)\n                .addChild('div')\n                .addChild('div');\n        }\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'chart_type_selector')\n            .text(i18n.getText('Facets', 'Chart', 'ChartTypeSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(chartTypeSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'label_column_selector')\n            .text(i18n.getText('Facets', 'Chart', 'LabelColumnSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(labelColumnSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'data_column_selector')\n            .text(i18n.getText('Facets', 'Chart', 'DataColumnSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(dataColumnSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('div')\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('show_legend')\n                .type('checkbox');\n            if (this.settings.showLegend)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Chart', 'ShowLegendLabel'))));\n    }\n    afterDialogOpened(dlg) {\n        if (this.getContext().resultTable.columns.getItems().filter(col => utils.isNumericType(col.type)).length <= 0) {\n            dlg.showAlert('The dataset should contain at least one numeric column to build a chart', 'error');\n            dlg.getSubmitButtonElement().disabled = true;\n        }\n    }\n    submitSettingsDialog() {\n        const result = super.submitSettingsDialog();\n        const chartTypeSelector = document.getElementById('chart_type_selector');\n        const ct = parseInt(chartTypeSelector.value);\n        const labelColumnSelector = document.getElementById('label_column_selector');\n        const labelColumn = parseInt(labelColumnSelector.value);\n        const dataColumnSelector = document.getElementById('data_column_selector');\n        const dataColumn = parseInt(dataColumnSelector.value);\n        const showLegendInput = document.getElementById('show_legend');\n        const showLegend = showLegendInput.checked;\n        if (result) {\n            this.settings = {\n                type: ct,\n                labelColumn: labelColumn,\n                dataColumn: dataColumn,\n                showLegend: showLegend\n            };\n            if (this.canDisplay()) {\n                this.refresh();\n            }\n        }\n        return result;\n    }\n    getSettings() {\n        return this.settings;\n    }\n    saveToData() {\n        const data = super.saveToData();\n        if (this.settings) {\n            data.chartType = this.settings.type;\n            data.labelCol = this.settings.labelColumn;\n            data.dataCol = this.settings.dataColumn;\n            data.showLeg = this.settings.showLegend;\n        }\n        return data;\n    }\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            this.settings = {\n                type: data.chartType,\n                dataColumn: data.dataCol,\n                labelColumn: data.labelCol,\n                showLegend: data.showLeg\n            };\n        }\n    }\n    refreshCore() {\n        if (this.chart) {\n            if (this.settings) {\n                this.chart.updateSettings(this.settings);\n            }\n            this.chart.prepareChartData();\n            this.chart.refresh();\n        }\n    }\n    onResize() {\n        this.refresh();\n    }\n}\n\nvar AggrFunc;\n(function (AggrFunc) {\n    AggrFunc[\"Sum\"] = \"SUM\";\n    AggrFunc[\"Average\"] = \"AVG\";\n    AggrFunc[\"Min\"] = \"MIN\";\n    AggrFunc[\"Max\"] = \"MAX\";\n    AggrFunc[\"Count\"] = \"COUNT\";\n})(AggrFunc || (AggrFunc = {}));\nvar FormFieldType;\n(function (FormFieldType) {\n    FormFieldType[FormFieldType[\"ColumnField\"] = 0] = \"ColumnField\";\n    FormFieldType[FormFieldType[\"RowField\"] = 1] = \"RowField\";\n    FormFieldType[FormFieldType[\"CellData\"] = 2] = \"CellData\";\n})(FormFieldType || (FormFieldType = {}));\nconst DFMT_REGEX = /{0:(.*?)}/g;\nclass PivotTableFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.title = i18n.getText('Facets', 'Pivot', 'FacetTitle');\n        this.dialogTitle = i18n.getText('Facets', 'Pivot', 'DlgTitle');\n        this.pivotTable = new EasyDataTable();\n        this.settings = {};\n    }\n    init(slot) {\n        super.init(slot);\n        this.options.maxRowCount = this.options.maxRowCount || 500;\n        this.options.viewportRowsCount = this.options.viewportRowsCount || 50;\n        this.grid = new EasyGrid({\n            slot: this.contentDiv,\n            dataTable: this.pivotTable,\n            paging: {\n                enabled: false,\n                pageSize: this.options.maxRowCount\n            },\n            viewportRowsCount: this.options.viewportRowsCount,\n            useRowNumeration: false,\n            showPlusButton: false,\n            allowDragDrop: false,\n            onGetCellRenderer: (column, defaultRenderer) => {\n                if (column.dataColumn) {\n                    if (column.dataColumn.id == \"total\") {\n                        return (value, column, cell, rowEl) => {\n                            defaultRenderer(value, column, cell, rowEl);\n                            cell.classList.add('pivot-cell-total');\n                        };\n                    }\n                    if (this.settings.totalsRow) {\n                        const colIndex = this.pivotTable.columns.getIndex(column.dataColumn.id);\n                        const isFirst = colIndex === 0;\n                        if (isFirst) {\n                            return (value, column, cell, rowEl) => {\n                                const idx = Number.parseInt(rowEl.getAttribute('data-row-idx'));\n                                const isLast = idx === this.pivotTable.getCachedCount() - 1;\n                                if (isLast) {\n                                    value = i18n.getText('Facets', 'Pivot', 'TotalGridLabel');\n                                }\n                                defaultRenderer(value, column, cell, rowEl);\n                            };\n                        }\n                    }\n                }\n            }\n        });\n    }\n    getType() {\n        return FacetType.PivotTable;\n    }\n    destroy() {\n        if (this.grid) {\n            this.grid.destroy();\n        }\n    }\n    createAggrFuncSelectBuilder(aggrFunc) {\n        const model = this.getContext().getModel();\n        const csb = domel('select');\n        const aggrfuncs = Object.keys(AggrFunc).map(k => AggrFunc[k]);\n        for (const aggrfunc of aggrfuncs) {\n            csb.addChild('option', b => {\n                b\n                    .attr('value', aggrfunc)\n                    .text(model.getAggrFunctionCaption(aggrfunc));\n            });\n        }\n        const options = csb.toDOM().querySelectorAll('option');\n        if (aggrFunc != undefined) {\n            options.forEach(option => {\n                if (option.value == aggrFunc) {\n                    option.selected = true;\n                }\n            });\n        }\n        else {\n            options[0].selected = true;\n        }\n        return csb;\n    }\n    createColumnsSelectBuilder(allowedTypes, colName, formFieldType) {\n        const dataTable = this.getContextDataTable();\n        const csb = domel('select');\n        let firstNumericColIndex = null;\n        let optionIndex = 0;\n        for (let i = 0; i < dataTable.columns.count; i++) {\n            const column = dataTable.columns.get(i);\n            const colLabel = column.label;\n            const colType = column.type;\n            const colId = column.id;\n            if (allowedTypes && allowedTypes.indexOf(colType) < 0)\n                continue;\n            if (firstNumericColIndex === null && utils.isNumericType(colType)) {\n                firstNumericColIndex = optionIndex;\n            }\n            csb.addChild('option', b => {\n                b\n                    .attr('value', colId)\n                    .text(colLabel);\n            });\n            optionIndex++;\n        }\n        const options = Array.from(csb.toDOM().querySelectorAll('option'));\n        if (options.length > 0) {\n            if (colName != undefined) {\n                for (const option of options) {\n                    if (option.value == colName) {\n                        csb.toDOM().value = option.value;\n                        break;\n                    }\n                }\n            }\n            else {\n                switch (formFieldType) {\n                    case FormFieldType.ColumnField: {\n                        csb.toDOM().value = options[0].value;\n                        break;\n                    }\n                    case FormFieldType.RowField: {\n                        csb.toDOM().value = options.length > 1 ? options[1].value : options[0].value;\n                        break;\n                    }\n                    case FormFieldType.CellData: {\n                        csb.toDOM().value = firstNumericColIndex === null ? options[0].value : options[firstNumericColIndex].value;\n                        break;\n                    }\n                }\n            }\n        }\n        return csb;\n    }\n    renderFormFields(form, fieldsContainer) {\n        super.renderFormFields(form, fieldsContainer);\n        const settings = this.settings || { totalsRow: true, totalsCol: true };\n        const colTypes = [DataType.String, DataType.Date, DataType.DateTime, DataType.Int32,\n            DataType.Int64, DataType.Word, DataType.Byte];\n        const fieldTypes = [DataType.String, DataType.Float, DataType.Int32,\n            DataType.Int64, DataType.Word, DataType.Byte, DataType.Currency];\n        const isIE = browserUtils.isIE();\n        let current = fieldsContainer;\n        const horizClass = isIE ? 'kfrm-fields-ie is-horizontal' : 'kfrm-fields is-horizontal';\n        const getCurrent = () => {\n            if (isIE) {\n                return domel('div', fieldsContainer)\n                    .addClass('kfrm-field-ie')\n                    .toDOM();\n            }\n            else {\n                return fieldsContainer;\n            }\n        };\n        if (isIE) {\n            domel(fieldsContainer)\n                .addChildElement(getCurrent());\n        }\n        else {\n            domel(fieldsContainer)\n                .addChild('div')\n                .addChild('div');\n        }\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'column_field')\n            .text(i18n.getText('Facets', 'Pivot', 'ColumnFieldSelectorLabel')))\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'column_field')\n            .addChildElement(this.createColumnsSelectBuilder(colTypes, settings.colName, FormFieldType.ColumnField)\n            .id('pivotTableColFieldSelector')\n            .toDOM()))\n            .addChild('button', b => b\n            .addClass('kfrm-button')\n            .addClass('eqjs-facets-button-swap')\n            .attr('title', i18n.getText('Facets', 'Pivot', 'SwapBtnTitle'))\n            .on('click', () => {\n            const colSelect = document.getElementById('pivotTableColFieldSelector');\n            const rowSelect = document.getElementById('pivotTableRowFieldSelector');\n            const tmp = colSelect.value;\n            colSelect.value = rowSelect.value;\n            rowSelect.value = tmp;\n        })));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'row_field')\n            .text(i18n.getText('Facets', 'Pivot', 'RowFieldSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'row_field')\n            .addChildElement(this.createColumnsSelectBuilder(colTypes, settings.rowName, FormFieldType.RowField)\n            .id('pivotTableRowFieldSelector')\n            .toDOM()));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'data_function')\n            .text(i18n.getText('Facets', 'Pivot', 'CellDataSelectorLabel')))\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'data_function')\n            .addChildElement(this.createAggrFuncSelectBuilder(settings.aggrFunc)\n            .id('pivotTableAggrFuncSelector')\n            .toDOM()))\n            .addChild('label', b => b.addText('of  '))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'data_column')\n            .addChildElement(this.createColumnsSelectBuilder(fieldTypes, settings.fieldName, FormFieldType.CellData)\n            .on('change', (ev) => {\n            const colId = ev.target.value;\n            this.validateSelectedField(colId);\n        })\n            .id('pivotTableCellFieldSelector')\n            .toDOM())));\n        current = getCurrent();\n        domel(current)\n            .addChild('div')\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('pivotTableHasTotalsRow')\n                .type('checkbox');\n            if (settings.totalsRow)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Pivot', 'TotalsRowLabel')))\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('pivotTableHasTotalsCol')\n                .type('checkbox');\n            if (settings.totalsCol)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Pivot', 'TotalsColLabel'))));\n    }\n    afterDialogOpened(dlg) {\n        const colId = document.getElementById('pivotTableCellFieldSelector').value;\n        if (colId) {\n            this.validateSelectedField(colId);\n        }\n        if (this.getQuery().getColumns().length <= 2) {\n            dlg.showAlert('The dataset should contain at least three columns to build a pivot table', 'error');\n            dlg.getSubmitButtonElement().disabled = true;\n        }\n    }\n    validateSelectedField(colId) {\n        const dataTable = this.getContextDataTable();\n        const colIndex = dataTable.columns.getIndex(colId);\n        const col = dataTable.columns.get(colIndex);\n        const aggrSelector = document.getElementById('pivotTableAggrFuncSelector');\n        if (col.type == DataType.String) {\n            aggrSelector.disabled = true;\n            aggrSelector.value = AggrFunc.Count;\n        }\n        else {\n            aggrSelector.disabled = false;\n        }\n    }\n    submitSettingsDialog() {\n        const result = super.submitSettingsDialog();\n        if (result) {\n            this.settings = {\n                colName: document.getElementById('pivotTableColFieldSelector').value,\n                rowName: document.getElementById('pivotTableRowFieldSelector').value,\n                aggrFunc: document.getElementById('pivotTableAggrFuncSelector').value,\n                fieldName: document.getElementById('pivotTableCellFieldSelector').value,\n                totalsRow: document.getElementById('pivotTableHasTotalsRow').checked,\n                totalsCol: document.getElementById('pivotTableHasTotalsCol').checked\n            };\n            this.refresh();\n        }\n        return result;\n    }\n    saveToData() {\n        const data = super.saveToData();\n        if (this.settings) {\n            utils.assign(data, this.settings);\n        }\n        return data;\n    }\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            this.settings = utils.assign(this.settings, data);\n            if (this.settings.aggrFunc == 'AVERAGE') {\n                this.settings.aggrFunc = AggrFunc.Average;\n            }\n        }\n    }\n    refreshCore() {\n        this.updatePivotData();\n        if (this.grid) {\n            const dataSize = this.pivotTable.getTotal();\n            const maxRow = this.grid.options.paging.pageSize;\n            if (dataSize > maxRow) {\n                this.contentDiv.classList.remove('pivot-grid-with-totals');\n                this.showErrorMessage(i18n.getText('Facets', 'ErrTooMuchData'));\n            }\n            if (this.options.viewportRowsCount > dataSize) {\n                this.grid.options.viewportRowsCount = dataSize;\n            }\n            else {\n                this.grid.options.viewportRowsCount = this.options.viewportRowsCount;\n            }\n            this.grid.refresh();\n        }\n    }\n    getContextDataTable() {\n        const context = this.getContext();\n        return context.resultTable;\n    }\n    updatePivotData() {\n        this.pivotTable.clear();\n        const dataTable = this.getContextDataTable();\n        if (!dataTable || dataTable.getTotal() == 0) {\n            return;\n        }\n        if (!this.settings) {\n            return;\n        }\n        const colName = this.settings.colName;\n        const rowName = this.settings.rowName;\n        const fieldName = this.settings.fieldName;\n        const colIdx = dataTable.columns.getIndex(colName);\n        const rowIdx = dataTable.columns.getIndex(rowName);\n        const fieldIdx = dataTable.columns.getIndex(fieldName);\n        if (colIdx == undefined || rowIdx == undefined || fieldIdx == undefined) {\n            this.showUnableDisplayMessage(i18n.getText('Facets', 'ErrQueryChanged'));\n            return;\n        }\n        const columnField = dataTable.columns.get(fieldIdx);\n        const columnCol = dataTable.columns.get(colIdx);\n        const columnRow = dataTable.columns.get(rowIdx);\n        const rowLabel = columnRow.label;\n        const rowType = columnRow.type;\n        const colLabel = columnCol.label;\n        const colValues = [];\n        const rowValues = [];\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const colValue = rows[i].getValue(colIdx);\n            if (colValues.indexOf(colValue) < 0) {\n                colValues.push(colValue);\n            }\n            const rowValue = rows[i].getValue(rowIdx);\n            if (rowValues.indexOf(rowValue) < 0) {\n                rowValues.push(rowValue);\n            }\n        }\n        this.pivotTable.columns.add({\n            id: rowLabel + '\\\\' + colLabel,\n            label: rowLabel + '\\\\' + colLabel,\n            description: '',\n            type: rowType,\n            dfmt: columnRow.displayFormat,\n            style: columnRow.style\n        });\n        const null_columns = [];\n        let colFieldFormatter = null;\n        if (utils.isNumericType(columnCol.type)) {\n            colFieldFormatter = this.formatNumber;\n        }\n        else if (utils.getDateDataTypes().indexOf(columnCol.type) >= 0) {\n            colFieldFormatter = this.formatDate;\n        }\n        for (let i = 0; i < colValues.length; i++) {\n            const colValue = colValues[i];\n            if (!colValue) {\n                null_columns.push(i);\n            }\n            else {\n                const label = colFieldFormatter\n                    ? colFieldFormatter(columnCol, colValue)\n                    : colValue;\n                this.pivotTable.columns.add({\n                    id: colValue,\n                    label: label,\n                    description: '',\n                    dfmt: columnField.displayFormat,\n                    type: this.settings.aggrFunc !== AggrFunc.Count\n                        ? columnField.type : DataType.Int64,\n                    style: columnField.style\n                });\n            }\n        }\n        let new_rows = [];\n        for (let i = 0; i < rowValues.length; i++) {\n            new_rows.push([]);\n            new_rows[i].push(rowValues[i]);\n        }\n        for (let i = 0; i < rowValues.length; i++) {\n            for (let j = 0; j < colValues.length; j++) {\n                if (null_columns.indexOf(j) >= 0)\n                    continue;\n                new_rows[i].push(this.calcAggrFunc(this.settings.aggrFunc, {\n                    colName: this.settings.colName,\n                    rowName: this.settings.rowName,\n                    fieldName: this.settings.fieldName,\n                    rowValue: rowValues[i],\n                    colValue: colValues[j]\n                }));\n            }\n        }\n        if (this.settings.totalsCol) {\n            this.pivotTable.columns.add({\n                id: \"total\",\n                label: i18n.getText('Facets', 'Pivot', 'TotalGridLabel'),\n                description: '',\n                dfmt: columnField.displayFormat,\n                type: this.settings.aggrFunc !== AggrFunc.Count\n                    ? columnField.type : DataType.Int64\n            });\n            for (let i = 0; i < new_rows.length; i++) {\n                const row = new_rows[i];\n                let totalByRow = 0;\n                if (this.settings.aggrFunc == AggrFunc.Min\n                    || this.settings.aggrFunc == AggrFunc.Max) {\n                    totalByRow = row[1];\n                }\n                for (let j = 1; j < row.length; j++) {\n                    const value = row[j];\n                    if (value !== null) {\n                        if (this.settings.aggrFunc === AggrFunc.Min) {\n                            if (value < totalByRow)\n                                totalByRow = value;\n                        }\n                        else if (this.settings.aggrFunc === AggrFunc.Max) {\n                            if (value > totalByRow)\n                                totalByRow = value;\n                        }\n                        else {\n                            totalByRow += value;\n                        }\n                    }\n                }\n                if (this.settings.aggrFunc === AggrFunc.Average) {\n                    totalByRow /= row.length - 1;\n                }\n                row.push(totalByRow);\n            }\n        }\n        for (const row of new_rows) {\n            this.pivotTable.addRow(row);\n        }\n        if (this.settings.totalsRow) {\n            let total_row = [];\n            // to be able to create date value\n            total_row.push(null);\n            for (let i = 1; i < this.pivotTable.columns.count; i++) {\n                const rows = this.pivotTable.getCachedRows();\n                let totalByCol = 0;\n                if (this.settings.aggrFunc == AggrFunc.Min\n                    || this.settings.aggrFunc == AggrFunc.Max) {\n                    totalByCol = rows[0].getValue(i);\n                }\n                for (let j = 0; j < rows.length; j++) {\n                    const value = rows[j].getValue(i);\n                    if (value !== null) {\n                        if (this.settings.aggrFunc === AggrFunc.Min) {\n                            if (value < totalByCol)\n                                totalByCol = value;\n                        }\n                        else if (this.settings.aggrFunc === AggrFunc.Max) {\n                            if (value > totalByCol)\n                                totalByCol = value;\n                        }\n                        else {\n                            totalByCol += value;\n                        }\n                    }\n                }\n                if (this.settings.aggrFunc === AggrFunc.Average) {\n                    totalByCol /= rows.length;\n                }\n                total_row.push(totalByCol);\n            }\n            this.pivotTable.addRow(total_row);\n            this.contentDiv.classList.add('pivot-grid-with-totals');\n        }\n        else {\n            this.contentDiv.classList.remove('pivot-grid-with-totals');\n        }\n    }\n    calcAggrFunc(func, options) {\n        switch (func) {\n            case AggrFunc.Sum:\n                return this.sum(options);\n            case AggrFunc.Average:\n                return this.average(options);\n            case AggrFunc.Min:\n                return this.min(options);\n            case AggrFunc.Max:\n                return this.max(options);\n            case AggrFunc.Count:\n                return this.count(options);\n            default:\n                return 0;\n        }\n    }\n    getSettings() {\n        return this.settings;\n    }\n    formatDate(column, value) {\n        const isDate = Object.prototype.toString.call(value) === '[object Date]';\n        let strValue = (value || '').toString();\n        if (isDate) {\n            if (column && column.displayFormat\n                && DFMT_REGEX.test(column.displayFormat)) {\n                strValue = column.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                    return i18n.dateTimeToStrEx(value, column.type, $1);\n                });\n            }\n            else {\n                const locale = i18n.getCurrentLocale();\n                const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n                switch (column.type) {\n                    case DataType.Date:\n                        strValue = value.toLocaleDateString(locale);\n                        break;\n                    case DataType.Time:\n                        strValue = value.toLocaleTimeString(locale, timeOptions);\n                        break;\n                    case DataType.DateTime:\n                        strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                        break;\n                }\n            }\n        }\n        return strValue;\n    }\n    formatNumber(column, value) {\n        let strValue = (value || '').toString();\n        if (typeof value == 'number') {\n            if (column && column.displayFormat\n                && DFMT_REGEX.test(column.displayFormat)) {\n                strValue = column.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                    return i18n.numberToStr(value, $1);\n                });\n            }\n            else {\n                strValue = value.toLocaleString();\n            }\n        }\n        return strValue;\n    }\n    sum(options) {\n        let result = 0;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            result += fieldValue;\n        }\n        return result;\n    }\n    average(options) {\n        let result = 0;\n        let count = 0;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            result += fieldValue;\n            count++;\n        }\n        if (count != 0)\n            result = result / count;\n        return result;\n    }\n    min(options) {\n        let min = Number.MAX_SAFE_INTEGER;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            if (fieldValue < min) {\n                min = fieldValue;\n            }\n        }\n        if (min == Number.MAX_SAFE_INTEGER)\n            return null;\n        return min;\n    }\n    max(options) {\n        let max = Number.MIN_SAFE_INTEGER;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            if (fieldValue > max) {\n                max = fieldValue;\n            }\n        }\n        if (max == Number.MIN_SAFE_INTEGER)\n            return null;\n        return max;\n    }\n    count(options) {\n        const dataTable = this.getContextDataTable();\n        let count = 0;\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            count++;\n        }\n        return count;\n    }\n}\n\nclass DataTableFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.grid = null;\n        this.title = i18n$1.getText('Facets', 'DataTable', 'FacetTitle');\n        this.dialogTitle = i18n$1.getText('Facets', 'DataTable', 'DlgTitle');\n    }\n    init(slot) {\n        super.init(slot);\n        this.reinitGrid();\n    }\n    getSettings() {\n        return this.settings;\n    }\n    reinitGrid() {\n        if (this.grid)\n            this.grid.destroy();\n        const options = this.container.options || {};\n        if (options.gridResolver) {\n            this.grid = options.gridResolver(this.contentDiv, this.getType());\n        }\n        if (this.grid == null) {\n            this.grid = new EasyGridWidget(this.contentDiv);\n        }\n        options.grid = options.grid || {};\n        options.grid.autoRefresh = false;\n        options.grid.addColumns = false;\n        const context = this.getContext();\n        options.grid.totals = this.settings;\n        this.grid.init(context, options.grid);\n    }\n    getType() {\n        return FacetType.DataGrid;\n    }\n    canDisplay() {\n        return true;\n    }\n    refreshCore() {\n        if (!this.grid)\n            return;\n        this.grid.refresh();\n    }\n    destroy() {\n        if (this.grid) {\n            this.grid.destroy();\n        }\n    }\n}\n\nclass FacetContainer extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.facets = [];\n        this.options = {};\n        this.group = WidgetGroup.Result;\n    }\n    destroyCore() {\n        for (const facet of this.facets) {\n            facet.destroy();\n        }\n        this.clear();\n    }\n    createFacetTab(type) {\n        const options = this.options[type];\n        switch (type) {\n            case FacetType.Chart:\n                return new ChartFacet(this, options);\n            case FacetType.PivotTable:\n                return new PivotTableFacet(this, options);\n            default:\n                return new DataTableFacet(this, options);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n}\n\nclass ExportDialog {\n    constructor(context) {\n        this.context = context;\n        this.promise = null;\n    }\n    show(defFormat = null) {\n        if (!this.promise) {\n            const formats = this.context.getExportFormats();\n            if (formats.length == 0)\n                throw Error(\"No exporter has been registered.\");\n            defFormat = defFormat || formats[0];\n            this.promise = new Promise((resolve, reject) => {\n                const ds = this.context.getServices().getService('DialogService');\n                const body = domel('div')\n                    .addClass('kdlg-form-section')\n                    .addChild('div', b => b\n                    .addClass('kfrm-form')\n                    .addChild('div', b => b\n                    .addClass('kfrm-fields col-a-1 label-align-right')\n                    .addChild('label', b => b\n                    .addClass('kdlg-form-label', 'kflex-20')\n                    .attr('for', 'export_format')\n                    .addText(i18n$1.getText('ExportDlgFmtLabel')))\n                    .addChild('div', b => b\n                    .addClass('kfrm-select')\n                    .addChild('select', b => {\n                    b\n                        .attr('name', 'export_format')\n                        .id('exportFormat');\n                    for (const format of this.context.getExportFormats()) {\n                        b.addOption({\n                            value: format,\n                            title: i18n$1.getText(format) || format,\n                            selected: defFormat == format\n                        });\n                    }\n                }))))\n                    .toDOM();\n                ds.open({\n                    title: i18n$1.getText('ExportDlgTitle'),\n                    body: body,\n                    onSubmit: () => {\n                        const format = body.querySelector('#exportFormat').value;\n                        this.context.exportResult({\n                            format: format,\n                            success: resolve,\n                            error: reject\n                        });\n                        return true;\n                    }\n                });\n            });\n        }\n        return this.promise.finally(() => this.promise = null);\n    }\n}\n\nclass ResultFacetsPanel extends FacetContainer {\n    constructor(slot) {\n        super(slot);\n        this.activeFacetIndex = -1;\n        this.firstRender = true;\n        this.options = {\n            showExportButton: true,\n            showRefreshButton: true,\n            showMaximizeButton: true,\n            maximize2Window: false,\n            showProcessIndicator: true,\n            facetTypes: [FacetType.DataGrid, FacetType.Chart, FacetType.PivotTable]\n        };\n        this.menuItems = [\n            { id: FacetType.DataGrid, text: i18n.getText('Facets', 'AddMenuItems', 'DataTable') },\n            { id: FacetType.Chart, text: i18n.getText('Facets', 'AddMenuItems', 'Chart') },\n            { id: FacetType.PivotTable, text: i18n.getText('Facets', 'AddMenuItems', 'Pivot') }\n        ];\n        this.menuItemsFilter = (item) => {\n            if (this.options.facetTypes.indexOf(item.id) < 0)\n                return false;\n            if (item.id === FacetType.DataGrid) {\n                return this.facets.filter(facet => facet.getType() == FacetType.DataGrid).length === 0;\n            }\n            return true;\n        };\n        if (!this.slot.classList.contains(`${this.cssPrefix}-panel`)) {\n            this.slot.classList.add(`${this.cssPrefix}-panel`);\n        }\n        this.renderProcessBlock();\n    }\n    get cssPrefix() {\n        return 'eqjs-facets';\n    }\n    getWidgetType() {\n        return 'facetsPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.destroyCore();\n        this.attachQueryObserver();\n        this.loadFacets();\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        if (this.queryEventCallbackId) {\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (edata.part != QueryChangePart.All) {\n                return;\n            }\n            if (edata.source == this) {\n                return;\n            }\n            this.reloadFacets();\n            this.refreshCore(true);\n        });\n    }\n    refreshCore(force = false) {\n        if (this.firstRender || force) {\n            this.clear();\n            this.createAddMenu();\n            this.render();\n        }\n        this.validateAddFacetButton();\n        this.renderActiveFacet();\n        this.updateTotalRecords();\n    }\n    createAddMenu() {\n        this.addMenu = new PopupMenu({\n            items: this.menuItems,\n            id: \"FacetType-List\"\n        });\n    }\n    updateTotalRecords() {\n        const context = this.getContext();\n        const total = context.resultTable.getTotal();\n        this.recordsDiv.innerHTML = i18n.getText('Facets', 'TotalRecordsLabel') + ' ' + total;\n        if (total == 0) {\n            domel(this.exportDiv).hide();\n        }\n        else {\n            domel(this.exportDiv).show();\n        }\n    }\n    renderProcessBlock() {\n        const html = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n        this._processBlock = domel('div')\n            .addClass(`${this.cssPrefix}-spinner`)\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-progress-win8`, getMobileCssClass())\n            .addHtml(html))\n            .toDOM();\n    }\n    onProcessStartCore() {\n        if (this.options.showProcessIndicator) {\n            // FacetsPanel might be not rendered yet, so \n            // it has no body\n            if (!this._processBlock.parentNode && this.bodyDiv) {\n                this.bodyDiv.childNodes.forEach(el => {\n                    domel(el).hide();\n                });\n                this.bodyDiv.appendChild(this._processBlock);\n            }\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showProcessIndicator) {\n            if (this._processBlock.parentNode) {\n                try {\n                    this._processBlock.parentNode\n                        .removeChild(this._processBlock);\n                }\n                catch (e) {\n                }\n                finally {\n                    this.renderActiveFacet(false);\n                }\n            }\n        }\n    }\n    render() {\n        this.firstRender = false;\n        this.headerDiv = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.tabsDiv =\n            domel('div', this.headerDiv)\n                .addClass(`${this.cssPrefix}-tabs`)\n                .toDOM();\n        this.tabsUl = domel('ul', this.tabsDiv)\n            .addClass(`${this.cssPrefix}-nav-tabs`)\n            .toDOM();\n        this.bodyDiv =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-body`)\n                .toDOM();\n        for (const facet of this.facets) {\n            this.renderFacet(facet);\n        }\n        domel(this.tabsDiv)\n            .addChild('div', b => this.addFacetButton = b\n            .addClass(`${this.cssPrefix}-add-button`)\n            .title(i18n.getText('Facets', 'NewFacetTitle'))\n            .addChild('a', b => b\n            .attr('href', 'javascript:void(0)'))\n            .on('click', (e) => this.addClickHandler(e))\n            .toDOM());\n        const manageDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-manage`)\n            .toDOM();\n        this.recordsDiv = domel('div', manageDiv)\n            .addClass(`${this.cssPrefix}-total-recs`)\n            .toDOM();\n        if (this.options.showRefreshButton || this.options.showExportButton || this.options.showMaximizeButton) {\n            const bdb = domel('div', manageDiv)\n                .addClass(`${this.cssPrefix}-total-buttons`)\n                .toDOM();\n            if (this.options.showExportButton) {\n                this.exportDiv = domel('button', bdb)\n                    .on('click', () => this.exportHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-export`)\n                    .title(i18n.getText('Facets', 'ExportBtnTitle'))\n                    .toDOM();\n            }\n            if (this.options.showRefreshButton) {\n                domel('button', bdb)\n                    .on('click', () => this.refreshHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-refresh`)\n                    .title(i18n.getText('Facets', 'RefreshBtnTitle'));\n            }\n            if (this.options.showMaximizeButton) {\n                this.maximizeButton = domel('button', bdb)\n                    .on('click', () => this.options.maximize2Window ? this.maximizeHandler(true) : this.maximizeHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-maximize`)\n                    .title(i18n.getText('Facets', 'MaximizeBtnTitle'))\n                    .toDOM();\n            }\n        }\n    }\n    refreshHandler() {\n        const context = this.getContext();\n        context.fetchData({\n            success: () => {\n                // possibly we should move this logic to context\n                context.refreshWidgets(WidgetGroup.Result);\n            }\n        });\n    }\n    exportHandler() {\n        const context = this.getContext();\n        new ExportDialog(context)\n            .show();\n    }\n    maximizeHandler(toWindow) {\n        let b = domel(this.slot);\n        if (toWindow) {\n            b.toggleClass(`${eqCssPrefix}-maximized-2window`);\n            if (this.slot.classList.contains(`${eqCssPrefix}-maximized-2window`)) {\n                this.maximizeButton.title = i18n.getText('Facets', 'RestoreBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, true);\n            }\n            else {\n                this.maximizeButton.title = i18n.getText('Facets', 'MaximizeBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, true);\n            }\n        }\n        else {\n            const isMaximized = !this.slot.hasAttribute('data-is-maximized');\n            if (isMaximized) {\n                this.slot.setAttribute('data-is-maximized', '');\n                this.maximizeButton.title = i18n.getText('Facets', 'RestoreBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, true);\n            }\n            else {\n                this.slot.removeAttribute('data-is-maximized');\n                this.maximizeButton.title = i18n.getText('Facets', 'MaximizeBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, true);\n            }\n            const arrToHide = document.querySelectorAll('[data-hide-on-max]');\n            arrToHide.forEach(el => {\n                if (isMaximized) {\n                    el.setAttribute('style', 'display: none;');\n                }\n                else {\n                    el.removeAttribute('style');\n                }\n            });\n        }\n        this.facets.forEach(facetTab => facetTab.onResize());\n    }\n    renderActiveFacet(refresh = true) {\n        this.tabsUl.querySelectorAll('li') //`.${this.cssPrefix}-header-item.${this.cssPrefix}-facet`)\n            .forEach((el, index) => {\n            if (el.classList.contains('active')) {\n                el.classList.remove('active');\n            }\n            if (this.activeFacetIndex === index) {\n                el.classList.add('active');\n            }\n        });\n        this.bodyDiv.querySelectorAll(`.${eqCssPrefix}-facet`)\n            .forEach((el, index) => {\n            domel(el).hide();\n            if (this.activeFacetIndex === index) {\n                domel(el).show();\n                if (refresh) {\n                    this.facets[index].refresh();\n                }\n            }\n        });\n    }\n    renderFacet(facet) {\n        this.renderFacetTab(facet);\n        const body = this.renderFacetSlot(facet);\n        facet.init(body);\n    }\n    renderFacetTab(facet) {\n        return domel('li', this.tabsUl)\n            //.addClass(`${this.cssPrefix}-header-item`, `${this.cssPrefix}-facet`)\n            //facet settings button\n            .addChild('span', b => b\n            .addClass(`${eqCssPrefix}-facet-settings`)\n            .on('click', (e) => {\n            e.stopPropagation();\n            this.settingsClickHandler(facet);\n        }))\n            .addChild('a', b => b\n            .addText(facet.title)\n            .attr('href', 'javascript:void(0)'))\n            //facet close button\n            .addChild('span', b => b\n            .addClass(`${eqCssPrefix}-facet-close`)\n            .on('click', (e) => {\n            e.stopPropagation();\n            this.closeClickHandler(facet);\n        }))\n            .on('click', (e) => this.selectClickHandler(facet))\n            .toDOM();\n    }\n    renderFacetSlot(facet) {\n        let element = domel('div', this.bodyDiv)\n            .addClass(`${eqCssPrefix}-facet`)\n            .hide()\n            .toDOM();\n        return element;\n    }\n    refreshFacetTabs() {\n        this.tabsUl.querySelectorAll('li') //`.${this.cssPrefix}-header-item.${this.cssPrefix}-facet`)\n            .forEach((item) => {\n            this.tabsUl.removeChild(item);\n        });\n        for (const facet of this.facets) {\n            this.renderFacetTab(facet);\n        }\n    }\n    removeFacet(facet) {\n        const index = this.facets.indexOf(facet);\n        if (index >= 0) {\n            this.facets.splice(index, 1);\n            const header = this.tabsUl.childNodes[index];\n            this.tabsUl.removeChild(header);\n            const body = this.bodyDiv.childNodes[index];\n            this.bodyDiv.removeChild(body);\n            if (this.facets.length > 0) {\n                this.activeFacetIndex =\n                    index < this.facets.length\n                        ? index\n                        : this.facets.length - 1;\n            }\n            else {\n                this.activeFacetIndex = -1;\n            }\n            this.renderActiveFacet();\n            this.validateAddFacetButton();\n        }\n    }\n    addClickHandler(ev) {\n        this.addMenu.showMenu({\n            anchor: ev.target,\n            itemFilterCallback: this.menuItemsFilter,\n            itemSelectedCallback: (data) => {\n                const facet = this.createFacetTab(data.id);\n                const facetSlot = this.renderFacetSlot(facet);\n                facet.init(facetSlot);\n                facet.showSettingsDialog()\n                    .then(submited => {\n                    if (submited) {\n                        this.facets.push(facet);\n                        this.activeFacetIndex = this.facets.length - 1;\n                        this.renderFacetTab(facet);\n                        this.renderActiveFacet();\n                        this.saveFacets();\n                    }\n                    else {\n                        this.bodyDiv.removeChild(facetSlot);\n                    }\n                    //this.validateAddFacetButton();\n                })\n                    .catch(error => console.error(error));\n            }\n        });\n    }\n    selectClickHandler(facet) {\n        const index = this.facets.indexOf(facet);\n        this.setActiveFacet(index);\n    }\n    settingsClickHandler(facet) {\n        facet.showSettingsDialog()\n            .then(submited => {\n            if (submited) {\n                this.refreshFacetTabs();\n                this.renderActiveFacet();\n                this.saveFacets();\n            }\n        })\n            .catch(error => console.error(error));\n    }\n    closeClickHandler(facet) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('Facets', 'RemoveFacetDlgTitle'), i18n.getText('Facets', 'RemoveFacetDlgContent')\n            .replace('{facetTitle}', facet.title))\n            .then(confirmed => {\n            if (confirmed) {\n                this.removeFacet(facet);\n                this.saveFacets();\n            }\n        })\n            .catch(error => console.error(error));\n    }\n    clear() {\n        this.firstRender = true;\n        this.slot.innerHTML = \"\";\n    }\n    createDefaultFacetIfNotExist() {\n        if (this.facets.length === 0) {\n            const facet = this.createFacetTab(FacetType.DataGrid);\n            this.facets.push(facet);\n            this.activeFacetIndex = 0;\n        }\n    }\n    validateAddFacetButton() {\n        this.addFacetButton.hidden = this.addMenu.getItems()\n            .filter(this.menuItemsFilter).length == 0;\n    }\n    setActiveFacet(index) {\n        if (this.activeFacetIndex != index) {\n            this.activeFacetIndex = index;\n            this.renderActiveFacet();\n            this.saveFacets(true);\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    getDialogService() {\n        return this.getContext()\n            .getServices()\n            .getService('DialogService');\n    }\n    saveFacets(isActivate = false) {\n        const query = this.getQuery();\n        query.innerData = query.innerData || {};\n        query.innerData.facets = {\n            active: this.activeFacetIndex,\n            items: this.facets.map(f => f.saveToData())\n        };\n        query.fireChangedEvent({\n            part: QueryChangePart.Facets,\n            action: isActivate ? QueryChangeAction.Activate : QueryChangeAction.All,\n            source: this\n        });\n    }\n    reloadFacets() {\n        for (const facet of this.facets) {\n            facet.destroy();\n        }\n        this.loadFacets();\n    }\n    loadFacets() {\n        const query = this.getQuery();\n        this.facets = [];\n        if (query.innerData && query.innerData.facets) {\n            const items = query.innerData.facets.items;\n            for (const fd of items) {\n                const facet = this.createFacetTab(fd.type);\n                facet.loadFromData(fd);\n                this.facets.push(facet);\n            }\n            const active = query.innerData.facets.active;\n            this.activeFacetIndex = (active >= 0)\n                ? active\n                : this.facets.length - 1;\n        }\n        else {\n            this.createDefaultFacetIfNotExist();\n        }\n    }\n}\n\nclass ExportWidget extends Widget {\n    getWidgetType() {\n        return 'exportWidget';\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            defFormat: 'csv',\n            enableExport: true\n        };\n        this.clickHandler = (ev) => {\n            if (!this.slot.hasAttribute('disabled'))\n                new ExportDialog(this.context).show(this.options.defFormat);\n        };\n        this.group = WidgetGroup.All;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.options = utils.assignDeep(this.options, options);\n        this.slot.addEventListener('click', this.clickHandler);\n    }\n    refreshCore() {\n        if (this.options.enableExport && this.context.resultTable\n            && this.context.resultTable.getCachedCount() > 0) {\n            this.slot.removeAttribute('disabled');\n        }\n        else {\n            this.slot.setAttribute('disabled', '');\n        }\n    }\n    destroyCore() {\n        this.slot.removeAttribute('disabled');\n        this.slot.removeEventListener('click', this.clickHandler);\n    }\n}\n\nclass AggrSettingsRenderer {\n    get cssPrefix() {\n        return 'eqjs-as';\n    }\n    constructor(options) {\n        this.selectState = {\n            columns: []\n        };\n        this.funcMap = {};\n        if (!options || !options.slot)\n            throw new Error('slot is required');\n        if (!options || !options.query)\n            throw new Error('query is required');\n        this.slot = options.slot;\n        this.query = options.query;\n        this.onChanged = options.onChanged;\n        this.dropSelectState();\n        this.dropState();\n    }\n    render() {\n        this.createFunctionMenu();\n        this.setInitialState();\n        this.changed();\n    }\n    setInitialState() {\n        const aggrSettings = this.query.getAggregationSettings();\n        const groups = aggrSettings.getInternalGroups();\n        const aggrs = aggrSettings.getAggregates();\n        for (const group of groups) {\n            this.state.groups.push({\n                columns: group.columns\n            });\n        }\n        for (const aggr of aggrs) {\n            this.state.aggregates.push({\n                colId: aggr.colId,\n                funcId: aggr.funcId\n            });\n        }\n        this.state.grandTotals = aggrSettings.hasGrandTotals();\n        this.state.recordCount = aggrSettings.hasRecordCount();\n    }\n    getAvailableColumns() {\n        return this.query.getColumns().filter(c => c.enabled);\n    }\n    renderCore() {\n        this.slot.innerHTML = '';\n        const cols = this.getAvailableColumns();\n        const slotb = domel(this.slot);\n        let currentGroup = null;\n        let groupBlockColumns = null;\n        let selectedBlockColumns = null;\n        const aggregates = this.state.aggregates;\n        let groupCounter = -1;\n        for (const col of cols) {\n            if (currentGroup) {\n                if (currentGroup.columns.indexOf(col.id) >= 0) {\n                    // render to current group div\n                    this.renderColumn(groupBlockColumns, col, true);\n                    continue;\n                }\n            }\n            currentGroup = this.getGroupForColumn(col.id);\n            if (currentGroup != null) {\n                groupCounter++;\n                // create groupDiv\n                const groupBlock = domel('div', this.slot)\n                    .addClass(`${this.cssPrefix}-group`)\n                    .data('gindex', `${groupCounter}`);\n                groupBlockColumns = domel('div', groupBlock.toDOM())\n                    .addClass(`${this.cssPrefix}-columns`);\n                this.renderColumn(groupBlockColumns, col, true);\n                continue;\n            }\n            const aggr = aggregates.filter(a => a.colId == col.id)[0];\n            if (aggr) {\n                const aggrBlock = domel('div', this.slot)\n                    .addClass(`${this.cssPrefix}-aggr`);\n                this.renderColumn(aggrBlock, col, true, aggr.funcId);\n                aggrBlock\n                    .addChild('div', b => b\n                    .addClass(`${this.cssPrefix}-buttons`)\n                    .addChild('button', b => b\n                    .addClass(`${this.cssPrefix}-unaggr-btn`)\n                    .title(i18n$1.getText('AggrSettings', 'UnaggrBtn'))\n                    .on('click', this.removeAggrBtnClickHandler.bind(this))));\n                continue;\n            }\n            if (this.selectState.columns.indexOf(col.id) >= 0) {\n                // create selectedDiv\n                if (selectedBlockColumns == null) {\n                    const selectedBlock = domel('div', this.slot)\n                        .addClass(`${this.cssPrefix}-selected`);\n                    selectedBlockColumns = domel('div', selectedBlock.toDOM())\n                        .addClass(`${this.cssPrefix}-columns`);\n                }\n                this.renderColumn(selectedBlockColumns, col, false);\n                continue;\n            }\n            // render column as is\n            this.renderColumn(slotb, col, false);\n        }\n        if (selectedBlockColumns) {\n            const buttonsContainer = domel('div', selectedBlockColumns.toDOM().parentElement)\n                .addClass(`${this.cssPrefix}-buttons`);\n            buttonsContainer.addChild('button', b => b\n                .addClass(`${this.cssPrefix}-group-btn`)\n                .title(i18n$1.getText('AggrSettings', 'GroupBtn'))\n                .on('click', this.groupBtnClickHandler.bind(this)));\n            if (this.selectState.columns.length == 1) {\n                buttonsContainer.addChild('button', b => b\n                    .addClass(`${this.cssPrefix}-aggr-btn`)\n                    .title(i18n$1.getText('AggrSettings', 'AggrBtn'))\n                    .on('click', this.aggrBtnClickHandler.bind(this)));\n            }\n        }\n        domel(this.slot)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-counts`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.state.recordCount) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.countsCheckboxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'GroupCountsLabel')))))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-grandtotals`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.state.grandTotals) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.grandCheckboxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'GrandTotalsLabel')))));\n        const groups = this.slot.querySelectorAll(`.${this.cssPrefix}-group`);\n        groups.forEach(el => {\n            domel(el)\n                .addChild('div', b => b\n                .addClass(`${this.cssPrefix}-buttons`)\n                .addChild('button', b => b\n                .addClass(`${this.cssPrefix}-ungroup-btn`)\n                .title(i18n$1.getText('AggrSettings', 'UngroupBtn'))\n                .on('click', this.removeGroupBtnClickHandler.bind(this))));\n        });\n        this.validateCheckboxes();\n    }\n    validateCheckboxes() {\n        if (this.selectState.columns.length === 0)\n            return;\n        let prevElement, prevInputEl, nextInputEl = null;\n        for (let i = 0; i < this.slot.childNodes.length; i++) {\n            const el = this.slot.childNodes[i];\n            if (el.classList.contains(`${this.cssPrefix}-selected`)) {\n                if (prevElement && prevElement.classList.contains(`${this.cssPrefix}-column`)) {\n                    prevInputEl = prevElement;\n                }\n            }\n            else if (el.classList.contains(`${this.cssPrefix}-column`)) {\n                if (prevElement && prevElement.classList.contains(`${this.cssPrefix}-selected`)) {\n                    nextInputEl = el;\n                }\n            }\n            prevElement = el;\n        }\n        for (let i = 0; i < this.slot.childNodes.length; i++) {\n            const el = this.slot.childNodes[i];\n            if (el.classList.contains(`${this.cssPrefix}-column`) && el != prevInputEl && el != nextInputEl) {\n                el.firstElementChild.firstElementChild.setAttribute('disabled', '');\n            }\n        }\n        const selector = `.${this.cssPrefix}-selected>.${this.cssPrefix}-columns>.${this.cssPrefix}-column`;\n        const selectedCols = this.slot.querySelectorAll(selector);\n        for (let i = 1; i < selectedCols.length - 1; i++) {\n            const el = selectedCols[i];\n            el.firstElementChild.firstElementChild.setAttribute('disabled', '');\n        }\n    }\n    isValid() {\n        const hasSelected = this.selectState.columns.length;\n        const hasAggrs = this.state.aggregates.length > 0;\n        const hasGroups = this.state.groups.length > 0;\n        const hasTotals = this.state.grandTotals;\n        const hasCounts = this.state.recordCount;\n        if (hasSelected)\n            return false;\n        if (hasGroups) {\n            return hasAggrs || hasCounts;\n        }\n        if (hasAggrs) {\n            return hasGroups || hasTotals;\n        }\n        return false;\n    }\n    getValidationMessage() {\n        const hasSelected = this.selectState.columns.length;\n        const hasAggrs = this.state.aggregates.length > 0;\n        const hasGroups = this.state.groups.length > 0;\n        const hasTotals = this.state.grandTotals;\n        const hasRecCount = this.state.recordCount;\n        if (hasSelected)\n            return `${i18n$1.getText('AggrSettings', 'SelectedError')} `;\n        if (hasGroups && !hasAggrs && !hasRecCount)\n            return `${i18n$1.getText('AggrSettings', 'NoAggrOrCountError')} `;\n        if (hasAggrs && !hasGroups && !hasTotals)\n            return `${i18n$1.getText('AggrSettings', 'NoGroupsOrGrandError')} `;\n        return `${i18n$1.getText('AggrSettings', 'NoGroupsOrAggrError')} `;\n    }\n    getSettings() {\n        const settings = new AggregationSettings(this.query);\n        for (const group of this.state.groups) {\n            settings.addGroup({ columns: group.columns });\n        }\n        for (const aggr of this.state.aggregates) {\n            settings.addAggregateColumn(aggr.colId, aggr.funcId);\n        }\n        if (this.state.grandTotals) {\n            settings.addGrandTotals();\n        }\n        if (this.state.recordCount) {\n            settings.addCounts();\n        }\n        return settings;\n    }\n    renderColumn(b, col, isTaken, funcId = null) {\n        b.addChild('div', b => {\n            b.data('colid', col.id);\n            const caption = funcId\n                ? `${col.caption} (${this.funcMap[funcId].caption})`\n                : col.caption;\n            if (!isTaken) {\n                b\n                    .addClass(`${this.cssPrefix}-column`)\n                    .addChild('label', b => b\n                    .addClass('checkbox')\n                    .addChild('input', b => {\n                    b.attr('type', 'checkbox');\n                    if (this.selectState.columns.indexOf(col.id) >= 0) {\n                        b.attr('checked', '');\n                    }\n                    b.on('change', this.colCheckboxChangeHandler.bind(this));\n                })\n                    .addText(caption));\n            }\n            else {\n                b\n                    .addClass(`${this.cssPrefix}-column-used`)\n                    .addText(caption);\n            }\n        });\n    }\n    getGroupForColumn(colId) {\n        const index = this.getGroupIndexForColumn(colId);\n        if (index >= 0)\n            return this.state.groups[index];\n        return null;\n    }\n    getGroupIndexForColumn(colId) {\n        for (var i = 0; i < this.state.groups.length; i++) {\n            const group = this.state.groups[i];\n            if (group.columns.indexOf(colId) >= 0)\n                return i;\n        }\n        return -1;\n    }\n    grandCheckboxChangeHandler(ev) {\n        this.state.grandTotals = !this.state.grandTotals;\n        this.onChanged && this.onChanged();\n    }\n    countsCheckboxChangeHandler(ev) {\n        this.state.recordCount = !this.state.recordCount;\n        this.onChanged && this.onChanged();\n    }\n    colCheckboxChangeHandler(ev) {\n        const input = ev.target;\n        const colId = input.parentElement.parentElement.getAttribute('data-colid');\n        // toggle column to track state\n        const index = this.selectState.columns.indexOf(colId);\n        if (index >= 0) {\n            this.selectState.columns.splice(index, 1);\n        }\n        else {\n            this.selectState.columns.push(colId);\n            const cols = this.getAvailableColumns();\n            this.selectState.columns = this.selectState.columns.sort((col1, col2) => {\n                const index1 = cols.findIndex(c => c.id == col1);\n                const index2 = cols.findIndex(c => c.id == col2);\n                return index1 - index2;\n            });\n        }\n        this.changed();\n    }\n    groupBtnClickHandler() {\n        this.state.groups.push({ columns: this.selectState.columns });\n        const cols = this.getAvailableColumns();\n        this.state.groups = this.state.groups.sort((g1, g2) => {\n            const g1Index = cols.findIndex(c => c.id == g1.columns[0]);\n            const g2Index = cols.findIndex(c => c.id == g2.columns[0]);\n            return g1Index - g2Index;\n        });\n        this.dropSelectState();\n        this.changed();\n    }\n    removeGroupBtnClickHandler(ev) {\n        const btn = ev.target;\n        const index = Number.parseInt(btn.parentElement.parentElement.getAttribute('data-gindex'));\n        this.state.groups.splice(index, 1);\n        this.changed();\n    }\n    removeAggrBtnClickHandler(ev) {\n        const btn = ev.target;\n        const colId = btn.parentElement.parentElement.querySelector(`.${this.cssPrefix}-column-used`)\n            .getAttribute('data-colid');\n        const index = this.state.aggregates.findIndex(a => a.colId == colId);\n        if (index >= 0) {\n            this.state.aggregates.splice(index, 1);\n            this.changed();\n        }\n    }\n    aggrBtnClickHandler(ev) {\n        this.query.getModel();\n        const colId = this.selectState.columns[0];\n        const col = this.getAvailableColumns().filter(c => c.id == colId)[0];\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            itemFilterCallback: (item) => {\n                return this.funcMap[item.id].appliedTypes.indexOf(col.expr.dataType) >= 0;\n            },\n            itemSelectedCallback: (data) => {\n                this.state.aggregates.push({\n                    colId: colId,\n                    funcId: data.id\n                });\n                this.dropSelectState();\n                this.changed();\n            }\n        });\n    }\n    clear() {\n        this.dropSelectState();\n        this.dropState();\n        this.changed();\n    }\n    dropSelectState() {\n        this.selectState = {\n            columns: []\n        };\n    }\n    dropState() {\n        this.state = {\n            groups: [],\n            aggregates: [],\n            recordCount: true,\n            grandTotals: false\n        };\n    }\n    changed() {\n        this.onChanged && this.onChanged();\n        this.renderCore();\n    }\n    createFunctionMenu() {\n        const model = this.query.getModel();\n        const funcs = this.query.getModel().getAggrFunctions();\n        const items = [];\n        for (const func of funcs) {\n            //add all functions except those we don't process\n            if (!func || func.id == 'MIN' || func.id == 'MAX' || func.id == 'CNTDST')\n                continue;\n            this.funcMap[func.id] = func;\n            const funcCaption = model\n                .getAggrFunctionCaption(func.id);\n            const item = {\n                id: func.id,\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n}\n\nclass AggrSettingsDialog {\n    constructor(context) {\n        this.context = context;\n        this.promise = null;\n    }\n    show(query) {\n        const initQuery = query || this.context.getQuery();\n        // copy query to prevent changes\n        this.query = this.context.createQuery();\n        this.query.loadFromData(initQuery.toJSONData());\n        // to rewrite with returning new aggrsettigns\n        // structure instead of apply on submit\n        if (!this.promise) {\n            this.promise = new Promise((resolve, reject) => {\n                const ds = this.context.getServices().getService('DialogService');\n                this.body = this.renderBody();\n                var dlg = ds.open({\n                    title: i18n$1.getText('AggrSettings', 'AggrDialogTitle'),\n                    body: this.body,\n                    onSubmit: () => {\n                        if (this.query.enableAggregation && !this.renderer.isValid())\n                            return false;\n                        initQuery.enableAggregation = this.query.enableAggregation;\n                        if (initQuery.enableAggregation) {\n                            initQuery.useAggregation(settings => {\n                                const s = this.renderer.getSettings();\n                                settings.loadFromData(s.saveToData());\n                            });\n                        }\n                        initQuery.fireChangedEvent({\n                            part: QueryChangePart.Aggregation,\n                            wasModified: false\n                        });\n                        resolve();\n                        return true;\n                    },\n                    onCancel: () => {\n                        resolve();\n                    }\n                });\n                this.renderer = new AggrSettingsRenderer({\n                    slot: this.body.querySelector('#AggrSettingsComponent'),\n                    query: this.query,\n                    onChanged: () => {\n                        dlg.clearAlert();\n                        const isValid = this.renderer.isValid();\n                        if (!isValid) {\n                            const error = this.renderer.getValidationMessage();\n                            dlg.showAlert(error, 'warning');\n                        }\n                        const btn = dlg.getRootElement()\n                            .querySelector('.kfrm-button.is-info');\n                        btn.disabled = !isValid && this.query.enableAggregation;\n                    }\n                });\n                if (this.query.enableAggregation) {\n                    this.renderer.render();\n                }\n            });\n        }\n        return this.promise.catch(e => console.error(e))\n            .finally(() => this.promise = null);\n    }\n    renderBody() {\n        const b = domel('div')\n            .addChild('div', b => b\n            .addClass(`eqjs-as-enableaggr`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.query.enableAggregation) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.enableAggrCheckBoxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'EnableAggrLabel')))))\n            .addChild('div', b => b\n            .id('AggrSettingsComponent'));\n        return b.toDOM();\n    }\n    enableAggrCheckBoxChangeHandler(e) {\n        this.query.enableAggregation = !this.query.enableAggregation;\n        this.body.querySelector('#AggrSettingsComponent').innerHTML = '';\n        if (this.query.enableAggregation) {\n            this.renderer.render();\n        }\n        else {\n            const btn = this.body ? this.body.closest('.kdlg-modal').querySelector('footer .kfrm-button.is-info') : null;\n            if (btn) {\n                btn.disabled = false;\n            }\n        }\n    }\n}\n\n/**\n * The widget responsed for rendering the name of the current query.\n */\nclass AggregationBar extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The HTML element where our widget should be placed.\n     * @param customQuery The custom query\n     */\n    constructor(slot, customQuery) {\n        super(slot);\n        this.linkClickCallback = () => {\n            new AggrSettingsDialog(this.context).show(this.getQuery());\n        };\n        this.queryEventCallbackId = null;\n        this.customQuery = customQuery;\n        this.group = WidgetGroup.Query | WidgetGroup.QueryStatus;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.destroyCore();\n        this.attachQueryObserver();\n    }\n    get cssPrefix() {\n        return 'eqjs-aggrb';\n    }\n    getWidgetType() {\n        return 'aggregationBar';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.render();\n    }\n    getLinkText() {\n        const query = this.getQuery();\n        if (query.enableAggregation) {\n            const aggrSettings = query.getAggregationSettings();\n            const groups = aggrSettings.getInternalGroups();\n            const aggrs = aggrSettings.getAggregates();\n            let groupArr = [];\n            const cols = query.getColumns();\n            for (const group of groups) {\n                const colNames = group.columns.map(value => {\n                    const col = cols.find(c => c.id == value);\n                    if (col) {\n                        return col.caption;\n                    }\n                    else {\n                        return '';\n                    }\n                });\n                groupArr.push(`[${colNames.join(', ')}]`);\n            }\n            const groupString = groupArr.join(', ');\n            let aggrArr = [];\n            const funcs = query.getModel().getAggrFunctions();\n            for (const aggr of aggrs) {\n                const col = cols.find(c => c.id == aggr.colId);\n                const func = funcs.find(f => f.id == aggr.funcId);\n                if (col && func) {\n                    aggrArr.push(`${col.caption} (${func.caption})`);\n                }\n            }\n            const aggrString = aggrArr.join(', ');\n            return `${groupString || i18n$1.getText('AggrSettings', 'NoGroupsLabel')} ::: ${aggrString ? `<${aggrString}>` : i18n$1.getText('AggrSettings', 'NoAggrsLabel')}`;\n        }\n        else {\n            return i18n$1.getText('AggrSettings', 'EmptySettingsLabel');\n        }\n    }\n    render() {\n        this.slot.classList.add(`${this.cssPrefix}-panel`);\n        const mobClass = getMobileCssClass();\n        if (mobClass) {\n            this.slot.classList.add(mobClass);\n        }\n        if (!this.dialogLink) {\n            this.dialogLink = document.createElement('a');\n            this.dialogLink.setAttribute('href', 'javascript:void(0)');\n            this.slot.appendChild(this.dialogLink);\n        }\n        // Update\n        this.dialogLink.textContent = this.getLinkText();\n        this.dialogLink.removeEventListener('click', this.linkClickCallback);\n        this.dialogLink.addEventListener('click', this.linkClickCallback);\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n        this.dialogLink = null;\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.refreshCore();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    destroyCore() {\n        this.clear();\n        this.detachQueryObserver();\n    }\n    getQuery() {\n        return this.customQuery || this.context.getQuery();\n    }\n}\n\nclass LocaleWidget extends Widget {\n    /**\n    * The default constructor.\n    * @param slot The html element.\n    */\n    constructor(slot) {\n        super(slot);\n        this.changeLocale = () => {\n            const newLocale = this.selectEl.value;\n            i18n.setCurrentLocale(newLocale);\n            this.context.refreshWidgets(WidgetGroup.All);\n        };\n        this.group = WidgetGroup.None;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.clear();\n        this.render();\n    }\n    getWidgetType() {\n        return 'changeLocale';\n    }\n    render() {\n        const locales = i18n.getLocales();\n        if (locales.length > 1) {\n            this.selectEl = document.createElement('select');\n            for (let locale of locales) {\n                let optionEl = document.createElement('option');\n                optionEl.value = locale.locale;\n                optionEl.innerHTML = this.displayLocaleName(locale);\n                this.selectEl.appendChild(optionEl);\n            }\n            this.selectEl.value = i18n.getCurrentLocale();\n            this.selectEl.classList.add('eqv-select');\n            this.selectEl.addEventListener('change', this.changeLocale);\n            this.slot.appendChild(this.selectEl);\n        }\n    }\n    displayLocaleName(locale) {\n        if (locale.englishName && locale.displayName) {\n            return `${locale.englishName} - ${locale.displayName}`;\n        }\n        else if (locale.englishName) {\n            return locale.englishName;\n        }\n        else if (locale.displayName) {\n            return locale.displayName;\n        }\n        return locale.locale;\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    destroyCore() {\n        this.clear();\n    }\n}\n\n/**\n * The widget responsed for rendering the name of the current query.\n */\nclass QueryNameWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The HTML element where our widget should be placed.\n     */\n    constructor(slot) {\n        super(slot);\n        this.queryEventCallbackId = null;\n        this.group = WidgetGroup.Query | WidgetGroup.QueryStatus;\n        this.nameTemplate = '{name}';\n    }\n    init(context, options) {\n        super.init(context, options);\n        if (options && options.nameTemplate) {\n            this.nameTemplate = options.nameTemplate;\n        }\n        this.destroyCore();\n        this.attachQueryObserver();\n    }\n    get cssPrefix() {\n        return 'eqjs-query-name';\n    }\n    getWidgetType() {\n        return 'queryName';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.render();\n    }\n    render() {\n        this.slot.classList.add(`${this.cssPrefix}`);\n        const mobClass = getMobileCssClass();\n        if (mobClass) {\n            this.slot.classList.add(mobClass);\n        }\n        if (!this.nameSlot) {\n            this.nameSlot = document.createElement('div');\n            this.nameSlot.classList.add(`${this.cssPrefix}-text`);\n            this.nameSlot.classList.add(`${this.cssPrefix}-theme`);\n            this.slot.appendChild(this.nameSlot);\n        }\n        if (!this.asteriskSlot) {\n            this.asteriskSlot = document.createElement('span');\n            this.asteriskSlot.innerHTML = \"*\";\n            this.asteriskSlot.classList.add(`${this.cssPrefix}-asterisk`);\n            this.slot.appendChild(this.asteriskSlot);\n        }\n        if (!this.tooltipSlot) {\n            this.tooltipSlot = document.createElement('span');\n            this.tooltipSlot.classList.add(`${this.cssPrefix}-tooltip`);\n            this.tooltipSlot.classList.add(`${this.cssPrefix}-theme`);\n            this.slot.appendChild(this.tooltipSlot);\n        }\n        // Update\n        const query = this.context.getQuery();\n        const queryName = query.getName();\n        const queryDescription = query.getDescription() || '';\n        const text = this.nameTemplate\n            .replace('{name}', queryName)\n            .replace('{description}', queryDescription);\n        this.nameSlot.textContent = text;\n        this.tooltipSlot.textContent = text;\n        this.asteriskSlot.style.visibility = query.isModified() ? \"visible\" : \"hidden\";\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n        this.nameSlot = null;\n        this.tooltipSlot = null;\n        this.asteriskSlot = null;\n    }\n    attachQueryObserver() {\n        const query = this.context.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.refreshCore();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.context.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    destroyCore() {\n        this.clear();\n        this.detachQueryObserver();\n    }\n}\n\nclass View {\n    // Widgets END\n    constructor() {\n        this.domRoots = [document];\n        this.defaultViewOptions = {\n            enableExport: true,\n            disableConfirmationOnQueryChange: false,\n            queryFileExtensions: 'text/xml,application/json',\n            result: {\n                clearResultOnQueryChange: true,\n                showChart: true,\n                showProcessIndicator: true\n            },\n            widgets: {\n                resultGrid: {\n                    addColumns: false\n                }\n            },\n            handlers: {}\n        };\n        this.viewOptions = {};\n        this.resultOptions = {};\n        this.enableExport = false;\n        this.services = EqServiceProvider.getInstance();\n        this.resetContext();\n        this.renderSpinner();\n    }\n    resetContext() {\n        this.context = createEqContext();\n    }\n    getDialogService() {\n        return this.services.getService('DialogService');\n    }\n    init(options) {\n        try {\n            this.context.initStart();\n            // to support shadow DOM rendering\n            if (options && options.shadowRoots)\n                this.domRoots = this.domRoots.concat(options.shadowRoots);\n            this.viewOptions = this.initOptions(options);\n            this.resultOptions = utils.assignDeep(this.defaultViewOptions.result, this.viewOptions.result);\n            this.initWidgets(this.viewOptions);\n            this.context.init(this.viewOptions);\n            this.initDone();\n        }\n        catch (err) {\n            this.context.throwError({ action: 'Init', sourceError: err });\n        }\n    }\n    initOptions(options) {\n        options = utils.assignDeep(this.defaultViewOptions, options);\n        // support old format\n        if (!options.widgets.easyGrid) {\n            options.widgets.easyGrid = options.widgets.resultGrid || {};\n        }\n        // map columnTitleFormat option to widgets that have similar option\n        if (options.columnTitleFormat) {\n            this.context.options.columnTitleFormat = options.columnTitleFormat;\n        }\n        //to support old paging options (should be removed in the next versions)\n        options.widgets.easyGrid.paging =\n            utils.assignDeep({}, options.result.paging, options.widgets.easyGrid.paging);\n        this.enableExport = options.enableExport || false;\n        if (!options.widgets.exportWidget) {\n            options.widgets.exportWidget = {};\n        }\n        options.widgets.exportWidget.enableExport = this.enableExport;\n        return options;\n    }\n    initWidgets(options) {\n        let queryPanel = \"QueryPanel\";\n        let columnsPanel = \"ColumnsPanel\";\n        let entitiesPanel = \"EntitiesPanel\";\n        let resultPanel = \"ResultPanel\";\n        let columnsBar = \"ColumnsBar\";\n        let sortingBar = \"SortingBar\";\n        let filterBar = \"FilterBar\";\n        let processBar = \"ProcessBar\";\n        let statementPanel = \"StatementPanel\";\n        let changeLocale = \"ChangeLocale\";\n        let queryNameLabel = \"QueryNameLabel\";\n        let facetsPanel = \"ResultFacetsPanel\";\n        let resultCount = \"ResultCount\";\n        let exportButton = \"ExportButton\";\n        let aggregationBar = \"AggregationBar\";\n        if (options.slots) {\n            queryNameLabel = options.slots.queryNameLabel || queryNameLabel;\n            queryPanel = options.slots.queryPanel || queryPanel;\n            columnsPanel = options.slots.columnsPanel || columnsPanel;\n            columnsBar = options.slots.columnsBar || columnsBar;\n            entitiesPanel = options.slots.entitiesPanel || entitiesPanel;\n            resultPanel = options.slots.resultPanel || resultPanel;\n            statementPanel = options.slots.statementPanel || statementPanel;\n            processBar = options.slots.processBar || processBar;\n            changeLocale = options.slots.changeLocale || changeLocale;\n            facetsPanel = options.slots.facetsPanel || facetsPanel;\n            resultCount = options.slots.resultCountSpan || resultCount;\n            filterBar = options.slots.filterBar || filterBar;\n            exportButton = options.slots.exportButtons || exportButton;\n            aggregationBar = options.slots.aggregationBar || aggregationBar;\n        }\n        const epElement = this.resolveElement(entitiesPanel);\n        if (epElement && !this.entitiesPanelWidget) {\n            this.entitiesPanelWidget = this.createEntitiesPanelWidget(epElement);\n            this.context.addWidget(this.entitiesPanelWidget);\n        }\n        const cpElement = this.resolveElement(columnsPanel);\n        if (cpElement && !this.columnsPanelWidget) {\n            this.columnsPanelWidget = this.createColumnsPanelWidget(cpElement);\n            this.context.addWidget(this.columnsPanelWidget);\n        }\n        const cbElement = this.resolveElement(columnsBar);\n        if (cbElement && !this.columnsBarWidget) {\n            this.columnsBarWidget = this.createColumnsBarWidget(cbElement);\n            this.context.addWidget(this.columnsBarWidget);\n        }\n        const qpElement = this.resolveElement(queryPanel);\n        if (qpElement && !this.queryPanelWidget) {\n            this.queryPanelWidget = this.createQueryPanelWidget(qpElement);\n            this.context.addWidget(this.queryPanelWidget);\n        }\n        this.resultPanelSlot = this.resolveElement(resultPanel);\n        if (this.resultPanelSlot) {\n            if (!this.resultGridWidget) {\n                let gridPanel = addElement(this.resultPanelSlot, 'div', { cssClass: 'eqv-result-grid' });\n                this.resultGridWidget = this.createResultGridWidget(gridPanel);\n                this.context.addWidget(this.resultGridWidget);\n            }\n            if (this.resultOptions.showChart && !this.chartWidget) {\n                let chartPanel = addElement(this.resultPanelSlot, 'div', { cssClass: 'eqv-chart-panel' });\n                chartPanel.style.display = 'none';\n                this.chartWidget = this.createChartWidget(chartPanel);\n                this.context.addWidget(this.chartWidget);\n            }\n        }\n        const qnElement = this.resolveElement(queryNameLabel);\n        if (qnElement && !this.queryNameWidget) {\n            this.queryNameWidget = this.createQueryNameWidget(qnElement);\n            this.context.addWidget(this.queryNameWidget);\n        }\n        const fbElement = this.resolveElement(filterBar);\n        if (fbElement && !this.filterBarWidget) {\n            this.filterBarWidget = this.createFilterBarWidget(fbElement);\n            this.context.addWidget(this.filterBarWidget);\n        }\n        const sbElement = this.resolveElement(sortingBar);\n        if (sbElement && !this.sortingBarWidget) {\n            this.sortingBarWidget = this.createSortingBarWidget(sbElement);\n            this.context.addWidget(this.sortingBarWidget);\n        }\n        const pbElement = this.resolveElement(processBar);\n        if (pbElement && !this.processWidget) {\n            this.processWidget = this.createProcessWidget(pbElement);\n            this.context.addWidget(this.processWidget);\n        }\n        const stElement = this.resolveElement(statementPanel);\n        if (stElement && !this.statementPanelWidget) {\n            this.statementPanelWidget = this.createStatementPanelWidget(stElement);\n            this.context.addWidget(this.statementPanelWidget);\n        }\n        const clElement = this.resolveElement(changeLocale);\n        if (clElement) {\n            const widget = this.createLocaleWidget(clElement);\n            this.context.addWidget(widget);\n        }\n        const fpElement = this.resolveElement(facetsPanel);\n        if (fpElement && !this.resultFacetPanelWidget) {\n            this.resultFacetPanelWidget = this.createResultFacetsPanel(fpElement);\n            this.context.addWidget(this.resultFacetPanelWidget);\n        }\n        const ewElement = this.resolveElement(exportButton);\n        if (ewElement && !this.exportWidget) {\n            this.exportWidget = this.createExportWidget(ewElement);\n            this.context.addWidget(this.exportWidget);\n        }\n        this.resultCountSlot = this.resolveElement(resultCount);\n        const aggrbElement = this.resolveElement(aggregationBar);\n        if (aggrbElement && !this.aggregationBarWidget) {\n            this.aggregationBarWidget = this.createAggregationBarWidget(aggrbElement);\n            this.context.addWidget(this.aggregationBarWidget);\n        }\n    }\n    initDone() { }\n    resolveElement(elementOrId) {\n        if (typeof elementOrId === 'string') {\n            for (const domRoot of this.domRoots) {\n                const el = domRoot.getElementById(elementOrId);\n                if (el)\n                    return el;\n            }\n            return null;\n        }\n        return elementOrId;\n    }\n    resolveElementsByClassName(className) {\n        let result = [];\n        for (const domRoot of this.domRoots) {\n            const elemList = domRoot.querySelectorAll('.' + className);\n            for (let i = 0; i < elemList.length; i++) {\n                result.push(elemList[i]);\n            }\n        }\n        return result;\n    }\n    /**\n    * Shows records count.\n    * @param count The value to show.\n    */\n    displayRecordsCount(count) {\n        if (this.resultCountSlot && (typeof count !== 'undefined')) {\n            this.resultCountSlot.style.display = \"inline\";\n            this.resultCountSlot.innerHTML = i18n.getText(\"MsgResultCount\").replace(\"{0}\", count.toString());\n        }\n    }\n    getContext() {\n        return this.context;\n    }\n    /**\n     * Sets dialog service for the view\n     * @param dialogService The dialog service.\n     */\n    setDialogService(dialogService) {\n        this.context.getServices().registerService('DialogService', () => dialogService);\n    }\n    /** @deprecated `executeQuery` is deprecated. Use `fetchData` instead*/\n    executeQuery(options) {\n        console.warn('`executeQuery` is deprecated. Use `fetchData` instead');\n        this.fetchData(options);\n    }\n    /**\n    * Fetches the data according to the query and other options defined in the context.\n    * @param options The options.\n    */\n    fetchData(options) {\n        options = options || { refresh: true };\n        this.context.clearResult();\n        //don't run fetch if the query is empty\n        if (this.context.getQuery().isEmpty() && !this.resultOptions.fetchEmptyQueries)\n            return;\n        this.showResultSpinner();\n        this.context.fetchData({\n            elasticPaging: options.elasticPaging,\n            success: (result) => {\n                this.hideResultSpinner();\n                this.toggleExportButtons();\n                this.displayRecordsCount(this.context.resultTable.getTotal());\n                if (options.refresh === true) {\n                    this.context.refreshWidgets(WidgetGroup.Result);\n                }\n                if (options.callback) {\n                    options.callback();\n                }\n                if (options.success) {\n                    options.success();\n                }\n            },\n            error: () => {\n                this.hideResultSpinner();\n            }\n        });\n    }\n    toggleExportButtons() {\n        if (this.enableExport && this.context.resultTable\n            && this.context.resultTable.getCachedCount() > 0) {\n            this.enableExportButtons();\n        }\n        else {\n            this.disableExportButtons();\n        }\n    }\n    enableExportButtons() {\n        // Nothing to do\n    }\n    disableExportButtons() {\n        // Nothing to do\n    }\n    renderSpinner() {\n        const html = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n        this._spinnerDiv = domel('div')\n            .addClass(`eqjs-result-spinner`)\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-progress-win8`, getMobileCssClass())\n            .addHtml(html))\n            .toDOM();\n    }\n    showResultSpinner() {\n        if (this.resultOptions.showProcessIndicator && this.resultPanelSlot) {\n            if (!this._spinnerDiv.parentNode) {\n                for (let i = 0; i < this.resultPanelSlot.children.length; i++) {\n                    const el = this.resultPanelSlot.children[i];\n                    domel(el).hide();\n                }\n                this.resultPanelSlot.appendChild(this._spinnerDiv);\n            }\n        }\n    }\n    hideResultSpinner() {\n        if (this.resultOptions.showProcessIndicator && this.resultPanelSlot) {\n            if (this._spinnerDiv.parentNode) {\n                this._spinnerDiv.parentNode.removeChild(this._spinnerDiv);\n                for (let i = 0; i < this.resultPanelSlot.children.length; i++) {\n                    const el = this.resultPanelSlot.children[i];\n                    domel(el).show();\n                }\n            }\n        }\n    }\n    /**\n    * Creates the widget that represents Chart Widget.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createChartWidget(slotElement) {\n        if (this.resultOptions.chartWidgetResolver) {\n            return this.resultOptions.chartWidgetResolver(slotElement);\n        }\n        else {\n            return new ChartJsWidget(slotElement);\n        }\n    }\n    /**\n    * Creates the widget that represents Result Grid.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createResultGridWidget(slotElement) {\n        if (this.resultOptions.resultGridResolver) {\n            return this.resultOptions.resultGridResolver(slotElement);\n        }\n        else {\n            return new EasyGridWidget(slotElement);\n        }\n    }\n    /**\n    * Creates the widget that represents Entity Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createEntitiesPanelWidget(slot) {\n        return new EntitiesPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Columns Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createColumnsPanelWidget(slot) {\n        return new ColumnsPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Query Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createQueryPanelWidget(slot) {\n        return new QueryPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Locale Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createLocaleWidget(slot) {\n        return new LocaleWidget(slot);\n    }\n    /**\n    * Creates the widget that represents Process Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createProcessWidget(slot) {\n        return new ProcessWidget(slot);\n    }\n    /**\n    * Creates the widget that represents Columns Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createColumnsBarWidget(slot) {\n        return new ColumnsBar(slot);\n    }\n    /**\n    * Creates the widget that represents Filter Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createFilterBarWidget(slot) {\n        return new FilterBar(slot);\n    }\n    /**\n    * Creates the widget that represents Sorting Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createSortingBarWidget(slot) {\n        return new SortingBar(slot);\n    }\n    /**\n    * Creates the widget that represents Query Name Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createQueryNameWidget(slot) {\n        return new QueryNameWidget(slot);\n    }\n    /**\n     * Creates the widget that represents Statement Panel Widget.\n     * @param slot\n     */\n    createStatementPanelWidget(slot) {\n        return new StatementPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Result Facets Panel Widget.\n    * @param slot\n    */\n    createResultFacetsPanel(slot) {\n        return new ResultFacetsPanel(slot);\n    }\n    /**\n     * Creates the widget that represents Export funcionality.\n     * @param slot\n     */\n    createExportWidget(slot) {\n        return new ExportWidget(slot);\n    }\n    /**\n     * Creates the widget that represents Aggregation Bar Widget.\n     * @param slot\n     */\n    createAggregationBarWidget(slot) {\n        return new AggregationBar(slot);\n    }\n    detach() {\n        if (this.entitiesPanelWidget) {\n            this.entitiesPanelWidget.destroy();\n            this.entitiesPanelWidget = null;\n        }\n        if (this.columnsPanelWidget) {\n            this.columnsPanelWidget.destroy();\n            this.columnsPanelWidget = null;\n        }\n        if (this.queryPanelWidget) {\n            this.queryPanelWidget.destroy();\n            this.queryPanelWidget = null;\n        }\n        if (this.columnsBarWidget) {\n            this.columnsBarWidget.destroy();\n            this.columnsBarWidget = null;\n        }\n        if (this.resultGridWidget) {\n            this.resultGridWidget.destroy();\n            this.resultGridWidget = null;\n        }\n        if (this.chartWidget) {\n            this.chartWidget.destroy();\n            this.chartWidget = null;\n        }\n        if (this.queryNameWidget) {\n            this.queryNameWidget.destroy();\n            this.queryNameWidget = null;\n        }\n        if (this.processWidget) {\n            this.processWidget.destroy();\n            this.processWidget = null;\n        }\n        if (this.localeWidget) {\n            this.localeWidget.destroy();\n            this.localeWidget = null;\n        }\n        if (this.statementPanelWidget) {\n            this.statementPanelWidget.destroy();\n            this.statementPanelWidget = null;\n        }\n        if (this.filterBarWidget) {\n            this.filterBarWidget.destroy();\n            this.filterBarWidget = null;\n        }\n        if (this.sortingBarWidget) {\n            this.sortingBarWidget.destroy();\n            this.sortingBarWidget = null;\n        }\n        if (this.statementWidget) {\n            this.statementWidget.destroy();\n            this.statementWidget = null;\n        }\n        if (this.exportWidget) {\n            this.exportWidget.destroy();\n            this.exportWidget = null;\n        }\n        if (this.resultFacetPanelWidget) {\n            this.resultFacetPanelWidget.destroy();\n            this.resultFacetPanelWidget = null;\n        }\n        if (this.resultCountSlot) {\n            this.resultCountSlot.innerHTML = '';\n            this.resultCountSlot = null;\n        }\n        if (this.resultPanelSlot) {\n            this.resultPanelSlot.innerHTML = '';\n            this.resultPanelSlot = null;\n        }\n        this.domRoots = [document];\n        this.resetContext();\n    }\n    refreshWidgets(groups) {\n        this.context.refreshWidgets(groups);\n    }\n}\n\n/**\n * The EasyQuery client-side view that represents the UI for advanced search page\n */\nclass AdvancedSearchView extends View {\n    constructor() {\n        super();\n        this.exportButtons = [];\n        // Name of the class to add to disabled elements.\n        this.disabledClass = \"eqjs-disabled\";\n        this.dropdownContainerClass = \"eqv-dropdown-container\";\n        this.dropdownButtonClass = \"eqv-drop-button\";\n        this.dropdownContentClass = \"eqv-dropdown-content\";\n        this.dropdownShowClass = \"eqv-dropdown-show\";\n        this._querySaveTemplate = `<div id=\"kdlg-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-content\"></label>\r\n                <input type=\"text\" name=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        this.queryListMenu = null;\n        this.fetchDataButtonClickHandler = this.fetchDataButtonClick.bind(this);\n        this.clearQueryButtonClickHandler = this.clearQueryButtonClick.bind(this);\n        this.newQueryButtonClickHandler = this.newQueryButtonClick.bind(this);\n        this.loadQueryButtonClickHandler = this.loadQueryButtonClick.bind(this);\n        this.saveQueryButtonClickHandler = this.saveQueryButtonClick.bind(this);\n        this.copyQueryButtonClickHandler = this.copyQueryButtonClick.bind(this);\n        this.removeQueryButtonClickHandler = this.removeQueryButtonClick.bind(this);\n        this.storageButtonClickHandler = this.storageDropButtonClick.bind(this);\n        this.saveQueryToFileButtonClickHandler = this.saveQueryToFileButtonClick.bind(this);\n        this.loadQueryFromFileButtonClickHandler = this.loadQueryFromFileButtonClick.bind(this);\n        const self = this;\n        this.exportButtonClickHandler = function (e) {\n            if (!this.classList.contains(self.disabledClass)) {\n                const format = this.getAttribute(\"data-format\");\n                self.getContext().exportResult({ format: format });\n            }\n        };\n        this.queryChangedHandler = (ev) => {\n            const eventData = ev.data;\n            if (this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n                this.context.refreshWidgets(WidgetGroup.Result);\n            }\n            this.disableExportButtons();\n            if (this.resultCountSlot) {\n                this.resultCountSlot.style.display = \"none\";\n            }\n            if (this.viewOptions.syncQueryOnChange) {\n                this.syncQuery();\n            }\n            if (this.viewOptions.fetchDataOnChange) {\n                if (!eventData || (eventData.part != QueryChangePart.ExtraData\n                    && eventData.part != QueryChangePart.Facets)) {\n                    this.fetchData();\n                }\n            }\n        };\n        this.outsideClickHandler = (event) => {\n            let currentContent = null;\n            if (event.target.matches(`.${this.dropdownButtonClass}`)) {\n                currentContent = event.target.parentElement.querySelector(`.${this.dropdownContentClass}`);\n            }\n            else if (event.target.matches(`.${this.dropdownButtonClass} > span`)) {\n                currentContent = event.target.parentElement.parentElement.querySelector(`.${this.dropdownContentClass}`);\n            }\n            var dropdowns = this.resolveElementsByClassName(this.dropdownContentClass);\n            for (let i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (currentContent != openDropdown) {\n                    if (openDropdown.classList.contains(this.dropdownShowClass)) {\n                        openDropdown.classList.remove(this.dropdownShowClass);\n                    }\n                }\n            }\n        };\n    }\n    refreshQueryList() {\n        if (this.queryListPanel) {\n            this.queryListPanel.innerHTML = '';\n            this.context.loadQueryList({\n                success: (data) => {\n                    const b = domel('ul', this.queryListPanel)\n                        .addClass('list-group list-group-flush');\n                    data.map(item => {\n                        b.addChild('li', b => {\n                            b.addClass('list-group-item')\n                                .setStyle('cursor', 'pointer')\n                                .data('id', item.id)\n                                .text(item.name)\n                                .on('click', () => {\n                                this.checkIfQueryModified(() => this.loadQuery(item.id));\n                            });\n                        });\n                    });\n                }\n            });\n        }\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        if (typeof (options.syncQueryOnChange) == 'undefined') {\n            options.syncQueryOnChange = true;\n        }\n        return options;\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        let exportClass = \"eqjs-export\";\n        let queryContentInputId = \"QueryContentJson\";\n        let clearQueryButtonId = \"ClearQueryButton\";\n        let newQueryButtonId = \"NewQueryButton\";\n        let loadQueryButtonId = \"LoadQueryButton\";\n        let saveQueryButtonId = \"SaveQueryButton\";\n        let copyQueryButtonId = \"CopyQueryButton\";\n        let removeQueryButtonId = \"RemoveQueryButton\";\n        let storageButtonId = \"StorageDropButton\";\n        let fetchDataButtonId = \"FetchDataButton\";\n        let loadQueryFromFileButtonId = \"LoadQueryFromFileButton\";\n        let saveQueryToFileButtonId = \"SaveQueryToFileButton\";\n        let queryListPanelId = \"QueryListPanel\";\n        if (options.slots) {\n            queryContentInputId = options.slots.queryContentInput || queryContentInputId;\n            fetchDataButtonId = options.slots.fetchDataButton || fetchDataButtonId;\n            clearQueryButtonId = options.slots.clearQueryButton || clearQueryButtonId;\n            newQueryButtonId = options.slots.newQueryButton || newQueryButtonId;\n            loadQueryButtonId = options.slots.loadQueryButton || loadQueryButtonId;\n            saveQueryButtonId = options.slots.saveQueryButton || saveQueryButtonId;\n            copyQueryButtonId = options.slots.copyQueryButton || copyQueryButtonId;\n            removeQueryButtonId = options.slots.removeQueryButton || removeQueryButtonId;\n            storageButtonId = options.slots.storageButton || storageButtonId;\n            exportClass = options.slots.exportClass || exportClass;\n            loadQueryFromFileButtonId = options.slots.loadQueryFromFileButton || loadQueryFromFileButtonId;\n            saveQueryToFileButtonId = options.slots.saveQueryToFileButton || saveQueryToFileButtonId;\n            queryListPanelId = options.slots.queryListPanel || queryListPanelId;\n        }\n        this.exportButtons = this.domRoots.reduce((elems, root) => elems.concat(Array.from(root.querySelectorAll(`.${exportClass}`))), []);\n        if (!options.enableExport) {\n            this.hideExportButtons();\n        }\n        this.disableExportButtons();\n        this.exportButtons.forEach((button) => {\n            button.addEventListener('click', this.exportButtonClickHandler);\n        });\n        if (!this.fetchDataButton) {\n            this.fetchDataButton = this.resolveElement(fetchDataButtonId);\n            if (!this.fetchDataButton) {\n                this.fetchDataButton = this.resolveElement('ExecuteQueryButton'); //deprecated, should be removed on the next major update\n            }\n            if (this.fetchDataButton) {\n                this.fetchDataButton.addEventListener('click', this.fetchDataButtonClickHandler);\n            }\n        }\n        if (!this.clearQueryButton) {\n            this.clearQueryButton = this.resolveElement(clearQueryButtonId);\n            if (this.clearQueryButton) {\n                this.clearQueryButton.addEventListener('click', this.clearQueryButtonClickHandler);\n            }\n        }\n        if (!this.newQueryButton) {\n            this.newQueryButton = this.resolveElement(newQueryButtonId);\n            if (this.newQueryButton) {\n                this.newQueryButton.addEventListener('click', this.newQueryButtonClickHandler);\n            }\n        }\n        if (!this.loadQueryButton) {\n            this.loadQueryButton = this.resolveElement(loadQueryButtonId);\n            if (this.loadQueryButton) {\n                this.loadQueryButton.addEventListener('click', this.loadQueryButtonClickHandler);\n            }\n        }\n        if (!this.saveQueryButton) {\n            this.saveQueryButton = this.resolveElement(saveQueryButtonId);\n            if (this.saveQueryButton) {\n                this.saveQueryButton.addEventListener('click', this.saveQueryButtonClickHandler);\n            }\n        }\n        if (!this.copyQueryButton) {\n            this.copyQueryButton = this.resolveElement(copyQueryButtonId);\n            if (this.copyQueryButton) {\n                this.copyQueryButton.addEventListener('click', this.copyQueryButtonClickHandler);\n            }\n        }\n        if (!this.removeQueryButton) {\n            this.removeQueryButton = this.resolveElement(removeQueryButtonId);\n            if (this.removeQueryButton) {\n                this.removeQueryButton.addEventListener('click', this.removeQueryButtonClickHandler);\n            }\n        }\n        if (!this.storageDropButton) {\n            this.storageDropButton = this.resolveElement(storageButtonId);\n            if (this.storageDropButton) {\n                this.storageDropButton.addEventListener('click', this.storageButtonClickHandler);\n            }\n        }\n        if (!this.saveQueryToFileButton) {\n            this.saveQueryToFileButton = this.resolveElement(saveQueryToFileButtonId);\n            if (this.saveQueryToFileButton) {\n                this.saveQueryToFileButton.addEventListener('click', this.saveQueryToFileButtonClickHandler);\n            }\n        }\n        if (!this.queryListPanel) {\n            this.queryListPanel = this.resolveElement(queryListPanelId);\n            //For backward compatibility. Remove on the next update\n            if (!this.queryListPanel) {\n                this.queryListPanel = this.resolveElement('QueryListSlot');\n            }\n            if (this.queryListPanel) {\n                this.context.addEventListener('ready', () => {\n                    this.refreshQueryList();\n                });\n            }\n        }\n        if (!this.loadQueryFromFileButton) {\n            this.loadQueryFromFileButton = this.resolveElement(loadQueryFromFileButtonId);\n            if (this.loadQueryFromFileButton) {\n                this.loadQueryFromFileInput = document.createElement('input');\n                this.loadQueryFromFileInput.type = 'file';\n                this.loadQueryFromFileInput.accept = options.queryFileExtensions;\n                this.loadQueryFromFileInput.style.display = 'none';\n                document.body.appendChild(this.loadQueryFromFileInput);\n                this.loadQueryFromFileInput.addEventListener('change', this.loadQueryFromFileInputSelect.bind(this));\n                this.loadQueryFromFileButton.addEventListener('click', this.loadQueryFromFileButtonClickHandler);\n            }\n        }\n        // hide any dropdown menu when user clicks somewhere\n        window.addEventListener('click', this.outsideClickHandler);\n    }\n    initDone() {\n        super.initDone();\n        const query = this.context.getQuery();\n        query.addChangedCallback(this.queryChangedHandler);\n    }\n    /**\n    * Sends current query to the backend.\n    */\n    syncQuery() {\n        this.context.syncQuery({\n            success: (responseData) => {\n                if (responseData.statement) {\n                    this.context.refreshWidgets(WidgetGroup.Statement);\n                }\n            }\n        });\n    }\n    /**\n    * Disables export buttons.\n    */\n    disableExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.disabled = true;\n            if (!button.classList.contains(this.disabledClass)) {\n                button.classList.add(this.disabledClass);\n            }\n        });\n    }\n    /**\n    * Enables export buttons.\n    */\n    enableExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.disabled = false;\n            if (button.classList.contains(this.disabledClass)) {\n                button.classList.remove(this.disabledClass);\n            }\n        });\n    }\n    /**\n    * Hides export buttons.\n    */\n    hideExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.style.display = \"none\";\n        });\n    }\n    clearQueryButtonClick() {\n        this.showQueryClearDialog((result) => {\n            if (result) {\n                this.context.clearQuery();\n                this.context.refreshWidgets(WidgetGroup.Statement);\n            }\n        });\n    }\n    createNewQuery(options) {\n        return this.context.newQuery(options);\n    }\n    loadQuery(queryId) {\n        if (!queryId)\n            return;\n        this.context.loadQuery({\n            queryId: queryId,\n            silent: false\n        });\n    }\n    saveQuery(success, error) {\n        this.context.saveQuery({\n            success: () => {\n                if (success)\n                    success();\n                this.context.getQuery().fireChangedEvent({\n                    part: QueryChangePart.Properties,\n                    wasModified: false\n                });\n                this.refreshQueryList();\n            },\n            error: error\n        });\n    }\n    saveCurrentQuery(copyQuery = false, callback) {\n        const query = this.context.getQuery();\n        if (query.isNewbie || copyQuery) {\n            this.showSaveQueryDialog((newQueryName) => new Promise(resolve => {\n                if (!newQueryName)\n                    return;\n                this.checkSaveQueryName(newQueryName)\n                    .then(() => {\n                    query.regenerateId();\n                    query.setName(newQueryName);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.Properties,\n                        wasModified: true\n                    });\n                    this.saveQuery(() => { resolve({ success: true }); }, (error) => resolve({ success: false, message: error }));\n                }, (message) => resolve({ success: false, message }));\n            }));\n        }\n        else {\n            this.saveQuery(callback);\n        }\n    }\n    checkSaveQueryName(name) {\n        return new Promise((resolve, reject) => {\n            this.context.loadQueryList({\n                success: (queryList) => {\n                    const found = queryList.filter(item => item.name.toLowerCase() == name.toLowerCase());\n                    if (found.length == 0) {\n                        resolve();\n                    }\n                    else {\n                        reject(\"Can't save the query. A query with this name already exists.\");\n                    }\n                },\n                error: (message) => {\n                    reject(message);\n                }\n            });\n        });\n    }\n    checkIfQueryModified(callback) {\n        if (this.context.getQuery().isModified()\n            && !this.viewOptions.disableConfirmationOnQueryChange) {\n            this.showQueryChangedDialog((result) => {\n                if (result) {\n                    this.saveCurrentQuery(false, callback);\n                }\n                else {\n                    callback();\n                }\n            });\n        }\n        else {\n            callback();\n        }\n    }\n    removeCurrentQuery() {\n        this.context.removeQuery({\n            success: () => {\n                this.createNewQuery({\n                    useStorage: false\n                });\n                if (this.resultCountSlot) {\n                    this.resultCountSlot.style.display = \"none\";\n                }\n                this.context.clearResult();\n                this.refreshQueryList();\n            }\n        });\n    }\n    // ------------------ Dialog wrappers ---------------------\n    showNewQueryDialog(callback) {\n        const ds = this.context.getServices().getService('DialogService');\n        const defVal = i18n.getText('NewQueryDefName');\n        const dlg = ds.open({\n            title: i18n.getText('NewQueryTitle'),\n            body: this._querySaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('NewQueryContent');\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    if (!callback)\n                        return true;\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(value)\n                        .then(result => {\n                        header.removeChild(processEl);\n                        dlg.enableButtons();\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    showQueryClearDialog(callback) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('QueryChangedTitle'), i18n.getText('QueryClearContent'), callback);\n    }\n    showQueryChangedDialog(callback) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('QueryChangedTitle'), i18n.getText('QueryChangedContent'), callback);\n    }\n    showSaveQueryDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        const newQueryName = query.isNewbie\n            ? query.getName()\n            : i18n.getText('SaveQueryDefName').replace('{queryName}', query.getName());\n        const dlg = ds.open({\n            title: i18n.getText('SaveQueryTitle'),\n            body: this._querySaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = newQueryName;\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveQueryContent');\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    if (!callback)\n                        return true;\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(value)\n                        .then(result => {\n                        dlg.enableButtons();\n                        header.removeChild(processEl);\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    showRemoveQueryDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        ds.openConfirm(i18n.getText('RemoveQueryTitle'), i18n.getText('RemoveQueryContent').replace('{queryName}', query.getName()), callback);\n    }\n    showSaveQueryToFileDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        const body = this.renderSaveToFileDialogBody(query.getName());\n        const dlg = ds.open({\n            title: i18n.getText('SaveQueryToFileDlgTitle'),\n            body: body,\n            onSubmit: () => {\n                const fileNameInput = body.querySelector('#kdlgFileNameInput');\n                const fileName = fileNameInput ? fileNameInput.value : \"Query\";\n                const formatSelector = body.querySelector('#kdlgFileFormatSelector');\n                const format = formatSelector ? formatSelector.value : 'json';\n                if (callback) {\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(fileName, format)\n                        .then(result => {\n                        dlg.enableButtons();\n                        header.removeChild(processEl);\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                    return false;\n                }\n                return true;\n            }\n        });\n    }\n    renderSaveToFileDialogBody(name, format = \"json\") {\n        const isIE = browserUtils.isIE();\n        const fieldsClass = isIE\n            ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n            : 'kfrm-fields col-a-1 label-align-right';\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        return domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            b.addClass(fieldsClass)\n                .addChild('label', b => b\n                .attr('for', 'file_name')\n                .addText(i18n.getText('FileNameLabel')))\n                .addChild('div', b => b\n                .addClass(horizClass)\n                .addChild('input', b => b\n                .id('kdlgFileNameInput')\n                .name('file_name')\n                .type('text')\n                .attr('value', name))\n                .addChild('label', b => b\n                .addText('.'))\n                .addChild('div', b => b\n                .addClass('kfrm-select')\n                .addChild('select', b => b\n                .id('kdlgFileFormatSelector')\n                .addClass('kdlg-form-control')\n                .addOption({\n                value: 'xml',\n                selected: 'xml' === format\n            })\n                .addOption({\n                value: 'json',\n                selected: 'json' === format\n            }))));\n        })\n            .toDOM();\n    }\n    // ------------------ Query management buttons handler ---------------------\n    newQueryButtonClick() {\n        this.checkIfQueryModified(() => {\n            this.createNewQuery();\n        });\n    }\n    saveQueryToFileButtonClick() {\n        this.showSaveQueryToFileDialog((fileName, format) => new Promise((resolve) => {\n            this.context.getQueryFile({\n                fileName: fileName,\n                format: format,\n                success: () => resolve({ success: true }),\n                error: (error) => resolve({ success: false, message: error })\n            });\n        }));\n    }\n    loadQueryFromFileButtonClick() {\n        this.checkIfQueryModified(() => {\n            this.showLoadQueryFromFileDialog();\n        });\n    }\n    showLoadQueryFromFileDialog() {\n        this.loadQueryFromFileInput.click();\n    }\n    loadQueryFromFileInputSelect() {\n        const files = this.loadQueryFromFileInput.files;\n        const file = files.item(0);\n        const data = new FormData();\n        data.append(file.name, file);\n        this.loadQueryFromFileInput.value = \"\";\n        this.context.uploadQueryFile({\n            data: data,\n            success: () => {\n                this.syncQuery();\n                this.refreshQueryList();\n            }\n        });\n    }\n    loadQueryButtonClick() {\n        this.context.loadQueryList({\n            success: (data) => {\n                this.fillLoadQueryButtonMenu(data);\n                this.queryListMenu.showMenu({\n                    anchor: this.loadQueryButton,\n                    adjustHeight: false,\n                    itemSelectedCallback: (data) => {\n                        this.checkIfQueryModified(() => this.loadQuery(data.id));\n                    }\n                });\n            }\n        });\n    }\n    fillLoadQueryButtonMenu(queryList) {\n        const query = this.getContext().getQuery();\n        this.queryListMenu = new PopupMenu({\n            items: queryList.map(item => ({ id: item.id, text: item.name })),\n            selectedIds: query.getId()\n        });\n    }\n    saveQueryButtonClick() {\n        this.saveCurrentQuery();\n    }\n    copyQueryButtonClick() {\n        this.saveCurrentQuery(true);\n    }\n    removeQueryButtonClick() {\n        this.showRemoveQueryDialog((result) => {\n            if (result) {\n                this.removeCurrentQuery();\n            }\n        });\n    }\n    storageDropButtonClick() {\n        let container = this.storageDropButton.parentElement;\n        let content = container.querySelector(`.${this.dropdownContentClass}`);\n        if (content) {\n            window.setTimeout(() => content.classList.toggle(this.dropdownShowClass), 100);\n        }\n    }\n    fetchDataButtonClick() {\n        this.fetchData();\n    }\n    detach() {\n        this.enableExportButtons();\n        this.exportButtons.forEach((button) => {\n            button.removeEventListener('click', this.exportButtonClickHandler);\n        });\n        this.exportButtons = [];\n        if (this.fetchDataButton) {\n            this.fetchDataButton.removeEventListener('click', this.fetchDataButtonClickHandler);\n            this.fetchDataButton = null;\n        }\n        if (this.clearQueryButton) {\n            this.clearQueryButton.removeEventListener('click', this.clearQueryButtonClickHandler);\n            this.clearQueryButton = null;\n        }\n        if (this.newQueryButton) {\n            this.newQueryButton.removeEventListener('click', this.newQueryButtonClickHandler);\n            this.newQueryButton = null;\n        }\n        if (this.loadQueryButton) {\n            this.loadQueryButton.removeEventListener('click', this.loadQueryButtonClickHandler);\n            this.loadQueryButton = null;\n        }\n        if (this.saveQueryButton) {\n            this.saveQueryButton.removeEventListener('click', this.saveQueryButtonClickHandler);\n            this.saveQueryButton = null;\n        }\n        if (this.copyQueryButton) {\n            this.copyQueryButton.removeEventListener('click', this.copyQueryButtonClickHandler);\n            this.copyQueryButton = null;\n        }\n        if (this.removeQueryButton) {\n            this.removeQueryButton.removeEventListener('click', this.removeQueryButtonClickHandler);\n            this.removeQueryButton = null;\n        }\n        if (this.storageDropButton) {\n            this.storageDropButton.removeEventListener('click', this.storageButtonClickHandler);\n            this.storageDropButton = null;\n        }\n        if (this.saveQueryToFileButton) {\n            this.saveQueryToFileButton.removeEventListener('click', this.saveQueryToFileButtonClickHandler);\n            this.saveQueryToFileButton = null;\n        }\n        if (this.queryListPanel) {\n            this.queryListPanel = null;\n        }\n        if (this.loadQueryFromFileButton) {\n            if (this.loadQueryFromFileInput) {\n                document.body.removeChild(this.loadQueryFromFileInput);\n            }\n            this.loadQueryFromFileButton.removeEventListener('click', this.loadQueryFromFileButtonClickHandler);\n            this.loadQueryFromFileButton = null;\n        }\n        super.detach();\n    }\n}\n\n/**\n * The view that represents a data-filtering scenario (a text search for one entity/table)\n */\nclass DataFilterView extends View {\n    constructor() {\n        super();\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        options.result.fetchEmptyQueries = true;\n        const query = this.context.getQuery();\n        query.addChangedCallback(() => {\n            if (this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n            }\n            if (options.syncQueryOnChange) {\n                this.context.syncQuery();\n            }\n        });\n        this.context.addEventListener('ready', this.fetchData.bind(this));\n        return options;\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        if (this.sortingBarWidget) {\n            this.context.getQuery().addChangedCallback((ev) => {\n                const edata = ev.data;\n                if (!edata || (edata.part != QueryChangePart.SortingColumns\n                    && edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                    return;\n                }\n                this.fetchData();\n            });\n        }\n        if (this.filterBarWidget) {\n            const widgetType = this.filterBarWidget.getWidgetType();\n            options.widgets[widgetType] = options.widgets[widgetType] || {};\n            if (!options.widgets[widgetType].applyFilterCallback) {\n                options.widgets[widgetType].applyFilterCallback = () => {\n                    this.fetchData();\n                };\n            }\n        }\n    }\n    /**\n     * Obsolete. Left for backward compatibility.\n     * Use fetchData() instead\n     * @deprecated Use `fetchData()`\n     */\n    applyQueryFilter() {\n        console.warn('applyQueryFilter is obsolete. Use fetchData instead');\n        this.fetchData();\n    }\n    fetchData() {\n        super.fetchData({ refresh: true });\n    }\n}\n\n/**\n * The EasyQuery client-side view that represents the UI for data filtering page\n */\nclass HtmlDataFilterView extends DataFilterView {\n    constructor() {\n        super();\n    }\n    /**\n    * Creates the widget that represents Result Grid.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createResultGridWidget(slotElement) {\n        return new EqHtmlGrid(slotElement);\n    }\n    /**\n     * Obsolete. Left for backward compatibility.\n     * Use fetchData() instead\n     */\n    applyQueryFilter() {\n        console.warn('applyQueryFilter is obsolete. Use fetchData instead');\n        this.fetchData();\n    }\n}\n\n/**\n * The view that represents the \"ad-hoc reporting\" scenario\n */\nclass ReportView extends View {\n    constructor() {\n        super();\n        this.reports = [];\n        this.reportCache = [];\n        this.exportButtons = [];\n        this.exportClass = \"eqjs-export\";\n        this.disabledClass = \"eqjs-disabled\";\n        this.enableExport = false;\n        this.useReportCache = true;\n        this.syncReportOnChange = true;\n        this._reportSaveTemplate = `<div id=\"kdlg-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-content\"></label>\r\n                <input type=\"text\" name=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-input\" />\r\n                <label for=\"kdlg-dialog-form-textarea\" id=\"kdlg-dialog-form-desc-label\"></label>\r\n                <textarea type=\"text\" name=\"kdlg-dialog-form-textarea\" id=\"kdlg-dialog-form-textarea\"></textarea>\r\n            </div>\r\n        </div>`;\n        this.context.useStoredQueryOnFetch = true;\n        this.exportButtonClickHandler = (srcElement, e) => {\n            if (!srcElement.classList.contains(this.disabledClass)) {\n                const format = srcElement.getAttribute(\"data-format\");\n                this.context.exportResult({ format: format });\n            }\n        };\n        this.clearReportButtonClickHandler = this.clearReportButtonClick.bind(this);\n        this.newReportButtonClickHandler = this.newReportButtonClick.bind(this);\n        this.loadReportButtonClickHandler = this.loadReportButtonClick.bind(this);\n        this.saveReportButtonClickHandler = this.saveReportButtonClick.bind(this);\n        this.removeReportButtonClickHandler = this.removeReportButtonClick.bind(this);\n        this.reloadReportDataButtonClickHandler = this.reloadReportDataButtonClick.bind(this);\n        browserUtils.onMobileModeChanged(_ => {\n            document.location.reload();\n        });\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        if (typeof (options.syncQueryOnChange) !== \"undefined\") {\n            this.syncReportOnChange = options.syncQueryOnChange;\n        }\n        if (typeof (options.syncReportOnChange) !== \"undefined\") {\n            this.syncReportOnChange = options.syncReportOnChange;\n        }\n        options.syncQueryOnChange = this.syncReportOnChange;\n        if (typeof (options.useReportCache) !== \"undefined\") {\n            this.useReportCache = options.useReportCache;\n        }\n        this.defaultReportId = options.defaultReportId;\n        return options;\n    }\n    initDone() {\n        super.initDone();\n        const query = this.context.getQuery();\n        query.addChangedCallback((event) => {\n            const eventData = event.data;\n            if (eventData) {\n                if (eventData.changeType == \"query.switched\") {\n                    this.context.clearResult();\n                    this.context.refreshWidgets(WidgetGroup.Result);\n                    this.context.refreshWidgets(WidgetGroup.Query);\n                }\n                else {\n                    this.disableExportButtons();\n                    if (this.resultCountSlot) {\n                        this.resultCountSlot.style.display = \"none\";\n                    }\n                }\n            }\n            //true if we just switched the report or changed facets (query was not changed)\n            let isLiteUpdate = !eventData\n                || eventData.changeType == \"query.switched\"\n                || eventData.part == QueryChangePart.ExtraData\n                || eventData.part == QueryChangePart.Facets;\n            let syncStarted = false;\n            if (this.syncReportOnChange) {\n                const needSync = eventData && eventData.changeType != \"query.switched\" && !eventData.noSync;\n                if (needSync) {\n                    syncStarted = true;\n                    this.syncReport({\n                        success: () => {\n                            // fetch data on query change\n                            if (!isLiteUpdate && this.viewOptions.fetchDataOnChange) {\n                                this.fetchData();\n                            }\n                        }\n                    });\n                }\n            }\n            // clear dataset result on query change\n            if (!isLiteUpdate && this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n                this.context.refreshWidgets(WidgetGroup.Result);\n            }\n            if (!isLiteUpdate && !syncStarted && this.viewOptions.fetchDataOnChange) {\n                this.fetchData();\n            }\n        });\n        window.setTimeout(() => {\n            this.context.loadQueryList({\n                success: (data) => {\n                    if (Array.isArray(data)) {\n                        this.reports = data;\n                        const exists = this.reports.filter(r => r.id == this.defaultReportId).length > 0;\n                        if (exists) {\n                            this.renderReportList({ reportId: this.defaultReportId });\n                        }\n                        else {\n                            this.renderReportList();\n                        }\n                    }\n                }\n            });\n        }, 100);\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        let clearReportButton = \"ClearReportButton\";\n        let newReportButton = \"NewReportButton\";\n        let loadReportButton = \"LoadReportButton\";\n        let saveReportButton = \"SaveReportButton\";\n        let removeReportButton = \"RemoveReportButton\";\n        let reloadReportDataButton = \"ReloadReportDataButton\";\n        let resultCountSpan = \"ResultCount\";\n        let exportButtons = \"ResultExportButtons\";\n        let exportClass = this.exportClass;\n        if (options.slots) {\n            resultCountSpan = options.slots.resultCountSpan || resultCountSpan;\n            exportButtons = options.slots.exportButtons || exportButtons;\n            clearReportButton = options.slots.clearReportButton || clearReportButton;\n            newReportButton = options.slots.newReportButton || newReportButton;\n            loadReportButton = options.slots.loadReportButton || loadReportButton;\n            saveReportButton = options.slots.saveReportButton || saveReportButton;\n            removeReportButton = options.slots.removeReportButton || removeReportButton;\n            reloadReportDataButton = options.slots.reloadReportDataButton || reloadReportDataButton;\n            exportClass = options.slots.exportClass || exportClass;\n        }\n        this.exportButtons = this.domRoots.reduce((elems, root) => elems.concat(Array.from(root.querySelectorAll(`.${exportClass}`))), []);\n        this.enableExport = options.enableExport;\n        if (this.enableExport) {\n            //Add event listener for export buttons\n            this.exportButtons.forEach((button) => {\n                button.addEventListener('click', this.exportButtonClickHandler);\n            });\n        }\n        else {\n            this.hideExportButtons();\n        }\n        this.exportButtonsContainer = this.resolveElement(exportButtons);\n        if (!this.clearReportButton) {\n            this.clearReportButton = this.resolveElement(clearReportButton);\n            if (this.clearReportButton) {\n                this.clearReportButton.addEventListener('click', this.clearReportButtonClickHandler);\n            }\n        }\n        if (!this.newReportButton) {\n            this.newReportButton = this.resolveElement(newReportButton);\n            if (this.newReportButton) {\n                this.newReportButton.addEventListener('click', this.newReportButtonClickHandler);\n            }\n        }\n        if (!this.loadReportButton) {\n            this.loadReportButton = this.resolveElement(loadReportButton);\n            if (this.loadReportButton) {\n                this.loadReportButton.addEventListener('click', this.loadReportButtonClickHandler);\n            }\n        }\n        if (!this.saveReportButton) {\n            this.saveReportButton = this.resolveElement(saveReportButton);\n            if (this.saveReportButton) {\n                this.saveReportButton.addEventListener('click', this.saveReportButtonClickHandler);\n            }\n        }\n        if (!this.removeReportButton) {\n            this.removeReportButton = this.resolveElement(removeReportButton);\n            if (this.removeReportButton) {\n                this.removeReportButton.addEventListener('click', this.removeReportButtonClickHandler);\n            }\n        }\n        if (!this.reloadReportDataButton) {\n            this.reloadReportDataButton = this.resolveElement(reloadReportDataButton);\n            //OBSOLETE: remove the next 3 lines. We just support the old default button ID here\n            if (!this.reloadReportDataButton) {\n                this.reloadReportDataButton = this.resolveElement('UpdateReportButton');\n            }\n            if (this.reloadReportDataButton) {\n                this.reloadReportDataButton.addEventListener('click', this.reloadReportDataButtonClickHandler);\n            }\n        }\n        this.reportListSlot = document.getElementById('ReportList');\n        this.resultCountSlot = this.resolveElement(resultCountSpan);\n    }\n    /**\n    * Creates a new report.\n    */\n    newReport() {\n        const ds = this.getDialogService();\n        const dlg = ds.open({\n            title: i18n.getText('NewReportDlgTitle'),\n            body: this._reportSaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = i18n.getText('NewReportDefName');\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveReportDlgLabel');\n                const label = document.getElementById('kdlg-dialog-form-desc-label');\n                label.innerHTML = i18n.getText('ReportDescLabel');\n                input.focus();\n            },\n            onSubmit: () => {\n                const nameInput = document.getElementById(`kdlg-dialog-form-input`);\n                const queryName = nameInput.value;\n                if (queryName && queryName.replace(/\\s/g, '').length > 0) {\n                    dlg.clearAlert();\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    const descInput = document.getElementById(`kdlg-dialog-form-textarea`);\n                    const queryDesc = descInput.value;\n                    this.context.newQuery({\n                        name: queryName,\n                        description: queryDesc,\n                        success: () => {\n                            dlg.close();\n                            const query = this.context.getQuery();\n                            const reportId = query.getId();\n                            this.insertIntoReportList({ id: reportId, name: query.getName(), description: query.getDescription() });\n                            this.renderReportList({ reportId: reportId });\n                        },\n                        error: (error) => {\n                            header.removeChild(processEl);\n                            dlg.enableButtons();\n                            dlg.showAlert(error, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    /**\n    * Loads report by ID.\n    * @param reportId The ID of the report to load.\n    */\n    loadReport(reportId) {\n        if (!reportId) {\n            throw 'Empty report ID!';\n        }\n        let reportToLoad = this.findReportById(reportId);\n        if (!reportToLoad)\n            return;\n        const self = this;\n        const query = self.context.getQuery();\n        const reportLoaded = () => {\n            this.renderReportProps();\n            this.context.resultTable.clear();\n            query.fireChangedEvent({\n                part: QueryChangePart.All,\n                noSync: true,\n                changeType: 'query.switched'\n            });\n            this.fetchData();\n        };\n        let reportContent = this.useReportCache ? this.getReportContentFromCache(reportToLoad) : null;\n        if (reportContent) {\n            query.clear();\n            query.loadFromJson(reportContent, { validate: false });\n            reportLoaded();\n        }\n        else {\n            this.context.loadQuery({\n                queryId: reportId,\n                silent: true,\n                success: () => {\n                    this.saveReportContentInCache(reportToLoad, query.toJSON());\n                    reportLoaded();\n                }\n            });\n        }\n        this.setActiveReport(reportId);\n    }\n    /**\n    * Shows the dialog to save the report with new name.\n    */\n    saveCurrentReportAs() {\n        const query = this.context.getQuery();\n        const ds = this.getDialogService();\n        const dlg = ds.open({\n            title: i18n.getText('SaveReportDlgTitle'),\n            body: this._reportSaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = query.getName();\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveReportDlgLabel');\n                const label = document.getElementById('kdlg-dialog-form-desc-label');\n                label.innerHTML = i18n.getText('ReportDescLabel');\n                const text = document.getElementById(`kdlg-dialog-form-textarea`);\n                text.value = query.getDescription();\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    query.setId(utils.generateId(value.replace(/\\s/g, '')));\n                    dlg.clearAlert();\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    const text = document.getElementById(`kdlg-dialog-form-textarea`);\n                    const desc = text.value;\n                    query.setDescription(desc);\n                    this.context.newQuery({\n                        clearQuery: false,\n                        name: value,\n                        success: () => {\n                            dlg.close();\n                            this.context.refreshWidgets(WidgetGroup.Query);\n                            const savedQuery = this.context.getQuery();\n                            const reportId = savedQuery.getId();\n                            this.fetchData();\n                            this.insertIntoReportList({ id: reportId, name: query.getName(), description: query.getDescription() });\n                            this.renderReportList({ reportId: reportId });\n                            this.setActiveReport(reportId);\n                            this.renderReportProps();\n                        },\n                        error: (error) => {\n                            header.removeChild(processEl);\n                            dlg.enableButtons();\n                            dlg.showAlert(error, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    /**\n    * Removes current report.\n    */\n    removeCurrentReport() {\n        const report = this.context.getQuery();\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('RemoveReportDlgTitle'), i18n.getText('RemoveReportContent').replace('{reportName}', report.getName()))\n            .then(result => {\n            if (result) {\n                const reportId = report.getId();\n                this.context.removeQuery({\n                    queryId: reportId,\n                    success: () => {\n                        const index = this.removeFromReportList(reportId);\n                        this.renderReportList({ reportIndex: index });\n                    }\n                });\n            }\n        });\n    }\n    /**\n    * Sends current report's query to back-end.\n    */\n    syncReport(options) {\n        if (this.useReportCache) {\n            const query = this.context.getQuery();\n            const currentReport = this.findReportById(query.getId());\n            if (currentReport) {\n                currentReport.lastUpdated = Date.now();\n                this.saveReportContentInCache(currentReport, query.toJSON());\n            }\n        }\n        this.context.syncQuery({\n            success: (responseData) => {\n                if (responseData.query) {\n                    this.context.refreshWidgets(WidgetGroup.Query);\n                }\n                if (responseData.statement) {\n                    this.context.refreshWidgets(WidgetGroup.Statement);\n                }\n                if (options && options.success) {\n                    options.success(responseData);\n                }\n            }\n        });\n    }\n    /**\n    * Sets active report.\n    * @param reportId The ID of the report to make active.\n    */\n    setActiveReport(reportId) {\n        let rlItems = this.reportListSlot.querySelectorAll('li');\n        for (let i = 0; i < rlItems.length; i++) {\n            const item = rlItems[i];\n            item.classList.remove('active');\n            const rid = item.getAttribute('data-rid');\n            if (rid === reportId) {\n                item.classList.add('active');\n            }\n        }\n    }\n    /**\n    * Renders current report.\n    */\n    renderReportProps() {\n        let query = this.context.getQuery();\n        let titleElem = document.getElementById('ReportTitle');\n        titleElem.innerHTML = query.getName();\n        const columnsPanel = document.querySelector('.columns-bar');\n        if (columnsPanel) {\n            columnsPanel.innerHTML = '<strong>Columns:</strong>';\n            let columns = query.getColumns();\n            for (let column of columns) {\n                columnsPanel.innerHTML += '<span class=\"label label-default\">' + column.caption + '</span> ';\n            }\n        }\n    }\n    /**\n    * Renders the list of reports.\n    * @param options The options. In particular, `options.reportIndex` defines which report should be active.\n    */\n    renderReportList(options) {\n        this.renderReportPanels();\n        if (!this.reportListSlot.matches('li')) {\n            this.reportListSlot.innerHTML = \"\";\n            options = options || { reportId: (this.reports.length > 0 ? this.reports[0].id : null) };\n            var ul = document.createElement('ul');\n            ul.className = 'list-group list-group-flush';\n            this.reportListSlot.appendChild(ul);\n            for (let report of this.reports) {\n                this.renderReportItemInList(report, ul);\n            }\n            if (options.reportId) {\n                this.loadReport(options.reportId);\n            }\n            if (typeof (options.reportIndex) !== \"undefined\") {\n                let idx = options.reportIndex;\n                if (idx >= this.reports.length)\n                    idx = this.reports.length - 1;\n                if (idx < 0 && this.reports.length > 0)\n                    idx = 0;\n                if (idx >= 0)\n                    this.loadReport(this.reports[idx].id);\n            }\n        }\n    }\n    detach() {\n        if (this.exportButtonsContainer) {\n            this.showExportButtons();\n            this.exportButtons.forEach((button) => {\n                button.removeEventListener('click', this.exportButtonClickHandler);\n            });\n            this.exportButtons = [];\n            this.exportButtonsContainer = null;\n        }\n        if (this.clearReportButton) {\n            this.clearReportButton.removeEventListener('click', this.clearReportButtonClickHandler);\n            this.clearReportButton = null;\n        }\n        if (this.newReportButton) {\n            this.newReportButton.removeEventListener('click', this.newReportButtonClickHandler);\n            this.newReportButton = null;\n        }\n        if (this.loadReportButton) {\n            this.loadReportButton.removeEventListener('click', this.loadReportButtonClickHandler);\n            this.loadReportButton = null;\n        }\n        if (this.saveReportButton) {\n            this.saveReportButton.addEventListener('click', this.saveReportButtonClickHandler);\n            this.saveReportButton = null;\n        }\n        if (this.removeReportButton) {\n            this.removeReportButton.removeEventListener('click', this.removeReportButtonClickHandler);\n            this.removeReportButton = null;\n        }\n        if (this.reloadReportDataButton) {\n            this.reloadReportDataButton.removeEventListener('click', this.reloadReportDataButtonClickHandler);\n            this.removeReportButton = null;\n        }\n        if (this.reportListSlot) {\n            this.reportListSlot.innerHTML = '';\n            this.reportListSlot = null;\n        }\n        if (this.resultCountSlot) {\n            this.resultCountSlot.innerHTML = '';\n            this.resultCountSlot = null;\n        }\n        super.detach();\n    }\n    /**\n    * Renders a single item in the list of reports.\n    * @param report The [[Report]] object to render.\n    * @param ul The [[HTMLUListElement]] to add the item to.\n    */\n    renderReportItemInList(report, ul) {\n        if (!ul) {\n            ul = this.reportListSlot.querySelector(\"ul\");\n        }\n        let reportName = report.name || report.description || \"\";\n        let li = document.createElement('li');\n        li.className = \"list-group-item\";\n        li.style.cursor = 'pointer';\n        li.setAttribute('data-rid', report.id);\n        li.innerText = reportName;\n        if (report.description) {\n            li.title = report.description;\n        }\n        li.addEventListener('click', (e) => {\n            const target = e.target;\n            const rid = target.getAttribute('data-rid');\n            this.loadReport(rid);\n        });\n        ul.appendChild(li);\n    }\n    /**\n    * Renders report panels.\n    */\n    renderReportPanels() {\n        const reportsContainer = document.getElementById(\"ReportsContainer\");\n        const noReportPanel = document.getElementById(\"NoReportPanel\");\n        if (this.reports.length > 0) {\n            this.hideElement(noReportPanel);\n            this.showElement(reportsContainer);\n        }\n        else {\n            this.hideElement(reportsContainer);\n            this.showElement(noReportPanel);\n        }\n    }\n    //TODO: Move these two functions to @easydata/ui\n    hideElement(element) {\n        if (element) {\n            element.style.visibility = 'hidden';\n        }\n    }\n    showElement(element) {\n        if (element) {\n            element.style.removeProperty('visibility');\n        }\n    }\n    /**\n    * Inserts the report to the list of reports.\n    * @param report The [[Report]] object to be inserted.\n    */\n    insertIntoReportList(report) {\n        this.reports.push(report);\n    }\n    /**\n    * Removes the report from the list of reports.\n    * @param reportId The ID of the report to be removed.\n    * @returns the index of removed report.\n    */\n    removeFromReportList(reportId) {\n        let index = this.indexOfReportById(reportId);\n        if (index >= 0)\n            this.reports.splice(index, 1);\n        return index;\n    }\n    indexOfReportById(reportId) {\n        for (let i = 0; i < this.reports.length; i++) {\n            if (this.reports[i].id === reportId)\n                return i;\n        }\n        return -1;\n    }\n    /**\n    * The handler of the \"Clear\" button click.\n    */\n    clearReportButtonClick() {\n        this.clearErrors();\n        this.context.clearQuery();\n    }\n    /**\n    * The handler of the \"Update\" button click.\n    */\n    reloadReportDataButtonClick() {\n        this.fetchData();\n    }\n    /**\n    * The handler of the \"Save\" button click.\n    */\n    saveReportButtonClick() {\n        this.saveCurrentReportAs();\n    }\n    /**\n    * The handler of the \"Load\" button click.\n    */\n    loadReportButtonClick() {\n        this.loadReport(\"LastQuery\");\n    }\n    /**\n    * The handler of the \"Remove\" button click.\n    */\n    removeReportButtonClick() {\n        this.removeCurrentReport();\n    }\n    /**\n    * The handler of the \"New\" button click.\n    */\n    newReportButtonClick() {\n        this.newReport();\n    }\n    /**\n    * The handler of errors.\n    * @param error The error object.\n    */\n    errorHandler(error) {\n    }\n    /**\n    * Clears the errors.\n    */\n    clearErrors() {\n    }\n    /**\n    * Disables export buttons.\n    */\n    disableExportButtons() {\n        this.hideExportButtons();\n    }\n    /**\n    * Enables export buttons.\n    */\n    enableExportButtons() {\n        this.showExportButtons();\n    }\n    /**\n    * Hides export buttons.\n    */\n    hideExportButtons() {\n        if (this.exportButtonsContainer) {\n            this.exportButtonsContainer.style.display = \"none\";\n        }\n    }\n    /**\n    * Shows export buttons.\n    */\n    showExportButtons() {\n        if (this.exportButtonsContainer) {\n            this.exportButtonsContainer.style.display = \"initial\";\n        }\n    }\n    /**\n     * Saves reports content to the cache.\n     * @param report  The report.\n     * @param content The content (Query serialized into JSON).\n     */\n    saveReportContentInCache(report, content) {\n        let item = this.findReportCacheItem(report.id);\n        if (!item) {\n            item = { id: report.id };\n            this.reportCache.push(item);\n        }\n        item.lastUpdated = report.lastUpdated;\n        item.content = content;\n    }\n    /**\n     * Gets the report content from cache.\n     * @param report The report.\n     * @returns Content of the report (Query in JSOn string)\n     */\n    getReportContentFromCache(report) {\n        let item = this.findReportCacheItem(report.id);\n        if (item && item.lastUpdated === report.lastUpdated) {\n            return item.content;\n        }\n        return null;\n    }\n    findReportById(id) {\n        for (let item of this.reports) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n    findReportCacheItem(id) {\n        for (let item of this.reportCache) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\nfunction addOldEasyQueryUIMapper() {\n    i18n.addMapper((info) => {\n        if (!info && !info.texts)\n            return;\n        for (let prop in info.texts) {\n            switch (prop) {\n                case 'PredicateTitle':\n                    info.texts['ConditionGroupTitle'] = info.texts[prop];\n                    break;\n                case 'RootPredicateTitle':\n                    info.texts['RootConditionGroupTitle'] = info.texts[prop];\n                    break;\n                case 'ErrIncorrectPredicateTitleFormat':\n                    info.texts['ErrIncorrectGroupTitleFormat'] = info.texts[prop];\n                    break;\n                case 'ButtonAddPredicate':\n                    info.texts['ButtonAddGroup'] = info.texts[prop];\n                    break;\n                case 'ButtonDelete':\n                    info.texts['CmdDelete'] = info.texts[prop];\n                    break;\n                case 'ButtonClear':\n                    info.texts['CmdClear'] = info.texts[prop];\n                    break;\n                case 'ButtonEnable':\n                    info.texts['CmdToggleEnable'] = info.texts[prop];\n                    break;\n                case 'ButtonAddCondition':\n                    info.texts['CmdAddCondition'] = info.texts[prop];\n                    break;\n                case 'ButtonAddGroup':\n                    info.texts['CmdAddCondGroup'] = info.texts[prop];\n                    break;\n            }\n        }\n    });\n}\nfunction addEasyQueryUITexts() {\n    i18n.updateDefaultTexts({\n        AltMenuAttribute: 'Attribute',\n        AltMenuConstantExpression: 'Constant expression',\n        ButtonApply: 'Apply',\n        ButtonCancel: 'Cancel',\n        ButtonClose: 'Close',\n        ButtonNext: 'Next',\n        ButtonPrev: 'Prev',\n        ButtonNow: 'Now',\n        ButtonOK: 'OK',\n        MenuEnable: 'Enabled',\n        MenuParameterization: 'Parameterized',\n        MenuJoinCond: 'Use in JOIN',\n        CmdClear: 'Clear',\n        CmdDelete: 'Delete',\n        CmdToggleEnable: 'Toggle enable',\n        CmdToggleEnableCustom: 'Custom Expression columns are not supported',\n        CmdAddCondition: 'Add condition',\n        CmdAddCondGroup: 'Add group of conditions',\n        ButtonSelectAll: 'Select all',\n        ButtonDeselectAll: 'Clear selection',\n        ButtonAddColumns: 'Add column(s)',\n        ButtonAddConditions: 'Add condition(s)',\n        CmdClickToAddCondition: '[Add new condition]',\n        CmdDeleteRow: 'Delete this row',\n        ErrIncorrectGroupTitleFormat: 'Incorrect condition group title format',\n        ErrNotNumber: ' is not a number',\n        ErrIncorrectInteger: 'Incorrect integer value',\n        ErrIncorrectNumberList: 'Incorrect list format',\n        False: 'False',\n        LinkTypeAll: 'all',\n        LinkTypeAny: 'any',\n        LinkTypeNone: 'none',\n        LinkTypeNotAll: 'not all',\n        ConjAll: 'and',\n        ConjAny: 'or',\n        ConjNotAll: 'and',\n        ConjNone: 'or',\n        MsgApplySelection: '[Apply selection]',\n        MsgAs: 'as',\n        MsgEmptyList: '(empty list)',\n        MsgEmptyListValue: '[select value]',\n        MsgEmptyScalarValue: '[enter value]',\n        MsgSubQueryValue: '[edit sub-query]',\n        MsgEmptyAttrValue: '[select attribute]',\n        MsgEmptyOperator: '[Unrecognized operator]',\n        MsgEmptyCustomSql: '[enter SQL expression]',\n        MsgCustomSql: '[Custom SQL]',\n        MsgNoResult: 'No result',\n        MsgResultCount: '{0} records found',\n        MsgOf: 'of',\n        ConditionGroupTitle: '{lt} of the following apply',\n        RootConditionGroupTitle: 'Select records where {lt} of the following apply',\n        StrAddConditions: 'Add conditions',\n        SubQueryDialogTitle: 'Edit sub-query',\n        SubQueryColumnTitle: 'Column:',\n        SubQueryEmptyColumn: '[select column]',\n        SubQueryQueryPanelCaption: 'Conditions',\n        True: 'True',\n        ButtonSorting: 'Sorting',\n        ButtonToAggr: 'Change to aggregate column',\n        ButtonToSimple: 'Change to simple column',\n        ButtonFormat: 'Display format',\n        CmdAscending: 'Ascending',\n        CmdClickToAddColumn: '[Add new column]',\n        CmdDeleteColumn: 'Delete column',\n        CmdDeleteSorting: 'Delete sorting',\n        CmdDescending: 'Descending',\n        CmdGroupAppearance: 'Appearance',\n        CmdGroupSort: 'Sorting',\n        CmdGroupFormat: 'Display format',\n        CmdNotSorted: 'Not sorted',\n        ColTypeAggrFunc: 'Aggregate function',\n        ColTypeCompound: 'Calculated',\n        ColTypeGroup: 'Column type',\n        ColTypeSimple: 'Simple column',\n        HeaderExpression: 'Expression',\n        HeaderSorting: 'Sorting',\n        HeaderTitle: 'Title',\n        SortHeaderColumn: 'Column',\n        SortHeaderSorting: 'Sorting',\n        StrAddColumns: 'Add columns',\n        CustomExpression: 'Custom Expression',\n        AddAllForEntityText: '[Add all attributes]',\n        CmdMoveToStart: 'Move to start',\n        CmdMoveRight: 'Move right',\n        CmdMoveLeft: 'Move left',\n        CmdMoveToEnd: 'Move to the end',\n        CmdMoveUp: 'Move up',\n        CmdMoveDown: 'Move down',\n        ButtonMenu: 'Show menu',\n        CmdToSimple: 'Not aggregated',\n        CmdMoveToFirst: 'Move to the first',\n        CmdMoveToPrev: 'Move to the previous',\n        CmdMoveToNext: 'Move to the next',\n        CmdMoveToLast: 'Move to the last',\n        CmdHiddenColumn: 'Hidden',\n        RowButtonTitle: 'Click to see the available options',\n        EntityToggle: 'Toggle entity',\n        //FilterBar\n        StrNoFilterDefined: 'No filter defined',\n        StrNoFilterClickToAdd: 'No filter defined. Click to add a new condition',\n        //Time picker\n        HintHours: 'Hours',\n        HintMinutes: 'Minutes',\n        //advanced search view texts\n        RemoveQueryTitle: 'Confirmation',\n        RemoveQueryContent: 'Remove query [{queryName}]?',\n        NewQueryTitle: 'New query',\n        NewQueryContent: 'New query name: ',\n        NewQueryDefName: 'New query',\n        SaveQueryTitle: 'Save query',\n        SaveQueryContent: 'Query name: ',\n        SaveQueryDefName: '{queryName} copy',\n        QueryChangedTitle: 'Confirmation',\n        QueryChangedContent: 'The query was changed. Do you want to save it first?',\n        QueryClearContent: 'The query will cleared. Do you want to continue?',\n        UpdateQuerySelector: '[click here to load the query]',\n        FileNameLabel: 'File name: ',\n        SaveQueryToFileDlgTitle: 'Save query to file',\n        //report view texts\n        NewReportDefName: 'New report',\n        NewReportDlgTitle: 'New report',\n        SaveReportDlgTitle: 'Save report',\n        SaveReportDlgLabel: 'Report name:',\n        ReportDescLabel: 'Description: ',\n        RemoveReportDlgTitle: 'Remove report',\n        RemoveReportContent: 'Are you sure you want to remove \\'{reportName}\\'?',\n        //facets\n        Facets: {\n            TotalRecordsLabel: 'Total records:',\n            AddMenuItems: {\n                Chart: 'Chart',\n                Pivot: 'Pivot table',\n                DataTable: 'Data table'\n            },\n            LoadDataDlgTitle: 'Downloading data',\n            LoadDataDlgContent: 'Records loaded: {loadedRecs}/{totalRecs}',\n            RefreshBtnTitle: 'Refresh',\n            ExportBtnTitle: 'Export',\n            MaximizeBtnTitle: 'Maximize',\n            RestoreBtnTitle: 'Restore Down',\n            RemoveFacetDlgTitle: 'Remove facet',\n            RemoveFacetDlgContent: `Are you sure, that you want to delete {facetTitle} tab?`,\n            DefaultDlgTitle: 'Setup facet',\n            DefaultFacetTitle: '',\n            NewFacetTitle: 'New Facet',\n            TabNameLabel: 'Tab name',\n            ErrQueryChanged: 'FAILED TO DISPLAY. QUERY WAS CHANGED',\n            ErrNotEnoughData: `We can't display the graph because not all data for this query is loaded. \r\n        The total number of records: {totalRecs}, currently loaded: {cachedRecs}. \r\n        You can [download the result]. Please note: this may take some time and consume a lot of memory.`,\n            ErrTooMuchData: 'Too much data. The grid is not able to display it',\n            Chart: {\n                FacetTitle: 'Chart',\n                DlgTitle: 'Chart settings',\n                DataColumnSelectorLabel: 'Data column',\n                LabelColumnSelectorLabel: 'Label column',\n                ChartTypeSelectorLabel: 'Chart type',\n                ShowLegendLabel: 'Show legend (if available)'\n            },\n            Pivot: {\n                FacetTitle: 'Pivot table',\n                DlgTitle: 'Pivot settings',\n                SwapBtnTitle: 'Swap column and row fields',\n                ColumnFieldSelectorLabel: 'Column field',\n                RowFieldSelectorLabel: 'Row field',\n                CellDataSelectorLabel: 'Cell data',\n                TotalsRowLabel: 'Totals row',\n                TotalsColLabel: 'Totals column',\n                TotalGridLabel: 'Total'\n            },\n            DataTable: {\n                FacetTitle: 'Result table',\n                DlgTitle: 'Table facet settings'\n            }\n        },\n        TotalsDlgLabel: 'Totals',\n        GrandTotalsLabel: 'Grand totals',\n        TotalsDlgTitle: 'Select totals',\n        //formats\n        ExportDlgTitle: 'Export result',\n        ExportDlgFmtLabel: 'Format',\n        'csv': 'CSV',\n        'excel': 'Excel',\n        'pdf': 'PDF',\n        'excel-html': 'HTML (Excel-compatible)',\n        // Aggregation settings\n        AggrSettings: {\n            GroupBtn: 'Group selected column(s)',\n            UngroupBtn: 'Ungroup columns',\n            AggrBtn: 'Aggregate selected column',\n            UnaggrBtn: 'Remove column aggregation',\n            GrandTotalsLabel: 'Show grand totals',\n            GroupCountsLabel: 'Show record count for groups',\n            AggrDialogTitle: 'Aggregation/grouping',\n            EnableAggrLabel: 'Enable aggregation',\n            SelectedError: 'Complete the action with selected column(s)',\n            NoGroupsOrAggrError: 'Add at least one group or aggregation',\n            NoGroupsOrGrandError: 'Add at least one group, or enable grand totals',\n            NoAggrOrCountError: 'Add at least one aggregation, or enable records count',\n            NoGroupsLabel: 'No groups',\n            NoAggrsLabel: 'No aggregations',\n            EmptySettingsLabel: '[ Click to setup ]'\n        },\n        ChartType: {\n            Area: 'Area chart',\n            Bar: 'Bar chart',\n            Column: 'Column chart',\n            Combo: 'Combo chart',\n            Doughnut: 'Doughnut chart',\n            Polar: 'Polar chart',\n            Radar: 'Radar chart',\n            Histogram: 'Histogram chart',\n            Line: 'Line chart',\n            SteppedLine: 'Stepped line chart',\n            Pie: 'Pie chart'\n        }\n    });\n}\naddOldEasyQueryUIMapper();\naddEasyQueryUITexts();\n\nconst services = EqServiceProvider.getInstance();\nservices.registerService('DialogService', () => new DefaultDialogService());\n\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector\n            || Element.prototype.webkitMatchesSelector;\n}\n// support NodeList forEach in IE11\nif (window['NodeList'] && !window['NodeList'].prototype.forEach) {\n    window['NodeList'].prototype.forEach = Array.prototype.forEach;\n}\n//find index in IE11\nif (!Array.prototype.findIndex) {\n    Array.prototype.findIndex = function (predicate) {\n        if (this == null) {\n            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n        for (var i = 0; i < length; i++) {\n            value = list[i];\n            if (predicate.call(thisArg, value, i, list)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nexport { AddRowRenderer, AdvancedSearchView, AggrFuncColumnRendererCB, AggrFuncColumnRendererCP, AggrSettingsDialog, AggrSettingsRenderer, AggregationBar, AttrColumnRendererCB, AttrColumnRendererCP, AttributeExpressionRenderer, BaseElementRenderer, ChartFacet, ChartJsWidget, ChartType, ChartWidget, ColumnAction, ColumnRendererCB, ColumnRendererCP, ColumnsBar, ColumnsPanel, ConditionAction, ConditionGroupRenderer, ConditionGroupRowRenderer, ConditionRenderer, ConstColumnRendererCP, CustomListExpressionRenderer, CustomSqlColumnRendererCP, DataFilterView, DataTableFacet, DateTimeExpressionRenderer, DomDropDownElementBuilder, DropDownRenderer, EasyGridWidget, EntitiesPanel, EqHtmlGrid, ExportDialog, ExportWidget, ExpressionRenderer, FacetContainer, FacetType, FilterBar, GoogleChartWidget, Grid, HtmlContentWidget, HtmlDataFilterView, InputExpressionRenderer, ListExpressionRenderer, ManageDrillDownWidget, OperatorRenderer, PivotTableFacet, PopupMenu, ProcessWidget, QPEditablePart, QueryPanel, ReportView, ResultFacet, ResultFacetsPanel, SimpleConditionRenderer, SortingBar, SqlListExpressionRenderer, StatementPanel, SubQueryExpressionRenderer, TextRenderer, View, dropdown };\n","import { Condition, CondTag, QueryColumn, Query, Tree, LinkType, DataModel, EqAggregatesContainer, equtils, registerEqContextResolver, EqContext, ExprTag, Expression } from '@easyquery/core';\nimport { HttpClient, EasyDataTable } from '@easydata/core';\nimport { DefaultDialogService, domel } from '@easydata/ui';\n\nconst majVer = 7;\nconst minVer = 3;\nconst magics = [45, 128, 231];\nMath.trunc = Math.trunc || function (x) {\n    if (isNaN(x)) {\n        return NaN;\n    }\n    if (x > 0) {\n        return Math.floor(x);\n    }\n    return Math.ceil(x);\n};\nconst lcv = {\n    __kt: 0,\n    versionNum: '' + majVer + '.' + minVer,\n    ck: function (key) {\n        if (!key || !key.length) {\n            this.__kt = -3;\n            return;\n        }\n        try {\n            var part1 = key.slice(0, key.length - 12);\n            var infoBytes = _bs(part1);\n            var part2 = key.slice(key.length - 12);\n            let ism = false;\n            for (const magic of magics) {\n                var edc = t36(magic);\n                if (part2[0] === edc[0] && part2[2] === edc[1]) {\n                    ism = true;\n                    break;\n                }\n            }\n            if (!ism) {\n                lcv.__kt = -1;\n            }\n            var idx = minVer % 4;\n            var shift = majVer + minVer;\n            if (part2[6 + idx] != encChar(shift, 19)) {\n                lcv.__kt = -2;\n                return;\n            }\n            if (part2[1] != encChar(infoBytes[3])) {\n                return;\n            }\n            lcv.__kt = part2[3] != encChar(infoBytes[5]) ? 2 : 3;\n            if (lcv.__kt === 2) {\n                var eds = `${f36(part2.substring(4, 6) + part2.substring(10))}`;\n                var ed = new Date(2000 + Number.parseInt(eds.substring(0, 2)), Number.parseInt(eds.substring(2, 4)) - 1, Number.parseInt(eds.substring(4)), 0, 0, 0, 0);\n                if (Date.now() > ed.getTime()) {\n                    lcv.__kt = 1;\n                }\n            }\n        }\n        catch (error) {\n        }\n    }\n};\nfunction encChar(x, b = 20) {\n    return String.fromCharCode(65 + x % b);\n}\nfunction _bs(str) {\n    var binary_string = urlatob(str);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction urlatob(str) {\n    var s = str;\n    s = s.replace(/-/g, '+');\n    s = s.replace(/_/g, '/');\n    switch (s.length % 4) {\n        case 0:\n            break;\n        case 2:\n            s += \"==\";\n            break;\n        case 3:\n            s += \"=\";\n            break;\n    }\n    return window.atob(s);\n}\nconst tokens = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\nfunction t36(val) {\n    var result = \"\";\n    while (val > 0) {\n        result = tokens[val % tokens.length] + result;\n        val /= tokens.length;\n    }\n    return result;\n}\nfunction f36(val) {\n    var d = 0;\n    for (var i = 0; i < val.length; ++i)\n        d += tokens.indexOf(val[i]) * Math.pow(tokens.length, val.length - i - 1);\n    return d;\n}\n\nclass ConditionEx extends Condition {\n    constructor() {\n        super(...arguments);\n        this.readOnly = false;\n        this.parameterized = false;\n        this.inJoin = false;\n    }\n    isReadOnly() {\n        return this.readOnly || (this.getParent() && this.getParent().isReadOnly());\n    }\n    setReadOnly(value) {\n        this.readOnly = value || (this.getParent() && this.getParent().isReadOnly());\n        this.conditions && this.conditions.forEach((cond) => {\n            cond.setReadOnly(value);\n        });\n    }\n    isParameterized() {\n        return this.parameterized;\n    }\n    setParameterized(value) {\n        this.parameterized = value;\n    }\n    isInJoin() {\n        return this.inJoin;\n    }\n    setInJoin(value) {\n        this.inJoin = value;\n    }\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (lcv.__kt <= 1)\n            return;\n        if (typeof data.readOnly !== 'undefined') {\n            this.setReadOnly(data.readOnly);\n        }\n        if (typeof data.inJoin !== 'undefined') {\n            this.setInJoin(data.inJoin);\n        }\n        if (typeof data.parameterized !== 'undefined') {\n            this.setParameterized(data.parameterized);\n        }\n        //if condition group\n        //this.linkType = data.linking;\n        if (data.conds) {\n            for (let i = 0; i < data.conds.length; i++) {\n                let newCond = this.query.createCondition();\n                newCond.loadFromData(model, data.conds[i]);\n                this.conditions.push(newCond);\n                newCond.setParent(this);\n            }\n        }\n    }\n    saveToData() {\n        let obj = super.saveToData();\n        if (lcv.__kt <= 1)\n            return obj;\n        if (this.isReadOnly()) {\n            obj.readOnly = this.isReadOnly();\n        }\n        if (this.isParameterized()) {\n            obj.parameterized = this.isParameterized();\n        }\n        if (this.isInJoin()) {\n            obj.inJoin = this.isInJoin();\n        }\n        if (this.tag == CondTag.Group) {\n            //if condition group\n            //obj.linking = this.linkType;\n            obj.conds = [];\n            for (let i = 0; i < this.conditions.length; i++) {\n                obj.conds.push(this.conditions[i].saveToData());\n            }\n        }\n        return obj;\n    }\n}\n\nclass QueryColumnEx extends QueryColumn {\n    constructor() {\n        super(...arguments);\n        this.readOnly = false;\n    }\n    isReadOnly() {\n        return this.readOnly;\n    }\n    setReadOnly(value) {\n        this.readOnly = value;\n    }\n    /**\n     * Loads column from its JSON representation object.\n     * @param model The Data Model.\n     * @param colData The JSON representation object.\n     */\n    loadFromData(model, colData) {\n        super.loadFromData(model, colData);\n        if (lcv.__kt <= 2)\n            return;\n        if (colData) {\n            if (typeof colData.readOnly != 'undefined') {\n                this.readOnly = colData.readOnly;\n            }\n        }\n    }\n    saveToData() {\n        let colData = super.saveToData();\n        if (lcv.__kt <= 2)\n            return colData;\n        if (this.isReadOnly()) {\n            colData.readOnly = this.isReadOnly();\n        }\n        return colData;\n    }\n}\n\nclass QueryEx extends Query {\n    constructor(model, options) {\n        super(model, null, options);\n    }\n    isEx() {\n        return lcv.__kt > 1;\n    }\n    createSubQuery() {\n        return new QueryEx(this.model, { context: this.context });\n    }\n    createCondition(tag = CondTag.Simple) {\n        if (lcv.__kt <= 1)\n            return super.createCondition(tag);\n        return new ConditionEx(this, tag);\n    }\n    createColumn(justsorted = false) {\n        if (lcv.__kt <= 1)\n            return super.createColumn(justsorted);\n        return new QueryColumnEx(this, justsorted);\n    }\n    /**\n     * Adds a condition group - a group of simple conditions (predicates) linked by AND or OR\n     * @param descriptor The descriptor of the new condition group.\n     * @returns The new search condition.\n     */\n    addConditionGroup(descriptor, addChildCondition = true) {\n        if (lcv.__kt <= 1)\n            return super.addConditionGroup(descriptor, addChildCondition);\n        let parent = descriptor.parent || this.getRootCondition();\n        let lType = descriptor.linking || (parent.linkType === LinkType.All ? LinkType.Any : LinkType.All);\n        let group = this.createCondition(CondTag.Group);\n        group.linkType = lType;\n        if (addChildCondition) {\n            let model = this.getModel();\n            let attr = model.getFirstUICAttr();\n            if (attr) {\n                let op = model.getDefaultOperatorForAttr(attr);\n                let cond = this.createSimpleConditionObject(attr, op, \"\");\n                group.addCondition(cond);\n            }\n        }\n        parent.addCondition(group);\n        return group;\n    }\n    addExtraConditionGroup(descriptor, addChildCondition = true) {\n        descriptor.parent = descriptor.parent || this.extraConditions;\n        if (lcv.__kt <= 1)\n            return super.addExtraConditionGroup(descriptor, addChildCondition);\n        return this.addConditionGroup(descriptor);\n    }\n    buildQueryPath() {\n        const model = this.getModel();\n        if (lcv.__kt <= 1)\n            return this.buildQueryPath();\n        if (model.getMainEntity())\n            return this.buildQueryPath();\n        const entities = this.getEntitiesInQuery();\n        if (entities.length == 0) {\n            throw Error(\"Cannon build path. Path is empty\");\n        }\n        let tree = new Tree(entities[0]);\n        for (let i = 1; i < entities.length; i++) {\n            const entity = entities[i];\n            if (tree.contains(entity)) {\n                continue;\n            }\n            let path = this.findPath(tree.value, entity);\n            if (path != null) {\n                //Add path to tree\n                tree = this.addPathToTree(tree, (path[0] === tree.value) ? path.slice(1) : path);\n            }\n            else {\n                throw Error(\"Unable to build query. Cannot build path.\");\n            }\n        }\n        tree.setParents();\n        return tree;\n    }\n    addPathToTree(tree, path) {\n        if (path.length == 0) {\n            return;\n        }\n        let pathAdded = false;\n        for (let child of tree.childs) {\n            if (child.value === path[0]) {\n                pathAdded = true;\n                if (path.length > 1)\n                    child = this.addPathToTree(child, path.slice(1));\n                break;\n            }\n        }\n        if (!pathAdded) {\n            let link = this.getModel().findLink(tree.value, path[0]);\n            if (link) {\n                let newNode = new Tree(path[0]);\n                tree.addChild(newNode);\n                if (path.length > 1)\n                    newNode = this.addPathToTree(newNode, path.slice(1));\n            }\n            else if (!tree.parent) {\n                let node = new Tree(tree);\n                tree = new Tree(path[0]);\n                tree.addChild(node);\n                if (path.length > 1)\n                    tree = this.addPathToTree(tree, path.slice(1));\n            }\n            else {\n                throw Error(\"Unable to build query. Cannot build path.\");\n            }\n        }\n        return tree;\n    }\n    findPath(entityFrom, entityTo) {\n        let curPath = [];\n        let curStep = [];\n        let nextStep = [];\n        let passedEntities = [];\n        let pathFound = false;\n        curPath.push(entityFrom);\n        curStep.push(curPath);\n        passedEntities.push(entityFrom);\n        while (!pathFound) {\n            nextStep = [];\n            for (let path of curStep) {\n                pathFound = this.checkPath(path, entityTo, nextStep, passedEntities);\n                if (pathFound) {\n                    path.push(entityTo);\n                    curPath = path;\n                    break;\n                }\n            }\n            curStep = [];\n            if (!pathFound) {\n                if (nextStep.length == 0)\n                    return null;\n                //copy nextStep to curStep\n                for (let path of nextStep)\n                    curStep.push(path);\n            }\n        }\n        return curPath;\n    }\n    checkPath(path, entityTo, nextStep, passedEntities) {\n        const endPoint = path[path.length - 1];\n        const entityLinks = this.getModel().getLinksByEntity(endPoint);\n        for (let link of entityLinks) {\n            let entity2 = null;\n            if (link.entityFrom == endPoint) {\n                entity2 = link.entityTo;\n            }\n            else {\n                entity2 = link.entityFrom;\n            }\n            if (entity2 == entityTo) { //if reach the destination\n                nextStep = [];\n                return true;\n            }\n            //if destination is not reached yet we add current node (entity2) to the path and proceed\n            if (path.indexOf(entity2) < 0 && passedEntities.indexOf(entity2) < 0) { //to prevent cycling\n                passedEntities.push(entity2);\n                let newPath = new Array();\n                newPath = newPath.concat(path);\n                newPath.push(entity2);\n                nextStep.push(newPath);\n            }\n        }\n        return false;\n    }\n}\n\nclass EqServerQueryStorage {\n    constructor(context) {\n        this.context = context;\n    }\n    init() {\n    }\n    newQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const model = this.context.getModel();\n        const modelId = options.modelId || (model ? model.getId() : \"\");\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        if (options.name) {\n            query.setName(options.name);\n        }\n        if (options.description) {\n            query.setDescription(options.description);\n        }\n        let requestData = {\n            'query': query.toJSONData()\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('NewQuery', { modelId: modelId });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    getQueryList(options) {\n        options = options || {};\n        const modelId = options.modelId || this.context.getModel().getId();\n        const url = this.context.resolveEndpoint('GetQueryList', { modelId: modelId });\n        const http = this.context.getServices().getHttpClient();\n        return http.get(url)\n            .then((responseData) => {\n            if (!responseData.queries) {\n                return Promise.reject({\n                    message: 'Wrong response format'\n                });\n            }\n            return responseData.queries;\n        });\n    }\n    loadQuery(options) {\n        options = options || {};\n        const model = this.context.getModel();\n        const query = this.context.getQuery();\n        const modelId = options.modelId || model.getId();\n        const queryId = options.queryId || query.getId();\n        const url = this.context.resolveEndpoint('GetQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.get(url)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    saveQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const queryId = options.queryId || query.getId();\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        const modelId = options.modelId || query.getModel().getId();\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        let requestData = {\n            'query': query.toJSONData()\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('SaveQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.put(url, requestData)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    removeQuery(options) {\n        options = options || {};\n        const context = this.context;\n        const query = context.getQuery();\n        const modelId = options.modelId || query.getModel().getId();\n        const queryId = options.queryId || query.getId();\n        let requestData = {\n            'modelId': modelId,\n            'queryId': queryId\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('RemoveQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.delete(url, requestData).getPromise();\n    }\n}\n\nclass DataModelEx extends DataModel {\n}\n\nclass DataTableAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        //stores current totals by level (group) number\n        this.levelsTotals = [];\n        this.prevRow = null;\n        this.aggrContainer = new EqAggregatesContainer(context);\n    }\n    getAggrContainer() {\n        return this.aggrContainer;\n    }\n    initObjects() {\n        this.aggrSettings = this.context.getQuery().getAggregationSettings();\n        this.groups = this.aggrSettings.getGroups();\n        this.aggregates = this.aggrSettings.getAggregates();\n        this.aggrColIds = this.aggrSettings.getAggregates().map(a => a.colId);\n        this.aggrCols = this.context.resultTable.columns.getItems()\n            .filter(col => this.aggrColIds.indexOf(col.id) >= 0);\n        this.levelsTotals = [];\n        this.prevRow = null;\n    }\n    createColumnAggregatesObject() {\n        return {\n            sum: 0,\n            min: Number.MAX_VALUE,\n            max: Number.MIN_VALUE\n        };\n    }\n    calculate(options) {\n        this.initObjects();\n        this.aggrContainer.clear();\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        var levelNumber = this.groups.length + 1; //number of groups plus grand totals\n        for (let levelIndex = 0; levelIndex < levelNumber; levelIndex++) {\n            let levelTotals = { count: 0, columns: {} };\n            this.resetLevelTotals(levelTotals);\n            this.levelsTotals.push(levelTotals);\n        }\n        const allRows = this.context.resultTable.getCachedRows();\n        if (allRows.length > 0) {\n            for (const row of allRows) {\n                this.processDataRow(row);\n            }\n            //flusing the totals for all group levels\n            for (let levelIndex = 1; levelIndex < levelNumber; levelIndex++) {\n                this.flushLevelTotals(levelIndex);\n            }\n            //flusing the grand totals (if they are turned on)\n            if (this.aggrSettings.hasGrandTotals()) {\n                this.flushLevelTotals(0);\n            }\n        }\n        return Promise.resolve();\n    }\n    resetLevelTotals(rowTotals) {\n        for (const aggrCol of this.aggrCols) {\n            rowTotals.columns[aggrCol.id] = this.createColumnAggregatesObject();\n        }\n        rowTotals.count = 0;\n    }\n    processDataRow(row) {\n        const levelIndexChanged = this.checkLevelChange(row);\n        if (levelIndexChanged >= 0) {\n            for (let levelIndex = levelIndexChanged; levelIndex < this.levelsTotals.length; levelIndex++) {\n                this.flushLevelTotals(levelIndex);\n            }\n        }\n        if (this.aggrSettings.hasGrandTotals()) {\n            this.updateLevelTotals(0, row);\n        }\n        let levelIndex = 1;\n        for (const group of this.groups) {\n            this.updateLevelTotals(levelIndex, row);\n            levelIndex++;\n        }\n        this.prevRow = row;\n    }\n    /** Checks if the values in group columns were changed\n        and return the level number they were */\n    checkLevelChange(row) {\n        if (this.prevRow == null)\n            return -1;\n        for (let groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n            var group = this.groups[groupIndex];\n            for (const colId of group.columns) {\n                const value = row.getValue(colId);\n                const prevValue = this.prevRow.getValue(colId);\n                if (!this.aggrSettings.compareValues(prevValue, value)) {\n                    return groupIndex + 1;\n                }\n            }\n        }\n        return -1;\n    }\n    /** Saves the current values in levelData for the specified level to AggregateContainer\n        and then reset the data row for that level\n    */\n    flushLevelTotals(levelIndex) {\n        let levelTotals = this.levelsTotals[levelIndex];\n        const group = levelIndex > 0 ? this.groups[levelIndex - 1] : null;\n        let groupKey = this.aggrSettings.buildGroupKey(group, this.prevRow);\n        var groupTotals = {};\n        for (const aggr of this.aggregates) {\n            const columnTotals = levelTotals.columns[aggr.colId];\n            groupTotals[aggr.colId] = this.applyAggrFunc(aggr.funcId, columnTotals, levelTotals);\n        }\n        if (this.aggrSettings.hasRecordCount()) {\n            groupTotals[this.aggrSettings.COUNT_FIELD_NAME] = levelTotals.count;\n        }\n        this.aggrContainer.updateAggregateData(levelIndex, groupKey, groupTotals);\n        this.resetLevelTotals(levelTotals);\n    }\n    applyAggrFunc(funcId, columnTotals, levelTotals) {\n        switch (funcId) {\n            case \"SUM\":\n                return columnTotals.sum;\n            case \"AVG\":\n                return columnTotals.sum / levelTotals.count;\n            case \"COUNT\":\n            case \"CNTDST\":\n                return levelTotals.count;\n            case \"MIN\":\n                return columnTotals.min;\n            case \"MAX\":\n                return columnTotals.max;\n        }\n    }\n    /** Updates the totals by values in the current DataRow\n     * and according to the specified aggregate\n    */\n    updateLevelTotals(levelIndex, row) {\n        const levelTotals = this.levelsTotals[levelIndex];\n        levelTotals.count += 1;\n        for (const aggr of this.aggregates) {\n            const value = row.getValue(aggr.colId);\n            const columnTotals = levelTotals.columns[aggr.colId];\n            columnTotals.sum += value;\n            if (value < columnTotals.min) {\n                columnTotals.min = value;\n            }\n            if (value > columnTotals.max) {\n                columnTotals.max = value;\n            }\n        }\n    }\n    needRecalculation() {\n        return true;\n    }\n    reset() {\n    }\n}\n\nfunction strIsEmpty(str) {\n    if (str) {\n        return str.trim() === '';\n    }\n    else\n        return true;\n}\nconst baseLicApiUrl = 'https://account.korzh.com/api/license';\nconst eqVersion = lcv.versionNum;\nclass LCDialog {\n    constructor(context) {\n        this.http = new HttpClient();\n        this.context = context;\n    }\n    show() {\n        const dialogService = new DefaultDialogService();\n        this.dialogSet = dialogService.createSet([\n            {\n                closable: false,\n                cancelable: false,\n                submitOnEnter: true,\n                title: 'No license key for EasyQuery',\n                body: this.buildStartPage(),\n                submitButtonText: 'Submit',\n                onInput: this.validateForm.bind(this),\n                onSubmit: this.startPageOnSubmit.bind(this)\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitOnEnter: true,\n                title: 'Please check your inbox',\n                body: this.buildCodePage(),\n                submitButtonText: 'Get License Key',\n                onInput: this.validateForm.bind(this),\n                onSubmit: this.codePageOnSubmit.bind(this)\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitable: false,\n                title: 'Success',\n                body: this.buildSuccessPage()\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitable: false,\n                title: 'Failure',\n                body: this.buildFailurePage()\n            },\n        ]);\n        const dialog1 = this.dialogSet.open(0);\n        setTimeout(() => {\n            this.validateForm(dialog1);\n            const emailInput = document.getElementById('eqAuthEmail');\n            if (emailInput) {\n                emailInput.focus();\n            }\n        }, 200);\n    }\n    isValidForm(form) {\n        const emailInput = form.querySelector('#eqAuthEmail'); //form.querySelector('[name=\"email\"]') as HTMLInputElement;       \n        if (emailInput) {\n            return !strIsEmpty(emailInput.value) &&\n                emailInput.value\n                    .toLowerCase()\n                    .match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        }\n        const codeInput = form.querySelector('#eqAuthCode'); //form.querySelector('[name=\"code\"]') as HTMLInputElement;\n        if (codeInput) {\n            return !strIsEmpty(codeInput.value) &&\n                !isNaN(+codeInput.value) &&\n                codeInput.value == codeInput.value.trim() &&\n                codeInput.value.length === 6;\n        }\n        return true;\n    }\n    validateForm(dialog) {\n        const submitButton = dialog.getSubmitButtonElement();\n        submitButton.disabled = !this.isValidForm(dialog.getRootElement());\n    }\n    addInputField(parentBuilder, inputOptions) {\n        parentBuilder\n            .addChild('label', b => b\n            .attr('for', inputOptions.id)\n            .addHtml(`${inputOptions.label} ${inputOptions.required ? '<sup style=\"color: red\">*</sup>' : ''}: `))\n            .addChild('input', b => {\n            b.id(inputOptions.id);\n            b.name(inputOptions.name || inputOptions.id);\n            b.type(inputOptions.type || 'text');\n            if (typeof (inputOptions.value) !== 'undefined') {\n                b.value(inputOptions.value);\n            }\n            if (inputOptions.onInput) {\n                b.on('input', inputOptions.onInput);\n            }\n        });\n    }\n    buildStartPage() {\n        let form;\n        let controlsPanelBuilder;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">The EasyQuery license key is either absent, invalid or was issued for a different version of the library.</div>' +\n            '<div style=\"font-size:1.2em\">Please fill out the form to obtain a valid trial license key.</div>'));\n        formBuilder\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            controlsPanelBuilder = b;\n            b.addClass('kfrm-fields label-above');\n            b.addClass('kfrm-break-20');\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthEmail',\n            name: 'email',\n            label: 'Email',\n            required: true\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthName',\n            name: 'contactName',\n            label: 'Name (optional)',\n            required: false\n        });\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"margin-top:20px;font-size:0.9em\">* By clicking Submit, you agree with Korzh.com <a href=\"https://korzh.com/terms-of-use\">Terms of use</a>' +\n            ' and <a href=\"https://korzh.com/privacy\">Privacy policy</a>.</div>' +\n            '<div style=\"font-size:0.9em\">You also agree to receive email messages from Korzh.com. This consent may be revoked at any time.</div>'));\n        form = formBuilder.toDOM();\n        return form;\n    }\n    buildCodePage() {\n        let form;\n        let controlsPanelBuilder;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">We sent a confirmation code to <strong>{{email}}</strong>.</div>' +\n            '<div style=\"font-size:1.2em\">Please find it in the email and enter to the text box below</div>'));\n        formBuilder\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            controlsPanelBuilder = b;\n            b.addClass('kfrm-fields label-above');\n            b.addClass('kfrm-break-20');\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthCode',\n            name: 'code',\n            label: 'Confirmation code',\n            required: true\n        });\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"margin-top:20px;font-size:0.9em\">NB: Don\\'t forget to check your SPAM folder ' +\n            'if the message does not arrive within the next 5 minutes, and mark it as \"Not Spam\" if it\\'s found there.</div>'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    buildSuccessPage() {\n        let form;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">You have successfully completed the registration.</div>' + '{{message}}'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    buildFailurePage() {\n        let form;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('{{message}}'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    startPageOnSubmit(dlg) {\n        const emailInput = document.getElementById('eqAuthEmail');\n        const nameInput = document.getElementById('eqAuthName');\n        this.authEmail = emailInput.value;\n        this.authName = nameInput.value;\n        dlg.disableButtons();\n        this.http.post(equtils.combinePath(baseLicApiUrl, 'get-code'), {\n            email: this.authEmail,\n            name: this.authName,\n            data: {\n                ptag: this.context.backendInfo.type,\n                apptype: this.context.backendInfo.subType,\n            }\n        }, { dataType: 'json' })\n            .then(result => {\n            if (result.status !== 0) {\n                throw new Error(result.message);\n            }\n            const dlg = this.dialogSet.openNext({ email: this.authEmail });\n            setTimeout(() => {\n                this.validateForm(dlg);\n                const codeInput = document.getElementById('eqAuthCode');\n                if (codeInput) {\n                    codeInput.focus();\n                }\n            }, 200);\n        })\n            .catch(error => {\n            dlg.showAlert('Error: ' + error.message, \"error\", true);\n            dlg.enableButtons();\n        });\n        return false;\n    }\n    codePageOnSubmit(dlg) {\n        const codeInput = document.getElementById('eqAuthCode');\n        const authCode = codeInput.value;\n        dlg.disableButtons();\n        this.http.post(equtils.combinePath(baseLicApiUrl, 'get-key'), {\n            token: authCode,\n            email: this.authEmail,\n            ptag: this.context.backendInfo.type,\n            version: eqVersion\n        }, { dataType: 'json' })\n            .then(result => {\n            switch (result.status) {\n                case 0:\n                    const url = equtils.combinePath(this.context.getBaseEndpoint(), 'lck');\n                    this.http.post(url, {\n                        version: eqVersion,\n                        key: result.key\n                    }, { dataType: 'json' })\n                        .then(_ => this.dialogSet.open(2, {\n                        message: '<div style=\"font-size:1.2em\">Please restart your web application to get the key applied.</div>'\n                    }), _ => this.dialogSet.open(2, {\n                        message: '<div style=\"font-size:1.2em\">' +\n                            'Please visit <a href=\"https://account.korzh.com\">your account page on Korzh.com</a> to get the key ' +\n                            'and then add it to the <i>appsettings.json</i> file (in the <i>EasyQuery/LicenseKey</i> option).</div>'\n                    }));\n                    break;\n                case 2:\n                    this.dialogSet.open(3, {\n                        message: '<div style=\"font-size:1.2em\">Your trial license for EasyQuery has expired.</div>' +\n                            '<div style=\"font-size:1.2em\">Please <a href=\"https://korzh.com/support\">contact us</a> if you want to extend the trial period.</div>'\n                    });\n                    break;\n                case 3:\n                    this.dialogSet.open(3, {\n                        message: '<div style=\"font-size:1.2em\">The maintenance subscription for your EasyQuery license has expired.</div>' +\n                            '<div style=\"font-size:1.2em\">You need to <a href=\"https://account.korzh.com\">renew the subscription</a> to get a valid license.</div>'\n                    });\n                    break;\n                default:\n                    throw new Error(result.message);\n            }\n        })\n            .catch(error => {\n            //quick fix for 7.2.5 (must be removed after fixing of HttpResponseError in EasyData)\n            if (!error.message) {\n                error.message = 'Invalid or expired code. Please re-submit your request.';\n            }\n            dlg.showAlert('Error: ' + error.message, \"error\", true);\n            dlg.enableButtons();\n        });\n        return false;\n    }\n}\nfunction showNoLicenseAlert(context) {\n    if (lcv.__kt == -3) {\n        const lcd = new LCDialog(context);\n        lcd.show();\n    }\n    else {\n        let title, body, buttonTitle, buttonUrl;\n        switch (lcv.__kt) {\n            case 1:\n                title = 'EasyQuery trial has expired';\n                body = `Your trial period for EasyQuery has expired. \r\n        You can <a href=\"https://korzh.com/support\">submit a request to extend your trial</a> or <a href=\"https://korzh.com/easyquery#licensing\">buy a license</a> to get rid of all limitations.`;\n                buttonTitle = 'Buy a license';\n                buttonUrl = '#licensing';\n                break;\n            default:\n                title = `Invalid key for EasyQuery!`;\n                body = `The EasyQuery product key is either invalid or was issued for a different version of the library.\r\n        The version you are using now is ${eqVersion},\r\n        so please <a href=\"https://account.korzh.com\">login to your account</a> to get a proper key for version ${eqVersion}`;\n                buttonTitle = 'Get key';\n                buttonUrl = 'https://account.korzh.com';\n                break;\n        }\n        const ds = new DefaultDialogService();\n        const dlg = ds.open({\n            closable: false,\n            cancelable: false,\n            submitable: false,\n            title: title,\n            body: body\n        });\n        const footer = dlg.getRootElement().querySelector('footer');\n        domel(footer)\n            .removeClass('align-right')\n            .setStyle('justify-content', 'center')\n            .addChild('button', b => b\n            .addClass('kfrm-button', 'is-info')\n            .addText(buttonTitle)\n            .on('click', (e) => {\n            window.location.href = buttonUrl;\n        }));\n        if (lcv.__kt == 1) {\n            domel(footer)\n                .addChild('button', b => b\n                .addClass('kfrm-button')\n                .addText('Extend trial')\n                .on('click', (e) => {\n                window.location.href = 'https://account.korzh.com';\n            }));\n        }\n    }\n}\n\nclass EnterpriseEqContext extends EqContext {\n    useEnterprise(keyOrInitCallback) {\n        const func = (key) => {\n            lcv.ck(key);\n            if (lcv.__kt > 1) {\n                const services = this.getServices();\n                services.registerDataModelResolver(context => new DataModelEx());\n                services.registerQueryResolver(context => new QueryEx(context.getModel(), { context: context }));\n                services.registerQueryStorageResolver(context => new EqServerQueryStorage(context));\n                services.registerAggregatesCalculator(context => new DataTableAggregatesCalculator(context));\n                if (lcv.__kt === 2) {\n                    console.warn('EasyQuery.JS is working in the TRIAL MODE!\\n'\n                        + 'Please order a license (https://korzh.com/easyquery) to get a proper product key.');\n                    this.createTrialWM();\n                    setTimeout(() => {\n                        this.showTrialWM();\n                        setTimeout(() => { this.hideTrialWM(); }, 6000);\n                    }, 3000);\n                }\n            }\n            else {\n                showNoLicenseAlert(this);\n            }\n        };\n        if (typeof (keyOrInitCallback) === \"string\") {\n            func(keyOrInitCallback);\n        }\n        else if (typeof (keyOrInitCallback) === \"function\") {\n            const http = this.getServices().getHttpClient();\n            let url = equtils.combinePath(this.getBaseEndpoint(), 'lck2');\n            http.get(url)\n                .then(result => {\n                func(result.key.split(\"\").reverse().join(\"\"));\n                this.useBackend({\n                    type: result.backendType,\n                    subType: result.appType\n                });\n                keyOrInitCallback();\n            })\n                .catch(error => {\n                if (error.status == 401) {\n                    //if the stutus is Not Autorized\n                    func('');\n                }\n                else {\n                    //otherwise try the old way\n                    url = equtils.combinePath(this.getBaseEndpoint(), 'lck');\n                    http.get(url)\n                        .then(result => {\n                        func(result.split(\"\").reverse().join(\"\"));\n                        keyOrInitCallback();\n                    })\n                        .catch(error => this.throwError({\n                        action: \"LCK\",\n                        sourceError: error\n                    }));\n                }\n            });\n        }\n        else {\n            throw new Error(\"Wrong type of 'keyOrInitCallback' parameter. It must be a string with a license key or a callback function.\");\n        }\n    }\n    createTrialWM() {\n        // we can rewrite it using shadow dom\n        // to make it impossible to hide using JS :)\n        let trialDiv = document.createElement(\"div\");\n        trialDiv.style.position = \"fixed\";\n        trialDiv.style.bottom = \"0\";\n        trialDiv.style.right = \"-400px\";\n        trialDiv.style.width = \"400px\";\n        trialDiv.style.height = \"100px\";\n        trialDiv.style.color = \"grey\";\n        trialDiv.style.textAlign = \"center\";\n        trialDiv.style.opacity = \"0.7\";\n        trialDiv.style.font = \"bold 1em Trebuchet MS, Tahoma, Verdana, Geneva, Arial, Helvetica, sans-serif\";\n        trialDiv.style.transition = \"right 3s ease-out\";\n        const header = document.createElement(\"div\");\n        const eq = document.createElement(\"span\");\n        eq.innerText = \"EasyQuery\";\n        eq.style.color = \"#3A94D4\";\n        eq.style.lineHeight = \"50px\";\n        header.appendChild(eq);\n        const korzh = document.createElement(\"span\");\n        korzh.innerText = \"by Korzh.com\";\n        korzh.style.marginLeft = \"10px\";\n        header.appendChild(korzh);\n        trialDiv.appendChild(header);\n        const trialOnly = document.createElement(\"div\");\n        trialOnly.innerText = \"FOR TRIAL USE ONLY\";\n        trialOnly.style.fontSize = \"1.2em\";\n        trialOnly.style.fontWeight = \"1000\";\n        trialDiv.appendChild(trialOnly);\n        document.body.appendChild(trialDiv);\n        this.trialDivElement = trialDiv;\n    }\n    showTrialWM() {\n        if (this.trialDivElement) {\n            this.trialDivElement.style.right = \"0\";\n        }\n    }\n    hideTrialWM() {\n        if (this.trialDivElement) {\n            this.trialDivElement.style.right = \"-400px\";\n            setTimeout(() => {\n                this.trialDivElement.parentNode.removeChild(this.trialDivElement);\n            }, 5000);\n        }\n    }\n}\nregisterEqContextResolver(() => new EnterpriseEqContext());\n\nclass EqServerAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        this._needRecalculation = true;\n        this.aggrContainer = new EqAggregatesContainer(context);\n    }\n    getAggrContainer() {\n        return this.aggrContainer;\n    }\n    calculate(options) {\n        this._needRecalculation = false;\n        this.aggrContainer.clear();\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        const levelPromises = [];\n        const query = this.context.createQuery();\n        query.loadFromData(this.context.getQuery().toJSONData());\n        const settings = this.context.getQuery().getAggregationSettings();\n        const aggregates = settings.getAggregates();\n        const aggrColIds = settings.getAggregates().map(a => a.colId);\n        const aggrCols = query.getColumns()\n            .filter(col => aggrColIds.indexOf(col.id) >= 0);\n        for (const col of aggrCols) {\n            query.changeColumnType(col, ExprTag.AggregateFunction, { funcId: aggregates.filter(a => a.colId == col.id)[0].funcId });\n        }\n        //get all non-aggregate columns\n        const queryCols = query.getColumns()\n            .filter(c => c.expr.tag !== ExprTag.AggregateFunction);\n        for (const col of queryCols) {\n            col.setHidden(true);\n        }\n        if (settings.hasRecordCount()) {\n            const col = query.createColumn();\n            col.caption = settings.COUNT_FIELD_NAME;\n            col['_id'] = settings.COUNT_FIELD_NAME;\n            const sqlText = 'COUNT(*)';\n            const customSqlExpr = new Expression(col);\n            customSqlExpr.tag = ExprTag.CustomSql;\n            customSqlExpr.sql = sqlText;\n            customSqlExpr.baseAttrId = null;\n            col.expr = customSqlExpr;\n            query.getColumns().push(col);\n        }\n        if (settings.hasGrandTotals()) {\n            levelPromises.push(this.processLevel({\n                query: query,\n                level: 0,\n                groupName: 'Grand Totals',\n                resultObtainedCallback: options.resultObtained,\n                errorOccurredCallback: options.errorOccurred\n            }));\n        }\n        const groups = settings.getGroups();\n        for (let level = 1; level <= groups.length; level++) {\n            const group = groups[level - 1];\n            for (const col of queryCols) {\n                col.setHidden(group.columns.indexOf(col.id) < 0);\n            }\n            levelPromises.push(this.processLevel({\n                query: query,\n                level: level,\n                groupName: group.name,\n                resultObtainedCallback: options.resultObtained,\n                errorOccurredCallback: options.errorOccurred\n            }));\n        }\n        return Promise.all(levelPromises)\n            .then(() => {\n            return;\n        })\n            .catch((error) => console.error(error));\n    }\n    processLevel(options) {\n        const fetcher = this.context.getServices()\n            .getDataFetcher(this.context);\n        let fetchOptions = {\n            aux: true,\n            query: options.query\n        };\n        if (this.context.debugMode) {\n            fetchOptions.debug = `Fetching group data. Group: '${options.groupName}', level: ${options.level}`;\n        }\n        const resultPromise = fetcher.fetchData(fetchOptions)\n            .then((result) => {\n            const dataTable = new EasyDataTable({\n                elasticChunks: true\n            });\n            const resultSet = result.resultSet;\n            for (const col of resultSet.cols) {\n                dataTable.columns.add(col);\n            }\n            for (const row of resultSet.rows) {\n                dataTable.addRow(row);\n            }\n            const levelData = this.buildLevelData(options.level, dataTable);\n            this.aggrContainer.setAggregateData(options.level, levelData);\n            if (options.resultObtainedCallback) {\n                options.resultObtainedCallback(result, options.level);\n            }\n        })\n            .catch((error) => {\n            if (options.errorOccurredCallback) {\n                options.errorOccurredCallback(Object.assign(Object.assign({}, error), { level: options.level }));\n            }\n        });\n        return resultPromise;\n    }\n    buildLevelData(level, dataTable) {\n        const aggrSettings = this.context.getQuery().getAggregationSettings();\n        const keyColumns = level > 0\n            ? aggrSettings.getGroups()[level - 1].columns\n            : [];\n        const valueColumns = aggrSettings.getAggregates().map(a => a.colId);\n        if (aggrSettings.hasRecordCount()) {\n            valueColumns.push(aggrSettings.COUNT_FIELD_NAME);\n        }\n        const data = new Map();\n        for (const row of dataTable.getCachedRows()) {\n            const key = {};\n            const value = {};\n            for (const keyCol of keyColumns) {\n                const colIdx = dataTable.columns.getIndex(keyCol);\n                if (colIdx >= 0) {\n                    let keyVal = row.getValue(keyCol);\n                    if (!aggrSettings.caseSensitiveGroups && typeof (keyVal) === 'string') {\n                        keyVal = keyVal.toLowerCase();\n                    }\n                    key[keyCol] = keyVal;\n                }\n            }\n            for (const valueCol of valueColumns) {\n                value[valueCol] = row.getValue(valueCol);\n            }\n            data.set(JSON.stringify(key), value);\n        }\n        return data;\n    }\n    needRecalculation() {\n        return this._needRecalculation;\n    }\n    reset() {\n        this._needRecalculation = true;\n    }\n}\n\nexport { ConditionEx, DataModelEx, EqServerAggregatesCalculator, EqServerQueryStorage, QueryColumnEx, QueryEx };\n",null],"names":["DataType","EntityAttrKind","EditorTag","Unknown","Edit","DateTime","List","CustomList","File","HttpMethod","utils","i18n","ColumnAlignment","liquid","LinkType","equtils","DataKind","HttpRequest","constructor","xhr","descriptor","this","method","url","headers","queryParams","data","setHeader","name","value","setQueryParam","getXMLHttpRequest","getResponseHeaders","readyState","HEADERS_RECEIVED","arr","getAllResponseHeaders","trim","split","headerMap","line","parts","header","shift","join","open","UNSENT","Object","keys","length","encodeURI","map","param","setRequestHeader","abort","getAllDataTypes","values","filter","item","getDateDataTypes","Time","Date","getStringDataTypes","String","Memo","FixedChar","_numericTypes","Byte","Word","Int32","Int64","Float","Currency","Autoinc","getNumericDataTypes","_intTypes","assignDeepCore","hashSet","target","sources","source","hasOwnProperty","key","sourceVal","endsWith","HTMLElement","has","get","Array","isArray","createArrayFrom","set","create","getPrototypeOf","collection","result","push","assign","args","i","assignDeep","WeakMap","getIfDefined","defaultValue","IsDefinedAndNotNull","copyArrayTo","collection1","collection2","len1","len2","findItemById","array","id","arrLength","idx","findItemIndexById","indexOfArrayItem","indexOf","len","moveArrayItem","index1","index2","splice","removeArrayItem","index","insertArrayItem","fillArray","start","end","relativeStart","k","Math","max","min","relativeEnd","undefined","final","shiftToFitWindow","absLeft","width","body","document","getElementsByTagName","winWidth","window","innerWidth","documentElement","clientWidth","absRight","isObject","val","isNumericType","dtype","isIntType","isNumeric","isNaN","parseFloat","isFinite","areCompatibleDataTypes","type1","type2","isPropSet","obj","propName","toLowerCase","toUpperCase","symbols","squeeze","str","maxlen","step","ch","nextIndex","getRandomInt","floor","random","safeParseInt","res","parseInt","generateId","prefix","prfx","squeezeMoniker","pml","ptt","randCharPart","randInt","intToNumBase","targetBase","buffer","rest","getNowTicks","getTime","strToDateTime","format","normalizedValue","replace","formatItems","dateItems","monthIndex","dayIndex","yearIndex","hourIndex","minutesIndex","secondsIndex","today","year","getFullYear","month","getMonth","day","getDate","getDaysInMonth","hour","minute","second","_a","strToTime","timeItems","HttpActionResult","request","promise","getPromise","getRequest","then","onfulfilled","onrejected","catch","onfinally","finally","HttpResponseError","Error","status","message","super","setPrototypeOf","prototype","HttpClient","responseBody","_responseBody","defaultHeaders","customPayload","options","send","Get","post","Post","put","Put","Delete","dataType","contentType","XMLHttpRequest","desc","beforeEachRequest","console","warn","onRequest","dataToSend","JSON","stringify","Promise","resolve","reject","responseType","onerror","error","responseText","onreadystatechange","responseContentType","getResponseHeader","responseObj","response","parse","onResponse","decodeArrayBuffer","uintArray","reader","FileReader","onloadend","DONE","readAsText","Blob","currentLocale","englishUSLocaleSettings","shortDateFormat","longDateFormat","editDateFormat","shortTimeFormat","editTimeFormat","longTimeFormat","shortMonthNames","longMonthNames","shortWeekDayNames","longWeekDayNames","decimalSeparator","currency","defaultLocale","localeId","englishName","displayName","texts","ButtonOK","ButtonCancel","Yes","No","True","False","settings","allLocales","mappers","mapInfo","info","mapper","getCurrentLocale","setCurrentLocale","newLocale","getLocaleSettings","updateLocaleSettings","settingsToUpdate","updateLocaleInfo","localeInfo","localeInfoToUpdate","loadBrowserLocaleSettings","determineSettingsByLocale","now","dateStr","toLocaleDateString","timeStr","toLocaleTimeString","dateFormat","timeFormat","navigator","language","addMapper","getLocales","locale","sort","a","b","setLocale","l","getText","textsObj","resText","argLength","getOneLocaleSetting","getShortMonthName","monthNum","getLongMonthName","getShortWeekDayName","dayNum","toString","getLongWeekDayName","updateLocaleTexts","updateDefaultTexts","addLocale","resetLocales","DT_FORMAT_RGEX","dateTimeToStr","date","yearStr","getHours","getMinutes","getSeconds","hour12","isPm","matches","yyyy","yy","substring","MMMM","MMM","MM","M","dd","d","HH","H","hh","h","tt","mm","ss","match","$1","buildShortDateTimeFormat","localeSettings","buildLongDateTimeFormat","buildUniversalDateTimeFormat","dateTimeToStrEx","dateTime","numberToStr","num","type","charAt","formatWithSequence","number","cachedSequenceFormats","v","Number","forEach","slice","toLocaleString","getNumberFormatOptions","digits","style","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","convertWithMask","mask","reverse","trunc","booleanToStr","bool","MetaEntity","parent","isEditable","caption","description","attributes","subEntities","loadFromData","model","dto","captionPlural","namePlur","ied","ents","newEntity","createEntity","attrs","newAttr","createEntityAttr","scan","processAttribute","processEntity","opts","stop","internalProcessEntity","entity","attrCount","attr","subEntityCount","getFirstPrimaryAttr","getPrimaryAttrs","isPrimaryKey","MetaEntityAttr","size","isForeignKey","isNullable","showOnView","showOnCreate","showOnEdit","showInLookup","lookupAttr","expr","kind","Data","cptn","ipk","ifk","lattr","lookupEntity","lent","dataAttr","dattr","lookupDataAttr","ldattr","isDataType","defVal","nul","ivis","sov","soc","soe","sil","displayFormat","dfmt","udata","userData","edtr","defaultEditor","getEditorById","createValueEditor","ValueEditor","tag","resType","defValue","defval","rtype","accept","multiline","subType","getValueText","text","MetaData","mainEntity","rootEntity","displayFormats","Map","getMainEntity","loadFromJSON","stringJson","version","vers","editors","newEditor","entroot","dtypeStr","formats","getDisplayFormats","getDisplayFormatsForType","getDefaultFormat","f","isdef","setData","isEmpty","getId","getName","getRootEntity","editorId","editor","getAttributeById","attrId","getEntityAttrById","checkAttrProperty","attribute","listByEntityWithFilter","filterFunc","ent","entIdx","newEnt","items","isEntity","attrIdx","listByEntity","resultEntities","resultAttributes","newOpts","includeRootData","sortCheck","sortEntities","attrPlacement","concat","clear","addDefaultValueEditors","ve","addOrUpdateValueEditor","getEntitiesTree","getEntitiesTreeWithFilter","getFullEntityPathByAttr","sep","getEntityPathByAttr","root","entityCaption","entityText","getAttributeText","attrText","entityPath","RegExp","runThroughEntities","getFirstAttributeByFilter","AggregationSettings","colStore","aggregates","groups","useGrandTotals","useRecordCount","_caseSensitiveGroups","COUNT_FIELD_NAME","caseSensitiveGroups","updateCompareProc","compareValues","strictCompare","caseInsensitiveCompare","addGroup","cols","columns","getColumnIds","from","to","validateColumns","hasColumnsInUse","addAggregateColumn","colIndexOrId","funcId","colId","validateAggregate","addGrandTotals","addCounts","getGroups","grp","getInternalGroups","lastGroup","getAggregates","hasAggregates","hasGroups","hasGrandTotals","hasRecordCount","isValid","drop","group","c","aggr","needAggrCalculation","saveToData","ugt","urc","csg","buildGroupKey","row","caseInsensitive","keyVal","getValue","value1","value2","DataColumn","label","originAttrId","isAggr","groupFooterColumnTemplate","gfct","calculatedWidth","DataColumnList","_dateColumnIdx","count","add","colOrDesc","col","updateDateColumnIdx","getItems","move","newIndex","oldIndex","getIndex","getDateColumnIndexes","removeAt","removeDate","DataRow","toArray","colIdOrIndex","RangeError","setValue","EasyDataTable","_chunkSize","_elasticChunks","cachedRows","total","loader","needTotal","isInMemory","chunkSize","elasticChunks","inMemory","_columns","onUpdate","colDesc","rows","rowData","createRow","addRow","getRows","params","fromIndex","pageSize","page","offset","limit","endIndex","loadChunk","apply","table","getCachedRows","getCachedCount","fireUpdated","getRow","getTotal","setTotal","dataOrRow","dateIdx","column","mapDate","rowOrValues","newRow","cachedTotal","totalIsKnown","EasyGuid","newGuid","r","EventEmitter","silentMode","events","subscribe","eventType","callback","event","getEventRecByType","eventCallback","eventCallbacks","unsubscribe","callbackId","fire","postpone","force","eventRec","eqevent","emitAllFunc","setTimeout","enterSilentMode","exitSilentMode","isSilent","renderLiquidTemplate","template","vars","liquidVarRegexp","x","NaN","ceil","FormatParser","formatStr","pos","exprNum","tokenText","skipSpaces","next","npos","token","npos1","npos2","getToken","combinePath","path1","path2","strToLinkType","All","NotAll","Any","None","linkTypeToStr","parseOperatorFormat","operator","convertValue","fromDataType","toDataType","resInt","resFloat","AggrFunction","sqlExpr","appliedTypes","aggrFunction","fmt","dtypes","getAppliedTypesOrDefault","BCD","EqValueEditor","sql","statement","extraParams","Operator","constValueFormat","isRange","caseIns","paramCount","defaultOperand","Operand","operands","pcnt","defOperand","newOperand","Scalar","operand","defText","txt","copyFrom","src","Entity","useInConditions","useInResult","useInSorting","uic","uir","uis","EntityAttr","defaultOperator","operators","defOperator","ops","EqEditorTag","SqlList","SubQuery","BindToParentColumn","DataModel","nullAttribute","nullOperator","aggrFunctions","dateMacros","timeMacros","links","newOperator","aggrfuncs","newAggrFunc","getObject","getAttributeByIdSafe","_listByEntityWithFilter","_listByEntity","addUIC","addUIR","addUIS","addOrUpdateOperator","op","removeOperator","soft","getOperatorIdsByDataType","Guid","Bool","findAggrFunctionById","func","findLink","entityFrom","entityTo","link","getLinksByEntity","getFirstUICAttr","getFirstUICAttrInEntity","findOperatorById","operatorId","opCount","getOperatorById","getDefaultOperatorIdForAttr","getAggrFunctionCaption","funcTexts","funcCaption","getAggrFunctionFormat","funcFormat","getDefaultOperatorForAttr","getOperand","Query","getAggrFunctions","isDateMacro","macroExpr","macroProcessor","macroId","isTimeMacro","getDateMacroValue","setDate","setMonth","getDay","setFullYear","getDateOrMacroValue","getTimeMacroValue","setMinutes","setHours","getTimeOrMacroValue","time","t","getAllDateMacros","getAllTimeMacros","ExprTag","QueryChangePart","QueryChangeAction","SortDirection","CondTag","ConditionPart","WidgetGroup","Expression","Constant","_value","distinct","_isDefaultValue","getParent","getModel","getQuery","Attribute","EntityAttribute","ParentEntityAttribute","query","subQuery","createSubQuery","loadFromDataOrJson","arg","baseAttrId","toJSONData","getExpressionIndex","silent","setContent","oldValue","expressionChanged","hasText","tryCopyValueFrom","QueryColumn","_id","sorting","getColumnSorting","_sorting","direction","setColumnSorting","sortIndex","getColumnSortIndex","_sortIndex","setColumnSortIndex","justsorted","enabled","_isHidden","blockId","isReadOnly","isJustSorted","setReadOnly","isHidden","setHidden","getDataType","colData","srt","srtidx","groupFooterColumnTemlate","hidden","fireChangedEvent","part","SortingColumns","Columns","action","Modify","changee","Condition","_enabled","conditions","cond","linkType","justAdded","expressions","setParent","getConditions","isGroup","Group","getLevel","isParameterized","setParameterized","isInJoin","setInJoin","clearConditions","addCondition","removeConditionAt","Simple","disabled","exprs","newExpr","linking","condPart","Conditions","tuneOperatorForAttr","getOperatorId","setOperatorId","newOperatorId","oldOperatorId","tuneValueExpressions","oldAttrId","exprCount","oldOperator","oldOperand","valExpr","createValueExpr","oldExpr","areCompitableEditors","oldEditor","addExpressionByOperand","valueNotDefined","defAttr","Tree","childs","addChild","contains","child","findNode","setParents","InvalidQueryError","isModified","_isModified","resetModified","enableAggregation","_enableAggregation","processQueryForAggregation","AggregateFunction","aggrSettings","extraData","innerData","isNewbie","parentQuery","drillDowns","syncSortOrderWithColumnsOrder","context","eventEmitter","extraConditions","sortedColumns","regenerateId","setDefaultName","attributeExprTag","attrTag","clientListRequestHandler","serverListRequestHandler","timezoneOffset","getTimezoneOffset","addChangedCallback","ev","aggregation","updateAggregationSettings","Aggregation","hasChanged","getAggregationSettings","j","find","useAggregation","settingsTuner","useDefaultAggregation","aggrCols","colsToGroup","aggrsToAdd","changeColumnType","wasModified","colToAggr","getColumns","colToGroup","groupColIds","groupedCols","sortedCols","Ascending","colIds","enabledColIds","prevIndex","isEx","reset","clearQuery","hasEnabledAggrColumns","setName","validate","entityAttrNotExistError","validateConditionGroup","getAggregatedColumns","tryValidate","e","curCond","condition","checkExpressions","parsedVal","loadFromJson","json","changeStatus","noErrors","clearDrillDowns","conds","condData","createCondition","justsortcols","newCol","createColumn","addColumnToSorted","col1","col2","fixupSortingIndices","dds","addDrillDown","createQuery","getDrillDowns","getParentQuery","findColumnById","setModel","loadModelData","toJSON","modelId","modelName","rootCondToData","condGroup","extraConds","isEmptyConditions","isEmptyColumns","clearColumns","clearExtraConditions","setId","getDescription","setDescription","getUsedInTotalsColumns","pop","colJson","isUnique","scol","getJustSortedColumns","getSortedColumns","colIdx","adjustColumnsSorting","getColumnById","addColumn","newColumn","attributeId","constValue","customSql","checkedOption","aggrFuncId","constType","CustomSql","allowCustomExpressions","getDefaultColumnCaption","readonly","fireColumnsChangedEvent","Add","addColumnObj","author","sqlText","customSqlExpr","moveColumn","removeColumn","addConditionGroup","addChildCondition","addExtraConditionGroup","addSimpleCondition","getRootCondition","createSimpleConditionObject","addSimpleExtraCondition","inputValues","attrExpr","valCount","valLength","removeColumns","columnsToRemove","justSortedColumns","removeFromArray","arrToRemove","ctrLen","fireProcessEvent","eventData","fireConditionsChangedEvent","runThroughConditions","processCondition","processGroup","predicate","getOneValueForAttr","opid","addProcessCallback","removeProcessCallback","removeChangedCallback","getConditionsText","getConditionGroupText","condText","conjKey","conjText","opId","plen","pi","macroText","getConditionsTextAsHtml","quoteExprText","getEntitiesInQuery","entities","addEntityByExpression","rootCond","fillEntitiesByCondtionGroup","buildQueryPath","tree","createTreeNodeFromEntity","subEnentity","BrowserQueryStorage","init","keyPrefix","queryListKey","queryKeyPrefix","getQueryList","itemsString","localStorage","getItem","err","newQuery","queryId","_saveQuery","loadQuery","queryItem","saveQuery","queryList","setItem","removeQuery","removeItem","EqModelLoader","modelPromise","getContext","createModelLoadingPromise","modelLoadingResolveFunc","modelLoadingRejectFunc","getModelPromise","startModelLoading","sendLoadModelRequest","EqServerModelLoader","http","getServices","getHttpClient","resolveEndpoint","responseData","EqServerDataFetcher","fetchData","fetchOptions","requestData","debug","chunk","aux","EqServerQuerySynchronizer","syncQuery","EqServerValueListResolver","loadValueList","listId","EqQueryFileLoader","getQueryFile","actionResult","blob","dispositionHeader","fileName","lastIndexOf","createElement","appendChild","display","href","URL","createObjectURL","download","click","revokeObjectURL","removeChild","uploadQueryFile","EqAggregatesContainer","levels","getAggregateData","level","groupKey","processFunc","keyStr","groupKeyToStr","getLevelDesc","receivedCallbacks","setAggregateData","updateAggregateData","createIfNotExists","DefaultAggregatesCalculator","aggrs","getAggrContainer","calculate","maxLevel","aggrColId","resultObtained","needRecalculation","EqServiceProvider","getInstance","_instance","modelLoader","queryStorage","querySynchronizer","dataFetcher","valueListResolver","queryFileLoader","aggrCalculator","services","httpClient","modelResolver","_","modelStorageResolver","queryResolver","modelLoaderResolver","queryStorageResolver","querySynchronizerResolver","vlrResolver","dataFetcherResolver","queryFileLoaderResolver","aggrCalculatoResolver","modelStorage","createDataModel","getModelLoader","getModelStorage","getQueryStorage","getQuerySynchronizer","getDataFetcher","getValueListResolver","getQueryFileLoader","getAggregatesCalculator","registerDataModelResolver","resolver","registerQueryResolver","registerModelLoaderResolver","registerModelStorageResolver","registerQueryStorageResolver","registerDataFetcherResolver","registerQuerySyncronizerResolver","registerValueListResolver","registerQueryFileLoaderResolver","registerAggregatesCalculator","registerService","serviceId","serviceResolver","getService","EqActionResult","EqAction","EmptyChunk","EqServerExporter","setFormat","exportOptions","filename","EasyQueryDataLoader","dataLoadPromise","success","dataTable","dataLoader","resultTable","resultSet","meta","totalRecords","hasNext","debugMode","fetchDataChunk","EqContext","attributeFormat","columnTitleFormat","servicesInitialized","internalListCache","loadModelOnStart","loadQueryOnStart","useStoredQueryOnFetch","_backendInfo","endpointVarsRegex","elasticPaging","_predefinedListRequestHandlers","_DSDE","onResult","_DSTE","_listRequestHandler","listName","editorParams","reqParams","attrPattern","prop","paramValue","requestParams","list","getListFromCache","processed","predefinedHandler","addListToCache","baseEndpoint","eqServices","widgets","exporters","endpoints","onResultTableUpdate","bind","errorHandlerId","addEventListener","msgTitle","msgText","sourceError","useEnterprise","keyOrInitCallback","registerExporter","registerServerExporter","exporter","getExporter","getExportFormats","addDefaultExporters","endpointKey","opt","optVal","setEndpoint","setEndpointIfNotExist","setDefaultEndpoints","endpointBase","initStart","setOptions","listCache","setExternalListCache","endpoint","handlers","onInit","afterLoadModel","afterLoadQuery","afterSyncQuery","afterFetchData","afterExportResult","onProcessStart","onProcessEnd","onError","removeEventListener","onListRequest","beforeLoadModel","beforeLoadQuery","beforeSyncQuery","beforeFetchData","beforeExportResult","initialQuery","defaultQueryId","defaultModelId","useDefaultExporters","serverExporters","widget","widgetOptions","getWidgetType","loadDefaultModel","fireEvent","backendInfo","useEndpoint","useBackend","addWidget","getAllWidgetsByType","widgetType","getWidgetByType","refreshWidgets","belongsToGroup","refresh","addQueryChangedCallback","removeQueryChangedCallback","dataModel","loadModelFromData","modelPlainData","setDefaultModelId","startProcess","endProcess","throwError","loadModel","Model","throwReady","clearResult","resultStatement","resultContent","cache","externalListCache","getListCacheKey","resetListCache","getListRequestHandler","handler","handlerId","getBaseEndpoint","GetValueList","Result","Success","errorMessage","LoadModel","callWhenModelLoaded","callFunc","LoadQuery","limitCustomSqlColumns","Properties","loadQueryList","startQueryListLoading","LoadQueryList","queries","useStorage","onNewQuery","NewQuery","queryData","SaveQuery","RemoveQuery","SyncQuery","Statement","querySaved","q","QueryStatus","groupFetchSuccess","afterGroupFetch","GetQueryFile","UploadQueryFile","FetchData","calculator","errorOccurred","fetchDrillDownData","exportResult","ExportResult","export","getAttributeTitle","getColumnTitle","ParentColumn","eqContextResolver","registerEqContextResolver","eqconsts","browserUtils","constLists","ConstLists","SpecDateValues","isDefault","SpecTimeValues","BooleanValues","predicateLinkTypeList","Widget","slot","refreshCore","onProcessStartCore","onProcessEndCore","destroy","destroyCore","addElement","element","cssClass","className","addCssClass","hideElement","showElement","createBrowserEvent","eventName","Event","createEvent","initEvent","getViewportSize","height","clientHeight","innerHeight","getScrollPos","docElem","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementAbsolutePos","y","position","defaultBoundingClientRect","right","bottom","box","getBoundingClientRect","scollPos","clientTop","clientLeft","round","getWinSize","addEasyQueryCoreTexts","NewQueryName","Today","Yesterday","Tomorrow","FirstDayOfMonth","LastDayOfMonth","FirstDayOfWeek","FirstDayOfYear","FirstDayOfNextWeek","FirstDayOfNextMonth","FirstDayOfNextYear","Now","HourStart","Midnight","Noon","Entities","Attributes","Operators","AggregateFunctions","mobileModeChangeHandler","_isFirefox","isIE","ua","userAgent","includes","isEdge","isFirefox","_isMobileMode","_detectedIsMobileMode","detectIsMobileMode","isMobileMode","matchMedia","newValue","setIsMobileMode","onMobileModeChanged","eqCssPrefix","DomElementBuilder","parentElement","childBuilder","builder","domel","addChildElement","attrValue","setAttribute","focus","title","dataId","dataValue","removeAttribute","show","removeStyle","hide","toHide","setStyle","visible","isVisible","offsetWidth","offsetHeight","getClientRects","addClass","classNames","fullList","classList","removeClass","remove","toggleClass","toggle","on","listener","eventTypes","off","styleId","styleValue","setProperty","removeProperty","innerText","html","innerHTML","oldElem","tagName","replaceWith","addText","textEl","createTextNode","addHtml","toDOM","appendTo","DomTextAreaElementBuilder","DomInputElementBuilder","valueAsDate","valueAsNumber","maskPattern","input","inputHandler","mskd","startSelection","selectionStart","el","test","selectionEnd","keyCode","preventDefault","selection","onlyLodash","dispatchEvent","char","fromCharCode","charCode","DomSelectElementBuilder","addOption","option","selected","HTMLDivElement","HTMLSpanElement","HTMLAnchorElement","HTMLButtonElement","HTMLImageElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","touchEventIsDefined","TouchEvent","DropEffect","EqDragEvent","dragImage","sourceEvent","dropEffect","Allow","pageX","pageY","MouseEvent","touches","Position","eqDragManager","DragManager","delta","draggableItem","finishedSuccessfully","mouseDownPosition","containerDescriptors","containerDescriptorIndex","classPrefix","DRAG_DISABLED_ATTR","registerDraggableItem","ondragstart","detectDragging","hasAttribute","stopPropagation","cursorPosition","abs","startDragging","mouseMoveEventListener","mouseMoveDragListener","beforeDragStart","cloneNode","renderer","updateCusror","updateImageClass","scope","updateDragItemPosition","onDragStart","mouseDownListener","mouseUpListener","endDraggind","dropContDesc","container","scopes","onDrop","onDragLeave","onDragEnd","registerDropContainer","removeDropContainer","descriptorOrSlot","descs","detectDragEnterEvent","dragEnterEvent","detectDragLeaveEvent","dragLeaveEvent","onDragOver","setCursorStyle","Forbid","cursor","children","onDragEnter","containerPos","AutoResizeColumns","GridColumnAlign","GridColumn","grid","isRowNum","_label","_description","align","NONE","dataColumn","widthOptions","columnWidths","alignment","MapAlignment","Left","LEFT","Center","CENTER","Right","RIGHT","default","rowNumColumn","GridColumnList","columnList","sync","hasRowNumCol","rowNumCol","onSyncGridColumn","cssPrefix$1","DFMT_REGEX","CellRendererType","StringCellRendererDefault","cellValueElement","rowElement","NumberCellRendererDefault","strValue","DateTimeCellRendererDefault","isDate","call","timeOptions","BoolCellRendererDefault","GridCellRendererStore","renderers","defaultRenderers","registerRenderer","setDefaultRenderer","STRING","NUMBER","DATETIME","BOOL","getDefaultRenderer","columnType","cellType","getCellType","getDefaultRendererByType","rendererType","getRenderer","EasyGrid","cssPrefix","pagination","paginationOptions","maxButtonCount","useBootstrap","defaultDataGridOptions","fixHeightOnFirstRender","syncGridColumns","useRowNumeration","allowDragDrop","paging","pageSizeItems","autoResize","Always","stringColumns","numberColumns","boolColumns","dateColumns","otherColumns","showPlusButton","viewportRowsCount","showActiveRow","rowsOnPagePromise","containerInitialHeight","firstRender","prevRowTotals","landingIndex","landingSlot","_activeRowIndex","mergeOptions","processColumnWidthsOptions","cellRendererStore","setSlot","aggrOptions","colWidthOptions","pagingOptions","knownTypes","getElementById","getElementsByClassName","onRowClick","onRowDbClick","onPlusButtonClick","onColumnChanged","onColumnDeleted","onColumnMoved","onPageChanged","onActiveRowChanged","activeRowIndex","showLandingSlot","hideLandingSlot","columnId","getData","clearDOM","render","hasData","rootDiv","renderHeader","headerDiv","renderBody","bodyDiv","renderFooter","footerDiv","gridContainer","needAutoResize","Never","updateHeight","resizeColumns","firstRow","bodyCellContainerDiv","firstElementChild","viewportHeight","bodyViewportDiv","sbHeight","getContainerWidth","reduce","sum","current","headerViewportDiv","headerCellContainerDiv","headerRowDiv","hd","renderColumnHeader","renderHeaderButtons","containerWidth","colBuilder","colDiv","attrLabel","showAggrs","canShowAggregates","showProgress","getRowsToRender","hideProgress","rowsToRender","updateTotalsState","tr","renderRow","showGrandTotalsOnEachPage","isLastPage","onViewportKeydown","isLast","changeLevel","renderTotalsRow","applyGroupColumnTemplate","colIndex","renderCell","aggrContainer","isLastGroupColumn","groupColIndex","aggrColIndex","groupFooterTemplate","firstChild","cellDiv","rowCount","querySelectorAll","ensureRowVisibility","rowOrIndex","getDataRow","rowRect","viewportRect","rowTop","rowBottom","windowHeight","footerPaginateDiv","renderPageNavigator","pageInfoBlock","renderPageInfoBlock","pageInfoDiv","fistPageRecordNum","lastPageRecordNum","totalStr","getLocalIndexByGlobal","getGlobalIndexByLocal","indexGlobal","rowBuilder","rowIndex","colindex","cellElement","valueCell","cellRenderer","getCellRenderer","onGetCellRenderer","setPage","paginateDiv","totalRows","totalPages","buttonClickHandler","getAttribute","renderPaginationItem","pageIndex","content","extreme","active","li","newA","ul","userSelect","cell","allowPageSizeChange","selectChangeHandler","pageSizes","selectSize","sel","selOptions","selSet","Set","labelDiv","plusButtonTitle","colElems","rowElem","landingPos","newLandingIndex","colPos","insertBefore","updateActiveRow","activeRow","getActiveRow","visibility","sumWidth","headerCells","headerIdx","cellValues","maxWidth","whiteSpace","maxOption","minOption","Calendar","yearRange","currentDate","dateChanged","onDateChanged","DateTimePicker","calendar","timePicker","setDateTime","currentDateTime","setTime","getDateTime","showCalendar","createCalendar","showDateTimeInput","timePickerIsUsed","showTimePicker","oneClickDateSelection","dateTimeChanged","createTimePicker","onTimeChanged","anchor","beforeShow","onApply","cancel","onCancel","onDateTimeChanged","DefaultCalendar","daysOfWeek","months","calendarBody","isManualInputChanging","selectedMonth","selectedYear","rerenderMonth","renderManualDateInput","headerTextElem","renderCalendarButtons","getInputDateFormat","newDate","manualInputElem","jump","updateDisplayedDateValue","prev","selectMonthElem","selectYearElem","rerenderSelectYear","exec","minusYear","plusYear","firstDay","daysInMonth","dayOfWeek","onDrawDay","cellsDrawnInLastRow","cellsToDraw","TimePicker","currentTime","timeChanged","DefaultTimePicker","updateDisplayedTime","hoursInput","minutesInput","timeText","slidersBuilder","timeToDraw","DefaultDateTimePicker","sb","zIndex","renderButtons","globalMouseDownHandler","srcElement","nowButton","submitButton","calendarSlot","timePickerSlot","anchorPos","parentPos","DialogFooterAlignment","DefaultDialogService","openConfirm","closable","submitable","cancelable","onSubmit","openPrompt","submitOnEnter","arrangeParents","beforeOpen","processInput","dialog","DefaultDialog","onDestroy","dlg","untrack","track","createSet","DefaultDialogSet","openDialogs","openProgress","DefaultProgressDialog","getAllDialogs","closeAllDialogs","close","submitHandler","cancelHandler","keydownHandler","isActiveDialog","dialogId","windowElement","headerElement","alertElement","bodyElement","alignClass","footerAlignment","footerElement","bb","submitButtonText","recaptchaSiteKey","grecaptcha","ready","execute","cancelButtonText","getRootElement","getSubmitButtonElement","getCancelButtonElement","windowDiv","querySelector","clearAlert","onInput","onShow","submit","disableButtons","button","enableButtons","showAlert","reason","alert","windowDivs","turnOn","contentElement","progressElement","determinated","updateContent","updateProgress","progress","in01","dialogService","currentDialog","currentIndex","getCurrent","openNext","openPrev","dlgOptions","PRE_SELECT","JUMP_TO","safeFocus","addEasyDataUITexts","GridPageInfo","GridItemsPerPage","ButtonApply","ButtonNow","LblTotal","eqCssMobile","getMobileCssClass","EntitiesPanel","queryChangedCallbackId","panel","renderProgressBlock","syncWithColumns","refreshCheckedStateByColumns","showIndicatorOnLoad","progressBlock","parentNode","showToolbar","showSelectAllButton","showClearSelectionButton","showAddColumnButton","showAddConditionButton","showCheckboxes","showTooltips","draggableAttributes","showAttributes","showFilterBox","filterBoxMode","autoClearSelection","entityRenderedCallback","attributeRenderedCallback","edata","rootEntityBlock","entTree","entityTreeBlock","renderEntity","createFilterBox","createToolPanel","block","entityBlock","entityNode","entityChildren","nodeLabel","nodeInput","attrNode","attrInput","nodeToggleButton","currentOffset","isAttributeInTree","divElem","itemsLength","checkbox","currentTarget","checked","checkboxes","attrList","attrElems","elem","filterBoxBlock","filterBoxInput","checkFilterAttribute","displayAttrCount","collapseAll","expandAll","defClass","toolPanelBlock","toolSelectAll","toolDeselectAll","toolAddColumns","toolAddCond","toolLeftBlock","toolRightBlock","selectAll","deselectAll","attrElements","self","attrElement","attrCaption","textContent","checkFilterText","filterText","exprColumns","entChildren","entElem","childNodes","nodeButtons","inputs","MenuLevel","applyItem","_applyItem","isFilteringMode","showSelected","parentMenu","menu","parentLevel","levelIndex","levelDiv","domWriteItemsId","menuId","itemRenderedCallback","itemDiv","activeItem","selectedItem","initialized","updated","renderContent","setItems","itemBgColor","colors","bgON","itemFgColor","fgON","bgOVER","itemFontFamily","itemStyle","fontFamily","itemFontSize","fontSize","multiselect","isSubQuery","baseDivBuilder","useDefaultStyles","border","baseDiv","hideButtons","applyDiv","applyBtn","borderBottom","padding","marginBottom","applyTextNode","buttons","cancelBtn","marginLeft","cancelText","hideMenu","searchBoxAlwaysShown","showSearchBoxAfter","searchDivBuilder","searchEditBoxBuilder","deactivateItem","renderItems","searchBox","moveActiveItemUp","moveActiveItemDown","openSubLevel","searchDiv","scrollDiv","tabIndex","overflowX","overflowY","which","getRootLevel","closeDiv","filteredItems","activateItem","menuItem","showSubLevel","subLevel","focusScrollDiv","turnCheckboxes","itemCheckbox","isItemSelected","setItemSelected","submitItems","selectedItems","allSubitemsAreFiltered","filterCallback","isItemDiv","isLevelDiv","getMenuItem","renderItemsWithoutFilter","activateOnMouseOver","itemFilterCallback","getItemFilterCallback","color","paddingLeft","paddingRight","cb","defaultChecked","margin","verticalAlign","itemText","showItemIds","itemTextNode","arrowSpan","arrowText","itemClickHandler","itemSelected","refreshCheckboxes","isCursorInside","renderItemsWithFilter","filterSections","pureFilterTexts","section","filterItems","renderItemWithFilter","matchesFilter","regexp","resultItems","restFilterSections","filterRegexp","groupItem","groupItemMatches","filterTexts","levelFilterText","highlightText","lowerText","lowerContent","insertValue1","insertValue2","indexInMas","itemOverBgColor","itemOverFgColor","fgOVER","itemClass","itemClassOver","backgroundColor","levelId","scroll","winSize","leftSpace","rightSpace","offsetParent","showAt","adjustTopPos","levelBottom","initLevelDiv","levelStyle","minItemWidth","maxItemWidth","maxHeight","newHeight","searchBoxAutoFocus","submitMenu","update","newItems","refreshItems","findItem","searchedText","PopupMenu","mouseIsOverBlock","mouseIsOverLink","toId","ancorFocused","adjustHeight","submitOnBlur","lastMenuID","updateProps","rootLevel","menuKeyUpHandler","stopImmediatePropagation","o","isOutside","menuLevel","shadow","commandTemplate","clearItemsMenuProps","clearItemMenuProps","setSelectedItems","selectedIds","showMenu","activeElement","itemSelectedCallback","menuClosedCallback","onMenuItemSelected","srcPos","anchorHeight","anchorWidth","findHighestZIndex","highest","zindex","defaultView","getComputedStyle","getPropertyValue","numZIndex","knockMenuStyle","DisplayFormatParser","s","getTokenText","ColumnAction","QPEditablePart","ConditionAction","FacetType","ChartType","AggrFunc","FormFieldType","ColumnRendererCP","functionMenu","formatsMenu","buttonMenu","isMouseOverBlock","keepShowingButtons","columnEnabled","getButtonsToShow","sortingButton","renderSoringButton","replaceChild","createFunctionMenu","createFormatsMenu","createButtonMenu","getClassesToAdd","renderCheckbox","renderExpressionBlock","showColumnTitles","renderCaptionBlock","buttonsIndex","buttonsList","renderEnabledButton","renderColumnTypeButton","renderColumnFormatButton","renderDeleteButton","renderMenuButton","onMouseEnter","onMouseLeave","accentActiveColumn","onMouseClick","alwaysShowButtons","showButtons","activate","toggleColumnPicked","adjustButtonsVisibility","fireColumnChanged","inputEl","minWidth","isEndEvent","save","KeyboardEvent","FocusEvent","aEl","sortButtonCssClass","sortButtonDirectionCssClass","Descending","i18n$1","getUIS","sortMenu","moveMenu","getButtonMenuSelectedItems","Hidden","MoveTop","MoveDown","MoveUp","MoveBottom","SortingNone","SortingAsc","SortingDesc","buttonMenuHandler","leaveButtonBlock","evt","Menu","allowAggrColumns","changeTypeHandler","getFormatsMenuItems","allowDisplayFormatChange","changeFormatHandler","Enable","itemId","enterButtonBlock","isColumnActive","funcs","funcAllowed","colDataType","toInclude","areCustomExpressionsAllowed","menuOptions","curQuery","colMenu","processFormatsButtonMenuItems","processExtraButtonMenuItems","Appearance","allowHiddenColumns","sortItems","allowSorting","getSortMenuList","getMoveMenuList","extra","getExtraButtonMenuItems","arrSelected","formatId","AttrColumnRendererCP","renderBaseExpression","baseAttr","showEntitiesMenu","baseExpressionItemSelectedCallback","attrid","updateBaseAttr","changeTypeToCustomSql","newElement","changeTypeToAggr","AggrFuncColumnRendererCP","arguments","displayFormatParser","exprBlockBuilder","arrFormat","parseDisplayFormat","functionLink","changeTypeToSimple","parser","EditableColumnRendererCP","dataTypeMenu","exprBlock","getColumnValue","colVal","setColumnValue","createDataTypeMenu","dataTypeLink","typeItem","CustomSqlColumnRendererCP","getDefaultValue","ConstColumnRendererCP","ColumnsPanel","activeColumn","showAddRow","showHeader","allowDuplicates","attrElementFormat","titleElementFormat","columnRenderedCallback","customExpressionText","showAddAllForEntity","detachQueryObserver","attachQueryObserver","moveColumnCore","addNewColumn","renderBaseElements","minusHeight","headerBuilder","columnsBlock","addRowElement","ids","queryEventCallbackId","focusedBefore","isFocusInside","modifyColumn","colEl","getColumnRenderer","newEl","focusElem","agjustHeaderVisibility","addColumnElement","deleteColumn","nextSibling","previousSibling","focusCond","rowElems","rowHeight","absPos","scrollIntoView","behavior","createEntitiesMenu","createColumnMenus","renderColumn","isActive","newColBlock","scrollToBottom","scrollHeight","checkColumnsArray","checkColumn","getColumnsBlock","addAllColumnsToEntitiesList","attrIds","unshift","entitiesList","adjustEntitiesMenuHeight","entitiesMenu","createSortMenu","createMoveMenu","colToMove","ColumnRendererCB","tapedTwice","bar","renderSortingImage","renderButtonsBlock","renderSortingButton","tapHandler","isFocused","ctrlKey","metaKey","clickEvent","buttonSortingClickHandler","buttonDeleteClickHandler","buttonTypeClickHandler","changeColumnTypeHandler","buttonFormatClickHandler","formatButtonIsShown","onHideButtonsMobile","onShowButtonsMobile","AttrColumnRendererCB","AggrFuncColumnRendererCB","EditableColumnRendererCB","CustomSqlColumnRendererCB","ConstColumnRendererCB","ColumnsBar","customQuery","sortMenuList","moveMenuList","addRowButton","elements","columnSlots","colSlot","colWidth","colHeight","paddingWidth","paddingHeight","renderAddRowButton","renderColumnButtonsBlockMobile","columnButtonsBlockMobileArrow","columnButtonsBlockMobile","buttonsBlockSortingButton","currentColumnRenderer","hideColumnButtonsMobile","buttonsBlockTypeButton","buttonsBlockFormatButton","buttonsBlockDeleteButton","showColumnButtonsMobile","columnRenderer","columnElement","currentActiveColumn","rect","offsetTop","offsetLeft","columnSlot","globalCounter","ColumnRendererSB","getArrow","sd","SortingBar","TextRenderer","ConditionRenderer","autoAppear","coreRender","onConditionRendered","SimpleConditionRenderer","renderConjunction","mayAppear","minLength","getOperatorRenderer","toAppear","exprRenderer","getExpressionRenderer","adjustWidth","accentActiveCondition","toggleConditionPicked","buttonsBlock","setConditionParameterized","setConditionInJoin","getConditionMenu","isFirstConditionInGroup","showConjunctions","linkTypeStr","conjuctionText","isConditionActive","alwaysShowButtonsInConditions","conditionMenuHandler","AddCondition","entMenu","getEntitiesMenu","descr","AddGroup","condMenu","getConditionMenuSelectedItems","Parameterized","InJoin","editableParts","Removal","Addition","onButtonMouseEnter","onButtonMouseLeave","buttonsToShow","DomDropDownElementBuilder","appear","onGetMenu","_onGetMenu","onItemSelected","_onItemSelected","ConditionGroupRenderer","isRoot","renderGroupRow","renderConditions","showRootRow","ConditionGroupRowRenderer","getConditionRenderer","buildGroupElements","getGroupTitle","groupTitle","curType","dropdown","getLinkTypeMenu","getConditionGroupMenu","alwaysShowButtonsInGroups","BaseElementRenderer","isEditMode","labelElement","renderLabelElement","renderEditor","showEditor","displayedText","getLabelText","getEmptyText","ExpressionRenderer","expression","valueEditor","onExpressionRendered","emptyTextValue","Value","validateInput","showValidationError","isEmptyValue","InputExpressionRenderer","inputBuilder","dontProcessBlur","validationResult","inputElement","closeEditor","MIN_WIDTH","inputValue","validateListInput","validateScalarInput","ListExpressionRenderer","menuItemsList","showWhenReady","adjustNewValue","emptyTextList","getListName","fillMenuItemsList","renderMenuBlock","showLoader","hideLoader","getValuesAsArray","selLength","multiSelect","queryPanel","menuContainer","showIdsForListItems","onComplete","takeDefaultValue","itemLen","CustomListExpressionRenderer","isLoading","onClickTemp","loaderElement","listRequestHandler","SqlListExpressionRenderer","AttributeExpressionRenderer","attrObj","attrFormat","emptyTextAttribute","DropDownRenderer","getMenu","AddRowRenderer","OperatorRenderer","operId","related","isRelatedToSubQuery","emptyTextOperator","DateTimeExpressionRenderer","dtp","internalDateFormat","internalTimeFormat","pickerOptions","convertToInternalFormat","dateTimePickerResolver","convertFromInternalFormat","dateTimeStr","defautValue","SubQueryExpressionRenderer","dialogBlockBody","renderColumnBlock","renderQueryPanelBlock","exprType","colEntitiesList","colEntitiesMenu","columnBlock","setResultAttributeId","parentEl","subQueryPanelBlock","qpId","parentPanel","subOptions","entitiesListFilter","listItems","listOptions","subQueryPanelListOptions","subQueryPanel","clonePanel","rootCondEl","minHeight","subQueryDialogWidth","BindToParentColumnExpressionRenderer","attrDataType","QueryPanel","activeCondition","entitiesPopupHandler","allowParameterization","allowInJoinConditions","showPoweredBy","activateRootOnStart","subQueryDialogHeight","dialogZIndex","numberListSeparators","autoEditNewCondition","onGetConditionRenderer","onGetExpressionRenderer","onGetOperatorRenderer","onOperatorRendered","onGetAddRowRenderer","defaultQuery","hideLangindSlot","conditionMenu","linkTypeMenu","rootGroupMenu","groupMenu","modifyCondition","autoEdit","newCondContainer","lastChild","deleteCondition","dateFormatValue","dateFormatDisplay","createConditionMenus","createLinkTypeMenu","rootContainer","addrowRenderer","getAddRowRenderer","attributeMenu","FilterBar","applyOnClose","showApplyButton","showClearButton","headerClickListener","headerClickHandler","qpElement","applyBtnClick","applyFilter","clearBtnClick","clearFilter","showQueryPanel","slideDown","duration","overflow","paddingTop","paddingBottom","marginTop","boxSizing","transitionProperty","transitionDuration","qpBlock","updateHeader","hideQueryPanel","slideUp","headerTextElement","headerLinkElement","headerArrowBlock","headerArrowElement","textResize","headerIconElement","headerTextBlock","applyFilterCallback","Grid","useCustomLocaleSettings","beforeTableRendering","applyDisplayFormats","EasyGridWidget","hasCustomTotalsSettings","autoRefresh","gridOptions","addColumnClickHandler","columnMovedHandler","updateTotalsSettings","StatementPanel","statementText","ProcessWidget","__awaiter","thisArg","_arguments","P","generator","fulfilled","rejected","done","adopt","SuppressedError","ResultFacet","dialogTitle","canDisplayFlag","downloadAllClickHandler","getDialogService","loadElasticChunk","nextChunkStart","recordsToLoad","loadedRecords","contentDiv","displayMessageDiv","showSettingsDialog","ds","renderDialogContent","submited","submitSettingsDialog","afterDialogOpened","fieldsContainer","renderFormFields","form","cont","tabNameInput","canDisplay","showErrorMessage","showUnableDisplayMessage","hideUnableDisplayMessage","getType","onResize","ChartWidget","slotElement","chartType","Pie","supportedChartTypes","potentialLabelColumns","potentialDataColumns","labelColumn","dataColumns","showOnPaging","hideSettings","legend","hasColumnsForChart","prepareChartData","getSupportedChartTypes","getOptions","getChartTypeName","ct","Area","Bar","Column","Combo","Doughnut","Polar","Radar","Histogram","Line","SteppedLine","updateSettings","updateColumns","showLegend","updateChartColumns","colNum","colType","colLabel","initChart","hasChartTypes","getCurrentChartType","mainDiv","canDraw","chartTypeSelector","sopt","ctkey","settingsDiv","chartDiv","initSettingsDiv","chartSettingsBtn","toggleSettings","drawChart","addContentDiv","delay","drawCore","settingsHeader","labelColumnSelectorCaption","labelColumnSelector","dataDiv","dataColumnSelectorCaption","dataColumnSelector","getPotentialLabelColumns","getPotentialDataColumns","getLabelColumnIndex","getDataColumnIndex","first","toggleVisibility","complete","ChartJsWidget","chartLabels","chartColumns","hasChartJs","Chart","config","generateConfig","chartContext","getChartCanvas","canvases","borderColor","dataColors","datasetName","fillValue","dataset1","fill","stepped","steppedLine","displayLegend","getChartType","datasets","labels","GoogleChartWidget","hasGoogleCharts","google","charts","googleDataView","visualization","DataView","convertToGoogleFormat","convertToGoogleType","convertToGoogleValue","googleTable","DataTable","addRows","setCell","chartOptions","chartArea","getChartAreaWidth","pieHole","createChart","draw","setColumns","ColumnChart","BarChart","ComboChart","AreaChart","LineChart","SteppedAreaChart","PieChart","ChartFacet","chart","horizClass","getSettings","labelCol","dataCol","showLeg","PivotTableFacet","pivotTable","maxRowCount","defaultRenderer","rowEl","totalsRow","PivotTable","createAggrFuncSelectBuilder","aggrFunc","csb","aggrfunc","createColumnsSelectBuilder","allowedTypes","colName","formFieldType","getContextDataTable","firstNumericColIndex","optionIndex","ColumnField","RowField","CellData","totalsCol","colTypes","fieldTypes","colSelect","rowSelect","tmp","rowName","fieldName","validateSelectedField","aggrSelector","Count","Average","updatePivotData","dataSize","rowIdx","fieldIdx","columnField","columnCol","columnRow","rowLabel","rowType","colValues","rowValues","colValue","rowValue","null_columns","colFieldFormatter","formatNumber","formatDate","new_rows","calcAggrFunc","totalByRow","Min","Max","total_row","totalByCol","Sum","average","MAX_SAFE_INTEGER","fieldValue","MIN_SAFE_INTEGER","DataTableFacet","reinitGrid","gridResolver","addColumns","totals","DataGrid","FacetContainer","facets","facet","createFacetTab","ExportDialog","defFormat","ResultFacetsPanel","activeFacetIndex","showExportButton","showRefreshButton","showMaximizeButton","maximize2Window","showProcessIndicator","facetTypes","menuItems","menuItemsFilter","renderProcessBlock","loadFacets","reloadFacets","createAddMenu","validateAddFacetButton","renderActiveFacet","updateTotalRecords","addMenu","recordsDiv","exportDiv","_processBlock","tabsDiv","tabsUl","renderFacet","addFacetButton","addClickHandler","manageDiv","bdb","exportHandler","refreshHandler","maximizeButton","maximizeHandler","toWindow","isMaximized","facetTab","renderFacetTab","renderFacetSlot","settingsClickHandler","closeClickHandler","selectClickHandler","refreshFacetTabs","removeFacet","facetSlot","saveFacets","setActiveFacet","confirmed","createDefaultFacetIfNotExist","isActivate","Facets","Activate","fd","ExportWidget","enableExport","clickHandler","AggrSettingsRenderer","selectState","funcMap","onChanged","dropSelectState","dropState","setInitialState","changed","state","grandTotals","recordCount","getAvailableColumns","renderCore","slotb","currentGroup","groupBlockColumns","selectedBlockColumns","groupCounter","getGroupForColumn","groupBlock","aggrBlock","removeAggrBtnClickHandler","selectedBlock","buttonsContainer","groupBtnClickHandler","aggrBtnClickHandler","countsCheckboxChangeHandler","grandCheckboxChangeHandler","removeGroupBtnClickHandler","validateCheckboxes","prevElement","prevInputEl","nextInputEl","selector","selectedCols","hasSelected","hasAggrs","hasTotals","hasCounts","getValidationMessage","hasRecCount","isTaken","colCheckboxChangeHandler","getGroupIndexForColumn","findIndex","g1","g2","btn","AggrSettingsDialog","initQuery","enableAggrCheckBoxChangeHandler","closest","AggregationBar","linkClickCallback","getLinkText","groupArr","colNames","groupString","aggrArr","aggrString","mobClass","dialogLink","LocaleWidget","changeLocale","selectEl","locales","optionEl","displayLocaleName","QueryNameWidget","nameTemplate","nameSlot","asteriskSlot","tooltipSlot","queryName","queryDescription","View","domRoots","defaultViewOptions","disableConfirmationOnQueryChange","queryFileExtensions","clearResultOnQueryChange","showChart","resultGrid","viewOptions","resultOptions","resetContext","renderSpinner","createEqContext","shadowRoots","initOptions","initWidgets","initDone","easyGrid","exportWidget","columnsPanel","entitiesPanel","resultPanel","columnsBar","filterBar","processBar","statementPanel","queryNameLabel","facetsPanel","resultCount","exportButton","aggregationBar","slots","resultCountSpan","exportButtons","epElement","resolveElement","entitiesPanelWidget","createEntitiesPanelWidget","cpElement","columnsPanelWidget","createColumnsPanelWidget","cbElement","columnsBarWidget","createColumnsBarWidget","queryPanelWidget","createQueryPanelWidget","resultPanelSlot","resultGridWidget","gridPanel","createResultGridWidget","chartWidget","chartPanel","createChartWidget","qnElement","queryNameWidget","createQueryNameWidget","fbElement","filterBarWidget","createFilterBarWidget","sbElement","sortingBarWidget","createSortingBarWidget","pbElement","processWidget","createProcessWidget","stElement","statementPanelWidget","createStatementPanelWidget","clElement","createLocaleWidget","fpElement","resultFacetPanelWidget","createResultFacetsPanel","ewElement","createExportWidget","resultCountSlot","aggrbElement","aggregationBarWidget","createAggregationBarWidget","elementOrId","domRoot","resolveElementsByClassName","elemList","displayRecordsCount","setDialogService","executeQuery","fetchEmptyQueries","showResultSpinner","hideResultSpinner","toggleExportButtons","enableExportButtons","disableExportButtons","_spinnerDiv","chartWidgetResolver","resultGridResolver","detach","localeWidget","statementWidget","ReportView","reports","reportCache","exportClass","disabledClass","useReportCache","syncReportOnChange","_reportSaveTemplate","exportButtonClickHandler","clearReportButtonClickHandler","clearReportButtonClick","newReportButtonClickHandler","newReportButtonClick","loadReportButtonClickHandler","loadReportButtonClick","saveReportButtonClickHandler","saveReportButtonClick","removeReportButtonClickHandler","removeReportButtonClick","reloadReportDataButtonClickHandler","reloadReportDataButtonClick","location","reload","syncQueryOnChange","defaultReportId","changeType","isLiteUpdate","ExtraData","syncStarted","noSync","syncReport","fetchDataOnChange","renderReportList","reportId","clearReportButton","newReportButton","loadReportButton","saveReportButton","removeReportButton","reloadReportDataButton","elems","hideExportButtons","exportButtonsContainer","reportListSlot","newReport","processEl","queryDesc","insertIntoReportList","loadReport","reportToLoad","findReportById","reportLoaded","renderReportProps","reportContent","getReportContentFromCache","saveReportContentInCache","setActiveReport","saveCurrentReportAs","removeCurrentReport","report","removeFromReportList","reportIndex","currentReport","lastUpdated","rlItems","renderReportPanels","renderReportItemInList","showExportButtons","reportName","rid","reportsContainer","noReportPanel","indexOfReportById","clearErrors","errorHandler","findReportCacheItem","addOldEasyQueryUIMapper","addEasyQueryUITexts","AltMenuAttribute","AltMenuConstantExpression","ButtonClose","ButtonNext","ButtonPrev","MenuEnable","MenuParameterization","MenuJoinCond","CmdClear","CmdDelete","CmdToggleEnable","CmdToggleEnableCustom","CmdAddCondition","CmdAddCondGroup","ButtonSelectAll","ButtonDeselectAll","ButtonAddColumns","ButtonAddConditions","CmdClickToAddCondition","CmdDeleteRow","ErrIncorrectGroupTitleFormat","ErrNotNumber","ErrIncorrectInteger","ErrIncorrectNumberList","LinkTypeAll","LinkTypeAny","LinkTypeNone","LinkTypeNotAll","ConjAll","ConjAny","ConjNotAll","ConjNone","MsgApplySelection","MsgAs","MsgEmptyList","MsgEmptyListValue","MsgEmptyScalarValue","MsgSubQueryValue","MsgEmptyAttrValue","MsgEmptyOperator","MsgEmptyCustomSql","MsgCustomSql","MsgNoResult","MsgResultCount","MsgOf","ConditionGroupTitle","RootConditionGroupTitle","StrAddConditions","SubQueryDialogTitle","SubQueryColumnTitle","SubQueryEmptyColumn","SubQueryQueryPanelCaption","ButtonSorting","ButtonToAggr","ButtonToSimple","ButtonFormat","CmdAscending","CmdClickToAddColumn","CmdDeleteColumn","CmdDeleteSorting","CmdDescending","CmdGroupAppearance","CmdGroupSort","CmdGroupFormat","CmdNotSorted","ColTypeAggrFunc","ColTypeCompound","ColTypeGroup","ColTypeSimple","HeaderExpression","HeaderSorting","HeaderTitle","SortHeaderColumn","SortHeaderSorting","StrAddColumns","CustomExpression","AddAllForEntityText","CmdMoveToStart","CmdMoveRight","CmdMoveLeft","CmdMoveToEnd","CmdMoveUp","CmdMoveDown","ButtonMenu","CmdToSimple","CmdMoveToFirst","CmdMoveToPrev","CmdMoveToNext","CmdMoveToLast","CmdHiddenColumn","RowButtonTitle","EntityToggle","StrNoFilterDefined","StrNoFilterClickToAdd","HintHours","HintMinutes","RemoveQueryTitle","RemoveQueryContent","NewQueryTitle","NewQueryContent","NewQueryDefName","SaveQueryTitle","SaveQueryContent","SaveQueryDefName","QueryChangedTitle","QueryChangedContent","QueryClearContent","UpdateQuerySelector","FileNameLabel","SaveQueryToFileDlgTitle","NewReportDefName","NewReportDlgTitle","SaveReportDlgTitle","SaveReportDlgLabel","ReportDescLabel","RemoveReportDlgTitle","RemoveReportContent","TotalRecordsLabel","AddMenuItems","Pivot","LoadDataDlgTitle","LoadDataDlgContent","RefreshBtnTitle","ExportBtnTitle","MaximizeBtnTitle","RestoreBtnTitle","RemoveFacetDlgTitle","RemoveFacetDlgContent","DefaultDlgTitle","DefaultFacetTitle","NewFacetTitle","TabNameLabel","ErrQueryChanged","ErrNotEnoughData","ErrTooMuchData","FacetTitle","DlgTitle","DataColumnSelectorLabel","LabelColumnSelectorLabel","ChartTypeSelectorLabel","ShowLegendLabel","SwapBtnTitle","ColumnFieldSelectorLabel","RowFieldSelectorLabel","CellDataSelectorLabel","TotalsRowLabel","TotalsColLabel","TotalGridLabel","TotalsDlgLabel","GrandTotalsLabel","TotalsDlgTitle","ExportDlgTitle","ExportDlgFmtLabel","csv","excel","pdf","AggrSettings","GroupBtn","UngroupBtn","AggrBtn","UnaggrBtn","GroupCountsLabel","AggrDialogTitle","EnableAggrLabel","SelectedError","NoGroupsOrAggrError","NoGroupsOrGrandError","NoAggrOrCountError","NoGroupsLabel","NoAggrsLabel","EmptySettingsLabel","Element","msMatchesSelector","webkitMatchesSelector","TypeError","magics","lcv","__kt","versionNum","ck","infoBytes","_bs","binary_string","urlatob","atob","bytes","Uint8Array","charCodeAt","part2","ism","magic","edc","t36","encChar","majVer","eds","f36","tokens","pow","ed","ConditionEx","readOnly","parameterized","inJoin","newCond","QueryColumnEx","QueryEx","lType","path","findPath","addPathToTree","pathAdded","newNode","node","curPath","curStep","nextStep","passedEntities","pathFound","checkPath","endPoint","entityLinks","entity2","newPath","EqServerQueryStorage","delete","DataModelEx","DataTableAggregatesCalculator","levelsTotals","prevRow","initObjects","aggrColIds","createColumnAggregatesObject","MAX_VALUE","MIN_VALUE","levelNumber","levelTotals","resetLevelTotals","allRows","processDataRow","flushLevelTotals","rowTotals","aggrCol","levelIndexChanged","checkLevelChange","updateLevelTotals","groupIndex","prevValue","groupTotals","columnTotals","applyAggrFunc","strIsEmpty","baseLicApiUrl","eqVersion","LCDialog","dialogSet","buildStartPage","validateForm","startPageOnSubmit","buildCodePage","codePageOnSubmit","buildSuccessPage","buildFailurePage","dialog1","emailInput","isValidForm","codeInput","addInputField","parentBuilder","inputOptions","required","controlsPanelBuilder","formBuilder","outerHTML","nameInput","authEmail","authName","email","ptag","apptype","authCode","EnterpriseEqContext","createTrialWM","showTrialWM","hideTrialWM","showNoLicenseAlert","buttonTitle","buttonUrl","footer","backendType","appType","trialDiv","textAlign","opacity","font","transition","eq","lineHeight","korzh","trialOnly","fontWeight","trialDivElement","calcTotals","reportView"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}