@page
@using MigraDoc.DocumentObjectModel
@model EqDemo.Pages.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    ViewData["Title"] = "Advanced Search demo";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.korzh.com/eq/7.3.3/eq.core.min.css">
    <link rel="stylesheet" href="https://cdn.korzh.com/eq/7.3.3/eq.view.min.css">
    <link rel="stylesheet" href="~/css/easyquery.css"/>
}

<div class="easyquery-container">
    <div class="entities-panel">
        <div class="widget">
            <div class="widget-title">Entities</div>
            <div class="widget-content">
                <div id="EntitiesPanel"></div>        
            </div>
        </div>
    </div>
    <div class="columns-panel">
        <div class="widget">
            <div class="widget-title">Columns</div>
            <div class="widget-content">
                <div id="ColumnsPanel"></div>        
            </div>
        </div>
    </div>
    <div class="conditions-panel">
        <div class="widget">
            <div class="widget-title">Conditions</div>
            <div class="widget-content">
                <div id="QueryPanel"></div>        
            </div>
        </div>
    </div>
    <div class="result-panel">
        <div class="widget">
            <div class="widget-title">Result</div>
            <div class="widget-content">
                <div id="ResultPanel"></div>        
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- EasyQuery scripts -->
    <script src="https://cdn.korzh.com/eq/7.3.3/eq.enterprise.min.js"></script>
    
    <script>
        window.addEventListener('DOMContentLoaded', function () {
            // Initialize the EasyQuery application
            const viewOptions = {
                //Load model on start
                loadModelOnStart: true,

                //Load query on start
                loadQueryOnStart: false,

                enableExport: true,
                serverExporters: ['pdf', 'excel', 'csv'],

                //locale: 'en-US',
                localeSettings: {
                    shortDateFormat: 'yyyy-MM-dd',
                },

                //Handlers
                handlers: {
                    afterFetchData: function(context) {
                        console.log("After Fetch");
                    },
                    //Error handler
                    onError: function (_, error) {
                        console.error(error.sourceError);
                    },
                    onListRequest: function (params, onResult) {
                        console.log('Inside list request handler');
                        var processed = true;
                        const listName = params.listName;
                        if (listName.startsWith("Lookup")) {
                            console.log('Looking for list: ', listName);
                            const type = listName.split(' ')[1];
                            const list = [];
                            getLookupList(type, onResult);
                        } else {
                            processed = false;
                        }
                        return processed;
                    },
                },
                result: {
                    //Show EasyChart
                    showChart: true,
                    paging: {
                        pageSize: 30
                    }
                }
            }

            const view = new easyquery.ui.AdvancedSearchView();
            const context = view.getContext();
            context.useEnterprise(function () {
                view.init(viewOptions);
            });

            document['AdvancedSearchView'] = view;
        });
    </script>
}
