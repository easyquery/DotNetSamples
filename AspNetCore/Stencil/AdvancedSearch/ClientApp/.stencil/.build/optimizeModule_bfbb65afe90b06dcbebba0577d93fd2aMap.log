{"version":3,"names":["FetchData","constructor","hostRef","this","loading","forecasts","componentWillLoad","fetch","then","response","json","data","renderForecastsTable","h","class","map","forecast","key","dateFormatted","temperatureC","temperatureF","summary","render","contents","displayName","name"],"sources":["src/components/fetch-data.tsx"],"sourcesContent":["import { Component, State, h } from '@stencil/core';\r\n\r\ninterface Forecast {\r\n    dateFormatted?: string; \r\n    temperatureC?: number;\r\n    temperatureF?: number;\r\n    summary?: string;\r\n}\r\n\r\n@Component({\r\n    tag: 'fetch-data'\r\n})\r\nexport class FetchData {\r\n    static displayName = FetchData.name;\r\n\r\n    @State() loading: boolean;\r\n\r\n    @State() forecasts: Forecast[];\r\n\r\n    constructor () {\r\n\r\n      this.loading = true;\r\n      this.forecasts = [];\r\n\r\n    }\r\n\r\n    componentWillLoad() {\r\n        fetch('api/SampleData/WeatherForecasts')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.loading = false;\r\n            this.forecasts = data;\r\n        });\r\n    }\r\n  \r\n    static renderForecastsTable (forecasts: Forecast[]) {\r\n      return (\r\n        <table class='table table-striped'>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Temp. (C)</th>\r\n              <th>Temp. (F)</th>\r\n              <th>Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {forecasts.map(forecast =>\r\n              <tr key={forecast.dateFormatted}>\r\n                <td>{forecast.dateFormatted}</td>\r\n                <td>{forecast.temperatureC}</td>\r\n                <td>{forecast.temperatureF}</td>\r\n                <td>{forecast.summary}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  \r\n    render () {\r\n      let contents = this.loading\r\n        ? <p><em>Loading...</em></p>\r\n        : FetchData.renderForecastsTable(this.forecasts);\r\n  \r\n      return (\r\n        <div>\r\n          <h1>Weather forecast</h1>\r\n          <p>This component demonstrates fetching data from the server.</p>\r\n          {contents}\r\n        </div>\r\n      );\r\n    }\r\n}"],"mappings":"iDAYaA,EAAS,MAOlB,WAAAC,CAAAC,G,UAEEC,KAAKC,QAAU,KACfD,KAAKE,UAAY,EAElB,CAED,iBAAAC,GACIC,MAAM,mCACLC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFR,KAAKC,QAAU,MACfD,KAAKE,UAAYM,CAAI,G,CAI7B,2BAAOC,CAAsBP,GAC3B,OACEQ,EAAA,SAAOC,MAAM,uBACXD,EAAA,aACEA,EAAA,UACEA,EAAa,kBACbA,EAAkB,uBAClBA,EAAkB,uBAClBA,EAAA,uBAGJA,EAAA,aACGR,EAAUU,KAAIC,GACbH,EAAI,MAAAI,IAAKD,EAASE,eAChBL,EAAK,UAAAG,EAASE,eACdL,EAAK,UAAAG,EAASG,cACdN,EAAK,UAAAG,EAASI,cACdP,EAAK,UAAAG,EAASK,a,CAQ1B,MAAAC,GACE,IAAIC,EAAWpB,KAAKC,QAChBS,EAAA,SAAGA,EAAA,yBACHb,EAAUY,qBAAqBT,KAAKE,WAExC,OACEQ,EAAA,OAAAI,IAAA,4CACEJ,EAAyB,MAAAI,IAAA,gEACzBJ,EAAiE,KAAAI,IAAA,0GAChEM,E,GAxDAvB,EAAAwB,YAAcxB,EAAUyB,Y","ignoreList":[]}