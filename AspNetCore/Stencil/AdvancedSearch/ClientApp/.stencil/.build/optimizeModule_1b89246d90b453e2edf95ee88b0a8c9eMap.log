{"version":3,"names":["DataType","EntityAttrKind","EditorTag","Unknown","Edit","DateTime","List","CustomList","File","HttpMethod","HttpRequest","constructor","xhr","descriptor","this","method","url","headers","queryParams","data","setHeader","name","value","setQueryParam","getXMLHttpRequest","getResponseHeaders","readyState","HEADERS_RECEIVED","getAllResponseHeaders","arr","trim","split","headerMap","line","parts","header","shift","join","open","UNSENT","Object","keys","length","encodeURI","map","param","setRequestHeader","abort","utils","getAllDataTypes","values","filter","item","getDateDataTypes","Time","Date","getStringDataTypes","String","Memo","FixedChar","_numericTypes","Byte","Word","Int32","Int64","Float","Currency","Autoinc","getNumericDataTypes","_intTypes","assign","target","args","i","source","hasOwnProperty","key","assignDeep","sources","assignDeepCore","WeakMap","hashSet","sourceVal","endsWith","HTMLElement","has","get","Array","isArray","createArrayFrom","set","create","getPrototypeOf","getIfDefined","defaultValue","IsDefinedAndNotNull","copyArrayTo","collection1","collection2","len1","len2","collection","result","push","findItemById","array","id","arrLength","idx","findItemIndexById","indexOfArrayItem","indexOf","len","moveArrayItem","index1","index2","splice","removeArrayItem","index","insertArrayItem","fillArray","start","end","relativeStart","k","Math","max","min","relativeEnd","undefined","final","shiftToFitWindow","absLeft","width","body","document","getElementsByTagName","winWidth","window","innerWidth","documentElement","clientWidth","absRight","isObject","val","isNumericType","dtype","isIntType","isNumeric","isNaN","parseFloat","isFinite","areCompatibleDataTypes","type1","type2","isPropSet","obj","propName","toLowerCase","toUpperCase","prefixIdLen","symbols","magicTicks","generateId","prefix","prfx","squeezeMoniker","randCharPart","getRandomInt","randInt","ticksNum36","intToNumBase","getNowTicks","targetBase","buffer","rest","floor","str","maxlen","pml","ptt","squeeze","step","nextIndex","ch","random","getTime","safeParseInt","res","parseInt","getDaysInMonth","month","year","getDate","strToDateTime","format","normalizedValue","replace","normalizedFormat","formatItems","dateItems","monthIndex","dayIndex","yearIndex","hourIndex","minutesIndex","secondsIndex","today","getFullYear","getMonth","day","hour","minute","second","_a","strToTime","timeItems","HttpActionResult","request","promise","getPromise","getRequest","then","onfulfilled","onrejected","catch","onfinally","finally","HttpResponseError","Error","status","message","super","setPrototypeOf","prototype","HttpClient","responseBody","_responseBody","defaultHeaders","customPayload","options","send","Get","post","Post","put","Put","Delete","dataType","contentType","XHR","XMLHttpRequest","desc","beforeEachRequest","console","warn","onRequest","dataToSend","JSON","stringify","Promise","resolve","reject","responseType","onerror","error","responseText","onreadystatechange","responseContentType","getResponseHeader","responseObj","response","parse","onResponse","rtPromise","decodeArrayBuffer","uintArray","reader","FileReader","onloadend","DONE","readAsText","Blob","i18n","englishUSLocaleSettings","shortDateFormat","longDateFormat","editDateFormat","shortTimeFormat","editTimeFormat","longTimeFormat","shortMonthNames","longMonthNames","shortWeekDayNames","longWeekDayNames","decimalSeparator","currency","defaultLocale","localeId","englishName","displayName","texts","ButtonOK","ButtonCancel","Yes","No","True","False","settings","allLocales","currentLocale","mappers","mapInfo","info","mapper","addMapper","getLocales","locale","sort","a","b","getCurrentLocale","setLocale","l","setCurrentLocale","newLocale","getText","textsObj","resText","argLength","getLocaleSettings","getOneLocaleSetting","getShortMonthName","monthNum","getLongMonthName","getShortWeekDayName","dayNum","toString","getLongWeekDayName","updateLocaleSettings","settingsToUpdate","updateLocaleTexts","updateDefaultTexts","updateLocaleInfo","localeInfo","localeInfoToUpdate","addLocale","determineSettingsByLocale","now","dateOptions","timeOptions","dateStr","toLocaleDateString","timeStr","toLocaleTimeString","dateFormat","timeFormat","localeSettings","loadBrowserLocaleSettings","lang","navigator","language","resetLocales","DT_FORMAT_RGEX","dateTimeToStr","date","yearStr","getHours","getMinutes","getSeconds","hour12","isPm","matches","yyyy","yy","substring","MMMM","MMM","MM","M","dd","d","HH","H","hh","h","tt","mm","ss","match","$1","dateTimeToStrEx","dateTime","buildShortDateTimeFormat","buildLongDateTimeFormat","buildUniversalDateTimeFormat","numberToStr","num","type","charAt","formatWithSequence","slice","toLocaleString","getNumberFormatOptions","convertWithMask","trunc","booleanToStr","bool","cachedSequenceFormats","number","v","Number","forEach","mask","reverse","digits","style","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","MetaEntity","parent","isEditable","caption","description","attributes","subEntities","loadFromData","model","dto","captionPlural","namePlur","ied","ents","newEntity","createEntity","attrs","newAttr","createEntityAttr","scan","processAttribute","processEntity","opts","stop","internalProcessEntity","entity","attrCount","attr","subEntityCount","getFirstPrimaryAttr","getPrimaryAttrs","isPrimaryKey","MetaEntityAttr","size","isForeignKey","isNullable","showOnView","showOnCreate","showOnEdit","showInLookup","lookupAttr","expr","kind","Data","cptn","ipk","ifk","lattr","lookupEntity","lent","dataAttr","dattr","lookupDataAttr","ldattr","isDataType","defVal","nul","ivis","sov","soc","soe","sil","displayFormat","dfmt","udata","userData","edtr","defaultEditor","getEditorById","createValueEditor","ValueEditor","tag","resType","defValue","defval","rtype","accept","multiline","subType","getValueText","text","MetaData","mainEntity","rootEntity","displayFormats","Map","getMainEntity","loadFromJSON","stringJson","version","vers","editors","newEditor","entroot","dtypeStr","formats","getDisplayFormats","getDisplayFormatsForType","getDefaultFormat","f","isdef","setData","isEmpty","getId","getName","getRootEntity","editorId","editor","getAttributeById","attrId","getEntityAttrById","checkAttrProperty","attribute","listByEntityWithFilter","filterFunc","ent","entIdx","newEnt","items","isEntity","attrIdx","listByEntity","resultEntities","resultAttributes","newOpts","includeRootData","sortCheck","sortEntities","attrPlacement","concat","clear","addDefaultValueEditors","ve","addOrUpdateValueEditor","getEntitiesTree","getEntitiesTreeWithFilter","getFullEntityPathByAttr","sep","getEntityPathByAttr","root","entityCaption","entityText","getAttributeText","attrText","entityPath","RegExp","runThroughEntities","getFirstAttributeByFilter","AggregationSettings","colStore","aggregates","groups","useGrandTotals","useRecordCount","_caseSensitiveGroups","COUNT_FIELD_NAME","caseSensitiveGroups","updateCompareProc","compareValues","strictCompare","caseInsensitiveCompare","addGroup","cols","columns","getColumnIds","from","to","validateColumns","hasColumnsInUse","addAggregateColumn","colIndexOrId","funcId","colId","validateAggregate","addGrandTotals","addCounts","getGroups","mappedGrops","grp","getInternalGroups","lastGroup","getAggregates","hasAggregates","hasGroups","hasGrandTotals","hasRecordCount","isValid","drop","group","interCols","c","aggr","needAggrCalculation","saveToData","ugt","urc","csg","buildGroupKey","row","caseInsensitive","keyVal","getValue","value1","value2","val1","val2","ColumnAlignment","DataColumn","label","originAttrId","isAggr","groupFooterColumnTemplate","gfct","calculatedWidth","DataColumnList","_dateColumnIdx","count","add","colOrDesc","col","updateDateColumnIdx","getItems","move","newIndex","oldIndex","getIndex","getDateColumnIndexes","removeAt","removeDate","DataRow","toArray","colIdOrIndex","RangeError","setValue","EasyDataTable","_chunkSize","_elasticChunks","cachedRows","total","loader","needTotal","isInMemory","chunkSize","elasticChunks","inMemory","_columns","onUpdate","colDesc","rows","rowData","createRow","addRow","getRows","params","fromIndex","pageSize","page","offset","limit","endIndex","allChunksCached","resultPromise","loadChunk","apply","table","getCachedRows","getCachedCount","fireUpdated","getRow","getTotal","setTotal","dataOrRow","dateIdx","column","mapDate","rowOrValues","newRow","cachedTotal","totalIsKnown","EasyGuid","newGuid","r","EventEmitter","silentMode","events","subscribe","eventType","callback","event","getEventRecByType","eventCallback","eventCallbacks","unsubscribe","callbackId","fire","postpone","force","eventRec","eqevent","emitAllFunc","setTimeout","enterSilentMode","exitSilentMode","isSilent","liquid","renderLiquidTemplate","template","vars","liquidVarRegexp","x","NaN","ceil","FormatParser","formatStr","pos","exprNum","tokenText","skipSpaces","next","npos","token","npos1","npos2","getToken","LinkType","equtils","combinePath","path1","path2","strToLinkType","All","NotAll","Any","None","linkTypeToStr","parseOperatorFormat","operator","parser","convertValue","fromDataType","toDataType","resInt","resFloat","AggrFunction","sqlExpr","appliedTypes","aggrFunction","fmt","dtypes","getAppliedTypesOrDefault","BCD","EqValueEditor","sql","statement","extraParams","DataKind","Operator","constValueFormat","isRange","caseIns","paramCount","defaultOperand","Operand","operands","pcnt","defOperand","newOperand","Scalar","operand","defText","txt","copyFrom","src","Entity","useInConditions","useInResult","useInSorting","uic","uir","uis","EntityAttr","defaultOperator","operators","defOperator","ops","EqEditorTag","SqlList","SubQuery","BindToParentColumn","DataModel","nullAttribute","nullOperator","aggrFunctions","dateMacros","timeMacros","links","newOperator","aggrfuncs","newAggrFunc","getObject","getAttributeByIdSafe","_listByEntityWithFilter","_listByEntity","addUIC","addUIR","addUIS","addOrUpdateOperator","op","removeOperator","soft","getOperatorIdsByDataType","Guid","Bool","findAggrFunctionById","func","findLink","entityFrom","entityTo","link","getLinksByEntity","getFirstUICAttr","getFirstUICAttrInEntity","findOperatorById","operatorId","opCount","getOperatorById","getDefaultOperatorIdForAttr","getAggrFunctionCaption","funcTexts","funcCaption","getAggrFunctionFormat","funcFormat","getDefaultOperatorForAttr","getOperand","Query","getAggrFunctions","isDateMacro","macroExpr","macroProcessor","macroId","isTimeMacro","getDateMacroValue","setDate","setMonth","getDay","setFullYear","getDateOrMacroValue","getTimeMacroValue","setMinutes","setHours","getTimeOrMacroValue","time","t","getAllDateMacros","getAllTimeMacros","ExprTag","Expression","Constant","_value","distinct","_isDefaultValue","getParent","getModel","getQuery","Attribute","EntityAttribute","ParentEntityAttribute","query","subQuery","createSubQuery","loadFromDataOrJson","arg","baseAttrId","toJSONData","getExpressionIndex","silent","setContent","oldValue","expressionChanged","hasText","tryCopyValueFrom","QueryChangePart","QueryChangeAction","SortDirection","QueryColumn","_id","sorting","getColumnSorting","_sorting","direction","setColumnSorting","sortIndex","getColumnSortIndex","_sortIndex","setColumnSortIndex","justsorted","enabled","_isHidden","blockId","isReadOnly","isJustSorted","setReadOnly","isHidden","setHidden","getDataType","colData","srt","srtidx","groupFooterColumnTemlate","hidden","fireChangedEvent","part","SortingColumns","Columns","action","Modify","changee","CondTag","ConditionPart","Condition","_enabled","conditions","cond","linkType","justAdded","expressions","setParent","getConditions","isGroup","Group","getLevel","isParameterized","setParameterized","isInJoin","setInJoin","clearConditions","addCondition","removeConditionAt","Simple","disabled","exprs","newExpr","linking","condPart","Conditions","tuneOperatorForAttr","getOperatorId","setOperatorId","newOperatorId","oldOperatorId","tuneValueExpressions","oldAttrId","exprCount","oldOperator","oldOperand","valExpr","createValueExpr","oldExpr","areCompitableEditors","oldEditor","addExpressionByOperand","valueNotDefined","defAttr","Tree","childs","addChild","contains","child","findNode","setParents","InvalidQueryError","isModified","_isModified","resetModified","enableAggregation","_enableAggregation","processQueryForAggregation","AggregateFunction","aggrSettings","extraData","innerData","isNewbie","parentQuery","drillDowns","syncSortOrderWithColumnsOrder","context","eventEmitter","extraConditions","sortedColumns","regenerateId","setDefaultName","attributeExprTag","attrTag","clientListRequestHandler","serverListRequestHandler","timezoneOffset","getTimezoneOffset","addChangedCallback","ev","aggregation","updateAggregationSettings","Aggregation","hasChanged","getAggregationSettings","j","find","useAggregation","settingsTuner","useDefaultAggregation","aggrCols","colsToGroup","aggrsToAdd","changeColumnType","wasModified","colToAggr","getColumns","colToGroup","groupColIds","groupedCols","sortedCols","Ascending","colIds","enabledColIds","prevIndex","isEx","reset","clearQuery","hasEnabledAggrColumns","setName","validate","entityAttrNotExistError","wrongExprTag","validateConditionGroup","getAggregatedColumns","tryValidate","e","curCond","condition","checkExpressions","parsedVal","loadFromJson","json","changeStatus","noErrors","clearDrillDowns","conds","condData","createCondition","justsortcols","newCol","createColumn","addColumnToSorted","col1","col2","fixupSortingIndices","dds","addDrillDown","createQuery","getDrillDowns","getParentQuery","findColumnById","setModel","loadModelData","toJSON","modelId","modelName","rootCondToData","condGroup","extraConds","isEmptyConditions","isEmptyColumns","clearColumns","clearExtraConditions","setId","getDescription","setDescription","getUsedInTotalsColumns","aggrs","pop","colJson","isUnique","scol","qcolJson","getJustSortedColumns","getSortedColumns","colIdx","adjustColumnsSorting","getColumnById","addColumn","newColumn","attributeId","constValue","customSql","checkedOption","aggrFuncId","constType","CustomSql","allowCustomExpressions","getDefaultColumnCaption","readonly","fireColumnsChangedEvent","Add","addColumnObj","author","sqlText","customSqlExpr","moveColumn","removeColumn","addConditionGroup","addChildCondition","addExtraConditionGroup","addSimpleCondition","getRootCondition","createSimpleConditionObject","addSimpleExtraCondition","inputValues","attrCaption","attrExpr","valCount","valLength","removeColumns","columnsToRemove","justSortedColumns","removeFromArray","arrToRemove","ctrLen","fireProcessEvent","eventData","fireConditionsChangedEvent","runThroughConditions","processCondition","processGroup","predicate","getOneValueForAttr","opid","addProcessCallback","removeProcessCallback","removeChangedCallback","getConditionsText","getConditionGroupText","conjKey","conjText","condText","opId","plen","pi","macroText","getConditionsTextAsHtml","quoteExprText","getEntitiesInQuery","entities","addEntityByExpression","rootCond","fillEntitiesByCondtionGroup","buildQueryPath","tree","createTreeNodeFromEntity","subEnentity","BrowserQueryStorage","init","keyPrefix","queryListKey","queryKeyPrefix","getQueryList","itemsString","localStorage","getItem","err","newQuery","queryId","_saveQuery","loadQuery","queryItem","saveQuery","queryList","setItem","removeQuery","removeItem","EqModelLoader","modelPromise","getContext","createModelLoadingPromise","modelLoadingResolveFunc","modelLoadingRejectFunc","getModelPromise","startModelLoading","sendLoadModelRequest","EqServerModelLoader","http","getServices","getHttpClient","resolveEndpoint","responseData","EqServerDataFetcher","fetchData","fetchOptions","requestData","debug","chunk","aux","EqServerQuerySynchronizer","syncQuery","EqServerValueListResolver","loadValueList","listId","EqQueryFileLoader","getQueryFile","actionResult","blob","dispositionHeader","fileName","lastIndexOf","createElement","appendChild","display","href","URL","createObjectURL","download","click","revokeObjectURL","removeChild","uploadQueryFile","EqAggregatesContainer","levels","getAggregateData","level","groupKey","processFunc","keyStr","groupKeyToStr","getLevelDesc","receivedCallbacks","setAggregateData","updateAggregateData","createIfNotExists","DefaultAggregatesCalculator","getAggrContainer","calculate","maxLevel","aggrColId","resultObtained","needRecalculation","EqServiceProvider","getInstance","_instance","services","httpClient","modelResolver","_","modelStorageResolver","queryResolver","modelLoaderResolver","queryStorageResolver","querySynchronizerResolver","vllResolver","dataFetcherResolver","queryFileLoaderResolver","aggrCalculatoResolver","createDataModel","registerDataModelResolver","resolver","getDataModelResolver","registerQueryResolver","getQueryResolver","registerModelLoaderResolver","getModelLoaderResolver","registerModelStorageResolver","getModelStorageResolver","registerQueryStorageResolver","getQueryStorageResolver","registerDataFetcherResolver","getDataFetcherResolver","registerQuerySyncronizerResolver","getQuerySynchronizerResolver","registerValueListLoaderResolver","getValueListLoaderResolver","registerQueryFileLoaderResolver","getQueryFileLoaderResolver","registerAggregatesCalculator","getAggregatesCalculatorResolver","registerService","serviceId","serviceResolver","getService","WidgetGroup","EmptyChunk","EqServerExporter","setFormat","exportOptions","filename","EasyQueryDataLoader","dataLoadPromise","success","dataTable","dataLoader","resultTable","resultSet","meta","totalRecords","hasNext","debugMode","fetchDataChunk","EqActionResult","EqAction","EqContext","attributeFormat","columnTitleFormat","servicesInitialized","modelLoader","queryStorage","querySynchronizer","dataFetcher","valueListLoader","queryFileLoader","aggrCalculator","internalListCache","loadModelOnStart","loadQueryOnStart","useStoredQueryOnFetch","_backendInfo","endpointVarsRegex","elasticPaging","_predefinedListRequestHandlers","_DSDE","onResult","_DSTE","_listRequestHandler","listName","editorParams","reqParams","attrPattern","prop","paramValue","requestParams","list","getListFromCache","processed","predefinedHandler","addListToCache","baseEndpoint","eqServices","widgets","exporters","endpoints","onResultTableUpdate","bind","errorHandlerId","addEventListener","msgTitle","msgText","sourceError","getModelLoader","getModelStorage","modelStorage","getQueryStorage","getQuerySynchronizer","getDataFetcher","getValueListLoader","getQueryFileLoader","getAggregatesCalculator","aggrCalculatorResolver","useEnterprise","keyOrInitCallback","registerExporter","registerServerExporter","exporter","getExporter","getExportFormats","addDefaultExporters","endpointKey","opt","optVal","setEndpoint","setEndpointIfNotExist","setDefaultEndpoints","endpointBase","initStart","setOptions","listCache","setExternalListCache","endpoint","handlers","onInit","afterLoadModel","afterLoadQuery","afterSyncQuery","afterFetchData","afterExportResult","onProcessStart","onProcessEnd","onError","removeEventListener","onListRequest","beforeLoadModel","beforeLoadQuery","beforeSyncQuery","beforeFetchData","beforeExportResult","initialQuery","defaultQueryId","defaultModelId","useDefaultExporters","serverExporters","widget","widgetOptions","getWidgetType","loadDefaultModel","fireEvent","backendInfo","useEndpoint","useBackend","addWidget","getAllWidgetsByType","widgetType","getWidgetByType","refreshWidgets","belongsToGroup","refresh","addQueryChangedCallback","removeQueryChangedCallback","dataModel","loadModelFromData","modelPlainData","setDefaultModelId","startProcess","endProcess","throwError","loadModel","Model","throwReady","clearResult","resultStatement","resultContent","cache","externalListCache","getListCacheKey","resetListCache","getListRequestHandler","handler","handlerId","getBaseEndpoint","GetValueList","Result","valueListResolver","Success","errorMessage","LoadModel","callWhenModelLoaded","callFunc","LoadQuery","limitCustomSqlColumns","Properties","loadQueryList","startQueryListLoading","LoadQueryList","queryListLoadingPromise","queries","useStorage","onNewQuery","NewQuery","queryData","SaveQuery","RemoveQuery","SyncQuery","querySyncrhonizer","Statement","querySaved","q","QueryStatus","groupFetchSuccess","afterGroupFetch","GetQueryFile","UploadQueryFile","FetchData","calculator","errorOccurred","fetchDrillDownData","queryExecutor","exportResult","ExportResult","export","getAttributeTitle","getColumnTitle","ParentColumn","eqContextResolver","registerEqContextResolver","createEqContext","eqconsts","ConstLists","SpecDateValues","isDefault","SpecTimeValues","BooleanValues","constLists","predicateLinkTypeList","Widget","slot","refreshCore","onProcessStartCore","onProcessEndCore","destroy","destroyCore","addEasyQueryCoreTexts","NewQueryName","Today","Yesterday","Tomorrow","FirstDayOfMonth","LastDayOfMonth","FirstDayOfWeek","FirstDayOfYear","FirstDayOfNextWeek","FirstDayOfNextMonth","FirstDayOfNextYear","Now","HourStart","Midnight","Noon","Entities","Attributes","Operators","AggregateFunctions","browserUtils","_isFirefox","mobileModeChangeHandler","isIE","ua","userAgent","includes","isEdge","isFirefox","_detectedIsMobileMode","_isMobileMode","detectIsMobileMode","isMobileMode","matchMedia","newValue","setIsMobileMode","onMobileModeChanged","addElement","element","cssClass","className","addCssClass","hideElement","showElement","toggleVisibility","first","duration","complete","isVisible","offsetWidth","offsetHeight","createBrowserEvent","eventName","Event","createEvent","initEvent","getViewportSize","height","clientHeight","innerHeight","getScrollPos","docElem","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementAbsolutePos","y","position","defaultBoundingClientRect","right","bottom","box","getBoundingClientRect","scollPos","clientTop","clientLeft","round","getWinSize","slideDown","removeProperty","getComputedStyle","overflow","paddingTop","paddingBottom","marginTop","marginBottom","boxSizing","transitionProperty","transitionDuration","slideUp","eqCssPrefix","input","maskPattern","keyDownHandler","keyCode","preventDefault","mskd","startSelection","selectionStart","selection","onlyLodash","el","test","selectionEnd","dispatchEvent","keyPressHandler","char","fromCharCode","charCode","inputHandler","DomElementBuilder","parentElement","childBuilder","builder","domel","addChildElement","attrValue","setAttribute","focus","title","dataId","dataValue","removeAttribute","show","removeStyle","hide","toHide","setStyle","visible","getClientRects","addClass","classNames","fullList","classList","removeClass","remove","toggleClass","toggle","on","listener","eventTypes","off","styleId","styleValue","setProperty","innerText","html","innerHTML","oldElem","tagName","replaceWith","addText","textEl","createTextNode","addHtml","toDOM","appendTo","DomTextAreaElementBuilder","DomInputElementBuilder","valueAsDate","valueAsNumber","DomSelectElementBuilder","addOption","option","selected","HTMLDivElement","HTMLSpanElement","HTMLAnchorElement","HTMLButtonElement","HTMLImageElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","touchEventIsDefined","TouchEvent","DropEffect","EqDragEvent","dragImage","sourceEvent","dropEffect","Allow","pageX","pageY","MouseEvent","touches","Position","DragManager","delta","draggableItem","finishedSuccessfully","mouseDownPosition","containerDescriptors","containerDescriptorIndex","classPrefix","DRAG_DISABLED_ATTR","registerDraggableItem","ondragstart","detectDragging","hasAttribute","stopPropagation","cursorPosition","abs","startDragging","mouseMoveEventListener","mouseMoveDragListener","beforeDragStart","cloneNode","renderer","updateCusror","updateImageClass","scope","updateDragItemPosition","onDragStart","mouseDownListener","mouseUpListener","endDraggind","dropContDesc","container","scopes","onDrop","onDragLeave","onDragEnd","registerDropContainer","removeDropContainer","descriptorOrSlot","descs","detectDragEnterEvent","dragEnterEvent","detectDragLeaveEvent","dragLeaveEvent","onDragOver","setCursorStyle","Forbid","cursor","children","onDragEnter","containerPos","eqDragManager","AutoResizeColumns","DEFAULT_WIDTH_STRING","ROW_NUM_WIDTH","GridColumnAlign","MapAlignment","alignment","Left","LEFT","Center","CENTER","Right","RIGHT","NONE","GridColumn","grid","isRowNum","_label","_description","align","dataColumn","widthOptions","columnWidths","default","rowNumColumn","GridColumnList","columnList","sync","hasRowNumCol","rowNumCol","onSyncGridColumn","cssPrefix$1","DFMT_REGEX","CellRendererType","StringCellRendererDefault","cellValueElement","rowElement","NumberCellRendererDefault","strValue","DateTimeCellRendererDefault","isDate","call","BoolCellRendererDefault","GridCellRendererStore","renderers","defaultRenderers","registerRenderer","setDefaultRenderer","STRING","NUMBER","DATETIME","BOOL","getDefaultRenderer","columnType","cellType","getCellType","getDefaultRendererByType","rendererType","getRenderer","DEFAULT_ROW_HEIGHT","EasyGrid","cssPrefix","pagination","paginationOptions","maxButtonCount","useBootstrap","defaultDataGridOptions","fixHeightOnFirstRender","syncGridColumns","useRowNumeration","allowDragDrop","calculatorRef","paging","pageSizeItems","autoResize","Always","stringColumns","numberColumns","boolColumns","dateColumns","otherColumns","showPlusButton","viewportRowsCount","showActiveRow","rowsOnPagePromise","containerInitialHeight","firstRender","prevRowTotals","landingIndex","landingSlot","_activeRowIndex","mergeOptions","processColumnWidthsOptions","cellRendererStore","setSlot","aggrOptions","colWidthOptions","pagingOptions","knownTypes","getElementById","getElementsByClassName","onRowClick","onRowDbClick","onPlusButtonClick","onColumnChanged","onColumnDeleted","onColumnMoved","onPageChanged","onActiveRowChanged","activeRowIndex","showLandingSlot","hideLandingSlot","columnId","getData","clearDOM","render","hasData","rootDiv","renderHeader","headerDiv","renderBody","bodyDiv","renderFooter","footerDiv","gridContainer","needAutoResize","Never","updateHeight","resizeColumns","firstRow","bodyCellContainerDiv","firstElementChild","rowHeight","rowCount","viewportHeight","bodyViewportDiv","sbHeight","getContainerWidth","reduce","sum","current","headerViewportDiv","headerCellContainerDiv","headerRowDiv","hd","renderColumnHeader","renderHeaderButtons","containerWidth","colBuilder","colDiv","attrLabel","showAggrs","canShowAggregates","showProgress","getRowsToRender","hideProgress","rowsToRender","updateTotalsState","tr","renderRow","showGrandTotalsOnEachPage","isLastPage","onViewportKeydown","isLast","changeLevel","renderTotalsRow","applyGroupColumnTemplate","rowBuilder","colIndex","renderCell","aggrContainer","isLastGroupColumn","groupColIndex","aggrColIndex","groupFooterTemplate","cellDiv","innerCell","firstChild","querySelectorAll","ensureRowVisibility","rowOrIndex","getDataRow","rowRect","viewportRect","rowTop","rowBottom","windowHeight","footerPaginateDiv","renderPageNavigator","pageInfoBlock","renderPageInfoBlock","pageInfoDiv","fistPageRecordNum","lastPageRecordNum","totalStr","getLocalIndexByGlobal","getGlobalIndexByLocal","indexGlobal","rowIndex","colindex","cellElement","valueCell","cellRenderer","getCellRenderer","onGetCellRenderer","setPage","paginateDiv","totalRows","totalPages","distance","islandSize","buttonClickHandler","getAttribute","renderPaginationItem","pageIndex","content","extreme","active","li","newA","ul","userSelect","cell","allowPageSizeChange","selectChangeHandler","pageSizes","selectSize","sel","selOptions","selSet","Set","labelDiv","plusButtonTitle","colElems","rowElem","landingPos","newLandingIndex","colPos","insertBefore","updateActiveRow","activeRow","getActiveRow","visibility","sumWidth","headerCells","headerIdx","cellValues","maxWidth","whiteSpace","maxOption","minOption","Calendar","yearRange","currentDate","dateChanged","onDateChanged","DateTimePicker","calendar","timePicker","setDateTime","currentDateTime","setTime","getDateTime","showCalendar","createCalendar","showDateTimeInput","timePickerIsUsed","showTimePicker","oneClickDateSelection","dateTimeChanged","createTimePicker","onTimeChanged","anchor","beforeShow","onApply","cancel","onCancel","onDateTimeChanged","DefaultCalendar","daysOfWeek","months","calendarBody","isManualInputChanging","selectedMonth","selectedYear","rerenderMonth","renderManualDateInput","headerTextElem","renderCalendarButtons","getInputDateFormat","newDate","manualInputElem","jump","updateDisplayedDateValue","prev","selectMonthElem","selectYearElem","rerenderSelectYear","exec","minusYear","plusYear","firstDay","daysInMonth","dayOfWeek","onDrawDay","cellsDrawnInLastRow","cellsToDraw","TimePicker","currentTime","timeChanged","DefaultTimePicker","updateDisplayedTime","hoursInput","minutesInput","timeText","slidersBuilder","timeToDraw","DefaultDateTimePicker","sb","zIndex","renderButtons","globalMouseDownHandler","isOutside","nowButton","submitButton","calendarSlot","timePickerSlot","anchorPos","parentPos","DialogFooterAlignment","DefaultDialogService","openConfirm","closable","submitable","cancelable","onSubmit","openPrompt","submitOnEnter","arrangeParents","beforeOpen","processInput","dialog","DefaultDialog","onDestroy","dlg","untrack","track","createSet","DefaultDialogSet","openDialogs","openProgress","DefaultProgressDialog","getAllDialogs","closeAllDialogs","close","submitHandler","cancelHandler","keydownHandler","isActiveDialog","dialogId","windowElement","headerElement","alertElement","bodyElement","alignClass","footerAlignment","footerElement","bb","submitButtonText","recaptchaSiteKey","grecaptcha","ready","execute","cancelButtonText","getRootElement","getSubmitButtonElement","getCancelButtonElement","windowDiv","querySelector","clearAlert","onInput","onShow","submit","disableButtons","buttons","button","enableButtons","showAlert","reason","alert","elem","windowDivs","turnOn","contentElement","progressElement","determinated","updateContent","updateProgress","progress","in01","dialogService","currentDialog","currentIndex","getCurrent","openNext","openPrev","dlgOptions","addEasyDataUITexts","GridPageInfo","GridItemsPerPage","ButtonApply","ButtonNow","LblTotal","PRE_SELECT","JUMP_TO","findHighestZIndex","highest","zindex","defaultView","getPropertyValue","numZIndex","safeFocus","eqCssMobile","getMobileCssClass","EntitiesPanel","queryChangedCallbackId","panel","renderProgressBlock","syncWithColumns","refreshCheckedStateByColumns","showIndicatorOnLoad","progressBlock","parentNode","showToolbar","showSelectAllButton","showClearSelectionButton","showAddColumnButton","showAddConditionButton","showCheckboxes","showTooltips","draggableAttributes","showAttributes","showFilterBox","filterBoxMode","autoClearSelection","entityRenderedCallback","attributeRenderedCallback","edata","rootEntityBlock","entTree","entityTreeBlock","renderEntity","createFilterBox","createToolPanel","block","entityBlock","entityNode","entityChildren","nodeLabel","nodeInput","nodeToggleButton","attrNode","attrInput","currentOffset","isAttributeInTree","divElem","itemsLength","checkbox","currentTarget","checked","checkboxes","attrList","attrElems","filterBoxBlock","filterBoxInput","checkFilterAttribute","displayAttrCount","collapseAll","expandAll","defClass","toolPanelBlock","toolSelectAll","toolDeselectAll","toolAddColumns","toolAddCond","toolLeftBlock","toolRightBlock","selectAll","deselectAll","attrElements","self","attrElement","inputElem","labelElem","textContent","checkFilterText","filterText","exprColumns","entChildren","entElem","childNodes","nodeButtons","inputs","ColumnsEditMode","ConditionsEditMode","MenuLevel","applyItem","_applyItem","isFilteringMode","showSelected","parentMenu","menu","parentLevel","levelIndex","levelDiv","domWriteItemsId","menuId","itemRenderedCallback","itemDiv","activeItem","selectedItem","initialized","updated","renderContent","setItems","itemBgColor","colors","bgON","itemFgColor","fgON","itemFontFamily","itemStyle","fontFamily","itemFontSize","fontSize","multiselect","isSubQuery","baseDivBuilder","useDefaultStyles","border","baseDiv","hideButtons","applyDiv","applyBtn","borderBottom","padding","applyTextNode","cancelBtn","marginLeft","cancelText","hideMenu","searchBoxAlwaysShown","showSearchBoxAfter","searchDivBuilder","searchEditBoxBuilder","deactivateItem","renderItems","searchBox","moveActiveItemUp","moveActiveItemDown","openSubLevel","searchDiv","scrollDiv","tabIndex","overflowX","overflowY","scrollDivKeyDownHandler","which","getRootLevel","closeDiv","filteredItems","activateItem","menuItem","showSubLevel","subLevel","focusScrollDiv","turnCheckboxes","itemCheckbox","isItemSelected","setItemSelected","submitItems","selectedItems","allSubitemsAreFiltered","filterCallback","isItemDiv","isLevelDiv","getMenuItem","renderItemsWithoutFilter","activateOnMouseOver","itemFilterCallback","getItemFilterCallback","color","paddingLeft","paddingRight","cb","defaultChecked","margin","verticalAlign","itemText","showItemIds","itemTextNode","arrowSpan","arrowText","itemClickHandler","itemSelected","refreshCheckboxes","isCursorInside","renderItemsWithFilter","filterSections","pureFilterTexts","section","filterItems","renderItemWithFilter","matchesFilter","regexp","resultItems","restFilterSections","filterRegexp","groupItem","groupItemMatches","filterTexts","levelFilterText","highlightText","lowerText","lowerContent","insertValue1","insertValue2","startIndex","indexInMas","itemOverBgColor","bgOVER","itemOverFgColor","fgOVER","itemClassOver","backgroundColor","itemClass","levelId","scroll","winSize","leftSpace","rightSpace","offsetParent","showAt","adjustTopPos","levelBottom","initLevelDiv","levelStyle","maxHeight","useMaxSpace","anchorRect","anchorHeight","upperSpace","scrollY","lowerSpace","minOffset","levelDivRect","outsideBottom","outsideTop","scrollDivRect","minItemWidth","maxItemWidth","searchBoxAutoFocus","submitMenu","update","newItems","refreshItems","findItem","searchedText","PopupMenu","mouseIsOverBlock","mouseIsOverLink","toId","ancorFocused","adjustHeight","submitOnBlur","lastMenuID","updateProps","rootLevel","menuKeyUpHandler","stopImmediatePropagation","o","srcElement","menuLevel","shadow","commandTemplate","clearItemsMenuProps","clearItemMenuProps","setSelectedItems","selectedIds","showMenu","activeElement","itemSelectedCallback","menuClosedCallback","onMenuItemSelected","srcPos","anchorWidth","knockMenuStyle","hasUlStyle","DisplayFormatParser","s","getTokenText","ColumnAction","ColumnRendererCP","functionMenu","formatsMenu","buttonMenu","isMouseOverBlock","keepShowingButtons","columnEnabled","getButtonsToShow","sortingButton","renderSoringButton","replaceChild","createFunctionMenu","createFormatsMenu","createButtonMenu","isFullMode","editMode","Full","isReadOnlyMode","ReadOnly","getClassesToAdd","renderCheckbox","renderExpressionBlock","showColumnTitles","renderCaptionBlock","buttonsIndex","buttonsList","buttonsToShow","renderEnabledButton","renderColumnTypeButton","renderColumnFormatButton","renderDeleteButton","renderMenuButton","onMouseEnter","onMouseLeave","accentActiveColumn","onMouseClick","alwaysShowButtons","showButtons","activate","toggleColumnPicked","adjustButtonsVisibility","fireColumnChanged","inputEl","minWidth","isEndEvent","save","KeyboardEvent","FocusEvent","aEl","sortButtonCssClass","sortButtonDirectionCssClass","Descending","i18n$1","getUIS","sortMenu","moveMenu","getButtonMenuSelectedItems","Hidden","MoveTop","MoveDown","MoveUp","MoveBottom","SortingNone","SortingAsc","SortingDesc","buttonMenuHandler","leaveButtonBlock","evt","Menu","allowAggrColumns","changeTypeHandler","getFormatsMenuItems","allowDisplayFormatChange","changeFormatHandler","Enable","itemId","enterButtonBlock","isColumnActive","funcs","funcAllowed","colDataType","toInclude","columnsPanel","areCustomExpressionsAllowed","menuOptions","FixedList","curQuery","colMenu","processFormatsButtonMenuItems","processExtraButtonMenuItems","Appearance","allowHiddenColumns","sortItems","allowSorting","getSortMenuList","getMoveMenuList","extra","getExtraButtonMenuItems","arrSelected","formatId","AttrColumnRendererCP","renderBaseExpression","baseAttr","log","showEntitiesMenu","baseExpressionItemSelectedCallback","attrid","updateBaseAttr","changeTypeToCustomSql","newElement","changeTypeToAggr","AggrFuncColumnRendererCP","arguments","displayFormatParser","exprBlockBuilder","arrFormat","parseDisplayFormat","functionLink","changeTypeToSimple","EditableColumnRendererCP","dataTypeMenu","exprBlock","getColumnValue","colVal","setColumnValue","createDataTypeMenu","dataTypeLink","typeItem","CustomSqlColumnRendererCP","getDefaultValue","ConstColumnRendererCP","ColumnsPanel","activeColumn","showAddRow","showHeader","allowDuplicates","attrElementFormat","titleElementFormat","columnRenderedCallback","customExpressionText","showAddAllForEntity","detachQueryObserver","attachQueryObserver","moveColumnCore","addNewColumn","renderBaseElements","minusHeight","headerBuilder","columnsBlock","addRowElement","ids","queryEventCallbackId","focusedBefore","isFocusInside","modifyColumn","colEl","getColumnRenderer","newEl","focusElem","agjustHeaderVisibility","addColumnElement","deleteColumn","nextSibling","previousSibling","focusCond","rowElems","absPos","scrollIntoView","behavior","createEntitiesMenu","createColumnMenus","renderColumn","isActive","newColBlock","scrollToBottom","scrollHeight","checkColumnsArray","checkColumn","getColumnsBlock","addAllColumnsToEntitiesList","attrIds","unshift","entitiesList","adjustEntitiesMenuHeight","entitiesMenu","createSortMenu","createMoveMenu","colToMove","ColumnRendererCB","tapedTwice","bar","isDraggable","renderSortingImage","renderButtonsBlock","showDelete","showType","renderSortingButton","tapHandler","isFocused","isCtrlEnter","ctrlKey","metaKey","clickEvent","buttonSortingClickHandler","strToSortDirection","buttonDeleteClickHandler","buttonTypeClickHandler","changeColumnTypeHandler","buttonFormatClickHandler","formatButtonIsShown","onHideButtonsMobile","onShowButtonsMobile","AttrColumnRendererCB","AggrFuncColumnRendererCB","EditableColumnRendererCB","CustomSqlColumnRendererCB","ConstColumnRendererCB","ColumnsBar","customQuery","sortMenuList","moveMenuList","addRowButton","elements","columnSlots","colSlot","colWidth","colHeight","paddingWidth","paddingHeight","renderAddRowButton","renderColumnButtonsBlockMobile","columnButtonsBlockMobileArrow","columnButtonsBlockMobile","buttonsBlockSortingButton","currentColumnRenderer","hideColumnButtonsMobile","buttonsBlockTypeButton","buttonsBlockFormatButton","buttonsBlockDeleteButton","showColumnButtonsMobile","columnRenderer","columnElement","currentActiveColumn","rect","offsetTop","offsetLeft","columnSlot","globalCounter","ColumnRendererSB","getArrow","sd","SortingBar","QPEditablePart","TextRenderer","ConditionAction","ConditionRenderer","autoAppear","coreRender","onConditionRendered","isFixed","SimpleConditionRenderer","renderConjunction","mayAppear","minLength","getOperatorRenderer","toAppear","exprRenderer","getExpressionRenderer","adjustWidth","accentActiveCondition","toggleConditionPicked","buttonsBlock","setConditionParameterized","setConditionInJoin","getConditionMenu","isFirstConditionInGroup","showConjunctions","linkTypeStr","conjuctionText","isConditionActive","alwaysShowButtonsInConditions","conditionMenuHandler","AddCondition","entMenu","getEntitiesMenu","descr","AddGroup","condMenu","getConditionMenuSelectedItems","Parameterized","InJoin","editableParts","Removal","Addition","onButtonMouseEnter","onButtonMouseLeave","showAddGroupBtn","DomDropDownElementBuilder","appear","onGetMenu","_onGetMenu","onItemSelected","_onItemSelected","dropdown","ConditionGroupRenderer","isRoot","renderGroupRow","renderConditions","showRootRow","ConditionGroupRowRenderer","getConditionRenderer","buildGroupElements","getGroupTitle","groupTitle","curType","getLinkTypeMenu","getConditionGroupMenu","alwaysShowButtonsInGroups","BaseElementRenderer","isEditMode","labelElement","renderLabelElement","renderEditor","showEditor","displayedText","getLabelText","getEmptyText","ExpressionRenderer","expression","valueEditor","onExpressionRendered","emptyTextValue","Value","validateInput","showValidationError","isEmptyValue","InputExpressionRenderer","inputBuilder","dontProcessBlur","validationResult","inputElement","closeEditor","MIN_WIDTH","inputValue","validateListInput","validateScalarInput","ListExpressionRenderer","menuItemsList","showWhenReady","adjustNewValue","emptyTextList","getListName","fillMenuItemsList","renderMenuBlock","showLoader","hideLoader","getValuesAsArray","selLength","multiSelect","queryPanel","menuContainer","showIdsForListItems","onComplete","takeDefaultValue","itemLen","CustomListExpressionRenderer","isLoading","onClickTemp","loaderElement","listRequestHandler","SqlListExpressionRenderer","AttributeExpressionRenderer","attrObj","attrFormat","emptyTextAttribute","elWidth","parWidth","DropDownRenderer","getMenu","AddRowRenderer","OperatorRenderer","isRelatedToSubQuery","operId","related","emptyTextOperator","DateTimeExpressionRenderer","dtp","internalDateFormat","internalTimeFormat","pickerOptions","convertToInternalFormat","dateTimePickerResolver","convertFromInternalFormat","dateTimeStr","defautValue","SubQueryExpressionRenderer","dialogBlockBody","renderColumnBlock","renderQueryPanelBlock","exprType","colEntitiesList","colEntitiesMenu","columnBlock","setResultAttributeId","parentEl","subQueryPanelBlock","qpId","parentPanel","subOptions","entitiesListFilter","listItems","listOptions","subQueryPanelListOptions","subQueryPanel","clonePanel","rootCondEl","minHeight","subQueryDialogWidth","BindToParentColumnExpressionRenderer","attrDataType","QueryPanel","activeCondition","entitiesPopupHandler","allowParameterization","allowInJoinConditions","showPoweredBy","activateRootOnStart","subQueryDialogHeight","dialogZIndex","numberListSeparators","autoEditNewCondition","onGetConditionRenderer","onGetExpressionRenderer","onGetOperatorRenderer","onOperatorRendered","onGetAddRowRenderer","defaultQuery","Default","convertEditModelToEditableParts","hideLangindSlot","FixedConditionList","conditionMenu","linkTypeMenu","rootGroupMenu","groupMenu","modifyCondition","autoEdit","newCondContainer","lastChild","deleteCondition","dateFormatValue","dateFormatDisplay","createConditionMenus","createLinkTypeMenu","rootContainer","addrowRenderer","getAddRowRenderer","attributeMenu","typeList","itemList","FilterBar","applyOnClose","showApplyButton","showClearButton","headerClickListener","headerClickHandler","qpElement","applyBtnClick","applyFilter","clearBtnClick","clearFilter","showQueryPanel","qpBlock","updateHeader","hideQueryPanel","headerTextElement","headerLinkElement","headerArrowBlock","headerArrowElement","textResize","headerIconElement","headerTextBlock","applyFilterCallback","Grid","useCustomLocaleSettings","beforeTableRendering","applyDisplayFormats","EasyGridWidget","hasCustomTotalsSettings","autoRefresh","_b","gridOptions","resultGrid","easyGrid","addColumnClickHandler","columnMovedHandler","updateTotalsSettings","StatementPanel","statementText","ProcessWidget","FacetType","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","rejected","done","SuppressedError","suppressed","ResultFacet","dialogTitle","canDisplayFlag","downloadAllClickHandler","nextChunkStart","recordsToLoad","ds","getDialogService","loadedRecords","loadElasticChunk","contentDiv","displayMessageDiv","showSettingsDialog","renderDialogContent","submited","submitSettingsDialog","afterDialogOpened","fieldsContainer","renderFormFields","form","cont","tabNameInput","canDisplay","showErrorMessage","showUnableDisplayMessage","hideUnableDisplayMessage","getType","onResize","ChartType","ChartWidget","slotElement","chartType","Pie","supportedChartTypes","potentialLabelColumns","potentialDataColumns","labelColumn","dataColumns","showOnPaging","hideSettings","legend","hasColumnsForChart","prepareChartData","getSupportedChartTypes","getOptions","getChartTypeName","ct","Area","Bar","Column","Combo","Doughnut","Polar","Radar","Histogram","Line","SteppedLine","updateSettings","updateColumns","showLegend","updateChartColumns","colNum","colType","colLabel","initChart","chartTypes","hasChartTypes","getCurrentChartType","mainDiv","canDraw","chartTypeSelector","sopt","ctkey","settingsDiv","chartDiv","initSettingsDiv","chartSettingsBtn","toggleSettings","drawChart","addContentDiv","delay","drawCore","settingsHeader","labelColumnSelectorCaption","labelColumnSelector","dataDiv","dataColumnSelectorCaption","dataColumnSelector","getPotentialLabelColumns","getPotentialDataColumns","getLabelColumnIndex","getDataColumnIndex","ChartJsWidget","chartLabels","chartColumns","hasChartJs","Chart","config","generateConfig","chartCanvas","getChartCanvas","chartContext","canvases","dataColors","datasetName","fillValue","borderColor","dataset1","fill","stepped","steppedLine","displayLegend","getChartType","datasets","labels","GoogleChartWidget","hasGoogleCharts","google","charts","googleDataView","visualization","DataView","convertToGoogleFormat","convertToGoogleType","convertToGoogleValue","googleTable","DataTable","addRows","setCell","chartOptions","chartArea","getChartAreaWidth","pieHole","chart","createChart","draw","setColumns","ColumnChart","BarChart","ComboChart","AreaChart","LineChart","SteppedAreaChart","PieChart","ChartFacet","horizClass","showLegendInput","getSettings","labelCol","dataCol","showLeg","AggrFunc","FormFieldType","PivotTableFacet","pivotTable","maxRowCount","defaultRenderer","rowEl","totalsRow","isFirst","PivotTable","createAggrFuncSelectBuilder","aggrFunc","csb","aggrfunc","createColumnsSelectBuilder","allowedTypes","colName","formFieldType","getContextDataTable","firstNumericColIndex","optionIndex","ColumnField","RowField","CellData","totalsCol","colTypes","fieldTypes","colSelect","rowSelect","tmp","rowName","fieldName","validateSelectedField","aggrSelector","Count","Average","updatePivotData","dataSize","maxRow","rowIdx","fieldIdx","columnField","columnCol","columnRow","rowLabel","rowType","colValues","rowValues","colValue","rowValue","null_columns","colFieldFormatter","formatNumber","formatDate","new_rows","calcAggrFunc","totalByRow","Min","Max","total_row","totalByCol","Sum","average","fieldValue","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","DataTableFacet","reinitGrid","gridResolver","addColumns","totals","DataGrid","FacetContainer","facets","facet","createFacetTab","ExportDialog","defFormat","ResultFacetsPanel","activeFacetIndex","showExportButton","showRefreshButton","showMaximizeButton","maximize2Window","showProcessIndicator","facetTypes","menuItems","menuItemsFilter","renderProcessBlock","loadFacets","reloadFacets","createAddMenu","validateAddFacetButton","renderActiveFacet","updateTotalRecords","addMenu","recordsDiv","exportDiv","_processBlock","tabsDiv","tabsUl","renderFacet","addFacetButton","addClickHandler","manageDiv","bdb","exportHandler","refreshHandler","maximizeButton","maximizeHandler","toWindow","isMaximized","arrToHide","facetTab","renderFacetTab","renderFacetSlot","settingsClickHandler","closeClickHandler","selectClickHandler","refreshFacetTabs","removeFacet","facetSlot","saveFacets","setActiveFacet","confirmed","createDefaultFacetIfNotExist","isActivate","Facets","Activate","fd","ExportWidget","enableExport","clickHandler","AggrSettingsRenderer","selectState","funcMap","onChanged","dropSelectState","dropState","setInitialState","changed","state","grandTotals","recordCount","getAvailableColumns","renderCore","slotb","currentGroup","groupBlockColumns","selectedBlockColumns","groupCounter","getGroupForColumn","groupBlock","aggrBlock","removeAggrBtnClickHandler","selectedBlock","buttonsContainer","groupBtnClickHandler","aggrBtnClickHandler","countsCheckboxChangeHandler","grandCheckboxChangeHandler","removeGroupBtnClickHandler","validateCheckboxes","prevElement","prevInputEl","nextInputEl","selector","selectedCols","hasSelected","hasAggrs","hasTotals","hasCounts","getValidationMessage","hasRecCount","isTaken","colCheckboxChangeHandler","getGroupIndexForColumn","findIndex","g1","g2","g1Index","g2Index","btn","AggrSettingsDialog","initQuery","enableAggrCheckBoxChangeHandler","closest","AggregationBar","linkClickCallback","getLinkText","groupArr","colNames","groupString","aggrArr","aggrString","mobClass","dialogLink","LocaleWidget","changeLocale","selectEl","locales","optionEl","displayLocaleName","QueryNameWidget","nameTemplate","nameSlot","asteriskSlot","tooltipSlot","queryName","queryDescription","View","domRoots","defaultViewOptions","disableConfirmationOnQueryChange","queryFileExtensions","clearResultOnQueryChange","showChart","viewOptions","resultOptions","resetContext","renderSpinner","shadowRoots","initOptions","initWidgets","initDone","exportWidget","entitiesPanel","resultPanel","columnsBar","sortingBar","filterBar","processBar","statementPanel","queryNameLabel","facetsPanel","resultCount","exportButton","aggregationBar","slots","resultCountSpan","exportButtons","epElement","resolveElement","entitiesPanelWidget","createEntitiesPanelWidget","cpElement","columnsPanelWidget","createColumnsPanelWidget","cbElement","columnsBarWidget","createColumnsBarWidget","queryPanelWidget","createQueryPanelWidget","resultPanelSlot","resultGridWidget","gridPanel","createResultGridWidget","chartWidget","chartPanel","createChartWidget","qnElement","queryNameWidget","createQueryNameWidget","fbElement","filterBarWidget","createFilterBarWidget","sbElement","sortingBarWidget","createSortingBarWidget","pbElement","processWidget","createProcessWidget","stElement","statementPanelWidget","createStatementPanelWidget","clElement","createLocaleWidget","fpElement","resultFacetPanelWidget","createResultFacetsPanel","ewElement","createExportWidget","resultCountSlot","aggrbElement","aggregationBarWidget","createAggregationBarWidget","elementOrId","domRoot","resolveElementsByClassName","elemList","displayRecordsCount","setDialogService","executeQuery","fetchEmptyQueries","showResultSpinner","hideResultSpinner","toggleExportButtons","enableExportButtons","disableExportButtons","_spinnerDiv","chartWidgetResolver","resultGridResolver","detach","localeWidget","statementWidget","AdvancedSearchView","disabledClass","dropdownContainerClass","dropdownButtonClass","dropdownContentClass","dropdownShowClass","_querySaveTemplate","queryListMenu","fetchDataButtonClickHandler","fetchDataButtonClick","clearQueryButtonClickHandler","clearQueryButtonClick","newQueryButtonClickHandler","newQueryButtonClick","loadQueryButtonClickHandler","loadQueryButtonClick","saveQueryButtonClickHandler","saveQueryButtonClick","copyQueryButtonClickHandler","copyQueryButtonClick","removeQueryButtonClickHandler","removeQueryButtonClick","storageButtonClickHandler","storageDropButtonClick","saveQueryToFileButtonClickHandler","saveQueryToFileButtonClick","loadQueryFromFileButtonClickHandler","loadQueryFromFileButtonClick","exportButtonClickHandler","queryChangedHandler","syncQueryOnChange","fetchDataOnChange","ExtraData","outsideClickHandler","currentContent","dropdowns","openDropdown","refreshQueryList","queryListPanel","checkIfQueryModified","exportClass","clearQueryButtonId","newQueryButtonId","loadQueryButtonId","saveQueryButtonId","copyQueryButtonId","removeQueryButtonId","storageButtonId","fetchDataButtonId","loadQueryFromFileButtonId","saveQueryToFileButtonId","queryListPanelId","fetchDataButton","clearQueryButton","newQueryButton","loadQueryButton","saveQueryButton","copyQueryButton","removeQueryButton","storageButton","loadQueryFromFileButton","saveQueryToFileButton","elems","hideExportButtons","storageDropButton","loadQueryFromFileInput","loadQueryFromFileInputSelect","showQueryClearDialog","createNewQuery","saveCurrentQuery","copyQuery","showSaveQueryDialog","newQueryName","checkSaveQueryName","found","showQueryChangedDialog","removeCurrentQuery","showNewQueryDialog","processEl","showRemoveQueryDialog","showSaveQueryToFileDialog","renderSaveToFileDialogBody","fileNameInput","formatSelector","fieldsClass","showLoadQueryFromFileDialog","files","file","FormData","append","fillLoadQueryButtonMenu","DataFilterView","applyQueryFilter","addOldEasyQueryUIMapper","addEasyQueryUITexts","AltMenuAttribute","AltMenuConstantExpression","ButtonClose","ButtonNext","ButtonPrev","MenuEnable","MenuParameterization","MenuJoinCond","CmdClear","CmdDelete","CmdToggleEnable","CmdToggleEnableCustom","CmdAddCondition","CmdAddCondGroup","ButtonSelectAll","ButtonDeselectAll","ButtonAddColumns","ButtonAddConditions","CmdClickToAddCondition","CmdDeleteRow","ErrIncorrectGroupTitleFormat","ErrNotNumber","ErrIncorrectInteger","ErrIncorrectNumberList","LinkTypeAll","LinkTypeAny","LinkTypeNone","LinkTypeNotAll","ConjAll","ConjAny","ConjNotAll","ConjNone","MsgApplySelection","MsgAs","MsgEmptyList","MsgEmptyListValue","MsgEmptyScalarValue","MsgSubQueryValue","MsgEmptyAttrValue","MsgEmptyOperator","MsgEmptyCustomSql","MsgCustomSql","MsgNoResult","MsgResultCount","MsgOf","ConditionGroupTitle","RootConditionGroupTitle","StrAddConditions","SubQueryDialogTitle","SubQueryColumnTitle","SubQueryEmptyColumn","SubQueryQueryPanelCaption","ButtonSorting","ButtonToAggr","ButtonToSimple","ButtonFormat","CmdAscending","CmdClickToAddColumn","CmdDeleteColumn","CmdDeleteSorting","CmdDescending","CmdGroupAppearance","CmdGroupSort","CmdGroupFormat","CmdNotSorted","ColTypeAggrFunc","ColTypeCompound","ColTypeGroup","ColTypeSimple","HeaderExpression","HeaderSorting","HeaderTitle","SortHeaderColumn","SortHeaderSorting","StrAddColumns","CustomExpression","AddAllForEntityText","CmdMoveToStart","CmdMoveRight","CmdMoveLeft","CmdMoveToEnd","CmdMoveUp","CmdMoveDown","ButtonMenu","CmdToSimple","CmdMoveToFirst","CmdMoveToPrev","CmdMoveToNext","CmdMoveToLast","CmdHiddenColumn","RowButtonTitle","EntityToggle","StrNoFilterDefined","StrNoFilterClickToAdd","HintHours","HintMinutes","RemoveQueryTitle","RemoveQueryContent","NewQueryTitle","NewQueryContent","NewQueryDefName","SaveQueryTitle","SaveQueryContent","SaveQueryDefName","QueryChangedTitle","QueryChangedContent","QueryClearContent","UpdateQuerySelector","FileNameLabel","SaveQueryToFileDlgTitle","NewReportDefName","NewReportDlgTitle","SaveReportDlgTitle","SaveReportDlgLabel","ReportDescLabel","RemoveReportDlgTitle","RemoveReportContent","TotalRecordsLabel","AddMenuItems","Pivot","LoadDataDlgTitle","LoadDataDlgContent","RefreshBtnTitle","ExportBtnTitle","MaximizeBtnTitle","RestoreBtnTitle","RemoveFacetDlgTitle","RemoveFacetDlgContent","DefaultDlgTitle","DefaultFacetTitle","NewFacetTitle","TabNameLabel","ErrQueryChanged","ErrNotEnoughData","ErrTooMuchData","FacetTitle","DlgTitle","DataColumnSelectorLabel","LabelColumnSelectorLabel","ChartTypeSelectorLabel","ShowLegendLabel","SwapBtnTitle","ColumnFieldSelectorLabel","RowFieldSelectorLabel","CellDataSelectorLabel","TotalsRowLabel","TotalsColLabel","TotalGridLabel","TotalsDlgLabel","GrandTotalsLabel","TotalsDlgTitle","ExportDlgTitle","ExportDlgFmtLabel","csv","excel","pdf","AggrSettings","GroupBtn","UngroupBtn","AggrBtn","UnaggrBtn","GroupCountsLabel","AggrDialogTitle","EnableAggrLabel","SelectedError","NoGroupsOrAggrError","NoGroupsOrGrandError","NoAggrOrCountError","NoGroupsLabel","NoAggrsLabel","EmptySettingsLabel","Element","msMatchesSelector","webkitMatchesSelector","TypeError","majVer","minVer","magics","lcv","__kt","versionNum","ck","part1","infoBytes","_bs","part2","ism","magic","edc","t36","encChar","eds","f36","ed","binary_string","urlatob","bytes","Uint8Array","charCodeAt","atob","tokens","pow","ConditionEx","readOnly","parameterized","inJoin","newCond","QueryColumnEx","QueryEx","lType","path","findPath","addPathToTree","pathAdded","newNode","node","curPath","curStep","nextStep","passedEntities","pathFound","checkPath","endPoint","entityLinks","entity2","newPath","EqServerQueryStorage","delete","DataModelEx","DataTableAggregatesCalculator","levelsTotals","prevRow","initObjects","aggrColIds","createColumnAggregatesObject","MAX_VALUE","MIN_VALUE","levelNumber","levelTotals","resetLevelTotals","allRows","processDataRow","flushLevelTotals","rowTotals","aggrCol","levelIndexChanged","checkLevelChange","updateLevelTotals","groupIndex","prevValue","groupTotals","columnTotals","applyAggrFunc","strIsEmpty","baseLicApiUrl","eqVersion","LCDialog","dialogSet","buildStartPage","validateForm","startPageOnSubmit","buildCodePage","codePageOnSubmit","buildSuccessPage","buildFailurePage","dialog1","emailInput","isValidForm","codeInput","addInputField","parentBuilder","inputOptions","required","controlsPanelBuilder","formBuilder","outerHTML","nameInput","authEmail","authName","email","ptag","apptype","authCode","showNoLicenseAlert","lcd","buttonTitle","buttonUrl","footer","location","EnterpriseEqContext","createTrialWM","showTrialWM","hideTrialWM","backendType","appType","trialDiv","textAlign","opacity","font","transition","eq","lineHeight","korzh","trialOnly","fontWeight","trialDivElement"],"sources":["node_modules/@easydata/core/dist/easydata.core.esm.js","node_modules/@easyquery/core/dist/easyquery.core.esm.js","node_modules/@easydata/ui/dist/easydata.ui.esm.js","node_modules/@easyquery/ui/dist/easyquery.ui.esm.js","node_modules/@easyquery/enterprise/dist/easyquery.enterprise.esm.js"],"sourcesContent":["\n/*\n * EasyData.JS Core v1.5.8\n * Build time: 4/15/2025, 12:15:54 AM\n * Copyright 2020-2025 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nconst EditorTag = {\n    /** Unknown tag value */\n    Unknown: \"Unknown\",\n    /** Edit tag value */\n    Edit: \"EDIT\",\n    /** DateTime tag value  */\n    DateTime: \"DATETIME\",\n    /** List tag value */\n    List: \"LIST\",\n    /** CustomList tag value */\n    CustomList: \"CUSTOMLIST\",\n    /** File tag value */\n    File: \"FILE\"\n};\n\n/**\n * Represents a date/time value that can return either a date itself or a special date name\n */\nclass TimeValue {\n    constructor(dt) {\n        if (dt instanceof Date) {\n            this.date = dt;\n        }\n        else {\n            this._name = dt;\n        }\n    }\n    asTime(settings) {\n        if (this.date) {\n            return this.date;\n        }\n        else {\n            specialDatesResolver.getDateByName(this._name);\n        }\n    }\n    get name() {\n        return this.name;\n    }\n}\nclass SpecialDatesResolver {\n    getDateByName(name, settings) {\n        if (this[name]) {\n            return this[name](settings);\n        }\n        else {\n            return undefined;\n        }\n    }\n    Today(settings) {\n        return new Date();\n    }\n    Yesterday(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() - 1);\n        return d;\n    }\n    Tomorrow(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() + 1);\n        return d;\n    }\n    FirstDayOfMonth(settings) {\n        let d = new Date();\n        d.setDate(1);\n        return d;\n    }\n    LastDayOfMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 0);\n        return d;\n    }\n    FirstDayOfNextMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 1);\n        return d;\n    }\n    FirstDayOfPrevMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() - 1, 1);\n        return d;\n    }\n    FirstDayOfYear(settings) {\n        const d = new Date();\n        d.setMonth(0, 1);\n        return d;\n    }\n    FirstDayOfPrevYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() - 1, 0, 1);\n        return d;\n    }\n    FirstDayOfNextYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() + 1, 0, 1);\n        return d;\n    }\n    FirstDayOfWeek(settings) {\n        const d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfPrevWeek(settings) {\n        let d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfNextWeek(settings) {\n        let d = new Date();\n        var day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() + day);\n        return d;\n    }\n}\nvar specialDatesResolver = new SpecialDatesResolver();\nfunction registerSpecialDatesResolver(resolver) {\n    specialDatesResolver = resolver;\n}\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nclass HttpRequest {\n    constructor(xhr, descriptor) {\n        this.xhr = xhr;\n        this.method = descriptor.method;\n        this.url = descriptor.url;\n        this.headers = descriptor.headers;\n        this.queryParams = descriptor.queryParams;\n        this.data = descriptor.data;\n    }\n    setHeader(name, value) {\n        this.headers[name] = value;\n    }\n    setQueryParam(name, value) {\n        this.queryParams[name] = value;\n    }\n    getXMLHttpRequest() {\n        return this.xhr;\n    }\n    getResponseHeaders() {\n        if (this.xhr.readyState == this.xhr.HEADERS_RECEIVED) {\n            const headers = this.xhr.getAllResponseHeaders();\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            // Create a map of header names to values\n            const headerMap = {};\n            for (const line of arr) {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n                headerMap[header] = value;\n            }\n            return headerMap;\n        }\n        return {};\n    }\n    open() {\n        if (this.xhr.readyState !== this.xhr.UNSENT)\n            return;\n        let url = this.url;\n        if (this.queryParams && Object.keys(this.queryParams).length > 0) {\n            url += encodeURI('?' + Object.keys(this.queryParams)\n                .map(param => param + '=' + this.queryParams[param])\n                .join('&'));\n        }\n        this.xhr.open(this.method, url, true);\n        this.xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        for (const header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header]);\n        }\n    }\n    abort() {\n        this.xhr.abort();\n    }\n}\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        if (!target) {\n            target = {};\n        }\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source && source.hasOwnProperty) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source && source.hasOwnProperty) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        //we don't make a deep copy of HTML elements and any other property marked as a 'reference' (ends with 'Ref')\n                        if (sourceVal !== null && typeof sourceVal === 'object'\n                            && !key.endsWith('Ref') && !(sourceVal instanceof HTMLElement)) {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part\n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\nclass HttpActionResult {\n    constructor(request, promise) {\n        this.request = request;\n        this.promise = promise;\n    }\n    getPromise() {\n        return this.promise;\n    }\n    getRequest() {\n        return this.request;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n}\n\nclass HttpResponseError extends Error {\n    constructor(status, message) {\n        super(message);\n        Object.setPrototypeOf(this, HttpResponseError.prototype);\n        this.status = status;\n    }\n}\nclass HttpClient {\n    /** Gets the response body for the latest request  */\n    get responseBody() {\n        return this._responseBody;\n    }\n    constructor() {\n        this.defaultHeaders = {};\n        this.customPayload = undefined;\n    }\n    get(url, options) {\n        return this.send(HttpMethod.Get, url, null, options);\n    }\n    post(url, data, options) {\n        return this.send(HttpMethod.Post, url, data, options);\n    }\n    put(url, data, options) {\n        return this.send(HttpMethod.Put, url, data, options);\n    }\n    delete(url, data, options) {\n        return this.send(HttpMethod.Delete, url, data, options);\n    }\n    send(method, url, data, options) {\n        options = options || {};\n        const dataType = options.dataType || 'json';\n        const contentType = options.contentType || (dataType !== 'form-data')\n            ? 'application/json'\n            : null;\n        if (data && dataType != 'form-data' && this.customPayload) {\n            data.data = utils.assignDeep(data.data || {}, this.customPayload);\n        }\n        const XHR = ('onload' in new XMLHttpRequest())\n            ? XMLHttpRequest\n            : window[\"XDomainRequest\"]; //IE support\n        const xhr = new XHR();\n        const desc = {\n            method: method,\n            url: url,\n            headers: Object.assign(Object.assign({}, this.defaultHeaders), options.headers || {}),\n            queryParams: options.queryParams || {},\n            data: data\n        };\n        if (contentType)\n            desc.headers['Content-Type'] = contentType;\n        const request = new HttpRequest(xhr, desc);\n        if (this.beforeEachRequest) {\n            console.warn(`HttpClient: 'beforeEachRequest' is deprecated and will be removed in future updates.\r\n            Use 'onRequest' instead`);\n            this.beforeEachRequest(request);\n        }\n        if (this.onRequest) {\n            this.onRequest(request);\n        }\n        const dataToSend = (request.data && typeof request.data !== 'string'\n            && dataType == 'json')\n            ? JSON.stringify(request.data)\n            : request.data;\n        request.open();\n        return new HttpActionResult(request, new Promise((resolve, reject) => {\n            if (options.responseType)\n                xhr.responseType = options.responseType;\n            xhr.onerror = (error) => {\n                reject(new HttpResponseError(xhr.status, xhr.responseText));\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState != 4)\n                    return; //we process only the state change to DONE(4)\n                const responseContentType = xhr.getResponseHeader('Content-Type') || '';\n                const status = xhr.status;\n                if (status === 0) {\n                    reject(new HttpResponseError(status, \"Network error or the request was aborted\"));\n                }\n                else if (status >= 200 && status < 400) {\n                    //Success\n                    const responseObj = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? xhr.response\n                        : (responseContentType.indexOf('application/json') == 0\n                            ? JSON.parse(xhr.responseText)\n                            : xhr.responseText);\n                    this._responseBody = responseObj;\n                    if (this.onResponse) {\n                        this.onResponse(xhr);\n                    }\n                    resolve(responseObj);\n                }\n                else {\n                    //Error\n                    const rtPromise = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? HttpClient.decodeArrayBuffer(xhr.response)\n                        : Promise.resolve(xhr.responseText);\n                    rtPromise.then(responseText => {\n                        const responseObj = (responseContentType.indexOf('application/json') == 0)\n                            ? JSON.parse(responseText)\n                            : responseText;\n                        this._responseBody = responseObj;\n                        const message = responseObj.message ||\n                            (status == 404\n                                ? `No such endpoint: ${url}`\n                                : responseObj);\n                        reject(new HttpResponseError(status, message));\n                    });\n                }\n            };\n            xhr.send(dataToSend);\n        }));\n    }\n    static decodeArrayBuffer(uintArray) {\n        var reader = new FileReader();\n        return new Promise((resolve) => {\n            reader.onloadend = function () {\n                if (reader.readyState == FileReader.DONE) {\n                    resolve(reader.result);\n                }\n            };\n            reader.readAsText(new Blob([uintArray]));\n        });\n    }\n}\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    /**\n     * Updates the default texts for the current locale and all other locales available now\n     * This function does rewrite the texts in the locales, it just adds new textual resources if they didn't exists previously\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeInfo) {\n        mapInfo(localeInfo);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeInfo.localeId) {\n                localeInfo.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeInfo);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'u') {\n                format = buildUniversalDateTimeFormat(dataType);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildUniversalDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        const dateFormat = 'yyyy-MM-dd';\n        switch (dataType) {\n            case DataType.Date:\n                format = dateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = dateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param num - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(num, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(num, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return num.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(num), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return num.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\n/**\n * Represents one entity.\n */\nclass MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        /** Returns false if this entity is read-only */\n        this.isEditable = true;\n        this.name = \"\";\n        this.caption = \"\";\n        this.description = \"\";\n        this.parent = parent;\n        this.attributes = new Array();\n        this.subEntities = new Array();\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param dto The JSON representation object.\n    */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.name = dto.name;\n            this.captionPlural = dto.namePlur;\n            this.caption = dto.name;\n            this.description = dto.desc;\n            if (typeof (dto.ied) !== 'undefined')\n                this.isEditable = dto.ied;\n            this.subEntities = new Array();\n            if (dto.ents) {\n                for (let i = 0; i < dto.ents.length; i++) {\n                    let newEntity = model.createEntity(this);\n                    newEntity.loadFromData(model, dto.ents[i]);\n                    this.subEntities.push(newEntity);\n                }\n            }\n            this.attributes = new Array();\n            if (dto.attrs) {\n                for (let i = 0; i < dto.attrs.length; i++) {\n                    let newAttr = model.createEntityAttr(this);\n                    newAttr.loadFromData(model, dto.attrs[i]);\n                    this.attributes.push(newAttr);\n                }\n            }\n        }\n    }\n    scan(processAttribute, processEntity) {\n        let opts = { stop: false };\n        let internalProcessEntity = (entity) => {\n            if (processEntity)\n                processEntity(entity, opts);\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; (i < attrCount) && !opts.stop; i++) {\n                    let attr = entity.attributes[i];\n                    if (processAttribute) {\n                        processAttribute(attr, opts);\n                    }\n                    if (opts.stop)\n                        return;\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; (i < subEntityCount) && !opts.stop; i++) {\n                    internalProcessEntity(entity.subEntities[i]);\n                }\n            }\n        };\n        internalProcessEntity(this);\n    }\n    getFirstPrimaryAttr() {\n        return this.getPrimaryAttrs()[0];\n    }\n    getPrimaryAttrs() {\n        return this.attributes.filter(attr => attr.isPrimaryKey);\n    }\n}\nclass MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        this.id = \"\";\n        this.caption = \"{Unrecognized attribute}\";\n        this.dataType = DataType.String;\n        this.size = 0;\n        this.isPrimaryKey = false;\n        this.isForeignKey = false;\n        this.isNullable = true;\n        this.showOnView = true;\n        this.isEditable = true;\n        this.showOnCreate = true;\n        this.showOnEdit = true;\n        this.showInLookup = false;\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n        this.entity = entity;\n        this.kind = EntityAttrKind.Data;\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param dto The JSON representation object.\n     */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.description = dto.desc;\n            this.caption = dto.cptn;\n            this.dataType = dto.dtype;\n            this.isPrimaryKey = dto.ipk;\n            this.isForeignKey = dto.ifk;\n            this.size = dto.size;\n            this.lookupAttr = dto.lattr;\n            this.lookupEntity = dto.lent;\n            this.dataAttr = dto.dattr;\n            this.lookupDataAttr = dto.ldattr;\n            const isDataType = utils.getDateDataTypes().indexOf(this.dataType);\n            this.defaultValue = dto.defVal && isDataType ? new Date(dto.defVal) : dto.defVal;\n            this.isNullable = utils.getIfDefined(dto.nul, this.isNullable);\n            this.isEditable = utils.getIfDefined(dto.ied, this.isEditable);\n            this.showOnView = utils.getIfDefined(dto.ivis || dto.sov, this.showOnView);\n            this.showOnCreate = utils.getIfDefined(dto.soc, this.showOnCreate);\n            this.showOnEdit = utils.getIfDefined(dto.soe, this.showOnEdit);\n            this.showInLookup = utils.getIfDefined(dto.sil, this.showInLookup);\n            this.kind = dto.kind;\n            this.displayFormat = dto.dfmt;\n            if (dto.udata)\n                this.userData = dto.udata;\n            if (dto.edtr) {\n                this.defaultEditor = model.getEditorById(dto.edtr) || model.createValueEditor();\n            }\n        }\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.tag = EditorTag.Unknown;\n        this.resType = DataType.Unknown;\n        this.defValue = \"\";\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        if (data) {\n            this.id = data.id;\n            this.tag = data.tag;\n            this.defValue = data.defval;\n            this.resType = data.rtype;\n            this.accept = data.accept;\n            this.multiline = data.multiline;\n            if (data.subType) {\n                this.resType = data.subType;\n            }\n            if (data.name) {\n                this.name = data.name;\n            }\n            if (data.values) {\n                this.values = data.values;\n            }\n        }\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (!this.values)\n            return result;\n        if (Array.isArray(value)) {\n            for (let item of this.values) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.values) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n}\n\n/**\n * Represents a data model\n */\nclass MetaData {\n    /** The default constructor. */\n    constructor() {\n        this.mainEntity = null;\n        this.id = '__none';\n        this.name = 'Empty model';\n        this.rootEntity = this.createEntity();\n        this.displayFormats = new Map();\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    createEntity(parent) {\n        return new MetaEntity(parent);\n    }\n    createEntityAttr(parent) {\n        return new MetaEntityAttr(parent);\n    }\n    createValueEditor() {\n        return new ValueEditor();\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.version = data.vers;\n        //Editors\n        this.editors = new Array();\n        if (data.editors) {\n            for (let i = 0; i < data.editors.length; i++) {\n                let newEditor = this.createValueEditor();\n                newEditor.loadFromData(data.editors[i]);\n                this.editors.push(newEditor);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //DataFormats\n        this.displayFormats = new Map();\n        if (data.displayFormats) {\n            for (const dtypeStr in data.displayFormats) {\n                const dtype = DataType[dtypeStr];\n                const formats = data.displayFormats[dtypeStr] || new Array();\n                this.displayFormats.set(dtype, formats);\n            }\n        }\n    }\n    /**\n     * Gets the display formats.\n     * @returns The display formats.\n     */\n    getDisplayFormats() {\n        return this.displayFormats;\n    }\n    /**\n     * Gets the display formats for type\n     * @param type The type\n     * @returns An array of display formats\n     */\n    getDisplayFormatsForType(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type);\n        }\n        return [];\n    }\n    /**\n     * Gets the default display format for the provided type\n     * @param type The type\n     * @returns The default type format or null\n     */\n    getDefaultFormat(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type).filter(f => f.isdef)[0];\n        }\n        return null;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Checks wether the data model is empty.\n     * @returns `true` if the data model is empty, otherwise `false`.\n     */\n    isEmpty() {\n        return this.rootEntity.subEntities.length === 0 && this.rootEntity.attributes.length === 0;\n    }\n    /**\n     * Gets ID of the data model.\n     * @returns The ID.\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Gets name of the data model.\n     * @returns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        for (let editor of this.editors) {\n            if (editor.id === editorId) {\n                return editor;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        let idx;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (idx = 0; idx < attrCount; idx++) {\n                if (entity.attributes[idx].id == attrId) {\n                    return entity.attributes[idx];\n                }\n            }\n        }\n        let res;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (idx = 0; idx < subEntityCount; idx++) {\n                res = this.getEntityAttrById(entity.subEntities[idx], attrId);\n                if (res)\n                    return res;\n            }\n        }\n        return null;\n    }\n    listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(this.createEntity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this.listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(this.createEntity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name) || ent.caption;\n                    let newEnt = utils.assign(this.createEntity(), {\n                        id: ent.name,\n                        text: caption,\n                        items: [],\n                        isEntity: true,\n                        description: ent.description\n                    });\n                    let newOpts = utils.assign({}, opts);\n                    newOpts.includeRootData = false;\n                    newEnt.items = this.listByEntity(ent, newOpts, filterFunc);\n                    if (newEnt.items.length > 0) {\n                        resultEntities.push(newEnt);\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                    resultAttributes.push(utils.assign(this.createEntityAttr(entity), {\n                        id: attr.id, text: caption,\n                        dataType: attr.dataType, lookupAttr: attr.lookupAttr,\n                        description: attr.description\n                    }));\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        this.rootEntity = this.createEntity();\n        this.editors = [];\n        this.version = '';\n    }\n    /**\n     * Add default value editors.\n     */\n    addDefaultValueEditors() {\n        let ve;\n        ve = this.addOrUpdateValueEditor('_DTE', EditorTag.Edit, DataType.String);\n        ve.defValue = '';\n        this.addOrUpdateValueEditor('_DPDE', EditorTag.DateTime, DataType.DateTime);\n        this.addOrUpdateValueEditor('_DPTE', EditorTag.DateTime, DataType.DateTime);\n    }\n    /**\n    * Add or update a value editor.\n    * @param id The id.\n    * @param tag The tag.\n    * @param resType The result type.\n    * @returns The value editor.\n    */\n    addOrUpdateValueEditor(id, tag, resType) {\n        let ve = utils.findItemById(this.editors, id);\n        if (!ve) {\n            ve = this.createValueEditor();\n            ve.id = id;\n            this.editors.push(ve);\n        }\n        ve.tag = tag;\n        ve.resType = resType;\n        return ve;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this.listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this.listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        if (!entity)\n            return '';\n        sep = sep || ' ';\n        let entityCaption = '';\n        if (entity.caption && !root) {\n            let entityText = i18n.getText('Entities', entity.caption);\n            entityCaption = entityText ? entityText : entity.caption;\n        }\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let i = 0; i < attrCount; i++) {\n                if (entity.attributes[i].id == attrId) {\n                    return entityCaption;\n                }\n            }\n        }\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let i = 0; i < subEntityCount; i++) {\n                let ent = entity.subEntities[i];\n                let res = this.getEntityPathByAttr(ent, attrId, sep, false);\n                if (res !== '') {\n                    if (entityCaption !== '')\n                        res = entityCaption + sep + res;\n                    return res;\n                }\n            }\n        }\n        return '';\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        let attrText = i18n.getText('Attributes', attr.id);\n        if (!attrText) {\n            attrText = attr.caption;\n        }\n        if (!format) {\n            return attrText;\n        }\n        let result = '';\n        let entityPath = this.getFullEntityPathByAttr(attr.id, ' ');\n        if (entityPath) {\n            result = format.replace(new RegExp('{attr}', 'g'), attrText);\n            result = result.replace(new RegExp('{entity}', 'g'), entityPath);\n        }\n        else {\n            result = attrText;\n        }\n        return result.trim();\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n}\n\n/**\n * Defines aggregations settings for the current context.\n * Group, aggregate columns, grand totals, etc.\n */\nclass AggregationSettings {\n    constructor(colStore) {\n        this.colStore = colStore;\n        this.aggregates = [];\n        this.groups = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this._caseSensitiveGroups = false;\n        this.COUNT_FIELD_NAME = 'GRPRECCNT';\n    }\n    get caseSensitiveGroups() {\n        return this._caseSensitiveGroups;\n    }\n    set caseSensitiveGroups(value) {\n        this._caseSensitiveGroups = value;\n        this.updateCompareProc();\n    }\n    updateCompareProc() {\n        this.compareValues = this._caseSensitiveGroups\n            ? this.strictCompare\n            : this.caseInsensitiveCompare;\n    }\n    addGroup(settings) {\n        const cols = settings.columns || this.colStore.getColumnIds(settings.from, settings.to);\n        if (!this.colStore.validateColumns(cols))\n            throw \"Invalid columns: \" + cols;\n        if (this.hasColumnsInUse(cols))\n            throw \"Can't add same columns to different groups/aggregates\";\n        this.groups.push(Object.assign({ columns: cols }, settings));\n        return this;\n    }\n    addAggregateColumn(colIndexOrId, funcId) {\n        const colId = typeof colIndexOrId == 'string'\n            ? colIndexOrId\n            : this.colStore.getColumnIds(colIndexOrId, colIndexOrId)[0];\n        if (this.hasColumnsInUse([colId]) || !this.colStore.validateAggregate(colId, funcId))\n            throw 'Invalid aggregation function for the column: ' + colId;\n        this.aggregates.push({ colId, funcId });\n        return this;\n    }\n    addGrandTotals() {\n        this.useGrandTotals = true;\n        return this;\n    }\n    addCounts() {\n        this.useRecordCount = true;\n        return this;\n    }\n    getGroups() {\n        let cols = [];\n        const mappedGrops = this.groups.map(grp => {\n            cols = cols.concat(grp.columns);\n            return Object.assign(Object.assign({}, grp), { columns: Array.from(cols), aggregates: Array.from(this.aggregates) });\n        });\n        return mappedGrops;\n    }\n    getInternalGroups() {\n        return this.groups;\n    }\n    lastGroup() {\n        const groups = this.getGroups();\n        return groups[groups.length - 1];\n    }\n    getAggregates() {\n        return this.aggregates;\n    }\n    hasAggregates() {\n        return this.aggregates.length > 0;\n    }\n    hasGroups() {\n        return this.groups.length > 0;\n    }\n    hasGrandTotals() {\n        return this.useGrandTotals;\n    }\n    hasRecordCount() {\n        return this.useRecordCount;\n    }\n    isEmpty() {\n        return !(this.hasAggregates() || this.hasGroups() ||\n            this.hasGrandTotals() || this.hasRecordCount());\n    }\n    isValid() {\n        return (this.hasGroups() && (this.hasAggregates() || this.hasRecordCount()))\n            || (this.hasAggregates && this.hasGrandTotals());\n    }\n    drop() {\n        console.warn('\"drop()\" method is obsolete. Use \"clear()\" instead');\n        this.clear();\n    }\n    clear() {\n        this.groups = [];\n        this.aggregates = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this.caseSensitiveGroups = false;\n        return this;\n    }\n    /**\n     * Checks if all columns from the list passed in the parameter are \"unused\".\n     * Here \"unused column\" means a column that is included neither in any group nor in the aggregates list.\n     * @param cols - the array of column IDs\n     * @returns true if all columns in the list are not used anywhere, othervise - fals\n     */\n    hasColumnsInUse(cols) {\n        for (const group of this.groups) {\n            const interCols = group.columns\n                .filter(c => cols.indexOf(c) >= 0);\n            if (interCols.length > 0)\n                return true;\n        }\n        for (const aggr of this.aggregates) {\n            if (cols.indexOf(aggr.colId) >= 0)\n                return true;\n        }\n        return false;\n    }\n    needAggrCalculation() {\n        return (this.hasAggregates() || this.hasRecordCount())\n            && (this.hasGrandTotals() || this.hasGroups());\n    }\n    saveToData() {\n        return {\n            groups: Array.from(this.groups),\n            ugt: this.useGrandTotals,\n            urc: this.useRecordCount,\n            csg: this.caseSensitiveGroups,\n            aggregates: Array.from(this.aggregates)\n        };\n    }\n    loadFromData(data) {\n        if (data) {\n            if (typeof data.ugt !== 'undefined')\n                this.useGrandTotals = data.ugt;\n            if (typeof data.urc !== 'undefined')\n                this.useRecordCount = data.urc;\n            if (typeof data.csg !== 'undefined')\n                this.caseSensitiveGroups = data.csg;\n            if (data.groups) {\n                this.groups = Array.from(data.groups);\n            }\n            if (data.aggregates) {\n                this.aggregates = Array.from(data.aggregates);\n            }\n        }\n    }\n    buildGroupKey(group, row) {\n        const caseInsensitive = !this.caseSensitiveGroups;\n        let result = {};\n        if (group) {\n            for (const colId of group.columns) {\n                let keyVal = row.getValue(colId);\n                if (caseInsensitive && typeof (keyVal) === 'string') {\n                    keyVal = keyVal.toLowerCase();\n                }\n                result[colId] = keyVal;\n            }\n        }\n        return result;\n    }\n    //returns true if value1 == value2\n    strictCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else\n            return value1 === value2;\n    }\n    //makes a case insensative comparision of two values and return true if there are equal\n    caseInsensitiveCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else {\n            const val1 = (typeof value1 === 'string') ? value1.toLowerCase() : value1;\n            const val2 = (typeof value2 === 'string') ? value2.toLowerCase() : value2;\n            return val1 === val2;\n        }\n    }\n}\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\nclass DataColumn {\n    constructor(desc) {\n        if (!desc)\n            throw Error(\"Options are required\");\n        if (!desc.id)\n            throw Error(\"Field Id is required\");\n        if (!desc.label)\n            throw Error(\"Label is required\");\n        this.id = desc.id;\n        this.type = utils.getIfDefined(desc.type, DataType.String);\n        this.label = desc.label;\n        this.originAttrId = desc.originAttrId;\n        this.isAggr = desc.isAggr || false;\n        this.displayFormat = desc.dfmt;\n        this.groupFooterColumnTemplate = desc.gfct;\n        this.style = desc.style || {};\n        this.description = desc.description;\n        this.calculatedWidth = 0;\n    }\n}\nclass DataColumnList {\n    constructor() {\n        this.items = [];\n        this.mapper = {};\n        this._dateColumnIdx = [];\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(colOrDesc) {\n        let col;\n        if (colOrDesc instanceof DataColumn) {\n            col = colOrDesc;\n        }\n        else {\n            col = new DataColumn(colOrDesc);\n        }\n        const index = this.items.length;\n        this.items.push(col);\n        this.mapper[col.id] = index;\n        if ([DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0) {\n            this._dateColumnIdx.push(index);\n        }\n        return index;\n    }\n    updateDateColumnIdx() {\n        this._dateColumnIdx = this.getItems()\n            .filter(col => [DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0)\n            .map((col, index) => index);\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.count) {\n            this.items[index] = col;\n            this.updateDateColumnIdx();\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex) {\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n            this.updateDateColumnIdx();\n        }\n    }\n    get(index) {\n        if (index >= 0 && index < this.count) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    getIndex(id) {\n        return this.mapper[id];\n    }\n    getItems() {\n        return this.items;\n    }\n    getDateColumnIndexes() {\n        return this._dateColumnIdx;\n    }\n    removeAt(index) {\n        const col = this.get(index);\n        this.items.splice(index, 1);\n        const removeDate = this._dateColumnIdx.indexOf(index);\n        if (removeDate >= 0) {\n            this._dateColumnIdx.splice(removeDate, 1);\n        }\n        delete this.mapper[col.id];\n    }\n    clear() {\n        this.items = [];\n        this._dateColumnIdx = [];\n        this.mapper = {};\n    }\n}\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\nclass EasyDataTable {\n    constructor(options) {\n        this._chunkSize = 1000;\n        this._elasticChunks = false;\n        this.cachedRows = [];\n        this.total = 0;\n        this.loader = null;\n        this.needTotal = true;\n        this.isInMemory = false;\n        options = options || {};\n        this._chunkSize = options.chunkSize || this._chunkSize;\n        this._elasticChunks = options.elasticChunks || this._elasticChunks;\n        this.loader = options.loader;\n        if (typeof options.inMemory !== 'undefined') {\n            this.isInMemory = options.inMemory;\n        }\n        if (this.isInMemory) {\n            this.needTotal = false;\n        }\n        this._columns = new DataColumnList();\n        this.onUpdate = options.onUpdate;\n        if (options.columns) {\n            for (const colDesc of options.columns) {\n                this._columns.add(colDesc);\n            }\n        }\n        if (options.rows) {\n            for (const rowData of options.rows) {\n                const row = this.createRow(rowData);\n                this.addRow(row);\n            }\n        }\n        this.needTotal = !this._elasticChunks;\n    }\n    get columns() {\n        return this._columns;\n    }\n    get chunkSize() {\n        return this._chunkSize;\n    }\n    set chunkSize(value) {\n        this._chunkSize = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    get elasticChunks() {\n        return this._elasticChunks;\n    }\n    set elasticChunks(value) {\n        this._elasticChunks = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    getRows(params) {\n        let fromIndex = 0, count = this._chunkSize;\n        if (params) {\n            if ('page' in params) {\n                fromIndex = params.pageSize * (params.page - 1);\n                count = params.pageSize;\n            }\n            else {\n                fromIndex = params.offset;\n                count = params.limit;\n            }\n        }\n        let endIndex = fromIndex + count; //the first index of the next page\n        //if we don't calculate total on this request\n        if (!this.needTotal && !this.elasticChunks) {\n            if (fromIndex >= this.total) {\n                return Promise.resolve([]);\n            }\n            if (endIndex > this.total) {\n                endIndex = this.total;\n            }\n        }\n        if (this.isInMemory && endIndex > this.cachedRows.length) {\n            endIndex = this.cachedRows.length;\n        }\n        let allChunksCached = endIndex <= this.cachedRows.length;\n        if (allChunksCached) {\n            return Promise.resolve(this.cachedRows.slice(fromIndex, endIndex));\n        }\n        //if loader is not defined\n        if (!this.loader) {\n            throw `Loader is not defined. Can't get the rows from ${fromIndex} to ${endIndex}`;\n        }\n        // we need total only for the first request\n        const needTotal = this.needTotal;\n        if (this.needTotal) {\n            this.needTotal = false;\n        }\n        let offset = this.cachedRows.length;\n        let limit = endIndex - offset;\n        if (limit < this._chunkSize) {\n            limit = this._chunkSize;\n        }\n        const resultPromise = this.loader.loadChunk({\n            offset: offset,\n            limit: limit,\n            needTotal: needTotal\n        })\n            .then(result => {\n            if (needTotal) {\n                this.total = result.total;\n            }\n            Array.prototype.push.apply(this.cachedRows, result.table.getCachedRows());\n            if (endIndex > this.cachedRows.length) {\n                endIndex = this.cachedRows.length;\n            }\n            if (this.elasticChunks) {\n                const count = result.table.getCachedCount();\n                if (count < limit) {\n                    this.total = this.cachedRows.length;\n                }\n            }\n            this.fireUpdated();\n            return this.cachedRows.slice(fromIndex, endIndex);\n        });\n        return resultPromise;\n    }\n    getRow(index) {\n        return this.getRows({ offset: index, limit: 1 })\n            .then(rows => rows.length > 0 ? rows[0] : null);\n    }\n    getTotal() {\n        return this.total;\n    }\n    setTotal(total) {\n        this.total = total;\n        this.needTotal = false;\n    }\n    getCachedCount() {\n        return this.cachedRows.length;\n    }\n    clear() {\n        this.columns.clear();\n        this.cachedRows = [];\n        this.total = 0;\n        this.needTotal = !this._elasticChunks;\n        this.fireUpdated();\n    }\n    createRow(dataOrRow) {\n        const dateIdx = this._columns.getDateColumnIndexes();\n        const values = new Array(this._columns.count);\n        const getValue = dataOrRow instanceof DataRow\n            ? (colId) => dataOrRow.getValue(colId)\n            : (colId) => dataOrRow[colId];\n        if (dataOrRow) {\n            this.columns.getItems().forEach((column) => {\n                const value = getValue(column.id);\n                const index = this.columns.getIndex(column.id);\n                values[index] = (dateIdx.indexOf(index) >= 0)\n                    ? this.mapDate(value, column.type)\n                    : value;\n            });\n        }\n        return new DataRow(this._columns, values);\n    }\n    mapDate(value, dtype) {\n        if (value) {\n            let result = new Date(value);\n            if (isNaN(result.getTime())\n                && dtype == DataType.Time) {\n                result = utils.strToTime(value);\n            }\n            return result;\n        }\n        return null;\n    }\n    addRow(rowOrValues) {\n        let newRow;\n        if (Array.isArray(rowOrValues)) {\n            let values = rowOrValues;\n            const dateIdx = this._columns.getDateColumnIndexes();\n            if (dateIdx.length > 0) {\n                for (const idx of dateIdx) {\n                    if (values[idx]) {\n                        values[idx] = this.mapDate(values[idx], this._columns.get(idx).type);\n                    }\n                }\n            }\n            newRow = new DataRow(this._columns, values);\n        }\n        else {\n            newRow = this.createRow(rowOrValues);\n        }\n        this.cachedRows.push(newRow);\n        const cachedTotal = this.getCachedCount();\n        if (cachedTotal > this.total) {\n            this.total = cachedTotal;\n        }\n        return newRow;\n    }\n    getCachedRows() {\n        return this.cachedRows;\n    }\n    totalIsKnown() {\n        if (this.elasticChunks) {\n            const count = this.getCachedCount();\n            return count === this.total;\n        }\n        return !this.needTotal;\n    }\n    fireUpdated() {\n        if (this.onUpdate) {\n            this.onUpdate(this);\n        }\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nfunction repeatString(str, times) {\n    return str.repeat(times);\n}\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction strEndsWith(str, symbol) {\n    return str && str.lastIndexOf(symbol) == (str.length - symbol.length);\n}\n/**\n * Adds two paths and returns the result\n * Correctly processes leading and trailing slashes\n * @param path1\n * @param path2\n */\nfunction combinePath(path1, path2) {\n    let result = path1;\n    if (result != null && result.length > 0) {\n        if (result.charAt(result.length - 1) != '/')\n            result += \"/\";\n        result += path2;\n    }\n    else {\n        result = path2;\n    }\n    return result;\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nexport { AggregationSettings, ColumnAlignment, DataColumn, DataColumnList, DataRow, DataType, EasyDataTable, EasyGuid, EditorTag, EntityAttrKind, EventEmitter, HttpClient, HttpMethod, HttpRequest, HttpResponseError, MetaData, MetaEntity, MetaEntityAttr, SpecialDatesResolver, TimeValue, ValueEditor, combinePath, i18n, liquid, registerSpecialDatesResolver, repeatString, reverseString, strEndsWith, utils };\n","\n/*\n * EasyQuery.JS Core v7.4.0-rc05\n * Copyright 2025 Korzh.com\n * Licensed under MIT\n *\n * Build time: 6/22/2025 6:35:21 PM\n */\n\nimport { i18n, DataType, utils, ValueEditor, MetaEntity, MetaEntityAttr, EditorTag, MetaData, EventEmitter, AggregationSettings, HttpClient, EasyDataTable } from '@easydata/core';\nexport { i18n } from '@easydata/core';\n\n/**\n * Represents a parser for format expressions in operators\n */\nclass FormatParser {\n    constructor(format) {\n        this.start(format);\n    }\n    /**\n     * Starts parsing of the format string passed in the parameter\n     * @param format\n     */\n    start(format) {\n        this.formatStr = format;\n        this.pos = 0;\n        this.exprNum = 0;\n        this.tokenText = '';\n    }\n    /**\n     * Skips all spcaes till the beginning of next token\n     */\n    skipSpaces() {\n        while (this.pos < this.formatStr.length && this.formatStr.charAt(this.pos) === ' ')\n            this.pos++;\n    }\n    /**\n     * Scans the source and gets the next token\n     */\n    next() {\n        this.skipSpaces();\n        if (this.pos >= this.formatStr.length)\n            return false;\n        var npos = 0;\n        if (this.formatStr.charAt(this.pos) === '{') {\n            npos = this.formatStr.indexOf('}', this.pos);\n            if (npos < 0)\n                return false;\n            this.tokenText = this.formatStr.substring(this.pos, npos + 1);\n            if (this.tokenText.indexOf('{expr') === 0) {\n                this.token = 'expression';\n                this.exprNum = parseInt(this.tokenText.substring(5, this.tokenText.length));\n            }\n            this.pos = npos + 1;\n        }\n        else if (this.formatStr.charAt(this.pos) === '[' && this.pos < this.formatStr.length - 1 && this.formatStr.charAt(this.pos + 1) === '[') {\n            this.pos += 2;\n            npos = this.formatStr.indexOf(']]', this.pos);\n            this.token = 'operator';\n            this.tokenText = this.formatStr.substring(this.pos, npos);\n            this.pos = npos + 2;\n        }\n        else {\n            this.token = 'text';\n            var npos1 = this.formatStr.indexOf('{', this.pos);\n            if (npos1 < 0)\n                npos1 = this.formatStr.length;\n            var npos2 = this.formatStr.indexOf('[[', this.pos);\n            if (npos2 < 0)\n                npos2 = this.formatStr.length;\n            npos = Math.min(npos1, npos2);\n            this.tokenText = this.formatStr.substring(this.pos, npos).trim();\n            this.pos = npos;\n        }\n        return true;\n    }\n    /**\n     * Returns current token\n     */\n    getToken() {\n        return {\n            type: this.token,\n            text: this.tokenText,\n            index: this.exprNum - 1\n        };\n    }\n    /**\n     * Parses all source string passed in constructor and returns the list of tokens\n     */\n    parse() {\n        let result = [];\n        while (this.next()) {\n            result.push(this.getToken());\n        }\n        return result;\n    }\n}\n\n/** Represents type of linking of conditions in group (predicate).*/\nvar LinkType;\n(function (LinkType) {\n    /**\n     * None of the conditions must be truth (all must be false).\n     * In SQL it will look like: `NOT (Condition1 OR Condition2 OR ...)`.\n     */\n    LinkType[LinkType[\"None\"] = 0] = \"None\";\n    /** At least one condition must be truth. In SQL they are connected by `OR` operator.*/\n    LinkType[LinkType[\"Any\"] = 1] = \"Any\";\n    /**\n     * Not all conditions must be truth (at least one must false).\n     * In SQL it will look like: `NOT(Condition1 AND Condition2 AND ...)`.\n     */\n    LinkType[LinkType[\"NotAll\"] = 2] = \"NotAll\";\n    /** All conditions must be truth, in result SQL they are connected by `AND` operator;*/\n    LinkType[LinkType[\"All\"] = 3] = \"All\";\n})(LinkType || (LinkType = {}));\n\nvar equtils;\n(function (equtils) {\n    /**\n     * Adds two paths and returns the result\n     * Correctly processes leading and trailing slashes\n     * @param path1\n     * @param path2\n     */\n    function combinePath(path1, path2) {\n        let result = path1;\n        if (result != null && result.length > 0) {\n            if (result.charAt(result.length - 1) != '/')\n                result += \"/\";\n            result += path2;\n        }\n        else {\n            result = path2;\n        }\n        return result;\n    }\n    equtils.combinePath = combinePath;\n    /**\n     * Converts a string to a `LinkType` value\n     * @param str\n     */\n    function strToLinkType(str) {\n        if (str == \"All\") {\n            return LinkType.All;\n        }\n        else if (str == \"NotAll\") {\n            return LinkType.NotAll;\n        }\n        else if (str == \"Any\") {\n            return LinkType.Any;\n        }\n        else {\n            return LinkType.None;\n        }\n    }\n    equtils.strToLinkType = strToLinkType;\n    /**\n     * Converts a `LinkType` value to a string\n     * @param type\n     */\n    function linkTypeToStr(type) {\n        if (type === LinkType.All) {\n            return \"All\";\n        }\n        else if (type === LinkType.NotAll) {\n            return \"NotAll\";\n        }\n        else if (type == LinkType.Any) {\n            return \"Any\";\n        }\n        else {\n            return \"None\";\n        }\n    }\n    equtils.linkTypeToStr = linkTypeToStr;\n    /**\n     * Parses the operator's format string and returns a list of tokens\n     * @param operator\n     */\n    function parseOperatorFormat(operator) {\n        let format = i18n.getText('Operators', operator.id, 'format');\n        if (!format) {\n            format = i18n.getText('Operators', operator.id, 'displayFormat');\n        }\n        if (!format) {\n            format = operator.displayFormat;\n        }\n        const parser = new FormatParser(format);\n        return parser.parse();\n    }\n    equtils.parseOperatorFormat = parseOperatorFormat;\n    //----------- value converstion utils --------------\n    /**\n     * Converts a value from one DataType to another\n     * @param value\n     * @param fromDataType - the original data type\n     * @param toDataType - the data type we want to get\n     */\n    function convertValue(value, fromDataType, toDataType) {\n        switch (toDataType) {\n            case DataType.String:\n                return value;\n            case DataType.Autoinc, DataType.Byte, DataType.Int32, DataType.Int64, DataType.Word:\n                let resInt = parseInt(value);\n                return isNaN(resInt) ? '' : resInt.toString();\n            case DataType.Currency, DataType.Float:\n                let resFloat = parseFloat(value);\n                return isNaN(resFloat) ? '' : resFloat.toString();\n            default:\n                return '';\n        }\n    }\n    equtils.convertValue = convertValue;\n})(equtils || (equtils = {}));\n\n/**\n * Represents an aggregate function\n */\nclass AggrFunction {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.caption = \"\";\n        this.sqlExpr = \"\";\n        this.displayFormat = \"\";\n        this.appliedTypes = [];\n    }\n    /**\n     * Loads an aggregate function from its JSON representation object\n     * @param aggrFunction The JSON representation object\n     */\n    loadFromData(aggrFunction) {\n        if (aggrFunction) {\n            this.id = aggrFunction.id;\n            this.caption = aggrFunction.cptn;\n            this.displayFormat = aggrFunction.fmt;\n            this.sqlExpr = aggrFunction.expr;\n            this.appliedTypes = aggrFunction.dtypes || this.appliedTypes;\n        }\n    }\n    getAppliedTypesOrDefault() {\n        if (this.appliedTypes.length > 0)\n            return this.appliedTypes;\n        if (this.id === 'SUM' || this.id === 'AVG') {\n            return [DataType.Autoinc, DataType.Byte, DataType.Currency, DataType.Float, DataType.Int32,\n                DataType.Int64, DataType.Word];\n        }\n        else if (this.id === 'MIN' || this.id === 'MAX') {\n            return [DataType.Autoinc, DataType.BCD, DataType.Byte, DataType.Currency, DataType.Date, DataType.DateTime, DataType.Time,\n                DataType.Float, DataType.Int32, DataType.Int64, DataType.Word];\n        }\n        return utils.getAllDataTypes();\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass EqValueEditor extends ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        super();\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            if (data.sql) {\n                this.statement = data.sql;\n            }\n            if (data.extraParams) {\n                this.extraParams = data.extraParams;\n            }\n        }\n    }\n}\n\n/** Represents expression kinds.*/\nvar DataKind;\n(function (DataKind) {\n    /** Represents one value of some type: one constant or one attribute (field).*/\n    DataKind[DataKind[\"Scalar\"] = 0] = \"Scalar\";\n    /** The same as Scalar but represents only one constant value of some type.*/\n    DataKind[DataKind[\"Const\"] = 1] = \"Const\";\n    /** The same as Scalar but represents only one attribute.*/\n    DataKind[DataKind[\"Attribute\"] = 2] = \"Attribute\";\n    /** Represents a list of scalar values. */\n    DataKind[DataKind[\"List\"] = 4] = \"List\";\n    /** Special expression kind which represents a sub query.*/\n    DataKind[DataKind[\"Query\"] = 5] = \"Query\";\n    /** Special expression kind which represents a binding to parent column.*/\n    DataKind[DataKind[\"ParentColumn\"] = 6] = \"ParentColumn\";\n})(DataKind || (DataKind = {}));\n\n/**\n * Represents a logical expression or predicate, like comparisions or `LIKE` predicate.\n */\nclass Operator {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.expr = \"\";\n        this.constValueFormat = \"{const}\";\n        this.caption = \"{Unrecognized operator}\";\n        this.displayFormat = \"{expr1} [[{unrecognized operator}]] {expr2}\";\n        this.isRange = false;\n        this.caseIns = false;\n        this.paramCount = 2;\n        this.defaultOperand = new Operand();\n        this.appliedTypes = [];\n        this.operands = new Array();\n    }\n    /**\n    * Loads operator from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        if (data) {\n            this.id = data.id;\n            this.caption = data.cptn;\n            this.caseIns = data.caseIns;\n            this.isRange = data.isRange;\n            this.displayFormat = data.fmt;\n            this.paramCount = data.pcnt;\n            this.expr = data.expr;\n            this.appliedTypes = data.dtypes || this.appliedTypes;\n            if (data.defOperand) {\n                this.defaultOperand.loadFromData(model, data.defOperand);\n            }\n            if (data.editor) {\n                this.defaultOperand.editor = model.getEditorById(data.editor) || new EqValueEditor();\n            }\n            if (data.operands) {\n                for (let i = 0; i < data.operands.length; i++) {\n                    let newOperand = new Operand();\n                    newOperand.loadFromData(model, data.operands[i]);\n                    if (data.editor) {\n                        newOperand.editor = model.getEditorById(data.editor) || new EqValueEditor();\n                    }\n                    this.operands.push(newOperand);\n                }\n            }\n        }\n    }\n}\n/**\n * Represents one operand in some operator's expression\n */\nclass Operand {\n    /** The default constructor. */\n    constructor() {\n        this.kind = DataKind.Scalar;\n        this.dataType = DataType.Unknown;\n        this.editor = new EqValueEditor();\n        this.defValue = \"\";\n    }\n    /**\n     * Loads operand from its JSON representation object.\n     * @param model The Data Model.\n     * @param operand A plain JS object that represents the operand.\n     */\n    loadFromData(model, operand) {\n        this.kind = operand.kind;\n        this.dataType = operand.dtype;\n        this.defValue = operand.val;\n        this.defText = operand.txt;\n        if (operand.editor) {\n            this.editor = model.getEditorById(operand.editor) || new EqValueEditor();\n        }\n    }\n    /**\n     * Copies operand from other operand.\n     * @param src The source operand.\n     */\n    copyFrom(src) {\n        utils.assign(this, src);\n    }\n}\n\n/**\n * Represents one entity.\n */\nclass Entity extends MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        super(parent);\n        this.useInConditions = false;\n        this.useInResult = false;\n        this.useInSorting = false;\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (data) {\n            this.useInConditions = data.uic;\n            this.useInResult = data.uir;\n            this.useInSorting = data.uis;\n        }\n    }\n    scan(processAttribute, processEntity) {\n        super.scan((attr, opts) => processAttribute && processAttribute(attr, opts), (entity, opts) => processEntity && processEntity(entity, opts));\n    }\n}\n/**\n * Represents entity attribute.\n */\nclass EntityAttr extends MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        super(entity);\n        /**\n         * The parameters associated with this entity attribute\n         */\n        this.params = [];\n        this.useInConditions = true;\n        this.useInResult = true;\n        this.useInSorting = true;\n        this.defaultOperator = \"\";\n        this.operators = new Array();\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param data The JSON representation object.\n     */\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (data) {\n            this.useInConditions = data.uic;\n            this.useInResult = data.uir;\n            this.useInSorting = data.uis;\n            this.expr = data.sql;\n            this.defaultOperator = data.defOperator;\n            this.operators = data.ops;\n            if (data.udata)\n                this.userData = data.udata;\n        }\n    }\n}\n\n/** Represents editor tags*/\nconst EqEditorTag = Object.assign(Object.assign({}, EditorTag), { \n    /** SqlList tag value */\n    SqlList: \"SQLLIST\", \n    /** SubQuery tag value */\n    SubQuery: \"SUBQUERY\", \n    /** Bind to parent column tag value */\n    BindToParentColumn: \"BINDTOPARENTCOLUMN\" });\n\n/**\n * Represents a data model\n */\nclass DataModel extends MetaData {\n    /** The default constructor. */\n    constructor() {\n        super();\n        this.mainEntity = null;\n        this.nullAttribute = new EntityAttr(null);\n        this.nullOperator = new Operator();\n        this.operators = new Array();\n        this.rootEntity = new Entity();\n        this.aggrFunctions = new Array();\n        this.dateMacros = ['Today', 'Yesterday',\n            'Tomorrow', 'FirstDayOfMonth', 'LastDayOfMonth',\n            'FirstDayOfWeek', 'FirstDayOfYear', 'FirstDayOfNextWeek', 'FirstDayOfPrevMonth',\n            'FirstDayOfNextMonth', 'FirstDayOfNextYear', 'FirstDayOfPrevYear', 'FirstDayOfPrevWeek'];\n        this.timeMacros = ['Now', 'HourStart', 'Midnight', 'Noon'];\n        this.links = [];\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        super.loadFromData(data);\n        //Operators\n        this.operators = new Array();\n        if (data.operators) {\n            for (let i = 0; i < data.operators.length; i++) {\n                let newOperator = new Operator();\n                newOperator.loadFromData(this, data.operators[i]);\n                this.operators.push(newOperator);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //Aggr Functions\n        this.aggrFunctions = new Array();\n        if (data.aggrfuncs) {\n            for (let i = 0; i < data.aggrfuncs.length; i++) {\n                let newAggrFunc = new AggrFunction();\n                newAggrFunc.loadFromData(data.aggrfuncs[i]);\n                this.aggrFunctions.push(newAggrFunc);\n            }\n        }\n    }\n    /**\n     * Gets the data model object.\n     * @returns Tha data model.\n     */\n    getObject() {\n        return this;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Creates entity.\n     * @param parent The parent entity.\n     * @returns The Entity.\n     */\n    createEntity(parent) {\n        return new Entity(parent);\n    }\n    /**\n     * Creates entity attribute.\n     * @param parent The parent entity.\n     * @returns The entity attribute.\n     */\n    createEntityAttr(parent) {\n        return new EntityAttr(parent);\n    }\n    /**\n     * Creates new EqValueEditor\n     * @returns An instance of EqValueEditor class\n     */\n    createValueEditor() {\n        return new EqValueEditor();\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        return super.getEditorById(editorId);\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n    * Gets entity attribute by its ID.\n    * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n    * @param attrId The attribute ID.\n    * @returns The attribute or `nullAttribute`.\n    */\n    getAttributeByIdSafe(attrId) {\n        const attr = this.getAttributeById(attrId);\n        if (!attr)\n            return this.nullAttribute;\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        return super.getEntityAttrById(entity, attrId);\n    }\n    _listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(new Entity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this._listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(new Entity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    _listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    if (opts.addUIC !== false && ent.useInConditions !== false ||\n                        opts.addUIR !== false && ent.useInResult !== false ||\n                        opts.addUIS !== false && ent.useInSorting !== false) {\n                        caption = i18n.getText('Entities', ent.name) || ent.caption;\n                        let newEnt = utils.assign(new Entity(), {\n                            id: ent.name,\n                            text: caption,\n                            items: [],\n                            isEntity: true,\n                            description: ent.description\n                        });\n                        let newOpts = utils.assign({}, opts);\n                        newOpts.includeRootData = false;\n                        newEnt.items = this._listByEntity(ent, newOpts, filterFunc);\n                        if (newEnt.items.length > 0) {\n                            resultEntities.push(newEnt);\n                        }\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    if (opts.addUIC !== false && attr.useInConditions !== false ||\n                        opts.addUIR !== false && attr.useInResult !== false ||\n                        opts.addUIS !== false && attr.useInSorting !== false) {\n                        caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                        resultAttributes.push(utils.assign(new EntityAttr(entity), { id: attr.id, text: caption, dataType: attr.dataType, lookupAttr: attr.lookupAttr, description: attr.description }));\n                    }\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        super.clear();\n        this.operators = [];\n        this.aggrFunctions = [];\n    }\n    /**\n     * Add or update an operator.\n     * @param desc The operator descriptor.\n     * @returns The operator.\n     */\n    addOrUpdateOperator(desc) {\n        let op = utils.findItemById(this.operators, desc.id);\n        if (!op) {\n            op = new Operator();\n            op.id = desc.id;\n            this.operators.push(op);\n        }\n        op.caption = desc.caption;\n        op.expr = desc.expr || '';\n        op.displayFormat = desc.format;\n        op.defaultOperand = new Operand();\n        op.defaultOperand.kind = desc.kind || DataKind.Scalar;\n        if (desc.appliedTypes)\n            op.appliedTypes = desc.appliedTypes;\n        if (desc.paramCount > 0) {\n            op.paramCount = desc.paramCount;\n        }\n        this.runThroughEntities((attr, opts) => {\n            if (attr.operators.indexOf(op.id) < 0 && op.appliedTypes.indexOf(attr.dataType) >= 0) {\n                attr.operators.push(op.id);\n            }\n        });\n        return op;\n    }\n    /**\n     * Removes an operator.\n     * @param id The id.\n     * @param soft If `false` - removes operators from model and attributes. Otherwise only\n     * from attributes.\n     */\n    removeOperator(id, soft = false) {\n        let op = utils.findItemById(this.operators, id);\n        if (op) {\n            if (!soft)\n                utils.removeArrayItem(this.operators, op);\n            this.runThroughEntities((attr, opts) => {\n                utils.removeArrayItem(attr.operators, op.id);\n            });\n        }\n    }\n    /**\n     * Get operators for data type.\n     * @param type The data type\n     * @return The array of operator ids.\n     */\n    getOperatorIdsByDataType(type) {\n        switch (type) {\n            case DataType.String:\n            case DataType.Memo:\n                return 'StartsWith,EndsWith,Contains,Equal,InList,NotStartsWith,NotEndsWith,NotContains,NotEqual,NotInList,IsNull,IsNotNull'.split(',');\n            case DataType.Guid:\n                return 'Equal,NotEqual'.split(',');\n            case DataType.Date:\n            case DataType.DateTime:\n                return 'DateWithinToday,DateWithinThisWeek,DateWithinPrevWeek,DateWithinThisMonth,DateWithinPrevMonth,DateWithinThisYear,DateWithinPrevYear,DateBeforePrecise,DateAfterPrecise,DatePeriodPrecise,IsNull,IsNotNull'.split(',');\n            case DataType.Time:\n                return 'TimeBeforePrecise,TimeAfterPrecise,TimePeriodPrecise,IsNull,IsNotNull'.split(',');\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Int32:\n            case DataType.Int64:\n            case DataType.Float:\n            case DataType.Currency:\n            case DataType.BCD:\n            case DataType.Autoinc:\n            case DataType.Unknown:\n                return 'Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,InList,NotEqual,NotBetween,NotInList,IsNull,IsNotNull'.split(',');\n            case DataType.Bool:\n                return 'IsTrue,NotTrue'.split(',');\n            default:\n                const result = [];\n                for (let op of this.operators)\n                    if (op.appliedTypes.indexOf(type) >= 0)\n                        result.push(op.id);\n                return result;\n        }\n    }\n    findAggrFunctionById(funcId) {\n        for (const func of this.aggrFunctions) {\n            if (func.id === funcId)\n                return func;\n        }\n        return null;\n    }\n    /**\n     * Finds link between two entities.\n     * @param entityFrom The entity `from`.\n     * @param entityTo The entity `to`.\n     * @return The link.\n     */\n    findLink(entityFrom, entityTo) {\n        for (let link of this.links) {\n            if (link.entityFrom == entityFrom\n                && link.entityTo == entityTo)\n                return link;\n        }\n        return null;\n    }\n    /**\n     * Get links with the entity.\n     * @param entity The entity.\n     * @return The link.\n     */\n    getLinksByEntity(entity) {\n        const result = [];\n        for (let link of this.links) {\n            if (link.entityFrom == entity || link.entityTo == entity) {\n                result.push(link);\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this._listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this._listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        return super.getEntityPathByAttr(entity, attrId, sep, root);\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        return super.getAttributeText(attr, format);\n    }\n    getFirstUICAttr() {\n        return this.getFirstUICAttrInEntity(this.getRootEntity());\n    }\n    /**\n     * Gets first `UIC` attribute in specified entity\n     * (`UIC` stands for `use in conditions` - so such attribute can be used in conditions)\n     * @param entity Entity object to search our attribute in.\n     * @returns The entity attribute or `null`\n     */\n    getFirstUICAttrInEntity(entity) {\n        if (entity.useInConditions !== false) {\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; i < attrCount; i++) {\n                    if (entity.attributes[i].useInConditions) {\n                        return entity.attributes[i];\n                    }\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; i < subEntityCount; i++) {\n                    let result = this.getFirstUICAttrInEntity(entity.subEntities[i]);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n    /**\n     * Finds operator in model by its ID.\n     * This function runs through all operators inside specified model and returns the one with specified ID.\n     * @param operatorId An operator ID.\n     * @returns The operator or `null`.\n     */\n    findOperatorById(operatorId) {\n        if (this.operators.length > 0) {\n            let opCount = this.operators.length;\n            for (let idx = 0; idx < opCount; idx++) {\n                if (this.operators[idx].id == operatorId) {\n                    return this.operators[idx];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Finds operator in model by its ID.\n     * his function runs through all operators inside specified model and returns the one with specified ID.\n     * @param operatorId Operator ID.\n     * @returns The operator or special `NullOperator` object if operator is not found.\n     */\n    getOperatorById(operatorId) {\n        let op = this.findOperatorById(operatorId);\n        if (!op)\n            return this.nullOperator;\n        return op;\n    }\n    getDefaultOperatorIdForAttr(attr) {\n        if (attr.defaultOperator) {\n            return attr.defaultOperator;\n        }\n        else if (attr.operators.length > 0) {\n            return attr.operators[0];\n        }\n        else {\n            return this.nullOperator.id;\n        }\n    }\n    /**\n     * Gets caption of the aggregate function.\n     * @param funcId The function id.\n     * @returns The caption.\n     */\n    getAggrFunctionCaption(funcId) {\n        let funcTexts = i18n.getText('AggregateFunctions', funcId);\n        let funcCaption = funcTexts ? funcTexts.caption : i18n.getText('Aggr' + funcId.replace(' ', '') + '_Caption');\n        if (funcCaption) {\n            return funcCaption;\n        }\n        let func = utils.findItemById(this.aggrFunctions, funcId);\n        if (!func || !func.caption)\n            return funcId;\n        return func.caption;\n    }\n    /**\n     * Gets format of the aggregate function.\n     * @param funcId The function id.\n     * @returns The caption.\n     */\n    getAggrFunctionFormat(funcId) {\n        let funcTexts = i18n.getText('AggregateFunctions', funcId);\n        let funcFormat = funcTexts ? funcTexts.displayFormat : i18n.getText('Aggr' + funcId.replace(' ', '') + '_Format');\n        if (funcFormat) {\n            return funcFormat;\n        }\n        let func = utils.findItemById(this.aggrFunctions, funcId);\n        if (!func || !func.displayFormat)\n            return '';\n        return func.displayFormat;\n    }\n    /**\n     * Gets default operator for an attribute.\n     * @param attr The attribute.\n     * @returns The operator.\n     */\n    getDefaultOperatorForAttr(attr) {\n        let operatorId = this.getDefaultOperatorIdForAttr(attr);\n        return this.getOperatorById(operatorId);\n    }\n    /**\n     * Gets operand.\n     * @param attr The attribute.\n     * @param operator The operator.\n     * @param index The index.\n     * @returns The operand.\n     */\n    getOperand(attr, operator, index) {\n        let defOperand = new Operand();\n        if (operator && operator.defaultOperand) {\n            defOperand.copyFrom(operator.defaultOperand);\n            if (!defOperand.defValue) {\n                defOperand.defValue = '';\n            }\n            if (!defOperand.defText) {\n                defOperand.defText = '';\n            }\n        }\n        else {\n            defOperand.kind = DataKind.Scalar;\n            defOperand.dataType = attr.dataType;\n            defOperand.defValue = '';\n            defOperand.defText = '';\n            defOperand.editor = null;\n        }\n        let result = defOperand;\n        if (result.dataType === DataType.Unknown && attr) {\n            result.dataType = attr.dataType;\n        }\n        if (operator && (index >= 0)) {\n            if (operator.operands && operator.operands[index - 1]) {\n                result = utils.assign(result, operator.operands[index - 1]);\n            }\n        }\n        if (!result.editor) {\n            if (defOperand.editor) {\n                result.editor = defOperand.editor;\n            }\n            else if (defOperand.kind === DataKind.Query) {\n                result.editor.tag = EqEditorTag.SubQuery;\n            }\n            else if (attr && attr.defaultEditor) {\n                result.editor = attr.defaultEditor;\n            }\n            else if (result.dataType === DataType.Date || result.dataType === DataType.DateTime\n                || result.dataType === DataType.Time) {\n                result.editor.tag = EqEditorTag.DateTime;\n            }\n            else {\n                result.editor.tag = EqEditorTag.Edit;\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets the list of aggegate functions.\n     * @returns AN array of aggregate functions.\n     */\n    getAggrFunctions() {\n        return this.aggrFunctions;\n    }\n    /**\n     * Checks wether macro value is date.\n     * @param macroExpr The macro value.\n     * @retruns `true` if the macro value is date, otherwise `false`.\n     */\n    isDateMacro(macroExpr, macroProcessor) {\n        const match = macroExpr.match(/\\${{?(.*?)}?}/);\n        if (match != null) {\n            const macroId = match[1];\n            if (utils.indexOfArrayItem(this.dateMacros, macroId) >= 0) {\n                if (macroProcessor) {\n                    macroProcessor(macroId);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks whether the expression passed in the parameter is an time macro.\n     * @param macroExpr The macro expression\n     * @retruns `true` if the expression is a time macro (like Now), otherwise `false`.\n     */\n    isTimeMacro(macroExpr, macroProcessor) {\n        const match = macroExpr.match(/\\${{?(.*?)}?}/);\n        if (match != null) {\n            const macroId = match[1];\n            if (utils.indexOfArrayItem(this.timeMacros, macroId) >= 0) {\n                if (macroProcessor) {\n                    macroProcessor(macroId);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Gets date by its macro value.\n     * @param macroExpr The macro value.\n     * @returns The date or `null`\n     */\n    getDateMacroValue(macroExpr) {\n        let d = new Date();\n        const res = this.isDateMacro(macroExpr, macroId => {\n            switch (macroId) {\n                case 'Today':\n                    break;\n                case 'Yesterday':\n                    d.setDate(d.getDate() - 1);\n                    break;\n                case 'Tomorrow':\n                    d.setDate(d.getDate() + 1);\n                    break;\n                case 'FirstDayOfMonth':\n                    d.setDate(1);\n                    break;\n                case 'LastDayOfMonth':\n                    d.setMonth(d.getMonth() + 1, 0);\n                    break;\n                case 'FirstDayOfPrevWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() - day);\n                    break;\n                case 'FirstDayOfWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() - day);\n                    break;\n                case 'FirstDayOfYear':\n                    d.setMonth(0, 1);\n                    break;\n                case 'FirstDayOfNextWeek':\n                    var day = d.getDay();\n                    day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n                    d.setDate(d.getDate() + day);\n                    break;\n                case 'FirstDayOfNextMonth':\n                    d.setMonth(d.getMonth() + 1, 1);\n                    break;\n                case 'FirstDayOfPrevMonth':\n                    d.setMonth(d.getMonth() - 1, 1);\n                    break;\n                case 'FirstDayOfPrevYear':\n                    d.setFullYear(d.getFullYear() - 1, 0, 1);\n                    break;\n                case 'FirstDayOfNextYear':\n                    d.setFullYear(d.getFullYear() + 1, 0, 1);\n                    break;\n            }\n        });\n        return res ? d : null;\n    }\n    /**\n    * Gets the date value by a macro expression of the expression itself.\n    * @param macroExpr The macro value.\n    * @returns The date or macro valu.\n    */\n    getDateOrMacroValue(macroExpr) {\n        let d = this.getDateMacroValue(macroExpr);\n        return d ? d : macroExpr;\n    }\n    /**\n    * Gets time by its macro value.\n    * @param macroExpr The macro value.\n    * @returns The date or `null`.\n    */\n    getTimeMacroValue(macroExpr) {\n        let d = new Date();\n        const res = this.isDateMacro(macroExpr, macroId => {\n            switch (macroId) {\n                case 'Now':\n                    break;\n                case 'HourStart':\n                    d.setMinutes(0, 0, 0);\n                    break;\n                case 'Midnight':\n                    d.setHours(0, 0, 0, 0);\n                    break;\n                case 'Noon':\n                    d.setHours(12, 0, 0, 0);\n                    break;\n            }\n        });\n        return res ? d : null;\n    }\n    /**\n     * Gets a time value by macor or the macro itself.\n     * @param time The macro or time value.\n     * @returns The time value or a macro that represents a particular time.\n     */\n    getTimeOrMacroValue(time) {\n        var t = this.getTimeMacroValue(time);\n        return t ? t : time;\n    }\n    // /**\n    //  * Gets all date marcos.\n    //  * @returns The array of marcos\n    //  */\n    getAllDateMacros() {\n        return this.dateMacros;\n    }\n    /**\n     * Gets all time marcos.\n     * @returns The array of marcos\n     */\n    getAllTimeMacros() {\n        return this.timeMacros;\n    }\n}\n\n/** Contains several constant definitions for expressions tag */\nvar ExprTag;\n(function (ExprTag) {\n    /** Unknown expression */\n    ExprTag[ExprTag[\"Unknown\"] = 0] = \"Unknown\";\n    /** Constant expression */\n    ExprTag[ExprTag[\"Constant\"] = 1] = \"Constant\";\n    /** Entity attributre expression */\n    ExprTag[ExprTag[\"EntityAttribute\"] = 2] = \"EntityAttribute\";\n    /** Parent entity attribute expression */\n    ExprTag[ExprTag[\"ParentEntityAttribute\"] = 3] = \"ParentEntityAttribute\";\n    /** Agrregate function expression */\n    ExprTag[ExprTag[\"AggregateFunction\"] = 4] = \"AggregateFunction\";\n    /** Parent column expression */\n    ExprTag[ExprTag[\"ParentColumn\"] = 5] = \"ParentColumn\";\n    /** Query expression */\n    ExprTag[ExprTag[\"Query\"] = 11] = \"Query\";\n    /** Custom sql expression */\n    ExprTag[ExprTag[\"CustomSql\"] = 21] = \"CustomSql\";\n})(ExprTag || (ExprTag = {}));\n\n/**\n * Represents expression object.\n */\nclass Expression {\n    /** The default constructor. */\n    constructor(parent) {\n        this.parent = parent;\n        /** The tag. */\n        this.tag = ExprTag.Constant;\n        /** The data kind. */\n        this.kind = DataKind.Scalar;\n        /** The data type. */\n        this.dataType = DataType.Unknown;\n        /** The value. */\n        this._value = ''; //DO NOT forget remove any\n        /**\n         * The distinct option. (e.g `SELECT DISTINCT`)\n         */\n        this.distinct = false;\n        this._isDefaultValue = false;\n        this.getText = () => this.text || this._value;\n        this.args = new Array();\n    }\n    getParent() {\n        return this.parent;\n    }\n    getModel() {\n        return this.parent.getQuery().getModel();\n    }\n    /**\n     * Loads expression from its JSON representation object.\n     * @param model The Data Model.\n     * @param data The JSON representation object.\n     */\n    loadFromData(model, data) {\n        if (data) {\n            this.tag = data.tag;\n            if (data.val) {\n                this._value = data.val;\n                this.text = data.txt;\n            }\n            else if (data.id) {\n                this.kind = DataKind.Attribute;\n                this._value = data.id;\n                this.text = data.txt;\n            }\n            if (typeof data.dtype !== 'undefined') {\n                this.dataType = data.dtype;\n            }\n            if (this.tag == ExprTag.EntityAttribute\n                || this.tag == ExprTag.ParentEntityAttribute) {\n                this.kind = DataKind.Attribute;\n                //We don't load other info for EntityAttr\n            }\n            else {\n                if (typeof data.kind !== 'undefined') {\n                    this.kind = data.kind;\n                }\n                if (data.query) {\n                    this.subQuery = this.parent.getQuery().createSubQuery();\n                    this.subQuery.loadFromDataOrJson(data.query);\n                }\n                if (typeof data.distinct !== 'undefined') {\n                    this.distinct = data.distinct;\n                }\n                if (data.func) {\n                    this.func = data.func;\n                    if (data.args) {\n                        for (let i = 0; i < data.args.length; i++) {\n                            const arg = new Expression(this.parent);\n                            arg.loadFromData(model, data.args[i]);\n                            this.args.push(arg);\n                        }\n                    }\n                }\n                if (data.sql) {\n                    this.sql = data.sql;\n                    this.baseAttrId = data.baseAttrId;\n                }\n            }\n        }\n    }\n    /**\n    * Saves expression from JSON representation object.\n    * @returns The JSON representation object.\n    */\n    saveToData() {\n        let obj = {\n            tag: this.tag\n        };\n        obj.dtype = this.dataType;\n        //Do not save other info for EntityAttr\n        if (this.tag == ExprTag.EntityAttribute || this.tag == ExprTag.ParentEntityAttribute) {\n            if (this._value) {\n                obj.id = this._value;\n                obj.val = this._value;\n            }\n            if (this.text) {\n                obj.txt = this.text;\n            }\n            //Do not save other info for EntityAttr\n        }\n        else {\n            if (this.subQuery) {\n                obj.query = this.subQuery.toJSONData();\n            }\n            if (typeof this.kind !== \"undefined\") {\n                obj.kind = this.kind;\n            }\n            if (this._value) {\n                obj.val = this._value;\n            }\n            if (this.text) {\n                obj.txt = this.text;\n            }\n            if (this.distinct) {\n                obj.distinct = this.distinct;\n            }\n            if (this.func) {\n                obj.func = this.func;\n                obj.args = [];\n                for (let i = 0; i < this.args.length; i++) {\n                    obj.args.push(this.args[i].saveToData());\n                }\n            }\n            if (this.sql) {\n                obj.sql = this.sql;\n                obj.baseAttrId = this.baseAttrId;\n            }\n        }\n        return obj;\n    }\n    getIndex() {\n        return this.parent.getExpressionIndex(this);\n    }\n    get value() {\n        return this._value;\n    }\n    setValue(val, silent = false) {\n        this.setContent(val, undefined, silent);\n    }\n    setContent(val, txt, silent = false) {\n        let oldValue = this.value;\n        if (this.kind == DataKind.Attribute && val) {\n            const attr = this.getModel().getAttributeById(val);\n            if (!attr) {\n                throw \"No such entity attribute:\" + val;\n            }\n            this.dataType = attr.dataType;\n        }\n        this._value = val;\n        if (typeof txt !== 'undefined') {\n            this.text = txt;\n        }\n        else if (typeof this.text !== 'undefined') {\n            this.text = val;\n        }\n        this._isDefaultValue = false;\n        if (!silent) {\n            this.parent.expressionChanged(this, oldValue);\n        }\n    }\n    isEmpty() {\n        return !(this.text || this._value);\n    }\n    hasText() {\n        return this.text && this.text.length > 0;\n    }\n    tryCopyValueFrom(expr) {\n        if (this.kind == expr.kind) {\n            if (this.dataType == expr.dataType) {\n                this.setContent(expr.value.length ? expr.value : this._value, (expr.text && expr.text.length) ? expr.text : this.text, true);\n            }\n            else {\n                const val = equtils.convertValue(expr.value, expr.dataType, this.dataType);\n                this.setContent(val.length ? val : this._value, (expr.text && expr.text.length) ? expr.text : this.text, true);\n            }\n            this.subQuery = expr.subQuery;\n            this.sql = expr.sql;\n            this.baseAttrId = expr.baseAttrId;\n        }\n        else if (!this._isDefaultValue) {\n            this.setContent('', '', true);\n            this.subQuery = null;\n            this.sql = null;\n            this.baseAttrId = null;\n        }\n    }\n}\n\nvar QueryChangePart;\n(function (QueryChangePart) {\n    QueryChangePart[QueryChangePart[\"Conditions\"] = 1] = \"Conditions\";\n    QueryChangePart[QueryChangePart[\"Columns\"] = 2] = \"Columns\";\n    QueryChangePart[QueryChangePart[\"SortingColumns\"] = 4] = \"SortingColumns\";\n    QueryChangePart[QueryChangePart[\"Properties\"] = 32] = \"Properties\";\n    QueryChangePart[QueryChangePart[\"ExtraData\"] = 64] = \"ExtraData\";\n    QueryChangePart[QueryChangePart[\"Facets\"] = 128] = \"Facets\";\n    QueryChangePart[QueryChangePart[\"Aggregation\"] = 256] = \"Aggregation\";\n    QueryChangePart[QueryChangePart[\"All\"] = 511] = \"All\";\n})(QueryChangePart || (QueryChangePart = {}));\nvar QueryChangeAction;\n(function (QueryChangeAction) {\n    QueryChangeAction[QueryChangeAction[\"Add\"] = 1] = \"Add\";\n    QueryChangeAction[QueryChangeAction[\"Modify\"] = 2] = \"Modify\";\n    QueryChangeAction[QueryChangeAction[\"Delete\"] = 4] = \"Delete\";\n    QueryChangeAction[QueryChangeAction[\"Activate\"] = 8] = \"Activate\";\n    QueryChangeAction[QueryChangeAction[\"All\"] = 127] = \"All\";\n})(QueryChangeAction || (QueryChangeAction = {}));\n\n/** Represents sorting direction. */\nvar SortDirection;\n(function (SortDirection) {\n    /** No sorting. */\n    SortDirection[SortDirection[\"None\"] = 0] = \"None\";\n    /** Ascending order. */\n    SortDirection[SortDirection[\"Ascending\"] = 1] = \"Ascending\";\n    /** Descending order. */\n    SortDirection[SortDirection[\"Descending\"] = 2] = \"Descending\";\n})(SortDirection || (SortDirection = {}));\n/**\n * Represents some column which will be queried\n */\nclass QueryColumn {\n    get id() {\n        return this._id;\n    }\n    /** Column sorting direction */\n    get sorting() {\n        if (this.query) {\n            return this.query.getColumnSorting(this);\n        }\n        else {\n            return this._sorting;\n        }\n    }\n    ;\n    set sorting(direction) {\n        if (this.query) {\n            this.query.setColumnSorting(this, direction);\n        }\n        else {\n            this._sorting = direction;\n        }\n    }\n    /** The index of the column in the sorting list. */\n    get sortIndex() {\n        if (this.query) {\n            return this.query.getColumnSortIndex(this);\n        }\n        else {\n            return this._sortIndex;\n        }\n    }\n    ;\n    set sortIndex(index) {\n        if (this.query) {\n            this.query.setColumnSortIndex(this, index);\n        }\n        else {\n            this._sortIndex = index;\n        }\n    }\n    ;\n    /** the default constructor. */\n    constructor(query, justsorted = false) {\n        this.query = query;\n        this.justsorted = justsorted;\n        /** Column is enabled */\n        this.enabled = true;\n        /** The parameters associated with this column */\n        this.params = [];\n        this._isHidden = false;\n        this.query = query;\n        this._id = utils.generateId('col');\n        this.caption = '';\n        this._sorting = SortDirection.None;\n        this._sortIndex = -1;\n        this.expr = new Expression(this);\n        this.blockId = '';\n        this.justsorted = justsorted;\n    }\n    getModel() {\n        return this.query.getModel();\n    }\n    getQuery() {\n        return this.query;\n    }\n    /** Indicates whether this column is read-only */\n    isReadOnly() {\n        return false;\n    }\n    /** Indicates whether this column is just-sorted */\n    isJustSorted() {\n        return this.justsorted;\n    }\n    setReadOnly(value) {\n        //do nothing. Read-only columns are not supported here\n    }\n    /** Indicates whether this column is invisible */\n    isHidden() {\n        return this._isHidden;\n    }\n    setHidden(value) {\n        this._isHidden = value;\n    }\n    getDataType() {\n        if (this.expr.dataType === DataType.Unknown) {\n            let attrId = null;\n            if (this.expr.func) {\n                if (this.expr.func == \"COUNT\" || this.expr.func == \"CNTDST\")\n                    return DataType.Int64;\n                attrId = this.expr.args[0].value;\n            }\n            else {\n                attrId = this.expr.value;\n            }\n            const attr = this.query.getModel()\n                .getAttributeById(attrId);\n            if (attr)\n                return attr.dataType;\n        }\n        return this.expr.dataType;\n    }\n    /**\n      * Loads column from its JSON representation object.\n      * @param model The Data Model.\n      * @param colData The JSON representation object.\n      */\n    loadFromData(model, colData) {\n        if (colData) {\n            if (colData.id) {\n                this._id = colData.id;\n            }\n            this.caption = colData.cptn;\n            if (typeof colData.srt !== 'undefined') {\n                this._sorting = colData.srt;\n                this._sortIndex = (typeof colData.srtidx !== 'undefined')\n                    ? colData.srtidx\n                    : -1;\n            }\n            if (colData.enabled === false) {\n                this.enabled = colData.enabled;\n            }\n            this.expr.loadFromData(model, colData.expr);\n            this.blockId = colData.blockId;\n            this.displayFormat = colData.dfmt;\n            this.groupFooterColumnTemlate = colData.gfct;\n            if (colData.hidden) {\n                this.setHidden(true);\n            }\n        }\n    }\n    /**\n     * Saves the column to a data transfer object (ready for sending to the server-side) .\n     * @returns An plain object that represents the column.\n     */\n    saveToData() {\n        let obj = {};\n        obj.id = this._id;\n        if (typeof this.caption !== 'undefined') {\n            obj.cptn = this.caption;\n        }\n        if (this.sorting != SortDirection.None) {\n            obj.srt = this.sorting;\n            obj.srtidx = this.sortIndex;\n        }\n        obj.expr = this.expr.saveToData();\n        if (this.blockId) {\n            obj.blockId = this.blockId;\n        }\n        if (this.enabled === false) {\n            obj.enabled = this.enabled;\n        }\n        obj.dfmt = this.displayFormat;\n        obj.gfct = this.groupFooterColumnTemlate;\n        if (this.isHidden()) {\n            obj.hidden = true;\n        }\n        return obj;\n    }\n    fireChangedEvent() {\n        this.query.fireChangedEvent({\n            part: (this.justsorted)\n                ? QueryChangePart.SortingColumns\n                : QueryChangePart.Columns,\n            action: QueryChangeAction.Modify,\n            changee: this\n        });\n    }\n    getExpressionIndex(expr) {\n        return 0;\n    }\n    expressionChanged(expr, oldValue) {\n    }\n}\n\n/**\n * Represents a type of condition.\n * Current we have 2 possible types: a simple condition or a predicate - a group of conditions\n*/\nvar CondTag;\n(function (CondTag) {\n    /** An unknown type of condition (just in case).*/\n    CondTag[CondTag[\"Unknown\"] = 0] = \"Unknown\";\n    /** A simple condition (e.g. SomeField > SomeValue).*/\n    CondTag[CondTag[\"Simple\"] = 1] = \"Simple\";\n    /** A predicate (a group of conditions).*/\n    CondTag[CondTag[\"Group\"] = 51] = \"Group\";\n})(CondTag || (CondTag = {}));\n\nvar ConditionPart;\n(function (ConditionPart) {\n    ConditionPart[ConditionPart[\"EntityAttr\"] = 2] = \"EntityAttr\";\n    ConditionPart[ConditionPart[\"Operator\"] = 4] = \"Operator\";\n    ConditionPart[ConditionPart[\"Value\"] = 8] = \"Value\";\n    ConditionPart[ConditionPart[\"All\"] = 14] = \"All\";\n})(ConditionPart || (ConditionPart = {}));\n\n/**\n * Represents some condition.\n */\nclass Condition {\n    get id() {\n        return this._id;\n    }\n    get enabled() {\n        return this._enabled && (!this.getParent() || this.getParent().enabled);\n    }\n    set enabled(value) {\n        this._enabled = value && (!this.getParent() || this.getParent().enabled);\n        this.conditions && this.conditions.forEach((cond) => {\n            cond.enabled = value;\n        });\n    }\n    /**\n     * The default constructor.\n     * @param tag The condition tag\n     */\n    constructor(query, tag) {\n        this.query = query;\n        /**\n         *  The linking type.\n         */\n        this.linkType = LinkType.All; //only for predicates\n        this.parent = null;\n        this._id = utils.generateId('cond');\n        this.justAdded = false;\n        this.tag = tag || CondTag.Unknown;\n        this.enabled = true;\n        this.operatorId = '';\n        this.blockId = '';\n        this.expressions = new Array();\n        this.conditions = new Array();\n    }\n    getQuery() {\n        return this.query;\n    }\n    getModel() {\n        return this.query.getModel();\n    }\n    getParent() {\n        return this.parent;\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getConditions() {\n        return this.conditions;\n    }\n    isEmpty() {\n        return this.conditions.length === 0;\n    }\n    isGroup() {\n        return (this.tag == CondTag.Group) || (this.parent == null);\n    }\n    getLevel() {\n        const parent = this.getParent();\n        return parent ? parent.getLevel() + 1 : 0;\n    }\n    /**\n     * Indicates whether this condition is read-only.\n     */\n    isReadOnly() {\n        return false;\n    }\n    setReadOnly(value) {\n    }\n    /**\n     * The value indicating whether this condition is parameterized.\n     */\n    isParameterized() {\n        return false;\n    }\n    setParameterized(value) {\n    }\n    /**\n     * Indicates whether this condition must be placed into `JOIN` clause in result `SQL`.\n     */\n    isInJoin() {\n        return false;\n    }\n    setInJoin(value) {\n    }\n    clearConditions() {\n        this.conditions = [];\n    }\n    addCondition(cond) {\n        cond.setParent(this);\n        return this.conditions.push(cond);\n    }\n    removeConditionAt(index) {\n        this.conditions.splice(index, 1);\n    }\n    /**\n    * Loads condtion from its JSON representation object.\n    * @param model The Data Model.\n    * @param data The JSON representation object.\n    */\n    loadFromData(model, data) {\n        if (data) {\n            this.tag = data.tag;\n            if (!this.tag) {\n                this.tag = (!this.parent || this.conditions.length > 0) ? CondTag.Group : CondTag.Simple;\n            }\n            if (typeof data.enabled !== 'undefined') {\n                this.enabled = data.enabled;\n            }\n            if (typeof data.disabled !== 'undefined') {\n                this.enabled = !data.disabled;\n            }\n            if (this.tag == CondTag.Simple) {\n                this.operatorId = data.op;\n                if (data.exprs) {\n                    for (let i = 0; i < data.exprs.length; i++) {\n                        let newExpr = new Expression(this);\n                        newExpr.loadFromData(model, data.exprs[i]);\n                        this.expressions.push(newExpr);\n                    }\n                }\n            }\n            this.linkType = data.linking;\n        }\n    }\n    /**\n     * Saves condition to JSON representation object.\n     * @returns The JSON representation object.\n     */\n    saveToData() {\n        let obj = {};\n        obj.tag = this.tag;\n        if (!this.enabled) {\n            obj.enabled = this.enabled;\n        }\n        if (this.tag == CondTag.Simple) {\n            obj.op = this.operatorId;\n            obj.exprs = [];\n            for (let i = 0; i < this.expressions.length; i++) {\n                obj.exprs.push(this.expressions[i].saveToData());\n            }\n        }\n        if (this.tag == CondTag.Group) {\n            //if condition group\n            obj.linking = this.linkType;\n        }\n        return obj;\n    }\n    fireChangedEvent(condPart = ConditionPart.All) {\n        this.query.fireChangedEvent({\n            part: QueryChangePart.Conditions,\n            action: QueryChangeAction.Modify,\n            changee: this,\n            condPart: condPart\n        });\n    }\n    getExpressionIndex(expr) {\n        return this.expressions.indexOf(expr, 0);\n    }\n    expressionChanged(expr, oldValue) {\n        if (expr.getIndex() == 0 && expr.tag == ExprTag.EntityAttribute) {\n            //this is a base entity attribute, we need to re-pack the whole condition\n            this.tuneOperatorForAttr(expr.value);\n        }\n    }\n    getOperatorId() {\n        return this.operatorId;\n    }\n    setOperatorId(newOperatorId, silent = false) {\n        const oldOperatorId = this.operatorId;\n        this.operatorId = newOperatorId;\n        if (!silent) {\n            const model = this.getModel();\n            const operator = model.getOperatorById(newOperatorId);\n            const attrId = this.expressions[0].value;\n            const attr = model.getAttributeById(attrId);\n            this.tuneValueExpressions(attr, operator, attr.id, oldOperatorId);\n        }\n    }\n    tuneOperatorForAttr(oldAttrId) {\n        const model = this.getModel();\n        const attrId = this.expressions[0].value;\n        const attr = model.getAttributeById(attrId);\n        if (attr != null) {\n            let newOperator = this.getModel().getDefaultOperatorForAttr(attr);\n            let oldOperatorId = this.operatorId;\n            this.operatorId = newOperator.id;\n            this.tuneValueExpressions(attr, newOperator, oldAttrId, oldOperatorId);\n        }\n    }\n    tuneValueExpressions(attr, operator, oldAttrId, oldOperatorId) {\n        const model = this.getModel();\n        if (!operator)\n            return;\n        let exprCount = this.expressions.length;\n        oldAttrId ? model.getAttributeById(oldAttrId) : null;\n        let oldOperator = null;\n        if (oldOperatorId) {\n            oldOperator = model.getOperatorById(oldOperatorId);\n        }\n        if (oldOperator && oldOperator.paramCount == operator.paramCount) {\n            //add  necessary expressions\n            let i = 1;\n            while (i < operator.paramCount) {\n                let oldOperand = model.getOperand(attr, oldOperator, i);\n                let operand = model.getOperand(attr, operator, i);\n                if (operand.dataType == DataType.Unknown) {\n                    operand.dataType = attr.dataType;\n                }\n                const editor = operand.editor && operand.editor.tag !== EditorTag.Unknown\n                    ? operand.editor\n                    : (attr.defaultEditor && attr.defaultEditor.tag !== EditorTag.Unknown\n                        ? attr.defaultEditor\n                        : new EqValueEditor());\n                if (i >= exprCount) {\n                    var valExpr = this.createValueExpr(operand);\n                    this.expressions.push(valExpr);\n                }\n                else {\n                    var oldExpr = this.expressions[i];\n                    //create new value expression according to the corresponding operand\n                    var newExpr = this.createValueExpr(operand);\n                    if (this.areCompitableEditors(oldOperand.editor, editor)) {\n                        newExpr.tryCopyValueFrom(oldExpr);\n                    }\n                    this.expressions[i] = newExpr;\n                }\n                i++;\n            }\n            if (exprCount > i) {\n                //remove all redundant expressions\n                this.expressions.splice(i, exprCount - i);\n            }\n        }\n        else {\n            this.expressions.splice(1, this.expressions.length - 1);\n            for (let i = 1; i < operator.paramCount; i++) {\n                let operand = model.getOperand(attr, operator, i);\n                if (operand.dataType == DataType.Unknown) {\n                    operand.dataType = attr.dataType;\n                }\n                var valExpr = this.createValueExpr(operand);\n                this.expressions.push(valExpr);\n            }\n        }\n    }\n    areCompitableEditors(oldEditor, newEditor) {\n        if (newEditor.tag != oldEditor.tag)\n            return false;\n        if (newEditor.resType != oldEditor.resType)\n            return false;\n        return true;\n    }\n    addExpressionByOperand(operand, val = null) {\n        let expr = this.createValueExpr(operand, val);\n        this.expressions.push(expr);\n        return expr;\n    }\n    createValueExpr(operand, val = null) {\n        let valueNotDefined = val === null || typeof val === 'undefined';\n        let value = val ? val : operand.defValue;\n        let text = val ? val : operand.defText;\n        let result = new Expression(this);\n        if (operand.kind === DataKind.Query) {\n            result.tag = ExprTag.Query;\n            result.dataType = operand.dataType;\n            result.kind = operand.kind;\n            result.setContent(value, text, true);\n        }\n        else if (operand.kind === DataKind.Attribute) {\n            if (!valueNotDefined) {\n                let defAttr = this.getModel().getFirstAttributeByFilter((attr) => {\n                    return attr.useInConditions == true && (!operand.dataType || attr.dataType == operand.dataType);\n                });\n                value = defAttr ? defAttr.id : null;\n            }\n            result.tag = ExprTag.EntityAttribute;\n            result.kind = operand.kind;\n            result.dataType = operand.dataType;\n            result.setContent(value, text, true);\n        }\n        else {\n            if (valueNotDefined) {\n                if (operand.defValue && operand.defValue != \"\") {\n                    value = operand.defValue;\n                }\n                else {\n                    if (operand.editor && operand.editor.defValue) {\n                        value = operand.editor.defValue;\n                    }\n                    else {\n                        value = '';\n                    }\n                }\n                if (operand.editor) {\n                    text = operand.editor.getValueText(value);\n                }\n            }\n            result.tag = ExprTag.Constant;\n            result.dataType = operand.dataType;\n            result.kind = operand.kind;\n            result.setContent(value, text, true);\n            result._isDefaultValue = valueNotDefined;\n        }\n        return result;\n    }\n}\n\nclass Tree {\n    constructor(value = null) {\n        this.childs = [];\n        this.value = null;\n        this.parent = null;\n        if (value) {\n            if (Array.isArray(value)) {\n                this.value = value[0];\n                if (value.length > 1) {\n                    this.addChild(new Tree(value.slice(1)));\n                }\n            }\n            else if (value instanceof Tree) {\n                this.value = value.value;\n                this.childs = value.childs;\n            }\n            else {\n                this.value = value;\n            }\n        }\n    }\n    contains(value) {\n        if (this.value === value)\n            return true;\n        for (let child of this.childs) {\n            if (child.contains(value))\n                return true;\n        }\n        return false;\n    }\n    findNode(value) {\n        if (this.value === value)\n            return this;\n        for (let child of this.childs) {\n            let result = child.findNode(value);\n            if (result)\n                return result;\n        }\n        return null;\n    }\n    addChild(child) {\n        child.parent = this;\n        this.childs.push(child);\n    }\n    setParents() {\n        for (let child of this.childs) {\n            child.parent = this;\n            child.setParents();\n        }\n    }\n}\n\n/**\n * The error that appears when the query is not valid\n */\nclass InvalidQueryError extends Error {\n    /**\n     * Creates an instance of error type.\n     * @param message The error message\n     */\n    constructor(message) {\n        super(message);\n        if (typeof Error[\"captureStackTrace\"] === \"function\") {\n            Error[\"captureStackTrace\"].apply(this, [InvalidQueryError]);\n        }\n        this.name = 'InvalidQueryError';\n    }\n}\n/**\n * Represents Query.\n */\nclass Query {\n    isModified() {\n        return this._isModified;\n    }\n    resetModified() {\n        this._isModified = false;\n    }\n    get enableAggregation() {\n        return this._enableAggregation;\n    }\n    set enableAggregation(value) {\n        const oldValue = this._enableAggregation;\n        this._enableAggregation = value;\n        if (!oldValue && value) {\n            this.processQueryForAggregation();\n            this.columns.filter(c => c.enabled\n                && c.expr.tag == ExprTag.AggregateFunction);\n        }\n        if (!this._enableAggregation) {\n            this.aggrSettings.clear();\n        }\n    }\n    /**\n     * The default constructor.\n     * @param model The data model.\n     * @param data JSON representation object.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    constructor(model, data, options) {\n        /**\n         * Contains user-defined extra data for current query.\n         */\n        this.extraData = {};\n        this.innerData = {};\n        this.isNewbie = true;\n        this._isModified = false;\n        this._enableAggregation = false;\n        this.parentQuery = null;\n        this.drillDowns = [];\n        this.syncSortOrderWithColumnsOrder = true;\n        if (options) {\n            this.context = options.context;\n            if (this.context) {\n                this.syncSortOrderWithColumnsOrder = this.context.options.syncSortOrderWithColumnsOrder;\n            }\n        }\n        this.eventEmitter = new EventEmitter(this);\n        this.root = new Condition(this, CondTag.Group);\n        this.extraConditions = new Condition(this, CondTag.Group);\n        this.columns = new Array();\n        //this.justsorted = new Array<QueryColumn>();\n        this.sortedColumns = new Array();\n        if (!this.id) {\n            this.regenerateId();\n        }\n        this.setDefaultName();\n        this.description = '';\n        this.model = (model) ? model : new DataModel();\n        if (data) {\n            this.loadFromData(data);\n        }\n        this.attributeExprTag = (options) ? options.attrTag || ExprTag.EntityAttribute : ExprTag.EntityAttribute;\n        this.clientListRequestHandler = (options) ? options.clientListRequestHandler : new Array();\n        this.serverListRequestHandler = (options) ? options.serverListRequestHandler : new Array();\n        this.timezoneOffset = (new Date()).getTimezoneOffset();\n        this.aggrSettings = new AggregationSettings(this);\n        if (options) {\n            this.parentQuery = options.parent;\n        }\n        this.addChangedCallback(ev => {\n            if (ev.data\n                && ((ev.data.part & QueryChangePart.Columns) > 0)\n                && !ev.data.aggregation) {\n                if (this._enableAggregation && this.updateAggregationSettings()) {\n                    this.fireChangedEvent({\n                        part: QueryChangePart.Aggregation\n                    });\n                }\n            }\n        });\n    }\n    updateAggregationSettings() {\n        let hasChanged = false;\n        const aggrSettings = this.getAggregationSettings();\n        for (let i = aggrSettings.groups.length - 1; i >= 0; i--) {\n            const group = aggrSettings.groups[i];\n            for (let j = group.columns.length - 1; j >= 0; j--) {\n                const colId = group.columns[j];\n                if (!this.columns.find(col => col.id === colId)) {\n                    group.columns.splice(j, 1);\n                    hasChanged = true;\n                }\n            }\n            if (group.columns.length == 0) {\n                aggrSettings.groups.splice(i, 1);\n            }\n        }\n        const aggregates = aggrSettings.getAggregates();\n        for (let i = aggregates.length - 1; i >= 0; i--) {\n            const aggr = aggregates[i];\n            if (!this.columns.find(col => col.id === aggr.colId)) {\n                aggregates.splice(i, 1);\n                hasChanged = true;\n            }\n        }\n        // const isValidAggration = (aggrSettings.hasGroups() && (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())) \n        //                          || (aggrSettings.hasAggregates && aggrSettings.hasGrandTotals());\n        // if (!isValidAggration) {\n        //     this.enableAggregation = false;\n        // }\n        return hasChanged;\n    }\n    createSubQuery() {\n        return new Query(this.model, null, { parent: this, context: this.context });\n    }\n    useAggregation(settingsTuner, silent = false) {\n        this.aggrSettings.clear();\n        settingsTuner(this.aggrSettings);\n        if (this.enableAggregation) {\n            this.processQueryForAggregation(silent);\n        }\n        else if (!silent) {\n            console.warn('Aggregation is turned off. Turn it on with query.enableAggregation = true');\n            return;\n        }\n    }\n    useDefaultAggregation() {\n        this._enableAggregation = true;\n        this.useAggregation((settings) => {\n            const aggrCols = this.columns.filter(c => c.enabled\n                && c.expr.tag == ExprTag.AggregateFunction);\n            if (aggrCols.length) {\n                // query contains aggregate columns\n                const colsToGroup = this.columns.filter(c => c.enabled\n                    && c.expr.tag == ExprTag.EntityAttribute);\n                const aggrsToAdd = [];\n                for (const col of aggrCols) {\n                    aggrsToAdd.push({ id: col.id, func: col.expr.func });\n                    this.changeColumnType(col, ExprTag.EntityAttribute);\n                }\n                for (const aggr of aggrsToAdd) {\n                    settings.addAggregateColumn(aggr.id, aggr.func);\n                }\n                for (const col of colsToGroup) {\n                    settings.addGroup({ columns: [col.id], name: col.caption });\n                }\n                settings.addGrandTotals();\n                this.fireChangedEvent({\n                    part: QueryChangePart.Columns,\n                    wasModified: false\n                });\n            }\n            else {\n                // query does not has any aggr columns\n                const colToAggr = this.getColumns()\n                    .filter(c => c.enabled && c.expr.tag == ExprTag.EntityAttribute\n                    && this.model.getAttributeById(c.expr.value).dataType === DataType.Currency)[0];\n                const colToGroup = this.getColumns()\n                    .filter(c => c.enabled && c.expr.tag == ExprTag.EntityAttribute\n                    && this.model.getAttributeById(c.expr.value).dataType === DataType.String)[0];\n                if ((!colToAggr && !settings.hasAggregates()) || !colToGroup)\n                    return;\n                settings.addGrandTotals()\n                    .addAggregateColumn(colToAggr.id, 'SUM')\n                    .addGroup({ columns: [colToGroup.id], name: 'Default' });\n            }\n        });\n    }\n    processQueryForAggregation(silent = false) {\n        const aggrSettings = this.getAggregationSettings();\n        const groups = aggrSettings.getGroups();\n        if (groups.length > 0) {\n            const groupColIds = groups[groups.length - 1].columns;\n            //take the list of grouped columns from the latest group\n            let groupedCols = [];\n            let sortedCols = [];\n            for (const col of this.getColumns()) {\n                if (groupColIds.indexOf(col.id) >= 0) {\n                    groupedCols.push(col);\n                }\n                else if (this.getColumnSorting(col) != SortDirection.None) {\n                    sortedCols.push(col);\n                }\n            }\n            let sortIndex = 0;\n            groupedCols.forEach(col => {\n                if (this.getColumnSorting(col) == SortDirection.None) {\n                    this.setColumnSorting(col, SortDirection.Ascending);\n                }\n                this.setColumnSortIndex(col, sortIndex++);\n                //col.sortIndex = sortIndex++;\n            });\n            sortedCols.forEach(col => {\n                this.setColumnSortIndex(col, sortIndex++);\n                //     col.sortIndex = sortIndex++;\n            });\n            if (!silent) {\n                this.fireChangedEvent({\n                    part: QueryChangePart.Columns,\n                    aggregation: true,\n                    wasModified: false\n                });\n            }\n        }\n    }\n    getAggregationSettings() {\n        return this.aggrSettings;\n    }\n    getColumnIds(from, to) {\n        to = to || from;\n        return this.columns.slice(from, to - from + 1)\n            .map(c => c.id);\n    }\n    /**\n     * Checks if the columns with IDs passed in function's parameter exist and are valid\n     */\n    validateColumns(colIds) {\n        const enabledColIds = this.columns.filter(c => c.enabled).map(c => c.id);\n        let prevIndex = -1;\n        for (const col of colIds) {\n            const index = enabledColIds.indexOf(col);\n            if (index < 0)\n                return false;\n            if (prevIndex > index)\n                return false;\n            prevIndex = index;\n        }\n        return true;\n    }\n    validateAggregate(colId, funcId) {\n        const col = this.columns.filter(c => c.enabled && c.id === colId)[0];\n        const func = this.model.findAggrFunctionById(funcId);\n        if (!func || !col || func.appliedTypes.indexOf(col.expr.dataType) < 0)\n            return false;\n        return true;\n    }\n    isEx() {\n        return false;\n    }\n    /**\n     * Resets the query: clears all its conditions and columns, regenerate the ID and sets the default name.\n     * @param clearQuery Indicates whether we need to clear the content of the query on reset (default: true)\n     */\n    reset(clearQuery = true) {\n        if (clearQuery) {\n            this.clear();\n        }\n        this.regenerateId();\n        this.setDefaultName();\n        this._isModified = false;\n        this.isNewbie = true;\n    }\n    hasEnabledAggrColumns() {\n        return this.columns.filter(col => col.enabled\n            && col.expr.tag === ExprTag.AggregateFunction).length > 0;\n    }\n    setDefaultName() {\n        this.setName(i18n.getText('NewQueryName'));\n        return this.getName();\n    }\n    /**\n     * Validates wether the query corresponds to the model.\n     * @param options Validate options.\n     * @throws {InvalidQueryError} If query is not valid.\n     */\n    validate(options) {\n        options = options || {};\n        const entityAttrNotExistError = \"EntityAttribute isn't declared in the model: \";\n        const wrongExprTag = \"The expression has wrond tag: \";\n        if (!this.model) {\n            throw new InvalidQueryError(\"Model is not declared\");\n        }\n        if (this.columns) {\n            for (let column of this.columns) {\n                if (column.expr.tag == ExprTag.EntityAttribute\n                    || column.expr.tag === ExprTag.ParentEntityAttribute) {\n                    const attr = this.model.getAttributeById(column.expr.value);\n                    if (!attr) {\n                        throw new InvalidQueryError(entityAttrNotExistError + column.expr.value);\n                    }\n                }\n                else if (column.expr.tag === ExprTag.AggregateFunction) {\n                    const attr = this.model.getAttributeById(column.expr.args[0].value);\n                    if (!attr) {\n                        throw new InvalidQueryError(entityAttrNotExistError + column.expr.args[0].value);\n                    }\n                }\n                else if (column.expr.tag === ExprTag.Unknown) {\n                    throw new InvalidQueryError(wrongExprTag + column.expr.tag);\n                }\n            }\n        }\n        if (this.root && this.root.getConditions()) {\n            this.validateConditionGroup(this.root, options);\n        }\n    }\n    getAggregatedColumns() {\n        return this.getColumns().filter(col => col.enabled\n            && col.expr.tag === ExprTag.AggregateFunction);\n    }\n    /**\n     * Validates wether the query corresponds to the model.\n     * @param options Validate options.\n     * @returns `true` if it is valid, otherwise `false`\n     */\n    tryValidate(options) {\n        try {\n            this.validate(options);\n            return true;\n        }\n        catch (e) {\n            if (e instanceof InvalidQueryError) {\n                return false;\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    validateConditionGroup(curCond, options) {\n        if (curCond.isGroup()) {\n            for (let condition of curCond.getConditions()) {\n                if (!condition.enabled)\n                    continue;\n                this.validateConditionGroup(condition, options);\n            }\n        }\n        else if (curCond.expressions[0].tag === ExprTag.EntityAttribute) {\n            const attrId = curCond.expressions[0].value;\n            const attr = this.model.getAttributeById(attrId);\n            if (!attr) {\n                throw new InvalidQueryError(\"EntityAttribute isn't declared in the model: \" + attrId);\n            }\n            if (!options.checkExpressions)\n                return;\n            for (let i = 1; i < curCond.expressions.length; i++) {\n                const expr = curCond.expressions[i];\n                if (expr.tag !== ExprTag.Constant)\n                    continue;\n                //validate number exprs\n                if (utils.isNumericType(expr.dataType)) {\n                    if (!expr.value)\n                        continue;\n                    let values = [];\n                    if (expr.kind === DataKind.List) {\n                        values = expr.value.split(/\\s*,\\s*/);\n                    }\n                    else {\n                        values = [expr.value];\n                    }\n                    for (let value of values) {\n                        const parsedVal = +value;\n                        if (isNaN(parsedVal)) {\n                            throw new InvalidQueryError(\"Expression constant is NaN in condition:\" + curCond.id);\n                        }\n                        if (utils.isIntType(expr.dataType) && parsedVal != parseInt(value, 10)) {\n                            throw new InvalidQueryError(\"Expression constant is wrong interger in condition: \" + curCond.id);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Sets data to the query.\n     * @param data A plain JS object that represents the query or a JSON string\n     * @param options An instance of LoadQueryFromDataOptions interface that can contain different loading options\n     */\n    loadFromDataOrJson(data, options) {\n        if (data) {\n            if (typeof data === \"string\") {\n                this.loadFromJson(data, options);\n            }\n            else {\n                this.loadFromData(data, options);\n            }\n        }\n    }\n    /**\n     * Loads query from JSON.\n     * @param json The JSON string.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    loadFromJson(json, options) {\n        let data = JSON.parse(json);\n        this.loadFromData(data, options);\n    }\n    /**\n     * Loads query from data representation.\n     * @param data The query DTO.\n     * @param options The options.\n     * @throws {InvalidQueryError} The error throws when query is not valid.\n     */\n    loadFromData(data, options) {\n        options = utils.assign({\n            changeStatus: true,\n            validate: true\n        }, options || {});\n        let noErrors = false;\n        this.clear();\n        this.clearDrillDowns();\n        if (data) {\n            this.id = data.id;\n            this.root.loadFromData(this.model, data.root);\n            if (data.root && data.root.conds) {\n                for (let i = 0; i < data.root.conds.length; i++) {\n                    const condData = data.root.conds[i];\n                    if (condData.conds && !this.isEx()) {\n                        console.error(\"Community version doesn't support working with groups.\");\n                        continue;\n                    }\n                    const cond = this.createCondition();\n                    cond.loadFromData(this.model, condData);\n                    this.root.addCondition(cond);\n                }\n            }\n            this.name = data.name;\n            if (data.desc) {\n                this.description = data.desc;\n            }\n            this.sortedColumns = [];\n            if (data.justsortcols) {\n                for (let i = 0; i < data.justsortcols.length; i++) {\n                    let newCol = this.createColumn(true);\n                    newCol.loadFromData(this.model, data.justsortcols[i]);\n                    //this.justsorted.push(newCol);\n                    this.addColumnToSorted(newCol);\n                }\n            }\n            if (data.cols) {\n                for (let i = 0; i < data.cols.length; i++) {\n                    let newCol = this.createColumn();\n                    newCol.loadFromData(this.model, data.cols[i]);\n                    this.columns.push(newCol);\n                    if (newCol._sorting != SortDirection.None) {\n                        this.addColumnToSorted(newCol);\n                    }\n                }\n            }\n            this.sortedColumns.sort((col1, col2) => {\n                return col1._sortIndex - col2._sortIndex;\n            });\n            this.fixupSortingIndices();\n            if (data.extraData) {\n                this.extraData = data.extraData;\n            }\n            this.innerData = data.innerData || this.innerData;\n            if (this.innerData && this.innerData.aggr) {\n                this._enableAggregation = this.innerData.aggr.enabled || false;\n                this.useAggregation(settings => {\n                    settings.loadFromData(this.innerData.aggr);\n                }, true);\n            }\n            if (data.dds && data.dds.length) {\n                for (let dd of data.dds) {\n                    const query = this.addDrillDown();\n                    query.loadFromData(dd);\n                }\n            }\n        }\n        if (this._enableAggregation) {\n            this.updateAggregationSettings();\n        }\n        noErrors = true;\n        if (noErrors) {\n            if (options.changeStatus) {\n                this.isNewbie = false;\n                this._isModified = false;\n            }\n        }\n        if (options.validate) {\n            this.validate();\n        }\n    }\n    /**\n     *\n     */\n    addDrillDown() {\n        const query = this.context.createQuery();\n        query.parentQuery = this;\n        this.drillDowns.push(query);\n        return query;\n    }\n    getDrillDowns() {\n        return this.drillDowns;\n    }\n    getParentQuery() {\n        return this.parentQuery;\n    }\n    /**\n     *\n     */\n    findColumnById(colId) {\n        for (let col of this.columns) {\n            if (col.id === colId)\n                return col;\n        }\n        return null;\n    }\n    /**\n     * Gets DataModel object associated with this query.\n     * @retruns The data model.\n     */\n    getModel() {\n        return this.model;\n    }\n    /**\n     * Sets DataModel object associated with this query.\n     * @param model The data model.\n     */\n    setModel(model) {\n        this.model = model;\n    }\n    /**\n     * Loads data model.\n     * @param model JSON representation object or JSON string.\n     */\n    loadModelData(model) {\n        this.model.setData(model);\n    }\n    /**\n     * Returns JSON representation of this query.\n     * @retruns JSON string.\n     */\n    toJSON() {\n        return JSON.stringify(this.toJSONData());\n    }\n    /**\n     * Returns JSON representation of this query.\n     * @retruns JSON representation object.\n     */\n    toJSONData() {\n        this.fixupSortingIndices();\n        let obj = {\n            modelId: this.model ? this.model.getId() : null,\n            modelName: this.model ? this.model.getName() : null\n        };\n        obj.id = this.id;\n        obj.name = this.name;\n        if (this.description) {\n            obj.desc = this.description;\n        }\n        obj.cols = [];\n        for (let i = 0; i < this.columns.length; i++) {\n            obj.cols.push(this.columns[i].saveToData());\n        }\n        obj.justsortcols = [];\n        // for (let i = 0; i < this.justsorted.length; i++) {\n        //     obj.justsortcols.push(this.justsorted[i].saveToData());\n        // }\n        this.sortedColumns.forEach(col => {\n            if (col.isJustSorted()) {\n                obj.justsortcols.push(col.saveToData());\n            }\n        });\n        if (this.extraData) {\n            obj.extraData = this.extraData;\n        }\n        if (this.innerData) {\n            obj.innerData = this.innerData;\n            obj.innerData.aggr = this.aggrSettings.saveToData();\n            obj.innerData.aggr.enabled = this._enableAggregation;\n        }\n        const rootCondToData = (condGroup) => {\n            const result = condGroup.saveToData();\n            result.conds = [];\n            const conditions = condGroup.getConditions();\n            for (let i = 0; i < conditions.length; i++) {\n                if (conditions[i].isGroup() && !this.isEx()) {\n                    console.error(\"Community version doesn't support working with groups.\");\n                    continue;\n                }\n                result.conds.push(conditions[i].saveToData());\n            }\n            return result;\n        };\n        obj.root = rootCondToData(this.root);\n        obj.extraConds = rootCondToData(this.extraConditions);\n        if (this.drillDowns.length > 0) {\n            obj.dds = [];\n            for (let dd of this.drillDowns) {\n                obj.dds.push(dd.toJSONData());\n            }\n        }\n        obj.timezoneOffset = this.timezoneOffset;\n        obj.locale = i18n.getCurrentLocale();\n        return obj;\n    }\n    /**\n     * Checks wether query does not contains any condtion.\n     * @retruns `true` if query does not contain any condition, otherwise `false`.\n     */\n    isEmptyConditions() {\n        return this.root.isEmpty();\n    }\n    /**\n     * Checks wether query does not contains any column.\n     * @retruns `true` if query does not contain any column, otherwise `false`.\n     */\n    isEmptyColumns() {\n        return !this.columns || this.columns.length === 0;\n    }\n    /**\n     * Checks wether query does not contains any column and any condition.\n     * @retruns `true` if query does not contain any column and any condition, otherwise `false`.\n     */\n    isEmpty() {\n        return this.isEmptyColumns() && this.isEmptyConditions();\n    }\n    /**\n     * Clears the query (all conditions, columns, extraData, etc).\n     */\n    clear() {\n        this._enableAggregation = false;\n        this.aggrSettings.clear();\n        this.clearColumns();\n        this.clearConditions();\n        this.clearExtraConditions();\n        this.innerData = {};\n        this.extraData = {};\n    }\n    /**\n     * Clears all columns in query\n     */\n    clearColumns() {\n        this.columns = [];\n        //this.justsorted = [];\n        this.sortedColumns = [];\n    }\n    /**\n     * Clears all conditions in query.\n     */\n    clearConditions() {\n        this.root.clearConditions();\n        this.root.linkType = LinkType.All;\n        this.root.enabled = true;\n    }\n    /**\n     * Clears all extra conditions in query\n     */\n    clearExtraConditions() {\n        this.extraConditions.clearConditions();\n    }\n    /**\n     * Clears all drill downs\n     */\n    clearDrillDowns() {\n        this.drillDowns = [];\n    }\n    /**\n     * Gets query ID.\n     * @returns The ID>\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Sets query ID.\n     * @param id New Query ID.\n     */\n    setId(id) {\n        this.id = id;\n    }\n    /**\n     * Regenerates the query ID.\n     */\n    regenerateId() {\n        this.id = utils.generateId(\"quer\");\n    }\n    /**\n     * Gets name of the query.\n     * @retruns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Sets name of the query\n     * @param name New name.\n     */\n    setName(name) {\n        this.name = name;\n    }\n    /**\n     * Gets description of the query.\n     * @retruns The description.\n     */\n    getDescription() {\n        return this.description ? this.description : '';\n    }\n    /**\n     * Sets description of the query\n     * @param description New description.\n     */\n    setDescription(description) {\n        this.description = description;\n    }\n    /**\n     * Get array of columns.\n     * @retruns Columns.\n     */\n    getColumns() {\n        return this.columns;\n    }\n    /**\n     * Gets array of columns that are used as keys\n     * for totals.\n     */\n    getUsedInTotalsColumns() {\n        const aggrs = this.getAggregatedColumns();\n        if (aggrs.length === 0)\n            return [];\n        const cols = this.getColumns()\n            .filter(col => col.enabled && col.expr.tag === ExprTag.EntityAttribute);\n        if (cols.length)\n            cols.pop();\n        return cols;\n    }\n    addColumnToSorted(col) {\n        const colJson = JSON.stringify(col.expr.saveToData());\n        let isUnique = true;\n        this.sortedColumns.forEach(scol => {\n            const qcolJson = JSON.stringify(scol.expr.saveToData());\n            if (qcolJson === colJson) {\n                isUnique = false;\n            }\n        });\n        if (isUnique) {\n            this.sortedColumns.push(col);\n        }\n    }\n    /**\n     * Get array of columns used only in sorting.\n     * @retruns Columns.\n     */\n    getJustSortedColumns() {\n        return this.sortedColumns.filter(col => {\n            return col.isJustSorted();\n        });\n    }\n    /**\n     * Gets array of columns used in sorting\n     * @retruns Columns\n     */\n    getSortedColumns() {\n        return this.sortedColumns;\n    }\n    /**\n     * Gets Colummn sorting index.\n     * @param col The column.\n     * @retruns The index.\n     */\n    getColumnSortIndex(col) {\n        return this.sortedColumns.indexOf(col);\n    }\n    setColumnSortIndex(col, index) {\n        if (index < 0)\n            return;\n        let colIdx = this.getColumnSortIndex(col);\n        if (colIdx < 0) {\n            this.addColumnToSorted(col);\n            colIdx = this.sortedColumns.length - 1;\n        }\n        utils.moveArrayItem(this.sortedColumns, colIdx, index);\n        this.fixupSortingIndices();\n    }\n    getColumnSorting(col) {\n        const idx = this.getColumnSortIndex(col);\n        if (idx >= 0) {\n            return col._sorting != SortDirection.None ? col._sorting : SortDirection.Ascending;\n        }\n        else {\n            return SortDirection.None;\n        }\n    }\n    setColumnSorting(col, direction) {\n        const idx = this.getColumnSortIndex(col);\n        col._sorting = direction;\n        if (idx >= 0) {\n            if (direction == SortDirection.None) {\n                utils.removeArrayItem(this.sortedColumns, col);\n                this.fixupSortingIndices();\n            }\n        }\n        else {\n            if (direction != SortDirection.None) {\n                this.addColumnToSorted(col);\n                this.fixupSortingIndices();\n            }\n        }\n        this.adjustColumnsSorting();\n    }\n    fixupSortingIndices() {\n        this.sortedColumns.forEach((col, index) => {\n            col._sortIndex = index;\n        });\n    }\n    adjustColumnsSorting() {\n        if (!this.syncSortOrderWithColumnsOrder) {\n            return;\n        }\n        if (this.getJustSortedColumns().length > 0) {\n            return;\n        }\n        let idx = 0;\n        this.columns.forEach(col => {\n            if (col.sorting != SortDirection.None) {\n                const colIdx = this.getColumnSortIndex(col);\n                if (colIdx >= 0) {\n                    utils.moveArrayItem(this.sortedColumns, colIdx, idx);\n                    idx++;\n                }\n            }\n        });\n        this.fixupSortingIndices();\n    }\n    createColumn(justsorted = false) {\n        return new QueryColumn(this, justsorted);\n    }\n    getColumnById(id) {\n        return utils.findItemById(this.columns, id);\n    }\n    /**\n     * Adds a new column with specified parameters\n     * @param descriptor The descriptor of the new column. Can contain different parameters like:\n     * `attribute` - a reference to a EntityAttr object,\n     * `attributeId` - an ID of the entity attribute we need (if we don't indicate `attribute`),\n     * `index`, sorting`, 'sortIndex` and other\n     *\n     * @param silent Indicates if we should raise a queryChanged event. If true - the operation will be performed silently, so no event is raised.\n     * @retruns The column.\n     * @example\n     * query.addColumn({\n     *     attributeId: 'Customers.CompanyName',\n     *     sortIndex: SortDirection.Ascending\n     * }});\n     */\n    addColumn(descriptor, silent = false) {\n        let newColumn;\n        const justsorted = descriptor.justsorted || (descriptor.column && descriptor.column.isJustSorted());\n        if (descriptor.column) {\n            newColumn = descriptor.column;\n        }\n        else {\n            newColumn = this.createColumn(descriptor.justsorted);\n            let attr;\n            if (descriptor.attribute) {\n                attr = descriptor.attribute;\n            }\n            else if (descriptor.attributeId) {\n                attr = this.model.getAttributeById(descriptor.attributeId);\n                if (!attr) {\n                    throw new Error(`Incorrect attribute id (${descriptor.attributeId}): addColumn`);\n                }\n            }\n            else if (typeof descriptor.constValue === 'undefined' && !descriptor.customSql) {\n                throw new Error('Not enought data for addColumn operation. One of the following options must be defined: attribute, attributeId, constValue or customSlq');\n            }\n            if (attr) {\n                let checkedOption = justsorted ? attr.useInSorting : attr.useInResult;\n                if (!checkedOption) {\n                    if (attr.lookupAttr) {\n                        attr = this.model.getAttributeById(attr.lookupAttr);\n                        checkedOption = justsorted ? attr.useInSorting : attr.useInResult;\n                    }\n                    if (!checkedOption) {\n                        throw new Error(`Can't use this attribute for a column`);\n                    }\n                }\n            }\n            if (descriptor.aggrFuncId && descriptor.customSql) {\n                console.warn(\"Column cannot be created using aggrFuncId and customSql at the same time. \" +\n                    \"cusomSql will be used.\");\n            }\n            if (typeof descriptor.constValue !== 'undefined') {\n                newColumn.expr.tag = ExprTag.Constant;\n                newColumn.expr.setValue(descriptor.constValue);\n                newColumn.expr.kind = DataKind.Scalar;\n                newColumn.expr.dataType = descriptor.constType || DataType.String;\n            }\n            else if (descriptor.customSql) {\n                newColumn.caption = 'Custom SQL Column';\n                newColumn.expr.tag = ExprTag.CustomSql;\n                newColumn.expr.sql = descriptor.customSql;\n                newColumn.expr.kind = DataKind.Query;\n                newColumn.expr.dataType = DataType.Unknown;\n                newColumn.expr.baseAttrId = descriptor.attributeId;\n                if (!this.context.options.allowCustomExpressions) {\n                    newColumn.enabled = false;\n                }\n            }\n            else if (descriptor.aggrFuncId) {\n                const funcId = descriptor.aggrFuncId;\n                newColumn.expr.tag = ExprTag.AggregateFunction;\n                newColumn.expr.func = descriptor.aggrFuncId;\n                newColumn.expr.kind = DataKind.Scalar;\n                newColumn.expr.dataType = funcId == 'COUNT' || funcId == 'CNTDST' ? 4 : attr.dataType;\n                newColumn.expr.distinct = false;\n                const arg = new Expression(newColumn);\n                arg.setValue(attr.id, true);\n                arg.tag = ExprTag.EntityAttribute;\n                arg.kind = DataKind.Attribute;\n                arg.dataType = attr.dataType;\n                newColumn.expr.args.push(arg);\n            }\n            else {\n                newColumn.expr.setValue(attr.id, true);\n                newColumn.expr.tag = ExprTag.EntityAttribute;\n                newColumn.expr.kind = DataKind.Attribute;\n                newColumn.expr.dataType = attr.dataType;\n                newColumn.params.concat(attr.params);\n            }\n            newColumn.caption = descriptor.caption || this.context.getDefaultColumnCaption(newColumn);\n            newColumn._sorting = descriptor.sorting || SortDirection.None;\n            newColumn._sortIndex = descriptor.sortIndex || -1;\n            newColumn.enabled = utils.getIfDefined(descriptor.enabled, true);\n            newColumn.setReadOnly(utils.getIfDefined(descriptor.readonly, false));\n        }\n        if (!justsorted) {\n            if (descriptor.index && descriptor.index >= 0 && descriptor.index < this.columns.length) {\n                this.columns.splice(descriptor.index, 0, newColumn);\n            }\n            else {\n                this.columns.push(newColumn);\n            }\n        }\n        this.setColumnSorting(newColumn, newColumn._sorting);\n        if (!silent) {\n            this.fireColumnsChangedEvent(QueryChangeAction.Add, newColumn, justsorted);\n        }\n        return newColumn;\n    }\n    /**\n     * Adds a new column with specified index.\n     * @param column The column or array of columns\n     * @param index The index of new column\n     * @param author The author.\n     * @example\n     * const column = new Column();\n     * column.caption = \"Company name\";\n     *\n     * query.addColumnObj(column, 1)\n     */\n    addColumnObj(column, index, author) {\n        let columns = this.columns;\n        if (typeof column.length == \"undefined\") {\n            if (typeof index == \"number\") {\n                columns.splice(index, 0, column);\n            }\n            else {\n                columns.push(column);\n            }\n            if (column.sorting != SortDirection.None) {\n                this.addColumnToSorted(column);\n            }\n            this.fixupSortingIndices();\n        }\n        else {\n            if (typeof index == \"number\") {\n                columns.push.apply(columns, [index, 0].concat(column));\n            }\n            else {\n                columns.push.apply(columns, [].concat(column));\n            }\n            column.forEach(col => {\n                if (col.sorting != SortDirection.None) {\n                    this.addColumnToSorted(col);\n                }\n            });\n            this.fixupSortingIndices();\n        }\n    }\n    /**\n     * Changes column to Aggregate function, custom expression or simple column.\n     * @param column The column to change.\n     * @param tag New column expression tag.\n     * @param args The arguments (Contains aggregate function id)\n     */\n    changeColumnType(column, tag, args) {\n        if (column.isJustSorted())\n            return;\n        args = args || {};\n        if (tag === ExprTag.AggregateFunction) {\n            if (!args.funcId)\n                throw Error('\"funcId\" argument is not defined');\n            if (column.expr.tag == ExprTag.AggregateFunction) {\n                column.expr.func = args.funcId;\n                return;\n            }\n            const expr = new Expression(column);\n            expr.tag = ExprTag.AggregateFunction;\n            expr.func = args.funcId;\n            expr.distinct = false;\n            expr.dataType = args.funcId == 'COUNT' || args.funcId == 'CNTDST' ? 4 : column.expr.dataType;\n            const arg = new Expression(column);\n            arg.loadFromData(this.model, column.expr.saveToData());\n            expr.args.push(arg);\n            column.expr = expr;\n        }\n        else if (tag === ExprTag.CustomSql) {\n            const attrId = (column.expr.tag == ExprTag.AggregateFunction)\n                ? column.expr.args[0].value\n                : column.expr.value;\n            let sqlText = '';\n            if (this.model) {\n                sqlText = this.model.getAttributeById(attrId).expr;\n            }\n            const customSqlExpr = new Expression(column);\n            customSqlExpr.tag = ExprTag.CustomSql;\n            customSqlExpr.dataType = DataType.String; //the default data type\n            customSqlExpr.sql = sqlText;\n            customSqlExpr.baseAttrId = attrId;\n            column.expr = customSqlExpr;\n        }\n        else if (tag === ExprTag.EntityAttribute) {\n            if (column.expr.tag === ExprTag.EntityAttribute\n                || column.expr.tag === ExprTag.ParentEntityAttribute) {\n                return;\n            }\n            const attrId = (column.expr.tag == ExprTag.AggregateFunction)\n                ? column.expr.args[0].value\n                : column.expr.baseAttrId;\n            const attr = attrId\n                ? this.model.getAttributeById(attrId)\n                : this.model.getFirstUICAttr();\n            const expr = new Expression(column);\n            expr.tag = ExprTag.EntityAttribute;\n            expr.dataType = attr.dataType;\n            expr.setValue(attr.id, true);\n            column.expr = expr;\n        }\n        column.caption = this.context.getDefaultColumnCaption(column);\n    }\n    /**\n     * Moves the column with specified index to another position.\n     * @param index1 The index of the column that should be moved.\n     * @param index2 The index of the position the column should be moved to\n     */\n    moveColumn(index1, index2) {\n        const columns = this.getColumns();\n        utils.moveArrayItem(columns, index1, index2);\n        this.adjustColumnsSorting();\n    }\n    /**\n     * Removes a column.\n     * @param column The column to be removed.\n     */\n    removeColumn(column) {\n        utils.removeArrayItem(this.columns, column);\n        utils.removeArrayItem(this.sortedColumns, column);\n    }\n    /**\n     * Adds a condition group - a group of simple conditions (predicates) linked by AND or OR\n     * @param descriptor The descriptor of the new condition group.\n     * @returns The new search condition.\n     */\n    addConditionGroup(descriptor, addChildCondition = true) {\n        console.error(\"Community version doesn't support working with groups.\");\n        return null;\n    }\n    addExtraConditionGroup(descriptor, addChildCondition = true) {\n        console.error(\"Community version doesn't support working with groups.\");\n        return null;\n    }\n    createCondition(tag = CondTag.Simple) {\n        return new Condition(this, tag);\n    }\n    /**\n     *  Adds a new simple condition (a predicate)\n     * @param descriptor The descriptor which defines different parameters of the new condition\n     * @returns The new condition.\n     */\n    addSimpleCondition(descriptor) {\n        let parent = descriptor.parent || this.getRootCondition();\n        let model = this.getModel();\n        if (!model)\n            return null;\n        if (!descriptor.attribute && !descriptor.attributeId) {\n            throw new Error(\"Either `attribute` or `attributeId` parameter must have a value\");\n        }\n        if (!descriptor.attribute) {\n            descriptor.attribute = model.getAttributeById(descriptor.attributeId);\n            if (!descriptor.attribute) {\n                throw new Error(\"Could not find this attribute: \" + descriptor.attributeId);\n            }\n        }\n        if (!descriptor.operator && descriptor.operatorId) {\n            descriptor.operator = model.getOperatorById(descriptor.operatorId);\n        }\n        if (!descriptor.operator) {\n            descriptor.operator = model.getDefaultOperatorForAttr(descriptor.attribute);\n        }\n        let cond = this.createSimpleConditionObject(descriptor.attribute, descriptor.operator, descriptor.value);\n        parent.addCondition(cond);\n        cond.enabled = utils.getIfDefined(descriptor.enabled, true);\n        cond.setReadOnly(utils.getIfDefined(descriptor.readonly, false));\n        return cond;\n    }\n    addSimpleExtraCondition(descriptor) {\n        descriptor.parent = descriptor.parent || this.extraConditions;\n        return this.addSimpleCondition(descriptor);\n    }\n    createSimpleConditionObject(attr, operator, inputValues) {\n        if (!attr || !attr.useInConditions) {\n            let attrCaption = attr ? attr.caption : 'NULL';\n            throw \"Can't add a condition with such attribute: \" + attrCaption;\n        }\n        let cond = this.createCondition(CondTag.Simple);\n        cond.setOperatorId(operator.id, true);\n        let attrExpr = new Expression(cond);\n        attrExpr.setValue(attr.id, true);\n        attrExpr.tag = this.attributeExprTag;\n        attrExpr.kind = DataKind.Attribute;\n        attrExpr.dataType = attr.dataType;\n        cond.expressions.push(attrExpr);\n        let model = this.getModel();\n        const valCount = operator.paramCount;\n        let values = utils.fillArray(new Array(valCount - 1), null);\n        if (inputValues !== null && typeof inputValues !== \"undefined\") {\n            if (Array.isArray(inputValues)) {\n                utils.copyArrayTo(inputValues, values);\n            }\n            else if (valCount > 0) {\n                values[0] = inputValues;\n            }\n        }\n        var valLength = values.length;\n        for (var i = 0; i < valLength; i++) {\n            let operand = model.getOperand(attr, operator, i + 1);\n            cond.addExpressionByOperand(operand, values[i]);\n        }\n        return cond;\n    }\n    /**\n     * Removes several columns passed as array.\n     * @param columnsToRemove The list of columns to be removed.\n     * @param author The author.\n     */\n    removeColumns(columnsToRemove, author) {\n        let justSortedColumns = columnsToRemove.filter(c => c.isJustSorted());\n        let columns = columnsToRemove.filter(c => !c.isJustSorted());\n        function removeFromArray(arr, arrToRemove) {\n            let ctrLen = arrToRemove.length;\n            for (let i = 0; i < ctrLen; i++) {\n                let index = arr.indexOf(arrToRemove[i]);\n                if (index >= 0) {\n                    arr.splice(index, 1);\n                }\n            }\n        }\n        if (columns.length > 0) {\n            removeFromArray(this.getColumns(), columns);\n            removeFromArray(this.sortedColumns, columns);\n        }\n        if (justSortedColumns.length > 0) {\n            //removeFromArray(this.getJustSortedColumns(), justSortedColumns);\n            removeFromArray(this.sortedColumns, justSortedColumns);\n        }\n        this.fixupSortingIndices();\n    }\n    /**\n     * Fires process event.\n     * @param data The data.\n     */\n    fireProcessEvent(data) {\n        this.eventEmitter.fire('query.process', data);\n    }\n    fireChangedEvent(params, postpone, wasModified) {\n        params = params || { part: QueryChangePart.All };\n        if (typeof (postpone) != 'undefined' || typeof (wasModified) != 'undefined') {\n            params.postpone = postpone || 0;\n            params.wasModified = wasModified;\n            console.warn('Method with \\'postpone\\' and \\'wasModified\\' args is deprecated. Pass params in data object');\n        }\n        this._isModified = typeof (params.wasModified) != 'undefined'\n            ? params.wasModified\n            : true;\n        const eventData = params || {\n            part: QueryChangePart.All\n        };\n        this.eventEmitter.fire('query.change', eventData, params.postpone || 0);\n    }\n    fireColumnsChangedEvent(action, column, justsorted = false) {\n        this.fireChangedEvent({\n            part: (justsorted)\n                ? QueryChangePart.SortingColumns\n                : QueryChangePart.Columns,\n            action: action,\n            changee: column\n        });\n    }\n    fireConditionsChangedEvent(action, condition) {\n        this.fireChangedEvent({\n            part: QueryChangePart.Conditions,\n            action: action,\n            changee: condition\n        });\n    }\n    /**\n     * Runs through condition with this callback.\n     * @param processCondition The function to process condition.\n     */\n    runThroughConditions(processCondition) {\n        let processGroup = function (predicate) {\n            for (let i = 0; i < predicate.getConditions().length; i++) {\n                let cond = predicate.getConditions()[i];\n                if (cond.isGroup()) {\n                    processGroup(cond);\n                }\n                else {\n                    if (processCondition)\n                        processCondition(cond);\n                }\n            }\n        };\n        processGroup(this.getRootCondition());\n    }\n    /**\n     * Gets one value for the attribute\n     * @param attrId The attribute ID.\n     * @retruns The value.\n     */\n    getOneValueForAttr(attrId) {\n        let res = null;\n        this.runThroughConditions(function (cond) {\n            if (cond.enabled) {\n                const expr = cond.expressions[0];\n                const opid = cond.getOperatorId();\n                if (expr.value == attrId && cond.expressions[1] &&\n                    (opid == \"Equal\" || opid == \"InList\" || opid == \"StartsWith\")) {\n                    res = cond.expressions[1].value;\n                }\n            }\n        });\n        return res;\n    }\n    /**\n     * Gets root predicate\n     * @retruns The condition.\n     */\n    getRootCondition() {\n        return this.root;\n    }\n    /**\n     * Add process callback\n     * @param callback The callback.\n     * @retruns The callback ID.\n     */\n    addProcessCallback(callback) {\n        return this.eventEmitter.subscribe('query.process', callback);\n    }\n    /**\n     * Remove process callback\n     * @param callbackId The callback ID.\n     */\n    removeProcessCallback(callbackId) {\n        this.eventEmitter.unsubscribe('query.process', callbackId);\n    }\n    /**\n     * Add changed callback\n     * @param callback The callback ID.\n     */\n    addChangedCallback(callback) {\n        return this.eventEmitter.subscribe('query.change', callback);\n    }\n    /**\n     * Remove changed callback\n     * @param callbackId The callback ID.\n     */\n    removeChangedCallback(callbackId) {\n        this.eventEmitter.unsubscribe('query.change', callbackId);\n    }\n    /**\n     * Retruns conditions text\n     */\n    getConditionsText() {\n        const model = this.getModel();\n        if (!model)\n            return '';\n        const getConditionGroupText = (group) => {\n            let result = '', conjKey = 'Conj' + equtils.linkTypeToStr(group.linkType), conjText = i18n.getText(conjKey), condText, i;\n            for (i = 0; i < group.getConditions().length; i++) {\n                condText = '';\n                let cond = group.getConditions()[i];\n                if (cond.enabled || typeof (cond.enabled) === 'undefined') {\n                    if (cond.isGroup()) {\n                        condText = getConditionGroupText(cond);\n                        if (condText) {\n                            condText = '(' + condText + ')';\n                        }\n                    }\n                    else {\n                        let opId = cond.getOperatorId();\n                        let operator = model.getOperatorById(opId);\n                        let parts = equtils.parseOperatorFormat(operator);\n                        let plen = parts.length;\n                        for (let pi = 0; pi < plen; pi++) {\n                            let part = parts[pi];\n                            let txt = part.text;\n                            if (part.type == 'expression') {\n                                let expr = cond.expressions[part.index];\n                                if (expr.kind == DataKind.Attribute || expr.tag == ExprTag.EntityAttribute) {\n                                    let attr = model.getAttributeById(expr.value);\n                                    if (attr != null) {\n                                        txt = model.getAttributeText(attr, '{entity} {attr}');\n                                    }\n                                }\n                                if (expr.kind == DataKind.Query) {\n                                    txt = ': (' + expr.subQuery.getConditionsText() + ')';\n                                }\n                                else {\n                                    txt = expr.getText();\n                                    if (this.model.isDateMacro(txt) || this.model.isTimeMacro(txt)) {\n                                        const macroText = txt.substring(3, txt.length - 2);\n                                        const res = i18n.getText(macroText);\n                                        txt = res || txt;\n                                    }\n                                }\n                            }\n                            if (pi > 0)\n                                condText += ' ';\n                            condText += txt;\n                        }\n                    }\n                }\n                if (condText) {\n                    if (i > 0 && result) {\n                        result += ' ' + conjText + ' ';\n                    }\n                    result += condText;\n                }\n            }\n            if (group.linkType == LinkType.None || group.linkType == LinkType.NotAll) {\n                result = 'not ( \" + result + \" )';\n            }\n            return result;\n        };\n        return getConditionGroupText(this.getRootCondition());\n    }\n    /**\n    * Retruns conditions text\n    */\n    getConditionsTextAsHtml() {\n        const model = this.getModel();\n        if (!model)\n            return '<div class=\"eqjs-query-text\"></div>';\n        const quoteExprText = (expr) => {\n            if (expr.kind == DataKind.Query) {\n                return `&lt;${expr.getText()}&gt;`;\n            }\n            else if (expr.kind == DataKind.List) {\n                return `[${expr.getText()}]`;\n            }\n            else if (expr.dataType == DataType.String\n                || expr.dataType == DataType.Memo\n                || expr.dataType == DataType.FixedChar) {\n                return `&quot;${expr.getText()}&quot;`;\n            }\n            else {\n                let txt = expr.getText();\n                if (this.model.isDateMacro(txt) || this.model.isTimeMacro(txt)) {\n                    const macroText = txt.substring(3, txt.length - 2);\n                    const res = i18n.getText(macroText);\n                    txt = res || txt;\n                }\n                return txt;\n            }\n        };\n        const getConditionGroupText = (group) => {\n            let result = '', conjKey = \"Conj\" + equtils.linkTypeToStr(group.linkType), conjText = `<span class=\"eqjs-query-text-conj\">${i18n.getText(conjKey)}</span>`, condText, i;\n            for (i = 0; i < group.getConditions().length; i++) {\n                condText = \"\";\n                let cond = group.getConditions()[i];\n                if (cond.enabled || typeof (cond.enabled) === \"undefined\") {\n                    if (cond.isGroup()) {\n                        condText = getConditionGroupText(cond);\n                        if (condText) {\n                            condText = \"(\" + condText + \")\";\n                        }\n                    }\n                    else {\n                        let opId = cond.getOperatorId();\n                        let operator = model.getOperatorById(opId);\n                        let parts = equtils.parseOperatorFormat(operator);\n                        let plen = parts.length;\n                        for (let pi = 0; pi < plen; pi++) {\n                            let part = parts[pi];\n                            let txt = part.text;\n                            if (part.type == \"expression\") {\n                                let expr = cond.expressions[part.index];\n                                if (expr.kind == DataKind.Attribute || expr.tag == ExprTag.EntityAttribute) {\n                                    let attr = model.getAttributeById(expr.value);\n                                    txt = `<span class=\"eqjs-query-text-attr\">${model.getAttributeText(attr, \"{entity} {attr}\")}</span>`;\n                                }\n                                else {\n                                    txt = `<span class=\"eqjs-query-text-expr\">${quoteExprText(expr)}</span>`;\n                                }\n                            }\n                            else if (part.type == \"operator\") {\n                                txt = `<span class=\"eqjs-query-text-op\">${txt}</span>`;\n                            }\n                            if (pi > 0)\n                                condText += \" \";\n                            condText += txt;\n                        }\n                    }\n                }\n                if (condText) {\n                    if (i > 0 && result) {\n                        result += \" \" + conjText + \" \";\n                    }\n                    result += condText;\n                }\n            }\n            if (group.linkType == LinkType.None || group.linkType == LinkType.NotAll) {\n                result = \"<span class=\\\"eqjs-query-text-conj\\\">not</span> ( \" + result + \" )\";\n            }\n            return result;\n        };\n        return `<div class=\"eqjs-query-text\">${getConditionGroupText(this.getRootCondition())}</div>`;\n    }\n    /**\n     * Gets an array of all entities used in the query.\n     */\n    getEntitiesInQuery() {\n        if (this.model.id !== this.id)\n            throw Error('Model mithmatch');\n        const entities = [];\n        const columns = this.getColumns();\n        for (let column of columns) {\n            if (!column.enabled)\n                continue;\n            this.addEntityByExpression(entities, column.expr);\n        }\n        const rootCond = this.getRootCondition();\n        this.fillEntitiesByCondtionGroup(entities, rootCond);\n        return entities;\n    }\n    fillEntitiesByCondtionGroup(entities, root) {\n        for (let condition of root.getConditions()) {\n            if (!condition.isGroup()) {\n                for (let expr of condition.expressions) {\n                    this.addEntityByExpression(entities, expr);\n                    if (expr.args) {\n                        for (let arg of expr.args) {\n                            this.addEntityByExpression(entities, arg);\n                        }\n                    }\n                }\n            }\n            else {\n                this.fillEntitiesByCondtionGroup(entities, condition);\n            }\n        }\n    }\n    addEntityByExpression(entities, expr) {\n        if (expr.tag !== ExprTag.EntityAttribute)\n            return;\n        const attrId = expr.baseAttrId || expr.value;\n        if (attrId) {\n            const attr = this.model.getAttributeById(attrId);\n            if (attr) {\n                if (attr.entity && utils.indexOfArrayItem(entities, attr.entity) < 0) {\n                    entities.push(attr.entity);\n                }\n            }\n        }\n    }\n    /**\n     * Builds and returns the path (actually the tree) between the entities used in the query.\n     */\n    buildQueryPath() {\n        let entity = this.model.getMainEntity() || this.model.rootEntity;\n        const tree = this.createTreeNodeFromEntity(entity);\n        tree.setParents();\n        return tree;\n    }\n    createTreeNodeFromEntity(entity) {\n        let tree = new Tree(entity);\n        for (let subEnentity of entity.subEntities) {\n            tree.addChild(this.createTreeNodeFromEntity(subEnentity));\n        }\n        return tree;\n    }\n}\n\nclass BrowserQueryStorage {\n    constructor(context) {\n        this.context = context;\n        console.warn('BrowserQueryStorage is used for managing queries');\n    }\n    init(options) {\n        let keyPrefix = 'eq';\n        if (options && options.keyPrefix) {\n            keyPrefix = options.keyPrefix;\n        }\n        this.queryListKey = keyPrefix + '-querylist';\n        this.queryKeyPrefix = keyPrefix;\n    }\n    getQueryList(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const itemsString = localStorage.getItem(this.queryListKey);\n                if (itemsString) {\n                    resolve(JSON.parse(itemsString));\n                }\n                resolve([]);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    newQuery(options) {\n        return new Promise((resolve, reject) => {\n            const query = this.context.createQuery();\n            query.reset();\n            query.setDefaultName();\n            if (options) {\n                if (options.query) {\n                    query.loadFromData(options.query.toJSONData());\n                }\n                if (options.queryId) {\n                    query.setId(options.queryId);\n                }\n                if (options.name) {\n                    query.setName(options.name);\n                }\n                if (options.description) {\n                    query.setDescription(options.description);\n                }\n            }\n            this._saveQuery(query);\n            resolve(query.toJSONData());\n        });\n    }\n    loadQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const queryItem = localStorage.getItem(this.queryKeyPrefix + '-' + options.queryId);\n                if (queryItem) {\n                    resolve(JSON.parse(queryItem));\n                }\n                throw new Error('Query is not found: ' + options.queryId);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    saveQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const modelId = options.modelId || this.context.getModel().getId();\n                const query = options.query || this.context.getQuery();\n                this._saveQuery(query);\n                resolve(null);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    _saveQuery(query) {\n        let queryList = [];\n        const itemsString = localStorage.getItem(this.queryListKey);\n        if (itemsString) {\n            queryList = JSON.parse(itemsString);\n        }\n        let item = utils.findItemById(queryList, query.getId());\n        if (!item) {\n            item = { id: query.getId(), name: query.getName(), text: query.getDescription() };\n            queryList.push(item);\n        }\n        item.name = query.getName();\n        item.text = query.getDescription();\n        localStorage.setItem(this.queryListKey, JSON.stringify(queryList));\n        localStorage.setItem(this.queryKeyPrefix + '-' + query.getId(), query.toJSON());\n    }\n    removeQuery(options) {\n        return new Promise((resolve, reject) => {\n            try {\n                const modelId = options.modelId || this.context.getModel().getId();\n                const queryId = options.queryId || this.context.getQuery().getId();\n                let queryList = [];\n                const itemsString = localStorage.getItem(this.queryListKey);\n                if (itemsString) {\n                    queryList = JSON.parse(itemsString);\n                }\n                queryList = queryList.filter(item => item.id != queryId);\n                localStorage.setItem(this.queryListKey, JSON.stringify(queryList));\n                localStorage.removeItem(this.queryKeyPrefix + '-' + queryId);\n                resolve();\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n}\n\nclass EqModelLoader {\n    constructor(context) {\n        this.context = context;\n        this.modelPromise = null;\n    }\n    init(options) {\n    }\n    getContext() {\n        return this.context;\n    }\n    createModelLoadingPromise() {\n        this.modelPromise = new Promise((resolve, reject) => {\n            this.modelLoadingResolveFunc = resolve;\n            this.modelLoadingRejectFunc = reject;\n        });\n    }\n    /**\n     * Returns the `Promise` of the model loading process\n     */\n    getModelPromise() {\n        return this.modelPromise\n            || Promise.reject(new Error(\"Model has been never loaded.\"));\n    }\n    startModelLoading(options) {\n        this.createModelLoadingPromise();\n        this.sendLoadModelRequest(options);\n        return this.modelPromise;\n    }\n}\n\nclass EqServerModelLoader extends EqModelLoader {\n    constructor(context) {\n        super(context);\n    }\n    init() {\n    }\n    sendLoadModelRequest(options) {\n        const context = this.getContext();\n        const http = context.getServices().getHttpClient();\n        const url = context.resolveEndpoint('GetModel', { modelId: options.modelId });\n        http.get(url)\n            .then((responseData) => {\n            if (!responseData.model) {\n                this.modelLoadingRejectFunc(new Error('Wrong response format for \"GetModel\" request'));\n            }\n            this.modelLoadingResolveFunc(responseData.model);\n        })\n            .catch(error => {\n            this.modelLoadingRejectFunc(error);\n        });\n    }\n}\n\nclass EqServerDataFetcher {\n    constructor(context) {\n        this.context = context;\n    }\n    fetchData(fetchOptions) {\n        const query = fetchOptions.query || this.context.getQuery();\n        const queryId = query.getId();\n        let requestData = {\n            'options': fetchOptions.options\n        };\n        if (typeof (fetchOptions.queryId) !== 'undefined') {\n            requestData.queryId = fetchOptions.queryId;\n        }\n        else {\n            requestData.query = query.toJSONData();\n        }\n        if (fetchOptions.debug) {\n            requestData.debug = fetchOptions.debug;\n        }\n        if (fetchOptions.chunk) {\n            requestData.chunk = fetchOptions.chunk;\n        }\n        if (fetchOptions.data) {\n            requestData.data = fetchOptions.data;\n        }\n        if (typeof (fetchOptions.aux) != 'undefined') {\n            requestData.aux = fetchOptions.aux;\n        }\n        const url = this.context.resolveEndpoint('FetchData', { modelId: query.getModel().getId(), queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then(data => data);\n    }\n}\n\nclass EqServerQuerySynchronizer {\n    constructor(context) {\n        this.context = context;\n    }\n    syncQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const ops = options.options || {};\n        let requestData = {\n            'query': query.toJSONData(),\n            'options': ops,\n        };\n        if (options.data) {\n            requestData.data = options.data;\n        }\n        const url = this.context.resolveEndpoint('SyncQuery', { modelId: query.getModel().getId(), queryId: query.getId() });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then(responseData => responseData);\n    }\n}\n\nclass EqServerValueListResolver {\n    constructor(context) {\n        this.context = context;\n    }\n    loadValueList(options) {\n        const modelId = options.modelId || this.context.getModel().getId();\n        const requestData = utils.assign({ modelId: modelId }, options.params);\n        const editorId = requestData.editorId;\n        const http = this.context.getServices().getHttpClient();\n        const url = this.context.resolveEndpoint('GetValueList', { modelId: modelId, listId: editorId });\n        let queryParams = {};\n        if (options && options.params && options.params.queryParams) {\n            queryParams = options.params.queryParams;\n        }\n        return http.get(url, { queryParams: queryParams })\n            .then((responseData) => {\n            if (responseData && responseData.values) {\n                return responseData.values;\n            }\n            else {\n                throw new Error('Wrong response format. No \"values\" property');\n            }\n        });\n    }\n}\n\nclass EqQueryFileLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    getQueryFile(options) {\n        const query = options.query || this.context.getQuery();\n        const url = this.context.resolveEndpoint('GetQueryFile', { modelId: query.getModel().getId(),\n            format: options.format || 'xml' });\n        const http = this.context.getServices().getHttpClient();\n        const actionResult = http.post(url, {\n            query: query.toJSONData()\n        });\n        const request = actionResult.getRequest();\n        return actionResult.then((responseData) => {\n            const blob = new Blob([responseData]);\n            const dispositionHeader = request.getXMLHttpRequest().getResponseHeader(\"Content-Disposition\");\n            let fileName = dispositionHeader\n                ? dispositionHeader.match(/filename=\"?([^\"]*)\"?$/)[1]\n                : 'query.json';\n            if (options.fileName) {\n                fileName = options.fileName\n                    + fileName.substring(fileName.lastIndexOf('.'));\n            }\n            if (window.navigator['msSaveOrOpenBlob']) {\n                // Internet Explorer\n                window.navigator['msSaveOrOpenBlob'](blob, fileName);\n            }\n            else {\n                const a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style.display = \"none\";\n                a.href = window.URL.createObjectURL(blob);\n                a.download = fileName;\n                a.click();\n                window.URL.revokeObjectURL(a.href);\n                document.body.removeChild(a);\n            }\n        });\n    }\n    uploadQueryFile(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const url = this.context.resolveEndpoint('UploadQueryFile', { modelId: query.getModel().getId() });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, options.data, {\n            dataType: 'form-data'\n        })\n            .then(responseData => {\n            return responseData.query;\n        });\n    }\n}\n\nclass EqAggregatesContainer {\n    constructor(context) {\n        this.context = context;\n        this.levels = {};\n    }\n    getAggregateData(level, groupKey) {\n        return new Promise((resolve, reject) => {\n            const processFunc = (data) => {\n                // map values\n                const keyStr = this.groupKeyToStr(groupKey);\n                const value = data.get(keyStr);\n                if (value) {\n                    resolve(value);\n                }\n                else {\n                    reject(`Can't find data for ${keyStr}`);\n                }\n            };\n            const desc = this.getLevelDesc(level, false);\n            if (desc) {\n                if (desc.data) {\n                    processFunc(desc.data);\n                }\n                else {\n                    desc.receivedCallbacks.push(processFunc);\n                }\n            }\n        });\n    }\n    setAggregateData(level, data) {\n        const desc = this.getLevelDesc(level, true);\n        desc.data = data;\n        if (desc.receivedCallbacks) {\n            for (const callback of desc.receivedCallbacks) {\n                callback(desc.data);\n            }\n        }\n        desc.receivedCallbacks = [];\n    }\n    updateAggregateData(level, groupKey, values) {\n        const desc = this.getLevelDesc(level, true);\n        const key = this.groupKeyToStr(groupKey);\n        desc.data.set(key, values);\n    }\n    groupKeyToStr(groupKey) {\n        return JSON.stringify(groupKey);\n    }\n    getLevelDesc(level, createIfNotExists) {\n        let desc = this.levels[level];\n        if (!desc && createIfNotExists) {\n            desc = {\n                receivedCallbacks: [],\n                data: new Map()\n            };\n            this.levels[level] = desc;\n        }\n        return desc;\n    }\n    clear() {\n        this.levels = {};\n    }\n}\nclass DefaultAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        this.aggrs = null;\n    }\n    getAggrContainer() {\n        return this.aggrs;\n    }\n    calculate(options) {\n        console.warn(\"Grand totals and sub totals aggregation calculation can be used in Enterprise version only\");\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        this.aggrs = new EqAggregatesContainer(this.context);\n        const query = this.context.createQuery();\n        query.loadFromData(this.context.getQuery().toJSONData());\n        const settings = this.context.getQuery().getAggregationSettings();\n        const aggrColId = settings.getAggregates().map(a => a.colId);\n        const columns = query.getColumns()\n            .filter(col => aggrColId.indexOf(col.id) < 0);\n        for (let i = 0; i < columns.length; i++) {\n            columns[i].enabled = false;\n        }\n        if (settings.hasGrandTotals()) {\n            this.aggrs.setAggregateData(0, new Map());\n            if (options.resultObtained)\n                options.resultObtained({}, 0);\n        }\n        const groups = settings.getGroups();\n        for (let level = 1; level <= groups.length && level <= options.maxLevel; level++) {\n            this.aggrs.setAggregateData(level, new Map());\n            if (options.resultObtained)\n                options.resultObtained({}, level);\n        }\n        return Promise.resolve();\n    }\n    needRecalculation() {\n        return true;\n    }\n    reset() {\n    }\n}\n\nclass EqServiceProvider {\n    static getInstance() {\n        if (!EqServiceProvider._instance) {\n            EqServiceProvider._instance = new EqServiceProvider();\n        }\n        return EqServiceProvider._instance;\n    }\n    constructor() {\n        this.services = {};\n        this.httpClient = new HttpClient();\n        this.httpClient.defaultHeaders['x-eqjs-version'] = '7.4.0';\n        this.modelResolver = (_) => new DataModel();\n        this.modelStorageResolver = null;\n        this.queryResolver = (context) => new Query(context.getModel(), null, { context: context });\n        this.modelLoaderResolver = (context) => new EqServerModelLoader(context);\n        this.queryStorageResolver = (context) => new BrowserQueryStorage(context);\n        this.querySynchronizerResolver = (context) => new EqServerQuerySynchronizer(context);\n        this.vllResolver = (context) => new EqServerValueListResolver(context);\n        this.dataFetcherResolver = (context) => new EqServerDataFetcher(context);\n        this.queryFileLoaderResolver = (context) => new EqQueryFileLoader(context);\n        this.aggrCalculatoResolver = (context) => new DefaultAggregatesCalculator(context);\n    }\n    reset() {\n    }\n    getHttpClient() {\n        return this.httpClient;\n    }\n    createDataModel(context) {\n        if (!this.modelResolver) {\n            throw 'Model resolver is not defined';\n        }\n        return this.modelResolver(context);\n    }\n    createQuery(context) {\n        if (!this.queryResolver) {\n            throw 'Query resolver is not defined';\n        }\n        return this.queryResolver(context);\n    }\n    registerDataModelResolver(resolver) {\n        this.modelResolver = resolver;\n    }\n    getDataModelResolver() {\n        return this.modelResolver;\n    }\n    registerQueryResolver(resolver) {\n        this.queryResolver = resolver;\n    }\n    getQueryResolver() {\n        return this.queryResolver;\n    }\n    registerModelLoaderResolver(resolver) {\n        this.modelLoaderResolver = resolver;\n    }\n    getModelLoaderResolver() {\n        if (!this.modelLoaderResolver) {\n            throw 'ModelLoaderResolver is not defined';\n        }\n        return this.modelLoaderResolver;\n    }\n    registerModelStorageResolver(resolver) {\n        this.modelStorageResolver = resolver;\n    }\n    getModelStorageResolver() {\n        if (!this.modelStorageResolver) {\n            throw 'ModelStorageResolver is not defined';\n        }\n        return this.modelStorageResolver;\n    }\n    registerQueryStorageResolver(resolver) {\n        this.queryStorageResolver = resolver;\n    }\n    getQueryStorageResolver() {\n        if (!this.queryStorageResolver) {\n            throw 'QueryStorageResolver is not defined';\n        }\n        return this.queryStorageResolver;\n    }\n    registerDataFetcherResolver(resolver) {\n        this.dataFetcherResolver = resolver;\n    }\n    getDataFetcherResolver() {\n        if (!this.dataFetcherResolver) {\n            throw 'DataFetcherResolver is not defined';\n        }\n        return this.dataFetcherResolver;\n    }\n    registerQuerySyncronizerResolver(resolver) {\n        this.querySynchronizerResolver = resolver;\n    }\n    getQuerySynchronizerResolver() {\n        if (!this.querySynchronizerResolver) {\n            throw 'QuerySynchronizerResolver is not defined';\n        }\n        return this.querySynchronizerResolver;\n    }\n    registerValueListLoaderResolver(resolver) {\n        this.vllResolver = resolver;\n    }\n    getValueListLoaderResolver() {\n        if (!this.vllResolver) {\n            throw 'Resolver for ValueListLoader is not defined';\n        }\n        return this.vllResolver;\n    }\n    registerQueryFileLoaderResolver(resolver) {\n        this.queryFileLoaderResolver = resolver;\n    }\n    getQueryFileLoaderResolver() {\n        if (!this.queryFileLoaderResolver) {\n            throw 'Resolver for QueryFileLoader is not defined';\n        }\n        return this.queryFileLoaderResolver;\n    }\n    registerAggregatesCalculator(resolver) {\n        this.aggrCalculatoResolver = resolver;\n    }\n    getAggregatesCalculatorResolver() {\n        if (!this.aggrCalculatoResolver) {\n            throw 'Resolver for AggregatesCalculator is not defined';\n        }\n        return this.aggrCalculatoResolver;\n    }\n    registerService(serviceId, serviceResolver) {\n        this.services[serviceId] = serviceResolver;\n    }\n    getService(serviceId) {\n        const serviceResolver = this.services[serviceId];\n        if (serviceResolver) {\n            return serviceResolver();\n        }\n    }\n}\n\n/** Represents groups of widgets. Used to identify widgets */\nvar WidgetGroup;\n(function (WidgetGroup) {\n    /** None widget group. */\n    WidgetGroup[WidgetGroup[\"None\"] = 0] = \"None\";\n    /** The group of widgets responsible for the Model. */\n    WidgetGroup[WidgetGroup[\"Model\"] = 1] = \"Model\";\n    /** The group of widgets responsible for the Query. */\n    WidgetGroup[WidgetGroup[\"Query\"] = 2] = \"Query\";\n    /** The group of widgets responsible for the Result. */\n    WidgetGroup[WidgetGroup[\"Result\"] = 4] = \"Result\";\n    /** The group of widgets responsible for the statement. */\n    WidgetGroup[WidgetGroup[\"Statement\"] = 8] = \"Statement\";\n    /** The group of widgets responsible for tracking Query status. */\n    WidgetGroup[WidgetGroup[\"QueryStatus\"] = 16] = \"QueryStatus\";\n    /** All. */\n    WidgetGroup[WidgetGroup[\"All\"] = 65535] = \"All\";\n})(WidgetGroup || (WidgetGroup = {}));\n\n//possibly move it to the EasyData lib on the next update\nvar EmptyChunk = {\n    offset: 0,\n    limit: 0,\n    needTotal: false\n};\n\nclass EqServerExporter {\n    constructor(context) {\n        this.context = context;\n    }\n    setFormat(format, responseType) {\n        this.format = format;\n        this.responseType = responseType;\n    }\n    export(exportOptions) {\n        exportOptions = exportOptions || {};\n        const http = this.context.getServices().getHttpClient();\n        const format = this.format || \"csv\";\n        const query = exportOptions.query || this.context.getQuery();\n        const modelId = query.getModel().getId();\n        let requestData = {\n            'settings': exportOptions.settings,\n            'chunk': EmptyChunk\n        };\n        if (typeof (exportOptions.queryId) !== 'undefined') {\n            requestData.queryId = exportOptions.queryId;\n        }\n        else {\n            requestData.query = query.toJSONData();\n        }\n        if (exportOptions.data) {\n            requestData.data = exportOptions.data;\n        }\n        if (exportOptions.options) {\n            requestData.options = exportOptions.options;\n        }\n        const url = this.context.resolveEndpoint('ExportResult', { modelId: modelId, format: format });\n        const actionResult = http.post(url, requestData, { responseType: this.responseType });\n        const request = actionResult.getRequest();\n        return actionResult.then((responseData) => {\n            const blob = new Blob([responseData]);\n            const dispositionHeader = request.getXMLHttpRequest().getResponseHeader(\"Content-Disposition\");\n            const filename = dispositionHeader\n                ? dispositionHeader.match(/filename=\"?([^\"]*)\"?$/)[1]\n                : 'export-data.' + format;\n            if (window.navigator['msSaveOrOpenBlob']) {\n                // Internet Explorer\n                window.navigator['msSaveOrOpenBlob'](blob, filename);\n            }\n            else {\n                var a = document.createElement(\"a\");\n                document.body.appendChild(a);\n                a.style.display = \"none\";\n                a.href = window.URL.createObjectURL(blob);\n                a.download = filename;\n                a.click();\n                window.URL.revokeObjectURL(a.href);\n                document.body.removeChild(a);\n            }\n        });\n    }\n}\n\nclass EasyQueryDataLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    loadChunk(chunk) {\n        // We have to refactor page logic in view to make it simplier to integrate \n        // different grids\n        this.dataLoadPromise = new Promise((resolve, reject) => {\n            const fetchOptions = {\n                chunk: chunk,\n                success: (result) => {\n                    const dataTable = new EasyDataTable({\n                        loader: this.context.dataLoader, //TODO: Why not just `this`?\n                        chunkSize: this.context.resultTable.chunkSize\n                    });\n                    const resultSet = result.resultSet;\n                    for (const col of resultSet.cols) {\n                        dataTable.columns.add(col);\n                    }\n                    dataTable.setTotal(result.meta.totalRecords);\n                    for (const row of resultSet.rows) {\n                        dataTable.addRow(row);\n                    }\n                    let totalRecords = 0;\n                    if (result.meta && result.meta.totalRecords) {\n                        totalRecords = result.meta.totalRecords;\n                    }\n                    resolve({\n                        table: dataTable,\n                        total: totalRecords,\n                        hasNext: !chunk.needTotal || chunk.offset + chunk.limit < totalRecords\n                    });\n                },\n                error: (error) => reject(error)\n            };\n            if (this.context.debugMode) {\n                fetchOptions.debug = `Data Chunk. Offset: ${chunk.offset}`;\n            }\n            this.context.fetchDataChunk(fetchOptions);\n        });\n        return this.dataLoadPromise;\n    }\n}\n\nvar EqActionResult;\n(function (EqActionResult) {\n    EqActionResult[EqActionResult[\"Error\"] = 0] = \"Error\";\n    EqActionResult[EqActionResult[\"Success\"] = 1] = \"Success\";\n})(EqActionResult || (EqActionResult = {}));\n\nvar EqAction;\n(function (EqAction) {\n    EqAction[\"LoadModel\"] = \"LoadModel\";\n    EqAction[\"LoadQuery\"] = \"LoadQuery\";\n    EqAction[\"LoadQueryList\"] = \"LoadQueryList\";\n    EqAction[\"NewQuery\"] = \"NewQuery\";\n    EqAction[\"SaveQuery\"] = \"SaveQuery\";\n    EqAction[\"RemoveQuery\"] = \"RemoveQuery\";\n    EqAction[\"SyncQuery\"] = \"SyncQuery\";\n    EqAction[\"FetchData\"] = \"FetchData\";\n    EqAction[\"GetValueList\"] = \"GetValueList\";\n    EqAction[\"ExportResult\"] = \"ExportResult\";\n    EqAction[\"GetQueryFile\"] = \"GetQueryFile\";\n    EqAction[\"UploadQueryFile\"] = \"UploadQueryFile\";\n})(EqAction || (EqAction = {}));\n\n/**\n * Encapsulates all information about EasyQuery components on some webpage\n * and provides some basic operation over those components\n * Each context includes the following main components:\n *  - one data model,\n *  - one query,\n *  - one result set\n *  - several UI widgets.\n */\nclass EqContext {\n    constructor() {\n        this.options = {\n            syncSortOrderWithColumnsOrder: true,\n            attributeFormat: '{entity} {attr}',\n            columnTitleFormat: null //means it will be the same as attributeFormat\n        };\n        this.servicesInitialized = false;\n        this.modelLoader = null;\n        this.queryStorage = null;\n        this.querySynchronizer = null;\n        this.dataFetcher = null;\n        this.valueListLoader = null;\n        this.queryFileLoader = null;\n        this.aggrCalculator = null;\n        this.internalListCache = {};\n        this.loadModelOnStart = true;\n        this.loadQueryOnStart = false;\n        this.useStoredQueryOnFetch = false;\n        this.debugMode = false;\n        this._backendInfo = {\n            type: 'EQN-ANC',\n            subType: 'asp-net-core-razor'\n        };\n        //----------- endpoint processing functions --------------\n        this.endpointVarsRegex = /\\{.*?\\}/g;\n        this.elasticPaging = false;\n        this._predefinedListRequestHandlers = {\n            '_DSDE': (params, onResult) => {\n                const data = this.getModel().getAllDateMacros()\n                    .map(macroId => {\n                    return { id: '${{' + macroId + '}}', text: i18n.getText(macroId) };\n                });\n                onResult(data);\n                return true;\n            },\n            '_DSTE': (params, onResult) => {\n                const data = this.getModel().getAllTimeMacros()\n                    .map(macroId => {\n                    return { id: '${{' + macroId + '}}', text: i18n.getText(macroId) };\n                });\n                onResult(data);\n                return true;\n            }\n        };\n        this._listRequestHandler = (options, onResult) => {\n            if (options == null || !options.listName)\n                return;\n            const query = this.getQuery();\n            const params = utils.assign({ listName: options.listName }, options.editorParams);\n            const reqParams = {};\n            const attrPattern = /@{{(.+?)}}/;\n            for (const prop in params) {\n                if (!params[prop])\n                    continue;\n                let match = params[prop].match(attrPattern);\n                if (match) {\n                    let paramValue = query.getOneValueForAttr(match[1]);\n                    if (!paramValue) {\n                        paramValue = '';\n                    }\n                    reqParams[prop] = params[prop].replace(attrPattern, paramValue);\n                }\n            }\n            const requestParams = {\n                listName: reqParams.listName,\n                editorId: options.editorId,\n                queryParams: reqParams\n            };\n            let list = this.getListFromCache(options);\n            if (list && list.length > 0) {\n                onResult(list);\n                return;\n            }\n            let processed = false;\n            const predefinedHandler = this._predefinedListRequestHandlers[options.editorId];\n            if (predefinedHandler) {\n                processed = predefinedHandler(options, onResult);\n            }\n            if (!processed && this.clientListRequestHandler) {\n                processed = this.clientListRequestHandler(options, onResult);\n            }\n            if (!processed) {\n                this.loadValueList({\n                    params: requestParams,\n                    success: (data) => {\n                        if (data) {\n                            this.addListToCache(options, data);\n                        }\n                        onResult(data);\n                    },\n                    error: (message) => {\n                        onResult(null);\n                    }\n                });\n            }\n        };\n        this.baseEndpoint = 'api/easyquery';\n        this.eqServices = EqServiceProvider.getInstance();\n        this.widgets = new Array();\n        this.eventEmitter = new EventEmitter(this);\n        this.exporters = new Map();\n        this.endpoints = new Map();\n        this.dataLoader = new EasyQueryDataLoader(this);\n        this.resultTable = new EasyDataTable({\n            loader: this.dataLoader,\n            onUpdate: this.onResultTableUpdate.bind(this)\n        });\n        this.resultTable.id = 'ResultTable';\n        this.errorHandlerId = this.addEventListener('error', (context, status) => {\n            status.result = EqActionResult.Error;\n            const msgTitle = status.action ? status.action + ' error' : 'Error';\n            let msgText = status.text ? status.text : '';\n            if (status.sourceError && status.sourceError.message !== msgText) {\n                msgText += '\\n' + status.sourceError;\n            }\n            console.error(msgTitle + ': ' + msgText);\n        });\n    }\n    getServices() {\n        return this.eqServices;\n    }\n    getModelLoader() {\n        if (!this.modelLoader) {\n            const modelLoaderResolver = this.eqServices.getModelLoaderResolver();\n            this.modelLoader = modelLoaderResolver(this);\n        }\n        return this.modelLoader;\n    }\n    getModelStorage() {\n        if (!this.modelStorage) {\n            const modelStorageResolver = this.eqServices.getModelStorageResolver();\n            this.modelStorage = modelStorageResolver(this);\n        }\n        return this.modelStorage;\n    }\n    getQueryStorage() {\n        if (!this.queryStorage) {\n            const queryStorageResolver = this.eqServices.getQueryStorageResolver();\n            this.queryStorage = queryStorageResolver(this);\n        }\n        return this.queryStorage;\n    }\n    getQuerySynchronizer() {\n        if (!this.querySynchronizer) {\n            const querySynchronizerResolver = this.eqServices.getQuerySynchronizerResolver();\n            this.querySynchronizer = querySynchronizerResolver(this);\n        }\n        return this.querySynchronizer;\n    }\n    getDataFetcher() {\n        if (!this.dataFetcher) {\n            const dataFetcherResolver = this.eqServices.getDataFetcherResolver();\n            this.dataFetcher = dataFetcherResolver(this);\n        }\n        return this.dataFetcher;\n    }\n    getValueListLoader() {\n        if (!this.valueListLoader) {\n            const vllResolver = this.eqServices.getValueListLoaderResolver();\n            this.valueListLoader = vllResolver(this);\n        }\n        return this.valueListLoader;\n    }\n    getQueryFileLoader() {\n        if (!this.queryFileLoader) {\n            const queryFileLoaderResolver = this.eqServices.getQueryFileLoaderResolver();\n            this.queryFileLoader = queryFileLoaderResolver(this);\n        }\n        return this.queryFileLoader;\n    }\n    getAggregatesCalculator() {\n        if (!this.aggrCalculator) {\n            const aggrCalculatorResolver = this.eqServices.getAggregatesCalculatorResolver();\n            this.aggrCalculator = aggrCalculatorResolver(this);\n        }\n        return this.aggrCalculator;\n    }\n    /**\n    * Activates `Enterprise` functionality of the library. Works only with @easyquery/enterprise packag and a proper license key.\n    * @param keyOrInitCallback The license key or a callback wich is called after\n    * loading the license key from the back-end.\n    * If the callback function is called useEnterprise will try to get the license key from {base}/lck endpoint\n    *\n    * @example\n    * context.useEnterprise('license key');\n    * //or\n    * context.useEnterprise(() => {\n    *   //further logic\n    *\tview.init(options);\n    * });\n    */\n    useEnterprise(keyOrInitCallback) {\n        console.warn('This method does nothing and should not be called in the Community version of the library');\n    }\n    registerExporter(format, resolver) {\n        this.exporters.set(format, resolver);\n    }\n    registerServerExporter(format, responseType) {\n        this.registerExporter(format, (context) => {\n            const exporter = new EqServerExporter(context);\n            exporter.setFormat(format, responseType);\n            return exporter;\n        });\n    }\n    getExporter(format) {\n        const resolver = this.exporters.get(format);\n        if (resolver) {\n            return resolver(this);\n        }\n        return null;\n    }\n    getExportFormats() {\n        return Array.from(this.exporters.keys());\n    }\n    addDefaultExporters() {\n        this.registerServerExporter('csv', 'arraybuffer');\n        this.registerServerExporter('excel-html', 'arraybuffer');\n    }\n    resolveEndpoint(endpointKey, options) {\n        options = options || {};\n        let result = this.endpoints.get(endpointKey);\n        if (!result) {\n            throw endpointKey + ' endpoint is not defined';\n        }\n        let matches = result.match(this.endpointVarsRegex);\n        if (matches) {\n            for (let match of matches) {\n                let opt = match.substring(1, match.length - 1);\n                let optVal = options[opt];\n                if (!optVal) {\n                    if (opt == 'modelId') {\n                        optVal = this.getModel().getId();\n                    }\n                    else if (opt == 'queryId') {\n                        optVal = this.getQuery().getId();\n                    }\n                    else {\n                        throw `Parameter [${opt}] is not defined`;\n                    }\n                }\n                result = result.replace(match, optVal);\n            }\n        }\n        return result;\n    }\n    setEndpoint(key, value) {\n        this.endpoints.set(key, value);\n    }\n    setEndpointIfNotExist(key, value) {\n        if (!this.endpoints.has(key))\n            this.endpoints.set(key, value);\n    }\n    setDefaultEndpoints(endpointBase) {\n        this.setEndpointIfNotExist('GetModel', equtils.combinePath(endpointBase, 'models/{modelId}'));\n        this.setEndpointIfNotExist('GetQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('SaveQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('SyncQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}/sync'));\n        this.setEndpointIfNotExist('NewQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries'));\n        this.setEndpointIfNotExist('RemoveQuery', equtils.combinePath(endpointBase, 'models/{modelId}/queries/{queryId}'));\n        this.setEndpointIfNotExist('GetQueryList', equtils.combinePath(endpointBase, 'models/{modelId}/queries'));\n        this.setEndpointIfNotExist('FetchData', equtils.combinePath(endpointBase, 'models/{modelId}/fetch'));\n        this.setEndpointIfNotExist('GetValueList', equtils.combinePath(endpointBase, 'models/{modelId}/valuelists/{listId}'));\n        this.setEndpointIfNotExist('ExportResult', equtils.combinePath(endpointBase, 'models/{modelId}/export/{format}'));\n        this.setEndpointIfNotExist('GetQueryFile', equtils.combinePath(endpointBase, 'models/{modelId}/getqueryfile/{format}'));\n        this.setEndpointIfNotExist('UploadQueryFile', equtils.combinePath(endpointBase, 'models/{modelId}/uploadqueryfile'));\n    }\n    initStart() {\n        this.servicesInitialized = true;\n    }\n    /**\n     * Initializes the context\n     * @param options\n     */\n    init(options) {\n        if (!this.servicesInitialized)\n            this.initStart();\n        options = options || {};\n        this.setOptions(options);\n        if (typeof (options.debugMode) !== 'undefined') {\n            this.debugMode = options.debugMode;\n        }\n        if (typeof (options.chunkSize) !== 'undefined') {\n            this.resultTable.chunkSize = options.chunkSize;\n        }\n        if (typeof (options.elasticPaging) !== 'undefined') {\n            this.elasticPaging = options.elasticPaging;\n        }\n        if (options.listCache) {\n            this.setExternalListCache(options.listCache);\n        }\n        if (options.locale) {\n            i18n.setCurrentLocale(options.locale);\n        }\n        if (options.localeSettings) {\n            i18n.updateLocaleSettings(options.localeSettings);\n        }\n        if (options.endpoint) {\n            this.baseEndpoint = options.endpoint;\n            console.warn('The `endpoint` option is deprecated.\\n'\n                + 'Please use `context.useEndpoint(endpointURL)` function instead.');\n        }\n        this.setDefaultEndpoints(this.baseEndpoint);\n        if (options.modelStorageResolver) {\n            const eqServices = this.getServices();\n            eqServices.registerModelStorageResolver(options.modelStorageResolver);\n        }\n        this.loadQueryOnStart = false;\n        if (options.loadQueryOnStart) {\n            this.loadQueryOnStart = options.loadQueryOnStart;\n        }\n        this.loadModelOnStart = true;\n        if (typeof options.loadModelOnStart !== 'undefined') {\n            this.loadModelOnStart = options.loadModelOnStart;\n        }\n        if (options.handlers) {\n            if (options.handlers.onInit) {\n                this.addEventListener('ready', options.handlers.onInit);\n            }\n            if (options.handlers.afterLoadModel) {\n                this.addEventListener('loadModel', options.handlers.afterLoadModel);\n            }\n            if (options.handlers.afterLoadQuery) {\n                this.addEventListener('loadQuery', options.handlers.afterLoadQuery);\n            }\n            if (options.handlers.afterSyncQuery) {\n                this.addEventListener('syncQuery', options.handlers.afterSyncQuery);\n            }\n            if (options.handlers.afterFetchData) {\n                this.addEventListener('fetchData', options.handlers.afterFetchData);\n            }\n            if (options.handlers.afterExportResult) {\n                this.addEventListener('exportResult', options.handlers.afterExportResult);\n            }\n            if (options.handlers.onProcessStart) {\n                this.addEventListener('processStart', options.handlers.onProcessStart);\n            }\n            if (options.handlers.onProcessEnd) {\n                this.addEventListener('processEnd', options.handlers.onProcessEnd);\n            }\n            if (options.handlers.onError) {\n                this.removeEventListener('error', this.errorHandlerId);\n                this.addEventListener('error', options.handlers.onError);\n            }\n            if (options.handlers.onListRequest) {\n                this.clientListRequestHandler = options.handlers.onListRequest;\n            }\n            if (options.handlers.beforeLoadModel) {\n                this.beforeLoadModel = options.handlers.beforeLoadModel;\n            }\n            if (options.handlers.beforeLoadQuery) {\n                this.beforeLoadQuery = options.handlers.beforeLoadQuery;\n            }\n            if (options.handlers.beforeSyncQuery) {\n                this.beforeSyncQuery = options.handlers.beforeSyncQuery;\n            }\n            if (options.handlers.beforeFetchData) {\n                this.beforeFetchData = options.handlers.beforeFetchData;\n            }\n            if (options.handlers.beforeExportResult) {\n                this.beforeExportResult = options.handlers.beforeExportResult;\n            }\n        }\n        this.initialQuery = options.initialQuery;\n        this.defaultQueryId = options.defaultQueryId || '';\n        this.defaultModelId = options.defaultModelId || '__default';\n        const modelLoader = this.getModelLoader();\n        modelLoader.init(options);\n        const queryStorage = this.getQueryStorage();\n        queryStorage.init(options);\n        if (options.useDefaultExporters !== false) {\n            this.addDefaultExporters();\n        }\n        if (options.serverExporters) {\n            this.exporters.clear();\n            for (const format of options.serverExporters) {\n                this.registerServerExporter(format, \"arraybuffer\");\n            }\n        }\n        const query = this.getQuery();\n        if (options.defaultQueryId) {\n            query.setId(options.defaultQueryId);\n        }\n        //init widgets\n        this.widgets.forEach((widget) => {\n            let widgetOptions = {};\n            if (options.widgets && options.widgets[widget.getWidgetType()]) {\n                widgetOptions = options.widgets[widget.getWidgetType()];\n            }\n            widget.init(this, widgetOptions);\n        });\n        if (this.loadModelOnStart) {\n            this.loadDefaultModel();\n        }\n        else {\n            this.fireEvent('ready');\n        }\n    }\n    setOptions(options) {\n        utils.assign(this.options, options);\n    }\n    get backendInfo() {\n        return this._backendInfo;\n    }\n    /**\n     * Sets endpoint for all EasyQuery actions. Should be called before `init` and\n     * `useEnterprise` methods\n     * @param endpoint\n     * @example\n     * ```\n     * view.getContext()\n     *     .useEndpoint('/api/easyquery')\n     *     .useEnterprise(function () {\n     *          view.init();\n     *     });\n     * ```\n     */\n    useEndpoint(endpoint) {\n        this.baseEndpoint = endpoint;\n        return this;\n    }\n    /**\n     * Allows to specify the type of backend service.\n     *\n     * @param backendInfo - the structure that contains information about the app used on the backend\n     * Possible values for `ptag` property: 'EQN-ANC' - ASP.NET Core or 'EQN-ASP' - for ASP.NET 4 backend\n     */\n    useBackend(backendInfo) {\n        if (backendInfo.type) {\n            this._backendInfo.type = backendInfo.type;\n        }\n        if (backendInfo.subType) {\n            this._backendInfo.subType = backendInfo.subType;\n        }\n        else {\n            switch (this._backendInfo.type) {\n                case 'EQN-ANC':\n                    this._backendInfo.subType = 'asp-net-core-razor';\n                    break;\n                case 'EQN-ASP':\n                    this._backendInfo.subType = 'asp-net-4-mvc';\n                    break;\n                default:\n                    this._backendInfo.subType = 'other';\n                    break;\n            }\n        }\n        return this;\n    }\n    /**\n     * Add a new widget to the context.\n     * After that the widget will start to receive messages from other context components.\n     * @param widget\n     */\n    addWidget(widget) {\n        this.widgets.push(widget);\n    }\n    /**\n     * Returns all widgets with current type.\n     * @param widgetType The widget type\n     */\n    getAllWidgetsByType(widgetType) {\n        return this.widgets\n            .filter(widget => widget.getWidgetType() === widgetType);\n    }\n    /**\n     * Returns first registerd widget with current type\n     * @param widgetType The widget type\n     */\n    getWidgetByType(widgetType) {\n        const widgets = this.getAllWidgetsByType(widgetType);\n        return widgets.length > 0 ? widgets[0] : null;\n    }\n    /**\n     * This method is called automatically when some change was made either in context's data model or query\n     * @param groups\n     */\n    refreshWidgets(groups = WidgetGroup.All) {\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.refresh();\n            }\n        });\n    }\n    /**\n     * Register a new handler for 'query changed' event\n     * @param callback\n     */\n    addQueryChangedCallback(callback) {\n        this.getQuery().addChangedCallback(callback);\n    }\n    /**\n     * Removes the function from the list of registerd handlers for 'query changed' event\n     * @param callback\n     */\n    removeQueryChangedCallback(callback) {\n        this.getQuery().removeChangedCallback(callback);\n    }\n    /**\n     * Creates a new query object using the current instance of EqServices\n     */\n    createQuery() {\n        return this.eqServices.createQuery(this);\n    }\n    /**\n     * Gets the current query\n     */\n    getQuery() {\n        if (!this.query) {\n            if (!this.servicesInitialized) {\n                throw new Error(\"Can't create query until the context is initialized\");\n            }\n            this.query = this.createQuery();\n        }\n        return this.query;\n    }\n    /**\n     * Gets the current data model\n     */\n    getModel() {\n        if (!this.dataModel) {\n            this.dataModel = this.eqServices.createDataModel(this);\n        }\n        return this.dataModel;\n    }\n    /**\n     * Sets the content of the current data model\n     */\n    loadModelFromData(modelPlainData) {\n        this.getQuery().loadModelData(modelPlainData);\n        this.dataModel = this.getQuery().getModel();\n    }\n    /**\n     * Sets the ID of the default model\n     * @param modelId\n     */\n    setDefaultModelId(modelId) {\n        this.defaultModelId = modelId;\n    }\n    /**\n     * Notifies context components about starting of some long process (e.g. model loading)\n     * This method raises onProcessStart event in the context and all its widgets\n     * @param message\n     * @param groups\n     */\n    startProcess(message, groups) {\n        this.eventEmitter.fire('processStart', message);\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.onProcessStart();\n            }\n        });\n    }\n    /**\n     * Notifies all context components about the finishing of some long process\n     * @param status\n     * @param groups\n     */\n    endProcess(status, groups) {\n        this.eventEmitter.fire('processEnd', status);\n        if (status.result === EqActionResult.Error) {\n            this.throwError(status);\n        }\n        this.widgets.forEach((widget) => {\n            if (widget.belongsToGroup(groups)) {\n                widget.onProcessEnd();\n            }\n        });\n    }\n    /**\n     * Throws the error passed in the function parameter.\n     * If onError event handler is defined - we call that method.\n     * Otherwise - just place the error message to the browser console.\n     * @param status an instance of ActionStatus inteface that represents the action on which the error occurred\n     */\n    throwError(status) {\n        status.result = EqActionResult.Error;\n        this.eventEmitter.fire('error', status);\n    }\n    /**\n     * If `defaultModelId` property is define - this method calls `loadModel` function in the broker\n     * to load the model with such ID.\n     */\n    loadDefaultModel() {\n        this.loadModel({\n            modelId: this.defaultModelId,\n            silent: true,\n            success: () => {\n                this.refreshWidgets(WidgetGroup.Model);\n                let query = this.getQuery();\n                this.fireEvent('initialModelLoad');\n                if (this.initialQuery) {\n                    query.loadFromData(this.initialQuery, {\n                        changeStatus: false\n                    });\n                }\n                if (this.loadQueryOnStart) {\n                    this.loadQuery({\n                        queryId: this.defaultQueryId,\n                        modelId: this.defaultModelId,\n                        success: () => {\n                            //if we load query on start - then we should throw the 'ready' event only after its successful loading\n                            this.throwReady();\n                        },\n                        error: () => {\n                            //if the default query can't be loaded - we still throw the 'ready' event\n                            this.throwReady();\n                        }\n                    });\n                }\n                else {\n                    this.throwReady();\n                }\n            }\n        });\n    }\n    /**\n     * Refreshes all widgets and raises 'ready' event\n     */\n    throwReady() {\n        this.refreshWidgets(WidgetGroup.Query);\n        this.fireEvent('ready');\n    }\n    /**\n     * Clears the content of the current query\n     */\n    clearQuery() {\n        const query = this.getQuery();\n        query.clear();\n        query.fireChangedEvent({\n            part: QueryChangePart.All\n        });\n    }\n    /**\n     * Clears all query results (the data set and the statement, if any)\n     */\n    clearResult() {\n        this.resultTable.clear(); // do not set resultTable to null. Just clear\n        this.resultStatement = null;\n        this.resultContent = null;\n    }\n    /**\n     * Sets the external 'list cache' provider - an object which implements `ExternalListCache` inteface\n     * @param cache\n     */\n    setExternalListCache(cache) {\n        this.externalListCache = cache;\n    }\n    getListFromCache(params) {\n        const key = this.getListCacheKey(params);\n        if (this.externalListCache) {\n            return this.externalListCache.get(key);\n        }\n        else {\n            return this.internalListCache[key];\n        }\n    }\n    getListCacheKey(params) {\n        let key = params.listName == 'SQL' ? 'SQL_' + params.editorId : params.listName;\n        if (params.queryParams) {\n            key += '_' + Object.keys(params.queryParams).filter(k => k != 'listName')\n                .map(k => params.queryParams[k])\n                .join('_');\n        }\n        return key;\n    }\n    addListToCache(params, list) {\n        const key = this.getListCacheKey(params);\n        if (this.externalListCache) {\n            this.externalListCache.set(key, list);\n        }\n        else {\n            this.internalListCache[key] = list;\n        }\n    }\n    /**\n     * Clears the current list cache.\n     */\n    resetListCache() {\n        if (this.externalListCache) {\n            this.externalListCache.clear();\n        }\n        else {\n            this.internalListCache = {};\n        }\n    }\n    /**\n     * Gets the handler for 'GetList' requests\n     */\n    getListRequestHandler() {\n        return this._listRequestHandler;\n    }\n    /**\n     * Adds the translations of the EasyQuery messages for some locale\n     * @param locale - the ISO code of the locale (like `en` or `uk`)\n     * @param localeInfo - Locale settings and translations of EasyQuery texts and messages.\n     * We expected an object with the struture of LocaleInfo interface here.\n     */\n    addLocale(locale, localeInfo) {\n        i18n.addLocale(locale, localeInfo);\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, (event) => handler(this, event.data));\n    }\n    /**\n     * Remove event handler for event type .\n     * @param eventType The event type.\n     * @param handlerId The handler id.\n     */\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    fireEvent(eventType, data) {\n        this.eventEmitter.fire(eventType, data);\n    }\n    getBaseEndpoint() {\n        return this.baseEndpoint;\n    }\n    /**\n     * Sends a `loadValueList` requesthe server and processes the response.\n     * @param options A map of options to pass to `loadValueList` function.\n     */\n    loadValueList(options) {\n        options = options || {};\n        this.startProcess({\n            action: EqAction.GetValueList,\n            text: 'Loading values'\n        }, WidgetGroup.Result);\n        const valueListResolver = this.getValueListLoader();\n        valueListResolver.loadValueList(options)\n            .then((values) => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.GetValueList,\n                text: 'Values loaded'\n            }, WidgetGroup.Result);\n            if (options.success) {\n                options.success(values);\n            }\n        })\n            .catch((error) => {\n            const editorId = options && options.params ? options.params.editorId : 'undefined';\n            const errorMessage = `Can't load the value list for editor ${editorId}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.GetValueList,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Result);\n            if (options.error) {\n                options.error(errorMessage, 'GetValueList');\n            }\n        });\n    }\n    /**\n     * Starts the process of the model loading.\n     * This method can initiate a request to EasyQueryServer backend or get the model from OData or GraphQL endpoint\n     * The content of the `options` parameter depends on concrete loader implementation.\n     * @param options A map of options to pass to `loadModel` function (can be ommited)\n     * @example\n     * context.loadModel()\n     *    .then(model => {\n     *       alert(\"Model loaded!\");\n     *    });\n     */\n    loadModel(options) {\n        if (this.beforeLoadModel) {\n            this.beforeLoadModel(this, options);\n        }\n        const modelId = options.modelId || '__default';\n        const silent = options.silent || false;\n        this.startProcess({\n            action: EqAction.LoadModel,\n            text: 'Loading model: ' + modelId\n        }, WidgetGroup.Model);\n        const modelLoader = this.getModelLoader();\n        return modelLoader.startModelLoading(options)\n            .then((value) => {\n            if (value) {\n                this.loadModelFromData(value);\n                if (this.dataModel.isEmpty()) {\n                    console.warn(`Empty model has been loaded. Model ID: ${this.dataModel.getId()}`);\n                }\n            }\n            else {\n                console.warn('Model has not been changed.');\n            }\n            this.fireEvent('loadModel');\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.LoadModel,\n                text: 'Model loaded: ' + modelId\n            }, WidgetGroup.Model);\n            if (!silent) {\n                this.clearQuery();\n                this.clearResult();\n                this.refreshWidgets();\n            }\n            if (options.success) {\n                options.success(this.getModel());\n            }\n            return this.getModel();\n        })\n            .catch(error => {\n            const errorMessage = `Can't load model ${modelId}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.LoadModel,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Model);\n            if (options.error) {\n                options.error(errorMessage, \"LoadModel\");\n            }\n            return this.getModel();\n        });\n    }\n    callWhenModelLoaded(callFunc) {\n        const modelLoader = this.getModelLoader();\n        modelLoader.getModelPromise().then(() => {\n            callFunc();\n        });\n    }\n    /**\n     * Loads the query\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks and `queryId` property of the query to load.\n     * @example\n     * context.loadQuery({\n     *      queryId: \"query-id\"\n     * });\n     */\n    loadQuery(options) {\n        options = options || {};\n        const modelLoader = this.getModelLoader();\n        this.clearResult();\n        modelLoader.getModelPromise()\n            .then(() => {\n            options = options || {};\n            const queryId = options.queryId;\n            const silent = options.silent || false;\n            if (this.beforeLoadQuery) {\n                this.beforeLoadQuery(this, options);\n            }\n            this.startProcess({\n                action: EqAction.LoadQuery,\n                text: \"Query loading: \" + queryId\n            }, WidgetGroup.Query);\n            const queryStorage = this.getQueryStorage();\n            queryStorage.loadQuery(options)\n                .then((data) => {\n                if (data) {\n                    this.query.loadFromData(data, {\n                        validate: false\n                    });\n                }\n                this.limitCustomSqlColumns();\n                this.fireEvent('loadQuery');\n                this.endProcess({\n                    result: EqActionResult.Success,\n                    action: EqAction.LoadQuery,\n                    text: 'Query loaded: ' + queryId\n                }, WidgetGroup.Query);\n                this.query.resetModified();\n                if (!silent) {\n                    this.query.fireChangedEvent({\n                        part: QueryChangePart.Properties,\n                        wasModified: this.query.isModified()\n                    });\n                    this.refreshWidgets();\n                }\n                if (options.success) {\n                    options.success(this.query);\n                }\n            })\n                .catch((error) => {\n                const query = this.getQuery();\n                error.message = \"Can't load query [\" + query.getId() + \"]\\n\" + (error.message || \"\");\n                if (options.error) {\n                    options.error(error.message, EqAction.LoadQuery);\n                }\n                this.endProcess({\n                    result: EqActionResult.Error,\n                    action: EqAction.LoadQuery,\n                    text: error.message,\n                    sourceError: error\n                }, WidgetGroup.Query);\n            });\n        })\n            .catch((error) => {\n            console.error(error);\n        });\n    }\n    /**\n     * Loads the list of queries available for the current user.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks\n     */\n    loadQueryList(options) {\n        const modelLoader = this.getModelLoader();\n        modelLoader.getModelPromise()\n            .then(() => {\n            this.startQueryListLoading(options);\n        })\n            .catch((error) => {\n            const errorMessage = `Can't load the list of available queries.\\n ${error.message}`;\n            this.throwError({\n                action: EqAction.LoadQueryList,\n                text: errorMessage,\n                sourceError: error\n            });\n        });\n    }\n    startQueryListLoading(options) {\n        options = options || {};\n        const queryStorage = this.getQueryStorage();\n        const queryListLoadingPromise = queryStorage.getQueryList(options);\n        queryListLoadingPromise\n            .then((queries) => {\n            if (options.success) {\n                options.success(queries);\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't load the list of available queries.\\n ${error.message}`;\n            if (options.error) {\n                options.error(errorMessage, 'LoadQueryList');\n            }\n            else {\n                this.throwError({\n                    action: EqAction.LoadQueryList,\n                    text: errorMessage,\n                    sourceError: error\n                });\n            }\n        });\n    }\n    /**\n     * Creates a new query and returns its content back to the client-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success`, `error` callbacks and `silent` option\n     * @example\n     * context.newQuery({\n     *    silent: true\n     * });\n     */\n    newQuery(options) {\n        options = options || {};\n        const clearQuery = typeof options.clearQuery !== 'undefined' ? options.clearQuery : true;\n        this.query.reset(clearQuery);\n        if (options.queryId) {\n            this.query.setId(options.queryId);\n        }\n        if (options.name) {\n            this.query.setName(options.name);\n        }\n        if (options.description) {\n            this.query.setDescription(options.description);\n        }\n        const silent = options.silent || false;\n        let useStorage = true;\n        if (typeof options.useStorage !== 'undefined') {\n            useStorage = options.useStorage;\n        }\n        const onNewQuery = () => {\n            const query = this.getQuery();\n            query.isNewbie = true;\n            if (!silent) {\n                query.fireChangedEvent({\n                    part: QueryChangePart.All,\n                    wasModified: query.isModified()\n                });\n            }\n        };\n        if (useStorage) {\n            this.startProcess({\n                action: EqAction.NewQuery,\n                text: 'New query creation...'\n            }, WidgetGroup.Query);\n            const queryStorage = this.getQueryStorage();\n            queryStorage.newQuery(options)\n                .then((queryData) => {\n                if (queryData) {\n                    this.query.loadFromData(queryData);\n                }\n                this.endProcess({\n                    result: EqActionResult.Success,\n                    action: EqAction.NewQuery,\n                    text: 'A new query has been created'\n                }, WidgetGroup.Query);\n                onNewQuery();\n                if (options.success) {\n                    options.success();\n                }\n            })\n                .catch((error) => {\n                const errorMessage = `Can't create a new query.\\n${error.message}`;\n                this.endProcess({\n                    result: EqActionResult.Error,\n                    action: EqAction.NewQuery,\n                    text: errorMessage,\n                    sourceError: error\n                }, WidgetGroup.Query);\n                if (options.error) {\n                    options.error(errorMessage, \"NewQuery\");\n                }\n            });\n        }\n        else {\n            onNewQuery();\n        }\n        return this.query;\n    }\n    /**\n     * Saves the current query to some storage on the server-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    saveQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.SaveQuery,\n            text: 'Query saving: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryStorage = this.getQueryStorage();\n        queryStorage.saveQuery(options)\n            .then((data) => {\n            this.endProcess({\n                action: EqAction.SaveQuery,\n                result: EqActionResult.Success,\n                text: \"Query saved: \" + query.getId()\n            }, WidgetGroup.Query);\n            if (data) {\n                query.loadFromData(data);\n            }\n            query.resetModified();\n            query.isNewbie = false;\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't save query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                action: EqAction.SaveQuery,\n                result: EqActionResult.Error,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, EqAction.SaveQuery);\n            }\n        });\n    }\n    /**\n     * Removes the current query from some storage on the server-side.\n     * @param options\n     * The content of the `options` parameter depends on `QueryStorage` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    removeQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.RemoveQuery,\n            text: 'Query deleting: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryStorage = this.getQueryStorage();\n        queryStorage.removeQuery(options)\n            .then(() => {\n            query.reset();\n            this.endProcess({\n                action: EqAction.RemoveQuery,\n                result: EqActionResult.Success,\n                text: \"Query deleted: \" + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't remove query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                action: EqAction.RemoveQuery,\n                result: EqActionResult.Error,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'RemoveQuery');\n            }\n        });\n    }\n    /**\n     * Syncronizes the current query.\n     * @param options\n     * The content of the `options` parameter depends on `QuerySyncronizer` implementation.\n     * Usually it contains `success` and `error` callbacks\n     */\n    syncQuery(options) {\n        options = options || {};\n        const query = this.getQuery();\n        if (this.beforeSyncQuery) {\n            this.beforeSyncQuery(this, options);\n        }\n        this.startProcess({\n            action: EqAction.SyncQuery,\n            text: 'Query syncing: ' + query.getId()\n        }, WidgetGroup.Query);\n        const querySyncrhonizer = this.getQuerySynchronizer();\n        querySyncrhonizer.syncQuery(options)\n            .then((result) => {\n            this.resultStatement = result && result.statement\n                ? result.statement\n                : '';\n            this.fireEvent('syncQuery');\n            this.refreshWidgets(WidgetGroup.Statement);\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.SyncQuery,\n                text: 'Query synced: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (result) {\n                if (result.querySaved) {\n                    const q = result.query;\n                    if (q) {\n                        query.setId(q.id);\n                        query.setName(q.name);\n                        query.setDescription(q.desc);\n                        query.extraData = q.extraData;\n                    }\n                    query.resetModified();\n                    this.refreshWidgets(WidgetGroup.QueryStatus);\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Can't synchronize query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.SyncQuery,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'SyncQuery');\n            }\n        });\n    }\n    /**\n     * Fetches the data (usuall by executing current query) and processes the result.\n     * @param options\n     * The `options` parameter in addition to the options defined in FetchDataOptions structure may also contain `success` and `error` callbacks.\n     * @example\n     * context.fetchData({ success: function(result) {\n     *   //do whatever you want with the result\n     * }})\n     *\n     */\n    fetchData(options) {\n        options = options || {};\n        const elasticPaging = typeof (options.elasticPaging) !== 'undefined'\n            ? options.elasticPaging\n            : this.elasticPaging;\n        this.resultTable.elasticChunks = elasticPaging;\n        options.chunk = options.chunk ||\n            {\n                offset: 0,\n                limit: this.resultTable.chunkSize,\n                needTotal: !elasticPaging\n            };\n        if (this.debugMode) {\n            options.debug = 'Fetching the result set. Initial chunk';\n        }\n        if (!this.query.tryValidate({\n            checkExpressions: true\n        })) {\n            return;\n        }\n        //just to support the old way of catching \"group fetch\" operation finish\n        if (options.groupFetchSuccess) {\n            this.afterGroupFetch = options.groupFetchSuccess;\n        }\n        if (this.resultTable.elasticChunks) {\n            options.chunk.limit++;\n        }\n        this.fetchDataChunk(Object.assign(Object.assign({}, options), { success: (result) => {\n                if (result.statement) {\n                    this.resultStatement = result.statement;\n                    this.refreshWidgets(WidgetGroup.Statement);\n                }\n                const aggrCalculator = this.getAggregatesCalculator();\n                aggrCalculator.reset();\n                this.resultContent = result;\n                if (result.resultSet) {\n                    this.resultTable.clear();\n                    this.resultTable.id = this.query.getId();\n                    const resultSet = result.resultSet;\n                    for (const col of resultSet.cols) {\n                        this.resultTable.columns.add(col);\n                    }\n                    if (result.meta && typeof (result.meta.totalRecords) !== 'undefined') {\n                        this.resultTable.setTotal(result.meta.totalRecords);\n                    }\n                    const count = resultSet.rows.length;\n                    if (this.resultTable.elasticChunks && count === options.chunk.limit) {\n                        resultSet.rows.splice(resultSet.rows.length - 1, 1);\n                    }\n                    for (const row of resultSet.rows) {\n                        this.resultTable.addRow(row);\n                    }\n                    if (this.resultTable.elasticChunks) {\n                        this.resultTable['total'] = (count < options.chunk.limit)\n                            ? resultSet.rows.length\n                            : 0;\n                    }\n                    this.resultTable.fireUpdated();\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            } }));\n    }\n    getQueryFile(options) {\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.GetQueryFile,\n            text: 'Getting query file: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryFileLoader = this.getQueryFileLoader();\n        queryFileLoader.getQueryFile(options)\n            .then(() => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.GetQueryFile,\n                text: 'Getting query file: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch(error => {\n            const errorMessage = `Can't get file for query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.GetQueryFile,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'GetQueryFile');\n            }\n        });\n    }\n    uploadQueryFile(options) {\n        const query = this.getQuery();\n        this.startProcess({\n            action: EqAction.UploadQueryFile,\n            text: 'Uploading query file: ' + query.getId()\n        }, WidgetGroup.Query);\n        const queryFileLoader = this.getQueryFileLoader();\n        queryFileLoader.uploadQueryFile(options)\n            .then((data) => {\n            query.loadFromData(data);\n            this.fireEvent('loadQuery');\n            this.refreshWidgets();\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.UploadQueryFile,\n                text: 'Uploading query file: ' + query.getId()\n            }, WidgetGroup.Query);\n            if (options.success) {\n                options.success();\n            }\n        })\n            .catch(error => {\n            const errorMessage = `Can't upload a file for query ${query.getId()}.\\n ${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.UploadQueryFile,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Query);\n            if (options.error) {\n                options.error(errorMessage, 'UploadQueryFile');\n            }\n        });\n    }\n    fetchDataChunk(options) {\n        const queryId = this.getQuery().getId();\n        let fetchOptions = options || {};\n        fetchOptions.data = fetchOptions.data || {}; // add empty data property for convenience\n        if (this.useStoredQueryOnFetch) {\n            fetchOptions.queryId = this.query.getId();\n        }\n        if (this.beforeFetchData) {\n            this.beforeFetchData(this, fetchOptions);\n        }\n        this.startProcess({\n            action: EqAction.FetchData,\n            text: 'Fetching data for the query: ' + queryId\n        }, WidgetGroup.Result);\n        const dataFetcher = this.getDataFetcher();\n        dataFetcher.fetchData(fetchOptions)\n            .then((result) => {\n            if (result.statement) {\n                this.resultStatement = result.statement;\n            }\n            this.resultContent = result;\n            // we need to call success callback before firing fetchData,\n            // because otherwise, it won't update the result table \n            // in the context before afterFetchData callback is called.\n            if (fetchOptions.success) {\n                fetchOptions.success(result);\n            }\n            this.fireEvent('fetchData');\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.FetchData,\n                text: 'Data fetching is finished for the query: ' + queryId\n            }, WidgetGroup.Result);\n        })\n            .catch((error) => {\n            const errorMessage = `Data fetching error for the query ${queryId}. \\n${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.FetchData,\n                text: errorMessage,\n                sourceError: error\n            }, WidgetGroup.Result);\n            if (fetchOptions.error) {\n                fetchOptions.error(errorMessage, EqAction.FetchData);\n            }\n        });\n    }\n    onResultTableUpdate() {\n        const aggrSettings = this.query.getAggregationSettings();\n        const calculator = this.getAggregatesCalculator();\n        if (aggrSettings.needAggrCalculation() && calculator.needRecalculation()) {\n            calculator.calculate({\n                maxLevel: aggrSettings.getGroups().length + 1,\n                resultObtained: (result, level) => {\n                    if (this.afterGroupFetch) {\n                        this.afterGroupFetch(result);\n                    }\n                },\n                errorOccurred: error => {\n                    const errorMessage = `Data fetching error on group level ${error.level} query. \\n${error.message}`;\n                    this.throwError({\n                        action: EqAction.FetchData,\n                        text: errorMessage,\n                        sourceError: error\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Fetches the data for a drill-down query (if defined) and processes the result.\n     * @param options\n     */\n    fetchDrillDownData(options) {\n        options = options || {};\n        options.chunk = options.chunk ||\n            {\n                offset: 0,\n                limit: this.resultTable.chunkSize,\n                needTotal: true\n            };\n        const query = options.query;\n        const queryId = query.getId();\n        this.startProcess({\n            action: EqAction.FetchData,\n            text: 'DrillDown executing: ' + queryId\n        }, WidgetGroup.Result);\n        const queryExecutor = this.getDataFetcher();\n        queryExecutor.fetchData(options)\n            .then((result) => {\n            this.endProcess({\n                result: EqActionResult.Success,\n                action: EqAction.FetchData,\n                text: 'DrillDown execution error: ' + queryId\n            }, WidgetGroup.Result);\n            if (options.success) {\n                options.success(result);\n            }\n        })\n            .catch((error) => {\n            const errorMessage = `Drill-down data fetching error for query ${queryId}. \\n${error.message}`;\n            this.endProcess({\n                result: EqActionResult.Error,\n                action: EqAction.FetchData,\n                text: errorMessage,\n            }, WidgetGroup.Result);\n            if (options.error) {\n                options.error(errorMessage, 'DrillDown');\n            }\n            else {\n                this.throwError({\n                    action: EqAction.FetchData,\n                    text: errorMessage\n                });\n            }\n        });\n    }\n    /**\n     * Fetches the data for defined by this context and exports them to the specified format.\n     * @param options\n     * The content of the `options` parameter depends on `EqExporter` implementation.\n     * Usually it contains `format` property which defines the format of the exported data (e.g. `csv`),\n     * and `success` and `error` callbacks\n     * @example\n     * context.exportResult({\n     *      format: csv\n     * });\n     *\n     */\n    exportResult(options) {\n        let exportOptions = options || {};\n        exportOptions.chunk = exportOptions.chunk || EmptyChunk;\n        exportOptions.data = exportOptions.data || {}; //add data property for convenience\n        if (this.beforeExportResult) {\n            this.beforeExportResult(this, exportOptions);\n        }\n        const format = exportOptions.format;\n        if (format) {\n            const exporter = this.getExporter(format);\n            if (exporter) {\n                const queryId = this.getQuery().getId();\n                if (this.useStoredQueryOnFetch) {\n                    exportOptions.queryId = queryId;\n                }\n                this.startProcess({\n                    action: EqAction.ExportResult,\n                    text: 'Exporting result for query: ' + queryId\n                }, WidgetGroup.Result);\n                const localeSettings = i18n.getLocaleSettings();\n                exportOptions.settings = localeSettings;\n                const aggrSettings = this.query.getAggregationSettings();\n                if (aggrSettings.hasAggregates()\n                    && (aggrSettings.hasGrandTotals() || aggrSettings.hasGroups())) {\n                    exportOptions.aggregates = aggrSettings.saveToData();\n                }\n                exporter.export(exportOptions)\n                    .then((result) => {\n                    this.fireEvent('exportResult');\n                    this.endProcess({\n                        result: EqActionResult.Success,\n                        action: EqAction.ExportResult,\n                        text: `The result set for query [${queryId}] has been successfully exported`\n                    }, WidgetGroup.Result);\n                    if (exportOptions.success) {\n                        exportOptions.success();\n                    }\n                })\n                    .catch((error) => {\n                    const errorMessage = `Error on exporting data for query  ${queryId}. \\n${error.message}`;\n                    this.endProcess({\n                        result: EqActionResult.Error,\n                        action: EqAction.ExportResult,\n                        text: errorMessage,\n                        sourceError: error\n                    }, WidgetGroup.Result);\n                    if (exportOptions.error) {\n                        exportOptions.error(errorMessage, 'ExportResult');\n                    }\n                });\n            }\n            else {\n                console.error('No exporter for this format: ' + format);\n            }\n        }\n    }\n    limitCustomSqlColumns() {\n        if (!this.options.allowCustomExpressions) {\n            this.query.getColumns().forEach(col => {\n                if (col.expr.tag === ExprTag.CustomSql) {\n                    col.enabled = false;\n                }\n            });\n        }\n    }\n    getAttributeTitle(attr) {\n        const format = this.options.attributeFormat;\n        return this.getModel().getAttributeText(attr, format);\n    }\n    getColumnTitle(attr) {\n        const format = this.options.columnTitleFormat || this.options.attributeFormat;\n        return this.getModel().getAttributeText(attr, format);\n    }\n    getDefaultColumnCaption(column) {\n        let attr;\n        const model = this.getModel();\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return \"Contant Column\";\n            case ExprTag.CustomSql:\n                return \"SQL Column\";\n            case ExprTag.ParentColumn:\n                return \"Parent Column\";\n            case ExprTag.Query:\n                return \"Query Column\";\n            case ExprTag.EntityAttribute:\n            case ExprTag.ParentEntityAttribute:\n                attr = model.getAttributeById(column.expr.value);\n                return this.getColumnTitle(attr);\n            case ExprTag.AggregateFunction:\n                attr = model.getAttributeById(column.expr.args[0].value);\n                return this.getColumnTitle(attr) + ' ' + model.getAggrFunctionCaption(column.expr.func);\n            default:\n                return 'Column';\n        }\n    }\n}\n\nlet eqContextResolver;\nfunction registerEqContextResolver(resolver) {\n    eqContextResolver = resolver;\n}\nfunction createEqContext() {\n    if (!eqContextResolver) {\n        throw Error('No context resolver');\n    }\n    return eqContextResolver();\n}\n\nregisterEqContextResolver(() => new EqContext());\n\nvar eqconsts;\n(function (eqconsts) {\n    /**\n     * Defines some commonly used constants\n     */\n    class ConstLists {\n        constructor() {\n            /**\n             * Contains macros for the special dates (like Today, First day of the month, etc)\n             */\n            this.SpecDateValues = [\n                { id: '${Today}', key: 'Today', isDefault: true },\n                { id: '${Yesterday}', key: 'Yesterday' },\n                { id: '${Tomorrow}', key: 'Tomorrow' },\n                { id: '${FirstDayOfMonth}', key: 'FirstDayOfMonth' },\n                { id: '${FirstDayOfYear}', key: 'FirstDayOfYear' }\n            ];\n            /**\n             * Contains macros for the special times (like Now, Noon, etc)\n             */\n            this.SpecTimeValues = [\n                { id: '${Now}', key: 'Now', isDefault: true },\n                { id: '${HourStart}', key: 'HourStart' },\n                { id: '${Midnight}', key: 'Midnight' },\n                { id: '${Noon}', key: 'Noon' }\n            ];\n            /**\n             * Boolean values macros (true and false)\n             */\n            this.BooleanValues = [\n                { id: '${false}', key: 'False' },\n                { id: '${true}', key: 'True', isDefault: true }\n            ];\n        }\n    }\n    /**\n     * Contains some constants (macros) with special date/time and boolean values.\n     */\n    eqconsts.constLists = new ConstLists();\n    /**\n     * Constants representing various types of relationships between conditions\n     */\n    eqconsts.predicateLinkTypeList = [\n        { id: 'All', key: 'LinkTypeAll' },\n        { id: 'Any', key: 'LinkTypeAny' },\n        { id: 'None', key: 'LinkTypeNone' },\n        { id: 'NotAll', key: 'LinkTypeNotAll' }\n    ];\n})(eqconsts || (eqconsts = {}));\n\n/**\n * Represents Google data table class\n */\nclass GoogleDataConverter {\n    /**\n     * The default constructor.\n     * @param data The table instance or its JSON representation.\n     */\n    constructor(data) {\n        if (!data) {\n            data = {\n                cols: [],\n                rows: []\n            };\n        }\n        if (typeof data === \"string\") {\n            this.loadFromJSON(data);\n        }\n        else {\n            this.tableObj = data;\n        }\n    }\n    /**\n     * Loads data table from JSON.\n     * @param json The JSON representation.\n     */\n    loadFromJSON(json) {\n        this.tableObj = JSON.parse(json);\n    }\n    /**\n     * Saves data table to JSON.\n     * @returns The JSON representation.\n     */\n    toJSON() {\n        return JSON.stringify(this.tableObj);\n    }\n    /**\n     * Gets the google data table object.\n     * @returns The data table.\n     */\n    getObject() {\n        return this.tableObj;\n    }\n    /**\n     * Cheсks wether the table is empty\n     * @returns `true` if the table is empty, `false` if it is not.\n     */\n    isEmpty() {\n        return this.getNumberOfColumns() == 0 || this.getNumberOfRows() == 0;\n    }\n    /**\n     * Gets the number of columns\n     * @returns The number.\n     */\n    getNumberOfColumns() {\n        return this.tableObj.cols.length;\n    }\n    /**\n     * Gets the column object.\n     * @param colIndex The column index.\n     * @returns The column object.\n     */\n    getColumnObject(colIndex) {\n        return colIndex < this.tableObj.cols.length ? this.tableObj.cols[colIndex] : null;\n    }\n    /**\n     * Gets the column ID.\n     * @param colIndex The column index.\n     * @returns The column ID.\n     */\n    getColumnId(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.id : null;\n    }\n    /**\n     * Gets the column LABEL.\n     * @param colIndex The column index.\n     * @returns The column ID.\n     */\n    getColumnLabel(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.label : null;\n    }\n    /**\n     *  Gets the column type.\n     * @param colIndex The column index.\n     * @returns The column type.\n     */\n    getColumnType(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.type : null;\n    }\n    /**\n     * Gets the column properties.\n     * @param colIndex The column index.\n     * @returns The column properties.\n     */\n    getColumnProperties(colIndex) {\n        var col = this.getColumnObject(colIndex);\n        return col ? col.p : null;\n    }\n    /**\n     * Gets the number of rows.\n     * @returns The number.\n     */\n    getNumberOfRows() {\n        return this.tableObj.rows.length;\n    }\n    convertValue(value, colIndex) {\n        const colType = this.googleDataTypeToDataType(this.getColumnType(colIndex));\n        if ([DataType.Date, DataType.DateTime, DataType.Time].includes(colType)) {\n            // return eval(`new ${value}`)\n            return new Function(value, 'return new value');\n        }\n        return value;\n    }\n    /**\n     *  Gets the value.\n     * @param rowIndex\n     * @param colIndex\n     */\n    getValue(rowIndex, colIndex) {\n        const row = rowIndex < this.tableObj.rows.length ? this.tableObj.rows[rowIndex] : null;\n        if (row) {\n            const cell = colIndex < this.tableObj.cols.length ? row.c[colIndex] : null;\n            if (cell) {\n                return this.convertValue(cell.v, colIndex);\n            }\n        }\n        return null;\n    }\n    getRow(rowIndex) {\n        const googleRow = rowIndex < this.tableObj.rows.length ? this.tableObj.rows[rowIndex] : null;\n        const googleCells = googleRow.c;\n        const row = googleCells.map((obj, idx) => this.convertValue(obj.v, idx), this);\n        return row;\n    }\n    convertTo(dataTable) {\n        const colCount = this.getNumberOfColumns();\n        for (let i = 0; i < colCount; i++) {\n            dataTable.columns.add({\n                id: this.getColumnId(i),\n                label: this.getColumnLabel(i),\n                type: this.googleDataTypeToDataType(this.getColumnType(i))\n            });\n        }\n        const rowCount = this.getNumberOfRows();\n        for (let i = 0; i < rowCount; i++) {\n            dataTable.addRow(this.getRow(i));\n        }\n    }\n    googleDataTypeToDataType(googleDataType) {\n        switch (googleDataType) {\n            case 'string':\n                return DataType.String;\n            case 'number':\n                return DataType.Float;\n            case 'boolean':\n                return DataType.Bool;\n            case 'date':\n                return DataType.Date;\n            case 'datetime':\n                return DataType.DateTime;\n            case 'timeofday':\n                return DataType.Time;\n            default:\n                return DataType.String;\n        }\n    }\n}\n\nclass InMemoryModelStorage {\n    constructor(models) {\n        this.models = [];\n        if (models) {\n            utils.assign(this.models, [], models);\n        }\n    }\n    getModels() {\n        return new Promise((resolve, reject) => {\n            resolve(this.models);\n        });\n    }\n}\n\n/**\n * Represents a widget - a visual element with \"knows\" how to render itself.\n * Some widgets just display some information from the context (like the generated SQL or the result set).\n * Others - allow user to interact with them to define query conditions or columns.\n */\nclass Widget {\n    /**\n     Initializes a new instance of the `Widget` class\n     * @param slot - an HTML element in which we should place our widget.\n     */\n    constructor(slot) {\n        this.slot = slot;\n        this._id = utils.generateId(this.getWidgetType());\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Initializes the widget and assign it to some context\n     * @param context\n     * @param options\n     */\n    init(context, options) {\n        this.context = context;\n    }\n    /**\n     * Returns current context (the one this widget belongs to)\n     */\n    getContext() {\n        return this.context;\n    }\n    /**\n     * Refreshes the widget's content\n     */\n    refresh() {\n        this.refreshCore();\n    }\n    /**\n     * This function is called from `refresh` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget\n     */\n    refreshCore() {\n    }\n    /**\n     * This function is called on the start of some process this widget participates in.\n     * For example, some widgets can show a spinner or a progress bar\n     * at the beginning of some long process (e.g. model loading).\n     */\n    onProcessStart() {\n        this.onProcessStartCore();\n    }\n    /**\n     * This function is called from `onProcessStart` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget.\n     */\n    onProcessStartCore() {\n    }\n    /**\n     * This function is called on the end of some process this widget participates in.\n     * For example, some widgets should be updated on model loading\n     * or after the execution of the current query\n     */\n    onProcessEnd() {\n        this.onProcessEndCore();\n    }\n    /**\n     * This function is called from `onProcessEnd` function.\n     * It does nothing in the base `Widget` class\n     * but can be overridden in derived classes\n     * to implement the functionality specific for a particular widget.\n     */\n    onProcessEndCore() {\n    }\n    /**\n     * Returns `true` if the widget belongs to one of the groups specified in the parameter\n     * @param groups\n     */\n    belongsToGroup(groups) {\n        if (typeof groups != 'undefined' && groups != null) {\n            if ((groups & this.group) === 0)\n                return false;\n        }\n        return true;\n    }\n    destroy() {\n        this.destroyCore();\n    }\n    destroyCore() {\n    }\n}\n\nfunction addEasyQueryCoreTexts() {\n    i18n.updateDefaultTexts({\n        NewQueryName: '[New query]',\n        //DateTime macroses\n        Today: 'Today',\n        Yesterday: 'Yesterday',\n        Tomorrow: 'Tomorrow',\n        FirstDayOfMonth: 'First day of the month',\n        LastDayOfMonth: 'Last day of the month',\n        FirstDayOfWeek: 'First day of the week',\n        FirstDayOfYear: 'First day of the year',\n        FirstDayOfNextWeek: 'First day of the next week',\n        FirstDayOfNextMonth: 'First day of the next month',\n        FirstDayOfNextYear: 'First day of the next year',\n        Now: 'Now',\n        HourStart: 'This hour start',\n        Midnight: 'Midnight',\n        Noon: 'Noon',\n        Entities: {},\n        Attributes: {},\n        Operators: {},\n        AggregateFunctions: {}\n    });\n}\naddEasyQueryCoreTexts();\n\nexport { AggrFunction, BrowserQueryStorage, CondTag, Condition, ConditionPart, DataKind, DataModel, DefaultAggregatesCalculator, EasyQueryDataLoader, EmptyChunk, Entity, EntityAttr, EqAction, EqActionResult, EqAggregatesContainer, EqContext, EqEditorTag, EqModelLoader, EqQueryFileLoader, EqServerDataFetcher, EqServerExporter, EqServerModelLoader, EqServerQuerySynchronizer, EqServerValueListResolver, EqServiceProvider, EqValueEditor, ExprTag, Expression, FormatParser, GoogleDataConverter, InMemoryModelStorage, InvalidQueryError, LinkType, Operand, Operator, Query, QueryChangeAction, QueryChangePart, QueryColumn, SortDirection, Tree, Widget, WidgetGroup, createEqContext, eqconsts, equtils, registerEqContextResolver };\n","\n/*\n * EasyData.JS UI v1.5.8\n * Build time: 4/15/2025, 12:16:04 AM\n * Copyright 2020-2025 Korzh.com\n * Licensed under MIT\n */\n\nimport { utils, ColumnAlignment, DataType, i18n, EventEmitter, DataRow, liquid } from '@easydata/core';\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    let mobileModeChangeHandler;\n    function isIE() {\n        {\n            const ua = navigator.userAgent;\n            return ua.includes('MSIE') || ua.includes('Trident');\n        }\n    }\n    browserUtils.isIE = isIE;\n    function isEdge() {\n        const ua = window.navigator.userAgent;\n        return !isIE() && ua.includes('Edge/');\n    }\n    browserUtils.isEdge = isEdge;\n    function isFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().includes('firefox');\n        }\n        return _isFirefox;\n    }\n    browserUtils.isFirefox = isFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n})(browserUtils || (browserUtils = {}));\n\n/**\n * Wraps all the elements inside \"parent\" by \"wrapper\" element\n * @param parent The element to add wrapper to.\n * @param wrapper The element that will wrap child elements.\n */\nfunction wrapInner(parent, wrapper) {\n    parent.appendChild(wrapper);\n    while (parent.firstChild !== wrapper) {\n        wrapper.appendChild(parent.firstChild);\n    }\n}\n/**\n * Creates ands adds a new [[HTMLElement]] to \"parent\"\n * @param parent The element to add new element to.\n * @param tag Html tag of the new element.\n * @param options The options. In particular, options.cssClass sets the new element class.\n * @returns New element.\n */\nfunction addElement(parent, tag, options) {\n    let element = document.createElement(tag);\n    let opts = options || {};\n    if (opts.cssClass) {\n        element.className = opts.cssClass;\n    }\n    parent.appendChild(element);\n    return element;\n}\n/**\n * Adds css class to the html element.\n * @param element The element to add css class to.\n * @param className The name of the css class to be added.\n */\nfunction addCssClass(element, className) {\n    element.className = (element.className)\n        ? element.className + ' ' + className\n        : className;\n}\n/**\n * Hides the html element.\n * @param element The element to be hidden.\n */\nfunction hideElement(element) {\n    element.style.display = 'none';\n}\n/**\n * Shows the html element.\n * @param element The element to be shown.\n * @param display The value of \"display\" style to be set. Default value is \"block\".\n */\nfunction showElement(element, display) {\n    if (!display) {\n        display = '';\n    }\n    element.style.display = display;\n}\n/**\n * Hides the \"first\" element and shows the \"second\".\n * @param first The element to be hidden.\n * @param second The element to be shown.\n * @param options The options. The following options are applied:\n * - display - the value of \"display\" style to be set. Default value is \"block\"\n * - duration - the duration of fading in and out\n * - complete - the callback to be called when toggle is complete\n */\nfunction toggleVisibility(first, second, options) {\n    if (!options) {\n        options = {};\n    }\n    if (!options.display) {\n        options.display = '';\n    }\n    if (!options.duration) {\n        options.duration = 200;\n    }\n    //TODO: later we need to make it fading in and out\n    hideElement(first);\n    showElement(second, options.display);\n    if (options.complete) {\n        options.complete();\n    }\n}\n/**\n * Checks if element is visible\n * @param element The element to check.\n * @returns `true` if visible, otherwise - `false`.\n */\nfunction isVisible(element) {\n    return element.style.display != 'none'\n        && element.offsetWidth != 0\n        && element.offsetHeight != 0;\n}\nfunction createBrowserEvent(eventName) {\n    var event;\n    if (typeof (Event) === 'function') {\n        event = new Event(eventName);\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    }\n    return event;\n}\nfunction getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getDocSize() {\n    if (browserUtils.isIE())\n        return getWinSize();\n    const width = Math.max(document.documentElement.clientWidth, document.body.clientWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight, document.body.clientHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getScrollPos() {\n    const body = document.body;\n    const docElem = document.documentElement;\n    return {\n        top: window.pageYOffset || docElem.scrollTop || body.scrollTop,\n        left: window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n    };\n}\nfunction getElementAbsolutePos(element) {\n    let res = { x: 0, y: 0 };\n    if (element !== null) {\n        const position = offset(element);\n        res = { x: position.left, y: position.top };\n    }\n    return res;\n}\nfunction offset(element) {\n    const defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };\n    let box;\n    try {\n        box = element.getBoundingClientRect();\n    }\n    catch (_a) {\n        box = defaultBoundingClientRect;\n    }\n    const body = document.body;\n    const docElem = document.documentElement;\n    const scollPos = getScrollPos();\n    const scrollTop = scollPos.top;\n    const scrollLeft = scollPos.left;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return { top: Math.round(top), left: Math.round(left) };\n}\nfunction getWinSize() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\nfunction slideDown(target, duration, callback) {\n    target.style.removeProperty('display');\n    let display = window.getComputedStyle(target).display;\n    if (display === 'none')\n        display = 'block';\n    target.style.display = display;\n    let height = target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    target.offsetHeight;\n    target.style.boxSizing = 'border-box';\n    target.style.transitionProperty = \"height, margin, padding\";\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = height + 'px';\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    window.setTimeout(() => {\n        target.style.removeProperty('height');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nfunction slideUp(target, duration, callback) {\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.boxSizing = 'border-box';\n    target.style.height = target.offsetHeight + 'px';\n    target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    window.setTimeout(() => {\n        target.style.display = 'none';\n        target.style.removeProperty('height');\n        target.style.removeProperty('padding-top');\n        target.style.removeProperty('padding-bottom');\n        target.style.removeProperty('margin-top');\n        target.style.removeProperty('margin-bottom');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\nfunction getMobileCssClass() {\n    return browserUtils.isMobileMode() ? 'k-mobile' : null;\n}\n\nfunction mask(input, maskPattern) {\n    const d = { 9: '[0-9]', a: '[a-z]' };\n    const mask = maskPattern.split('');\n    const keyDownHandler = (e) => {\n        // backspace key or delete key\n        if (e.keyCode === 8 || e.keyCode === 46) {\n            e.preventDefault();\n            let mskd = [];\n            let startSelection = input.selectionStart;\n            if (startSelection == 0)\n                return;\n            let selection = startSelection;\n            let onlyLodash = true;\n            for (let index = mask.length - 1; index >= 0; index--) {\n                const el = mask[index];\n                if (d[el]) {\n                    let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                    if (t && index != startSelection - 1) {\n                        onlyLodash = false;\n                    }\n                    if (index === startSelection - 1)\n                        selection--;\n                    mskd.push(t && index != startSelection - 1\n                        ? input.value.charAt(index)\n                        : '_');\n                }\n                else {\n                    if (index === selection - 1)\n                        selection--;\n                    if (startSelection - 1 === index)\n                        startSelection--;\n                    mskd.push(el);\n                }\n            }\n            input.value = !onlyLodash ? mskd.reverse().join('') : '';\n            input.selectionStart = input.selectionEnd = selection < 0 ? 0 : selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const keyPressHandler = (e) => {\n        const char = String.fromCharCode(e.charCode);\n        if (char) {\n            e.preventDefault();\n            let mskd = [];\n            let selectionStart = input.selectionStart;\n            let selection = selectionStart;\n            mask.forEach((el, index) => {\n                if (d[el]) {\n                    const ch = (index != selectionStart)\n                        ? input.value.charAt(index)\n                        : char;\n                    let t = new RegExp(d[el], 'i').test(ch);\n                    mskd.push(t ? ch : '_');\n                    if (t && selectionStart === index)\n                        selection++;\n                }\n                else {\n                    mskd.push(el);\n                    if (selection === index)\n                        selection++;\n                    if (selectionStart === index)\n                        selectionStart++;\n                }\n            });\n            input.value = mskd.join('');\n            input.selectionStart = input.selectionEnd = selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const inputHandler = (e) => {\n        if (e.type === 'focus' && input.value !== '')\n            return;\n        let mskd = [];\n        let startSelection = input.selectionStart;\n        mask.forEach((el, index) => {\n            if (d[el]) {\n                let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                mskd.push(t ? input.value.charAt(index) : '_');\n            }\n            else {\n                mskd.push(el);\n            }\n        });\n        input.value = mskd.join('');\n        input.selectionStart = input.selectionEnd = startSelection;\n    };\n    input.addEventListener('keydown', keyDownHandler);\n    input.addEventListener('keypress', keyPressHandler);\n    input.addEventListener('input', inputHandler);\n    input.addEventListener('focus', inputHandler);\n}\n\nclass DomElementBuilder {\n    constructor(tag, parent) {\n        if (typeof tag === \"string\") {\n            this.element = document.createElement(tag);\n        }\n        else {\n            this.element = tag;\n        }\n        if (parent && this.element.parentElement !== parent) {\n            parent.appendChild(this.element);\n        }\n    }\n    addChild(tag, childBuilder) {\n        const builder = domel(tag, this.element);\n        if (childBuilder) {\n            childBuilder(builder);\n        }\n        return this;\n    }\n    addChildElement(element) {\n        if (element) {\n            this.element.appendChild(element);\n        }\n        return this;\n    }\n    attr(attrId, attrValue) {\n        this.element.setAttribute(attrId, attrValue);\n        return this;\n    }\n    id(value) {\n        return this.attr(\"id\", value);\n    }\n    focus() {\n        this.element.focus();\n        return this;\n    }\n    title(value) {\n        return this.attr('title', value);\n    }\n    data(dataId, dataValue = null) {\n        if (dataValue === null) {\n            this.element.removeAttribute('data-' + dataId);\n            return this;\n        }\n        else {\n            return this.attr('data-' + dataId, dataValue);\n        }\n    }\n    show() {\n        return this.removeStyle('display');\n    }\n    hide(toHide = true) {\n        return (toHide) ? this.setStyle('display', 'none') : this;\n    }\n    visible(isVisible = true) {\n        return isVisible ? this.setStyle('visibility', 'visible') : this.setStyle('visibility', 'hidden');\n    }\n    isVisible() {\n        return !!(this.element.offsetWidth || this.element.offsetHeight || this.element.getClientRects().length);\n    }\n    addClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.add(fullList[i]);\n        }\n        return this;\n    }\n    removeClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.remove(fullList[i]);\n        }\n        return this;\n    }\n    toggleClass(className, force = undefined) {\n        if (className) {\n            this.element.classList.toggle(className, force);\n        }\n        return this;\n    }\n    on(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.addEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    off(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.removeEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    setStyle(styleId, styleValue) {\n        this.element.style.setProperty(styleId, styleValue);\n        return this;\n    }\n    removeStyle(styleId) {\n        this.element.style.removeProperty(styleId);\n        return this;\n    }\n    text(text) {\n        this.element.innerText = text;\n        return this;\n    }\n    html(html) {\n        this.element.innerHTML = html;\n        return this;\n    }\n    clear() {\n        const oldElem = this.element;\n        this.element = document.createElement(this.element.tagName);\n        oldElem.replaceWith(this.element);\n    }\n    addText(text) {\n        const textEl = document.createTextNode(text);\n        this.element.appendChild(textEl);\n        return this;\n    }\n    addHtml(html) {\n        this.element.innerHTML += html;\n        return this;\n    }\n    toDOM() {\n        return this.element;\n    }\n    appendTo(parent) {\n        if (parent) {\n            parent.appendChild(this.element);\n        }\n        return this;\n    }\n}\nclass DomTextAreaElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"textarea\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    rows(rows) {\n        this.element.rows = rows;\n        return this;\n    }\n    cols(cols) {\n        this.element.cols = cols;\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nclass DomInputElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"input\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    type(value) {\n        this.element.type = value;\n        return this;\n    }\n    size(value) {\n        this.element.size = value;\n        return this;\n    }\n    value(value) {\n        if (value instanceof Date) {\n            this.element.valueAsDate = value;\n        }\n        else if (typeof value === \"number\") {\n            this.element.valueAsNumber = value;\n        }\n        else {\n            this.element.value = value;\n        }\n        return this;\n    }\n    mask(maskPattern) {\n        mask(this.element, maskPattern);\n        return this;\n    }\n}\nclass DomSelectElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"select\", parent);\n        }\n    }\n    addOption(value) {\n        const option = document.createElement('option');\n        if (typeof value === \"string\") {\n            option.value = value;\n            option.innerHTML = value;\n        }\n        else {\n            option.value = value.value;\n            option.innerHTML = value.title || value.value;\n            option.selected = value.selected || false;\n        }\n        this.element.appendChild(option);\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nfunction domel(tag, parent) {\n    if (tag === \"div\" || tag instanceof HTMLDivElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    if (tag === \"span\" || tag instanceof HTMLSpanElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"a\" || tag instanceof HTMLAnchorElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"button\" || tag instanceof HTMLButtonElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"img\" || tag instanceof HTMLImageElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"input\" || tag instanceof HTMLInputElement) {\n        return new DomInputElementBuilder(tag instanceof HTMLInputElement ? tag : null, parent);\n    }\n    else if (tag === \"textarea\" || tag instanceof HTMLTextAreaElement) {\n        return new DomTextAreaElementBuilder(tag instanceof HTMLTextAreaElement ? tag : null, parent);\n    }\n    else if (tag === \"select\" || tag instanceof HTMLSelectElement) {\n        return new DomSelectElementBuilder(tag instanceof HTMLSelectElement ? tag : null, parent);\n    }\n    return new DomElementBuilder(tag, parent);\n}\n\nconst touchEventIsDefined = typeof TouchEvent !== 'undefined';\nvar DropEffect;\n(function (DropEffect) {\n    DropEffect[\"None\"] = \"none\";\n    DropEffect[\"Allow\"] = \"allow\";\n    DropEffect[\"Forbid\"] = \"forbid\";\n})(DropEffect || (DropEffect = {}));\nclass EqDragEvent {\n    constructor(item, dragImage, sourceEvent) {\n        this.dropEffect = DropEffect.Allow;\n        this.pageX = 0;\n        this.pageY = 0;\n        this.item = item;\n        this.dragImage = dragImage;\n        this.data = item.data;\n        this.sourceEvent = sourceEvent;\n        if (sourceEvent && sourceEvent instanceof MouseEvent) {\n            this.pageX = sourceEvent.pageX,\n                this.pageY = sourceEvent.pageY;\n        }\n        if (sourceEvent && touchEventIsDefined && sourceEvent instanceof TouchEvent\n            && sourceEvent.touches[0]) {\n            this.pageX = sourceEvent.touches[0].pageX,\n                this.pageY = sourceEvent.touches[0].pageY;\n        }\n    }\n}\nclass Position {\n    constructor(ev) {\n        if (ev && ev instanceof MouseEvent) {\n            this.x = ev.pageX,\n                this.y = ev.pageY;\n        }\n        if (ev && touchEventIsDefined && ev instanceof TouchEvent && ev.touches[0]) {\n            this.x = ev.touches[0].pageX,\n                this.y = ev.touches[0].pageY;\n        }\n    }\n}\nclass DragManager {\n    constructor() {\n        this.delta = 5;\n        this.draggableItem = null;\n        this.dragImage = null;\n        this.finishedSuccessfully = false;\n        this.mouseDownPosition = null;\n        this.containerDescriptors = [];\n        this.containerDescriptorIndex = -1;\n        this.dropEffect = DropEffect.None;\n        this.classPrefix = 'eqjs-drop';\n        this.DRAG_DISABLED_ATTR = 'drag-disabled';\n    }\n    registerDraggableItem(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in draggle item is null or undefined\");\n        }\n        element.ondragstart = function () {\n            return false;\n        };\n        const detectDragging = (ev) => {\n            if (element.hasAttribute(this.DRAG_DISABLED_ATTR)) {\n                return;\n            }\n            ev.preventDefault();\n            if (ev instanceof MouseEvent) {\n                ev.stopPropagation();\n            }\n            const cursorPosition = new Position(ev);\n            if (Math.abs(cursorPosition.x - this.mouseDownPosition.x) > this.delta\n                || Math.abs(cursorPosition.y - this.mouseDownPosition.y) > this.delta) {\n                startDragging(ev);\n            }\n        };\n        const mouseMoveEventListener = (ev) => {\n            this.mouseMoveDragListener(ev);\n        };\n        const startDragging = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            this.finishedSuccessfully = false;\n            if (descriptor.beforeDragStart)\n                descriptor.beforeDragStart();\n            this.dragImage = domel('div')\n                .setStyle('position', 'absolute')\n                .setStyle('z-index', '65530')\n                .toDOM();\n            document.body.appendChild(this.dragImage);\n            this.dragImage.appendChild(element.cloneNode(true));\n            if (descriptor.renderer) {\n                descriptor.renderer(this.dragImage);\n            }\n            this.dropEffect = DropEffect.None;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n            this.draggableItem = {\n                element: element,\n                scope: descriptor.scope,\n                data: descriptor.data\n            };\n            this.updateDragItemPosition(ev);\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = this.dropEffect;\n            if (descriptor.onDragStart) {\n                descriptor.onDragStart(event);\n            }\n            if (this.dropEffect !== event.dropEffect) {\n                this.dropEffect = event.dropEffect;\n                this.updateImageClass(this.dropEffect);\n            }\n            document.addEventListener('mousemove', mouseMoveEventListener, true);\n            document.addEventListener('touchmove', mouseMoveEventListener, true);\n        };\n        const mouseDownListener = (ev) => {\n            if (touchEventIsDefined && ev instanceof TouchEvent) {\n                ev.preventDefault();\n            }\n            this.mouseDownPosition = new Position(ev);\n            element.addEventListener('mousemove', detectDragging);\n            element.addEventListener('touchmove', detectDragging);\n            document.addEventListener('mouseup', mouseUpListener);\n            document.addEventListener('touchend', mouseUpListener);\n        };\n        element.addEventListener('mousedown', mouseDownListener);\n        element.addEventListener('touchstart', mouseDownListener);\n        const mouseUpListener = (ev) => {\n            this.mouseDownPosition = null;\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            document.removeEventListener('mousemove', mouseMoveEventListener, true);\n            document.removeEventListener('touchmove', mouseMoveEventListener, true);\n            if (this.draggableItem) {\n                endDraggind(ev);\n            }\n        };\n        const endDraggind = (ev) => {\n            try {\n                if (this.containerDescriptorIndex >= 0) {\n                    const dropContDesc = this.containerDescriptors[this.containerDescriptorIndex];\n                    const container = {\n                        element: dropContDesc.element,\n                        scopes: dropContDesc.scopes,\n                        data: dropContDesc.data\n                    };\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    try {\n                        if (container.scopes.indexOf(this.draggableItem.scope) >= 0\n                            && this.dropEffect === DropEffect.Allow) {\n                            this.finishedSuccessfully = true;\n                            if (dropContDesc.onDrop) {\n                                dropContDesc.onDrop(container, event);\n                            }\n                        }\n                    }\n                    finally {\n                        if (dropContDesc.onDragLeave) {\n                            dropContDesc.onDragLeave(container, event);\n                        }\n                    }\n                }\n            }\n            finally {\n                try {\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    event.data.finishedSuccessfully = this.finishedSuccessfully;\n                    if (descriptor.onDragEnd) {\n                        descriptor.onDragEnd(event);\n                    }\n                }\n                finally {\n                    this.draggableItem = null;\n                    if (this.dragImage && this.dragImage.parentElement) {\n                        this.dragImage.parentElement.removeChild(this.dragImage);\n                    }\n                    this.dragImage = null;\n                    this.finishedSuccessfully = false;\n                    document.removeEventListener('mouseup', mouseUpListener);\n                    document.removeEventListener('touchend', mouseUpListener);\n                }\n            }\n        };\n    }\n    registerDropContainer(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in drop container is null or undefined\");\n        }\n        this.containerDescriptors.push(descriptor);\n    }\n    removeDropContainer(descriptorOrSlot) {\n        const descs = this.containerDescriptors\n            .filter(desc => desc === descriptorOrSlot\n            || desc.element == descriptorOrSlot);\n        if (descs) {\n            for (const desc of descs) {\n                utils.removeArrayItem(this.containerDescriptors, desc);\n            }\n        }\n    }\n    mouseMoveDragListener(ev) {\n        if (ev instanceof MouseEvent) {\n            ev.preventDefault();\n        }\n        ev.stopPropagation();\n        this.updateDragItemPosition(ev);\n        if (this.containerDescriptorIndex == -1) {\n            for (let i = 0; i < this.containerDescriptors.length; i++) {\n                const descriptor = this.containerDescriptors[i];\n                if (this.detectDragEnterEvent(descriptor.element, ev)) {\n                    this.containerDescriptorIndex = i;\n                    break;\n                }\n            }\n            if (this.containerDescriptorIndex >= 0) {\n                this.dragEnterEvent(ev);\n            }\n        }\n        else {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            if (this.detectDragLeaveEvent(descriptor.element, ev)) {\n                this.dragLeaveEvent(ev);\n                this.containerDescriptorIndex = -1;\n            }\n        }\n        if (this.containerDescriptorIndex >= 0) {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            const container = {\n                element: descriptor.element,\n                scopes: descriptor.scopes,\n                data: descriptor.data\n            };\n            if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n                const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                event.dropEffect = this.dropEffect;\n                if (descriptor.onDragOver) {\n                    descriptor.onDragOver(container, event);\n                }\n            }\n        }\n    }\n    updateCusror(dropEffect) {\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n            case DropEffect.Forbid:\n                this.setCursorStyle(this.dragImage, 'no-drop');\n                break;\n            default:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n        }\n    }\n    updateImageClass(dropEffect) {\n        this.dragImage.classList.remove(`${this.classPrefix}-allow`);\n        this.dragImage.classList.remove(`${this.classPrefix}-forbid`);\n        this.dragImage.classList.remove(`${this.classPrefix}-none`);\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.dragImage.classList.add(`${this.classPrefix}-allow`);\n                break;\n            case DropEffect.None:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n            case DropEffect.Forbid:\n                this.dragImage.classList.add(`${this.classPrefix}-forbid`);\n                break;\n            default:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n        }\n    }\n    setCursorStyle(element, cursor) {\n        if (element) {\n            element.style.cursor = cursor;\n            for (let i = 0; i < element.children.length; i++) {\n                this.setCursorStyle(element.children[i], cursor);\n            }\n        }\n    }\n    updateDragItemPosition(ev) {\n        if (this.dragImage) {\n            const pos = new Position(ev);\n            this.dragImage.style.top = (pos.y - this.dragImage.offsetHeight / 2) + 'px';\n            this.dragImage.style.left = (pos.x - this.dragImage.offsetWidth / 2) + 'px';\n        }\n    }\n    dragEnterEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.Allow;\n            if (descriptor.onDragEnter) {\n                descriptor.onDragEnter(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n        else {\n            if (this.dropEffect !== DropEffect.Forbid) {\n                this.dropEffect = DropEffect.None;\n                this.updateCusror(this.dropEffect);\n                this.updateImageClass(this.dropEffect);\n            }\n        }\n    }\n    dragLeaveEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.None;\n            if (descriptor.onDragLeave) {\n                descriptor.onDragLeave(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n    }\n    detectDragEnterEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y < containerPos.y || pos.y > containerPos.y + container.offsetHeight) {\n            return false;\n        }\n        if (pos.x < containerPos.x || pos.x > containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n    detectDragLeaveEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y > containerPos.y && pos.y < containerPos.y + container.offsetHeight\n            && pos.x > containerPos.x && pos.x < containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n}\n//global variable\nconst eqDragManager = new DragManager();\n\nvar AutoResizeColumns;\n(function (AutoResizeColumns) {\n    AutoResizeColumns[AutoResizeColumns[\"Always\"] = 0] = \"Always\";\n    AutoResizeColumns[AutoResizeColumns[\"Once\"] = 1] = \"Once\";\n    AutoResizeColumns[AutoResizeColumns[\"Never\"] = 2] = \"Never\";\n})(AutoResizeColumns || (AutoResizeColumns = {}));\n\n//import { CellRendererType } from \"./easy_grid_cell_renderer\";\n//import { GridCellRenderer } from './easy_grid_cell_renderer';\nconst DEFAULT_WIDTH_STRING = 250;\nconst ROW_NUM_WIDTH = 60;\nvar GridColumnAlign;\n(function (GridColumnAlign) {\n    GridColumnAlign[GridColumnAlign[\"NONE\"] = 1] = \"NONE\";\n    GridColumnAlign[GridColumnAlign[\"LEFT\"] = 2] = \"LEFT\";\n    GridColumnAlign[GridColumnAlign[\"CENTER\"] = 3] = \"CENTER\";\n    GridColumnAlign[GridColumnAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(GridColumnAlign || (GridColumnAlign = {}));\nfunction MapAlignment(alignment) {\n    switch (alignment) {\n        case ColumnAlignment.Left:\n            return GridColumnAlign.LEFT;\n        case ColumnAlignment.Center:\n            return GridColumnAlign.CENTER;\n        case ColumnAlignment.Right:\n            return GridColumnAlign.RIGHT;\n        default:\n            return GridColumnAlign.NONE;\n    }\n}\nclass GridColumn {\n    constructor(column, grid, isRowNum = false) {\n        this._label = null;\n        this._description = null;\n        //public left: number;\n        this.align = GridColumnAlign.NONE;\n        this.isVisible = true;\n        this.isRowNum = false;\n        this.dataColumn = column;\n        this.grid = grid;\n        const widthOptions = grid.options.columnWidths || {};\n        if (column) {\n            if (column.style.alignment) {\n                this.align = MapAlignment(column.style.alignment);\n            }\n            this.width = (widthOptions && widthOptions[this.type]) ? widthOptions[this.type].default : DEFAULT_WIDTH_STRING;\n            this._description = column.description;\n        }\n        else if (isRowNum) {\n            this.isRowNum = true;\n            this.width = (widthOptions && widthOptions.rowNumColumn) ? widthOptions.rowNumColumn.default : ROW_NUM_WIDTH;\n            this._label = '';\n        }\n    }\n    get label() {\n        return this._label ? this._label : this.isRowNum ? '' : this.dataColumn.label;\n    }\n    ;\n    set label(value) {\n        this._label = this.label;\n    }\n    /** Get column description. */\n    get description() {\n        return this._description;\n    }\n    get type() {\n        return this.dataColumn ? this.dataColumn.type : null;\n    }\n}\nclass GridColumnList {\n    constructor(columnList, grid) {\n        this.items = [];\n        this.grid = grid;\n        this.sync(columnList);\n    }\n    sync(columnList, hasRowNumCol = true) {\n        this.clear();\n        const rowNumCol = new GridColumn(null, this.grid, true);\n        this.add(rowNumCol);\n        if (!hasRowNumCol) {\n            rowNumCol.isVisible = false;\n        }\n        if (columnList) {\n            for (let column of columnList.getItems()) {\n                const col = new GridColumn(column, this.grid);\n                if (this.grid.options.onSyncGridColumn) {\n                    this.grid.options.onSyncGridColumn(col);\n                }\n                this.add(col);\n            }\n        }\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(col) {\n        const index = this.items.length;\n        this.items.push(col);\n        return index;\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.items.length) {\n            this.items[index] = col;\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex)\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n    }\n    get(index) {\n        if (index >= 0 && index < this.items.length) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    //    public getIndex(name: string) : number {\n    //        return this.mapper[name];\n    //    }\n    getItems() {\n        return this.items;\n    }\n    removeAt(index) {\n        this.get(index);\n        this.items.splice(index, 1);\n        //delete this.mapper[col.name];\n    }\n    clear() {\n        this.items = [];\n        //this.mapper = {};\n    }\n}\n\nconst cssPrefix$1 = \"keg\";\nconst DFMT_REGEX = /{0:(.*?)}/g;\nvar CellRendererType;\n(function (CellRendererType) {\n    CellRendererType[CellRendererType[\"STRING\"] = 1] = \"STRING\";\n    CellRendererType[CellRendererType[\"NUMBER\"] = 2] = \"NUMBER\";\n    CellRendererType[CellRendererType[\"DATETIME\"] = 3] = \"DATETIME\";\n    CellRendererType[CellRendererType[\"BOOL\"] = 4] = \"BOOL\";\n})(CellRendererType || (CellRendererType = {}));\nconst StringCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const text = value ? value.toString().replace(/\\n/g, '\\u21B5 ') : '';\n    cellValueElement.innerText = text;\n    cellValueElement.title = text;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-left`);\n    }\n};\nconst NumberCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    let strValue = (value || '').toString();\n    if (typeof value == 'number') {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.numberToStr(value, $1);\n            });\n        }\n        else {\n            strValue = value.toLocaleString();\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst DateTimeCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const isDate = Object.prototype.toString.call(value) === '[object Date]';\n    let strValue = (value || '').toString();\n    if (isDate) {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.dateTimeToStrEx(value, column.type, $1);\n            });\n        }\n        else {\n            const locale = i18n.getCurrentLocale();\n            const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n            switch (column.type) {\n                case DataType.Date:\n                    strValue = value.toLocaleDateString(locale);\n                    break;\n                case DataType.Time:\n                    strValue = value.toLocaleTimeString(locale, timeOptions);\n                    break;\n                case DataType.DateTime:\n                    strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                    break;\n            }\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst BoolCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    if (column.dataColumn && column.dataColumn.displayFormat\n        && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n        const strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n            return i18n.booleanToStr(value, $1);\n        });\n        return StringCellRendererDefault(strValue, column, cellValueElement);\n    }\n    else {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-bool`);\n        cellValueElement.classList.add(`${cssPrefix$1}-${value ? 'cell-value-true' : 'cell-value-false'}`);\n    }\n};\nclass GridCellRendererStore {\n    constructor(options) {\n        this.renderers = {};\n        this.defaultRenderers = {};\n        this.registerRenderer('StringDefault', StringCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.STRING, StringCellRendererDefault);\n        this.registerRenderer('NumberDefault', NumberCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.NUMBER, NumberCellRendererDefault);\n        this.registerRenderer('DateTimeDefault', DateTimeCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.DATETIME, DateTimeCellRendererDefault);\n        this.registerRenderer('BoolDefault', BoolCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.BOOL, BoolCellRendererDefault);\n    }\n    getDefaultRenderer(columnType) {\n        const cellType = this.getCellType(columnType);\n        return this.defaultRenderers[CellRendererType[cellType]];\n    }\n    getDefaultRendererByType(rendererType) {\n        return this.defaultRenderers[CellRendererType[rendererType]];\n    }\n    setDefaultRenderer(cellType, renderer) {\n        if (renderer) {\n            this.defaultRenderers[CellRendererType[cellType]] = renderer;\n        }\n    }\n    getRenderer(name) {\n        return this.renderers[name];\n    }\n    registerRenderer(name, renderer) {\n        this.renderers[name] = renderer;\n    }\n    getCellType(dataType) {\n        switch (dataType) {\n            case DataType.Autoinc:\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Currency:\n            case DataType.Float:\n            case DataType.Int32:\n            case DataType.Int64:\n                return CellRendererType.NUMBER;\n            case DataType.Date:\n            case DataType.DateTime:\n            case DataType.Time:\n                return CellRendererType.DATETIME;\n            case DataType.Bool:\n                return CellRendererType.BOOL;\n            default:\n                return CellRendererType.STRING;\n        }\n    }\n}\n\nconst DEFAULT_ROW_HEIGHT = 36;\n/** Represents a grid widget with columns rows, paging, custom rendering and more */\nclass EasyGrid {\n    /** Creates and initializes all internal properties of the grid object */\n    constructor(options) {\n        this.cssPrefix = \"keg\";\n        this.pagination = { page: 1, pageSize: 30, total: 0 };\n        this.paginationOptions = {\n            maxButtonCount: 10,\n            useBootstrap: false\n        };\n        this.defaultDataGridOptions = {\n            slot: null,\n            dataTable: null,\n            fixHeightOnFirstRender: false,\n            syncGridColumns: true,\n            useRowNumeration: true,\n            allowDragDrop: false,\n            aggregates: {\n                settings: null,\n                calculatorRef: null\n            },\n            paging: {\n                enabled: true,\n                pageSize: 30,\n                pageSizeItems: [20, 30, 50, 100, 200]\n            },\n            columnWidths: {\n                autoResize: AutoResizeColumns.Always,\n                stringColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                numberColumns: {\n                    min: 60,\n                    default: 120\n                },\n                boolColumns: {\n                    min: 50,\n                    default: 80\n                },\n                dateColumns: {\n                    min: 80,\n                    default: 200\n                },\n                otherColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                rowNumColumn: {\n                    min: 40,\n                    default: 60\n                }\n            },\n            showPlusButton: false,\n            viewportRowsCount: null,\n            showActiveRow: true\n        };\n        this.rowsOnPagePromise = null;\n        this.containerInitialHeight = 0;\n        this.firstRender = true;\n        this.prevRowTotals = null;\n        this.landingIndex = -1;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this._activeRowIndex = -1;\n        if (options && options.paging) {\n            options.paging = utils.assign(this.defaultDataGridOptions.paging, options.paging);\n        }\n        this.options = this.mergeOptions(options);\n        this.processColumnWidthsOptions();\n        if (!this.options.slot)\n            throw Error('\"slot\" parameter is required to initialize EasyDataGrid');\n        if (!this.options.dataTable)\n            throw Error('\"dataTable\" parameter is required to initialize EasyDataGrid');\n        this.dataTable = options.dataTable;\n        this.eventEmitter = new EventEmitter(this);\n        this.cellRendererStore = new GridCellRendererStore(options);\n        this.columns = new GridColumnList(this.dataTable.columns, this);\n        this.setSlot(this.options.slot);\n        this.init(this.options);\n    }\n    mergeOptions(options) {\n        const aggrOptions = utils.assignDeep({}, this.defaultDataGridOptions.aggregates, options.aggregates);\n        const colWidthOptions = utils.assignDeep({}, this.defaultDataGridOptions.columnWidths, options.columnWidths);\n        const pagingOptions = utils.assignDeep({}, this.defaultDataGridOptions.paging, options.paging);\n        const result = utils.assign({}, this.defaultDataGridOptions, options);\n        result.aggregates = aggrOptions;\n        result.columnWidths = colWidthOptions;\n        result.paging = pagingOptions;\n        return result;\n    }\n    processColumnWidthsOptions() {\n        const widthOptions = this.options.columnWidths;\n        if (!widthOptions)\n            return;\n        //string columns\n        utils.getStringDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.stringColumns), widthOptions[dataType]);\n        });\n        //numeric columns\n        utils.getNumericDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.numberColumns), widthOptions[dataType]);\n        });\n        //bool columns\n        widthOptions[DataType.Bool] = Object.assign(Object.assign({}, widthOptions.boolColumns), widthOptions[DataType.Bool]);\n        //date columns\n        utils.getDateDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.dateColumns), widthOptions[dataType]);\n        });\n        //other columns\n        const knownTypes = [\n            ...utils.getStringDataTypes(),\n            ...utils.getNumericDataTypes(),\n            ...utils.getDateDataTypes(),\n            DataType.Bool\n        ];\n        utils.getAllDataTypes().forEach(dataType => {\n            if (!(dataType in knownTypes)) {\n                widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.otherColumns), widthOptions[dataType]);\n            }\n        });\n        widthOptions[DataType.Unknown] = widthOptions.otherColumns;\n    }\n    setSlot(slot) {\n        if (typeof slot === 'string') {\n            if (slot.length) {\n                if (slot[0] === '#') {\n                    this.slot = document.getElementById(slot.substring(1));\n                }\n                else if (slot[0] === '.') {\n                    const result = document.getElementsByClassName(slot.substring(1));\n                    if (result.length)\n                        this.slot = result[0];\n                }\n                else {\n                    throw Error('Unrecognized slot parameter ' +\n                        '(Must be id, class or HTMLElement): ' + slot);\n                }\n            }\n        }\n        else {\n            this.slot = slot;\n        }\n    }\n    /** Initializes grid widget according to the options passed in the parameter */\n    init(options) {\n        if (options.onInit) {\n            this.addEventListener('init', options.onInit);\n        }\n        if (options.onRowClick) {\n            this.addEventListener('rowClick', options.onRowClick);\n        }\n        if (options.onRowDbClick) {\n            this.addEventListener('rowDbClick', options.onRowDbClick);\n        }\n        if (options.onPlusButtonClick) {\n            this.addEventListener('plusButtonClick', options.onPlusButtonClick);\n        }\n        if (options.onColumnChanged) {\n            this.addEventListener('columnChanged', options.onColumnChanged);\n        }\n        if (options.onColumnDeleted) {\n            this.addEventListener('columnDeleted', options.onColumnDeleted);\n        }\n        if (options.onColumnMoved) {\n            this.addEventListener('columnMoved', options.onColumnMoved);\n        }\n        if (options.onPageChanged) {\n            this.addEventListener('pageChanged', options.onPageChanged);\n        }\n        if (options.onActiveRowChanged) {\n            this.addEventListener('activeRowChanged', options.onActiveRowChanged);\n        }\n        this.addEventListener('pageChanged', ev => this.activeRowIndex = -1);\n        utils.assign(this.paginationOptions, options.pagination);\n        this.pagination.pageSize = this.options.paging.pageSize\n            || this.pagination.pageSize;\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"gridColumnMove\"],\n                onDragEnter: (_, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (_, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (_, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (_, ev) => {\n                    this.dataTable.columns.move(ev.data.column, this.landingIndex);\n                    this.refresh();\n                    this.fireEvent({\n                        type: 'columnMoved',\n                        columnId: ev.data.column.id,\n                        newIndex: this.landingIndex\n                    });\n                }\n            });\n        }\n        this.refresh();\n        this.fireEvent('init');\n    }\n    /** Fires a grid event. You can pass either an event type\n     * (like 'init', 'rowClick', 'pageChanged', etc )\n     * or a ready-to-use grid event object\n     * */\n    fireEvent(event) {\n        if (typeof event === \"string\") {\n            this.eventEmitter.fire(event);\n        }\n        else {\n            this.eventEmitter.fire(event.type, event);\n        }\n    }\n    /** Allows to set the data (represented by a EasyDataTable object)\n     *  or to replace the existing one associated with the grid */\n    setData(data) {\n        this.dataTable = data;\n        this.clear();\n        this.refresh();\n    }\n    /** Returns the EasyDataTable object associated with the grid via `setData()` call */\n    getData() {\n        return this.dataTable;\n    }\n    /** Gets the list of grid columns */\n    getColumns() {\n        return this.columns;\n    }\n    /** This function is called when the grid is destroyed */\n    destroy() {\n        this.slot.innerHTML = \"\";\n    }\n    /** Clears the current DOM object and re-renders everything from the scratch */\n    refresh() {\n        this.clearDOM();\n        this.render();\n    }\n    clearDOM() {\n        this.slot.innerHTML = '';\n    }\n    /** Clears all DOM object in the grid and return it to its initial state */\n    clear() {\n        this.pagination.page = 1;\n        this.clearDOM();\n    }\n    /** Renders the grid */\n    render() {\n        if (!this.hasData() && !this.options.showPlusButton)\n            return;\n        this.containerInitialHeight = this.slot.clientHeight;\n        this.rootDiv = document.createElement('div');\n        this.rootDiv.style.width = '100%';\n        this.rootDiv.classList.add(`${this.cssPrefix}-root`);\n        this.columns.sync(this.dataTable.columns, this.options.useRowNumeration);\n        this.renderHeader();\n        this.rootDiv.appendChild(this.headerDiv);\n        this.renderBody();\n        this.rootDiv.appendChild(this.bodyDiv);\n        this.renderFooter();\n        this.rootDiv.appendChild(this.footerDiv);\n        let gridContainer = document.createElement('div');\n        gridContainer.classList.add(`${this.cssPrefix}-container`);\n        gridContainer.appendChild(this.rootDiv);\n        this.slot.appendChild(gridContainer);\n        const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise\n                .then(() => this.updateHeight())\n                .then(() => {\n                this.firstRender = false;\n                this.rowsOnPagePromise = null;\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.updateHeight()\n                    .then(() => {\n                    this.firstRender = false;\n                    if (needAutoResize) {\n                        this.resizeColumns();\n                    }\n                });\n            }, 100);\n        }\n    }\n    updateHeight() {\n        return new Promise((resolve) => {\n            if (this.options.viewportRowsCount) {\n                const firstRow = this.bodyCellContainerDiv.firstElementChild;\n                const rowHeight = firstRow ? firstRow.offsetHeight : DEFAULT_ROW_HEIGHT;\n                const rowCount = this.options.viewportRowsCount; // || DEFAULT_ROW_COUNT;\n                let viewportHeight = rowHeight * rowCount;\n                domel(this.bodyViewportDiv)\n                    .setStyle('height', `${viewportHeight}px`);\n                setTimeout(() => {\n                    const sbHeight = this.bodyViewportDiv.offsetHeight - this.bodyViewportDiv.clientHeight;\n                    viewportHeight = viewportHeight + sbHeight;\n                    domel(this.bodyViewportDiv)\n                        .setStyle('height', `${viewportHeight}px`);\n                    resolve();\n                }, 100);\n                return;\n            }\n            else if (this.containerInitialHeight > 0) ;\n            resolve();\n        })\n            .then(() => {\n            if (this.options.fixHeightOnFirstRender && this.firstRender) {\n                this.slot.style.height = `${this.slot.offsetHeight}px`;\n            }\n        });\n    }\n    getContainerWidth() {\n        return this.columns.getItems()\n            .filter(col => col.isVisible)\n            .map(col => col.width)\n            .reduce((sum, current) => { return sum + current; });\n    }\n    renderHeader() {\n        this.headerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.headerViewportDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-header-viewport`)\n            .toDOM();\n        this.headerCellContainerDiv = domel('div', this.headerViewportDiv)\n            .addClass(`${this.cssPrefix}-header-cell-container`)\n            .toDOM();\n        this.headerRowDiv = domel('div', this.headerCellContainerDiv)\n            .addClass(`${this.cssPrefix}-header-row`)\n            .toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let hd = this.renderColumnHeader(column, index);\n            this.headerRowDiv.appendChild(hd);\n            if (column.isRowNum) {\n                domel(hd)\n                    .addChildElement(this.renderHeaderButtons());\n            }\n        });\n        const containerWidth = this.getContainerWidth();\n        domel(this.headerCellContainerDiv)\n            .setStyle('width', `${containerWidth}px`);\n    }\n    hasData() {\n        return this.dataTable.columns.count > 0;\n    }\n    renderColumnHeader(column, index) {\n        let colBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-header-cell`)\n            .data('col-idx', `${index}`)\n            .setStyle('width', `${column.width}px`);\n        if (column.dataColumn) {\n            colBuilder\n                .data('col-id', `${column.dataColumn.id}`);\n        }\n        let colDiv = colBuilder.toDOM();\n        domel('div', colDiv)\n            .addClass(`${this.cssPrefix}-header-cell-resize`);\n        if (!column.isRowNum) {\n            domel('div', colDiv)\n                .addClass(`${this.cssPrefix}-header-cell-label`)\n                .text(column.label);\n        }\n        if (column.description) {\n            domel('div', colDiv)\n                .addClass('question-mark')\n                .title(column.description);\n        }\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: colDiv,\n                scope: \"gridColumnMove\",\n                data: { column: column },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('div');\n                    attrLabel.innerText = column.label;\n                    dragImage.classList.add(`${this.cssPrefix}-sortable-helper`);\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    ev.dropEffect = DropEffect.Allow;\n                }\n            });\n        }\n        return colDiv;\n    }\n    renderBody() {\n        this.bodyDiv = domel('div')\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n        this.bodyViewportDiv = domel('div', this.bodyDiv)\n            .addClass(`${this.cssPrefix}-body-viewport`)\n            .attr('tabIndex', '0')\n            .toDOM();\n        this.bodyCellContainerDiv = domel('div', this.bodyViewportDiv)\n            .addClass(`${this.cssPrefix}-cell-container`)\n            .toDOM();\n        const showAggrs = this.canShowAggregates();\n        if (this.dataTable) {\n            this.showProgress();\n            this.rowsOnPagePromise = this.getRowsToRender()\n                .then((rows) => {\n                this.pagination.total = this.dataTable.getTotal();\n                this.hideProgress();\n                //prevent double rendering (bad solution, we have to figure out how to avoid this behavior properly)\n                this.bodyCellContainerDiv.innerHTML = '';\n                this.prevRowTotals = null;\n                let rowsToRender = 0;\n                if (rows.length) {\n                    const groups = showAggrs\n                        ? this.options.aggregates.settings.getGroups()\n                        : [];\n                    rowsToRender = (rows.length < this.pagination.pageSize)\n                        ? rows.length\n                        : this.pagination.pageSize;\n                    rows.forEach((row, index) => {\n                        if (showAggrs)\n                            this.updateTotalsState(groups, row);\n                        //we don't actually render the last row\n                        if (index < rowsToRender) {\n                            const tr = this.renderRow(row, index);\n                            this.bodyCellContainerDiv.appendChild(tr);\n                        }\n                    });\n                    const showGrandTotalsOnEachPage = this.options.aggregates && this.options.aggregates.showGrandTotalsOnEachPage;\n                    if (showAggrs && (this.isLastPage() || showGrandTotalsOnEachPage)) {\n                        const row = new DataRow(this.dataTable.columns, new Array(this.dataTable.columns.count));\n                        this.updateTotalsState(groups, row, true);\n                    }\n                }\n                const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n                if (needAutoResize) {\n                    this.resizeColumns();\n                }\n                else {\n                    const containerWidth = this.getContainerWidth();\n                    domel(this.bodyCellContainerDiv)\n                        .setStyle('width', `${containerWidth}px`);\n                }\n                return rowsToRender;\n            })\n                .catch(error => { console.error(error); return 0; });\n        }\n        this.bodyViewportDiv.addEventListener('scroll', ev => {\n            domel(this.headerViewportDiv)\n                .setStyle('margin-left', `-${this.bodyViewportDiv.scrollLeft}px`);\n        });\n        this.bodyViewportDiv.addEventListener('keydown', this.onViewportKeydown.bind(this));\n    }\n    isLastPage() {\n        if (this.dataTable.elasticChunks) {\n            return this.dataTable.totalIsKnown()\n                && (this.pagination.page * this.pagination.pageSize) >= this.pagination.total;\n        }\n        return this.pagination.page * this.pagination.pageSize >= this.pagination.total;\n    }\n    canShowAggregates() {\n        if (!this.options || !this.options.aggregates || !this.options.aggregates.settings)\n            return false;\n        const aggrSettings = this.options.aggregates.settings;\n        const result = (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())\n            && (aggrSettings.hasGroups() || aggrSettings.hasGrandTotals());\n        return result;\n    }\n    updateTotalsState(groups, newRow, isLast = false) {\n        const aggrSettings = this.options.aggregates.settings;\n        if (this.prevRowTotals && aggrSettings.hasGroups()) {\n            let changeLevel = -1;\n            for (let level = 1; level <= groups.length; level++) {\n                const group = groups[level - 1];\n                for (const col of group.columns) {\n                    if (!aggrSettings.compareValues(this.prevRowTotals.getValue(col), newRow.getValue(col))) {\n                        changeLevel = level;\n                        break;\n                    }\n                }\n                if (changeLevel !== -1)\n                    break;\n            }\n            if (changeLevel !== -1) {\n                for (let level = groups.length; level >= changeLevel; level--) {\n                    const row = new DataRow(this.dataTable.columns, this.prevRowTotals.toArray());\n                    const tr = this.renderTotalsRow(level, row);\n                    this.bodyCellContainerDiv.appendChild(tr);\n                }\n            }\n        }\n        if (isLast && aggrSettings.hasGrandTotals() && aggrSettings.hasAggregates()) {\n            const tr = this.renderTotalsRow(0, newRow);\n            this.bodyCellContainerDiv.appendChild(tr);\n        }\n        this.prevRowTotals = newRow;\n    }\n    applyGroupColumnTemplate(template, value, count) {\n        let result = template.replace(/{{\\s*GroupValue\\s*}}/g, value ? `${value}` : '-');\n        result = result.replace(/{{\\s*GroupCount\\s*}}/g, count ? `${count}` : '-');\n        return result;\n    }\n    renderTotalsRow(level, row) {\n        const aggrSettings = this.options.aggregates.settings;\n        const group = (level > 0)\n            ? aggrSettings.getGroups()[level - 1]\n            : { columns: [], aggregates: aggrSettings.getAggregates() };\n        const rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-totals`)\n            .addClass(`${this.cssPrefix}-totals-lv${level}`)\n            .data('totals-level', `${level}`)\n            .attr('tabindex', '-1');\n        const rowElement = rowBuilder.toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let val = '';\n            const colIndex = !column.isRowNum\n                ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                : -1;\n            if (!column.isRowNum && column.dataColumn) {\n                if (group.columns.indexOf(column.dataColumn.id) >= 0) {\n                    val = row.getValue(colIndex);\n                }\n            }\n            if (colIndex == this.dataTable.columns.count - 1) {\n                val = '.  .  .  .  .  .';\n            }\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        const aggrContainer = this.options.aggregates.calculatorRef.getAggrContainer();\n        const aggrCols = aggrSettings.getAggregates().map(c => c.colId);\n        const key = aggrSettings.buildGroupKey(group, row);\n        aggrContainer.getAggregateData(level, key)\n            .then((values) => {\n            for (const aggrColId of aggrCols) {\n                row.setValue(aggrColId, values[aggrColId]);\n            }\n            rowElement.innerHTML = '';\n            this.columns.getItems().forEach((column, index) => {\n                if (!column.isVisible) {\n                    return;\n                }\n                let val = '';\n                const colIndex = !column.isRowNum\n                    ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                    : -1;\n                if (!column.isRowNum) {\n                    let isLastGroupColumn = false;\n                    if (column.dataColumn) {\n                        const groupColIndex = group.columns.indexOf(column.dataColumn.id);\n                        const aggrColIndex = aggrCols.indexOf(column.dataColumn.id);\n                        if (level > 0) {\n                            isLastGroupColumn = groupColIndex == group.columns.length - 1;\n                        }\n                        else {\n                            //if it's a grand total row consider first column as the last group column\n                            isLastGroupColumn = colIndex == 0;\n                        }\n                        if (groupColIndex >= 0 || aggrColIndex >= 0) {\n                            val = row.getValue(colIndex);\n                        }\n                    }\n                    let groupFooterTemplate = '';\n                    if (level > 0) {\n                        groupFooterTemplate = column.dataColumn.groupFooterColumnTemplate;\n                        //set the default template for the last grouping column\n                        if (!groupFooterTemplate && aggrSettings.hasRecordCount() && isLastGroupColumn) {\n                            groupFooterTemplate = '{{GroupValue}} ({{GroupCount}})';\n                        }\n                    }\n                    if (groupFooterTemplate) {\n                        const cellDiv = this.renderCell(column, index, val, rowElement);\n                        const innerCell = cellDiv.firstChild;\n                        val = innerCell.innerHTML;\n                        val = this.applyGroupColumnTemplate(groupFooterTemplate, val, values[aggrSettings.COUNT_FIELD_NAME]);\n                    }\n                }\n                const cellDiv = this.renderCell(column, index, val, rowElement);\n                rowElement.appendChild(cellDiv);\n            });\n        })\n            .catch((error) => console.error(error));\n        return rowElement;\n    }\n    onViewportKeydown(ev) {\n        if (this.options.showActiveRow) {\n            const rowCount = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row`).length;\n            let newValue;\n            switch (ev.key) {\n                case 'ArrowLeft':\n                    break;\n                case 'ArrowRight':\n                    break;\n                case 'ArrowUp':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? rowCount - 1 : this.activeRowIndex - 1;\n                    this.activeRowIndex = newValue >= 0 ? newValue : 0;\n                    break;\n                case 'ArrowDown':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? 0 : this.activeRowIndex + 1;\n                    this.activeRowIndex = newValue < rowCount ? newValue : rowCount - 1;\n                    break;\n            }\n        }\n    }\n    ensureRowVisibility(rowOrIndex) {\n        const row = typeof rowOrIndex === 'number'\n            ? this.getDataRow(rowOrIndex)\n            : rowOrIndex;\n        if (row) {\n            let rowRect = row.getBoundingClientRect();\n            const viewportRect = this.bodyViewportDiv.getBoundingClientRect();\n            const rowTop = rowRect.top - viewportRect.top;\n            const rowBottom = rowRect.bottom - viewportRect.top;\n            const viewportHeight = this.bodyViewportDiv.clientHeight;\n            const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n            if (rowTop > 0 &&\n                rowBottom <= viewportHeight &&\n                rowRect.top > 0 &&\n                rowRect.bottom < windowHeight) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowTop;\n            }\n            else if (rowBottom > viewportHeight) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowBottom - viewportHeight;\n            }\n            rowRect = row.getBoundingClientRect();\n            if (rowRect.top < 0) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.top;\n            }\n            else if (rowRect.bottom > windowHeight) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.bottom - windowHeight;\n            }\n        }\n    }\n    /** Returns a promise with the list of the rows to render on one page.\n     * The list contains pageSize+1 row to make it possible\n     * to render the totals row (if it appears to be on the edge between pages)\n     */\n    getRowsToRender() {\n        if (this.options.paging.enabled === false) {\n            return Promise.resolve(this.dataTable.getCachedRows());\n        }\n        return this.dataTable.getRows({\n            offset: (this.pagination.page - 1) * this.pagination.pageSize,\n            limit: this.pagination.pageSize + 1\n        })\n            .catch(error => {\n            console.error(error);\n            return [];\n        });\n    }\n    renderFooter() {\n        this.footerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-footer`)\n            .toDOM();\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise.then(count => {\n                this.footerDiv.innerHTML = '';\n                this.footerPaginateDiv = this.renderPageNavigator();\n                this.footerDiv.appendChild(this.footerPaginateDiv);\n                const pageInfoBlock = this.renderPageInfoBlock(count);\n                this.footerDiv.appendChild(pageInfoBlock);\n            });\n        }\n    }\n    renderPageInfoBlock(count) {\n        const pageInfoDiv = domel('div')\n            .addClass(`${this.cssPrefix}-page-info`)\n            .toDOM();\n        const rowCount = this.dataTable.getTotal();\n        if (rowCount > 0) {\n            const fistPageRecordNum = count\n                ? (this.pagination.page - 1) * this.pagination.pageSize + 1\n                : 0;\n            const lastPageRecordNum = count\n                ? fistPageRecordNum + count - 1\n                : 0;\n            let totalStr = this.dataTable.getTotal().toString();\n            if (this.dataTable.elasticChunks) {\n                const count = this.dataTable.getCachedCount();\n                const total = this.dataTable.getTotal();\n                if (count !== total)\n                    totalStr = '?';\n            }\n            pageInfoDiv.innerHTML = i18n.getText('GridPageInfo')\n                .replace('{FirstPageRecordNum}', `<span>${fistPageRecordNum.toString()}</span>`)\n                .replace('{LastPageRecordNum}', `<span>${lastPageRecordNum.toString()}</span>`)\n                .replace('{Total}', `<span>${totalStr}</span>`);\n        }\n        return pageInfoDiv;\n    }\n    showProgress() {\n    }\n    hideProgress() {\n    }\n    getLocalIndexByGlobal(index) {\n        if (this.pagination) {\n            return index % this.pagination.pageSize;\n        }\n        else {\n            return index;\n        }\n    }\n    getGlobalIndexByLocal(index) {\n        if (this.pagination) {\n            return (this.pagination.page - 1) * this.pagination.pageSize + index;\n        }\n        else {\n            return index;\n        }\n    }\n    renderRow(row, index) {\n        let indexGlobal = this.getGlobalIndexByLocal(index);\n        let rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-${index % 2 == 1 ? 'odd' : 'even'}`)\n            .data('row-idx', `${indexGlobal}`)\n            .attr('tabindex', '-1')\n            .on('click', (ev) => {\n            this.activeRowIndex = index;\n            this.fireEvent({\n                type: 'rowClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        })\n            .on('dblclick', (ev) => {\n            this.fireEvent({\n                type: 'rowDbClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        });\n        if (index == 0) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-first`);\n        }\n        let rowElement = rowBuilder.toDOM();\n        if (this.options.showActiveRow && index == this.activeRowIndex) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-active`);\n        }\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            const colindex = column.isRowNum ? -1 : this.dataTable.columns.getIndex(column.dataColumn.id);\n            let val = column.isRowNum ? indexGlobal + 1 : row.getValue(colindex);\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        return rowElement;\n    }\n    renderCell(column, colIndex, value, rowElement) {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-cell`)\n            .data('col-idx', `${colIndex}`)\n            .attr('tabindex', '-1')\n            .setStyle('width', `${column.width}px`);\n        if (column.align == GridColumnAlign.LEFT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-left`);\n        }\n        else if (column.align == GridColumnAlign.RIGHT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-right`);\n        }\n        else if (column.align == GridColumnAlign.CENTER) {\n            builder.addClass(`${this.cssPrefix}-cell-align-center`);\n        }\n        const cellElement = builder.toDOM();\n        const valueCell = cellElement.appendChild(domel('div')\n            .addClass(`${this.cssPrefix}-cell-value`)\n            .toDOM());\n        const cellRenderer = this.getCellRenderer(column);\n        if (cellRenderer) {\n            cellRenderer(value, column, valueCell, rowElement);\n        }\n        return cellElement;\n    }\n    getCellRenderer(column) {\n        let cellRenderer;\n        if (column.isRowNum) {\n            cellRenderer = this.cellRendererStore.getDefaultRendererByType(CellRendererType.NUMBER);\n        }\n        else {\n            cellRenderer = this.cellRendererStore.getDefaultRenderer(column.type);\n        }\n        if (this.options && this.options.onGetCellRenderer) {\n            cellRenderer = this.options.onGetCellRenderer(column, cellRenderer) || cellRenderer;\n        }\n        return cellRenderer;\n    }\n    /** Sets current grid pages (if paging is used) */\n    setPage(page) {\n        this.pagination.page = page;\n        this.fireEvent({ type: \"pageChanged\", page: page });\n        this.refresh();\n        this.bodyViewportDiv.focus();\n    }\n    renderPageNavigator() {\n        let paginateDiv = document.createElement('div');\n        paginateDiv.className = `${this.cssPrefix}-pagination-wrapper`;\n        const rowCount = this.dataTable.getTotal();\n        const totalRows = this.dataTable.getTotal();\n        const pageSize = this.pagination.pageSize;\n        const totalPages = Math.ceil(totalRows / pageSize);\n        const distance = 8, islandSize = 3;\n        const prefix = this.paginationOptions.useBootstrap ? '' : `${this.cssPrefix}-`;\n        if (!this.options.paging || !this.options.paging.enabled || rowCount <= pageSize) {\n            return paginateDiv;\n        }\n        const buttonClickHandler = (ev) => {\n            const element = ev.target;\n            if (element.hasAttribute('data-page')) {\n                const page = parseInt(element.getAttribute('data-page'));\n                this.setPage(page);\n            }\n        };\n        const renderPaginationItem = (pageIndex, content, disabled, extreme, active, title) => {\n            const li = document.createElement('li');\n            li.className = `${prefix}page-item`;\n            if (!extreme) {\n                if (active) {\n                    li.className += ' active';\n                }\n                const a = document.createElement('a');\n                a.setAttribute('href', 'javascript:void(0)');\n                a.innerHTML = content || pageIndex.toString();\n                a.setAttribute(\"data-page\", `${pageIndex}`);\n                a.className = `${prefix}page-link`;\n                a.addEventListener(\"click\", buttonClickHandler);\n                if (title) {\n                    a.setAttribute(\"title\", title);\n                }\n                li.appendChild(a);\n                return li;\n            }\n            let a = document.createElement('span');\n            a.setAttribute('aria-hidden', 'true');\n            a.className = `${prefix}page-link`;\n            if (disabled) {\n                li.className += ' disabled';\n            }\n            else {\n                if (this.paginationOptions.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${pageIndex}`);\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute('data-page', `${pageIndex}`);\n                    a = newA;\n                }\n                a.className = `${prefix}page-link`;\n                a.addEventListener(\"click\", buttonClickHandler);\n            }\n            a.innerHTML = content;\n            if (title) {\n                a.setAttribute(\"title\", title);\n            }\n            li.appendChild(a);\n            return li;\n        };\n        const pageIndex = this.pagination.page || 1;\n        let ul = document.createElement('ul');\n        ul.className = `${prefix}pagination`;\n        ul.style.userSelect = 'none';\n        paginateDiv.appendChild(ul);\n        if (this.dataTable.elasticChunks) {\n            let cell = renderPaginationItem(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n            ul.appendChild(cell);\n            cell = renderPaginationItem(pageIndex + 1, '&raquo;', this.isLastPage(), true, false);\n            ul.appendChild(cell);\n        }\n        else {\n            if (totalPages > 10) {\n                ul.appendChild(renderPaginationItem(pageIndex - 10, '&laquo;', pageIndex <= 10, true, false, \"Jump left on 10 pages\"));\n            }\n            ul.appendChild(renderPaginationItem(pageIndex - 1, '&lsaquo;', pageIndex == 1, true, false, \"Prev Page\"));\n            ul.appendChild(renderPaginationItem(1, '1', pageIndex == 1, false, pageIndex === 1));\n            if (totalPages <= 10) {\n                for (let i = 2; i < totalPages; i++) {\n                    ul.appendChild(renderPaginationItem(i, `${i}`, pageIndex === i, false, pageIndex === i));\n                }\n            }\n            else {\n                if (pageIndex < distance) {\n                    for (let i = 2; i <= distance; i++) {\n                        ul.appendChild(renderPaginationItem(i, `${i}`, false, false, pageIndex === i));\n                    }\n                    if (totalPages > distance) {\n                        ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    }\n                }\n                else if (pageIndex <= totalPages && pageIndex > totalPages - distance + 1) {\n                    if (totalPages > distance) {\n                        ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    }\n                    for (let i = totalPages - distance + 1; i < totalPages; i++) {\n                        ul.appendChild(renderPaginationItem(i, `${i}`, pageIndex === i, false, pageIndex === i));\n                    }\n                }\n                else {\n                    ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    // Island Left Side\n                    for (let i = islandSize; i > 0; i--) {\n                        ul.appendChild(renderPaginationItem(pageIndex - i, `${pageIndex - i}`, false, false, false));\n                    }\n                    // Center of Island\n                    ul.appendChild(renderPaginationItem(pageIndex, `${pageIndex}`, false, false, true));\n                    // Island Right Size\n                    for (let i = 1; i <= islandSize; i++) {\n                        ul.appendChild(renderPaginationItem(pageIndex + i, `${pageIndex + i}`, false, false, false));\n                    }\n                    ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                }\n            }\n            if (totalPages > 1 || pageIndex < totalPages) {\n                ul.appendChild(renderPaginationItem(totalPages, `${totalPages}`, pageIndex === totalPages, false, pageIndex === totalPages));\n            }\n            ul.appendChild(renderPaginationItem(pageIndex + 1, '&rsaquo;', pageIndex == totalPages, true, false, \"Next Page\"));\n            if (totalPages > 10) {\n                ul.appendChild(renderPaginationItem(pageIndex + 10, '&raquo;', pageIndex >= totalPages - 10, true, false, \"Jump right on 10 pages\"));\n            }\n        }\n        if (this.options.paging.allowPageSizeChange) {\n            const selectChangeHandler = (ev) => {\n                const newValue = parseInt(ev.target.value);\n                this.pagination.pageSize = newValue;\n                this.pagination.page = 1;\n                this.refresh();\n            };\n            const pageSizes = document.createElement('div');\n            pageSizes.className = `${this.cssPrefix}-page-sizes`;\n            const selectSize = document.createElement('div');\n            selectSize.className = `kfrm-select ${this.cssPrefix}-page-sizes-select`;\n            pageSizes.appendChild(selectSize);\n            const sel = document.createElement('select');\n            const selOptions = this.options.paging.pageSizeItems || [];\n            const selSet = new Set(selOptions);\n            selSet.add(this.options.paging.pageSize || 20);\n            Array.from(selSet).forEach(el => {\n                const option = document.createElement(\"option\");\n                option.value = el.toString();\n                option.text = el.toString();\n                sel.appendChild(option);\n            });\n            sel.value = (this.pagination.pageSize || 20).toString();\n            selectSize.appendChild(sel);\n            sel.addEventListener('change', selectChangeHandler);\n            const labelDiv = document.createElement('div');\n            labelDiv.className = `${this.cssPrefix}-page-sizes-label`;\n            pageSizes.appendChild(labelDiv);\n            const label = document.createElement('span');\n            label.innerText = i18n.getText('GridItemsPerPage');\n            labelDiv.appendChild(label);\n            paginateDiv.appendChild(pageSizes);\n        }\n        return paginateDiv;\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, event => handler(event.data));\n    }\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    renderHeaderButtons() {\n        if (this.options.showPlusButton) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-header-btn-plus`)\n                .title(this.options.plusButtonTitle || 'Add')\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .on('click', (e) => {\n                e.preventDefault();\n                this.fireEvent({\n                    type: 'plusButtonClick',\n                    sourceEvent: e\n                });\n            }))\n                .toDOM();\n        }\n        return domel('span')\n            .addText('#')\n            .toDOM();\n    }\n    showLandingSlot(pageX, pageY) {\n        const colElems = this.headerRowDiv.querySelectorAll(`[class*=${this.cssPrefix}-table-col]`);\n        const cols = [];\n        for (let i = 1; i < colElems.length; i++) {\n            const rowElem = colElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            cols.push(rowElem);\n        }\n        if (cols.length === 0) {\n            this.landingIndex = 0;\n            this.headerRowDiv.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let col of cols) {\n            const colPos = getElementAbsolutePos(col);\n            const width = col.offsetWidth;\n            if (pageX > colPos.x && pageX < colPos.x + width) {\n                // -1 as we don't need to count add button here\n                newLandingIndex = parseInt(col.getAttribute('data-col-idx')) - 1;\n            }\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < cols.length) {\n                this.headerRowDiv.insertBefore(this.landingSlot, cols[this.landingIndex]);\n            }\n            else {\n                this.headerRowDiv.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    get activeRowIndex() {\n        return this._activeRowIndex;\n    }\n    set activeRowIndex(value) {\n        if (value !== this._activeRowIndex) {\n            const oldValue = this._activeRowIndex;\n            this._activeRowIndex = value;\n            this.updateActiveRow();\n            this.fireEvent({\n                type: 'activeRowChanged',\n                oldValue,\n                newValue: this.activeRowIndex,\n                rowIndex: this.getGlobalIndexByLocal(this.activeRowIndex)\n            });\n        }\n    }\n    updateActiveRow() {\n        if (this.options.showActiveRow) {\n            const rows = this.bodyCellContainerDiv.querySelectorAll(`[class*=${this.cssPrefix}-row-active]`);\n            rows.forEach(el => { el.classList.remove(`${this.cssPrefix}-row-active`); });\n            const activeRow = this.getActiveRow();\n            if (activeRow) {\n                activeRow.classList.add(`${this.cssPrefix}-row-active`);\n                this.ensureRowVisibility(this.activeRowIndex);\n            }\n        }\n    }\n    getActiveRow() {\n        return this.getDataRow(this.activeRowIndex);\n    }\n    getDataRow(index) {\n        const rows = Array.from(this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row:not(.${this.cssPrefix}-row-totals)`));\n        if (index >= 0 && index < rows.length)\n            return rows[index];\n        return null;\n    }\n    /** Makes the grid focused for keyboard events */\n    focus() {\n        this.bodyViewportDiv.focus();\n    }\n    /** Resizes columns according to the data they represent */\n    resizeColumns() {\n        if (this.options.columnWidths.autoResize === AutoResizeColumns.Never)\n            return;\n        const containerWidth = this.bodyCellContainerDiv.style.width;\n        this.bodyCellContainerDiv.style.visibility = 'hidden';\n        this.bodyCellContainerDiv.style.width = '1px';\n        //this.headerRowDiv.style.visibility = 'hidden';\n        this.headerRowDiv.style.width = '1px';\n        let sumWidth = 0;\n        const columns = this.columns.getItems();\n        const headerCells = this.headerCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-header-cell`);\n        let headerIdx = 0;\n        for (let idx = 0; idx < this.columns.count; idx++) {\n            const column = columns[idx];\n            if (!column.isVisible)\n                continue;\n            const calculatedWidth = this.options.columnWidths.autoResize !== AutoResizeColumns.Always && column.dataColumn\n                ? column.dataColumn.calculatedWidth\n                : 0;\n            const cellValues = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-cell[data-col-idx=\"${idx}\"] > .${this.cssPrefix}-cell-value`);\n            let maxWidth = 0;\n            if (calculatedWidth > 0) {\n                sumWidth += calculatedWidth;\n                column.width = calculatedWidth;\n                cellValues.forEach(value => {\n                    value.parentElement.style.width = `${calculatedWidth}px`;\n                });\n                headerCells[headerIdx].style.width = `${calculatedWidth}px`;\n            }\n            else {\n                if (cellValues.length == 0) {\n                    headerCells[headerIdx].style.width = null;\n                    headerCells[headerIdx].style.whiteSpace = 'nowrap';\n                }\n                maxWidth = headerCells[headerIdx].offsetWidth;\n                if (cellValues.length > 0) {\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = null;\n                        const width = value.parentElement.offsetWidth;\n                        if (width > maxWidth) {\n                            maxWidth = width;\n                        }\n                    });\n                    maxWidth += 3;\n                    const maxOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.max || 500\n                        : this.options.columnWidths[column.dataColumn.type].max || 2000;\n                    const minOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.min || 0\n                        : this.options.columnWidths[column.dataColumn.type].min || 20;\n                    if (maxWidth > maxOption) {\n                        maxWidth = maxOption;\n                    }\n                    if (maxWidth < minOption) {\n                        maxWidth = minOption;\n                    }\n                    if (utils.isNumericType(column.type)) {\n                        //increase the calculated width in 1.3 times for numeric columns\n                        maxWidth = Math.round(maxWidth * 1.3);\n                    }\n                    sumWidth += maxWidth;\n                    column.width = maxWidth;\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = `${maxWidth}px`;\n                    });\n                    headerCells[headerIdx].style.width = `${maxWidth}px`;\n                    if (column.dataColumn) {\n                        column.dataColumn.calculatedWidth = maxWidth;\n                    }\n                }\n                else {\n                    sumWidth += maxWidth;\n                }\n            }\n            headerIdx++;\n        }\n        if (sumWidth > 0) {\n            this.bodyCellContainerDiv.style.width = `${sumWidth}px`;\n            this.headerCellContainerDiv.style.width = `${sumWidth}px`;\n        }\n        else {\n            this.bodyCellContainerDiv.style.width = containerWidth;\n            this.headerCellContainerDiv.style.width = containerWidth;\n        }\n        this.bodyCellContainerDiv.style.visibility = null;\n        this.headerRowDiv.removeAttribute('style');\n    }\n}\n\nclass Calendar {\n    get cssPrefix() {\n        return 'kdtp-cal';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n        if (!this.options.yearRange) {\n            this.options.yearRange = 'c-10:c+10';\n        }\n    }\n    setDate(date) {\n        this.currentDate = new Date(date);\n    }\n    getDate() {\n        return new Date(this.currentDate);\n    }\n    dateChanged(apply) {\n        if (this.options.onDateChanged) {\n            this.options.onDateChanged(this.currentDate, apply);\n        }\n    }\n}\n\nclass DateTimePicker {\n    get cssPrefix() {\n        return 'kdtp';\n    }\n    constructor(options) {\n        this.calendar = null;\n        this.timePicker = null;\n        this.options = options;\n        this.render();\n    }\n    setDateTime(dateTime) {\n        this.currentDateTime = new Date(dateTime);\n        if (this.calendar) {\n            this.calendar.setDate(this.currentDateTime);\n        }\n        if (this.timePicker) {\n            this.timePicker.setTime(this.currentDateTime);\n        }\n    }\n    getDateTime() {\n        return new Date(this.currentDateTime);\n    }\n    render() {\n        if (this.options.showCalendar) {\n            this.calendar = this.createCalendar({\n                yearRange: this.options.yearRange,\n                showDateTimeInput: this.options.showDateTimeInput,\n                timePickerIsUsed: this.options.showTimePicker,\n                oneClickDateSelection: this.options.oneClickDateSelection,\n                onDateChanged: (date, apply) => {\n                    this.currentDateTime = date;\n                    if (this.timePicker) {\n                        this.timePicker.setTime(this.currentDateTime);\n                    }\n                    if (this.options.showTimePicker) {\n                        this.dateTimeChanged();\n                    }\n                    if (apply) {\n                        this.apply(this.currentDateTime);\n                    }\n                }\n            });\n            if (this.calendar)\n                this.calendar.render();\n        }\n        if (this.options.showTimePicker) {\n            this.timePicker = this.createTimePicker({\n                onTimeChanged: (time) => {\n                    this.currentDateTime.setHours(time.getHours());\n                    this.currentDateTime.setMinutes(time.getMinutes());\n                    if (this.calendar) {\n                        this.calendar.setDate(this.currentDateTime);\n                    }\n                    this.dateTimeChanged();\n                }\n            });\n            if (this.timePicker)\n                this.timePicker.render();\n        }\n        this.setDateTime(new Date());\n    }\n    createCalendar(options) {\n        return null;\n    }\n    createTimePicker(options) {\n        return null;\n    }\n    show(anchor) {\n        if (this.options.beforeShow) {\n            this.options.beforeShow();\n        }\n        const pos = getElementAbsolutePos(anchor || document.body);\n        this.slot.style.top = pos.y + anchor.clientHeight + 'px';\n        this.slot.style.left = pos.x + 'px';\n    }\n    apply(date) {\n        if (this.options.onApply) {\n            this.options.onApply(date);\n        }\n        this.destroy();\n    }\n    cancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n        this.destroy();\n    }\n    destroy() {\n        if (this.slot && this.slot.parentElement) {\n            this.slot.parentElement.removeChild(this.slot);\n        }\n    }\n    dateTimeChanged() {\n        if (this.options.onDateTimeChanged) {\n            this.options.onDateTimeChanged(this.currentDateTime);\n        }\n    }\n}\n\nclass DefaultCalendar extends Calendar {\n    constructor(slot, options) {\n        super(slot, options);\n        this.daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.calendarBody = null;\n        this.isManualInputChanging = false;\n        for (let i = 0; i < this.daysOfWeek.length; i++) {\n            this.daysOfWeek[i] = i18n.getShortWeekDayName(i + 1);\n        }\n        for (let i = 0; i < this.months.length; i++) {\n            this.months[i] = i18n.getLongMonthName(i + 1);\n        }\n    }\n    setDate(date) {\n        super.setDate(date);\n        this.selectedMonth = this.currentDate.getMonth();\n        this.selectedYear = this.currentDate.getFullYear();\n        this.rerenderMonth();\n    }\n    render() {\n        const header = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`);\n        if (this.options.showDateTimeInput) {\n            header\n                .addChildElement(this.renderManualDateInput());\n        }\n        else {\n            header\n                .addChild('span', builder => this.headerTextElem = builder.toDOM());\n        }\n        domel(this.slot)\n            .addChildElement(this.renderCalendarButtons());\n        this.calendarBody = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n    }\n    getInputDateFormat() {\n        const settings = i18n.getLocaleSettings();\n        return (this.options.timePickerIsUsed)\n            ? `${settings.editDateFormat} ${settings.editTimeFormat}`\n            : settings.editDateFormat;\n    }\n    renderManualDateInput() {\n        const format = this.getInputDateFormat();\n        const builder = domel('input')\n            .attr('placeholder', format)\n            .addClass(`${this.cssPrefix}-header-input`);\n        builder\n            .mask(format.replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99'))\n            .on('input', ev => {\n            builder.removeClass('error');\n            try {\n                this.isManualInputChanging = true;\n                const newDate = utils.strToDateTime(this.manualInputElem.value, format);\n                this.currentDate = newDate;\n                this.jump(this.currentDate.getFullYear(), this.currentDate.getMonth());\n                this.dateChanged(false);\n            }\n            catch (e) {\n                builder.addClass('error');\n            }\n            finally {\n                this.isManualInputChanging = false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.manualInputElem.className.indexOf('error') < 0\n                    && !this.isManualInputChanging)\n                    this.dateChanged(true);\n            }\n        })\n            .on('focus', () => {\n            setTimeout(() => {\n                this.manualInputElem.selectionStart = 0;\n                this.manualInputElem.selectionEnd = 0;\n            }, 50);\n        });\n        this.manualInputElem = builder.toDOM();\n        return this.manualInputElem;\n    }\n    updateDisplayedDateValue() {\n        if (this.manualInputElem) {\n            if (!this.isManualInputChanging) {\n                const format = this.getInputDateFormat();\n                this.manualInputElem.value = i18n.dateTimeToStr(this.currentDate, format);\n                this.manualInputElem.focus();\n            }\n        }\n        else if (this.headerTextElem) {\n            const locale = i18n.getCurrentLocale();\n            this.headerTextElem.innerText = this.currentDate.toLocaleString(locale == 'en' ? undefined : locale, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            });\n        }\n    }\n    renderCalendarButtons() {\n        const builder = domel('nav')\n            .addClass(`${this.cssPrefix}-nav`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-prev`)\n            .on('click', () => {\n            this.prev();\n        })\n            .addChild('span', builder => builder.html('&lsaquo;')))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-selectors`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-month`)\n            .addChild('select', builder => {\n            builder\n                .on('change', () => {\n                this.jump(this.selectedYear, parseInt(this.selectMonthElem.value));\n            });\n            for (let i = 0; i < this.months.length; i++) {\n                builder.addChild('option', builder => builder\n                    .attr('value', i.toString())\n                    .text(this.months[i]));\n            }\n            this.selectMonthElem = builder.toDOM();\n        }))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-year`)\n            .addChild('select', builder => this.selectYearElem = builder\n            .on('change', () => {\n            this.jump(parseInt(this.selectYearElem.value), this.selectedMonth);\n        })\n            .toDOM())))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-next`)\n            .on('click', () => {\n            this.next();\n        })\n            .addChild('span', builder => builder.html('&rsaquo;')));\n        return builder.toDOM();\n    }\n    prev() {\n        this.selectedYear = (this.selectedMonth === 0) ? this.selectedYear - 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth === 0) ? 11 : this.selectedMonth - 1;\n        this.rerenderMonth();\n    }\n    next() {\n        this.selectedYear = (this.selectedMonth === 11) ? this.selectedYear + 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth + 1) % 12;\n        this.rerenderMonth();\n    }\n    rerenderSelectYear() {\n        const match = /c-(\\d*):c\\+(\\d*)/g.exec(this.options.yearRange);\n        let minusYear = 0;\n        let plusYear = 1;\n        if (match !== null) {\n            minusYear = parseInt(match[1]);\n            plusYear = parseInt(match[2]);\n        }\n        this.selectYearElem.innerHTML = '';\n        for (let i = 0; i <= minusYear + plusYear; i++) {\n            let op = document.createElement(\"option\");\n            let year = this.selectedYear - minusYear + i;\n            op.value = year.toString();\n            op.innerText = year.toString();\n            this.selectYearElem.appendChild(op);\n        }\n    }\n    jump(year, month) {\n        this.selectedYear = year;\n        this.selectedMonth = month;\n        this.rerenderMonth();\n    }\n    rerenderMonth() {\n        //header text\n        this.updateDisplayedDateValue();\n        this.rerenderSelectYear();\n        let firstDay = (new Date(this.selectedYear, this.selectedMonth)).getDay();\n        let daysInMonth = new Date(this.selectedYear, this.selectedMonth + 1, 0).getDate();\n        this.calendarBody.innerHTML = \"\";\n        this.selectYearElem.value = this.selectedYear.toString();\n        this.selectMonthElem.value = this.selectedMonth.toString();\n        this.daysOfWeek.forEach((day, idx) => {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-weekday`)\n                .addClass(idx == 0 || idx == 6 ? `${this.cssPrefix}-weekend` : '')\n                .text(day);\n        });\n        // Add empty cells before first day\n        for (let i = 0; i < firstDay; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n        // Add all month days\n        const today = new Date();\n        for (let day = 1; day <= daysInMonth; day++) {\n            const builder = domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day`)\n                .attr('data-date', day.toString())\n                .text(day.toString())\n                .on('click', (e) => {\n                this.currentDate.setFullYear(this.selectedYear);\n                this.currentDate.setMonth(this.selectedMonth);\n                this.currentDate.setDate(parseInt(e.target.getAttribute('data-date')));\n                this.dateChanged(this.options.oneClickDateSelection);\n            });\n            if (day === today.getDate() && this.selectedYear === today.getFullYear() && this.selectedMonth === today.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-current`);\n            }\n            if (day === this.currentDate.getDate() && this.selectedYear === this.currentDate.getFullYear() && this.selectedMonth === this.currentDate.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-selected`);\n            }\n            const dayOfWeek = (firstDay + day - 1) % 7;\n            if (dayOfWeek == 0 || dayOfWeek == 6) {\n                builder.addClass(`${this.cssPrefix}-weekend`);\n            }\n            if (typeof this.options.onDrawDay === \"function\") {\n                this.options.onDrawDay.apply(builder.toDOM(), [\n                    builder.toDOM(),\n                    new Date(this.selectedYear, this.selectedMonth, day)\n                ]);\n            }\n        }\n        // Add empty cells after last day\n        const cellsDrawnInLastRow = (firstDay + daysInMonth) % 7;\n        const cellsToDraw = cellsDrawnInLastRow == 0 ? 0 : 7 - cellsDrawnInLastRow;\n        for (let i = 0; i < cellsToDraw; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n    }\n    dateChanged(apply) {\n        super.dateChanged(apply);\n        this.rerenderMonth();\n    }\n}\n\nclass TimePicker {\n    get cssPrefix() {\n        return 'kdtp-tp';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n    }\n    setTime(time) {\n        this.currentTime = new Date(time);\n    }\n    getTime() {\n        return new Date(this.currentTime);\n    }\n    timeChanged() {\n        if (this.options.onTimeChanged) {\n            this.options.onTimeChanged(this.currentTime);\n        }\n    }\n}\n\nclass DefaultTimePicker extends TimePicker {\n    setTime(time) {\n        super.setTime(time);\n        this.updateDisplayedTime();\n        this.hoursInput.valueAsNumber = time.getHours();\n        this.minutesInput.valueAsNumber = time.getMinutes();\n    }\n    render() {\n        domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-time`)\n            .addChild('span', builder => this.timeText = builder.toDOM())\n            .toDOM();\n        const slidersBuilder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-sliders`);\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Hours')\n            .addChild('input', builder => this.hoursInput = builder\n            .addClass(`${this.cssPrefix}-input-hours`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '23')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setHours(this.hoursInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Minutes')\n            .addChild('input', builder => this.minutesInput = builder\n            .addClass(`${this.cssPrefix}-input-minutes`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '59')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setMinutes(this.minutesInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        return this.slot;\n    }\n    updateDisplayedTime() {\n        const locale = i18n.getCurrentLocale();\n        const timeToDraw = this.currentTime.toLocaleString(locale == 'en' ? undefined : locale, {\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        this.timeText.innerText = timeToDraw;\n    }\n}\n\nclass DefaultDateTimePicker extends DateTimePicker {\n    render() {\n        const sb = domel('div', document.body)\n            .addClass(`${this.cssPrefix}`)\n            .attr('tabIndex', '0')\n            .setStyle('position', 'absolute')\n            .setStyle('top', '-1000px')\n            .setStyle('left', '-1000px')\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.cancel();\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                this.apply(this.getDateTime());\n            }\n            return false;\n        });\n        if (this.options.zIndex) {\n            sb.setStyle('z-index', `${this.options.zIndex}`);\n        }\n        this.slot = sb.toDOM();\n        super.render();\n        this.renderButtons();\n        this.globalMouseDownHandler = (e) => {\n            let event = window.event || e;\n            event.srcElement || event.target;\n            let isOutside = !this.slot.contains(event.target);\n            if (isOutside) {\n                document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n                this.cancel();\n            }\n            return true;\n        };\n    }\n    renderButtons() {\n        const builder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-buttons`)\n            .addChild('button', b => this.nowButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-now`)\n            .text(i18n.getText('ButtonNow'))\n            .on('click', () => {\n            this.setDateTime(new Date());\n            this.dateTimeChanged();\n            return false;\n        })\n            .toDOM());\n        if (this.options.showTimePicker || !this.options.oneClickDateSelection) {\n            builder.addChild('button', b => this.submitButton = b\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', () => {\n                this.apply(this.getDateTime());\n                return false;\n            })\n                .toDOM());\n        }\n        builder.addChild('button', b => this.submitButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-cancel`)\n            .text(i18n.getText('ButtonCancel'))\n            .on('click', () => {\n            this.cancel();\n            return false;\n        })\n            .toDOM());\n    }\n    createCalendar(options) {\n        this.calendarSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-cal`)\n                .toDOM();\n        return new DefaultCalendar(this.calendarSlot, options);\n    }\n    createTimePicker(options) {\n        this.timePickerSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-tp`)\n                .toDOM();\n        return new DefaultTimePicker(this.timePickerSlot, options);\n    }\n    show(anchor) {\n        if (this.options.showDateTimeInput) {\n            if (this.options.beforeShow) {\n                this.options.beforeShow();\n            }\n            const anchorPos = getElementAbsolutePos(anchor || document.body);\n            const parentPos = getElementAbsolutePos(anchor ? anchor.parentElement || anchor : document.body);\n            this.slot.style.top = parentPos.y + 'px';\n            this.slot.style.left = anchorPos.x + 'px';\n        }\n        else {\n            super.show(anchor);\n            this.slot.focus();\n        }\n        setTimeout(() => {\n            document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n        }, 1);\n    }\n}\n\nvar DialogFooterAlignment;\n(function (DialogFooterAlignment) {\n    DialogFooterAlignment[DialogFooterAlignment[\"Left\"] = 1] = \"Left\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Center\"] = 2] = \"Center\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Right\"] = 3] = \"Right\";\n})(DialogFooterAlignment || (DialogFooterAlignment = {}));\n\nconst cssPrefix = \"kdlg\";\nclass DefaultDialogService {\n    openConfirm(title, content, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-confirm\">${content}</div>`;\n        const options = {\n            title: title,\n            closable: false,\n            submitable: true,\n            cancelable: true,\n            body: template\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                callback(true);\n            };\n            options.onCancel = () => {\n                callback(false);\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                resolve(true);\n            };\n            options.onCancel = () => {\n                resolve(false);\n            };\n            this.open(options);\n        });\n    }\n    openPrompt(title, content, defVal, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-content\">${content}</label>\r\n                <input type=\"text\" name=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        const options = {\n            title: title,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            body: template,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                input.focus();\n            }\n        };\n        const processInput = (callback) => {\n            const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n            const result = input.value;\n            if (result && result.replace(/\\s/g, '').length > 0) {\n                callback(result);\n                return true;\n            }\n            input.classList.add('eqjs-invalid');\n            return false;\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                return processInput(callback);\n            };\n            options.onCancel = () => {\n                callback(\"\");\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                return processInput(resolve);\n            };\n            options.onCancel = () => {\n                resolve(\"\");\n            };\n            this.open(options);\n        });\n    }\n    open(options, data) {\n        const dialog = new DefaultDialog(options, data);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    createSet(options) {\n        return new DefaultDialogSet(options, this);\n    }\n    untrack(dlg) {\n        const index = DefaultDialogService.openDialogs.indexOf(dlg);\n        if (index >= 0) {\n            DefaultDialogService.openDialogs.splice(index, 1);\n        }\n    }\n    track(dlg) {\n        DefaultDialogService.openDialogs.push(dlg);\n    }\n    openProgress(options) {\n        const dialog = new DefaultProgressDialog(options);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    getAllDialogs() {\n        return Array.from(DefaultDialogService.openDialogs);\n    }\n    closeAllDialogs() {\n        for (const dialog of Array.from(DefaultDialogService.openDialogs)) {\n            dialog.close();\n        }\n    }\n}\nDefaultDialogService.openDialogs = [];\nclass DefaultDialog {\n    constructor(options, data) {\n        this.options = options;\n        this.submitHandler = (token) => {\n            if (this.options.onSubmit && this.options.onSubmit(this, token) === false) {\n                return false;\n            }\n            this.destroy();\n            return true;\n        };\n        this.cancelHandler = () => {\n            if (this.options.onCancel) {\n                this.options.onCancel(this);\n            }\n            this.destroy();\n        };\n        this.keydownHandler = (ev) => {\n            if (ev.keyCode == 13 && this.isActiveDialog()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.submitHandler()) {\n                    window.removeEventListener('keydown', this.keydownHandler, false);\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.dialogId = utils.generateId('dlg');\n        this.data = data;\n        this.slot =\n            domel('div', document.body)\n                .attr('tab-index', '-1')\n                .data('dialog-id', this.dialogId)\n                .addClass(`${cssPrefix}-modal`, 'is-active')\n                .focus()\n                .addChild('div', b => b\n                .addClass('kdlg-modal-background'))\n                .addChild('div', b => this.windowElement = b\n                .addClass(`${cssPrefix}-modal-window`)\n                .addChild('header', b => {\n                this.headerElement = b\n                    .addClass(`${cssPrefix}-header`)\n                    .addChild('p', b => b\n                    .addClass(`${cssPrefix}-header-title`)\n                    .addText(options.title))\n                    .toDOM();\n                if (options.closable !== false)\n                    b.addChild('button', b => b\n                        .addClass(`${cssPrefix}-modal-close`)\n                        .on('click', () => {\n                        this.cancelHandler();\n                    })\n                        .focus());\n            })\n                .addChild('div', b => {\n                b.addClass(`${cssPrefix}-alert-container`);\n                this.alertElement = b.toDOM();\n            })\n                .addChild('section', b => {\n                this.bodyElement = b\n                    .addClass(`${cssPrefix}-body`)\n                    .toDOM();\n                if (typeof options.body === 'string') {\n                    const html = liquid.renderLiquidTemplate(options.body, data);\n                    b.addHtml(html);\n                }\n                else {\n                    b.addChildElement(options.body);\n                }\n            })\n                .addChild('footer', b => {\n                let alignClass = null;\n                if (options.footerAlignment && options.footerAlignment == DialogFooterAlignment.Center) {\n                    alignClass = 'align-center';\n                }\n                else {\n                    alignClass = 'align-right';\n                }\n                this.footerElement = b\n                    .addClass(`${cssPrefix}-footer`)\n                    .toDOM();\n                b.addClass(alignClass);\n                if (options.submitable === false)\n                    return;\n                b.addChild('button', bb => {\n                    bb.id(this.dialogId + '-btn-submit')\n                        .addClass('kfrm-button', 'is-info')\n                        .addText(options.submitButtonText || i18n.getText('ButtonOK'));\n                    if (options.recaptchaSiteKey) {\n                        bb.data('sitekey', options.recaptchaSiteKey);\n                        bb.addClass('g-recaptcha');\n                        bb.on('click', (e) => {\n                            if (grecaptcha) {\n                                grecaptcha.ready(() => {\n                                    grecaptcha.execute(options.recaptchaSiteKey, { action: 'submit' })\n                                        .then((token) => {\n                                        this.submitHandler(token);\n                                    });\n                                });\n                            }\n                            else {\n                                this.submitHandler();\n                            }\n                        });\n                    }\n                    else {\n                        bb.on('click', (e) => {\n                            this.submitHandler();\n                        });\n                    }\n                    bb.focus();\n                });\n                if (options.cancelable !== false)\n                    b.addChild('button', bb => bb\n                        .id(this.dialogId + '-btn-cancel')\n                        .addClass('kfrm-button')\n                        .addText(options.cancelButtonText || i18n.getText('ButtonCancel'))\n                        .on('click', (e) => {\n                        this.cancelHandler();\n                    }));\n            })\n                .toDOM())\n                .toDOM();\n    }\n    getData() {\n        return this.data;\n    }\n    getRootElement() {\n        return this.slot;\n    }\n    getSubmitButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-submit');\n    }\n    getCancelButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-cancel');\n    }\n    open() {\n        if (this.options.beforeOpen) {\n            this.options.beforeOpen(this);\n        }\n        domel(this.slot).show();\n        if (this.options.arrangeParents) {\n            this.arrangeParents(true);\n        }\n        const windowDiv = this.slot\n            .querySelector(`.${cssPrefix}-modal-window`);\n        if (this.options.height) {\n            windowDiv.style.height = typeof this.options.height === 'string'\n                ? this.options.height\n                : `${this.options.height}px`;\n        }\n        if (this.options.width) {\n            windowDiv.style.width = typeof this.options.width === 'string'\n                ? this.options.width\n                : `${this.options.width}px`;\n        }\n        if (this.options.submitOnEnter) {\n            window.addEventListener('keydown', this.keydownHandler, false);\n        }\n        //clear alert on change in any input element \n        this.slot.querySelectorAll('input')\n            .forEach(element => element.addEventListener('input', () => {\n            this.clearAlert();\n            if (this.options.onInput) {\n                this.options.onInput(this);\n            }\n        }));\n        if (this.options.onShow) {\n            this.options.onShow(this);\n        }\n    }\n    submit() {\n        this.submitHandler();\n    }\n    cancel() {\n        this.cancelHandler();\n    }\n    close() {\n        this.destroy();\n    }\n    disableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = true);\n    }\n    enableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = false);\n    }\n    showAlert(text, reason, replace) {\n        let alert = domel('div')\n            .addClass(`${cssPrefix}-alert ${reason || ''}`)\n            .addChild('span', b => b\n            .addClass(`${cssPrefix}-alert-closebtn`)\n            .text('×')\n            .on('click', (ev) => {\n            const alert = ev.target.parentElement;\n            alert.parentElement.removeChild(alert);\n        }))\n            .addText(text)\n            .toDOM();\n        if (replace === true) {\n            this.clearAlert();\n        }\n        this.alertElement.appendChild(alert);\n    }\n    clearAlert() {\n        this.alertElement.innerHTML = '';\n    }\n    destroy() {\n        const elem = document.querySelectorAll(`[data-dialog-id=\"${this.dialogId}\"]`);\n        if (elem.length <= 0)\n            return;\n        if (this.options.arrangeParents) {\n            this.arrangeParents(false);\n        }\n        document.body.removeChild(this.slot);\n        if (this.options.submitOnEnter) {\n            window.removeEventListener('keydown', this.keydownHandler, false);\n        }\n        if (this.options.onDestroy) {\n            this.options.onDestroy(this);\n        }\n    }\n    isActiveDialog() {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal');\n        return windowDivs[windowDivs.length - 1] === this.slot;\n    }\n    arrangeParents(turnOn) {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal-window');\n        for (let i = 0; i < windowDivs.length - 1; i++) {\n            if (turnOn) {\n                const offset = i == 0 ? 20 : i * 40 + 20;\n                domel(windowDivs[i])\n                    .setStyle('margin-top', `${offset}px`)\n                    .setStyle('margin-left', `${offset}px`);\n            }\n            else {\n                domel(windowDivs[i])\n                    .removeStyle('margin-top')\n                    .removeStyle('margin-left');\n            }\n        }\n    }\n}\nclass DefaultProgressDialog extends DefaultDialog {\n    constructor(options, data) {\n        let contentElement;\n        let progressElement;\n        const body = domel('div')\n            .addChild('div', b => contentElement = b\n            .text(options.content || '')\n            .toDOM())\n            .addChild('div', b => {\n            b\n                .addClass(`${cssPrefix}-progress-line`)\n                .addChild('div', b => {\n                progressElement = b\n                    .addClass('fill')\n                    .toDOM();\n                if (options.determinated) {\n                    b.setStyle('width', '0%');\n                }\n                else {\n                    b.addClass('indeterminate');\n                }\n            });\n        })\n            .toDOM();\n        super({\n            title: options.title,\n            body: body,\n            beforeOpen: options.beforeOpen,\n            onSubmit: options.onSubmit,\n            width: options.width,\n            height: options.height,\n            submitable: false,\n            cancelable: false,\n            closable: false,\n            onDestroy: options.onDestroy\n        }, data);\n        this.contentElement = contentElement;\n        this.progressElement = progressElement;\n    }\n    updateContent(content) {\n        this.contentElement.innerText = content;\n    }\n    updateProgress(progress) {\n        progress = this.in01(progress);\n        this.progressElement.style.width = `${progress * 100}%`;\n        if (progress === 1) {\n            // postpone for 0.5s for smooth closing\n            setTimeout(() => {\n                this.submit();\n            }, 500);\n        }\n    }\n    in01(num) {\n        if (num > 1)\n            return 1;\n        if (num < 0)\n            return 0;\n        return num;\n    }\n}\nclass DefaultDialogSet {\n    constructor(options, dialogService) {\n        this.options = options;\n        this.dialogService = dialogService;\n        this.currentDialog = null;\n        this.currentIndex = 0;\n        this.options = options;\n        this.dialogService = dialogService;\n    }\n    getCurrent() {\n        return this.currentDialog;\n    }\n    openNext(data) {\n        return this.open(this.currentIndex + 1, data);\n    }\n    openPrev(data) {\n        return this.open(this.currentIndex - 1, data);\n    }\n    open(page, data) {\n        if (page < 0) {\n            this.currentIndex = 0;\n        }\n        else if (page >= this.options.length) {\n            this.currentIndex = this.options.length - 1;\n        }\n        else {\n            this.currentIndex = page;\n        }\n        if (this.currentDialog) {\n            try {\n                this.currentDialog.close();\n            }\n            catch (e) { }\n        }\n        const dlgOptions = this.options[this.currentIndex];\n        this.currentDialog = this.dialogService.open(dlgOptions, data);\n        return this.currentDialog;\n    }\n    close() {\n        if (this.currentDialog) {\n            this.currentDialog.close();\n            this.currentDialog = null;\n        }\n    }\n}\n\nfunction addEasyDataUITexts() {\n    i18n.updateDefaultTexts({\n        GridPageInfo: '{FirstPageRecordNum} - {LastPageRecordNum} of {Total} records',\n        GridItemsPerPage: 'items per page',\n        ButtonOK: \"OK\",\n        ButtonCancel: \"Cancel\",\n        ButtonApply: 'Apply',\n        ButtonNow: 'Now',\n        LblTotal: 'Total'\n    });\n}\naddEasyDataUITexts();\n\nvar PRE_SELECT;\n(function (PRE_SELECT) {\n    PRE_SELECT[PRE_SELECT[\"THIS_WEEK\"] = 0] = \"THIS_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"LAST_WEEK\"] = 1] = \"LAST_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"THIS_MONTH\"] = 2] = \"THIS_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"FIRST_MONTH\"] = 3] = \"FIRST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"LAST_MONTH\"] = 4] = \"LAST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"THIS_YEAR\"] = 5] = \"THIS_YEAR\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_1\"] = 6] = \"QUARTER_1\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_2\"] = 7] = \"QUARTER_2\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_3\"] = 8] = \"QUARTER_3\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_4\"] = 9] = \"QUARTER_4\";\n})(PRE_SELECT || (PRE_SELECT = {}));\nvar JUMP_TO;\n(function (JUMP_TO) {\n    JUMP_TO[\"UNDEF\"] = \"-1\";\n    JUMP_TO[\"TODAY\"] = \"1\";\n    JUMP_TO[\"YESTERDAY\"] = \"2\";\n    JUMP_TO[\"TOMORROW\"] = \"3\";\n    JUMP_TO[\"WEEK_START\"] = \"4\";\n    JUMP_TO[\"WEEK_END\"] = \"5\";\n    JUMP_TO[\"MONTH_START\"] = \"6\";\n    JUMP_TO[\"MONTH_END\"] = \"7\";\n    JUMP_TO[\"YEAR_START\"] = \"8\";\n    JUMP_TO[\"YEAR_END\"] = \"9\";\n})(JUMP_TO || (JUMP_TO = {}));\nconst DEFAULT_WEEK_START = 0;\nclass TimeSpanPicker extends DefaultDialog {\n    constructor(options) {\n        super({\n            title: options.title || `Select a period`,\n            body: \"\",\n            submitButtonText: options.submitButtonText || `OK`,\n            cancelButtonText: options.cancelButtonText || `Cancel`,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            beforeOpen: (dlg) => {\n                this.setupDialog();\n            },\n            onSubmit: (dlg) => {\n                if (typeof options.onSubmit === \"function\") {\n                    options.onSubmit.apply(dlg, [this.result(this.from), this.result(this.to)]);\n                }\n            }\n        });\n        this.yearRange = options.yearRange;\n        this.weekStart = options.weekStart || DEFAULT_WEEK_START;\n        this.bodyElement.append(this.drawDialog());\n        this.calendar1.render();\n        this.calendar2.render();\n        this.from = this.alignDate(options.start ? options.start : new Date());\n        this.to = this.alignDate(options.finish && this.alignDate(options.finish) > this.from ? options.finish : new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 1));\n        this.represent();\n    }\n    alignDate(date) {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }\n    drawDialog() {\n        const body = domel('div')\n            .addClass('tsp__container')\n            .addChild('div', b => {\n            b\n                .addClass('tsp__intervals')\n                .addChild('button', b => b.addClass('tsp__button').addText('This Week').on('click', () => { this.select(PRE_SELECT.THIS_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Week').on('click', () => { this.select(PRE_SELECT.LAST_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Month').on('click', () => { this.select(PRE_SELECT.THIS_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('First Month').on('click', () => { this.select(PRE_SELECT.FIRST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Month').on('click', () => { this.select(PRE_SELECT.LAST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Year').on('click', () => { this.select(PRE_SELECT.THIS_YEAR); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 1').on('click', () => { this.select(PRE_SELECT.QUARTER_1); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 2').on('click', () => { this.select(PRE_SELECT.QUARTER_2); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 3').on('click', () => { this.select(PRE_SELECT.QUARTER_3); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 4').on('click', () => { this.select(PRE_SELECT.QUARTER_4); }));\n        })\n            .addChild('div', b => {\n            b\n                .addClass('tsp__form')\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Start');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(1, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar1 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            this.from = this.alignDate(date);\n                            this.calendar1.setDate(this.from);\n                            if (this.to < this.from) {\n                                this.to = this.from;\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            })\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Finish');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(2, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar2 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            if (this.alignDate(date) >= this.from) {\n                                this.to = this.alignDate(date);\n                            }\n                            else {\n                                this.calendar2.setDate(this.to);\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            });\n        })\n            .toDOM();\n        return body;\n    }\n    setupDialog() {\n    }\n    jump(cal, to, select) {\n        let target = cal === 1 ? 'from' : 'to';\n        let jumpTo;\n        const curr = new Date();\n        switch (to) {\n            case JUMP_TO.TODAY: {\n                jumpTo = curr;\n                break;\n            }\n            case JUMP_TO.YESTERDAY: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1);\n                break;\n            }\n            case JUMP_TO.TOMORROW: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1);\n                break;\n            }\n            case JUMP_TO.WEEK_START: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart));\n                break;\n            }\n            case JUMP_TO.WEEK_END: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6 + this.weekStart));\n                break;\n            }\n            case JUMP_TO.MONTH_START: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                break;\n            }\n            case JUMP_TO.MONTH_END: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case JUMP_TO.YEAR_START: {\n                jumpTo = new Date(curr.getFullYear(), 0, 1);\n                break;\n            }\n            case JUMP_TO.YEAR_END: {\n                jumpTo = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        jumpTo = this.alignDate(jumpTo);\n        select.value = JUMP_TO.UNDEF;\n        if (target === \"from\") {\n            this.from = jumpTo;\n            if (this.to < this.from) {\n                this.to = this.from;\n            }\n        }\n        else {\n            if (jumpTo >= this.from) {\n                this[target] = jumpTo;\n            }\n        }\n        this.represent();\n    }\n    represent() {\n        this.calendar1.setDate(this.from);\n        this.calendar2.setDate(this.to);\n    }\n    select(interval) {\n        switch (interval) {\n            case PRE_SELECT.THIS_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay());\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.LAST_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay() - 7);\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.THIS_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case PRE_SELECT.FIRST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 1, 0);\n                break;\n            }\n            case PRE_SELECT.LAST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth() - 1, 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth(), 0);\n                break;\n            }\n            case PRE_SELECT.THIS_YEAR: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_1: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 3, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_2: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 3, 1);\n                this.to = new Date(curr.getFullYear(), 6, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_3: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 6, 1);\n                this.to = new Date(curr.getFullYear(), 9, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_4: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 9, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        this.represent();\n    }\n    result(date) {\n        const curr = this.alignDate(new Date());\n        const constants = {\n            \"Today\": this.alignDate(new Date()),\n            \"Yesterday\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1)),\n            \"Tomorrow\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1)),\n            \"FirstDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), 1)),\n            \"LastDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 0)),\n            \"FirstDayOfWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart))),\n            \"FirstDayOfYear\": this.alignDate(new Date(curr.getFullYear(), 0, 1)),\n            \"FirstDayOfNextWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart + 7))),\n            \"FirstDayOfNextMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 1)),\n            \"FirstDayOfNextYear\": this.alignDate(new Date(curr.getFullYear() + 1, 0, 1)),\n        };\n        for (let k in constants) {\n            console.log(constants[k], date);\n            if (constants[k].getTime() === date.getTime()) {\n                return `\\${{${k}}}`;\n            }\n        }\n        return i18n.dateTimeToStr(date, i18n.getLocaleSettings().editDateFormat);\n    }\n}\nconst showTimeSpanPicker = (options) => new TimeSpanPicker(options).open();\n\n// grid\n// export dialogs to use outside of context as global\nconst dialogs = new DefaultDialogService();\n\nexport { AutoResizeColumns, Calendar, CellRendererType, DFMT_REGEX, DateTimePicker, DefaultCalendar, DefaultDateTimePicker, DefaultDialog, DefaultDialogService, DefaultDialogSet, DefaultProgressDialog, DefaultTimePicker, DialogFooterAlignment, DomElementBuilder, DomInputElementBuilder, DomSelectElementBuilder, DomTextAreaElementBuilder, DragManager, DropEffect, EasyGrid, EqDragEvent, GridCellRendererStore, GridColumn, GridColumnAlign, GridColumnList, JUMP_TO, PRE_SELECT, TimePicker, TimeSpanPicker, addCssClass, addElement, browserUtils, createBrowserEvent, dialogs, domel, eqCssMobile, eqCssPrefix, eqDragManager, getDocSize, getElementAbsolutePos, getMobileCssClass, getScrollPos, getViewportSize, getWinSize, hideElement, isVisible, mask, showElement, showTimeSpanPicker, slideDown, slideUp, toggleVisibility, wrapInner };\n","import { utils, i18n, DataType, EasyDataTable, AggregationSettings } from '@easydata/core';\nimport { Widget, WidgetGroup, QueryChangePart, QueryChangeAction, ExprTag, SortDirection, i18n as i18n$1, equtils, eqconsts, ConditionPart, DataKind, Query, Expression, CondTag, EqEditorTag, EqValueEditor, EqServiceProvider, createEqContext } from '@easyquery/core';\nimport { browserUtils, eqDragManager, getElementAbsolutePos, getScrollPos, getWinSize, getViewportSize, domel, DropEffect, createBrowserEvent, DomElementBuilder, DefaultDateTimePicker, slideDown, slideUp, EasyGrid, addCssClass, hideElement, showElement, isVisible, toggleVisibility, addElement, DefaultDialogService } from '@easydata/ui';\n\nfunction findHighestZIndex(elem) {\n    let highest = 0;\n    while (elem !== null) {\n        const zindex = document.defaultView.getComputedStyle(elem, null)\n            .getPropertyValue(\"z-index\");\n        if (zindex != 'auto') {\n            const numZIndex = parseInt(zindex);\n            if (numZIndex > highest) {\n                highest = numZIndex;\n            }\n        }\n        elem = elem.parentElement;\n    }\n    return highest;\n}\n// simetimes setting focus in the main thread doesn't work correctly (in Firefox). So we need to 'hack' it.\nfunction safeFocus(element) {\n    setTimeout((el) => {\n        if (el && el.focus) {\n            el.focus();\n        }\n    }, 100, element);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\nfunction getMobileCssClass() {\n    return browserUtils.isMobileMode() ? eqCssMobile : null;\n}\n\n/**\n * The entities panel wiget, implemented without JQuery.\n */\nclass EntitiesPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-ep';\n    }\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.queryChangedCallbackId = null;\n        this.group = WidgetGroup.Model | WidgetGroup.Query;\n        this.panel = slot;\n    }\n    getWidgetType() {\n        return 'entitiesPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n    }\n    /**\n    * Refresh widget implementation\n    */\n    refreshCore() {\n        this.render();\n        if (this.options.syncWithColumns) {\n            this.refreshCheckedStateByColumns();\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.panel.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.panel.removeChild(this.progressBlock);\n        }\n    }\n    destroyCore() {\n        this.slot.innerHTML = '';\n    }\n    setOptions(options) {\n        this.options = {\n            showToolbar: true,\n            syncWithColumns: false,\n            showSelectAllButton: false,\n            showClearSelectionButton: true,\n            showAddColumnButton: true,\n            showAddConditionButton: true,\n            showCheckboxes: true,\n            showTooltips: true,\n            draggableAttributes: true,\n            showAttributes: { useInConditions: true, useInResult: true, useInSorting: false },\n            showFilterBox: false,\n            filterBoxMode: 0,\n            showIndicatorOnLoad: true,\n            attrPlacement: 0,\n            sortEntities: false,\n            autoClearSelection: true,\n            entityRenderedCallback: null,\n            attributeRenderedCallback: null,\n        };\n        if (options) {\n            utils.assignDeep(this.options, options);\n        }\n        if (this.queryChangedCallbackId) {\n            const query = this.context.getQuery();\n            query.removeChangedCallback(this.queryChangedCallbackId);\n        }\n        if (this.options.syncWithColumns) {\n            const query = this.context.getQuery();\n            this.queryChangedCallbackId = query.addChangedCallback((ev) => {\n                const edata = ev.data;\n                if (!edata || (edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                    return;\n                }\n                this.refreshCheckedStateByColumns();\n            });\n        }\n    }\n    render() {\n        let model = this.context.getModel();\n        this.clear();\n        this.panel.classList.add(`${this.cssPrefix}-panel`);\n        this.panel.classList.add(getMobileCssClass());\n        this.rootEntityBlock = document.createElement('div');\n        if (model != null && !model.isEmpty()) {\n            let entTree = model.getEntitiesTree({\n                addUIC: this.options.showAttributes.useInConditions && !this.options.syncWithColumns,\n                addUIR: this.options.showAttributes.useInResult,\n                addUIS: this.options.showAttributes.useInSorting && !this.options.syncWithColumns,\n                attrPlacement: this.options.attrPlacement,\n                sortEntities: this.options.sortEntities,\n                includeRootData: true\n            });\n            this.entityTreeBlock = this.renderEntity(entTree, this.rootEntityBlock, 0);\n            this.panel.appendChild(this.entityTreeBlock);\n        }\n        if (this.options.showFilterBox) {\n            this.createFilterBox();\n        }\n        else {\n            this.rootEntityBlock.style.top = '0';\n        }\n        if (this.options.showToolbar && !this.options.syncWithColumns) {\n            this.createToolPanel();\n        }\n        else {\n            this.rootEntityBlock.style.bottom = '0';\n        }\n    }\n    renderEntity(entity, block, offset) {\n        let entityBlock;\n        let entityNode = document.createElement('div');\n        entityNode.classList.add(`${this.cssPrefix}-entity-node`);\n        entityNode.classList.add(getMobileCssClass());\n        let entityChildren = document.createElement('div');\n        entityChildren.classList.add(`${this.cssPrefix}-entity-children`);\n        entityChildren.classList.add(getMobileCssClass());\n        let nodeLabel = document.createElement('label');\n        nodeLabel.classList.add(`${this.cssPrefix}-entity-node-label`);\n        let nodeInput = document.createElement('input');\n        nodeInput.type = 'checkbox';\n        nodeInput.title = entity.text;\n        let nodeToggleButton = document.createElement('a');\n        nodeToggleButton.href = 'javascript:void(0)';\n        nodeToggleButton.title = `${i18n.getText(\"EntityToggle\")} ${entity.text}`;\n        nodeToggleButton.classList.add(`${this.cssPrefix}-entity-node-button`);\n        let attrNode, attrLabel, attrInput;\n        let currentOffset = offset;\n        let isAttributeInTree = (attrId, entityBlock) => {\n            let res = entityBlock.querySelectorAll(`.${this.cssPrefix}-entity-attr[data-id=\"${attrId}\"]`);\n            return res.length > 0;\n        };\n        if (block) {\n            entityBlock = block;\n            entityBlock.innerHTML = '';\n        }\n        else {\n            entityBlock = document.createElement('div');\n        }\n        entityBlock.classList.add(`${this.cssPrefix}-entity`);\n        entityBlock.classList.add(getMobileCssClass());\n        if (entity.id && entity.id != \"\") {\n            nodeLabel.innerText = entity.text;\n            entityNode.appendChild(nodeLabel); //caption\n            if (this.options.showCheckboxes) {\n                nodeLabel.insertBefore(nodeInput, nodeLabel.firstChild);\n            }\n            entityNode.insertBefore(nodeToggleButton, entityNode.firstChild);\n            if (this.options.showTooltips && entity.description) {\n                nodeLabel.setAttribute('title', entity.description);\n            }\n            for (let i = 0; i < currentOffset; i++) {\n                let divElem = document.createElement('div');\n                divElem.classList.add(`${this.cssPrefix}-entity-offset`);\n                entityNode.insertBefore(divElem, entityNode.firstChild);\n            }\n            entityBlock.appendChild(entityNode);\n            entityChildren.hidden = true;\n            currentOffset++;\n        }\n        let itemsLength = entity.items ? entity.items.length : 0;\n        for (let i = 0; i < itemsLength; i++) {\n            let item = entity.items[i];\n            if (item.isEntity) {\n                entityChildren.appendChild(this.renderEntity(item, null, currentOffset));\n            }\n            else {\n                if (!item.lookupAttr || !(isAttributeInTree(item.lookupAttr, entityChildren))) {\n                    attrLabel = document.createElement('label');\n                    attrLabel.innerText = item.text;\n                    attrLabel.classList.add(`${this.cssPrefix}-entity-attr-label`);\n                    if (this.options.showCheckboxes) {\n                        attrInput = document.createElement('input');\n                        attrInput.type = 'checkbox';\n                        attrInput.title = item.text;\n                        attrLabel.insertBefore(attrInput, attrLabel.firstChild);\n                        if (this.options.syncWithColumns) {\n                            attrInput.addEventListener('change', (ev) => {\n                                const model = this.context.getModel();\n                                const query = this.context.getQuery();\n                                const checkbox = ev.currentTarget;\n                                const attrId = checkbox.parentElement.parentElement.getAttribute('data-id');\n                                if (model.checkAttrProperty(attrId, \"useInResult\")) {\n                                    if (checkbox.checked) {\n                                        const attr = model.getAttributeById(attrId);\n                                        const column = query.addColumn({\n                                            attribute: attr\n                                        }, true);\n                                        query.fireColumnsChangedEvent(QueryChangeAction.Add, column);\n                                    }\n                                    else {\n                                        const columns = query.getColumns()\n                                            .filter(col => col.expr.tag === ExprTag.EntityAttribute\n                                            && col.expr.value === attrId);\n                                        if (columns.length > 0) {\n                                            query.removeColumn(columns[0]);\n                                            query.fireColumnsChangedEvent(QueryChangeAction.Delete, columns[0]);\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    if (this.options.showTooltips && item.description) {\n                        attrLabel.setAttribute('title', item.description);\n                    }\n                    for (let j = 0; j < currentOffset + 1; j++) {\n                        let divElem = document.createElement('div');\n                        divElem.classList.add(`${this.cssPrefix}-entity-offset`);\n                        attrLabel.insertBefore(divElem, attrLabel.firstChild);\n                    }\n                    attrNode = document.createElement('div');\n                    attrNode.classList.add(`${this.cssPrefix}-entity-attr`);\n                    if (entityNode.innerHTML.length == 0) {\n                        attrNode.classList.add(`${this.cssPrefix}-entity-attr-root`);\n                    }\n                    attrNode.innerHTML = \"\";\n                    attrNode.appendChild(attrLabel);\n                    attrNode.setAttribute('data-id', item.id);\n                    if (this.options.draggableAttributes && !this.options.syncWithColumns) {\n                        eqDragManager.registerDraggableItem({\n                            element: attrNode,\n                            scope: \"entityAttr\",\n                            data: { attrId: item.id },\n                            renderer: (dragImage) => {\n                                dragImage.innerHTML = '';\n                                const attrLabel = document.createElement('span');\n                                attrLabel.innerText = item.text;\n                                dragImage.appendChild(attrLabel);\n                            }\n                        });\n                    }\n                    if (this.options.attributeRenderedCallback) {\n                        this.options.attributeRenderedCallback(attrNode);\n                    }\n                    entityChildren.appendChild(attrNode);\n                }\n            }\n        }\n        if (entityChildren.innerHTML.length) {\n            entityBlock.appendChild(entityChildren);\n            nodeToggleButton.addEventListener('click', (event) => {\n                entityChildren.hidden = !entityChildren.hidden;\n                let element = event.target;\n                let className = `${this.cssPrefix}-entity-node-button-open`;\n                if (element.classList.contains(className)) {\n                    element.classList.remove(className);\n                }\n                else {\n                    element.classList.add(className);\n                }\n                event.preventDefault();\n            });\n        }\n        if (entityChildren) {\n            const checkboxes = entityChildren.querySelectorAll(`.${this.cssPrefix}-entity-attr > label > input`);\n            for (let i = 0; i < checkboxes.length; i++) {\n                const checkbox = checkboxes[i];\n                checkbox.addEventListener('click', (event) => {\n                    let element = event.target;\n                    if (element.checked && !nodeInput.checked) {\n                        nodeInput.checked = true;\n                    }\n                    else if (entityChildren.querySelectorAll('input:checked').length === 0) {\n                        nodeInput.checked = false;\n                    }\n                    event.stopPropagation();\n                });\n            }\n        }\n        nodeInput.addEventListener('click', (event) => {\n            let element = event.target;\n            const entities = entityChildren.querySelectorAll('label input');\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                entity.checked = element.checked;\n            }\n            if (this.options.syncWithColumns) {\n                const query = this.context.getQuery();\n                const model = this.context.getModel();\n                const attrList = [];\n                const attrElems = Array.from(entityChildren.querySelectorAll(`.${this.cssPrefix}-entity-attr`));\n                for (const elem of attrElems) {\n                    const attrId = elem.getAttribute('data-id');\n                    if (model.checkAttrProperty(attrId, 'useInResult')) {\n                        attrList.push(attrId);\n                    }\n                }\n                if (element.checked) {\n                    for (const attrId of attrList) {\n                        query.addColumn({ attributeId: attrId }, true);\n                    }\n                }\n                else {\n                    const columns = query.getColumns()\n                        .filter(col => col.expr.tag === ExprTag.EntityAttribute\n                        && attrList.indexOf(col.expr.value) >= 0);\n                    query.removeColumns(columns, null);\n                }\n                query.fireColumnsChangedEvent();\n            }\n            event.stopPropagation();\n        });\n        if (block != this.rootEntityBlock && this.options.entityRenderedCallback) {\n            this.options.entityRenderedCallback(entityBlock);\n        }\n        return entityBlock;\n    }\n    createFilterBox() {\n        this.filterBoxBlock = document.createElement('div');\n        this.filterBoxBlock.classList.add(`${this.cssPrefix}-filter-box`);\n        this.filterBoxBlock.classList.add(getMobileCssClass());\n        this.filterBoxInput = document.createElement('input');\n        this.filterBoxInput.classList.add(`${this.cssPrefix}-filter-box-input`);\n        this.filterBoxInput.addEventListener('input', (e) => {\n            const attrs = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n            for (let i = 0; i < attrs.length; i++) {\n                const attr = attrs[i];\n                attr.hidden = !this.checkFilterAttribute(attr);\n            }\n            const entities = this.panel.querySelectorAll(`:scope > .${this.cssPrefix}-entity`);\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                let attrs = entity.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let displayAttrCount = 0;\n                for (let i = 0; i < attrs.length; i++) {\n                    if (attrs[i].style.display !== 'None') {\n                        displayAttrCount++;\n                    }\n                }\n                entity.hidden = displayAttrCount === 0;\n            }\n            if (this.filterBoxInput.value === '')\n                this.collapseAll();\n            else\n                this.expandAll();\n        });\n        this.filterBoxBlock.appendChild(this.filterBoxInput);\n        this.panel.insertBefore(this.filterBoxBlock, this.panel.firstChild);\n    }\n    createToolPanel() {\n        let defClass = `${this.cssPrefix}-tool-panel`;\n        let toolPanelBlock = document.createElement('div');\n        toolPanelBlock.classList.add(defClass);\n        toolPanelBlock.classList.add(getMobileCssClass());\n        let toolSelectAll = document.createElement('div');\n        toolSelectAll.classList.add(`${defClass}-select-all`);\n        toolSelectAll.title = 'Select all';\n        let toolDeselectAll = document.createElement('div');\n        toolDeselectAll.classList.add(`${defClass}-deselect-all`);\n        toolDeselectAll.title = 'Clear selection';\n        let toolAddColumns = document.createElement('div');\n        toolAddColumns.classList.add(`${defClass}-add-columns`);\n        toolAddColumns.title = 'Add column';\n        let toolAddCond = document.createElement('div');\n        toolAddCond.classList.add(`${defClass}-add-cond`);\n        toolAddCond.title = 'Add condition';\n        let toolLeftBlock = document.createElement('div');\n        toolLeftBlock.classList.add(`${defClass}-left-side`);\n        let toolRightBlock = document.createElement('div');\n        toolRightBlock.classList.add(`${defClass}-right-side`);\n        let model = this.context.getModel();\n        if (this.options.showSelectAllButton) {\n            toolSelectAll.title = i18n.getText(\"ButtonSelectAll\");\n            toolLeftBlock.appendChild(toolSelectAll);\n            toolSelectAll.addEventListener('click', () => {\n                this.selectAll();\n            });\n        }\n        if (this.options.showClearSelectionButton) {\n            toolDeselectAll.title = i18n.getText(\"ButtonDeselectAll\");\n            toolLeftBlock.appendChild(toolDeselectAll);\n            toolDeselectAll.addEventListener('click', () => {\n                this.deselectAll();\n            });\n        }\n        if (this.options.showAddColumnButton) {\n            toolAddColumns.title = i18n.getText(\"ButtonAddColumns\");\n            toolRightBlock.appendChild(toolAddColumns);\n            toolAddColumns.addEventListener('click', () => {\n                const attrElements = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let attrList = [];\n                let attrId;\n                const query = this.context.getQuery();\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"start\"\n                });\n                for (let i = 0; i < attrElements.length; i++) {\n                    const attrElement = attrElements[i];\n                    let input = attrElement.getElementsByTagName('input')[0];\n                    if (input.checked) {\n                        attrId = attrElement.getAttribute('data-id');\n                        if (model.checkAttrProperty(attrId, \"useInResult\")) {\n                            attrList.push(attrId);\n                        }\n                    }\n                }\n                for (let attrId of attrList) {\n                    const attr = model.getAttributeById(attrId);\n                    query.addColumn({\n                        attribute: attr\n                    }, true);\n                }\n                query.fireChangedEvent();\n                if (this.options.autoClearSelection) {\n                    this.deselectAll();\n                }\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"finish\"\n                });\n            });\n        }\n        if (this.options.showAddConditionButton) {\n            toolAddCond.title = i18n.getText(\"ButtonAddConditions\");\n            toolRightBlock.appendChild(toolAddCond);\n            toolAddCond.addEventListener('click', () => {\n                let attrElements = this.panel.querySelectorAll(`.${this.cssPrefix}-entity-attr`);\n                let attrList = [];\n                let attrId;\n                let query = this.context.getQuery();\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"start\"\n                });\n                for (let i = 0; i < attrElements.length; i++) {\n                    const attrElement = attrElements[i];\n                    let input = attrElement.getElementsByTagName('input')[0];\n                    if (input.checked) {\n                        attrId = attrElement.getAttribute('data-id');\n                        if (model.checkAttrProperty(attrId, \"useInConditions\")) {\n                            attrList.push(attrId);\n                        }\n                    }\n                }\n                for (let attrId of attrList) {\n                    query.addSimpleCondition({\n                        attributeId: attrId\n                    });\n                }\n                query.fireChangedEvent();\n                if (this.options.autoClearSelection) {\n                    this.deselectAll();\n                }\n                query.fireProcessEvent({\n                    source: self,\n                    status: \"finish\"\n                });\n            });\n        }\n        toolPanelBlock.appendChild(toolLeftBlock);\n        toolPanelBlock.appendChild(toolRightBlock);\n        this.panel.appendChild(toolPanelBlock);\n    }\n    checkFilterAttribute(attr) {\n        const inputElem = attr.querySelector('label input');\n        if (inputElem.checked) {\n            return true;\n        }\n        const labelElem = attr.querySelector('label');\n        const attrCaption = labelElem.textContent;\n        if (this.checkFilterText(attrCaption)) {\n            return true;\n        }\n        const entityNode = attr.parentElement.parentElement.querySelector(`.${this.cssPrefix}-entity-node`);\n        const entityCaption = entityNode.querySelector('label').textContent;\n        if (this.checkFilterText(entityCaption)) {\n            return true;\n        }\n        return false;\n    }\n    checkFilterText(value) {\n        let filterText = this.filterBoxInput.value;\n        if (filterText == \"\")\n            return true;\n        if (this.options.filterBoxMode == 0 && value.toLowerCase().indexOf(filterText.toLowerCase()) >= 0)\n            return true;\n        if (this.options.filterBoxMode == 1 && value.toLowerCase().indexOf(filterText.toLowerCase()) == 0)\n            return true;\n        return false;\n    }\n    refreshCheckedStateByColumns() {\n        this.deselectAll();\n        const query = this.context.getQuery();\n        const exprColumns = query.getColumns()\n            .filter(col => col.expr.tag === ExprTag.EntityAttribute);\n        for (const column of exprColumns) {\n            const attrNode = this.rootEntityBlock\n                .querySelector(`.${this.cssPrefix}-entity-attr[data-id=\"${column.expr.value}\"]`);\n            let checkbox = attrNode.querySelector(`label > input`);\n            checkbox.checked = true;\n            let entChildren = attrNode.parentElement;\n            while (entChildren\n                && entChildren.classList\n                    .contains(`${this.cssPrefix}-entity-children`)) {\n                entChildren.hidden = false;\n                const entElem = entChildren.parentElement;\n                if (entElem && entChildren !== entElem.firstElementChild) {\n                    checkbox = entElem.firstElementChild\n                        .querySelector(`label > input`);\n                    checkbox.checked = true;\n                    entChildren = entElem.parentElement;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n    }\n    expandAll() {\n        for (let i = 0; i < this.rootEntityBlock.childNodes.length; i++) {\n            const child = this.rootEntityBlock.childNodes[0];\n            const childs = child.querySelectorAll(`.${this.cssPrefix}-entity-children`);\n            for (let j = 0; j < childs.length; j++) {\n                const elem = childs[j];\n                elem.hidden = false;\n            }\n        }\n        const nodeButtons = this.rootEntityBlock.querySelectorAll(`.${this.cssPrefix}-entity-node-button`);\n        for (let i = 0; i < nodeButtons.length; i++) {\n            const elem = nodeButtons[i];\n            elem.classList.add(`${this.cssPrefix}-entity-node-button-open`);\n        }\n    }\n    collapseAll() {\n        for (let i = 0; i < this.rootEntityBlock.childNodes.length; i++) {\n            const child = this.rootEntityBlock.childNodes[0];\n            const childs = child.querySelectorAll(`.${this.cssPrefix}-entity-children`);\n            for (let j = 0; j < childs.length; j++) {\n                const elem = childs[j];\n                elem.hidden = true;\n            }\n        }\n        const nodeButtons = this.rootEntityBlock.querySelectorAll(`.${this.cssPrefix}-entity-node-button`);\n        for (let i = 0; i < nodeButtons.length; i++) {\n            const elem = nodeButtons[i];\n            elem.classList.remove(`${this.cssPrefix}-entity-node-button-open`);\n        }\n    }\n    selectAll() {\n        const inputs = this.entityTreeBlock.querySelectorAll('input');\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            input.checked = true;\n        }\n    }\n    deselectAll() {\n        const inputs = this.entityTreeBlock.querySelectorAll('input');\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            input.checked = false;\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n    clear() {\n        this.panel.innerHTML = \"\";\n    }\n}\n\nvar ColumnsEditMode;\n(function (ColumnsEditMode) {\n    /**\n     * ReadOnly edit mode allows to view columns but doesn't allow to change them.\n     */\n    ColumnsEditMode[ColumnsEditMode[\"ReadOnly\"] = 0] = \"ReadOnly\";\n    /**\n     * FixedList edit mode allows to edit some columns parameters (formats, sorting) and change their order\n     * but doesn't allow to add or delete columns.\n     */\n    ColumnsEditMode[ColumnsEditMode[\"FixedList\"] = 16] = \"FixedList\";\n    /**\n     * Full edit mode allows to add, delete and change columns in any way.\n     */\n    ColumnsEditMode[ColumnsEditMode[\"Full\"] = 255] = \"Full\";\n})(ColumnsEditMode || (ColumnsEditMode = {}));\nvar ConditionsEditMode;\n(function (ConditionsEditMode) {\n    /**\n     * No edit mode means that conditions are not editable at all.\n     */\n    ConditionsEditMode[ConditionsEditMode[\"Default\"] = 0] = \"Default\";\n    /**\n     * ReadOnly edit mode allows to view conditions but doesn't allow to change them, including the condition type, operator, value, etc.\n     */\n    ConditionsEditMode[ConditionsEditMode[\"ReadOnly\"] = 1] = \"ReadOnly\";\n    /**\n     * FixedList edit mode allows to modify some parameters of conditions (like their operators or values) but doesn't allow to add or delete conditions.\n     */\n    ConditionsEditMode[ConditionsEditMode[\"FixedList\"] = 16] = \"FixedList\";\n    /**\n     * Full edit mode allows to add, delete and change conditions in any way.\n     */\n    ConditionsEditMode[ConditionsEditMode[\"Full\"] = 255] = \"Full\";\n})(ConditionsEditMode || (ConditionsEditMode = {}));\n\nclass MenuLevel {\n    get applyItem() {\n        return this._applyItem;\n    }\n    get cssPrefix() {\n        return 'eqjs-menu';\n    }\n    constructor(options) {\n        this.isFilteringMode = false;\n        this.showSelected = false;\n        //menu, items, levelIndex\n        this.parentMenu = options.menu || null;\n        this.parentLevel = options.parent || null;\n        this.parentElement = options.container || document.body;\n        this.levelIndex = options.levelIndex || 0;\n        this.levelDiv = null;\n        this.domWriteItemsId = options.domWriteItemsId || false;\n        this.menuId = options.menuId || '';\n        this.itemRenderedCallback = options.itemRenderedCallback || null;\n        //we need to define special \"apply\" item for this level\n        this._applyItem = { id: null, text: null, itemDiv: null };\n        this.items = options.items || [];\n        this.activeItem = null;\n        this.selectedItem = null;\n        this.initialized = false;\n        this.showSelected = options.showSelected;\n        this.updated = 0;\n        this.renderContent();\n    }\n    getItems() {\n        return this.items;\n    }\n    setItems(items) {\n        this.items = items;\n    }\n    renderContent() {\n        if (!this.items) {\n            return;\n        }\n        //define internal variables used in this function\n        const itemBgColor = this.parentMenu.style.colors.bgON || \"white\";\n        const itemFgColor = this.parentMenu.style.colors.fgON || \"black\";\n        this.parentMenu.style.colors.bgOVER || \"LightSteelBlue\";\n        const itemFontFamily = this.parentMenu.style.itemStyle.fontFamily || \"\";\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || \"14px\";\n        const multiselect = this.parentMenu.options.multiselect;\n        const isSubQuery = this.parentMenu.options.isSubQuery;\n        //add base DIV element which is also used to show the shadow\n        const baseDivBuilder = domel('div')\n            .addClass(getMobileCssClass());\n        if (this.parentMenu.options.useDefaultStyles) {\n            baseDivBuilder\n                .setStyle('backgroundColor', itemBgColor)\n                .setStyle('border', '1px solid')\n                .setStyle('borderColor', itemBgColor)\n                .setStyle('backgroundColor', this.parentMenu.style.colors.border)\n                .setStyle('margin', '-2px 2px 2px -2px')\n                .setStyle('width', 'auto')\n                .setStyle('height', 'auto');\n        }\n        baseDivBuilder\n            .setStyle('z-index', this.parentMenu.zIndex)\n            .setStyle('position', 'absolute')\n            .setStyle('display', 'none');\n        let baseDiv = baseDivBuilder.toDOM();\n        baseDiv['menuLevel'] = this;\n        const applyItem = this._applyItem;\n        //if multiselect option is on - then we should add special \"apply\" item\n        if (multiselect && this.levelIndex === 0 && this.parentMenu.options.hideButtons !== true) {\n            this.applyDiv = document.createElement(\"div\");\n            this.applyDiv.classList.add(`${this.cssPrefix}-applyDiv`);\n            this.applyDiv['menuItem'] = applyItem;\n            this.applyBtn = document.createElement('button');\n            if (this.parentMenu.options.useDefaultStyles) {\n                this.applyDiv.style.borderBottom = '1px solid';\n                this.applyDiv.style.padding = '5px';\n                this.applyDiv.style.marginBottom = '5px';\n                this.applyBtn.style.padding = '0 5px';\n                this.applyBtn.style.cursor = \"pointer\";\n            }\n            const applyTextNode = document.createTextNode(this.parentMenu.options.buttons.submit);\n            this.applyBtn.appendChild(applyTextNode);\n            this.applyDiv.appendChild(this.applyBtn);\n            //cancel btn\n            const cancelBtn = document.createElement('button');\n            cancelBtn.classList.add(`${this.cssPrefix}-cancel`);\n            if (this.parentMenu.options.useDefaultStyles) {\n                cancelBtn.style.padding = '0 5px';\n                cancelBtn.style.cursor = 'pointer';\n                cancelBtn.style.marginLeft = '15px';\n            }\n            const cancelText = document.createTextNode(this.parentMenu.options.buttons.cancel);\n            cancelBtn.appendChild(cancelText);\n            this.applyDiv.appendChild(cancelBtn);\n            baseDiv.appendChild(this.applyDiv);\n            applyItem.itemDiv = this.applyDiv;\n            this.applyBtn.addEventListener('click', () => {\n                this.submit(this._applyItem);\n            });\n            cancelBtn.addEventListener('click', () => {\n                this.parentMenu.hideMenu();\n            });\n        }\n        // if too many items - then we add a special \"search\" item\n        // or there is an options to show always\n        if (this.parentLevel == null\n            && (this.parentMenu.options.searchBoxAlwaysShown || this.items.length >= this.parentMenu.options.showSearchBoxAfter)) {\n            const searchDivBuilder = domel('div')\n                .addClass(`${this.cssPrefix}-searchDiv`);\n            if (this.parentMenu.options.useDefaultStyles) {\n                searchDivBuilder\n                    .setStyle('border-bottom', '1px solid #666')\n                    .setStyle('background-color', itemBgColor)\n                    .setStyle('border-color', this.parentMenu.style.colors.border);\n                if (itemFontFamily != \"\") {\n                    searchDivBuilder.setStyle('font-family', itemFontFamily);\n                }\n                searchDivBuilder\n                    .setStyle('font-size', itemFontSize)\n                    .setStyle('color', itemFgColor)\n                    .setStyle('cursor', 'pointer')\n                    .setStyle('text-align', 'left')\n                    .setStyle('padding', '5px');\n            }\n            const searchEditBoxBuilder = domel('input')\n                .id('searchBox')\n                .name('searchBox')\n                .type('text')\n                .size(16)\n                .addClass(`${this.cssPrefix}-searchBox`)\n                .on('input', (ev) => {\n                this.deactivateItem(this.activeItem);\n                this.renderItems(this.searchBox.value);\n            })\n                .on('keydown', (ev) => {\n                let keyCode = ev.keyCode;\n                switch (keyCode) {\n                    case 13: //enter\n                        if (this.activeItem) {\n                            this.activeItem.itemDiv.click();\n                        }\n                        break;\n                    case 38: // up\n                        this.moveActiveItemUp();\n                        break;\n                    case 40: // down\n                        this.moveActiveItemDown();\n                        break;\n                    case 39: // right\n                        if (!this.searchBox.value) {\n                            this.openSubLevel(this.activeItem);\n                        }\n                        break;\n                }\n            });\n            if (this.parentMenu.options.useDefaultStyles) {\n                searchEditBoxBuilder\n                    .setStyle('font-family', 'monospace')\n                    .setStyle('font-size', '8pt')\n                    .setStyle('width', '100%');\n            }\n            if (isSubQuery) {\n                searchEditBoxBuilder.addClass('eqjs-dialog');\n            }\n            this.searchBox = searchEditBoxBuilder.toDOM();\n            this.searchDiv = searchDivBuilder.toDOM();\n            this.searchDiv.appendChild(this.searchBox);\n            baseDiv.appendChild(this.searchDiv);\n        }\n        const scrollDiv = document.createElement(\"div\");\n        scrollDiv.tabIndex = 1;\n        domel(scrollDiv)\n            .addClass(`${this.cssPrefix}-scrollDiv`)\n            .addClass(getMobileCssClass());\n        scrollDiv.style.overflowX = \"hidden\";\n        scrollDiv.style.overflowY = \"auto\";\n        scrollDiv.style.position = \"relative\";\n        baseDiv.appendChild(scrollDiv);\n        this.levelDiv = baseDiv;\n        this.scrollDiv = scrollDiv;\n        if (this.menuId) {\n            this.levelDiv.id = this.menuId;\n        }\n        if (this.parentLevel) {\n            this.levelDiv.style.zIndex\n                = this.parentLevel.levelDiv.style.zIndex;\n        }\n        this.renderItems();\n        const scrollDivKeyDownHandler = (event) => {\n            switch (event.which) {\n                case 13: // enter\n                    if (this.parentMenu.options.multiselect) {\n                        this.parentMenu.getRootLevel().applyBtn.click();\n                    }\n                    else {\n                        if (this.activeItem) {\n                            this.activeItem.itemDiv.click();\n                        }\n                    }\n                    break;\n                case 32: // space\n                    if (this.activeItem) {\n                        this.activeItem.itemDiv.click();\n                    }\n                    break;\n                case 37: // left\n                    if (this.parentLevel && !this.isFilteringMode) {\n                        this.deactivateItem(this.activeItem);\n                        this.parentLevel.focus();\n                    }\n                    break;\n                case 39: // right\n                    this.openSubLevel(this.activeItem);\n                    break;\n                case 38: // up\n                    this.moveActiveItemUp();\n                    break;\n                case 40: // down\n                    this.moveActiveItemDown();\n                    break;\n                default: return; // exit this handler for other keys\n            }\n            event.preventDefault(); // prevent the default action (scroll / move caret)            \n        };\n        scrollDiv.addEventListener(\"keydown\", scrollDivKeyDownHandler);\n        if (browserUtils.isMobileMode()) {\n            this.closeDiv =\n                domel('div', baseDiv)\n                    .addClass('eqjs-menu-close-btn')\n                    .addText(i18n.getText('ButtonClose'))\n                    .on('click', () => {\n                    this.parentMenu.hideMenu();\n                })\n                    .toDOM();\n        }\n    }\n    moveActiveItemDown() {\n        const items = this.isFilteringMode ? this.filteredItems : this.items;\n        if (this.activeItem) {\n            const idx = items.indexOf(this.activeItem);\n            if (idx < items.length - 1) {\n                this.activateItem(items[idx + 1], false);\n            }\n        }\n        else {\n            this.activateItem(items[0], false);\n        }\n    }\n    moveActiveItemUp() {\n        const items = this.isFilteringMode ? this.filteredItems : this.items;\n        if (this.activeItem) {\n            const idx = items.indexOf(this.activeItem);\n            if (idx > 0) {\n                this.activateItem(items[idx - 1], false);\n            }\n        }\n        else {\n            this.activateItem(items[items.length - 1], false);\n        }\n    }\n    openSubLevel(menuItem) {\n        if (menuItem && menuItem.items && !this.isFilteringMode) {\n            this.showSubLevel(menuItem);\n            menuItem.subLevel.activateItem(menuItem.subLevel.items[0]);\n        }\n    }\n    focusScrollDiv() {\n        this.scrollDiv.focus();\n    }\n    turnCheckboxes(items) {\n        //turn checkboxes on for selected items\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.itemCheckbox)\n                item.itemCheckbox.checked = this.isItemSelected(item);\n            if (item.items) {\n                this.turnCheckboxes(item.items);\n            }\n        }\n    }\n    isItemSelected(item) {\n        if (item.items) {\n            for (var i = 0; i < item.items.length; i++) {\n                if (this.isItemSelected(item.items[i])) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return item.selected;\n        }\n    }\n    setItemSelected(item, value) {\n        if (item.items) {\n            for (let i = 0; i < item.items.length; i++) {\n                this.setItemSelected(item.items[i], value);\n            }\n        }\n        else {\n            item.selected = value;\n        }\n    }\n    submitItems(items, selectedItems) {\n        for (let j = 0; j < items.length; j++) {\n            if (items[j].items) {\n                this.submitItems(items[j].items, selectedItems);\n            }\n            else {\n                if (items[j].selected) {\n                    selectedItems.push(items[j]);\n                }\n            }\n        }\n    }\n    allSubitemsAreFiltered(items, filterCallback) {\n        for (let i = 0; i < items.length; i++) {\n            if (filterCallback(items[i]))\n                return false;\n        }\n        return true;\n    }\n    isItemDiv(element) {\n        return element['menuItem'] ? true : false;\n    }\n    isLevelDiv(element) {\n        return element['menuLevel'] ? true : false;\n    }\n    getMenuItem(element) {\n        let el = element;\n        while (!this.isItemDiv(el)) {\n            if (this.isLevelDiv(el)) {\n                throw \"Can't get menu item\";\n            }\n            el = el.parentElement;\n        }\n        return el['menuItem'];\n    }\n    renderItemsWithoutFilter() {\n        this.isFilteringMode = false;\n        const scrollDiv = this.scrollDiv;\n        const multiselect = this.parentMenu.options.multiselect;\n        const activateOnMouseOver = this.parentMenu.options.activateOnMouseOver;\n        const itemFgColor = this.parentMenu.style.colors.fgON || 'black';\n        this.parentMenu.style.colors.bgOVER || 'LightSteelBlue';\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || '14px';\n        const itemFilterCallback = this.parentMenu.getItemFilterCallback();\n        scrollDiv.innerHTML = \"\";\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (!item || !item.text)\n                continue;\n            if (itemFilterCallback) {\n                if (!itemFilterCallback(item))\n                    continue;\n                if (item.items && this.allSubitemsAreFiltered(item.items, itemFilterCallback))\n                    continue;\n            }\n            item.data = (propName) => {\n                return this[propName];\n            };\n            if (typeof (item.selected) == \"undefined\") {\n                item.selected = false;\n            }\n            if (item.selected && this.selectedItem == null) {\n                this.selectedItem = item;\n            }\n            const itemDiv = document.createElement(\"div\");\n            domel(itemDiv)\n                .addClass(`${this.cssPrefix}-itemDiv`)\n                .addClass(getMobileCssClass());\n            if (item.selected && this.showSelected && !multiselect) {\n                itemDiv.classList.add(`${this.cssPrefix}-selected`);\n            }\n            if (this.domWriteItemsId && this.menuId) {\n                itemDiv.id = 'item-' + this.menuId + '-' + item.id;\n            }\n            scrollDiv.appendChild(itemDiv);\n            itemDiv['menuItem'] = item;\n            itemDiv['menuLevel'] = this;\n            item.itemDiv = itemDiv;\n            if (this.parentMenu.options.useDefaultStyles) {\n                itemDiv.style.fontSize = itemFontSize;\n                itemDiv.style.color = itemFgColor;\n                itemDiv.style.paddingLeft = \"15px\";\n                itemDiv.style.paddingRight = \"6px\";\n                itemDiv.style.cursor = \"pointer\";\n            }\n            if (item.text == '---') {\n                itemDiv.appendChild(document.createElement('hr'));\n            }\n            else {\n                if (multiselect) {\n                    var cb = document.createElement(\"input\");\n                    cb.type = \"checkbox\";\n                    cb.id = \"cb\" + item.id;\n                    cb.checked = this.isItemSelected(item);\n                    cb.defaultChecked = this.isItemSelected(item);\n                    itemDiv.appendChild(cb);\n                    item.itemCheckbox = cb;\n                    if (this.parentMenu.options.useDefaultStyles) {\n                        cb.style.margin = \"4px 10px 0 0\";\n                        cb.style.verticalAlign = \"top\";\n                    }\n                }\n                let itemText = item.text;\n                if (this.parentMenu.options.showItemIds) {\n                    itemText = item.id + ':' + itemText;\n                }\n                const itemTextNode = document.createTextNode(itemText);\n                itemDiv.appendChild(itemTextNode);\n                if (item.items && item.items.length > 0) {\n                    itemDiv.classList.add(`${this.cssPrefix}-itemDiv-hasChildren`);\n                    const arrowSpan = document.createElement('span');\n                    arrowSpan.classList.add(`${this.cssPrefix}-itemDiv-arrow`);\n                    itemDiv.appendChild(arrowSpan);\n                    const arrowText = document.createTextNode('>');\n                    arrowSpan.appendChild(arrowText);\n                }\n                const itemClickHandler = (ev) => {\n                    const menuItem = this.getMenuItem(ev.target);\n                    if (multiselect) {\n                        if (!menuItem.items || ev.target == menuItem.itemCheckbox) {\n                            const itemSelected = this.isItemSelected(menuItem);\n                            this.setItemSelected(menuItem, !itemSelected);\n                            menuItem.itemCheckbox.checked = !itemSelected;\n                            this.parentMenu.refreshCheckboxes();\n                        }\n                        else {\n                            this.activateItem(menuItem);\n                        }\n                    }\n                    else {\n                        this.activateItem(menuItem);\n                        this.submit(menuItem);\n                    }\n                    return false;\n                };\n                itemDiv.removeEventListener(\"click\", itemClickHandler);\n                itemDiv.addEventListener('click', itemClickHandler);\n                itemDiv.addEventListener('mouseenter', (ev) => {\n                    const item = this.getMenuItem(ev.target);\n                    this.parentMenu.isCursorInside = true;\n                    if (activateOnMouseOver) {\n                        this.activateItem(item);\n                    }\n                });\n                itemDiv.addEventListener('mouseleave', (ev) => {\n                    const item = this.getMenuItem(ev.target);\n                    this.parentMenu.isCursorInside = false;\n                    setTimeout(() => {\n                        if (!this.parentMenu.isCursorInside) {\n                            if (activateOnMouseOver && item == this.activeItem && !item.subLevel) {\n                                this.deactivateItem(item);\n                            }\n                        }\n                    }, 200);\n                });\n            }\n            if (this.itemRenderedCallback) {\n                this.itemRenderedCallback(this.menuId, itemDiv);\n            }\n        }\n    }\n    renderItemsWithFilter(filter) {\n        this.isFilteringMode = true;\n        const scrollDiv = this.scrollDiv;\n        scrollDiv.innerHTML = \"\";\n        const filterSections = filter.split('>');\n        const pureFilterTexts = filterSections.map(section => section.replace(/\\*/g, ''));\n        const items = this.filterItems(this.items, filterSections);\n        this.filteredItems = [];\n        for (let i = 0; i < items.length; i++) {\n            this.renderItemWithFilter(items[i], pureFilterTexts, 0);\n        }\n    }\n    matchesFilter(text, regexp) {\n        if (text && regexp) {\n            return regexp.test(text);\n        }\n        else {\n            return true;\n        }\n    }\n    filterItems(items, filterSections) {\n        const resultItems = [];\n        const filter = filterSections.length > 0 ? filterSections[0] : '';\n        const restFilterSections = filterSections.length > 1 ? filterSections.slice(1) : filterSections;\n        const filterRegexp = filter ? new RegExp(filter.replace(/\\*/g, '.+?'), 'i') : null;\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            if (item.items) {\n                const groupItem = utils.assign({}, item);\n                const groupItemMatches = this.matchesFilter(item.text, filterRegexp);\n                //if we have only one filter section (or an empty filter)\n                if (filterSections.length < 2) {\n                    //if current group item matches the filter -> show all sub-items\n                    if (groupItemMatches && filterSections.length < 2) {\n                        groupItem.items = utils.createArrayFrom(item.items);\n                    }\n                    else {\n                        groupItem.items = this.filterItems(item.items, restFilterSections);\n                    }\n                }\n                //if we have more than 1 filter section and there is a match -> filter sub-items as well\n                else if (groupItemMatches) {\n                    groupItem.items = this.filterItems(item.items, restFilterSections);\n                }\n                //otherwise we skip this group at all\n                else {\n                    groupItem.items = [];\n                }\n                if (groupItem.items.length > 0) {\n                    resultItems.push(groupItem);\n                }\n            }\n            else {\n                if (this.matchesFilter(item.text, filterRegexp)) {\n                    resultItems.push(item);\n                }\n            }\n        }\n        return resultItems;\n    }\n    renderItemWithFilter(item, filterTexts, level) {\n        const scrollDiv = this.scrollDiv;\n        const levelFilterText = level < filterTexts.length ? filterTexts[level] : filterTexts[filterTexts.length - 1];\n        const multiselect = this.parentMenu.options.multiselect;\n        const activateOnMouseOver = this.parentMenu.options.activateOnMouseOver;\n        const itemFgColor = this.parentMenu.style.colors.fgON || 'black';\n        this.parentMenu.style.colors.bgOVER || 'LightSteelBlue';\n        const itemFontSize = this.parentMenu.style.itemStyle.fontSize || '14px';\n        const itemFilterCallback = this.parentMenu.getItemFilterCallback();\n        if (!item || !item.text)\n            return;\n        if (itemFilterCallback) {\n            if (!itemFilterCallback(item))\n                return;\n            if (item.items && this.allSubitemsAreFiltered(item.items, itemFilterCallback))\n                return;\n        }\n        item.data = function (propName) {\n            return this[propName];\n        };\n        if (typeof (item.selected) == \"undefined\") {\n            item.selected = false;\n        }\n        if (item.selected && this.selectedItem == null) {\n            this.selectedItem = item;\n        }\n        const itemDiv = document.createElement(\"div\");\n        domel(itemDiv)\n            .addClass(`${this.cssPrefix}-itemDiv`)\n            .addClass(getMobileCssClass());\n        itemDiv.style.marginLeft = `${level * 10}px`;\n        if (item.selected && !multiselect) {\n            itemDiv.classList.add(`${this.cssPrefix}-selected`);\n        }\n        if (this.domWriteItemsId && this.menuId) {\n            itemDiv.id = 'item-' + this.menuId + '-' + item.id;\n        }\n        scrollDiv.appendChild(itemDiv);\n        itemDiv['menuItem'] = item;\n        itemDiv['menuLevel'] = this;\n        item.itemDiv = itemDiv;\n        if (this.parentMenu.options.useDefaultStyles) {\n            itemDiv.style.fontSize = itemFontSize;\n            itemDiv.style.color = itemFgColor;\n            itemDiv.style.paddingLeft = \"15px\";\n            itemDiv.style.paddingRight = \"6px\";\n            itemDiv.style.cursor = \"pointer\";\n        }\n        if (item.text == '---') {\n            itemDiv.appendChild(document.createElement('hr'));\n        }\n        else {\n            if (multiselect) {\n                var cb = document.createElement(\"input\");\n                cb.type = \"checkbox\";\n                cb.id = \"cb\" + item.id;\n                cb.checked = this.isItemSelected(item);\n                cb.defaultChecked = this.isItemSelected(item);\n                itemDiv.appendChild(cb);\n                item.itemCheckbox = cb;\n                if (this.parentMenu.options.useDefaultStyles) {\n                    cb.style.margin = \"4px 10px 0 0\";\n                    cb.style.verticalAlign = \"top\";\n                }\n            }\n            const itemText = document.createElement('span');\n            itemText.innerHTML = this.highlightText(item.text, levelFilterText);\n            itemDiv.appendChild(itemText);\n            if (item.items && item.items.length > 0) {\n                itemDiv.classList.add(`${this.cssPrefix}-itemDiv-filter-hasChildren`);\n            }\n            else {\n                this.filteredItems.push(item);\n                const itemClickHandler = (event) => {\n                    if (multiselect) {\n                        if (!item.items || event.target == item.itemCheckbox) {\n                            const itemSelected = this.isItemSelected(item);\n                            this.setItemSelected(item, !itemSelected);\n                            item.itemCheckbox.checked = !itemSelected;\n                            this.parentMenu.refreshCheckboxes();\n                        }\n                        else {\n                            this.activateItem(item);\n                        }\n                    }\n                    else {\n                        this.activateItem(item);\n                        this.submit(item);\n                    }\n                    return false;\n                };\n                itemDiv.removeEventListener(\"click\", itemClickHandler);\n                itemDiv.addEventListener('click', itemClickHandler);\n                itemDiv.addEventListener('mouseenter', (ev) => {\n                    this.parentMenu.isCursorInside = true;\n                    if (activateOnMouseOver) {\n                        this.activateItem(item);\n                    }\n                });\n                itemDiv.addEventListener('mouseleave', (ev) => {\n                    this.parentMenu.isCursorInside = false;\n                    setTimeout(() => {\n                        if (!this.parentMenu.isCursorInside) {\n                            if (activateOnMouseOver && item == this.activeItem && !item.subLevel) {\n                                this.deactivateItem(item);\n                            }\n                        }\n                    }, 200);\n                });\n            }\n        }\n        if (item.items) {\n            for (let i = 0; i < item.items.length; i++) {\n                this.renderItemWithFilter(item.items[i], filterTexts, level + 1);\n            }\n        }\n        if (this.itemRenderedCallback) {\n            this.itemRenderedCallback(this.menuId, itemDiv);\n        }\n    }\n    highlightText(content, text) {\n        if (text && text.length > 0) {\n            const lowerText = text.toLowerCase();\n            const lowerContent = content.toLowerCase();\n            const insertValue1 = `<span class='eqjs-menu-itemDiv-highlight'>`;\n            const insertValue2 = `</span>`;\n            const startIndex = lowerContent.indexOf(lowerText);\n            if (startIndex >= 0) {\n                let pos = 0;\n                const value = content;\n                const indexInMas = [];\n                while (true) {\n                    const index = lowerContent.indexOf(lowerText, pos);\n                    if (index >= 0) {\n                        indexInMas.push(index);\n                        pos = index + text.length;\n                    }\n                    else {\n                        pos++;\n                    }\n                    if (pos >= value.length - 1) {\n                        break;\n                    }\n                }\n                if (indexInMas.length > 0) {\n                    content = '';\n                    for (let i = 0; i < indexInMas.length; i++) {\n                        if (i === 0) {\n                            content += value.substring(0, indexInMas[i]);\n                        }\n                        content += insertValue1 + value.substring(indexInMas[i], indexInMas[i] + text.length) + insertValue2;\n                        if (i < indexInMas.length - 1) {\n                            content += value.substring(indexInMas[i] + text.length, indexInMas[i + 1]);\n                        }\n                        else {\n                            content += value.substring(indexInMas[i] + text.length);\n                        }\n                    }\n                }\n            }\n        }\n        return content;\n    }\n    renderItems(filter) {\n        if (!filter && !browserUtils.isMobileMode()) {\n            this.renderItemsWithoutFilter();\n        }\n        else {\n            filter = filter || '';\n            this.renderItemsWithFilter(filter.toLowerCase());\n        }\n    }\n    activateItem(menuItem, openSubLevel = true) {\n        if (this.activeItem != null) {\n            this.deactivateItem(this.activeItem);\n        }\n        this.activeItem = menuItem;\n        const rowElement = menuItem.itemDiv;\n        rowElement.classList.add('active');\n        if (this.parentMenu.options.useDefaultStyles) {\n            this.parentMenu.style.colors.bgON;\n            this.parentMenu.style.colors.fgON;\n            const itemOverBgColor = this.parentMenu.style.colors.bgOVER;\n            const itemOverFgColor = this.parentMenu.style.colors.fgOVER || \"\";\n            this.parentMenu.style.itemClass || \"\";\n            const itemClassOver = this.parentMenu.style.itemClassOver || \"\";\n            if (itemClassOver != \"\") {\n                rowElement.style.backgroundColor = \"\";\n                rowElement.style.color = \"\";\n            }\n            else {\n                rowElement.style.backgroundColor = itemOverBgColor;\n                rowElement.style.color = itemOverFgColor;\n            }\n        }\n        if (menuItem.items && !this.isFilteringMode && openSubLevel) {\n            this.showSubLevel(menuItem);\n        }\n    }\n    deactivateItem(menuItem) {\n        if (!menuItem)\n            return;\n        const rowElement = menuItem.itemDiv;\n        rowElement.classList.remove('active');\n        if (this.parentMenu.options.useDefaultStyles) {\n            const itemBgColor = this.parentMenu.style.colors.bgON;\n            const itemFgColor = this.parentMenu.style.colors.fgON;\n            const itemClass = this.parentMenu.style.itemClass || \"\";\n            if (itemClass != \"\") {\n                rowElement.style.backgroundColor = \"\";\n                rowElement.style.color = \"\";\n            }\n            else {\n                rowElement.style.backgroundColor = itemBgColor;\n                rowElement.style.color = itemFgColor;\n            }\n        }\n        if (menuItem.subLevel) {\n            menuItem.subLevel.hide();\n        }\n        this.activeItem = null;\n    }\n    showSubLevel(menuItem) {\n        if (!menuItem.subLevel) {\n            let levelId = '';\n            if (this.menuId) {\n                levelId = this.menuId + \"-\" + menuItem.id;\n            }\n            menuItem.subLevel = new MenuLevel({\n                showSelected: this.showSelected,\n                menu: this.parentMenu,\n                parent: this,\n                container: this.parentElement,\n                items: menuItem.items,\n                levelIndex: this.levelIndex + 1,\n                domWriteItemsId: this.domWriteItemsId,\n                menuId: levelId,\n                itemRenderedCallback: this.itemRenderedCallback\n            });\n        }\n        const pos = getElementAbsolutePos(menuItem.itemDiv);\n        menuItem.itemDiv.getBoundingClientRect();\n        const scroll = getScrollPos();\n        const winSize = getWinSize();\n        //show menu to the side that have more space available\n        const leftSpace = pos.x - scroll.left;\n        const rightSpace = winSize.width - leftSpace - menuItem.itemDiv.offsetWidth;\n        pos.x += menuItem.itemDiv.offsetParent.offsetWidth;\n        pos.y -= 5;\n        menuItem.subLevel.showAt(pos.x, pos.y, true, true);\n        menuItem.subLevel.levelDiv.style.width = '';\n        menuItem.subLevel.levelDiv.style.right = '';\n        if ((rightSpace >= menuItem.subLevel.levelDiv.offsetWidth) || (rightSpace >= leftSpace)) { //show level to the right\n            if (rightSpace < menuItem.subLevel.levelDiv.offsetWidth) {\n                menuItem.subLevel.levelDiv.style.right = -scroll.left + 'px';\n            }\n        }\n        else { //show level to the left\n            if (leftSpace < menuItem.subLevel.levelDiv.offsetWidth) {\n                menuItem.subLevel.levelDiv.style.left = scroll.left + 4 + 'px';\n            }\n            else {\n                menuItem.subLevel.levelDiv.style.left = '';\n            }\n            menuItem.subLevel.levelDiv.style.right = getViewportSize().width - pos.x + menuItem.itemDiv.offsetWidth - 6 + 'px';\n        }\n        menuItem.subLevel.levelDiv.style.visibility = 'visible';\n        menuItem.subLevel.focus();\n    }\n    adjustTopPos(top) {\n        const winSize = getWinSize();\n        const levelBottom = top - getScrollPos().top + this.levelDiv.offsetHeight;\n        let res = top;\n        if (levelBottom > winSize.height - 5) {\n            res -= levelBottom - winSize.height + 5;\n            if (res < getScrollPos().top) {\n                res = getScrollPos().top + 10;\n            }\n        }\n        return res;\n    }\n    showAt(x, y, adjustTopPos, hidden, anchor) {\n        if (!this.items) {\n            return;\n        }\n        this.initLevelDiv();\n        //crocodile\n        this.turnCheckboxes(this.items);\n        this.renderItems();\n        getWinSize();\n        const levelStyle = this.levelDiv.style;\n        if (hidden) {\n            this.levelDiv.style.visibility = 'hidden';\n        }\n        levelStyle.display = 'block';\n        levelStyle.left = x + 'px';\n        levelStyle.top = y + 'px';\n        this.scrollDiv.style.width = \"auto\";\n        this.scrollDiv.style.height = \"auto\";\n        this.scrollDiv.style.maxHeight = null;\n        const useMaxSpace = this.parentMenu.options.useMaxSpace;\n        const viewportHeight = getViewportSize().height;\n        const anchorRect = anchor ? anchor.getBoundingClientRect() : null;\n        const anchorHeight = anchorRect ? anchorRect.height : 0;\n        const upperSpace = y - scrollY;\n        const lowerSpace = viewportHeight - upperSpace - anchorHeight;\n        const minOffset = 15;\n        // Рахуємо початковий контейнер\n        let levelDivRect = this.levelDiv.getBoundingClientRect();\n        if (this.levelIndex == 0 && levelDivRect.height < lowerSpace - minOffset) { //root level. Have enough space to drop down without scroll\n            levelStyle.top = (y + anchorHeight) + 'px';\n        }\n        else if (this.levelIndex == 0 && levelDivRect.height < upperSpace - minOffset) { //root level. Have enough space to drop up without scroll\n            levelStyle.top = (y - levelDivRect.height) + 'px';\n        }\n        else if (useMaxSpace || this.levelIndex > 0) { //sub-level or useMaxSpace option set. Use all the space\n            const outsideBottom = levelDivRect.bottom + minOffset - scrollY - viewportHeight;\n            if (outsideBottom > 0) {\n                levelStyle.top = levelDivRect.top - outsideBottom + 'px';\n            }\n            levelDivRect = this.levelDiv.getBoundingClientRect();\n            const outsideTop = scrollY + minOffset - levelDivRect.top;\n            if (outsideTop > 0) {\n                const scrollDivRect = this.scrollDiv.getBoundingClientRect();\n                this.scrollDiv.style.maxHeight = scrollDivRect.height - outsideTop + 'px';\n                levelStyle.top = levelDivRect.top + outsideTop + 'px';\n            }\n        }\n        else if (upperSpace <= lowerSpace) { //root level. Drop down with scroll\n            levelStyle.top = (y + anchorHeight) + 'px';\n            const outsideBottom = levelDivRect.height + minOffset - lowerSpace;\n            if (outsideBottom > 0) {\n                const scrollDivRect = this.scrollDiv.getBoundingClientRect();\n                this.scrollDiv.style.maxHeight = scrollDivRect.height - outsideBottom + 'px';\n            }\n        }\n        else { //root level. Drop up with scroll\n            y -= levelDivRect.height;\n            const outsideTop = scrollY + minOffset - y;\n            if (outsideTop > 0) {\n                const scrollDivRect = this.scrollDiv.getBoundingClientRect();\n                this.scrollDiv.style.maxHeight = scrollDivRect.height - outsideTop + 'px';\n                y += outsideTop;\n            }\n            levelStyle.top = y + 'px';\n        }\n        //setting minimal level width if it is defined\n        let minItemWidth = this.parentMenu.minItemWidth;\n        if (minItemWidth > 0 && this.scrollDiv.offsetWidth < minItemWidth) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].itemDiv.style.width = minItemWidth + \"px\";\n            }\n        }\n        let maxItemWidth = this.parentMenu.maxItemWidth;\n        if (maxItemWidth > 0 && this.scrollDiv.offsetWidth > maxItemWidth) {\n            for (let i = 0; i < this.items.length; i++) {\n                this.items[i].itemDiv.style.width = maxItemWidth + \"px\";\n                this.items[i].itemDiv.style.overflowX = \"hidden\";\n            }\n        }\n        this.activeItem = null;\n    }\n    focus() {\n        window.setTimeout(() => {\n            this.scrollDiv.focus();\n            if (this.searchBox != null) {\n                if (this.parentMenu.options.searchBoxAutoFocus) {\n                    this.searchBox.focus();\n                }\n                this.searchBox.value = \"\";\n            }\n        }, 100);\n    }\n    hide() {\n        if (this.activeItem !== null) {\n            if (this.activeItem.subLevel) {\n                this.activeItem.subLevel.hide();\n            }\n        }\n        if (this.levelDiv) {\n            var levelStyle = this.levelDiv.style;\n            levelStyle.display = 'none';\n            if (this.initialized) {\n                this.parentElement.removeChild(this.levelDiv);\n                this.initialized = false;\n            }\n        }\n    }\n    initLevelDiv() {\n        if (!this.initialized) {\n            this.parentElement.appendChild(this.levelDiv);\n            domel(this.levelDiv)\n                .addClass(`${this.cssPrefix}-levelDiv`)\n                .addClass(getMobileCssClass());\n            this.initialized = true;\n        }\n    }\n    submit(menuItem) {\n        if (menuItem != null) {\n            if (!menuItem.items) {\n                this.parentMenu.hideMenu();\n                let selectedItems = [];\n                if (menuItem == this._applyItem) {\n                    this.submitItems(this.items, selectedItems);\n                }\n                this.parentMenu.submitMenu(menuItem, selectedItems);\n            }\n        }\n    }\n    remove() {\n        //remove old level elements\n        for (let i = 0; i < this.items.length; i++) {\n            let item = this.items[i];\n            if (item.subLevel) {\n                item.subLevel.remove();\n            }\n        }\n        if (this.levelDiv) {\n            this.levelDiv.innerHTML = \"\";\n            const parentNode = this.levelDiv.parentNode;\n            if (parentNode != null) {\n                parentNode.removeChild(this.levelDiv);\n            }\n        }\n        this.levelDiv = null;\n    }\n    update(newItems) {\n        this.remove();\n        //create new level\n        this.items = newItems;\n        this.activeItem = null;\n        this.selectedItem = null;\n        this._applyItem.itemDiv = null;\n        this.initialized = false;\n        this.updated++;\n        this.renderContent();\n    }\n    refreshCheckboxes() {\n        for (var i = 0; i < this.items.length; i++) {\n            var item = this.items[i];\n            if (item.itemCheckbox) {\n                item.itemCheckbox.checked = this.isItemSelected(item);\n            }\n            if (item.subLevel) {\n                item.subLevel.refreshCheckboxes();\n            }\n        }\n    }\n    refreshItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (item.itemDiv) {\n                if (item.hidden) {\n                    item.itemDiv.style.display = \"none\";\n                }\n                else {\n                    item.itemDiv.style.display = \"block\";\n                }\n            }\n            if (item.subLevel) {\n                item.subLevel.refreshItems();\n            }\n        }\n    }\n    findItem(searchedText) {\n        const txt = searchedText.toLowerCase();\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            if (item.text.toLowerCase().indexOf(txt) == 0) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\nclass PopupMenu {\n    get cssPrefix() {\n        return 'eqjs-menu';\n    }\n    constructor(options) {\n        this.isCursorInside = false;\n        this.mouseIsOverBlock = false;\n        this.mouseIsOverLink = false;\n        this.toId = null;\n        this.active = false;\n        this.ancorFocused = null;\n        this.options = {\n            items: [],\n            buttons: {\n                submit: i18n.getText('ButtonApply'),\n                cancel: i18n.getText('ButtonCancel')\n            },\n            itemFilterCallback: null,\n            useDefaultStyles: false,\n            multiselect: false,\n            adjustHeight: true,\n            showSearchBoxAfter: 30,\n            activateOnMouseOver: true,\n            container: document.body,\n            domWriteItemsId: false,\n            itemRenderedCallback: null,\n            showItemIds: false,\n            useMaxSpace: true,\n        };\n        if (options) {\n            utils.assign(this.options, options);\n            utils.assign(this.options.buttons, options.buttons);\n        }\n        if (this.options.hideButtons) {\n            this.options.submitOnBlur = true;\n        }\n        this.menuId = PopupMenu.lastMenuID++;\n        this.updateProps();\n        this.rootLevel = new MenuLevel({\n            menu: this,\n            items: this.options.items,\n            levelIndex: 0,\n            container: this.options.container,\n            domWriteItemsId: this.options.domWriteItemsId,\n            menuId: this.options.id,\n            itemRenderedCallback: this.options.itemRenderedCallback,\n            showSelected: this.options.showSelected,\n        });\n        this.rootLevel.levelDiv.classList.add(`${this.cssPrefix}-rootLevel`);\n        if (this.options.zIndex)\n            this.rootLevel.levelDiv.style.zIndex = `${this.options.zIndex}`;\n        this.menuKeyUpHandler = (e) => {\n            if (e.which == 27) {\n                this.hideMenu();\n                e.stopImmediatePropagation();\n            }\n        };\n        this.globalMouseDownHandler = (e) => {\n            if (!this.active)\n                return true;\n            let event = window.event || e;\n            let o = event.srcElement || event.target;\n            let isOutside = true;\n            while (o) {\n                if (o.tagName && o.tagName.toLowerCase() == 'div') {\n                    // it is added in renderContent of MenuLevel class\n                    if (o.menuLevel) {\n                        if (o.menuLevel.parentMenu == this) {\n                            isOutside = false;\n                            break;\n                        }\n                    }\n                }\n                o = o.parentNode || o.parentElement;\n            }\n            if (isOutside) {\n                if (this.options.submitOnBlur) {\n                    this.rootLevel.submit(this.rootLevel.applyItem);\n                }\n                this.hideMenu();\n            }\n            return true;\n        };\n        this.render();\n    }\n    getItems() {\n        return this.rootLevel.getItems();\n    }\n    updateProps() {\n        this.style = {};\n        this.style.colors = { border: \"#666666\", shadow: \"#888888\", bgON: \"white\", fgON: \"black\", bgOVER: \"#B6BDD2\", fgOVER: \"black\" };\n        this.style.itemStyle = { fontSize: \"14px\" };\n        this.minItemWidth = 0;\n        this.maxItemWidth = 0;\n        this.maxHeight = 0;\n        this.zIndex = `${this.options.zIndex}`;\n        this.commandTemplate = \"\";\n        this.args = [];\n        this.active = false;\n    }\n    render() {\n    }\n    clearItemsMenuProps(items) {\n        if (!items)\n            return;\n        for (var i = 0; i < items.length; i++) {\n            this.clearItemMenuProps(items[i]);\n        }\n    }\n    clearItemMenuProps(item) {\n        //don't clear properties they belong this menu\n        if (item.subLevel && item.subLevel.parentMenu == this)\n            return;\n        if (item.subLevel) {\n            item.subLevel.remove();\n            item.subLevel = null;\n        }\n        if (item.itemDiv) {\n            item.itemDiv = null;\n        }\n        if (item.items) {\n            this.clearItemsMenuProps(item.items);\n        }\n    }\n    setSelectedItems(items, selectedIds) {\n        const itemsLength = items ? items.length : 0;\n        for (let i = 0; i < itemsLength; i++) {\n            const item = items[i];\n            if (item.items) {\n                this.setSelectedItems(item.items, selectedIds);\n            }\n            else {\n                item.selected = selectedIds.indexOf(item.id) >= 0;\n            }\n        }\n    }\n    getRootLevel() {\n        return this.rootLevel;\n    }\n    getItemFilterCallback() {\n        return this.itemFilterCallback;\n    }\n    showMenu(options) {\n        this.ancorFocused = options.anchor == document.activeElement ? options.anchor : null;\n        this.clearItemsMenuProps(this.options.items);\n        this.itemSelectedCallback = options.itemSelectedCallback || null;\n        this.menuClosedCallback = options.menuClosedCallback || null;\n        this.itemFilterCallback = options.itemFilterCallback || null;\n        if (options.items) {\n            this.options.items = options.items;\n            this.rootLevel.setItems(options.items);\n        }\n        if (options.onMenuItemSelected) {\n            this.options.onMenuItemSelected = options.onMenuItemSelected;\n        }\n        let selectedIds = options.selectedIds || null;\n        if (selectedIds) {\n            if (typeof selectedIds === \"string\") {\n                selectedIds = selectedIds.split(\",\");\n            }\n        }\n        else {\n            selectedIds = [];\n        }\n        this.active = true;\n        this.setSelectedItems(this.options.items, selectedIds);\n        if (browserUtils.isMobileMode()) {\n            this.rootLevel.initLevelDiv();\n            this.rootLevel.levelDiv.style.top = '0px';\n            this.rootLevel.levelDiv.style.bottom = '0px';\n            this.rootLevel.levelDiv.style.right = '0px';\n            this.rootLevel.levelDiv.style.position = 'fixed';\n            this.rootLevel.levelDiv.style.fontSize = '20px';\n            this.rootLevel.showAt(0, 0, true, true);\n        }\n        else {\n            const anchor = options.anchor || document.documentElement;\n            const srcPos = getElementAbsolutePos(anchor);\n            anchor.offsetHeight;\n            const anchorWidth = anchor.offsetWidth;\n            const pos = {\n                x: srcPos.x,\n                y: srcPos.y // + anchorHeight + 2\n            };\n            const scroll = getScrollPos();\n            const winSize = getWinSize();\n            //show menu to the side that have more space available\n            const leftSpace = pos.x + anchorWidth - scroll.left;\n            const rightSpace = winSize.width - leftSpace + anchorWidth;\n            pos.x += 2;\n            this.rootLevel.initLevelDiv();\n            this.rootLevel.levelDiv.style.width = '';\n            this.rootLevel.levelDiv.style.right = '';\n            this.rootLevel.levelDiv.style.bottom = '';\n            this.rootLevel.levelDiv.style.position = 'absolute';\n            this.rootLevel.levelDiv.style.fontSize = '14px';\n            this.rootLevel.showAt(pos.x, pos.y, true, true, anchor);\n            if (!this.rootLevel.levelDiv.style.zIndex) {\n                // z-index is at least 10000 and more if anchor has bigger\n                this.rootLevel.levelDiv.style.zIndex = `${Math.max(10000, findHighestZIndex(anchor) + 1)}`;\n            }\n            if ((rightSpace >= this.rootLevel.levelDiv.offsetWidth) || (rightSpace >= leftSpace)) {\n                //show level to the right\n                if (rightSpace < this.rootLevel.levelDiv.offsetWidth) {\n                    this.rootLevel.levelDiv.style.right = -scroll.left + 'px';\n                }\n            }\n            else {\n                //show level to the left\n                if (leftSpace < this.rootLevel.levelDiv.offsetWidth) {\n                    this.rootLevel.levelDiv.style.left = scroll.left + 4 + 'px';\n                }\n                else {\n                    this.rootLevel.levelDiv.style.left = '';\n                }\n                this.rootLevel.levelDiv.style.right = getViewportSize().width - pos.x - anchorWidth + 'px';\n            }\n        }\n        this.rootLevel.levelDiv.style.visibility = 'visible';\n        this.rootLevel.focus();\n        document.addEventListener('keyup', this.menuKeyUpHandler);\n        document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n    }\n    hideMenu() {\n        document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n        document.removeEventListener('keyup', this.menuKeyUpHandler);\n        this.rootLevel.hide();\n        if (this.ancorFocused) {\n            this.ancorFocused.focus();\n        }\n        if (this.menuClosedCallback) {\n            this.menuClosedCallback();\n        }\n    }\n    submitMenu(menuItem, selectedItems) {\n        if (this.itemSelectedCallback) {\n            this.itemSelectedCallback(menuItem, selectedItems);\n        }\n    }\n    knockMenuStyle(menu) {\n        menu.removeAttribute('style');\n        const ul = menu.querySelectorAll('ul').item(0);\n        var hasUlStyle = ul && ul.style ? true : false;\n        if (hasUlStyle !== false) {\n            ul.setAttribute('style', '');\n        }\n    }\n    refreshItems() {\n        this.rootLevel.refreshItems();\n    }\n    refreshCheckboxes() {\n        this.rootLevel.refreshCheckboxes();\n    }\n}\nPopupMenu.lastMenuID = 0;\n\nclass DisplayFormatParser {\n    constructor() {\n        this.formatStr = '';\n        this.pos = 0;\n        this.token = 'text';\n        this.tokenText = '';\n    }\n    start(s) {\n        this.formatStr = s;\n        this.pos = 0;\n        this.tokenText = '';\n    }\n    skipSpaces() {\n        while (this.pos < this.formatStr.length && this.formatStr.charAt(this.pos) === ' ')\n            this.pos++;\n    }\n    getToken() {\n        return this.token;\n    }\n    getTokenText() {\n        return this.tokenText;\n    }\n    next() {\n        this.skipSpaces();\n        if (this.pos >= this.formatStr.length)\n            return false;\n        let npos = 0;\n        if (this.formatStr.charAt(this.pos) === '{') {\n            npos = this.formatStr.indexOf('}', this.pos);\n            if (npos < 0)\n                return false;\n            this.tokenText = this.formatStr.substring(this.pos, npos + 1);\n            if (this.tokenText.indexOf('{expr') === 0 || this.tokenText.indexOf('{attr') === 0) {\n                this.token = 'expression';\n            }\n            this.pos = npos + 1;\n        }\n        else if (this.formatStr.charAt(this.pos) === '[' && this.pos < this.formatStr.length - 1 && this.formatStr.charAt(this.pos + 1) === '[') {\n            this.pos += 2;\n            npos = this.formatStr.indexOf(']]', this.pos);\n            this.token = 'function';\n            this.tokenText = this.formatStr.substring(this.pos, npos);\n            this.pos = npos + 2;\n        }\n        else {\n            this.token = 'text';\n            let npos1 = this.formatStr.indexOf('{', this.pos);\n            if (npos1 < 0)\n                npos1 = this.formatStr.length;\n            let npos2 = this.formatStr.indexOf('[[', this.pos);\n            if (npos2 < 0)\n                npos2 = this.formatStr.length;\n            npos = Math.min(npos1, npos2);\n            this.tokenText = this.formatStr.substring(this.pos, npos).trim();\n            this.pos = npos;\n        }\n        return true;\n    }\n}\n\nvar ColumnAction;\n(function (ColumnAction) {\n    ColumnAction[ColumnAction[\"Enable\"] = 0] = \"Enable\";\n    ColumnAction[ColumnAction[\"Delete\"] = 1] = \"Delete\";\n    ColumnAction[ColumnAction[\"Hidden\"] = 2] = \"Hidden\";\n    ColumnAction[ColumnAction[\"SortingNone\"] = 3] = \"SortingNone\";\n    ColumnAction[ColumnAction[\"SortingAsc\"] = 4] = \"SortingAsc\";\n    ColumnAction[ColumnAction[\"SortingDesc\"] = 5] = \"SortingDesc\";\n    ColumnAction[ColumnAction[\"MoveTop\"] = 6] = \"MoveTop\";\n    ColumnAction[ColumnAction[\"MoveUp\"] = 7] = \"MoveUp\";\n    ColumnAction[ColumnAction[\"MoveDown\"] = 8] = \"MoveDown\";\n    ColumnAction[ColumnAction[\"MoveBottom\"] = 9] = \"MoveBottom\";\n    ColumnAction[ColumnAction[\"Menu\"] = 10] = \"Menu\";\n    ColumnAction[ColumnAction[\"Type\"] = 11] = \"Type\";\n    ColumnAction[ColumnAction[\"Format\"] = 12] = \"Format\";\n})(ColumnAction || (ColumnAction = {}));\nclass ColumnRendererCP {\n    constructor(panel, column, slot) {\n        this.functionMenu = null;\n        this.formatsMenu = null;\n        this.buttonMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.panel = panel;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-qc';\n    }\n    get columnEnabled() {\n        return this.column.enabled;\n    }\n    set columnEnabled(value) {\n        this.column.enabled = value;\n    }\n    render() {\n        if (this.getButtonsToShow().indexOf(\"sorting\") >= 0 && this.columnEnabled) {\n            this.sortingButton = this.renderSoringButton(this.column.sorting);\n            if (this.column.sorting !== SortDirection.None) {\n                this.sortingButton.style.display = 'block';\n            }\n        }\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.panel.options.allowDragDrop && !browserUtils.isMobileMode()) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSort\",\n                data: { column: this.column },\n                beforeDragStart: () => {\n                    this.hideButtons();\n                },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('span');\n                    attrLabel.innerText = this.column.caption;\n                    dragImage.classList.add('eqjs-sortable-helper');\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    if (!ev.data.finishedSuccessfully) {\n                        this.element.style.removeProperty('display');\n                    }\n                }\n            });\n        }\n        if (this.isEditable()) {\n            this.createFunctionMenu();\n            this.createFormatsMenu();\n        }\n        this.createButtonMenu();\n        const isFullMode = this.panel.options.editMode === ColumnsEditMode.Full;\n        const isReadOnlyMode = this.panel.options.editMode === ColumnsEditMode.ReadOnly;\n        const showCheckboxes = this.panel.options.showCheckboxes !== false;\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass());\n        if (showCheckboxes && !isReadOnlyMode && !this.column.isReadOnly()) {\n            builder.addChildElement(this.renderCheckbox());\n        }\n        if (!isReadOnlyMode) {\n            //start sort button\n            builder.addChild('div', builder => builder\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortbutton-placeholder`)\n                .addChildElement(this.sortingButton));\n            // end sort button\n        }\n        builder.addChildElement(this.renderExpressionBlock());\n        if (this.panel.options.showColumnTitles !== false && !browserUtils.isMobileMode()) {\n            builder\n                .addChildElement(this.renderCaptionBlock());\n        }\n        let buttonsIndex = 0;\n        let buttonsList = '';\n        builder\n            //start buttons\n            .addChild('div', builder => {\n            builder\n                .addClass(`${eqCssPrefix}-column-buttonsBlock`, `${this.cssPrefix}-buttonsBlock`)\n                .addClass(getMobileCssClass());\n            const buttonsToShow = this.getButtonsToShow();\n            //start enable button\n            if (buttonsToShow.indexOf(\"enable\") >= 0 && isFullMode && !showCheckboxes && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderEnabledButton());\n                buttonsIndex++;\n                buttonsList += 'Enable';\n            }\n            //end enable button\n            //start aggr func button\n            if (buttonsToShow.indexOf(\"type\") >= 0 && this.columnEnabled && isFullMode) {\n                builder.addChildElement(this.renderColumnTypeButton());\n                buttonsIndex++;\n                buttonsList += 'Type';\n            }\n            //end aggr func button\n            //start format selector button\n            if (buttonsToShow.indexOf(\"format\") >= 0 && this.columnEnabled && !isReadOnlyMode) {\n                builder.addChildElement(this.renderColumnFormatButton());\n                buttonsIndex++;\n                buttonsList += 'Format';\n            }\n            //end format selector button\n            //start delete button\n            if (buttonsToShow.indexOf(\"delete\") >= 0 && isFullMode && !this.column.isReadOnly()) {\n                builder.addChildElement(this.renderDeleteButton());\n                buttonsIndex++;\n                buttonsList += 'Delete';\n            }\n            //end delete button\n            //start menu button\n            if (buttonsToShow.indexOf(\"menu\") >= 0 && !(this.column.isReadOnly() || isReadOnlyMode)) {\n                builder.addChildElement(this.renderMenuButton());\n                buttonsIndex++;\n                buttonsList += 'Menu';\n            }\n            //end menu button\n        });\n        //end buttons\n        builder.addClass(`eqjs-buttons-in-block-${buttonsIndex}`);\n        builder.addClass(`eqjs-buttons-in-block-${buttonsList}`);\n        if (!browserUtils.isMobileMode()) {\n            //start event listeners\n            builder\n                .on('mouseenter', this.onMouseEnter.bind(this))\n                .on('mouseleave', this.onMouseLeave.bind(this));\n            //end event listeners\n        }\n        if (this.panel.options.accentActiveColumn || browserUtils.isMobileMode()) {\n            builder\n                .on('click', this.onMouseClick.bind(this)); //touchstart\n        }\n        if (this.panel.options.alwaysShowButtons) {\n            this.showButtons();\n        }\n        if (!showCheckboxes) {\n            builder.addClass(\"eqjs-no-checkbox\");\n        }\n        return this.element;\n    }\n    onMouseClick(ev) {\n        ev.stopPropagation();\n        this.activate();\n        return false;\n    }\n    activate() {\n        this.panel.toggleColumnPicked(this.column);\n        this.adjustButtonsVisibility();\n        if (!browserUtils.isMobileMode()) {\n            this.element.dispatchEvent(createBrowserEvent(\"mouseenter\"));\n        }\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    renderCaptionBlock() {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(getMobileCssClass());\n        if (this.isEditable()) {\n            builder\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .title(this.column.caption)\n                .text(this.column.caption)\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.activate();\n                const element = ev.target;\n                const inputEl = element.parentElement.querySelector('input');\n                if (inputEl) {\n                    element.style.display = 'none';\n                    inputEl.style.removeProperty('display');\n                    inputEl.style.minWidth = `${element.clientWidth}`;\n                    inputEl.focus();\n                    this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n                }\n                return false;\n            }) //TO DO:add localization and input field\n            )\n                .addChild('input', builder => builder\n                .hide()\n                .value(this.column.caption)\n                .on('blur keydown', (ev) => {\n                let isEndEvent = false;\n                let save = true;\n                if (ev instanceof KeyboardEvent) {\n                    // Enter\n                    if (ev.keyCode === 13) {\n                        isEndEvent = true;\n                        //ESC\n                    }\n                    else if (ev.keyCode === 27) {\n                        isEndEvent = true;\n                        save = false;\n                    }\n                }\n                else if (ev instanceof FocusEvent) {\n                    isEndEvent = true;\n                }\n                if (isEndEvent) {\n                    const inputEl = ev.target;\n                    const aEl = inputEl.parentElement.querySelector('a');\n                    if (aEl) {\n                        aEl.style.removeProperty('display');\n                        inputEl.style.display = 'none';\n                    }\n                    if (save && this.column.caption !== inputEl.value) {\n                        this.column.caption = inputEl.value;\n                        this.fireColumnChanged();\n                    }\n                    else {\n                        inputEl.value = this.column.caption;\n                        safeFocus(aEl);\n                    }\n                    this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                }\n                return true;\n            }));\n        }\n        else {\n            builder.addChild('span', b => {\n                b.text(this.column.caption)\n                    .title(this.column.caption);\n            });\n        }\n        return builder.toDOM();\n    }\n    renderSoringButton(sorting) {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass;\n        switch (sorting) {\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n            default:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-none`;\n                break;\n        }\n        if (!this.isEditable() || browserUtils.isMobileMode()) {\n            if (sorting === SortDirection.Ascending\n                || sorting === SortDirection.Descending)\n                return domel('div')\n                    .addClass(sortButtonCssClass, `${eqCssPrefix}-button`, sortButtonDirectionCssClass)\n                    .title(i18n$1.getText('ButtonSorting'))\n                    .toDOM();\n            return null;\n        }\n        return domel('div')\n            .addClass(sortButtonCssClass, `${eqCssPrefix}-button`, sortButtonDirectionCssClass)\n            .data(\"btnplaceholder\", \"\")\n            .title(i18n$1.getText('ButtonSorting'))\n            .attr('tabIndex', '0')\n            .on('click', (ev) => {\n            ev.stopPropagation();\n            this.activate();\n            this.keepShowingButtons = true;\n            const menu = this.getUIS() ? this.panel.sortMenu || this.panel.moveMenu : this.panel.moveMenu;\n            menu.showMenu({\n                anchor: this.sortingButton,\n                selectedIds: this.getButtonMenuSelectedItems(), // this.column.isHidden() ? ['IsHidden'] : null,\n                itemSelectedCallback: (data, items) => {\n                    let action;\n                    switch (data.id) {\n                        case \"IsHidden\":\n                            action = ColumnAction.Hidden;\n                            break;\n                        case \"MoveTop\":\n                            action = ColumnAction.MoveTop;\n                            break;\n                        case \"MoveDown\":\n                            action = ColumnAction.MoveDown;\n                            break;\n                        case \"MoveUp\":\n                            action = ColumnAction.MoveUp;\n                            break;\n                        case \"MoveBottom\":\n                            action = ColumnAction.MoveBottom;\n                            break;\n                        case \"None\":\n                            action = ColumnAction.SortingNone;\n                            break;\n                        case \"Ascending\":\n                            action = ColumnAction.SortingAsc;\n                            break;\n                        case \"Descending\":\n                            action = ColumnAction.SortingDesc;\n                            break;\n                    }\n                    this.buttonMenuHandler(action, null);\n                },\n                menuClosedCallback: () => {\n                    this.keepShowingButtons = false;\n                    if (!this.isMouseOverBlock) {\n                        this.leaveButtonBlock();\n                    }\n                }\n            });\n        })\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderCheckbox() {\n        return domel(\"div\")\n            .title(i18n$1.getText('CmdToggleEnable'))\n            .attr('tabIndex', '0')\n            .addClass(`${this.cssPrefix}-colelement ${this.cssPrefix}-column-checkbox`)\n            .addClass(`${this.columnEnabled ? 'enabled' : ''}`)\n            .on('click', () => {\n            this.columnEnabled = !this.columnEnabled;\n            this.column.fireChangedEvent();\n            return false;\n        })\n            .on('keypress', evt => { if ([13, 32].includes(evt.keyCode)) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderDeleteButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-deletebutton-placeholder`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-delete`)\n            .title(i18n$1.getText('CmdDelete'))\n            .attr('tabIndex', '0')\n            .on('click', ev => this.buttonMenuHandler(ColumnAction.Delete, ev)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } }))\n            .toDOM();\n    }\n    renderMenuButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-menubutton-placeholder`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-menu`)\n            .title(i18n$1.getText('ButtonMenu'))\n            .attr('tabIndex', '0')\n            .on('click', evt => this.buttonMenuHandler(ColumnAction.Menu, evt)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } }))\n            .toDOM();\n    }\n    getClassesToAdd() {\n        let result = \"\";\n        result += this.columnEnabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.columnEnabled) {\n            result += this.column.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        result += this.column.isHidden() ? ` ${this.cssPrefix}-hidden` : '';\n        return result;\n    }\n    renderColumnTypeButton() {\n        return (this.isEditable() && this.panel.options.allowAggrColumns !== false)\n            ? domel('div')\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-typebutton-placeholder`, `${this.cssPrefix}-button-active`)\n                .data(\"btnplaceholder\", \"\")\n                .addChild('div', b => b\n                .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-type`)\n                .title(i18n$1.getText('ButtonToAggr'))\n                .attr('tabIndex', '0')\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.activate();\n                this.keepShowingButtons = true;\n                this.changeTypeHandler(ev);\n            })\n                .on('keypress', evt => { if (evt.keyCode == 13) {\n                evt.target.click();\n            } }))\n                .toDOM()\n            : null;\n    }\n    renderColumnFormatButton() {\n        const formatItems = this.getFormatsMenuItems();\n        return (this.isEditable() && this.panel.options.allowDisplayFormatChange !== false && formatItems.length > 1)\n            ? domel('div')\n                .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-formatbutton-placeholder`, `${this.cssPrefix}-button-active`)\n                .data(\"btnplaceholder\", \"\")\n                .addChild('div', b => b\n                .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-format`)\n                .title(i18n$1.getText('ButtonFormat'))\n                .attr('tabIndex', '0')\n                .on('click', (ev) => {\n                ev.stopPropagation();\n                this.keepShowingButtons = true;\n                this.changeFormatHandler(ev);\n            })\n                .on('keypress', evt => { if (evt.keyCode == 13) {\n                evt.target.click();\n            } }))\n                .toDOM()\n            : null;\n    }\n    renderEnabledButton() {\n        return domel('div')\n            .addClass(`${eqCssPrefix}-button-placeholder`, `${this.cssPrefix}-button-placeholder`, `${this.cssPrefix}-enablebutton-placeholder`, `${this.cssPrefix}-button-active`)\n            .data(\"btnplaceholder\", \"\")\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-button`, `${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-enable`)\n            .title(i18n$1.getText('CmdToggleEnable'))\n            .addClass(this.columnEnabled ? 'enabled' : '')\n            .attr('tabIndex', '0')\n            .on('click', evt => this.buttonMenuHandler(ColumnAction.Enable, evt)) //touchstart\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })).toDOM();\n    }\n    isEditable() {\n        // Allow editing (title/sort/order) in Full or FixedList mode only\n        switch (this.panel.options.editMode) {\n            case ColumnsEditMode.ReadOnly:\n                return false;\n            default:\n                return this.column.enabled && !this.column.isReadOnly();\n        }\n    }\n    changeFormatHandler(ev) {\n        const formats = this.panel\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let itemId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            itemId = this.column.displayFormat;\n        }\n        this.formatsMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: itemId,\n            itemSelectedCallback: (data, items) => {\n                if (data.id != itemId) {\n                    if (data.id == '{0:__default}') {\n                        this.column.displayFormat = '';\n                    }\n                    else {\n                        this.column.displayFormat = data.id;\n                    }\n                    this.column.fireChangedEvent();\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    getUIS() {\n        return this.panel\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n    onMouseEnter(e) {\n        this.isMouseOverBlock = true;\n        this.enterButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    onMouseLeave(e) {\n        this.isMouseOverBlock = false;\n        this.leaveButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    isColumnActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        domel(this.element).data(\"show-buttons\", null);\n    }\n    showButtons() {\n        domel(this.element).data(\"show-buttons\", \"\");\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtons ||\n            ((this.panel.options.accentActiveColumn || browserUtils.isMobileMode())\n                && this.isColumnActive())) {\n            this.showButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (!this.keepShowingButtons && this.panel.options.alwaysShowButtons !== true && (!this.isColumnActive() || this.panel.options.accentActiveColumn != true)) {\n            this.hideButtons();\n        }\n    }\n    createFunctionMenu() {\n        const items = [];\n        const funcs = this.panel.getContext().getModel().getAggrFunctions();\n        let funcAllowed = true;\n        let item = null;\n        const colDataType = this.column.getDataType();\n        let funcCaption;\n        for (const func of funcs) {\n            if (!func)\n                continue;\n            const toInclude = func.getAppliedTypesOrDefault().indexOf(colDataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.panel.getContext().getModel()\n                    .getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        if (!funcAllowed && items.length > 0) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.panel;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n$1.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n    createFormatsMenu() {\n        if (this.panel.options.allowDisplayFormatChange == false)\n            return;\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FormatsMenu';\n        }\n        const items = this.getFormatsMenuItems();\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            showSelected: true,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.formatsMenu = new PopupMenu(menuOptions);\n    }\n    getFormatsMenuItems() {\n        const formats = this.panel.getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        return [{ id: '{0:__default}', text: \"Default\" }]\n            .concat(formats.map(format => ({ id: format.format, text: i18n$1.getText(\"DisplayFormats\", format.name) || format.name })));\n    }\n    getButtonsToShow() {\n        // In ReadOnly mode, no buttons\n        if (this.panel.options.editMode === ColumnsEditMode.ReadOnly) {\n            return [];\n        }\n        // In FixedList mode, only allow sorting and caption editing\n        if (this.panel.options.editMode === ColumnsEditMode.FixedList) {\n            return [\"sorting\", \"format\"];\n        }\n        // Default (Full)\n        return this.panel.options.buttons && Array.isArray(this.panel.options.buttons)\n            ? this.panel.options.buttons\n            : [\"enable\", \"delete\", \"type\", \"sorting\", \"format\"];\n    }\n    buttonMenuHandler(action, evt) {\n        switch (action) {\n            case ColumnAction.Delete:\n                const curQuery = this.column.getQuery();\n                curQuery.removeColumn(this.column);\n                curQuery.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column);\n                break;\n            case ColumnAction.Enable:\n                this.activate();\n                this.columnEnabled = !this.columnEnabled;\n                this.fireColumnChanged();\n                break;\n            case ColumnAction.Hidden:\n                this.column.setHidden(!this.column.isHidden());\n                this.fireColumnChanged();\n                break;\n            case ColumnAction.MoveTop:\n                this.panel.moveColumn(this.column, \"MoveTop\");\n                break;\n            case ColumnAction.MoveBottom:\n                this.panel.moveColumn(this.column, \"MoveBottom\");\n                break;\n            case ColumnAction.MoveUp:\n                this.panel.moveColumn(this.column, \"MoveUp\");\n                break;\n            case ColumnAction.MoveDown:\n                this.panel.moveColumn(this.column, \"MoveDown\");\n                break;\n            case ColumnAction.SortingAsc:\n                this.column.sorting = SortDirection.Ascending;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.SortingDesc:\n                this.column.sorting = SortDirection.Descending;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.SortingNone:\n                this.column.sorting = SortDirection.None;\n                this.column.fireChangedEvent();\n                break;\n            case ColumnAction.Menu:\n                const colMenu = this.buttonMenu;\n                this.keepShowingButtons = true;\n                this.activate();\n                colMenu.showMenu({\n                    anchor: evt ? evt.target : null,\n                    selectedIds: this.getButtonMenuSelectedItems(),\n                    itemSelectedCallback: (item) => {\n                        let action = item.id;\n                        switch (item.id) {\n                            case \"enable\":\n                                action = ColumnAction.Enable;\n                                break;\n                            case \"delete\":\n                                action = ColumnAction.Delete;\n                                break;\n                            case \"hidden\":\n                                action = ColumnAction.Hidden;\n                                break;\n                            case \"MoveTop\":\n                                action = ColumnAction.MoveTop;\n                                break;\n                            case \"MoveBottom\":\n                                action = ColumnAction.MoveBottom;\n                                break;\n                            case \"MoveUp\":\n                                action = ColumnAction.MoveUp;\n                                break;\n                            case \"MoveDown\":\n                                action = ColumnAction.MoveDown;\n                                break;\n                            case \"None\":\n                                action = ColumnAction.SortingNone;\n                                break;\n                            case \"Ascending\":\n                                action = ColumnAction.SortingAsc;\n                                break;\n                            case \"Descending\":\n                                action = ColumnAction.SortingDesc;\n                                break;\n                        }\n                        this.buttonMenuHandler(action, evt);\n                    },\n                    itemFilterCallback: (item) => {\n                        let result = this.columnEnabled || item.id === \"__group\" || item.id === \"enable\" || item.id === \"delete\";\n                        return result;\n                    },\n                    menuClosedCallback: () => {\n                        this.keepShowingButtons = false;\n                        if (!this.isMouseOverBlock)\n                            this.leaveButtonBlock();\n                    }\n                });\n                break;\n            default:\n                if (!this.processFormatsButtonMenuItems(action, evt))\n                    this.processExtraButtonMenuItems(action, evt);\n                break;\n        }\n        evt && evt.stopPropagation();\n        return false;\n    }\n    createButtonMenu() {\n        if (!this.buttonMenu) {\n            let menuId = this.column.id;\n            if (menuId) {\n                menuId += '-ButtonMenu';\n            }\n            const Appearance = [];\n            Appearance.push({\n                id: \"enable\",\n                text: i18n$1.getText('MenuEnable')\n            });\n            if (this.panel.options.allowHiddenColumns) {\n                Appearance.push({\n                    id: \"hidden\",\n                    text: i18n$1.getText('CmdHiddenColumn')\n                });\n            }\n            Appearance.push({\n                id: \"delete\",\n                text: i18n$1.getText('CmdDelete')\n            });\n            let items = [];\n            items.push({\n                id: '__group',\n                text: i18n$1.getText('CmdGroupAppearance'),\n                items: Appearance\n            });\n            const sortItems = this.panel.options.allowSorting ?\n                [\n                    ...this.panel.getSortMenuList(),\n                    ...this.panel.getMoveMenuList()\n                ] :\n                this.panel.getMoveMenuList();\n            items.push({\n                id: '__group',\n                text: i18n$1.getText('CmdGroupSort'),\n                items: sortItems\n            });\n            const extra = this.getExtraButtonMenuItems();\n            if (extra && Array.isArray(extra)) {\n                items = [...items, ...extra];\n            }\n            const formatItems = this.getFormatsMenuItems();\n            if (formatItems.length > 1) {\n                items.push({\n                    id: '__group',\n                    text: i18n$1.getText('CmdGroupFormat'),\n                    items: formatItems\n                });\n            }\n            const menuOptions = {\n                items: items,\n                id: menuId,\n                searchBoxAlwaysShown: false,\n                domWriteItemsId: true, //this.panel.options.domWriteItemsId\n                showSelected: true\n            };\n            this.buttonMenu = new PopupMenu(menuOptions);\n        }\n    }\n    processFormatsButtonMenuItems(action, evt) {\n        const formats = this.panel\n            .getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        if (action == '{0:__default}') {\n            this.column.displayFormat = '';\n        }\n        else if (formats.filter(f => f.format == action).length > 0) {\n            this.column.displayFormat = action;\n        }\n        else {\n            return false;\n        }\n        this.column.fireChangedEvent();\n        return true;\n    }\n    getButtonMenuSelectedItems() {\n        let arrSelected = [];\n        if (this.columnEnabled) {\n            arrSelected.push(\"enable\");\n        }\n        if (this.column.isHidden()) {\n            arrSelected.push(\"hidden\");\n        }\n        switch (this.column.sorting) {\n            case SortDirection.None:\n                arrSelected.push(\"None\");\n                break;\n            case SortDirection.Ascending:\n                arrSelected.push(\"Ascending\");\n                break;\n            case SortDirection.Descending:\n                arrSelected.push(\"Descending\");\n                break;\n        }\n        const formats = this.panel\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let formatId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            formatId = this.column.displayFormat;\n        }\n        arrSelected.push(formatId);\n        return arrSelected;\n    }\n}\n\nclass AttrColumnRendererCP extends ColumnRendererCP {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    renderExpressionBlock() {\n        return domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`)\n            .addClass(getMobileCssClass())\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderBaseExpression()))\n            .toDOM();\n    }\n    getAttribute() {\n        const model = this.panel.getContext().getModel();\n        return model.getAttributeByIdSafe(this.column.expr.value);\n    }\n    renderBaseExpression() {\n        const baseAttr = this.getAttribute();\n        const attrCaption = this.panel.getContext().getAttributeTitle(baseAttr);\n        if (this.isEditable() && this.panel.options.editMode === ColumnsEditMode.Full) {\n            return domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(attrCaption)\n                .text(attrCaption) //TO DO:add localization\n                .on('click', (ev) => {\n                console.log(\"columns expression click\");\n                ev.stopPropagation();\n                this.activate();\n                this.panel.showEntitiesMenu({\n                    anchor: ev.target,\n                    selectedIds: null,\n                    itemSelectedCallback: this.baseExpressionItemSelectedCallback.bind(this),\n                    itemFilterCallback: item => item.id !== '__AddAll__'\n                });\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            return domel('span')\n                .text(attrCaption)\n                .title(attrCaption)\n                .toDOM();\n        }\n    }\n    baseExpressionItemSelectedCallback(data, item) {\n        const attrid = data.id;\n        const context = this.panel.getContext();\n        var attr = context.getModel().getAttributeById(attrid);\n        this.updateBaseAttr(attr);\n        this.column.caption = context.getDefaultColumnCaption(this.column);\n        this.fireColumnChanged();\n        return false;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n        this.column.expr.dataType = attr.dataType;\n    }\n    getUIS() {\n        const arg = this.column.expr.args[0];\n        if (arg) {\n            const model = this.panel.getContext().getModel();\n            return model.checkAttrProperty(arg.value, \"useInSorting\");\n        }\n        else {\n            return true;\n        }\n    }\n    changeTypeHandler(ev) {\n        this.keepShowingButtons = true;\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                this.processExtraButtonMenuItems(data.id, null);\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    changeTypeToCustomSql() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.CustomSql);\n        const parentElement = this.element.parentElement;\n        setTimeout(() => {\n            //focus CustomSQL Edit\n            const newElement = parentElement.querySelector(`div[data-id='${this.column.id}']  div[class*='${this.cssPrefix}-expr-block']  div[class*='${this.cssPrefix}-colelement']  a`);\n            if (newElement)\n                newElement.click();\n        }, 500);\n        this.fireColumnChanged();\n    }\n    changeTypeToAggr(funcId) {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.AggregateFunction, { funcId: funcId });\n        this.fireColumnChanged();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        if (action === \"CUSTOMSQL\") {\n            this.changeTypeToCustomSql();\n        }\n        else {\n            this.changeTypeToAggr(action);\n        }\n        return true;\n    }\n    getExtraButtonMenuItems() {\n        const items = [];\n        const funcs = this.panel.getContext().getModel().getAggrFunctions();\n        let toInclude = true;\n        let funcAllowed = true;\n        var item = null;\n        const attribute = this.getAttribute();\n        let funcCaption;\n        for (const func of funcs) {\n            toInclude = func.getAppliedTypesOrDefault().indexOf(attribute.dataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.panel.getContext().getModel().getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        for (let idx = 0; idx < funcs.length; idx++) {\n            if (!funcs[idx])\n                continue;\n        }\n        if (!funcAllowed && items.length > 0) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.panel;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: items\n            }];\n    }\n}\n\nclass AggrFuncColumnRendererCP extends AttrColumnRendererCP {\n    constructor() {\n        super(...arguments);\n        this.displayFormatParser = new DisplayFormatParser();\n    }\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-aggr`;\n    }\n    getAttribute() {\n        return this.panel\n            .getContext()\n            .getModel()\n            .getAttributeByIdSafe(this.column.expr.args[0].value);\n    }\n    renderExpressionBlock() {\n        const model = this.panel.getContext().getModel();\n        const exprBlockBuilder = domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`, `${this.cssPrefix}-expr-block-aggr`)\n            .addClass(getMobileCssClass());\n        const format = model.getAggrFunctionFormat(this.column.expr.func);\n        if (!format || format === '')\n            return;\n        const arrFormat = this.parseDisplayFormat(format);\n        if (arrFormat.length === 0)\n            return;\n        let item = null;\n        const arrLength = arrFormat.length;\n        for (let idx = 0; idx < arrLength; idx++) {\n            item = arrFormat[idx];\n            if (item.type === 1) {\n                // Only allow function/type change in Full mode\n                if (this.panel.options.editMode === ColumnsEditMode.Full && this.isEditable()) {\n                    const functionLink = domel('a')\n                        .attr('href', 'javascript:void(0)')\n                        .text(item.text)\n                        .on('click', (ev) => {\n                        ev.stopPropagation();\n                        this.activate();\n                        this.functionMenu.showMenu({\n                            anchor: functionLink.toDOM(),\n                            selectedIds: null,\n                            itemSelectedCallback: (data, items) => {\n                                if (data.id === \"CUSTOMSQL\") {\n                                    this.changeTypeToCustomSql();\n                                }\n                                else {\n                                    this.column.expr.func = data.id;\n                                    this.column.caption = '';\n                                    this.fireColumnChanged();\n                                }\n                            }\n                        });\n                    });\n                    exprBlockBuilder\n                        .addChild('div', builder => builder\n                        .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-aggrfuncelement`)\n                        .addClass(getMobileCssClass())\n                        .addChildElement(functionLink.toDOM()));\n                }\n                else {\n                    exprBlockBuilder\n                        .addChild('div', b => b\n                        .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-aggrfuncelement`)\n                        .addClass(getMobileCssClass())\n                        .addChild('span', b => b\n                        .text(item.text)\n                        .title(item.text)));\n                }\n            }\n            else if (item.type === 2) {\n                exprBlockBuilder\n                    .addChild('div', builder => builder\n                    .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n                    .addClass(getMobileCssClass())\n                    .addChildElement(this.renderBaseExpression()));\n            }\n            else if (item.type === 3) {\n                exprBlockBuilder\n                    .addChild('span', builder => builder\n                    .addClass(`${this.cssPrefix}-colelement`)\n                    .addClass(getMobileCssClass())\n                    .text(item.text)\n                    .title(item.text));\n            }\n        }\n        return exprBlockBuilder.toDOM();\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    parseDisplayFormat(format) {\n        if (!format)\n            return [];\n        let result = [];\n        const parser = this.displayFormatParser;\n        parser.start(format);\n        while (parser.next()) {\n            const token = parser.getToken();\n            const tokenText = parser.getTokenText();\n            if (token === 'function') {\n                result.push({ type: 1, text: tokenText });\n            }\n            else if (token === 'expression') {\n                result.push({ type: 2 });\n            }\n            else if (token === 'text') {\n                result.push({ type: 3, text: tokenText });\n            }\n        }\n        return result;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.args[0].setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n    }\n    changeTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        this.changeTypeToSimple();\n        return true;\n    }\n    getExtraButtonMenuItems() {\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: [{\n                        id: 'type',\n                        text: i18n.getText('ColTypeSimple')\n                    }]\n            }];\n    }\n}\n\nclass EditableColumnRendererCP extends AttrColumnRendererCP {\n    constructor() {\n        super(...arguments);\n        this.dataTypeMenu = null;\n    }\n    renderEnabledButton() {\n        const elem = super.renderEnabledButton();\n        const child = elem.children[0];\n        child.title = i18n.getText('CmdToggleEnableCustom');\n        return elem;\n    }\n    ;\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr` + super.getClassesToAdd();\n    }\n    renderExpressionBlock() {\n        const exprBlock = domel(\"div\")\n            .addClass(`${this.cssPrefix}-expr-block`)\n            .addClass(getMobileCssClass())\n            .toDOM();\n        //Attribute element\n        let builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(getMobileCssClass());\n        if (this.isEditable() && this.panel.options.editMode === ColumnsEditMode.Full) {\n            builder\n                .addChild('a', b => b\n                .attr('href', 'javascript:void(0)')\n                .title(this.column.caption)\n                .text(this.column.caption)\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                const element = ev.target;\n                const inputEl = element.parentElement.querySelector('input');\n                if (inputEl) {\n                    element.style.display = 'none';\n                    inputEl.style.removeProperty('display');\n                    inputEl.style.width = `100%`;\n                    inputEl.focus();\n                    this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n                }\n            }) //TO DO:add localization and input field\n            )\n                .addChild('input', b => b\n                .hide()\n                .value(this.getColumnValue())\n                .on('blur keydown', (ev) => {\n                let isEndEvent = false;\n                let save = true;\n                if (ev instanceof KeyboardEvent) {\n                    // Enter\n                    if (ev.keyCode === 13) {\n                        isEndEvent = true;\n                        //ESC\n                    }\n                    else if (ev.keyCode === 27) {\n                        isEndEvent = true;\n                        save = false;\n                    }\n                }\n                else if (ev instanceof FocusEvent) {\n                    isEndEvent = true;\n                }\n                if (isEndEvent) {\n                    const inputEl = ev.target;\n                    const aEl = inputEl.parentElement.querySelector('a');\n                    if (aEl) {\n                        aEl.style.removeProperty('display');\n                        inputEl.style.display = 'none';\n                    }\n                    const colVal = this.getColumnValue();\n                    if (save && colVal !== inputEl.value) {\n                        this.setColumnValue(inputEl.value);\n                        this.fireColumnChanged();\n                    }\n                    else {\n                        inputEl.value = colVal;\n                    }\n                    this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                }\n            }));\n        }\n        else {\n            builder\n                .addChild('span', b => {\n                b.text(this.column.caption)\n                    .title(this.column.caption);\n            });\n        }\n        // Colon element\n        builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`)\n            .addChild('span', b => {\n            b.text(':')\n                .title(':');\n        });\n        // DataType element\n        builder = domel('div', exprBlock)\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-attrelement`)\n            .addClass(getMobileCssClass());\n        // Only allow data type change in Full mode\n        if (this.panel.options.editMode === ColumnsEditMode.Full && this.isEditable()) {\n            this.createDataTypeMenu();\n            builder\n                .addChild('a', dataTypeLink => dataTypeLink\n                .attr('href', 'javascript:void(0)')\n                .title(DataType[this.column.expr.dataType])\n                .text(DataType[this.column.expr.dataType])\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                this.dataTypeMenu.showMenu({\n                    anchor: dataTypeLink.toDOM(),\n                    selectedIds: null,\n                    itemSelectedCallback: (data, items) => {\n                        this.column.expr.dataType = data.id;\n                        this.fireColumnChanged();\n                    }\n                });\n            }));\n        }\n        else {\n            builder\n                .addChild('span', b => {\n                b.text(DataType[this.column.expr.dataType])\n                    .title(DataType[this.column.expr.dataType]);\n            });\n        }\n        return exprBlock;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    getColumnValue() {\n        return '';\n    }\n    setColumnValue(value) {\n    }\n    getUIS() {\n        return true;\n    }\n    changeTypeHandler(ev) {\n        this.changeTypeToSimple();\n    }\n    processExtraButtonMenuItems(action, evt) {\n        this.changeTypeToSimple();\n        return true;\n    }\n    createFunctionMenu() {\n        // Nothing TO DO\n    }\n    getExtraButtonMenuItems() {\n        return [{\n                id: '__group',\n                text: i18n.getText('ColTypeGroup'),\n                items: [{\n                        id: 'type',\n                        text: i18n.getText('ColTypeSimple')\n                    }]\n            }];\n    }\n    createDataTypeMenu() {\n        const items = [];\n        for (let typeItem in DataType) {\n            if (!isNaN(Number(typeItem))) {\n                const item = {\n                    id: typeItem,\n                    text: DataType[typeItem]\n                };\n                items.push(item);\n            }\n        }\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-DataTypeMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true\n        };\n        this.dataTypeMenu = new PopupMenu(menuOptions);\n    }\n}\nclass CustomSqlColumnRendererCP extends EditableColumnRendererCP {\n    get columnEnabled() {\n        return this.panel.areCustomExpressionsAllowed() ? this.column.enabled : false;\n    }\n    set columnEnabled(value) {\n        if (this.panel.areCustomExpressionsAllowed()) {\n            this.column.enabled = value;\n        }\n        else {\n            this.column.enabled = false;\n        }\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    getColumnValue() {\n        return this.column.expr.sql;\n    }\n    setColumnValue(value) {\n        this.column.expr.sql = value;\n    }\n    getDefaultValue() {\n        return this.column.expr.sql;\n    }\n}\nclass ConstColumnRendererCP extends EditableColumnRendererCP {\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.firstElementChild.classList.add('aggregated');\n            button.firstElementChild.setAttribute('title', i18n.getText('ButtonToSimple'));\n        }\n        return button;\n    }\n    getColumnValue() {\n        return this.column.expr.value;\n    }\n    setColumnValue(value) {\n        this.column.expr.setValue(value);\n    }\n    getDefaultValue() {\n        return this.column.expr.value;\n    }\n}\n\nclass ColumnsPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-qc';\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            isSubQuery: false,\n            activeColumn: null,\n            showAddRow: true,\n            showHeader: true,\n            showColumnTitles: true,\n            allowAggrColumns: true,\n            allowDuplicates: true,\n            allowCustomExpressions: false,\n            allowSorting: true,\n            attrElementFormat: '{entity} {attr}',\n            titleElementFormat: null,\n            buttons: null,\n            alwaysShowButtons: false,\n            accentActiveColumn: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n            attrPlacement: 0,\n            sortEntities: false,\n            columnRenderedCallback: null,\n            customExpressionText: 0,\n            allowHiddenColumns: false,\n            showAddAllForEntity: false,\n            showIndicatorOnLoad: true,\n            editMode: ColumnsEditMode.Full\n        };\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this.landingIndex = -1;\n        this.slot.classList.add(`${this.cssPrefix}-panel`);\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'columnsPanel';\n    }\n    /**\n     * Gets or sets the current edit mode. When setting, automatically refreshes the widget.\n     */\n    get editMode() {\n        return this.options.editMode || ColumnsEditMode.Full;\n    }\n    set editMode(value) {\n        if (this.options.editMode !== value) {\n            this.options.editMode = value;\n            this.refresh();\n        }\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n        const model = context.getModel();\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttr\", \"entityAttrSort\"],\n                onDragEnter: (container, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    if (ev.item.scope === \"entityAttrSort\") {\n                        this.showLandingSlot(ev.pageX, ev.pageY);\n                    }\n                    else {\n                        const attrId = ev.data.attrId;\n                        if (!model.checkAttrProperty(attrId, \"useInResult\")) {\n                            ev.dropEffect = DropEffect.Forbid;\n                        }\n                        ev.dragImage.classList.add('eqjs-sortable-helper');\n                    }\n                },\n                onDragOver: (container, ev) => {\n                    const attrId = ev.data.attrId;\n                    if (ev.item.scope === \"entityAttrSort\" ||\n                        model.checkAttrProperty(attrId, \"useInResult\")) {\n                        this.showLandingSlot(ev.pageX, ev.pageY);\n                    }\n                },\n                onDragLeave: (container, ev) => {\n                    if (ev.item.scope === \"entityAttrSort\") {\n                        ev.dropEffect = DropEffect.Forbid;\n                    }\n                    else {\n                        ev.dragImage.classList.remove('eqjs-sortable-helper');\n                        ev.dragImage.style.removeProperty('width');\n                    }\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (ev.item.scope == \"entityAttrSort\") {\n                        const query = this.getQuery();\n                        const columns = query.getColumns();\n                        const index = columns.indexOf(ev.data.column);\n                        this.moveColumnCore(index, this.landingIndex);\n                    }\n                    else {\n                        const attrId = ev.data.attrId;\n                        this.addNewColumn(attrId, this.landingIndex);\n                    }\n                }\n            });\n        }\n    }\n    renderBaseElements() {\n        let minusHeight = 0;\n        if (this.options.showHeader) {\n            const headerBuilder = domel('div', this.slot)\n                .hide()\n                .addClass(`${this.cssPrefix}-header`)\n                .addClass(getMobileCssClass());\n            if (!this.options.alwaysShowButtons) {\n                headerBuilder.addClass(\"eqjs-no-buttons\");\n            }\n            if (this.options.showCheckboxes) {\n                headerBuilder.addChild('div', builder => builder\n                    .setStyle('margin-left', '30px')); //quick fix to adjust title column header when showCheckboxes is on\n            }\n            else {\n                headerBuilder.addClass(\"eqjs-no-checkbox\");\n            }\n            headerBuilder.addChild('div', builder => builder\n                .addClass(`${this.cssPrefix}-header-expression`)\n                .text(i18n.getText('HeaderExpression')));\n            if (this.options.showColumnTitles !== false) {\n                headerBuilder\n                    .addChild('div', builder => builder\n                    .addClass(`${this.cssPrefix}-header-title`)\n                    .text(i18n.getText('HeaderTitle')));\n            }\n            this.headerElement = headerBuilder.toDOM();\n            minusHeight += this.headerElement.offsetHeight;\n        }\n        this.columnsBlock =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        // Only show add row in Full edit mode\n        if (this.options.showAddRow && this.options.editMode === ColumnsEditMode.Full) {\n            this.addRowElement =\n                domel('div', this.slot)\n                    .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n                    .addClass(getMobileCssClass())\n                    .addChild('a', builder => builder\n                    .attr('href', 'javascript:void(0)')\n                    .text(i18n.getText('CmdClickToAddColumn'))\n                    .on('click', (e) => {\n                    console.log(\"Add new column\");\n                    e.preventDefault();\n                    this.showEntitiesMenu({\n                        anchor: e.target,\n                        selectedIds: null,\n                        itemSelectedCallback: (data, items) => {\n                            if (data.id === '__AddAll__' && data.extra && Array.isArray(data.extra.ids)) {\n                                data.extra.ids.forEach(attrId => this.addNewColumn(attrId));\n                            }\n                            else {\n                                const attrid = data.id;\n                                this.addNewColumn(attrid);\n                            }\n                            return false;\n                        }\n                    });\n                }))\n                    .toDOM();\n            minusHeight += this.addRowElement.offsetHeight;\n        }\n        this.columnsBlock.style.maxHeight = `${this.slot.offsetHeight - minusHeight - 25}px`;\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Columns\n                && edata.part != QueryChangePart.Aggregation\n                && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const columns = edata.changee;\n                    const modifyColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const renderer = this.getColumnRenderer(column, colEl);\n                            if (renderer) {\n                                const newEl = renderer.render();\n                                if (isFocusInside) {\n                                    const focusElem = newEl.querySelector('a') || newEl.querySelector('.eqjs-column-button');\n                                    if (focusElem) {\n                                        focusElem.focus();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => modifyColumn(col));\n                    }\n                    else {\n                        modifyColumn(columns);\n                    }\n                    this.agjustHeaderVisibility();\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const columns = edata.changee;\n                    const addColumn = (column) => {\n                        const index = query.getColumns().indexOf(column);\n                        const newEl = this.addColumnElement(column, index);\n                        if (isFocusInside) {\n                            const focusElem = newEl.querySelector('a');\n                            if (focusElem) {\n                                try {\n                                    focusElem.focus();\n                                }\n                                catch (_a) {\n                                    //do nothing\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => addColumn(col));\n                    }\n                    else {\n                        addColumn(columns);\n                    }\n                    this.agjustHeaderVisibility();\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const columns = edata.changee;\n                    const deleteColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const next = colEl.nextSibling;\n                            const prev = colEl.previousSibling;\n                            this.columnsBlock.removeChild(colEl);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || this.addRowElement;\n                                const focusElem = focusCond.querySelector('a') || focusCond.querySelector('.eqjs-column-button');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    this.agjustHeaderVisibility();\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => deleteColumn(col));\n                    }\n                    else {\n                        deleteColumn(columns);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    showLandingSlot(pageX, pageY) {\n        const rowElems = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const rows = [];\n        for (let i = 0; i < rowElems.length; i++) {\n            const rowElem = rowElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            rows.push(rowElem);\n        }\n        if (rows.length === 0) {\n            this.landingIndex = 0;\n            this.columnsBlock.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        const firstRow = rows[0];\n        const rowHeight = firstRow.offsetHeight;\n        const absPos = getElementAbsolutePos(firstRow);\n        let newLandingIndex = (pageY > absPos.y + rowHeight / 2) ? Math.round((pageY - absPos.y + rowHeight / 2) / rowHeight) : 0;\n        if (newLandingIndex > rows.length) {\n            newLandingIndex = rows.length;\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < rows.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, rows[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n            this.landingSlot.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        if (typeof options.allowCustomExpressions !== 'undefined') {\n            this.context.options.allowCustomExpressions = options.allowCustomExpressions;\n        }\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        if (browserUtils.isMobileMode()) {\n            this.options.buttons = [\"menu\", \"sorting\"];\n            this.options.showHeader = false;\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.slot.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.slot.removeChild(this.progressBlock);\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    render() {\n        try {\n            this.renderBaseElements();\n            this.createEntitiesMenu();\n            this.createColumnMenus();\n            this.agjustHeaderVisibility();\n            domel(this.slot)\n                .removeClass(eqCssMobile)\n                .addClass(getMobileCssClass());\n            const query = this.context.getQuery();\n            const columns = query.getColumns();\n            for (let column of columns) {\n                this.columnsBlock.appendChild(this.renderColumn(column));\n            }\n        }\n        catch (err) {\n            let error = err;\n            this.context.throwError({\n                action: \"ColumnsPanel rendering\",\n                text: error.message,\n                sourceError: error\n            });\n        }\n    }\n    agjustHeaderVisibility() {\n        if (this.headerElement) {\n            const query = this.context.getQuery();\n            const columns = query.getColumns();\n            this.headerElement.style.display = (columns.length) ? '' : 'none';\n        }\n    }\n    renderColumn(column) {\n        const renderer = this.getColumnRenderer(column);\n        if (renderer)\n            return renderer.render();\n        return null;\n    }\n    toggleColumnPicked(column) {\n        let el;\n        let isActive;\n        if (column) {\n            el = this.columnsBlock.querySelector(`div[data-id=${column.id}]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.columnsBlock.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            domel(row)\n                .removeClass('active');\n            if (!this.options.alwaysShowButtons) {\n                domel(row)\n                    .data(\"show-buttons\", null);\n            }\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    addNewColumn(attrs, index) {\n        // Only allow adding columns in Full edit mode\n        if (this.options.editMode !== ColumnsEditMode.Full) {\n            return null;\n        }\n        this.getContext().getModel();\n        const query = this.getQuery();\n        if (Array.isArray(attrs)) {\n            let col = null;\n            let cols = [];\n            for (let i = 0; i < attrs.length; i++) {\n                col = query.addColumn({\n                    attributeId: attrs[i],\n                    index: index\n                }, true);\n                if (col) {\n                    cols.push(col);\n                }\n            }\n            query.fireChangedEvent({\n                part: QueryChangePart.Columns,\n                action: QueryChangeAction.Add,\n                changee: cols,\n                source: this\n            });\n            return cols;\n        }\n        else {\n            const col = query.addColumn({\n                attributeId: attrs,\n                index: index\n            });\n            return col;\n        }\n    }\n    //adds one column to the panel on the specified position\n    addColumnElement(column, index) {\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const newColBlock = this.renderColumn(column);\n        if (rows.length > 0) {\n            if (index < rows.length) {\n                this.columnsBlock.insertBefore(newColBlock, rows[index]);\n            }\n            else {\n                this.columnsBlock.appendChild(newColBlock);\n                this.scrollToBottom();\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(newColBlock);\n            this.scrollToBottom();\n        }\n        if (this.options.columnRenderedCallback) {\n            this.options.columnRenderedCallback(newColBlock);\n        }\n        return newColBlock;\n    }\n    scrollToBottom() {\n        this.columnsBlock.scrollTop = this.columnsBlock.scrollHeight - this.columnsBlock.clientHeight;\n    }\n    checkColumnsArray(cols) {\n        let len = cols.length;\n        const result = [];\n        for (let i = 0; i < len; i++) {\n            if (this.checkColumn(cols[i]))\n                result.push(cols[i]);\n        }\n        return result;\n    }\n    checkColumn(col) {\n        if (!this.options.allowDuplicates) {\n            const query = this.getQuery();\n            const columns = query.getColumns();\n            for (let i = 0; i < columns.length; i++) {\n                if ((col.expr.tag === ExprTag.EntityAttribute && columns[i].expr.tag === ExprTag.EntityAttribute\n                    || col.expr.tag === ExprTag.ParentEntityAttribute && columns[i].expr.tag === ExprTag.ParentEntityAttribute)\n                    && col.expr.value === columns[i].expr.value) {\n                    return null;\n                }\n            }\n        }\n        return col;\n    }\n    getColumnsBlock() {\n        return this.columnsBlock;\n    }\n    getColumnRenderer(column, slot) {\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return new ConstColumnRendererCP(this, column, slot);\n            case ExprTag.AggregateFunction:\n                return new AggrFuncColumnRendererCP(this, column, slot);\n            case ExprTag.CustomSql:\n                return new CustomSqlColumnRendererCP(this, column, slot);\n            default:\n                return new AttrColumnRendererCP(this, column, slot);\n        }\n    }\n    areCustomExpressionsAllowed() {\n        const query = this.getQuery();\n        return query.isEx() && this.getContext().options.allowCustomExpressions;\n    }\n    addAllColumnsToEntitiesList(list) {\n        const attrIds = list.filter(item => !item.isEntity).map(item => item.id);\n        if (attrIds.length > 0) {\n            list.unshift({\n                id: '__AddAll__',\n                text: i18n.getText('AddAllForEntityText'),\n                extra: {\n                    ids: attrIds\n                }\n            });\n        }\n        list.forEach(item => {\n            if (item.items) {\n                this.addAllColumnsToEntitiesList(item.items);\n            }\n        });\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false, attrPlacement: this.options.attrPlacement, sortEntities: this.options.sortEntities });\n        // add [Add all columns] items\n        if (this.options.showAddAllForEntity) {\n            this.addAllColumnsToEntitiesList(entitiesList);\n        }\n        const options = {\n            id: menuId,\n            items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight,\n            domWriteItemsId: this.options.domWriteItemsId\n        };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    getSortMenuList() {\n        return [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' }\n        ];\n    }\n    getMoveMenuList() {\n        return [\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n    }\n    createSortMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.getSortMenuList().concat(this.moveMenu.getItems());\n        const menuOptions = {\n            id: menuId,\n            \"items\": items,\n            domWriteItemsId: this.options.domWriteItemsId,\n            showSelected: true\n        };\n        utils.assign(menuOptions, this.options.menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    createMoveMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-MoveMenu';\n        }\n        const items = utils.createArrayFrom(this.getMoveMenuList());\n        if (this.options.allowHiddenColumns) {\n            items.push({ id: '---', text: '---' });\n            items.push({ id: 'IsHidden', text: i18n.getText('CmdHiddenColumn') });\n        }\n        const menuOptions = {\n            \"items\": items,\n            id: menuId,\n            domWriteItemsId: this.options.domWriteItemsId,\n            showSelected: true\n        };\n        utils.assign(menuOptions, this.options.menuOptions);\n        this.moveMenu = new PopupMenu(menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu.showMenu(menuOptions);\n    }\n    moveColumn(column, direction) {\n        // Only allow moving columns in Full or FixedList edit mode\n        if (this.options.editMode !== ColumnsEditMode.Full && this.options.editMode !== ColumnsEditMode.FixedList) {\n            return;\n        }\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        const index = columns.indexOf(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, 0);\n                    break;\n                case 'MoveUp':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index - 1);\n                    break;\n                case 'MoveDown':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index + 1);\n                    break;\n                case 'MoveBottom':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, columns.length - 1);\n                    break;\n            }\n        }\n    }\n    moveColumnCore(index1, index2) {\n        const query = this.getQuery();\n        if (!query)\n            return;\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const colToMove = rows[index1];\n        if (index2 == 0) {\n            this.columnsBlock.insertBefore(colToMove, this.columnsBlock[0]);\n        }\n        else if (index2 > 0 && index2 < rows.length - 1) {\n            if (index1 < index2) {\n                this.columnsBlock.insertBefore(colToMove, rows[index2 + 1]);\n            }\n            else {\n                this.columnsBlock.insertBefore(colToMove, rows[index2]);\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(colToMove);\n        }\n        query.moveColumn(index1, index2);\n        query.fireColumnsChangedEvent();\n    }\n    createColumnMenus() {\n        this.createMoveMenu();\n        if (this.options.allowSorting) {\n            this.createSortMenu();\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n}\n\nclass ColumnRendererCB {\n    constructor(panel, column, slot) {\n        this.functionMenu = null;\n        this.formatsMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.tapedTwice = false;\n        this.bar = panel;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-cb';\n    }\n    render() {\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            //to remove all event listeners\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.bar.isDraggable()) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSort\",\n                beforeDragStart: () => this.element.dispatchEvent(createBrowserEvent('mouseleave')),\n                onDragStart: (ev) => {\n                    this.hideButtons();\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    this.element.removeAttribute('style');\n                },\n                data: { column: this.column }\n            });\n        }\n        if (!this.column.isReadOnly()) {\n            this.createFunctionMenu();\n            this.createFormatsMenu();\n        }\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderCaptionBlock())\n            .addChildElement(this.renderSortingImage());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .addChildElement(this.renderButtonsBlock());\n        }\n        //start event listeners\n        builder\n            .on('mouseenter', this.onMouseEnter.bind(this))\n            .on('mouseleave', this.onMouseLeave.bind(this));\n        //end event listeners\n        if (this.bar.options.accentActiveColumn || browserUtils.isMobileMode()) {\n            builder\n                .on('touchstart click', this.onMouseClick.bind(this));\n        }\n        return this.element;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    isEditable() {\n        // Editable if enabled, not read-only, and editMode is All or FixedList (for title/sort/order)\n        return this.column.enabled && !this.column.isReadOnly() && (this.bar.options.editMode === ColumnsEditMode.Full || this.bar.options.editMode === ColumnsEditMode.FixedList);\n    }\n    renderButtonsBlock() {\n        // Only show delete/type buttons in All mode\n        const showDelete = this.bar.options.editMode === ColumnsEditMode.Full;\n        const showType = this.bar.options.editMode === ColumnsEditMode.Full;\n        return domel('div', this.element)\n            .addClass(`${eqCssPrefix}-column-buttonsBlock`, `${this.cssPrefix}-buttonsBlock`)\n            .addChildElement(this.renderSortingButton())\n            .addChildElement(showType ? this.renderColumnTypeButton() : null)\n            .addChildElement(this.renderColumnFormatButton())\n            .addChildElement(showDelete ? this.renderDeleteButton() : null)\n            .toDOM();\n    }\n    renderCaptionBlock() {\n        const caption = this.column.caption;\n        if (!this.isEditable()) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n                .addClass(getMobileCssClass())\n                .addChild('div', b => b\n                .title(caption)\n                .text(caption)\n                .attr('tabIndex', '0'))\n                .toDOM();\n        }\n        const tapHandler = (ev) => {\n            if (!this.tapedTwice) {\n                this.tapedTwice = true;\n                setTimeout(() => { this.tapedTwice = false; }, 300);\n            }\n        };\n        let isFocused = false;\n        domel(this.element).on('touchstart dblclick', ev => {\n            if (ev instanceof TouchEvent && !this.tapedTwice) {\n                tapHandler();\n                return true;\n            }\n            ev.stopPropagation();\n            isFocused = this.element.querySelector('a') == document.activeElement;\n            const inputEl = this.element.querySelector(`.${this.cssPrefix}-captionelement input`);\n            const aEl = this.element.querySelector(`.${this.cssPrefix}-captionelement a`);\n            if (inputEl) {\n                inputEl.style.width = `${this.element.clientWidth}px`;\n                aEl.style.display = 'none';\n                inputEl.style.removeProperty('display');\n                inputEl.focus();\n                this.element.setAttribute(eqDragManager.DRAG_DISABLED_ATTR, '');\n            }\n            return false;\n        }); //TO DO:add localization and input field);\n        return domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(getMobileCssClass())\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .title(this.column.caption)\n            .text(caption)\n            .on('keydown', e => {\n            const evt = e;\n            const isCtrlEnter = (evt.ctrlKey || evt.metaKey) && (evt.keyCode == 13 || evt.keyCode == 10);\n            if (isCtrlEnter && this.isColumnActive()) {\n                const clickEvent = document.createEvent('MouseEvents');\n                clickEvent.initEvent('dblclick', true, true);\n                this.element.dispatchEvent(clickEvent);\n                evt.stopPropagation();\n                return false;\n            }\n            return true;\n        }))\n            .addChild('input', builder => builder\n            .hide()\n            .value(this.column.caption)\n            .on('blur keydown', (ev) => {\n            let isEndEvent = false;\n            let save = true;\n            if (ev instanceof KeyboardEvent) {\n                // Enter\n                if (ev.keyCode === 13) {\n                    isEndEvent = true;\n                    //ESC\n                }\n                else if (ev.keyCode === 27) {\n                    isEndEvent = true;\n                    save = false;\n                }\n            }\n            else if (ev instanceof FocusEvent) {\n                isEndEvent = true;\n            }\n            if (isEndEvent) {\n                const inputEl = ev.target;\n                const aEl = inputEl.parentElement.querySelector('a');\n                if (aEl) {\n                    aEl.style.removeProperty('display');\n                    inputEl.style.display = 'none';\n                }\n                if (save && this.column.caption !== inputEl.value) {\n                    this.column.caption = inputEl.value;\n                    this.fireColumnChanged();\n                }\n                else {\n                    inputEl.value = this.column.caption;\n                }\n                this.element.removeAttribute(eqDragManager.DRAG_DISABLED_ATTR);\n                if (isFocused) {\n                    this.element.querySelector('a').focus();\n                }\n            }\n        }))\n            .toDOM();\n    }\n    renderSortingImage() {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass = sortButtonCssClass;\n        switch (this.column.sorting) {\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n        }\n        if (this.column.sorting == SortDirection.None) {\n            return null;\n        }\n        else {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortimage-placeholder`)\n                .addClass(getMobileCssClass())\n                .addChild('div', builder => builder\n                .addClass(`${this.cssPrefix}-img-sorting`, sortButtonDirectionCssClass)\n                .title(i18n.getText('ButtonSorting')))\n                .toDOM();\n        }\n    }\n    buttonSortingClickHandler(ev, anchor) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        const menu = this.getUIS() ? this.bar.sortMenu || this.bar.moveMenu : this.bar.moveMenu;\n        menu.showMenu({\n            anchor: anchor,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const strToSortDirection = (str) => {\n                    if (str == 'None') {\n                        return SortDirection.None;\n                    }\n                    else if (str == \"Ascending\") {\n                        return SortDirection.Ascending;\n                    }\n                    else if (str == \"Descending\") {\n                        return SortDirection.Descending;\n                    }\n                };\n                if (data.id == 'None' || data.id == \"Ascending\" || data.id == \"Descending\") {\n                    const query = this.bar.getQuery();\n                    this.column.sorting = strToSortDirection(data.id);\n                    this.column._sortIndex = query.getColumnSortIndex(this.column);\n                    this.fireColumnChanged();\n                }\n                else {\n                    this.bar.moveColumn(this.column, data.id);\n                }\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.leaveButtonBlock();\n                }\n            }\n        });\n        return false;\n    }\n    renderSortingButton() {\n        if (!this.isEditable()) {\n            return null;\n        }\n        const builder = domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-sortbutton`, `${eqCssPrefix}-column-sortbutton-none`)\n            .title(i18n.getText('ButtonSorting'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonSortingClickHandler(ev, builder.toDOM()))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } });\n        return builder.toDOM();\n    }\n    buttonDeleteClickHandler(ev) {\n        ev.stopPropagation();\n        const query = this.bar.getQuery();\n        query.removeColumn(this.column);\n        query.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column);\n        return false;\n    }\n    renderDeleteButton() {\n        // Only show delete in All mode\n        if (this.column.isReadOnly() || this.bar.options.editMode !== ColumnsEditMode.Full) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-delete`)\n            .title(i18n.getText('CmdDelete'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonDeleteClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    getClassesToAdd() {\n        let result = \"\";\n        result += this.column.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.column.enabled) {\n            result += this.column.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        return result;\n    }\n    buttonTypeClickHandler(ev) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        this.changeColumnTypeHandler(ev);\n        return false;\n    }\n    buttonFormatClickHandler(ev) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        this.changeFormatHandler(ev);\n        return false;\n    }\n    formatButtonIsShown() {\n        return this.bar.options.allowDisplayFormatChange !== false &&\n            this.bar\n                .getContext()\n                .getModel()\n                .getDisplayFormatsForType(this.column.getDataType()).length > 0;\n    }\n    changeFormatHandler(ev) {\n        const formats = this.bar\n            .getContext()\n            .getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        let itemId = '{0:__default}';\n        if (formats.filter(f => f.format == this.column.displayFormat).length > 0) {\n            itemId = this.column.displayFormat;\n        }\n        this.formatsMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: itemId,\n            itemSelectedCallback: (data, items) => {\n                if (data.id != itemId) {\n                    if (data.id == '{0:__default}') {\n                        this.column.displayFormat = '';\n                    }\n                    else {\n                        this.column.displayFormat = data.id;\n                    }\n                    this.column.fireChangedEvent();\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n    renderColumnTypeButton() {\n        // Only show type button in All mode\n        if (!this.isEditable() || this.bar.options.allowAggrColumns === false || this.bar.options.editMode !== ColumnsEditMode.Full) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-type`)\n            .title(i18n.getText('ButtonToAggr'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonTypeClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    renderColumnFormatButton() {\n        if (!this.isEditable() || !this.formatButtonIsShown()) {\n            return null;\n        }\n        return domel('div')\n            .addClass(`${eqCssPrefix}-column-button`, `${eqCssPrefix}-column-button-format`)\n            .title(i18n.getText('ButtonFormat'))\n            .attr('tabIndex', '0')\n            .on('touchstart click', (ev) => this.buttonFormatClickHandler(ev))\n            .on('keypress', evt => { if (evt.keyCode == 13) {\n            evt.target.click();\n        } })\n            .toDOM();\n    }\n    getUIS() {\n        return this.bar\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n    onMouseClick(ev) {\n        this.bar.toggleColumnPicked(this.column);\n        this.adjustButtonsVisibility();\n    }\n    onMouseEnter(e) {\n        if (browserUtils.isMobileMode())\n            return;\n        this.isMouseOverBlock = true;\n        this.enterButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    onMouseLeave(e) {\n        if (browserUtils.isMobileMode())\n            return;\n        this.isMouseOverBlock = false;\n        this.leaveButtonBlock();\n        e.stopPropagation();\n        return false;\n    }\n    isColumnActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        if (browserUtils.isMobileMode()) {\n            if (this.onHideButtonsMobile) {\n                this.onHideButtonsMobile();\n            }\n        }\n        else {\n            domel(this.element).data(\"show-buttons\", null);\n        }\n    }\n    showButtons() {\n        if (browserUtils.isMobileMode()) {\n            if (this.onShowButtonsMobile) {\n                this.onShowButtonsMobile();\n            }\n        }\n        else {\n            domel(this.element).data(\"show-buttons\", \"\");\n        }\n    }\n    adjustButtonsVisibility() {\n        if (this.bar.options.alwaysShowButtons\n            || ((this.bar.options.accentActiveColumn || browserUtils.isMobileMode())\n                && this.isColumnActive())) {\n            this.showButtons();\n        }\n        else {\n            this.hideButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (this.bar.options.alwaysShowButtons != true && (!this.isColumnActive() || this.bar.options.accentActiveColumn != true)) {\n            this.hideButtons();\n        }\n    }\n    createFunctionMenu() {\n        const items = [];\n        const funcs = this.bar.getContext().getModel().getAggrFunctions();\n        let funcAllowed = true;\n        let item = null;\n        const colDataType = this.column.getDataType();\n        let funcCaption;\n        for (const func of funcs) {\n            if (!func)\n                continue;\n            const toInclude = func.getAppliedTypesOrDefault().indexOf(colDataType) >= 0;\n            if (this.column.expr.func === func.id && !toInclude) {\n                funcAllowed = false;\n            }\n            if (toInclude) {\n                funcCaption = this.bar.getContext().getModel()\n                    .getAggrFunctionCaption(func.id);\n                item = {\n                    id: func.id,\n                    text: funcCaption\n                };\n                items.push(item);\n            }\n        }\n        if (!funcAllowed && items.length > 0) {\n            this.column.expr.func = items[0].id;\n        }\n        //Add \"Custom Expression\" menu\n        const columnsPanel = this.bar;\n        if (columnsPanel.areCustomExpressionsAllowed()) {\n            item = {\n                id: 'CustomSqlDivider',\n                text: '---'\n            };\n            items.push(item);\n            funcCaption = i18n.getText('CustomExpression');\n            item = {\n                id: 'CUSTOMSQL',\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.element.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n    createFormatsMenu() {\n        if (this.bar.options.allowDisplayFormatChange == false)\n            return;\n        let menuId = this.column.id;\n        if (menuId) {\n            menuId += '-FormatsMenu';\n        }\n        const items = this.getFormatsMenuItems();\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            showSelected: true,\n            domWriteItemsId: true //this.panel.options.domWriteItemsId\n        };\n        this.formatsMenu = new PopupMenu(menuOptions);\n    }\n    getFormatsMenuItems() {\n        const formats = this.bar.getContext().getModel()\n            .getDisplayFormatsForType(this.column.getDataType());\n        return [{ id: '{0:__default}', text: \"Default\" }]\n            .concat(formats.map(format => ({ id: format.format, text: i18n.getText(\"DisplayFormats\", format.name) || format.name })));\n    }\n}\n\nclass AttrColumnRendererCB extends ColumnRendererCB {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    baseExpressionItemSelectedCallback(data, item) {\n        const attrid = data.id;\n        const context = this.bar.getContext();\n        var attr = context.getModel().getAttributeById(attrid);\n        this.updateBaseAttr(attr);\n        this.column.caption = context.getDefaultColumnCaption(this.column);\n        this.fireColumnChanged();\n        return false;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n        this.column.expr.dataType = attr.dataType;\n    }\n    getUIS() {\n        const arg = this.column.expr.args[0];\n        if (arg) {\n            const model = this.bar.getContext().getModel();\n            return model.checkAttrProperty(arg.value, \"useInSorting\");\n        }\n        else {\n            return true;\n        }\n    }\n    changeTypeToCustomSql() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.CustomSql);\n        this.fireColumnChanged();\n    }\n    changeTypeToAggr(funcId) {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.AggregateFunction, { funcId: funcId });\n        this.fireColumnChanged();\n    }\n    changeColumnTypeHandler(ev) {\n        // Only allow type change in All mode\n        if (this.bar.options.editMode !== ColumnsEditMode.Full)\n            return;\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                if (data.id == \"CUSTOMSQL\") {\n                    this.changeTypeToCustomSql();\n                }\n                else {\n                    this.changeTypeToAggr(data.id);\n                }\n                return false;\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n                if (!this.isMouseOverBlock) {\n                    this.element.dispatchEvent(createBrowserEvent('mouseleave'));\n                }\n            }\n        });\n    }\n}\n\nclass AggrFuncColumnRendererCB extends AttrColumnRendererCB {\n    getClassesToAdd() {\n        return `${super.getClassesToAdd()} ${this.cssPrefix}-row ${this.cssPrefix}-row-column-aggr`;\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.classList.add('aggregated');\n            button.title = i18n.getText('ButtonToSimple');\n        }\n        return button;\n    }\n    updateBaseAttr(attr) {\n        this.column.expr.args[0].setValue(attr.id, true);\n        this.column.expr.baseAttrId = attr.id;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    changeColumnTypeHandler(ev) {\n        // Only allow type change in All mode\n        if (this.bar.options.editMode !== ColumnsEditMode.Full)\n            return;\n        this.changeTypeToSimple();\n    }\n}\n\n/**\n * Base class for editable column renderers for the ColumnsBar widgets.\n * It provides common functionality for rendering editable columns,\n * including handling column type changes and rendering buttons.\n */\nclass EditableColumnRendererCB extends ColumnRendererCB {\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr` + super.getClassesToAdd();\n    }\n    renderColumnTypeButton() {\n        const button = super.renderColumnTypeButton();\n        if (button) {\n            button.classList.add('aggregated');\n            button.title = i18n$1.getText('ButtonToSimple');\n        }\n        return button;\n    }\n    changeTypeToSimple() {\n        const query = this.column.getQuery();\n        query.changeColumnType(this.column, ExprTag.EntityAttribute);\n        this.fireColumnChanged();\n    }\n    getColumnValue() {\n        return '';\n    }\n    setColumnValue(value) {\n    }\n    getUIS() {\n        return true;\n    }\n    changeColumnTypeHandler(ev) {\n        // Only allow type change in All mode\n        if (this.bar.options.editMode !== ColumnsEditMode.Full)\n            return;\n        this.changeTypeToSimple();\n    }\n}\nclass CustomSqlColumnRendererCB extends EditableColumnRendererCB {\n    get columnEnabled() {\n        return this.bar.areCustomExpressionsAllowed() ? this.column.enabled : false;\n    }\n    set columnEnabled(value) {\n        if (this.bar.areCustomExpressionsAllowed()) {\n            this.column.enabled = value;\n        }\n        else {\n            this.column.enabled = false;\n        }\n    }\n    getColumnValue() {\n        return this.column.expr.sql;\n    }\n    setColumnValue(value) {\n        this.column.expr.sql = value;\n    }\n    getDefaultValue() {\n        return this.column.expr.sql;\n    }\n}\nclass ConstColumnRendererCB extends EditableColumnRendererCB {\n    getColumnValue() {\n        return this.column.expr.value;\n    }\n    setColumnValue(value) {\n        this.column.expr.setValue(value);\n    }\n    getDefaultValue() {\n        return this.column.expr.value;\n    }\n}\n\nclass ColumnsBar extends Widget {\n    get cssPrefix() {\n        return \"eqjs-cb\";\n    }\n    constructor(slot, customQuery) {\n        super(slot);\n        this.options = {\n            isSubQuery: false,\n            activeColumn: null,\n            showAddRow: true,\n            showHeader: true,\n            showColumnTitles: true,\n            allowAggrColumns: true,\n            allowDuplicates: true,\n            allowCustomExpressions: false,\n            allowSorting: true,\n            alwaysShowButtons: false,\n            accentActiveColumn: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n            attrPlacement: 0,\n            sortEntities: false,\n            columnRenderedCallback: null,\n            customExpressionText: 0,\n            showAddAllForEntity: false,\n            editMode: ColumnsEditMode.Full\n        };\n        this.landingSlot = domel('div')\n            .addClass(`${eqCssPrefix}-highlight`)\n            .toDOM();\n        this.landingIndex = -1;\n        this.sortMenuList = [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' }\n        ];\n        this.moveMenuList = [\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-panel`)\n            .addClass(getMobileCssClass());\n        this.group = WidgetGroup.Query;\n        this.customQuery = customQuery;\n    }\n    getWidgetType() {\n        return 'columnsBar';\n    }\n    isDraggable() {\n        // Only allow drag-drop in All and FixedList modes\n        return this.options.allowDragDrop && this.options.editMode > ColumnsEditMode.ReadOnly;\n    }\n    /**\n     * Gets or sets the current edit mode. When setting, automatically refreshes the widget.\n     */\n    get editMode() {\n        return this.options.editMode || ColumnsEditMode.Full;\n    }\n    set editMode(value) {\n        if (this.options.editMode !== value) {\n            this.options.editMode = value;\n            this.refresh();\n        }\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        // Only allow drag-drop in All and FixedList modes\n        if (this.isDraggable()) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttrSort\"],\n                onDragEnter: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (this.landingIndex >= 0) {\n                        const query = this.getQuery();\n                        const columns = query.getColumns();\n                        const index = columns.indexOf(ev.data.column);\n                        this.moveColumnCore(index, this.landingIndex);\n                    }\n                    else {\n                        ev.item.element.removeAttribute('style');\n                    }\n                }\n            });\n        }\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Columns\n                && edata.part != QueryChangePart.Aggregation\n                && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const columns = edata.changee;\n                    const modifyColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const newEl = this.renderColumn(column, colEl);\n                            if (isFocusInside) {\n                                const focusElem = newEl.querySelector('a');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => modifyColumn(col));\n                    }\n                    else {\n                        modifyColumn(columns);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const columns = edata.changee;\n                    const addColumn = (column) => {\n                        const index = query.getColumns().indexOf(column);\n                        this.addColumnElement(column, index);\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => addColumn(col));\n                    }\n                    else {\n                        addColumn(columns);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const columns = edata.changee;\n                    const deleteColumn = (column) => {\n                        const colEl = this.columnsBlock.querySelector(`div[data-id='${column.id}']`);\n                        if (colEl) {\n                            const next = colEl.nextSibling;\n                            const prev = colEl.previousSibling;\n                            this.columnsBlock.removeChild(colEl);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || this.addRowButton;\n                                const focusElem = focusCond.querySelector('a');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(columns)) {\n                        columns.forEach((col) => deleteColumn(col));\n                    }\n                    else {\n                        deleteColumn(columns);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    getQuery() {\n        return this.customQuery\n            ? this.customQuery\n            : this.getContext().getQuery();\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    setOptions(options) {\n        this.options = utils.assignDeep(this.options, options);\n        if (typeof options.allowCustomExpressions !== 'undefined') {\n            this.context.options.allowCustomExpressions = options.allowCustomExpressions;\n        }\n    }\n    showLandingSlot(pageX, pageY) {\n        const elements = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const columnSlots = [];\n        for (let i = 0; i < elements.length; i++) {\n            if (elements[i].style.display !== 'none') {\n                columnSlots.push(elements[i]);\n            }\n        }\n        if (columnSlots.length === 0) {\n            this.landingIndex = 0;\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth\n            && pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let i = 0; i < columnSlots.length; i++) {\n            const colSlot = columnSlots[i];\n            const absPos = getElementAbsolutePos(colSlot);\n            const colWidth = colSlot.offsetWidth;\n            const colHeight = colSlot.offsetHeight;\n            const paddingWidth = 0.2 * colWidth;\n            const paddingHeight = 2;\n            if (pageX >= absPos.x + paddingWidth && pageX <= absPos.x + colWidth - paddingWidth\n                && pageY >= absPos.y + paddingHeight && pageY <= absPos.y + colHeight - paddingHeight) {\n                if (pageX > landingPos.x)\n                    newLandingIndex = i + 1;\n                else\n                    newLandingIndex = i;\n                break;\n            }\n        }\n        if (newLandingIndex != this.landingIndex || this.landingSlot.parentElement) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex <= 0) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[0]);\n            }\n            if (this.landingIndex < columnSlots.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n    onProcessStartCore() {\n    }\n    onProcessEndCore() {\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        // if (this.addRowButton) {\n        //     this.addRowButton.innerHTML = \"\";\n        //     this.addRowButton.className = \"\";\n        // }\n        // this.columnsBlock.innerHTML = \"\";\n        this.slot.innerHTML = '';\n    }\n    renderAddRowButton() {\n        domel(this.addRowButton)\n            .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n            .addClass(getMobileCssClass())\n            .title(i18n.getText('CmdClickToAddColumn'))\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            e.preventDefault();\n            this.showEntitiesMenu({\n                anchor: e.target,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    if (data.id === '__AddAll__' && data.extra && Array.isArray(data.extra.ids)) {\n                        data.extra.ids.forEach(attrId => this.addNewColumn(attrId));\n                    }\n                    else {\n                        const attrid = data.id;\n                        this.addNewColumn(attrid);\n                    }\n                    return false;\n                }\n            });\n        }));\n        if (browserUtils.isMobileMode()) {\n            domel(this.columnsBlock)\n                .addChildElement(this.addRowButton);\n        }\n    }\n    render() {\n        this.createEntitiesMenu();\n        if (this.options.allowSorting) {\n            this.createSortMenu();\n        }\n        this.createMoveMenu();\n        this.columnsBlock =\n            domel('div')\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        // Only show add row in All mode\n        if (this.options.showAddRow && this.options.editMode === ColumnsEditMode.Full) {\n            this.addRowButton =\n                domel('div')\n                    .toDOM();\n            if (browserUtils.isMobileMode()) {\n                domel(this.columnsBlock)\n                    .addChildElement(this.addRowButton);\n            }\n            else {\n                domel(this.slot)\n                    .addChildElement(this.addRowButton);\n            }\n            this.renderAddRowButton();\n        }\n        domel(this.slot)\n            .addChildElement(this.columnsBlock)\n            .addChildElement(this.renderColumnButtonsBlockMobile());\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        columns.forEach((column, index) => {\n            const slot = this.renderColumn(column);\n            this.columnsBlock.appendChild(slot);\n        });\n    }\n    renderColumnButtonsBlockMobile() {\n        this.columnButtonsBlockMobileArrow = domel('i').toDOM();\n        this.columnButtonsBlockMobile = domel('div')\n            .addClass(`${this.cssPrefix}-column-buttonsBlock`)\n            .addClass(getMobileCssClass())\n            .addChildElement(this.columnButtonsBlockMobileArrow)\n            .hide()\n            .toDOM();\n        this.buttonsBlockSortingButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-sortbutton-none`)\n            .toDOM();\n        domel(this.buttonsBlockSortingButton)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonSortingClickHandler.call(this.currentColumnRenderer, ev, this.buttonsBlockSortingButton);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        });\n        this.buttonsBlockTypeButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-type`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonTypeClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        this.buttonsBlockFormatButton = domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-format`)\n            .on('touchstart click', (ev) => {\n            ev.stopPropagation();\n            this.currentColumnRenderer.buttonFormatClickHandler.call(this.currentColumnRenderer, ev);\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n            return false;\n        })\n            .toDOM();\n        if (this.options.editMode == ColumnsEditMode.Full) {\n            this.buttonsBlockDeleteButton = domel('div', this.columnButtonsBlockMobile)\n                .addClass(`${this.cssPrefix}-column-button`, `${this.cssPrefix}-column-button-delete`)\n                .on('touchstart click', (ev) => {\n                ev.stopPropagation();\n                this.currentColumnRenderer.buttonDeleteClickHandler.call(this.currentColumnRenderer, ev);\n                this.toggleColumnPicked(null);\n                this.hideColumnButtonsMobile();\n                return false;\n            })\n                .toDOM();\n        }\n        domel('div', this.columnButtonsBlockMobile)\n            .addClass(`${this.cssPrefix}-column-button-close-block`)\n            .on('touchstart click', () => {\n            this.toggleColumnPicked(null);\n            this.hideColumnButtonsMobile();\n        });\n        return this.columnButtonsBlockMobile;\n    }\n    showColumnButtonsMobile(column, columnRenderer, columnElement) {\n        this.currentActiveColumn = column;\n        this.currentColumnRenderer = columnRenderer;\n        //calculate coordinates\n        const rect = columnElement.getBoundingClientRect();\n        const top = columnElement.offsetTop;\n        const left = columnElement.offsetLeft;\n        domel(this.columnButtonsBlockMobileArrow)\n            .setStyle('left', (left + rect.width / 2).toString() + 'px');\n        if (rect.top > 100) {\n            domel(this.columnButtonsBlockMobile)\n                .removeClass('show-below')\n                .setStyle('top', (top - rect.height).toString() + 'px');\n        }\n        else {\n            domel(this.columnButtonsBlockMobile)\n                .addClass('show-below')\n                .setStyle('top', (top + rect.height).toString() + 'px');\n        }\n        //show/hide separate buttons\n        if (column.enabled && !column.isReadOnly() && this.options.editMode > ColumnsEditMode.ReadOnly) {\n            domel(this.buttonsBlockSortingButton).show();\n            domel(this.buttonsBlockTypeButton).show();\n            if (columnRenderer.formatButtonIsShown()) {\n                domel(this.buttonsBlockFormatButton).show();\n            }\n            else {\n                domel(this.buttonsBlockFormatButton).hide();\n            }\n        }\n        else {\n            domel(this.buttonsBlockSortingButton).hide();\n            domel(this.buttonsBlockTypeButton).hide();\n        }\n        //show\n        if (column.isReadOnly() || this.options.editMode == ColumnsEditMode.ReadOnly) {\n            domel(this.columnButtonsBlockMobile).hide();\n        }\n        else {\n            domel(this.columnButtonsBlockMobile).show();\n        }\n    }\n    hideColumnButtonsMobile() {\n        domel(this.columnButtonsBlockMobile).hide();\n    }\n    renderColumn(column, elem) {\n        const renderer = this.getColumnRenderer(column, elem);\n        if (renderer) {\n            const columnSlot = renderer.render();\n            renderer.onShowButtonsMobile = () => {\n                this.showColumnButtonsMobile(column, renderer, columnSlot);\n            };\n            renderer.onHideButtonsMobile = () => {\n                this.hideColumnButtonsMobile();\n            };\n            return columnSlot;\n        }\n        return null;\n    }\n    getColumnRenderer(column, slot) {\n        switch (column.expr.tag) {\n            case ExprTag.Constant:\n                return new ConstColumnRendererCB(this, column, slot);\n            case ExprTag.AggregateFunction:\n                return new AggrFuncColumnRendererCB(this, column, slot);\n            case ExprTag.CustomSql:\n                return new CustomSqlColumnRendererCB(this, column, slot);\n            default:\n                return new AttrColumnRendererCB(this, column, slot);\n        }\n    }\n    addNewColumn(attrs, index) {\n        this.getContext().getModel();\n        const query = this.getQuery();\n        if (Array.isArray(attrs)) {\n            let col = null;\n            let cols = [];\n            for (let i = 0; i < attrs.length; i++) {\n                col = query.addColumn({\n                    attributeId: attrs[i],\n                    index: index\n                }, true);\n                if (col) {\n                    cols.push(col);\n                }\n            }\n            return cols;\n        }\n        else {\n            const col = query.addColumn({\n                attributeId: attrs,\n                index: index\n            });\n            return col;\n        }\n    }\n    toggleColumnPicked(column) {\n        let el;\n        let isActive;\n        if (column) {\n            el = this.columnsBlock.querySelector(`div[data-id=${column.id}]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.columnsBlock.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            domel(row)\n                .removeClass('active')\n                .data(\"show-buttons\", null);\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    //adds one column to the bar on the specified position\n    addColumnElement(column, index) {\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const newColBlock = this.renderColumn(column);\n        if (rows.length > 0) {\n            if (index < rows.length - 1) {\n                this.columnsBlock.insertBefore(newColBlock, rows[index]);\n            }\n            else {\n                this.columnsBlock.appendChild(newColBlock);\n            }\n        }\n        else {\n            this.columnsBlock.appendChild(newColBlock);\n        }\n        if (this.options.columnRenderedCallback) {\n            this.options.columnRenderedCallback(newColBlock);\n        }\n    }\n    checkColumnsArray(cols) {\n        let len = cols.length;\n        const result = [];\n        for (let i = 0; i < len; i++) {\n            if (this.checkColumn(cols[i]))\n                result.push(cols[i]);\n        }\n        return result;\n    }\n    checkColumn(col) {\n        if (!this.options.allowDuplicates) {\n            const query = this.getQuery();\n            const columns = query.getColumns();\n            const colJson = JSON.stringify(col.expr);\n            for (let i = 0; i < columns.length; i++) {\n                const qcolJson = JSON.stringify(columns[i].expr);\n                if (qcolJson === colJson) {\n                    return null;\n                }\n            }\n        }\n        return col;\n    }\n    getColumnsBlock() {\n        return this.columnsBlock;\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu && this.entitiesMenu.showMenu(menuOptions);\n    }\n    addAllColumnsToEntitiesList(list) {\n        const attrIds = list.filter(item => !item.isEntity).map(item => item.id);\n        if (attrIds.length > 0) {\n            list.unshift({\n                id: '__AddAll__',\n                text: i18n.getText('AddAllForEntityText'),\n                extra: {\n                    ids: attrIds\n                }\n            });\n        }\n        list.forEach(item => {\n            if (item.items) {\n                this.addAllColumnsToEntitiesList(item.items);\n            }\n        });\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false, attrPlacement: this.options.attrPlacement, sortEntities: this.options.sortEntities });\n        // add [Add all columns] items\n        if (this.options.showAddAllForEntity) {\n            this.addAllColumnsToEntitiesList(entitiesList);\n        }\n        const options = { items: entitiesList, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    createSortMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.sortMenuList.concat(this.moveMenuList);\n        const menuOptions = { \"items\": items, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(menuOptions, this.options.menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    createMoveMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-MoveMenu';\n        }\n        const items = this.moveMenuList;\n        const menuOptions = { \"items\": items, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(menuOptions, this.options.menuOptions);\n        this.moveMenu = new PopupMenu(menuOptions);\n        menuOptions.searchBoxAlwaysShown = false;\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getColumns();\n        const index = columns.indexOf(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, 0);\n                    break;\n                case 'MoveUp':\n                    if (index == 0) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index - 1);\n                    break;\n                case 'MoveDown':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, index + 1);\n                    break;\n                case 'MoveBottom':\n                    if (index == columns.length - 1) {\n                        return;\n                    }\n                    this.moveColumnCore(index, columns.length - 1);\n                    break;\n            }\n        }\n    }\n    moveColumnCore(index1, index2) {\n        const query = this.getQuery();\n        if (!query)\n            return;\n        const rows = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const colToMove = rows[index1];\n        if (index2 <= 0) {\n            this.columnsBlock.insertBefore(colToMove, this.columnsBlock[0]);\n        }\n        else if (index2 < rows.length) {\n            this.columnsBlock.insertBefore(colToMove, rows[index2]);\n        }\n        else {\n            this.columnsBlock.appendChild(colToMove);\n        }\n        query.moveColumn(index1, index2);\n        query.fireColumnsChangedEvent(QueryChangeAction.All);\n    }\n    areCustomExpressionsAllowed() {\n        const query = this.getQuery();\n        return query.isEx() && this.getContext().options.allowCustomExpressions;\n    }\n}\nColumnsBar.globalCounter = 0;\n\nclass ColumnRendererSB {\n    constructor(bar, column, slot) {\n        this.functionMenu = null;\n        this.isMouseOverBlock = false;\n        this.keepShowingButtons = false;\n        this.bar = bar;\n        this.column = column;\n        this.element = slot;\n    }\n    get cssPrefix() {\n        return 'eqjs-sb';\n    }\n    render() {\n        const builder = domel('div');\n        builder.data('id', this.column.id);\n        if (this.element) {\n            //to remove all event listeners\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        if (this.bar.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: this.element,\n                scope: \"entityAttrSortSB\",\n                beforeDragStart: () => this.element.dispatchEvent(createBrowserEvent('mouseleave')),\n                onDragStart: (ev) => {\n                    this.element.style.display = 'none';\n                    ev.dropEffect = DropEffect.Allow;\n                },\n                onDragEnd: (ev) => {\n                    this.element.removeAttribute('style');\n                },\n                data: { column: this.column }\n            });\n        }\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderCaptionBlock());\n        if (this.isEditable()) {\n            builder\n                .addChildElement(this.renderSortingButton());\n        }\n        return this.element;\n    }\n    fireColumnChanged() {\n        this.column.fireChangedEvent();\n    }\n    refresh() {\n        this.render();\n    }\n    getAttribute() {\n        const model = this.bar.getContext().getModel();\n        return model.getAttributeById(this.column.expr.value);\n    }\n    isEditable() {\n        return this.column.enabled && !this.column.isReadOnly();\n    }\n    renderCaptionBlock() {\n        function getArrow(sd) {\n            switch (sd) {\n                case SortDirection.Ascending:\n                    return ' ↑';\n                case SortDirection.Descending:\n                    return ' ↓';\n                default:\n                    return '';\n            }\n        }\n        let text = this.column.caption;\n        if (!this.isEditable()) {\n            text += getArrow(this.column.sorting);\n        }\n        return domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-captionelement`)\n            .addClass(getMobileCssClass())\n            .addChild('div', b => b\n            .title(this.column.caption)\n            .text(text))\n            .toDOM();\n    }\n    renderSortingButton() {\n        const sortButtonCssClass = `${eqCssPrefix}-column-sortbutton`;\n        let sortButtonDirectionCssClass = sortButtonCssClass;\n        switch (this.column.sorting) {\n            case SortDirection.None:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-none`;\n                break;\n            case SortDirection.Ascending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-asc`;\n                break;\n            case SortDirection.Descending:\n                sortButtonDirectionCssClass = `${sortButtonCssClass}-desc`;\n                break;\n        }\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-colelement`, `${this.cssPrefix}-sortimage-placeholder`)\n            .addClass(getMobileCssClass())\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-img-sorting`, sortButtonDirectionCssClass)\n            .title(i18n.getText('ButtonSorting')))\n            .on('touchstart click', (ev) => this.buttonSortingClickHandler(ev, builder.toDOM()));\n        return builder.toDOM();\n    }\n    buttonSortingClickHandler(ev, anchor) {\n        ev.stopPropagation();\n        this.keepShowingButtons = true;\n        const menu = this.bar.sortMenu;\n        menu.showMenu({\n            anchor: anchor,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const strToSortDirection = (str) => {\n                    if (str == 'None') {\n                        return SortDirection.None;\n                    }\n                    else if (str == \"Ascending\") {\n                        return SortDirection.Ascending;\n                    }\n                    else if (str == \"Descending\") {\n                        return SortDirection.Descending;\n                    }\n                };\n                if (data.id == 'None' || data.id == \"Ascending\" || data.id == \"Descending\") {\n                    const query = this.bar.getContext().getQuery();\n                    if (this.column.isJustSorted() && data.id == 'None') {\n                        query.removeColumn(this.column);\n                        query.fireColumnsChangedEvent(QueryChangeAction.Delete, this.column, true);\n                    }\n                    else {\n                        this.column.sorting = strToSortDirection(data.id);\n                        this.column._sortIndex = query.getColumnSortIndex(this.column);\n                        this.fireColumnChanged();\n                    }\n                }\n                else {\n                    this.bar.moveColumn(this.column, data.id);\n                }\n            },\n            menuClosedCallback: () => {\n                this.keepShowingButtons = false;\n            }\n        });\n        return false;\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-row ${this.cssPrefix}-row-column-entattr`;\n    }\n    getUIS() {\n        return this.bar\n            .getContext().getModel()\n            .checkAttrProperty(this.column.expr.value, \"useInSorting\");\n    }\n}\n\nclass SortingBar extends Widget {\n    get cssPrefix() {\n        return \"eqjs-sb\";\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            showAddRow: true,\n            allowDragDrop: true,\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                adjustHeight: true,\n                itemRenderedCallback: null\n            },\n        };\n        this.sortMenuList = [\n            { id: 'None', text: i18n.getText('CmdNotSorted') },\n            { id: 'Ascending', text: i18n.getText('CmdAscending') },\n            { id: 'Descending', text: i18n.getText('CmdDescending') },\n            { id: '---', text: '---' },\n            { id: 'MoveTop', text: i18n.getText('CmdMoveToFirst') },\n            { id: 'MoveUp', text: i18n.getText('CmdMoveToPrev') },\n            { id: 'MoveDown', text: i18n.getText('CmdMoveToNext') },\n            { id: 'MoveBottom', text: i18n.getText('CmdMoveToLast') }\n        ];\n        this.landingSlot = domel('div')\n            .addClass(`${eqCssPrefix}-highlight`)\n            .toDOM();\n        this.landingIndex = -1;\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-panel`)\n            .addClass(getMobileCssClass());\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'sortingBar';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        if (options.attrElementFormat) {\n            this.context.options.attributeFormat = options.attrElementFormat;\n        }\n        if (options.titleElementFormat) {\n            this.context.options.columnTitleFormat = options.titleElementFormat;\n        }\n        this.destroyCore();\n        this.attachQueryObserver();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttrSortSB\"],\n                onDragEnter: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (container, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.hideLandingSlot();\n                },\n                onDrop: (container, ev) => {\n                    if (this.landingIndex >= 0) {\n                        const query = this.getQuery();\n                        query.setColumnSortIndex(ev.data.column, this.landingIndex);\n                        query.fireColumnsChangedEvent(QueryChangeAction.All);\n                    }\n                    else {\n                        ev.item.element.removeAttribute('style');\n                    }\n                }\n            });\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.SortingColumns\n                && edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            this.refresh();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    getModel() {\n        return this.getContext().getModel();\n    }\n    destroyCore() {\n        this.detachQueryObserver();\n        this.clear();\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    renderAddRowButton() {\n        domel(this.addRowButton)\n            .addClass(`${eqCssPrefix}-addrow`, `${this.cssPrefix}-addrow`, `${eqCssPrefix}-addrow-empty`)\n            .addClass(getMobileCssClass())\n            .title(i18n.getText('CmdClickToAddColumn'))\n            .addChild('a', builder => builder\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            e.preventDefault();\n            this.showEntitiesMenu({\n                anchor: e.target,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrid = data.id;\n                    this.addNewColumn(attrid);\n                    return false;\n                }\n            });\n        }));\n        if (browserUtils.isMobileMode()) {\n            domel(this.columnsBlock)\n                .addChildElement(this.addRowButton);\n        }\n    }\n    showEntitiesMenu(menuOptions) {\n        this.entitiesMenu.showMenu(menuOptions);\n    }\n    createEntitiesMenu() {\n        const model = this.getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: false, addUIS: true });\n        const options = { items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    createSortMenu() {\n        const model = this.getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-SortMenu';\n        }\n        const items = this.sortMenuList;\n        const menuOptions = { \"items\": items, id: menuId };\n        menuOptions.searchBoxAlwaysShown = false;\n        this.sortMenu = new PopupMenu(menuOptions);\n    }\n    render() {\n        this.createEntitiesMenu();\n        this.createSortMenu();\n        this.columnsBlock =\n            domel('div')\n                .addClass(`${this.cssPrefix}-columns`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        if (this.options.showAddRow) {\n            this.addRowButton =\n                domel('div')\n                    .toDOM();\n            if (browserUtils.isMobileMode()) {\n                domel(this.columnsBlock)\n                    .addChildElement(this.addRowButton);\n            }\n            else {\n                domel(this.slot)\n                    .addChildElement(this.addRowButton);\n            }\n            this.renderAddRowButton();\n        }\n        domel(this.slot)\n            .addChildElement(this.columnsBlock);\n        const query = this.getQuery();\n        const columns = query.getSortedColumns(); // .getColumns().concat(query.getJustSortedColumns());\n        columns.forEach((column, index) => {\n            const slot = this.renderColumn(column);\n            this.columnsBlock.appendChild(slot);\n        });\n    }\n    addNewColumn(attrId) {\n        this.getModel();\n        const query = this.getQuery();\n        const col = query.addColumn({\n            attributeId: attrId,\n            justsorted: true,\n            sorting: SortDirection.Ascending\n        }, true);\n        query.fireChangedEvent({\n            part: QueryChangePart.SortingColumns,\n            action: QueryChangeAction.Add,\n            changee: col,\n            source: this\n        });\n        return col;\n    }\n    renderColumn(column, elem) {\n        const renderer = new ColumnRendererSB(this, column, elem);\n        if (renderer) {\n            const columnSlot = renderer.render();\n            return columnSlot;\n        }\n        return null;\n    }\n    clear() {\n        this.slot.innerHTML = '';\n    }\n    moveColumn(column, direction) {\n        const query = this.getQuery();\n        const columns = query.getSortedColumns();\n        const index = query.getColumnSortIndex(column);\n        if (index >= 0) {\n            switch (direction) {\n                case 'MoveTop':\n                    query.setColumnSortIndex(column, 0);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveUp':\n                    query.setColumnSortIndex(column, index > 0 ? index - 1 : 0);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveDown':\n                    query.setColumnSortIndex(column, index < columns.length - 1 ? index + 1 : columns.length - 1);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n                case 'MoveBottom':\n                    query.setColumnSortIndex(column, columns.length - 1);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.SortingColumns,\n                        action: QueryChangeAction.Modify,\n                        source: this\n                    });\n                    break;\n            }\n        }\n    }\n    showLandingSlot(pageX, pageY) {\n        const elements = this.columnsBlock.querySelectorAll(`[class*=${this.cssPrefix}-row]`);\n        const columnSlots = [];\n        for (let i = 0; i < elements.length; i++) {\n            if (elements[i].style.display !== 'none') {\n                columnSlots.push(elements[i]);\n            }\n        }\n        if (columnSlots.length === 0) {\n            this.landingIndex = 0;\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth\n            && pageY >= landingPos.y && pageY <= landingPos.y + this.landingSlot.offsetHeight) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let i = 0; i < columnSlots.length; i++) {\n            const colSlot = columnSlots[i];\n            const absPos = getElementAbsolutePos(colSlot);\n            const colWidth = colSlot.offsetWidth;\n            const colHeight = colSlot.offsetHeight;\n            const paddingWidth = 0.2 * colWidth;\n            const paddingHeight = 2;\n            if (pageX >= absPos.x + paddingWidth && pageX <= absPos.x + colWidth - paddingWidth\n                && pageY >= absPos.y + paddingHeight && pageY <= absPos.y + colHeight - paddingHeight) {\n                if (pageX > landingPos.x)\n                    newLandingIndex = i + 1;\n                else\n                    newLandingIndex = i;\n                break;\n            }\n        }\n        if (newLandingIndex != this.landingIndex || this.landingSlot.parentElement) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex <= 0) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[0]);\n            }\n            if (this.landingIndex < columnSlots.length) {\n                this.columnsBlock.insertBefore(this.landingSlot, columnSlots[this.landingIndex]);\n            }\n            else {\n                this.columnsBlock.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n}\n\n/**\n * Represents parts of Query Panel which can be editable\n */\nvar QPEditablePart;\n(function (QPEditablePart) {\n    QPEditablePart[QPEditablePart[\"None\"] = 0] = \"None\";\n    QPEditablePart[QPEditablePart[\"Value\"] = 1] = \"Value\";\n    QPEditablePart[QPEditablePart[\"Operator\"] = 2] = \"Operator\";\n    QPEditablePart[QPEditablePart[\"Attribute\"] = 4] = \"Attribute\";\n    QPEditablePart[QPEditablePart[\"Addition\"] = 8] = \"Addition\";\n    QPEditablePart[QPEditablePart[\"Removal\"] = 16] = \"Removal\";\n    QPEditablePart[QPEditablePart[\"All\"] = 255] = \"All\";\n    QPEditablePart[QPEditablePart[\"NoAddition\"] = -9] = \"NoAddition\";\n    QPEditablePart[QPEditablePart[\"NoRemoval\"] = -17] = \"NoRemoval\";\n    QPEditablePart[QPEditablePart[\"FixedConditionList\"] = 3] = \"FixedConditionList\";\n})(QPEditablePart || (QPEditablePart = {}));\n\nclass TextRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, text, slot) {\n        this.panel = panel;\n        this.text = text;\n        this.element = slot || domel('div').toDOM();\n    }\n    refresh() {\n        this.render();\n    }\n    render() {\n        domel(this.element)\n            .html('')\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChild('span', builder => builder\n            .text(this.text)\n            .title(this.text))\n            .toDOM();\n        return this.element;\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement`;\n    }\n}\n\nvar ConditionAction;\n(function (ConditionAction) {\n    ConditionAction[ConditionAction[\"AddCondition\"] = 0] = \"AddCondition\";\n    ConditionAction[ConditionAction[\"AddGroup\"] = 1] = \"AddGroup\";\n    ConditionAction[ConditionAction[\"Enable\"] = 2] = \"Enable\";\n    ConditionAction[ConditionAction[\"Delete\"] = 4] = \"Delete\";\n    ConditionAction[ConditionAction[\"Menu\"] = 5] = \"Menu\";\n    ConditionAction[ConditionAction[\"Parameterized\"] = 6] = \"Parameterized\";\n    ConditionAction[ConditionAction[\"InJoin\"] = 7] = \"InJoin\";\n})(ConditionAction || (ConditionAction = {}));\nclass ConditionRenderer {\n    constructor(panel, condition, slot) {\n        this.panel = panel;\n        this.condition = condition;\n        this.element = slot || domel('div').toDOM();\n    }\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    refresh() {\n        this.render();\n    }\n    clear() {\n        if (this.element) {\n            this.element.className = '';\n            this.element.removeAttribute('data-id');\n            this.element.removeAttribute('style');\n            domel(this.element)\n                .html('');\n        }\n    }\n    render(autoAppear) {\n        this.clear();\n        //this.preRender();\n        this.coreRender(autoAppear);\n        if (this.panel.options.onConditionRendered) {\n            this.panel.options.onConditionRendered(this.condition, this.element);\n        }\n        return this.element;\n    }\n    isEditable() {\n        return this.condition.enabled && !this.condition.isReadOnly()\n            && !(this.condition.isGroup() && this.panel.isFixed());\n    }\n}\nclass SimpleConditionRenderer extends ConditionRenderer {\n    getClassesToAdd() {\n        let result = `${this.cssPrefix}-row ${this.cssPrefix}-row-condition`;\n        result += this.condition.isInJoin() ? ` ${this.cssPrefix}-condition-injoin` : '';\n        result += this.condition.isParameterized() ? ` ${this.cssPrefix}-condition-parameterized` : '';\n        if (!browserUtils.isMobileMode()) {\n            const level = this.condition.getLevel();\n            if (level > 0)\n                result += ` ${this.cssPrefix}-level-${level}`;\n        }\n        result += this.condition.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n        if (this.condition.enabled) {\n            result += this.condition.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        const model = this.panel.getContext().getModel();\n        const operator = model.getOperatorById(this.condition.getOperatorId());\n        const arrFormat = equtils.parseOperatorFormat(operator);\n        let item = null;\n        const arrLength = arrFormat.length;\n        const builder = domel('div');\n        if (this.element && this.element.parentNode) {\n            this.element.parentNode\n                .replaceChild(builder.toDOM(), this.element);\n        }\n        this.element = builder.toDOM();\n        builder\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .data('id', this.condition.id)\n            .data('condrow', '')\n            .addChildElement(this.renderCheckbox())\n            .addChildElement(this.renderConjunction());\n        let mayAppear = autoAppear;\n        const minLength = operator == model.nullOperator\n            ? Math.min(arrLength, this.condition.expressions.length + 1)\n            : arrLength;\n        for (let idx = 0; idx < minLength; idx++) {\n            item = arrFormat[idx];\n            if (item.type === 'operator') {\n                const renderer = this.panel.getOperatorRenderer(this.condition, item.text);\n                if (renderer) {\n                    builder.addChildElement(renderer.render());\n                }\n            }\n            else if (item.type === 'expression') {\n                const toAppear = mayAppear && (item.index > 0);\n                const exprRenderer = this.panel.getExpressionRenderer(this.condition.expressions[item.index]);\n                if (exprRenderer) {\n                    const el = exprRenderer.render(toAppear);\n                    builder.addChildElement(el);\n                    setTimeout(() => {\n                        exprRenderer.adjustWidth();\n                    }, 100);\n                }\n                mayAppear = mayAppear && !toAppear;\n            }\n            else if (item.type === 'text') {\n                builder.addChildElement(new TextRenderer(this.panel, item.text).render());\n            }\n        }\n        if (this.panel.options.accentActiveCondition || browserUtils.isMobileMode()) {\n            builder.on('click', ev => {\n                ev.stopPropagation();\n                this.panel.toggleConditionPicked(this.condition);\n                this.adjustButtonsVisibility();\n                if (!browserUtils.isMobileMode()) {\n                    this.element.dispatchEvent(createBrowserEvent(\"mouseenter\"));\n                }\n                return false;\n            });\n        }\n        builder\n            .addChildElement(this.renderButtonsBlock());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .on('mouseenter', event => {\n                this.isMouseOverBlock = true;\n                this.enterButtonBlock();\n                event.stopPropagation();\n                return false;\n            })\n                .on('mouseleave', event => {\n                this.isMouseOverBlock = false;\n                if (!this.keepShowingButtons && domel(this.buttonsBlock).isVisible()) {\n                    this.leaveButtonBlock();\n                }\n                event.stopPropagation();\n                return false;\n            });\n        }\n    }\n    setConditionParameterized(value) {\n        this.condition.setParameterized(value);\n        this.condition.fireChangedEvent();\n    }\n    setConditionInJoin(value) {\n        this.condition.setInJoin(value);\n        this.condition.fireChangedEvent();\n    }\n    getConditionMenu() {\n        return this.panel.getConditionMenu();\n    }\n    renderConjunction() {\n        const parent = this.condition.getParent();\n        if (!parent)\n            return null;\n        const isFirstConditionInGroup = utils.findItemIndexById(parent.getConditions(), this.condition.id) == 0;\n        if (this.panel.options.showConjunctions && !isFirstConditionInGroup) {\n            const linkTypeStr = equtils.linkTypeToStr(this.condition.getParent().linkType);\n            const conjuctionText = i18n.getText(\"Conj\" + linkTypeStr);\n            return domel(\"span\")\n                .text(conjuctionText)\n                .title(conjuctionText)\n                .addClass(`${this.cssPrefix}-condelement ${this.cssPrefix}-condition-conjuction`)\n                .toDOM();\n        }\n        return null;\n    }\n    renderCheckbox() {\n        if (this.panel.options.showCheckboxes && !this.condition.isReadOnly() && !this.panel.isFixed()) {\n            return domel(\"div\")\n                .title(i18n.getText('CmdToggleEnable'))\n                .attr('tabIndex', '0')\n                .addClass(`${this.cssPrefix}-condelement ${this.cssPrefix}-condition-checkbox`)\n                .addClass(`${this.condition.enabled ? 'enabled' : ''}`)\n                .on('click', () => {\n                this.condition.enabled = !this.condition.enabled;\n                this.condition.fireChangedEvent();\n                return false;\n            })\n                .on('keypress', evt => { if ([13, 32].includes(evt.keyCode)) {\n                evt.target.click();\n            } })\n                .toDOM();\n        }\n        else {\n            return null;\n        }\n    }\n    isConditionActive() {\n        return this.element.classList.contains(\"active\");\n    }\n    hideButtons() {\n        domel(this.element).data(\"show-buttons\", null);\n    }\n    showButtons() {\n        domel(this.element).data(\"show-buttons\", \"\");\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtonsInConditions\n            || (this.panel.options.accentActiveCondition && this.isConditionActive())) {\n            this.showButtons();\n        }\n    }\n    enterButtonBlock() {\n        this.showButtons();\n    }\n    leaveButtonBlock() {\n        if (!this.panel.options.alwaysShowButtonsInConditions\n            && (!this.isConditionActive() || !this.panel.options.accentActiveCondition)) {\n            this.hideButtons();\n        }\n    }\n    conditionMenuHandler(action, evt) {\n        switch (action) {\n            case ConditionAction.AddCondition:\n                if (!this.condition.isGroup())\n                    return;\n                const entMenu = this.panel.getEntitiesMenu();\n                if (entMenu) {\n                    entMenu.showMenu({\n                        anchor: evt.target,\n                        itemSelectedCallback: item => {\n                            const query = this.panel.getQuery();\n                            const descr = {\n                                parent: this.condition,\n                                attributeId: item.id\n                            };\n                            const cond = query.addSimpleCondition(descr);\n                            if (cond) {\n                                query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                            }\n                            return false;\n                        }\n                    });\n                }\n                break;\n            case ConditionAction.AddGroup:\n                if (!this.condition.isGroup())\n                    return;\n                const query = this.panel.getQuery();\n                const descr = {\n                    parent: this.condition\n                };\n                const group = this.panel.getQuery().addConditionGroup(descr);\n                if (group) {\n                    query.fireConditionsChangedEvent(QueryChangeAction.Add, group);\n                }\n                break;\n            case ConditionAction.Enable:\n                this.condition.enabled = !this.condition.enabled;\n                this.condition.fireChangedEvent();\n                break;\n            case ConditionAction.Delete:\n                const parent = this.condition.getParent();\n                if (!parent)\n                    return;\n                const conditions = parent.getConditions();\n                const idx = conditions.indexOf(this.condition);\n                if (idx >= 0) {\n                    conditions.splice(idx, 1);\n                    this.condition.getQuery().fireConditionsChangedEvent(QueryChangeAction.Delete, this.condition);\n                }\n                break;\n            case ConditionAction.Menu:\n                const condMenu = this.getConditionMenu();\n                this.keepShowingButtons = true;\n                condMenu.showMenu({\n                    anchor: evt.target,\n                    selectedIds: this.getConditionMenuSelectedItems(),\n                    itemSelectedCallback: (item) => {\n                        let action;\n                        switch (item.id) {\n                            case \"enable\":\n                                action = ConditionAction.Enable;\n                                break;\n                            case \"delete\":\n                                action = ConditionAction.Delete;\n                                break;\n                            case \"param\":\n                                action = ConditionAction.Parameterized;\n                                break;\n                            case \"inJoin\":\n                                action = ConditionAction.InJoin;\n                                break;\n                            case \"addCondition\":\n                                action = ConditionAction.AddCondition;\n                                break;\n                            case \"addGroup\":\n                                action = ConditionAction.AddGroup;\n                                break;\n                        }\n                        this.conditionMenuHandler(action, evt);\n                    },\n                    itemFilterCallback: (item) => {\n                        let result = this.condition.enabled || item.id === \"enable\" || item.id === \"delete\";\n                        if (item.id === \"enable\") {\n                            const parent = this.condition.getParent();\n                            result = result && parent && parent.enabled;\n                        }\n                        else if (item.id === \"delete\") {\n                            result = result && ((this.panel.options.editableParts & QPEditablePart.Removal) === QPEditablePart.Removal);\n                        }\n                        else if (item.id === \"addGroup\" || item.id === \"addCondition\") {\n                            result = result && ((this.panel.options.editableParts & QPEditablePart.Addition) === QPEditablePart.Addition);\n                        }\n                        return result;\n                    },\n                    menuClosedCallback: () => {\n                        this.keepShowingButtons = false;\n                        if (!this.isMouseOverBlock)\n                            this.leaveButtonBlock();\n                    }\n                });\n                break;\n            case ConditionAction.Parameterized:\n                this.condition.setParameterized(!this.condition.isParameterized());\n                this.condition.fireChangedEvent();\n                break;\n            case ConditionAction.InJoin:\n                this.condition.setInJoin(!this.condition.isInJoin());\n                this.condition.fireChangedEvent();\n                break;\n        }\n        evt.stopPropagation();\n        return false;\n    }\n    getConditionMenuSelectedItems() {\n        let arrSelected = [];\n        if (this.condition.enabled) {\n            arrSelected.push(\"enable\");\n        }\n        if (this.condition.isParameterized()) {\n            arrSelected.push(\"param\");\n        }\n        if (this.condition.isInJoin()) {\n            arrSelected.push(\"inJoin\");\n        }\n        return arrSelected;\n    }\n    renderButtonsBlock() {\n        const onButtonMouseEnter = (evt) => {\n            domel(evt.target)\n                .addClass(`${this.cssPrefix}-condition-button-active`);\n        };\n        const onButtonMouseLeave = (evt) => {\n            domel(evt.target)\n                .removeClass(`${this.cssPrefix}-condition-button-active`);\n        };\n        const builder = domel(\"div\")\n            .addClass(`${this.cssPrefix}-condition-buttonsBlock`)\n            .addClass(getMobileCssClass());\n        this.buttonsBlock = builder.toDOM();\n        if (this.condition.isReadOnly()) {\n            return this.buttonsBlock;\n        }\n        const buttonsToShow = this.getButtonsToShow();\n        if (buttonsToShow.indexOf(\"addCondition\") >= 0 && this.condition.enabled\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-addCondition`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdAddCondition'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.AddCondition, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        const showAddGroupBtn = buttonsToShow.indexOf(\"addGroup\") >= 0 || buttonsToShow.indexOf(\"addPredicate\") >= 0;\n        if (showAddGroupBtn && this.condition.enabled\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-addPredicate`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdAddCondGroup'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.AddGroup, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"enable\") >= 0 && this.condition.getParent() && this.condition.getParent().enabled\n            && !this.panel.options.showCheckboxes && !this.panel.isFixed()) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-enable`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdToggleEnable'))\n                        .addClass(this.condition.enabled ? 'enabled' : '')\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Enable, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"delete\") >= 0 && this.condition.getParent()\n            && ((this.panel.options.editableParts & QPEditablePart.Removal) == QPEditablePart.Removal)) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-delete`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('CmdDelete'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Delete, evt))\n                        .on('keypress', evt => { if (evt.keyCode == 13) {\n                        evt.target.click();\n                    } })\n                        .on('mouseenter', onButtonMouseEnter)\n                        .on('mouseleave', onButtonMouseLeave);\n                });\n            });\n        }\n        if (this.getButtonsToShow().indexOf(\"menu\") >= 0 && !this.panel.isFixed()) {\n            builder.addChild(\"div\", b => {\n                b.addClass(`${this.cssPrefix}-button-placeholder`)\n                    .data(\"btnplaceholder\", \"\")\n                    .addChild(\"div\", b => {\n                    b.addClass(`${this.cssPrefix}-condition-button ${this.cssPrefix}-condition-button-menu`)\n                        .attr('tabIndex', '0')\n                        .data(\"button\", \"\")\n                        .title(i18n.getText('ButtonMenu'))\n                        .on('click', evt => this.conditionMenuHandler(ConditionAction.Menu, evt));\n                    if (!browserUtils.isMobileMode()) {\n                        b\n                            .on('keypress', evt => { if (evt.keyCode == 13) {\n                            evt.target.click();\n                        } })\n                            .on('mouseenter', onButtonMouseEnter)\n                            .on('mouseleave', onButtonMouseLeave);\n                    }\n                });\n            });\n        }\n        this.adjustButtonsVisibility();\n        return this.buttonsBlock;\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && this.panel.options.buttons.condition && Array.isArray(this.panel.options.buttons.condition) ? this.panel.options.buttons.condition : [\"enable\", \"delete\"];\n    }\n}\n\nclass DomDropDownElementBuilder extends DomElementBuilder {\n    constructor(parent) {\n        super('a', parent);\n        this.attr('href', 'javascript:void(0)');\n        this.on('click', ev => {\n            ev.preventDefault();\n            this.appear();\n            return false;\n        });\n    }\n    onGetMenu(onGetMenu) {\n        this._onGetMenu = onGetMenu;\n        return this;\n    }\n    onItemSelected(onItemSelected) {\n        this._onItemSelected = onItemSelected;\n        return this;\n    }\n    appear() {\n        const menu = this._onGetMenu ? this._onGetMenu() : null;\n        if (menu) {\n            menu.showMenu({\n                anchor: this.element,\n                itemSelectedCallback: item => {\n                    if (this._onItemSelected) {\n                        this._onItemSelected(item.id);\n                    }\n                    return false;\n                }\n            });\n        }\n    }\n}\nfunction dropdown(parent) {\n    return new DomDropDownElementBuilder(parent);\n}\n\nclass ConditionGroupRenderer extends ConditionRenderer {\n    constructor(panel, condition, slot) {\n        super(panel, condition, slot);\n        this.isRoot = !condition.getParent();\n    }\n    getClassesToAdd() {\n        let result = `${this.cssPrefix}-group`;\n        if (this.isRoot) {\n            result += ` ${this.cssPrefix}-group-root`;\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        domel(this.element)\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.renderGroupRow())\n            .addChildElement(this.renderConditions(autoAppear))\n            .data('id', this.condition.id)\n            .data('group', '');\n    }\n    renderGroupRow() {\n        if (this.isRoot && !this.panel.options.showRootRow) {\n            return null;\n        }\n        else {\n            return new ConditionGroupRowRenderer(this.panel, this.condition).render();\n        }\n    }\n    renderConditions(autoAppear) {\n        const builder = domel('div');\n        builder\n            .addClass(`${this.cssPrefix}-conditions`)\n            .addClass(`${getMobileCssClass()}`)\n            .data('conditions', '');\n        if (this.isRoot) {\n            builder.addClass(`${this.cssPrefix}-conditions-root`);\n        }\n        this.condition.getConditions().forEach((condition, index, array) => {\n            const renderer = this.panel.getConditionRenderer(condition);\n            if (renderer) {\n                builder.addChildElement(renderer.render(autoAppear && index == array.length - 1));\n            }\n        });\n        return builder.toDOM();\n    }\n}\nclass ConditionGroupRowRenderer extends SimpleConditionRenderer {\n    constructor(panel, condition, slot) {\n        super(panel, condition, slot);\n        this.isRoot = !this.condition.getParent();\n    }\n    getButtonsToShow() {\n        return this.panel.options.buttons && this.panel.options.buttons.group && Array.isArray(this.panel.options.buttons.group) ? this.panel.options.buttons.group : [\"addCondition\", \"addGroup\", \"enable\", \"delete\"];\n    }\n    getClassesToAdd() {\n        let result;\n        if (this.isRoot) {\n            result = `${this.cssPrefix}-row ${this.cssPrefix}-row-group ${this.cssPrefix}-row-group-root`;\n        }\n        else {\n            result = `${this.cssPrefix}-row ${this.cssPrefix}-row-group`;\n            const level = this.condition.getLevel();\n            if (level > 0)\n                result += ` ${this.cssPrefix}-level-${level}`;\n            result += this.condition.enabled ? '' : ` ${this.cssPrefix}-disabled`;\n            if (this.condition.enabled) {\n                result += this.condition.isReadOnly() ? ` ${this.cssPrefix}-readonly` : '';\n            }\n        }\n        return result;\n    }\n    coreRender(autoAppear) {\n        const builder = domel(this.element)\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .data('group-row', '')\n            .addChildElement(this.renderCheckbox())\n            .addChildElement(this.renderConjunction());\n        const level = this.condition.getLevel();\n        if (level > 0)\n            builder.addClass(`${this.cssPrefix}-level-${level}`);\n        this.buildGroupElements(builder, this.getGroupTitle());\n        if (this.panel.options.accentActiveCondition) {\n            builder.on('click', ev => {\n                this.panel.toggleConditionPicked(this.condition);\n                this.adjustButtonsVisibility();\n                if (!browserUtils.isMobileMode()) {\n                    builder.toDOM().dispatchEvent(createBrowserEvent(\"mouseenter\"));\n                }\n            });\n        }\n        builder\n            .addChildElement(this.renderButtonsBlock());\n        if (!browserUtils.isMobileMode()) {\n            builder\n                .on('mouseenter', event => {\n                this.isMouseOverBlock = true;\n                this.enterButtonBlock();\n                event.stopPropagation();\n                return false;\n            })\n                .on('mouseleave', event => {\n                this.isMouseOverBlock = false;\n                if (!this.keepShowingButtons && domel(this.buttonsBlock).isVisible()) {\n                    this.leaveButtonBlock();\n                }\n                event.stopPropagation();\n                return false;\n            });\n        }\n    }\n    getGroupTitle() {\n        let result;\n        if (this.isRoot && !browserUtils.isMobileMode()) {\n            result = i18n.getText('RootConditionGroupTitle');\n            if (!result) {\n                //to support old text key\n                result = i18n.getText('RootPredicateTitle');\n            }\n        }\n        else {\n            result = i18n.getText('ConditionGroupTitle');\n            if (!result) {\n                //to support old text key\n                result = i18n.getText('PredicateTitle');\n            }\n        }\n        return result;\n    }\n    buildGroupElements(builder, groupTitle) {\n        const pos = groupTitle.indexOf('{lt}');\n        if (pos < 0) {\n            //invalid format\n            builder.addText(i18n.getText('ErrIncorrectGroupTitleFormat'));\n            builder.addClass(`${this.cssPrefix}-error`);\n        }\n        else {\n            if (pos > 0) {\n                builder.addChild('span', b => {\n                    b.addClass(`${this.cssPrefix}-grelement`)\n                        .addText(groupTitle.substring(0, pos));\n                });\n            }\n            const linkTypeStr = equtils.linkTypeToStr(this.condition.linkType);\n            let curType = utils.findItemById(eqconsts.predicateLinkTypeList, linkTypeStr);\n            if (!curType) {\n                curType = eqconsts.predicateLinkTypeList[0];\n            }\n            if (this.isEditable()) {\n                dropdown(builder.toDOM())\n                    .onGetMenu(() => this.getLinkTypeMenu())\n                    .onItemSelected(id => {\n                    this.condition.linkType = equtils.strToLinkType(id);\n                    this.condition.fireChangedEvent();\n                })\n                    .addText(i18n.getText(curType.key))\n                    .title(i18n.getText(curType.key))\n                    .addClass(`${this.cssPrefix}-grelement`);\n            }\n            else {\n                builder.addChild('span', b => {\n                    b.text(i18n.getText(curType.key))\n                        .title(i18n.getText(curType.key))\n                        .addClass(`${this.cssPrefix}-grelement`);\n                });\n            }\n            builder.addChild('span', b => {\n                b.addClass(`${this.cssPrefix}-grelement`)\n                    .addText(groupTitle.substring(pos + 4));\n            });\n        }\n    }\n    getConditionMenu() {\n        return this.panel.getConditionGroupMenu(this.condition.getParent() == null);\n    }\n    getLinkTypeMenu() {\n        return this.panel.getLinkTypeMenu();\n    }\n    renderConjunction() {\n        return this.isRoot ? null : super.renderConjunction();\n    }\n    renderCheckbox() {\n        return this.isRoot ? null : super.renderCheckbox();\n    }\n    leaveButtonBlock() {\n        if (!this.panel.options.alwaysShowButtonsInGroups\n            && (!this.isConditionActive() || !this.panel.options.accentActiveCondition)) {\n            this.hideButtons();\n        }\n    }\n    adjustButtonsVisibility() {\n        if (this.panel.options.alwaysShowButtonsInGroups\n            || (this.panel.options.accentActiveCondition && this.isConditionActive())) {\n            this.showButtons();\n        }\n    }\n}\n\nclass BaseElementRenderer {\n    constructor(slot) {\n        this.element = slot || domel('div').toDOM();\n    }\n    refresh() {\n        this.render();\n    }\n    render(isEditMode = false) {\n        this.labelElement = this.renderLabelElement();\n        domel(this.element)\n            .html('')\n            .addClass(this.getClassesToAdd())\n            .addClass(getMobileCssClass())\n            .addChildElement(this.labelElement);\n        if (this.isEditable()) {\n            this.renderEditor();\n            if (isEditMode) {\n                setTimeout(() => this.showEditor(), 50);\n            }\n        }\n        return this.element;\n    }\n    isEditable() {\n        return true;\n    }\n    renderLabelElement() {\n        const displayedText = this.getLabelText();\n        if (this.isEditable()) {\n            return domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(displayedText)\n                .text(displayedText)\n                .on('click', (ev) => {\n                ev.preventDefault();\n                this.showEditor();\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            return domel('span')\n                .title(displayedText)\n                .text(displayedText)\n                .toDOM();\n        }\n    }\n    getClassesToAdd() {\n        return '';\n    }\n    getLabelText() {\n        return this.getEmptyText();\n    }\n    getEmptyText() {\n        return '<empty>';\n    }\n}\n\nclass ExpressionRenderer extends BaseElementRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, expression, valueEditor, slot) {\n        super(slot);\n        this.panel = panel;\n        this.expression = expression;\n        this.valueEditor = valueEditor;\n    }\n    render(isEditMode = false) {\n        super.render(isEditMode);\n        if (this.panel.options.onExpressionRendered) {\n            this.panel.options.onExpressionRendered(this.expression, this.element);\n        }\n        return this.element;\n    }\n    getContext() {\n        return this.panel.getContext();\n    }\n    isReadOnly() {\n        const parent = this.expression.getParent();\n        return !parent.enabled || parent.isReadOnly();\n    }\n    isEditable() {\n        return !this.isReadOnly();\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-valueelement`;\n    }\n    getLabelText() {\n        let result = !this.expression.isEmpty()\n            ? this.expression.value\n            : this.getEmptyText();\n        return result;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextValue || i18n.getText('MsgEmptyScalarValue'); //'[enter value]';\n    }\n    setValue(value, silent) {\n        this.expression.setValue(value);\n        if (!silent) {\n            this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n        }\n    }\n    getValue() {\n        return this.expression.value;\n    }\n    validateInput(value) {\n        return { success: true, value: value };\n    }\n    showValidationError(message, target) {\n        this.getContext().throwError({\n            action: \"ui.validation\",\n            \"text\": message\n        });\n    }\n    isEmptyValue() {\n        let v = this.getValue();\n        return (typeof (v) === \"undefined\" || v === null || !v);\n    }\n    adjustWidth() {\n    }\n}\n\nclass InputExpressionRenderer extends ExpressionRenderer {\n    renderEditor() {\n        this.inputBuilder = domel(\"input\")\n            .hide()\n            .addClass(`${this.cssPrefix}-ve-editbox`)\n            .type('text')\n            .on('blur', (ev) => {\n            if (this.inputBuilder.isVisible() && !this.dontProcessBlur) {\n                const validationResult = this.validateInput(this.inputElement.value);\n                if (validationResult.success) {\n                    this.setValue(this.inputElement.value);\n                    this.closeEditor();\n                }\n                else {\n                    this.dontProcessBlur = true;\n                    this.inputElement.focus();\n                    setTimeout(() => { this.dontProcessBlur = false; }, 200);\n                    this.showValidationError(validationResult.message, ev.target);\n                }\n                ev.stopPropagation();\n                return false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.closeEditor();\n                ev.stopPropagation();\n                return false;\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                if (this.inputBuilder.isVisible()) {\n                    this.dontProcessBlur = true;\n                    const validationResult = this.validateInput(this.inputElement.value);\n                    if (validationResult.success) {\n                        this.setValue(this.inputElement.value);\n                        this.closeEditor();\n                        this.dontProcessBlur = false;\n                    }\n                    else {\n                        this.inputElement.focus();\n                        this.showValidationError(validationResult.message, ev.target);\n                        setTimeout(() => { this.dontProcessBlur = false; }, 200);\n                    }\n                    ev.stopPropagation();\n                    return false;\n                }\n            }\n        });\n        this.inputElement = this.inputBuilder.toDOM();\n        domel(this.element)\n            .addChildElement(this.inputElement);\n    }\n    showEditor() {\n        const MIN_WIDTH = 200;\n        if (!browserUtils.isMobileMode()) {\n            let left = this.element.offsetLeft;\n            let width = this.element.offsetWidth > MIN_WIDTH ? this.element.offsetWidth : MIN_WIDTH;\n            let maxWidth = this.element.parentElement.clientWidth - left - 55;\n            this.inputBuilder\n                .removeStyle('left')\n                .removeStyle('right');\n            if (maxWidth < MIN_WIDTH) {\n                this.inputBuilder\n                    .setStyle('right', '55px')\n                    .setStyle('width', `${MIN_WIDTH}px`);\n            }\n            else if (maxWidth < width) {\n                this.inputBuilder\n                    .setStyle('left', `${left}px`)\n                    .setStyle('width', `${maxWidth}px`);\n            }\n            else {\n                this.inputBuilder\n                    .setStyle('left', `${left}px`)\n                    .setStyle('width', `${width}px`);\n            }\n        }\n        domel(this.labelElement).hide();\n        this.inputBuilder\n            .value(this.getValue())\n            .show();\n        this.inputElement.focus();\n    }\n    closeEditor() {\n        this.inputBuilder.hide();\n        domel(this.labelElement).show();\n        this.labelElement.focus();\n    }\n    validateInput(inputValue) {\n        this.inputBuilder.removeClass(\"eqjs-invalid\");\n        const result = {\n            success: true,\n            value: inputValue\n        };\n        if (this.expression.kind == DataKind.List) {\n            this.validateListInput(inputValue, result);\n        }\n        else {\n            this.validateScalarInput(inputValue, result);\n        }\n        return result;\n    }\n    validateListInput(inputValue, result) {\n        let inputValues = inputValue.split(/\\s*,\\s*/);\n        for (let val of inputValues) {\n            this.validateScalarInput(val, result);\n            if (!result.success) {\n                return;\n            }\n        }\n    }\n    validateScalarInput(inputValue, result) {\n        if (!inputValue)\n            return;\n        if (utils.isNumericType(this.expression.dataType)) {\n            let parsedVal = +inputValue;\n            if (isNaN(parsedVal)) {\n                result.success = false;\n                result.message = '\"' + inputValue + '\" ' + i18n.getText('ErrNotNumber');\n            }\n            if (utils.isIntType(this.expression.dataType) && parsedVal != parseInt(inputValue, 10)) {\n                result.success = false;\n                result.message = '\"' + inputValue + '\" ' + i18n.getText('ErrIncorrectInteger');\n            }\n        }\n    }\n    showValidationError(message, target) {\n        super.showValidationError(message, target);\n        this.inputBuilder.addClass(\"eqjs-invalid\");\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n}\n\nclass ListExpressionRenderer extends ExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.menuItemsList = [];\n        this.showWhenReady = false;\n    }\n    isEditable() {\n        return !this.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    setValue(value, silent = false) {\n        const newValue = this.adjustNewValue(value);\n        if (value !== this.expression.value) {\n            const text = this.getValueText(value);\n            this.expression.setContent(newValue, text);\n            if (!silent) {\n                this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n            }\n        }\n        return true;\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (Array.isArray(value)) {\n            for (let item of this.menuItemsList) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.menuItemsList) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextList || i18n.getText('MsgEmptyListValue');\n    }\n    getListName() {\n        return this.valueEditor.name;\n    }\n    renderEditor() {\n        this.fillMenuItemsList(() => {\n            this.renderMenuBlock();\n        });\n    }\n    getLabelText() {\n        if (!this.expression.isEmpty()) {\n            return this.expression.getText();\n        }\n        else {\n            return this.getEmptyText();\n        }\n    }\n    showLoader() {\n        //NOTHING TO DO\n    }\n    hideLoader() {\n        //NOTHING TO DO\n    }\n    showEditor() {\n        if (this.menu) {\n            this.menu.showMenu({\n                anchor: this.labelElement,\n                selectedIds: this.getValuesAsArray(),\n                itemSelectedCallback: (item, selectedItems) => {\n                    if (!this.menu.options.multiselect) {\n                        this.setValue(item.id);\n                    }\n                    else if (selectedItems) {\n                        let selectedIds = [];\n                        let selLength = selectedItems.length;\n                        for (let i = 0; i < selLength; i++)\n                            selectedIds.push(selectedItems[i].id);\n                        this.setValue(selectedIds);\n                    }\n                    return false;\n                }\n            });\n        }\n        else {\n            this.showWhenReady = true;\n            this.showLoader();\n        }\n    }\n    closeEditor() {\n        this.menu.hideMenu();\n    }\n    renderMenuBlock() {\n        let multiSelect = false;\n        if (this.expression) {\n            multiSelect = this.expression.kind === DataKind.List;\n        }\n        const queryPanel = this.panel;\n        const options = {\n            items: this.menuItemsList,\n            multiselect: multiSelect,\n            container: queryPanel ? queryPanel.options.menuContainer : null,\n            showSelected: true,\n            showItemIds: queryPanel ? queryPanel.options.showIdsForListItems : false\n        };\n        if (queryPanel) {\n            utils.assignDeep(options, queryPanel.options.menuOptions);\n        }\n        let menuId = this.element.id;\n        if (menuId) {\n            options.id = menuId + '-EditorMenu';\n        }\n        if (queryPanel) {\n            options.domWriteItemsId = queryPanel.options.domWriteItemsId;\n        }\n        options.buttons = {\n            submit: i18n.getText('ButtonApply'),\n            cancel: i18n.getText('ButtonCancel')\n        };\n        this.menu = new PopupMenu(options);\n    }\n    getValuesAsArray() {\n        if (this.expression.kind !== DataKind.List) {\n            return [this.expression.value];\n        }\n        else {\n            if (this.expression.value) {\n                //splits value by ',' \n                const res = this.expression.value.match(/\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|[^,]+/g);\n                return res\n                    ? res.map(a => {\n                        if (a.charAt(0) == '\"' && a.charAt(a.length - 1) == '\"') {\n                            a = a.substring(1, a.length - 1);\n                            return a.replace(/\\\"/g, '\"');\n                        }\n                        else {\n                            return a;\n                        }\n                    })\n                    : [];\n            }\n            else\n                return [];\n        }\n    }\n    adjustNewValue(newValue) {\n        if (Array.isArray(newValue)) {\n            return newValue.map((a) => {\n                if (a.indexOf(',') >= 0) {\n                    a = a.replace(/\"/g, '\\\"');\n                    return '\"' + a + '\"';\n                }\n                else {\n                    return a;\n                }\n            }).join(',');\n        }\n        else {\n            return newValue;\n        }\n    }\n    fillMenuItemsList(onComplete) {\n        this.menuItemsList = this.valueEditor.values;\n        if (onComplete) {\n            onComplete();\n        }\n    }\n    takeDefaultValue() {\n        if (!this.menuItemsList)\n            return;\n        let itemLen = this.menuItemsList.length;\n        let defValue = this.valueEditor.defValue;\n        for (let i = 0; i < itemLen; i++) {\n            let item = this.menuItemsList[i];\n            if (item.isDefault || defValue == item.id) {\n                this.setValue(item.id, true);\n                break;\n            }\n        }\n    }\n}\nclass CustomListExpressionRenderer extends ListExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.isLoading = false;\n        this.onClickTemp = null;\n    }\n    renderEditor() {\n        if (this.isLoading)\n            return;\n        this.isLoading = true;\n        this.fillMenuItemsList(() => {\n            this.isLoading = false;\n            if (this.isEmptyValue()) {\n                this.takeDefaultValue();\n            }\n            if (!this.expression.isEmpty() && this.expression._isDefaultValue) {\n                const text = this.getValueText(this.expression.value);\n                this.expression.setContent(this.expression.value, text);\n                this.expression.getParent().fireChangedEvent();\n            }\n            this.renderMenuBlock();\n            if (this.showWhenReady) {\n                this.showWhenReady = false;\n                this.hideLoader();\n                this.showEditor();\n            }\n        });\n    }\n    showLoader() {\n        this.labelElement.style.display = 'none';\n        if (!this.loaderElement) {\n            this.loaderElement = domel('div', this.element)\n                .addClass(`${this.cssPrefix}-ve-loader`)\n                .toDOM();\n        }\n        this.loaderElement.style.display = 'block';\n    }\n    hideLoader() {\n        this.loaderElement.style.display = 'none';\n        this.labelElement.removeAttribute('style');\n    }\n    fillMenuItemsList(onComplete) {\n        const listName = this.getListName();\n        const listRequestHandler = this.panel.getContext().getListRequestHandler();\n        if (eqconsts.constLists[listName]) {\n            this.menuItemsList = eqconsts.constLists[listName];\n            if (onComplete) {\n                onComplete();\n            }\n        }\n        else if (listRequestHandler) {\n            listRequestHandler({\n                listName: listName,\n                editorId: this.valueEditor.id,\n                editorParams: this.valueEditor.extraParams,\n                value: this.getValue()\n            }, (list) => {\n                this.menuItemsList = list;\n                if (onComplete) {\n                    onComplete();\n                }\n            });\n        }\n    }\n}\nclass SqlListExpressionRenderer extends CustomListExpressionRenderer {\n    fillMenuItemsList(onComplete) {\n        const context = this.panel.getContext();\n        this.valueEditor;\n        const listRequestHandler = context.getListRequestHandler();\n        if (listRequestHandler) {\n            let requestData = {\n                listName: \"SQL\",\n                editorId: this.valueEditor.id,\n                editorParams: this.valueEditor.extraParams,\n                value: this.getValue()\n            };\n            //requestData.sql = editor.sql;\n            listRequestHandler(requestData, (list) => {\n                this.menuItemsList = list;\n                if (onComplete) {\n                    onComplete();\n                }\n            });\n        }\n    }\n}\n\nclass AttributeExpressionRenderer extends ListExpressionRenderer {\n    constructor(panel, expression, entitiesMenu, slot) {\n        super(panel, expression, null, slot);\n        this.menu = entitiesMenu;\n    }\n    renderEditor() {\n        //create menu\n    }\n    getLabelText() {\n        const model = this.panel.getContext().getModel();\n        const attrId = this.expression.value;\n        const attrObj = attrId ? model.getAttributeByIdSafe(attrId) : null;\n        const attrFormat = this.panel.options.attrElementFormat;\n        return attrObj ? model.getAttributeText(attrObj, attrFormat) : this.getEmptyText();\n    }\n    setValue(value, silent = false) {\n        silent = silent && value !== this.expression.value;\n        const result = super.setValue(value, true);\n        if (!silent) {\n            this.expression.getParent().fireChangedEvent(ConditionPart.EntityAttr | ConditionPart.Operator);\n        }\n        return result;\n    }\n    isEditable() {\n        return !this.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Attribute) === QPEditablePart.Attribute);\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextAttribute || i18n.getText('MsgEmptyAttrValue');\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-attrelement`;\n    }\n    adjustWidth() {\n        if (browserUtils.isMobileMode()) {\n            return;\n        }\n        const elWidth = this.element.clientWidth;\n        const parWidth = this.element.parentElement.clientWidth;\n        if (elWidth > parWidth / 2) {\n            domel(this.element)\n                .addClass(`${this.cssPrefix}-attrelement-wide`);\n        }\n    }\n}\n\nclass DropDownRenderer extends BaseElementRenderer {\n    constructor(slot) {\n        super(slot);\n    }\n    showEditor() {\n        const menu = this.getMenu();\n        if (menu) {\n            menu.showMenu({\n                anchor: this.labelElement,\n                itemSelectedCallback: item => {\n                    this.itemSelected(item.id);\n                    return false;\n                }\n            });\n        }\n    }\n    closeEditor() {\n        const menu = this.getMenu();\n        if (menu)\n            menu.hideMenu();\n    }\n}\n\nclass AddRowRenderer extends DropDownRenderer {\n    constructor(panel, entitiesMenu, slot) {\n        super(slot);\n        this.panel = panel;\n        this.menu = entitiesMenu;\n    }\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    getLabelText() {\n        return i18n.getText('CmdClickToAddCondition');\n    }\n    getClassesToAdd() {\n        return `${eqCssPrefix}-addrow ${this.cssPrefix}-addrow`;\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Addition) === QPEditablePart.Addition);\n    }\n    renderLabelElement() {\n        const displayedText = this.getLabelText();\n        if (this.isEditable()) {\n            this.labelElement = domel('a')\n                .attr('href', 'javascript:void(0)')\n                .title(displayedText)\n                .text(displayedText)\n                .on('click', (ev) => {\n                ev.preventDefault();\n                this.showEditor();\n                return false;\n            })\n                .toDOM();\n        }\n        else {\n            this.labelElement = domel('div')\n                .toDOM();\n        }\n        return this.labelElement;\n    }\n    renderEditor() {\n        // do nothing - the menu is alredy created\n    }\n    itemSelected(id) {\n        const query = this.panel.getQuery();\n        const descr = {\n            parent: query.getRootCondition(),\n            attributeId: id\n        };\n        const cond = query.addSimpleCondition(descr);\n        if (cond) {\n            query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n        }\n    }\n    getMenu() {\n        return this.menu;\n    }\n}\n\nclass OperatorRenderer extends DropDownRenderer {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    constructor(panel, condition, text, slot) {\n        super(slot);\n        this.panel = panel;\n        this.condition = condition;\n        this.displayedText = text;\n    }\n    renderEditor() {\n        //create menu\n        const model = this.panel.getContext().getModel();\n        const query = this.panel.getQuery();\n        const items = [];\n        const isRelatedToSubQuery = (operator) => {\n            return operator.defaultOperand.kind == DataKind.Query;\n        };\n        const attrId = (this.condition && this.condition.expressions && this.condition.expressions[0]) ? this.condition.expressions[0].value : null;\n        const attr = attrId ? model.getAttributeById(this.condition.expressions[0].value) : null;\n        if (attr && attr.operators) {\n            attr.operators.forEach(operId => {\n                const operator = model.getOperatorById(operId);\n                const related = isRelatedToSubQuery(operator);\n                if (!query.isEx() && related) {\n                    return;\n                }\n                if (operator && !(this.panel.options.isSubQuery && related)) {\n                    items.push({\n                        id: operId,\n                        text: i18n.getText('Operators', operId, 'caption') || operator.caption\n                    });\n                }\n            });\n        }\n        const options = {\n            items: items,\n            adjustHeight: this.panel.options.adjustEntitiesMenuHeight,\n            id: utils.generateId('opmn'),\n            domWriteItemsId: this.panel.options.domWriteItemsId\n        };\n        utils.assign(options, this.panel.options.menuOptions);\n        this.menu = new PopupMenu(options);\n    }\n    getLabelText() {\n        return this.displayedText;\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextOperator || i18n.getText('MsgEmptyOperator');\n    }\n    getClassesToAdd() {\n        return `${this.cssPrefix}-condelement ${this.cssPrefix}-operelement`;\n    }\n    isEditable() {\n        return this.condition.enabled && !this.condition.isReadOnly()\n            && ((this.panel.options.editableParts & QPEditablePart.Operator) === QPEditablePart.Operator);\n    }\n    itemSelected(id) {\n        this.condition.setOperatorId(id);\n        this.condition.fireChangedEvent(ConditionPart.Operator);\n    }\n    getMenu() {\n        return this.menu;\n    }\n}\n\nclass DateTimeExpressionRenderer extends ExpressionRenderer {\n    constructor() {\n        super(...arguments);\n        this.dtp = null;\n        this.internalDateFormat = 'yyyy-MM-dd';\n        this.internalTimeFormat = 'HH:mm';\n    }\n    renderEditor() {\n    }\n    showEditor() {\n        if (this.dtp)\n            return;\n        const pickerOptions = {\n            yearRange: this.panel.options.yearRange,\n            showCalendar: this.expression.dataType !== DataType.Time,\n            showTimePicker: this.expression.dataType !== DataType.Date,\n            oneClickDateSelection: this.panel.options.oneClickDateSelection,\n            showDateTimeInput: this.panel.options.showDateTimeInput,\n            onApply: (dateTime) => {\n                const value = this.convertToInternalFormat(dateTime);\n                this.setValue(value);\n                this.dtp = null;\n                setTimeout(() => this.labelElement.focus(), 100);\n            },\n            onCancel: () => {\n                this.labelElement.innerText = this.getLabelText();\n                this.dtp = null;\n                setTimeout(() => this.labelElement.focus(), 100);\n            },\n            onDateTimeChanged: (dateTime) => {\n                const value = i18n.dateTimeToStrEx(dateTime, this.expression.dataType);\n                this.labelElement.innerText = value;\n            }\n        };\n        this.dtp = this.panel.options.dateTimePickerResolver\n            ? this.panel.options.dateTimePickerResolver(pickerOptions)\n            : new DefaultDateTimePicker(pickerOptions);\n        const model = this.expression.getModel();\n        const value = this.expression.value;\n        let dateTime = new Date();\n        if (this.expression.dataType != DataType.Time && model.isDateMacro(value)) {\n            dateTime = model.getDateMacroValue(value);\n        }\n        else if (this.expression.dataType == DataType.Time && model.isTimeMacro(value)) {\n            dateTime = model.getTimeMacroValue(value);\n        }\n        else {\n            dateTime = this.convertFromInternalFormat(value, new Date());\n        }\n        this.dtp.setDateTime(dateTime);\n        this.dtp.show(this.element);\n    }\n    closeEditor() {\n        this.dtp.cancel();\n        this.dtp = null;\n    }\n    getLabelText() {\n        if (!this.expression.value)\n            return this.getEmptyText();\n        const defValue = '${{Today}}';\n        const value = this.expression.value;\n        const model = this.expression.getModel();\n        if (!model) {\n            throw new Error('DataModel is not defined for ' + this.expression.value);\n        }\n        if (model.isDateMacro(value) || model.isTimeMacro(value)) {\n            let macroText = value.substring(3, value.length - 2);\n            let res = i18n.getText(macroText);\n            return res ? res : defValue;\n        }\n        const result = i18n.dateTimeToStrEx(this.convertFromInternalFormat(value), this.expression.dataType);\n        return result;\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    convertFromInternalFormat(dateTimeStr, defautValue) {\n        try {\n            return utils.strToDateTime(dateTimeStr, this.internalDateFormat + ' ' + this.internalTimeFormat);\n        }\n        catch (_a) {\n            return defautValue || new Date();\n        }\n    }\n    convertToInternalFormat(dateTime) {\n        return i18n.dateTimeToStr(dateTime, this.internalDateFormat + ' ' + this.internalTimeFormat);\n    }\n}\n\nclass SubQueryExpressionRenderer extends ExpressionRenderer {\n    renderEditor() {\n        this.dialogBlockBody = domel('div')\n            .addClass(`kfrm-form`)\n            //.setStyle('height', '100%')\n            .toDOM();\n        this.createEntitiesMenu();\n        this.renderColumnBlock();\n        this.renderQueryPanelBlock();\n    }\n    isEditable() {\n        return super.isEditable()\n            && ((this.panel.options.editableParts & QPEditablePart.Value) === QPEditablePart.Value);\n    }\n    setValue(value, silent) {\n        if (value instanceof Query) {\n            this.expression.subQuery = value;\n            if (!silent) {\n                this.expression.getParent().fireChangedEvent(ConditionPart.Value);\n            }\n        }\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        const exprType = this.expression.dataType;\n        this.colEntitiesList = model.getEntitiesTreeWithFilter((ent, attr) => {\n            if (attr) {\n                return attr.useInConditions && attr.dataType === exprType;\n            }\n            else {\n                //if it's entity\n                return ent.attributes && ent.useInConditions;\n            }\n        });\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.element.getAttribute('data-id');\n        if (menuId) {\n            menuId += '-SubColumnMenu';\n        }\n        const options = {\n            items: this.colEntitiesList,\n            adjustHeight: this.panel.options.adjustEntitiesMenuHeight,\n            id: menuId,\n            isSubQuery: true,\n            domWriteItemsId: this.panel.options.domWriteItemsId\n        };\n        utils.assign(options, this.panel.options.menuOptions);\n        this.colEntitiesMenu = new PopupMenu(options);\n    }\n    renderColumnBlock() {\n        this.columnBlock = domel('div', this.dialogBlockBody)\n            .addClass(`kfrm-field`)\n            .addChild('label', b => b\n            .addText(i18n.getText('SubQueryColumnTitle')))\n            .addChild('a', b => this.columnElement = b\n            .attr('href', 'javascript:void(0)')\n            .on('click', (e) => {\n            this.colEntitiesMenu.showMenu({\n                anchor: this.columnElement,\n                selectedIds: null,\n                itemSelectedCallback: (data, items) => {\n                    const attrId = data.id;\n                    this.setResultAttributeId(attrId);\n                    return false;\n                }\n            });\n        })\n            .toDOM())\n            .toDOM();\n    }\n    getEmptyText() {\n        return this.panel.options.emptyTextValue || i18n.getText('MsgSubQueryValue');\n    }\n    renderQueryPanelBlock() {\n        const parentEl = domel('div', this.dialogBlockBody)\n            .addClass(`kfrm-field`)\n            .addChild('label', b => b\n            .addText(i18n.getText('SubQueryQueryPanelCaption')))\n            .toDOM();\n        this.subQueryPanelBlock =\n            domel('div', parentEl)\n                .toDOM();\n        let qpId = this.element.getAttribute('data-id');\n        if (qpId) {\n            this.subQueryPanelBlock.id = qpId + '-SubQueryPanel';\n        }\n    }\n    setResultAttributeId(attrId) {\n        let attrObj = this.getContext().getModel().getAttributeById(attrId);\n        if (attrObj && this.subQuery) {\n            let cols = this.subQuery.getColumns();\n            let column;\n            if (cols.length > 0) {\n                column = cols[0];\n                column.expr.setValue(attrId);\n                column.expr.dataType = attrObj.dataType;\n                column.fireChangedEvent();\n            }\n            else {\n                column = this.subQuery.createColumn();\n                column.sorting = SortDirection.None;\n                column.sortIndex = -1;\n                let expr = new Expression(column);\n                expr.setValue(attrId);\n                expr.tag = ExprTag.EntityAttribute;\n                expr.kind = DataKind.Attribute;\n                expr.dataType = attrObj.dataType;\n                column.expr = expr;\n                cols.push(column);\n                this.subQuery.fireColumnsChangedEvent(QueryChangeAction.Add, column);\n            }\n            this.columnElement.innerText = this.getAttributeText(attrObj);\n        }\n    }\n    getAttributeText(attribute) {\n        if (!attribute)\n            return i18n.getText('SubQueryEmptyColumn');\n        let attrText = i18n.getText('Attributes', attribute.id);\n        if (!attrText)\n            attrText = attribute.caption;\n        let format = this.panel.options.attrElementFormat;\n        if (!format)\n            return attrText;\n        let result = format.replace(new RegExp(\"{attr}\", 'g'), attrText);\n        let entityPath = this.getContext()\n            .getModel()\n            .getFullEntityPathByAttr(attribute.id, '.');\n        return result.replace(new RegExp(\"{entity}\", 'g'), entityPath);\n    }\n    showEditor() {\n        const parentPanel = this.panel;\n        const context = this.getContext();\n        this.subQueryPanelBlock.innerHTML = \"\";\n        this.subQuery = context.createQuery();\n        if (this.expression.subQuery) {\n            this.subQuery.loadFromData(this.expression.subQuery.toJSONData());\n        }\n        let subOptions = utils.assign({}, parentPanel.options);\n        subOptions.isSubQuery = true;\n        subOptions.showAddRow = true;\n        subOptions.menuContainer = document.body;\n        subOptions.menuOptions.isSubQuery = true;\n        subOptions.entitiesListFilter = (listItems, listOptions) => {\n            if (parentPanel.options.entitiesListFilter) {\n                let subQueryPanelListOptions = listOptions || {};\n                subQueryPanelListOptions.isSubQuery = true;\n                parentPanel.options.entitiesListFilter(listItems, subQueryPanelListOptions);\n            }\n        };\n        let subQueryPanel = this.panel.clonePanel(this.subQueryPanelBlock, this.subQuery);\n        subQueryPanel.init(this.panel.getContext(), subOptions);\n        let attrId = null;\n        let cols = this.subQuery.getColumns();\n        if (cols.length == 0) {\n            let condition = this.expression.getParent();\n            if (condition.expressions.length > 0) {\n                let attrExpr = condition.expressions[0];\n                attrId = (attrExpr.tag == ExprTag.EntityAttribute\n                    || attrExpr.kind == DataKind.Attribute) ? attrExpr.value : null;\n            }\n        }\n        else {\n            attrId = cols[0].expr.value;\n        }\n        if (attrId) {\n            this.setResultAttributeId(attrId);\n        }\n        else {\n            this.columnElement.innerText = i18n.getText(\"SubQueryEmptyColumn\");\n        }\n        subQueryPanel.refresh();\n        const rootCondEl = this.subQueryPanelBlock.querySelector('.eqjs-qp-conditions-root');\n        if (rootCondEl) {\n            rootCondEl.style.minHeight = '100px';\n        }\n        const dialogService = this.panel\n            .getContext()\n            .getServices()\n            .getService('DialogService');\n        dialogService.open({\n            title: i18n.getText('SubQueryDialogTitle'),\n            body: this.dialogBlockBody,\n            width: this.panel.options.subQueryDialogWidth,\n            //height: this.panel.options.subQueryDialogHeight,\n            closable: true,\n            cancelable: true,\n            onSubmit: () => {\n                const value = this.subQuery;\n                // validate subquery\n                if (value.tryValidate({ checkExpressions: true })) {\n                    this.setValue(value);\n                    return true;\n                }\n                return false;\n            }\n        });\n    }\n    closeEditor() {\n    }\n}\n\nclass BindToParentColumnExpressionRenderer extends CustomListExpressionRenderer {\n    constructor(panel, expression, editor, slot) {\n        super(panel, expression, editor, slot);\n        this.expression.tag = ExprTag.ParentColumn;\n    }\n    fillMenuItemsList(onComplete) {\n        const query = this.panel.getQuery().getParentQuery();\n        const parent = this.expression.getParent();\n        const attrDataType = parent.expressions[0].dataType;\n        this.menuItemsList = query\n            .getColumns()\n            .filter(col => col.expr.dataType == attrDataType)\n            .map(col => {\n            return { id: col.id, text: col.caption };\n        });\n        if (onComplete) {\n            onComplete();\n        }\n    }\n}\n\n/**\n * The query panel wiget, implemented without JQuery.\n */\nclass QueryPanel extends Widget {\n    get cssPrefix() {\n        return 'eqjs-qp';\n    }\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot, customQuery) {\n        super(slot);\n        this.options = {\n            editableParts: QPEditablePart.All,\n            isSubQuery: false,\n            activeCondition: null,\n            entitiesPopupHandler: null,\n            entitiesListFilter: null,\n            menuContainer: document.body,\n            showRootRow: true,\n            showAddRow: true,\n            showCheckboxes: false,\n            allowParameterization: false,\n            allowInJoinConditions: false,\n            showPoweredBy: false,\n            buttons: {\n                condition: null,\n                group: null\n            },\n            alwaysShowButtonsInGroups: false,\n            alwaysShowButtonsInConditions: false,\n            showConjunctions: true,\n            accentActiveCondition: true,\n            activateRootOnStart: true,\n            yearRange: 'c-10:c+10',\n            oneClickDateSelection: true,\n            showDateTimeInput: false,\n            attrElementFormat: '{entity} {attr}',\n            menuOptions: {\n                showSearchBoxAfter: 30,\n                searchBoxAutoFocus: true,\n                activateOnMouseOver: true,\n                itemRenderedCallback: null\n            },\n            allowDragDrop: true,\n            attrPlacement: 0,\n            sortEntities: false,\n            subQueryDialogWidth: 600,\n            subQueryDialogHeight: 300,\n            dialogZIndex: 100000,\n            numberListSeparators: [',', ';'],\n            autoEditNewCondition: false,\n            onConditionRendered: null,\n            onGetConditionRenderer: null,\n            onGetExpressionRenderer: null,\n            onGetOperatorRenderer: null,\n            onOperatorRendered: null,\n            onGetAddRowRenderer: null,\n            defaultQuery: null,\n            showIndicatorOnLoad: true,\n            editMode: ConditionsEditMode.Default\n        };\n        this.customQuery = null;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-cond-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        if (!this.slot.classList.contains(`${this.cssPrefix}-panel`)) {\n            this.slot.classList.add(`${this.cssPrefix}-panel`);\n        }\n        this.group = WidgetGroup.Query;\n        if (customQuery) {\n            this.customQuery = customQuery;\n        }\n    }\n    getWidgetType() {\n        return 'queryPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.renderProgressBlock();\n        //detach previously defined query observer (if any)\n        this.detachQueryObserver();\n        this.attachQueryObserver();\n        this.convertEditModelToEditableParts();\n        eqDragManager.removeDropContainer(this.slot);\n        if (this.options.allowDragDrop && (this.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition) {\n            const model = this.getContext().getModel();\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"entityAttr\"],\n                onDragEnter: (container, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    ev.dragImage.classList.add('eqjs-sortable-helper');\n                    this.showLandingSlot();\n                    const attrId = ev.data.attrId;\n                    if (!model.checkAttrProperty(attrId, \"useInConditions\")) {\n                        ev.dropEffect = DropEffect.Forbid;\n                    }\n                },\n                onDragOver: (container, ev) => {\n                },\n                onDragLeave: (container, ev) => {\n                    ev.dragImage.classList.remove('eqjs-sortable-helper');\n                    ev.dragImage.style.removeProperty('width');\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLangindSlot();\n                },\n                onDrop: (container, ev) => {\n                    const query = this.getQuery();\n                    const descr = {\n                        parent: query.getRootCondition(),\n                        attributeId: ev.data.attrId\n                    };\n                    const cond = query.addSimpleCondition(descr);\n                    if (cond) {\n                        query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                    }\n                }\n            });\n        }\n    }\n    convertEditModelToEditableParts() {\n        // Convert editMode to editableParts for backward compatibility\n        if (this.options.editMode !== ConditionsEditMode.Default) {\n            switch (this.options.editMode) {\n                case ConditionsEditMode.ReadOnly:\n                    this.options.editableParts = QPEditablePart.None;\n                    break;\n                case ConditionsEditMode.FixedList:\n                    this.options.editableParts = QPEditablePart.FixedConditionList;\n                    break;\n                default:\n                    this.options.editableParts = QPEditablePart.All;\n                    break;\n            }\n        }\n    }\n    destroyCore() {\n        eqDragManager.removeDropContainer(this.slot);\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    getEntitiesMenu() {\n        return this.entitiesMenu;\n    }\n    getConditionMenu() {\n        return this.conditionMenu;\n    }\n    getLinkTypeMenu() {\n        return this.linkTypeMenu;\n    }\n    getConditionGroupMenu(isRoot = false) {\n        return isRoot ? this.rootGroupMenu : this.groupMenu;\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to conditions\n            const edata = event.data;\n            if (!edata || (edata.part != QueryChangePart.Conditions && edata.part != QueryChangePart.All)) {\n                return;\n            }\n            const focusedBefore = document.activeElement;\n            const isFocusInside = this.slot.contains(focusedBefore) || focusedBefore == document.body;\n            switch (edata.action) {\n                case QueryChangeAction.Modify: {\n                    const conds = edata.changee;\n                    const modifyCondition = (cond, autoEdit) => {\n                        const el = this.slot.querySelector(`div[data-id=${cond.id}]`);\n                        if (el) {\n                            autoEdit = autoEdit\n                                && ((edata.condPart & ConditionPart.Operator) === ConditionPart.Operator)\n                                && cond.expressions.length > 1\n                                && (cond.expressions[1]._isDefaultValue || cond.expressions[1].value == '' ||\n                                    cond.expressions[1].value == null);\n                            const isActive = el.classList.contains('active');\n                            const renderer = this.getConditionRenderer(cond, el);\n                            if (renderer) {\n                                const newEl = renderer.render(autoEdit);\n                                if (isActive) {\n                                    this.toggleConditionPicked(cond);\n                                }\n                                if (isFocusInside && !autoEdit) {\n                                    const focusElem = newEl.querySelector('a') || newEl.querySelector('.eqjs-qp-condition-button');\n                                    if (focusElem) {\n                                        safeFocus(focusElem);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    let autoEdit = this.options.autoEditNewCondition && !browserUtils.isMobileMode();\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => modifyCondition(cond, autoEdit));\n                        autoEdit = false;\n                    }\n                    else {\n                        modifyCondition(conds, autoEdit);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Add: {\n                    const conds = edata.changee;\n                    const addCondition = (cond) => {\n                        const renderer = this.getConditionRenderer(cond);\n                        if (renderer) {\n                            const parent = cond.getParent();\n                            const parentEl = this.slot.querySelector(`div[data-id=${parent.id}]`);\n                            if (parentEl) {\n                                const newCondContainer = parentEl.lastChild;\n                                if (newCondContainer) {\n                                    const el = renderer.render(this.options.autoEditNewCondition && !browserUtils.isMobileMode());\n                                    newCondContainer.appendChild(el);\n                                    el.scrollIntoView(false);\n                                    if (isFocusInside && (!this.options.autoEditNewCondition || browserUtils.isMobileMode())) {\n                                        el.querySelector(`a`).focus();\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => addCondition(cond));\n                    }\n                    else {\n                        addCondition(conds);\n                    }\n                    break;\n                }\n                case QueryChangeAction.Delete: {\n                    const conds = edata.changee;\n                    const deleteCondition = (cond) => {\n                        const el = this.slot.querySelector(`div[data-id=${cond.id}]`);\n                        if (el) {\n                            const parent = this.slot.querySelector(`div[data-id=${cond.getParent().id}] > .eqjs-qp-row-group`);\n                            const next = el.nextSibling;\n                            const prev = el.previousSibling;\n                            el.parentElement.removeChild(el);\n                            if (isFocusInside) {\n                                const focusCond = next || prev || parent;\n                                const focusElem = focusCond.querySelector('a') || focusCond.querySelector('.eqjs-qp-condition-button');\n                                if (focusElem) {\n                                    focusElem.focus();\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(conds)) {\n                        conds.forEach((cond) => deleteCondition(cond));\n                    }\n                    else {\n                        deleteCondition(conds);\n                    }\n                    break;\n                }\n                default:\n                    this.refresh();\n                    break;\n            }\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    getQuery() {\n        if (this.customQuery) {\n            return this.customQuery;\n        }\n        return this.context.getQuery();\n    }\n    /**\n     * Gets `true` if the query panel is in read-only mode. Otherwise - `false`.\n     */\n    isReadOnly() {\n        return (this.options.editableParts == QPEditablePart.None);\n    }\n    /**\n     * Gets `true` if the query panel is in FixedList edit mode. Otherwise - `false`.\n     */\n    isFixed() {\n        return this.options.editableParts < QPEditablePart.Attribute;\n    }\n    /**\n     * Gets or sets the current edit mode. When setting, automatically refreshes the widget.\n     */\n    get editMode() {\n        return this.options.editMode || ConditionsEditMode.Default;\n    }\n    set editMode(value) {\n        if (this.options.editMode !== value) {\n            this.options.editMode = value;\n            this.convertEditModelToEditableParts();\n            this.refresh();\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        // dateFormatValue & dateFormatDisplay back compatibility\n        if (this.options.dateFormatValue) {\n            i18n.updateLocaleSettings({\n                editDateFormat: this.options.dateFormatValue\n            });\n        }\n        if (this.options.dateFormatDisplay) {\n            i18n.updateLocaleSettings({\n                shortDateFormat: this.options.dateFormatDisplay\n            });\n        }\n        if (typeof this.options.editableParts === \"undefined\") {\n            this.options.editableParts = QPEditablePart.All;\n        }\n        if (browserUtils.isMobileMode()) {\n            this.options.buttons = this.options.buttons || {};\n            this.options.buttons.condition = [\"menu\"];\n            this.options.buttons.group = [\"menu\"];\n        }\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    render() {\n        try {\n            this.entitiesMenu = this.createEntitiesMenu();\n            this.createConditionMenus();\n            this.createLinkTypeMenu();\n            this.rootContainer = domel('div', this.slot)\n                .toDOM();\n            domel(this.slot)\n                .removeClass(eqCssMobile)\n                .addClass(getMobileCssClass());\n            const query = this.getQuery();\n            const root = query.getRootCondition();\n            const renderer = this.getConditionRenderer(root, this.rootContainer);\n            if (renderer) {\n                renderer.render();\n            }\n            if (this.options.showAddRow && (this.options.editableParts & QPEditablePart.Addition) == QPEditablePart.Addition) {\n                this.addRowElement = domel('div', this.slot)\n                    .toDOM();\n                const addrowRenderer = this.getAddRowRenderer(this.addRowElement);\n                if (addrowRenderer)\n                    addrowRenderer.render();\n            }\n        }\n        catch (err) {\n            const error = err;\n            this.context.throwError({\n                action: \"QueryPanel rendering\",\n                text: error.message,\n                sourceError: error\n            });\n        }\n    }\n    getConditionRenderer(condition, slot) {\n        let renderer;\n        if (this.options.onGetConditionRenderer) {\n            renderer = this.options.onGetConditionRenderer(condition, slot);\n            if (renderer) {\n                return renderer;\n            }\n        }\n        switch (condition.tag) {\n            case CondTag.Simple:\n                return new SimpleConditionRenderer(this, condition, slot);\n            case CondTag.Group:\n                return new ConditionGroupRenderer(this, condition, slot);\n        }\n        return null;\n    }\n    getExpressionRenderer(expression, slot) {\n        if (!expression) {\n            throw 'Expression is not defined in the condition';\n        }\n        const model = this.getContext().getModel();\n        const condition = expression.getParent();\n        const operator = model.getOperatorById(condition.getOperatorId());\n        const attribute = model.getAttributeByIdSafe(condition.expressions[0].value);\n        const operand = model.getOperand(attribute, operator, expression.getIndex());\n        let editor;\n        let tag;\n        if (operand && operand.editor && operand.editor.tag !== EqEditorTag.Unknown) {\n            editor = operand.editor;\n        }\n        else if (attribute && attribute.defaultEditor) {\n            editor = attribute.defaultEditor;\n        }\n        else {\n            editor = new EqValueEditor();\n        }\n        tag = editor.tag;\n        let exprType = expression.dataType;\n        if (exprType == DataType.Unknown) {\n            exprType = attribute.dataType;\n        }\n        if (expression.kind === DataKind.Attribute) {\n            if (expression.getIndex() === 0) { // Base attribute expression\n                return new AttributeExpressionRenderer(this, expression, this.entitiesMenu, slot);\n            }\n            else {\n                let attributeMenu = this.createEntitiesMenu((ent, attr) => {\n                    if (attr) {\n                        return attr.useInConditions && attr.dataType === exprType;\n                    }\n                    return true;\n                });\n                return new AttributeExpressionRenderer(this, expression, attributeMenu, slot);\n            }\n        }\n        else if (expression.kind === DataKind.Query) {\n            tag = EqEditorTag.SubQuery;\n        }\n        else if (expression.kind === DataKind.Scalar) {\n            if (tag == EqEditorTag.Unknown && (expression.dataType === DataType.Date\n                || expression.dataType === DataType.DateTime || expression.dataType === DataType.Time)) {\n                tag = EqEditorTag.DateTime;\n            }\n        }\n        else if (expression.kind == DataKind.ParentColumn) {\n            tag = EqEditorTag.BindToParentColumn;\n        }\n        if (this.options.onGetExpressionRenderer) {\n            let renderer = this.options.onGetExpressionRenderer(this, expression, editor, slot);\n            if (renderer) {\n                return renderer;\n            }\n        }\n        switch (tag) {\n            case EqEditorTag.List:\n                return new ListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.SqlList:\n                return new SqlListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.CustomList:\n                return new CustomListExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.DateTime:\n                return new DateTimeExpressionRenderer(this, expression, editor, slot);\n            case EqEditorTag.SubQuery:\n                return new SubQueryExpressionRenderer(this, expression, editor, slot);\n            //move to ERS later\n            case EqEditorTag.BindToParentColumn:\n                return new BindToParentColumnExpressionRenderer(this, expression, editor, slot);\n            default:\n                return new InputExpressionRenderer(this, expression, editor, slot);\n        }\n    }\n    getOperatorRenderer(condition, text, slot) {\n        let renderer;\n        if (this.options.onGetOperatorRenderer)\n            renderer = this.options.onGetOperatorRenderer(condition, text, slot);\n        if (renderer)\n            return renderer;\n        return new OperatorRenderer(this, condition, text, slot);\n    }\n    getAddRowRenderer(slot) {\n        let renderer;\n        if (this.options.onGetAddRowRenderer)\n            renderer = this.options.onGetAddRowRenderer(slot);\n        if (renderer)\n            return renderer;\n        return new AddRowRenderer(this, this.entitiesMenu, slot);\n    }\n    createEntitiesMenu(filterFunc) {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return null;\n        let menuId = this.slot.id || \"eq-querypanel\";\n        menuId += '-EntitiesMenu';\n        const entitiesList = model.getEntitiesTree({\n            addUIC: true,\n            addUIR: false,\n            addUIS: false,\n            attrPlacement: this.options.attrPlacement,\n            sortEntities: this.options.sortEntities\n        }, filterFunc);\n        const options = {\n            items: entitiesList,\n            adjustHeight: this.options.adjustEntitiesMenuHeight,\n            id: menuId,\n            domWriteItemsId: this.options.domWriteItemsId\n        };\n        utils.assign(options, this.options.menuOptions);\n        return new PopupMenu(options);\n    }\n    showEntitiesMenu(options) {\n        this.entitiesMenu.showMenu(Object.assign({}, this.options.menuOptions, options));\n        // this.entitiesMenu.showMenu(options);\n    }\n    createConditionMenus() {\n        //ConditionMenu\n        {\n            const query = this.getQuery();\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-ConditionMenu';\n            const items = [\n                {\n                    id: \"enable\",\n                    text: i18n.getText('MenuEnable')\n                },\n                {\n                    id: \"delete\",\n                    text: i18n.getText('CmdDelete')\n                }\n            ];\n            if (query.isEx()) {\n                if (this.options.allowParameterization || this.options.allowInJoinConditions) {\n                    items.push({ id: \"delimiter\", text: \"---\" });\n                }\n                if (this.options.allowParameterization) {\n                    items.push({\n                        id: \"param\",\n                        text: i18n.getText('MenuParameterization')\n                    });\n                }\n                if (this.options.allowInJoinConditions) {\n                    items.push({\n                        id: \"inJoin\",\n                        text: i18n.getText('MenuJoinCond')\n                    });\n                }\n            }\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.conditionMenu = new PopupMenu(options);\n        }\n        //groupMenu\n        {\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-GroupMenu';\n            const items = [\n                {\n                    id: \"enable\",\n                    text: i18n.getText('MenuEnable')\n                },\n                {\n                    id: \"delete\",\n                    text: i18n.getText('CmdDelete')\n                },\n                {\n                    id: \"delimiter\",\n                    text: \"---\"\n                },\n                {\n                    id: \"addCondition\",\n                    text: i18n.getText('CmdAddCondition')\n                },\n                {\n                    id: \"addGroup\",\n                    text: i18n.getText('CmdAddCondGroup')\n                }\n            ];\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.groupMenu = new PopupMenu(options);\n        }\n        //rootGroupMenu\n        {\n            let menuId = this.slot.id || \"eq-querypanel\";\n            menuId += '-RootGroupMenu';\n            const items = [\n                {\n                    id: \"addCondition\",\n                    text: i18n.getText('CmdAddCondition')\n                },\n                {\n                    id: \"addGroup\",\n                    text: i18n.getText('CmdAddCondGroup')\n                }\n            ];\n            const options = { items: items, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId, showSearchBoxAfter: 100, showSelected: true };\n            utils.assign(options, this.options.menuOptions);\n            this.rootGroupMenu = new PopupMenu(options);\n        }\n    }\n    createLinkTypeMenu() {\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-LinkTypeMenu';\n        }\n        const typeList = eqconsts.predicateLinkTypeList;\n        const itemList = typeList.map((item) => {\n            return {\n                id: item.id,\n                text: i18n.getText(item.key)\n            };\n        });\n        const options = { items: itemList, adjustHeight: this.options.adjustEntitiesMenuHeight, id: menuId, domWriteItemsId: this.options.domWriteItemsId };\n        utils.assign(options, this.options.menuOptions);\n        this.linkTypeMenu = new PopupMenu(options);\n    }\n    toggleConditionPicked(condition, force = undefined) {\n        let el;\n        let isActive;\n        if (condition) {\n            el = this.slot.querySelector(`div[data-id=${condition.id}][data-condrow], div[data-id=${condition.id}] > div[data-group-row]`);\n            if (el) {\n                isActive = el.classList.contains('active');\n            }\n        }\n        //clear 'active' in all rows\n        const rows = this.slot.querySelectorAll(`.${this.cssPrefix}-row`);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            if (row.hasAttribute('data-group-row')) {\n                if (!this.options.alwaysShowButtonsInGroups) {\n                    domel(row)\n                        .data(\"show-buttons\", null);\n                }\n            }\n            else {\n                if (!this.options.alwaysShowButtonsInConditions) {\n                    domel(row)\n                        .data(\"show-buttons\", null);\n                }\n            }\n            domel(row)\n                .removeClass('active');\n        }\n        if (el && !isActive) {\n            domel(el)\n                .addClass('active')\n                .data(\"show-buttons\", \"\");\n        }\n    }\n    showLandingSlot() {\n        const container = this.slot.querySelector('.eqjs-qp-conditions-root');\n        if (container) {\n            container.appendChild(this.landingSlot);\n            this.landingSlot.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n    }\n    hideLangindSlot() {\n        if (this.landingSlot.parentElement) {\n            this.landingSlot.parentElement.removeChild(this.landingSlot);\n        }\n    }\n    onProcessStartCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (!this.progressBlock.parentNode)\n                this.slot.appendChild(this.progressBlock);\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showIndicatorOnLoad) {\n            if (this.progressBlock.parentNode)\n                this.slot.removeChild(this.progressBlock);\n        }\n    }\n    renderProgressBlock() {\n        this.progressBlock = document.createElement('div');\n        this.progressBlock.classList.add(`${eqCssPrefix}-progress-win8`);\n        this.progressBlock.classList.add(getMobileCssClass());\n        this.progressBlock.innerHTML = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n    }\n    clonePanel(slot, query) {\n        return new QueryPanel(slot, query);\n    }\n}\n\nclass FilterBar extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            applyOnClose: true,\n            showApplyButton: true,\n            showClearButton: true,\n            queryPanel: {\n                showAddRow: true,\n                showCheckboxes: true,\n                alwaysShowButtonsInGroups: true\n            }\n        };\n        this.headerClickListener = this.headerClickHandler.bind(this);\n        this.group = WidgetGroup.Query;\n    }\n    getWidgetType() {\n        return 'filterBar';\n    }\n    get cssPrefix() {\n        return 'eqjs-fb';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.destroyCore();\n        this.qpElement = domel('div')\n            .addClass(`${this.cssPrefix}-querypanel`)\n            .toDOM();\n        this.queryPanel = new QueryPanel(this.qpElement);\n        this.queryPanel.init(context, this.options.queryPanel || {});\n        this.attachQueryObserver();\n    }\n    setOptions(options) {\n        this.options = utils.assignDeep(this.options, options);\n    }\n    applyBtnClick(ev) {\n        this.applyFilter();\n    }\n    clearBtnClick(ev) {\n        this.clearFilter();\n    }\n    showQueryPanel(callback) {\n        slideDown(this.qpBlock, 200, () => {\n            this.updateHeader();\n            if (callback)\n                callback();\n        });\n    }\n    hideQueryPanel() {\n        slideUp(this.qpBlock, 200, () => {\n            this.updateHeader();\n            if (this.options.applyOnClose) {\n                this.applyFilter();\n            }\n        });\n    }\n    headerClickHandler(ev) {\n        ev.preventDefault();\n        if (domel(this.qpBlock).isVisible()) { // close query panel\n            this.hideQueryPanel();\n        }\n        else { //open query panel\n            this.showQueryPanel();\n        }\n    }\n    updateHeader() {\n        if (!this.headerTextElement)\n            return;\n        let text = '';\n        const query = this.getContext().getQuery();\n        if (query) {\n            text = query.getConditionsText();\n        }\n        if (text == '') {\n            text = i18n.getText('StrNoFilterDefined');\n        }\n        domel(this.headerTextElement)\n            .text(text)\n            .attr('title', text);\n        if (!query || query.isEmptyConditions()) { //empty query, don't show query panel and arrow, show link in header\n            domel(this.headerTextElement).hide();\n            domel(this.headerLinkElement).show();\n            if (!domel(this.qpBlock).isVisible()) {\n                domel(this.headerArrowBlock).hide();\n                this.headerElement.style.cursor = '';\n                this.headerElement.removeEventListener('click', this.headerClickListener);\n            }\n        }\n        else {\n            this.headerElement.style.cursor = 'pointer';\n            this.headerElement.removeEventListener('click', this.headerClickListener);\n            this.headerElement.addEventListener('click', this.headerClickListener);\n            domel(this.headerTextElement).show();\n            domel(this.headerLinkElement).hide();\n            domel(this.headerArrowBlock).show();\n        }\n        if (domel(this.qpBlock).isVisible()) { // close query panel\n            this.headerArrowElement.classList.add(`${this.cssPrefix}-header-arrowUp`);\n        }\n        else {\n            this.headerArrowElement.classList.remove(`${this.cssPrefix}-header-arrowUp`);\n        }\n        this.textResize();\n    }\n    render() {\n        domel(this.slot)\n            .addClass(`${this.cssPrefix}-container`)\n            .addClass(getMobileCssClass())\n            .addChild('div', builder => this.headerElement = builder\n            .addClass(`${this.cssPrefix}-header`)\n            .addChild('div', builder => this.headerIconElement = builder\n            .addClass(`${this.cssPrefix}-header-icon`)\n            .toDOM())\n            .addChild('div', builder => this.headerTextBlock = builder\n            .addClass(`${this.cssPrefix}-header-textblock`)\n            .addChild('div', builder => this.headerTextElement = builder\n            .addClass(`${this.cssPrefix}-header-text`)\n            .toDOM())\n            .addChild('div', builder => this.headerLinkElement = builder\n            .addClass(`${this.cssPrefix}-header-text ${this.cssPrefix}-header-link`)\n            .text(i18n.getText('StrNoFilterClickToAdd'))\n            .hide()\n            .on('click', () => {\n            console.log(\"condition filter click\");\n            this.queryPanel.showEntitiesMenu({\n                anchor: this.headerLinkElement,\n                selectedIds: null,\n                itemSelectedCallback: (item, items) => {\n                    const attrid = item.id;\n                    this.showQueryPanel(() => {\n                        const query = this.getContext().getQuery();\n                        const descr = {\n                            parent: query.getRootCondition(),\n                            attributeId: attrid\n                        };\n                        const cond = query.addSimpleCondition(descr);\n                        if (cond) {\n                            query.fireConditionsChangedEvent(QueryChangeAction.Add, cond);\n                        }\n                    });\n                }\n            });\n        })\n            .toDOM())\n            .toDOM())\n            .addChild('div', builder => this.headerArrowBlock = builder\n            .addClass(`${this.cssPrefix}-header-arrowblock`)\n            .addChild('div', builder => this.headerArrowElement = builder\n            .addClass(`${this.cssPrefix}-header-arrow`)\n            .toDOM())\n            .toDOM())\n            .toDOM())\n            .addChild('div', builder => this.qpBlock = builder\n            .addClass(`${this.cssPrefix}-querypanelblock`)\n            .addClass(getMobileCssClass())\n            .hide()\n            .addChildElement(this.qpElement)\n            .toDOM());\n        if (this.options.showApplyButton || this.options.showClearButton) {\n            this.buttonsBlock = domel('div', this.qpBlock)\n                .addClass(`${this.cssPrefix}-buttonsblock`)\n                .addClass(getMobileCssClass())\n                .toDOM();\n        }\n        if (this.options.showApplyButton) {\n            domel('a', this.buttonsBlock)\n                .attr('href', 'javascript:void(0)')\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', this.applyBtnClick.bind(this));\n        }\n        if (this.options.showClearButton) {\n            domel('a', this.buttonsBlock)\n                .attr('href', 'javascript:void(0)')\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-clear`)\n                .text(i18n.getText('CmdClear'))\n                .on('click', this.clearBtnClick.bind(this));\n        }\n        window.addEventListener('resize', () => {\n            this.textResize();\n        });\n        this.updateHeader();\n        this.queryPanel.refresh();\n        setTimeout(() => this.textResize(), 500);\n    }\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    applyFilter() {\n        if (this.options.applyFilterCallback) {\n            this.options.applyFilterCallback();\n        }\n    }\n    clearFilter() {\n        const query = this.getContext().getQuery();\n        if (query) {\n            query.clearConditions();\n            query.fireConditionsChangedEvent(QueryChangeAction.All);\n        }\n    }\n    textResize() {\n        this.headerTextBlock.style.width = (this.slot.clientWidth - this.headerIconElement.offsetWidth\n            - (domel(this.headerArrowBlock).isVisible() ? this.headerArrowBlock.offsetWidth : 0)) + \"px\";\n    }\n    destroyCore() {\n        if (this.queryPanel)\n            this.queryPanel.destroy();\n        this.detachQueryObserver();\n        this.slot.innerHTML = '';\n    }\n    attachQueryObserver() {\n        const query = this.getContext().getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.updateHeader();\n        });\n    }\n    detachQueryObserver() {\n        const query = this.getContext().getQuery();\n        if (query)\n            query.removeChangedCallback(this.queryEventCallbackId);\n    }\n}\n\n/**\n * The widget responsed for rendering html content\n */\nclass HtmlContentWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.contentElement = slot;\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'htmlContent';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        if (!this.context.resultContent)\n            return;\n        this.render();\n    }\n    /**\n     * Renders widget\n     */\n    render() {\n        if (this.context.resultContent) {\n            this.contentElement.innerHTML += this.context.resultContent;\n        }\n    }\n    /**\n     * Clears content.\n     */\n    clear() {\n        this.contentElement.innerHTML = \"\";\n    }\n    destroyCore() {\n        this.clear();\n    }\n}\n\n/**\n * The widget responsed for rendering html grid.\n */\nclass EqHtmlGrid extends HtmlContentWidget {\n    /**\n    * The default constructor.\n    * @param slot The html element.\n    */\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            maxButtonCount: 10,\n            useBootstrap: false\n        };\n    }\n    getWidgetType() {\n        return 'eqHtmlGrid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        super.refreshCore();\n        this.renderPageNavigator();\n    }\n    destroyCore() {\n        this.slot.innerHTML = '';\n    }\n    /**\n     * Renders page navigator.\n     */\n    renderPageNavigator() {\n        const pageNavigatorPlaceholder = document.getElementById(\"PageNavigator\");\n        if (!pageNavigatorPlaceholder) {\n            return;\n        }\n        const pageCount = parseInt(pageNavigatorPlaceholder.getAttribute('data-pagecount'));\n        const pageIndex = parseInt(pageNavigatorPlaceholder.getAttribute('data-pageindex'));\n        if (pageCount > 1) {\n            let buttonClick = (ev) => {\n                let element = ev.target;\n                if (element.hasAttribute('data-page')) {\n                    const pageNum = parseInt(element.getAttribute('data-page'));\n                    this.context.fetchDataChunk({\n                        chunk: {\n                            page: pageNum\n                        },\n                        success: () => {\n                            this.context.refreshWidgets(WidgetGroup.Result);\n                        }\n                    });\n                }\n            };\n            const maxButtonCount = this.options.maxButtonCount || 10;\n            const zeroBasedIndex = pageIndex - 1;\n            let firstPageIndex = zeroBasedIndex - (zeroBasedIndex % maxButtonCount) + 1;\n            let lastPageIndex = firstPageIndex + maxButtonCount - 1;\n            if (lastPageIndex > pageCount) {\n                lastPageIndex = pageCount;\n            }\n            let ul = document.createElement('ul');\n            if (this.options.useBootstrap) {\n                ul.className = \"pagination\";\n            }\n            else {\n                ul.className = \"eqv-pagination\";\n            }\n            if (this.options.pageItemCssClass) {\n                ul.className += \" \" + (this.options.pageItemCssClass);\n            }\n            let li = document.createElement('li');\n            if (this.options.useBootstrap) {\n                li.className = \"page-item\";\n            }\n            let a = document.createElement('span');\n            a.setAttribute(\"aria-hidden\", 'true');\n            if (this.options.useBootstrap) {\n                a.className = \"page-link\";\n            }\n            if (firstPageIndex == 1) {\n                li.className += \" disabled\";\n            }\n            else {\n                if (this.options.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${firstPageIndex - 1}`);\n                    a.className = \"page-link\";\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute(\"data-page\", `${firstPageIndex - 1}`);\n                    a = newA;\n                }\n                a.addEventListener(\"click\", buttonClick);\n            }\n            a.innerHTML = \"&laquo;\";\n            li.appendChild(a);\n            ul.appendChild(li);\n            for (let i = firstPageIndex; i <= lastPageIndex; i++) {\n                li = document.createElement('li');\n                if (this.options.useBootstrap) {\n                    li.className = \"page-item\";\n                }\n                if (i == pageIndex)\n                    li.className += \" active\";\n                a = document.createElement('a');\n                a.setAttribute('href', 'javascript:void(0)');\n                a.innerHTML = i.toString();\n                a.setAttribute('data-page', i.toString());\n                a.className = \"page-link\";\n                a.addEventListener(\"click\", buttonClick);\n                li.appendChild(a);\n                ul.appendChild(li);\n            }\n            li = document.createElement('li');\n            if (this.options.useBootstrap) {\n                li.className = \"page-item\";\n            }\n            a = document.createElement(\"span\");\n            a.setAttribute('aria-hidden', 'true');\n            if (this.options.useBootstrap) {\n                a.className = \"page-link\";\n            }\n            if (lastPageIndex == pageCount) {\n                li.className += \"disabled\";\n            }\n            else {\n                if (this.options.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${lastPageIndex + 1}`);\n                    a.className += \" page-link\";\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute(\"data-page\", `${lastPageIndex + 1}`);\n                    a = newA;\n                }\n                a.addEventListener(\"click\", buttonClick);\n            }\n            a.innerHTML = \"&raquo;\";\n            li.appendChild(a);\n            ul.appendChild(li);\n            pageNavigatorPlaceholder.appendChild(ul);\n        }\n    }\n}\n\n/**\n * Base class for GRID.\n */\nclass Grid extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            useCustomLocaleSettings: false\n        };\n        this.slot = slot;\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'grid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        if (options) {\n            utils.assignDeep(this.options, options);\n        }\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        if (!this.context.resultTable) {\n            return;\n        }\n        this.render();\n    }\n    /**\n     * Renders widget\n     */\n    render() {\n        if (this.options.beforeTableRendering) {\n            this.options.beforeTableRendering(this.context.resultTable);\n        }\n        this.applyDisplayFormats();\n    }\n    applyDisplayFormats() {\n    }\n    /**\n     * Clears GRID.\n     */\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n}\n\nclass EasyGridWidget extends Grid {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.hasCustomTotalsSettings = false;\n        //!!!! DO NOT forget to add types for options\n        this.options = { autoRefresh: true };\n        this.group = WidgetGroup.Result;\n    }\n    getWidgetType() {\n        return 'easyGrid';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        var _a, _b;\n        super.init(context, options);\n        const gridOptions = Object.assign(Object.assign(Object.assign(Object.assign({}, (_a = context.options.widgets) === null || _a === void 0 ? void 0 : _a.resultGrid), (_b = context.options.widgets) === null || _b === void 0 ? void 0 : _b.easyGrid), options), { slot: this.slot, dataTable: context.resultTable });\n        this.options = utils.assign(this.options, gridOptions);\n        gridOptions.onPlusButtonClick = (ev) => this.addColumnClickHandler(ev);\n        gridOptions.onColumnMoved = (ev) => this.columnMovedHandler(ev);\n        if (gridOptions.aggregates) {\n            this.hasCustomTotalsSettings = true;\n        }\n        else {\n            gridOptions.aggregates = { settings: context.getQuery().getAggregationSettings(), calculatorRef: null };\n        }\n        gridOptions.aggregates.calculatorRef = this.context.getAggregatesCalculator();\n        this.destroy();\n        this.grid = new EasyGrid(gridOptions);\n        if (this.options.autoRefresh) {\n            this.attachQueryObserver();\n        }\n    }\n    refreshCore() {\n        this.clear();\n        this.updateTotalsSettings();\n        this.render();\n    }\n    render() {\n        this.createEntitiesMenu();\n        this.grid.refresh();\n    }\n    attachQueryObserver() {\n    }\n    destroyCore() {\n        this.detachQueryObserver();\n        if (this.grid)\n            this.grid.destroy();\n        this.slot.innerHTML = '';\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getContext().getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    updateTotalsSettings() {\n        const context = this.getContext();\n        if (!this.hasCustomTotalsSettings) {\n            const settings = context.getQuery().getAggregationSettings();\n            this.grid.options.aggregates.settings = settings;\n        }\n    }\n    createEntitiesMenu() {\n        const model = this.getContext().getModel();\n        if (!model || model.isEmpty())\n            return;\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-EntitiesMenu';\n        }\n        const entitiesList = model.getEntitiesTree({ addUIC: false, addUIR: true, addUIS: false });\n        const options = { items: entitiesList, id: menuId };\n        utils.assign(options, this.options.menuOptions);\n        this.entitiesMenu = new PopupMenu(options);\n    }\n    getModel() {\n        return this.context.getModel();\n    }\n    getQuery() {\n        return this.context.getQuery();\n    }\n    clear() {\n        if (this.grid)\n            this.grid.clear();\n    }\n    addColumnClickHandler(ev) {\n        this.entitiesMenu.showMenu({\n            anchor: ev.sourceEvent.target,\n            selectedIds: null,\n            itemSelectedCallback: (data, items) => {\n                const attrid = data.id;\n                this.addNewColumn(attrid);\n                return false;\n            }\n        });\n    }\n    columnMovedHandler(ev) {\n        const query = this.getQuery();\n        const oldIndex = utils.findItemIndexById(query.getColumns(), ev.columnId);\n        if (oldIndex >= 0) {\n            query.moveColumn(oldIndex, ev.newIndex);\n            query.fireChangedEvent({\n                part: QueryChangePart.Columns,\n                action: QueryChangeAction.All,\n                source: this\n            });\n        }\n    }\n    addNewColumn(attrId) {\n        this.getContext().getModel();\n        const query = this.getContext().getQuery();\n        const col = query.addColumn({\n            attributeId: attrId\n        }, true);\n        query.fireChangedEvent({\n            part: QueryChangePart.Columns,\n            action: QueryChangeAction.Add,\n            changee: col,\n            source: this\n        });\n        return col;\n    }\n}\n\n/**\n * The widget responsed for rendering statement.\n * It's usually added for demonstration purposes only.\n */\nclass StatementPanel extends Widget {\n    /**\n     * The  default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.panel = slot;\n        this.group = WidgetGroup.Statement;\n        if (this.panel.tagName !== \"TEXTAREA\") {\n            this.panel.innerHTML = '<div class=\"eqv-sql-panel-result\"></div>';\n            this.panel = this.panel.querySelector('div');\n        }\n    }\n    getWidgetType() {\n        return 'statementPanel';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.clear();\n        this.render();\n    }\n    render() {\n        this.panel.textContent = this.context.resultStatement ? this.context.resultStatement : \"\";\n        var statementText = this.panel.innerHTML.replace(/\\r\\n/g, \"<br />\").replace(/  /g, \"&nbsp;&nbsp;\");\n        this.panel.innerHTML = statementText;\n    }\n    destroyCore() {\n        this.clear();\n    }\n    clear() {\n        this.panel.innerHTML = \"\";\n    }\n}\n\n/**\n * The widget responsed for rendering process bar.\n */\nclass ProcessWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The html element.\n     */\n    constructor(slot) {\n        super(slot);\n        this.element = slot;\n        this.element.style.display = 'none';\n        this.group = WidgetGroup.All;\n    }\n    getWidgetType() {\n        return 'processIndicator';\n    }\n    /**\n     * On process start implementation\n     */\n    onProcessStartCore() {\n        this.element.style.display = '';\n    }\n    /**\n    * On process end implementation\n    */\n    onProcessEndCore() {\n        this.element.style.display = 'none';\n    }\n}\n\nclass ManageDrillDownWidget extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.clickHandler = () => this.openDialog();\n        this.columnsBar = null;\n        this.queryPanel = null;\n        this.ddQuery = null;\n        this.cssPrefix = eqCssPrefix;\n        this.group = WidgetGroup.None;\n    }\n    getWidgetType() {\n        return 'manageDrillDown';\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.options = options;\n        this.refresh();\n        this.slot.addEventListener('click', this.clickHandler);\n    }\n    destroyCore() {\n        this.slot.removeEventListener('click', this.clickHandler);\n    }\n    openDialog() {\n        const dialogService = this.context.getServices().getService('DialogService');\n        const query = this.context.getQuery();\n        const model = this.context.getModel();\n        const dialogBody = domel('div')\n            .addClass(`${this.cssPrefix}-manage-drilldown`)\n            .addChildElement(this.renderColumnsBarBlock())\n            .addChildElement(this.renderQueryPanelBlock())\n            .toDOM();\n        let op = model.addOrUpdateOperator({\n            id: 'BindToParentColumn',\n            caption: 'is bound to',\n            format: '{expr1} [[is bound to]] {expr2}',\n            paramCount: 2,\n            kind: DataKind.ParentColumn,\n            appliedTypes: [DataType.String, DataType.Bool, DataType.Float, DataType.Int32, DataType.Int64, DataType.Word]\n        });\n        op.defaultOperand.dataType = DataType.String;\n        op.defaultOperand.kind = DataKind.ParentColumn;\n        model.runThroughEntities(attr => {\n            const opIdx = attr.operators.indexOf(op.id);\n            if (opIdx > 0) {\n                utils.moveArrayItem(attr.operators, opIdx, 0);\n            }\n        }, null);\n        this.ddQuery = query.createSubQuery();\n        const dds = this.context.getQuery().getDrillDowns();\n        if (dds.length) {\n            const dd = dds[0];\n            this.ddQuery.loadFromData(dd.toJSONData());\n        }\n        dialogService.open({\n            title: 'Manage Drill Down',\n            body: dialogBody,\n            cancelable: true,\n            closable: false,\n            beforeOpen: () => {\n                const columnsBarSlot = dialogBody.getElementsByClassName(`${this.cssPrefix}-columnsbar-slot`)[0];\n                this.columnsBar = new ColumnsBar(columnsBarSlot, this.ddQuery);\n                this.columnsBar.init(this.context, this.options.columnsBar);\n                const queryPanelSlot = dialogBody.getElementsByClassName(`${this.cssPrefix}-querypanel-slot`)[0];\n                this.queryPanel = new QueryPanel(queryPanelSlot, this.ddQuery);\n                this.queryPanel.init(this.context, this.options.queryPanel);\n                this.columnsBar.refresh();\n                this.queryPanel.refresh();\n            },\n            onSubmit: () => {\n                return this.submitDialog();\n            },\n            onDestroy: () => {\n                this.destroyDialog();\n            }\n        });\n    }\n    renderQueryPanelBlock() {\n        return domel('div')\n            .addClass(`${this.cssPrefix}-querypanel-block`)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-querypanel-caption`))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-querypanel-slot`))\n            .toDOM();\n    }\n    renderColumnsBarBlock() {\n        return domel('div')\n            .addClass(`${this.cssPrefix}-columnsbar-block`)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-columnsbar-caption`))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-columnsbar-slot`))\n            .toDOM();\n    }\n    submitDialog() {\n        if (this.ddQuery.tryValidate({\n            checkExpressions: true\n        })) {\n            const dds = this.context.getQuery().getDrillDowns();\n            if (dds.length) {\n                dds[0].loadFromData(this.ddQuery.toJSONData());\n                this.context.getQuery().fireChangedEvent();\n            }\n            else {\n                if (!this.ddQuery.isEmpty()) {\n                    const dd = this.context.getQuery().addDrillDown();\n                    dd.loadFromData(this.ddQuery.toJSONData());\n                    this.context.getQuery().fireChangedEvent();\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    destroyDialog() {\n        const model = this.context.getModel();\n        model.removeOperator('BindToParentColumn', true);\n        this.ddQuery = null;\n        this.columnsBar && this.columnsBar.destroy();\n        this.columnsBar = null;\n        this.queryPanel && this.queryPanel.destroy();\n        this.queryPanel = null;\n    }\n}\n\nvar FacetType;\n(function (FacetType) {\n    FacetType[\"DataGrid\"] = \"DATA_GRID\";\n    FacetType[\"Chart\"] = \"CHART\";\n    FacetType[\"PivotTable\"] = \"PIVOT_TABLE\";\n})(FacetType || (FacetType = {}));\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nclass ResultFacet {\n    constructor(container, options) {\n        this.container = container;\n        this.title = i18n.getText('Facets', 'DefaultFacetTitle');\n        this.cssPrefix = 'eqjs-facet';\n        this.dialogTitle = i18n.getText('Facets', 'DefaultDlgTitle');\n        this.options = {};\n        this.canDisplayFlag = true;\n        this.downloadAllClickHandler = () => {\n            const resultTable = this.getContext().resultTable;\n            if (!resultTable.elasticChunks) {\n                const nextChunkStart = resultTable.getCachedRows().length;\n                const recordsToLoad = resultTable.getTotal() - resultTable.getCachedCount();\n                const ds = this.getDialogService();\n                const dlg = ds.openProgress({\n                    title: i18n.getText('Facets', 'LoadDataDlgTitle'),\n                    content: i18n.getText('Facets', 'LoadDataDlgContent')\n                        .replace('{loadedRecs}', '0')\n                        .replace('{totalRecs}', `${recordsToLoad}`),\n                    onSubmit: () => this.refresh(),\n                    determinated: true\n                });\n                let loadedRecords = 0;\n                setTimeout(() => {\n                    resultTable.getRows({ offset: nextChunkStart, limit: recordsToLoad })\n                        .then(_ => {\n                        loadedRecords += _.length;\n                        const progress = loadedRecords / recordsToLoad;\n                        dlg.updateContent(i18n.getText('Facets', 'LoadDataDlgContent')\n                            .replace('{loadedRecs}', `${loadedRecords}`)\n                            .replace('{totalRecs}', `${recordsToLoad}`));\n                        dlg.updateProgress(progress);\n                    })\n                        .catch(error => {\n                        dlg.submit();\n                        this.getContext().throwError(error);\n                    });\n                }, 10);\n            }\n            else {\n                const ds = this.getDialogService();\n                const dlg = ds.openProgress({\n                    title: i18n.getText('Facets', 'LoadDataDlgTitle'),\n                    onSubmit: () => this.refresh(),\n                    determinated: false\n                });\n                this.loadElasticChunk()\n                    .then(_ => {\n                    dlg.submit();\n                })\n                    .catch(error => {\n                    dlg.submit();\n                    this.getContext().throwError(error);\n                });\n            }\n        };\n        utils.assignDeep(this.options, options);\n    }\n    init(slot) {\n        this.slot = slot;\n        this.contentDiv = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-content`)\n            .toDOM();\n        this.displayMessageDiv = domel('div', this.slot).hide().toDOM();\n    }\n    showSettingsDialog() {\n        return new Promise((resolve) => {\n            const ds = this.getDialogService();\n            const content = this.renderDialogContent();\n            const dlg = ds.open({\n                title: this.dialogTitle,\n                body: content,\n                cancelable: true,\n                closable: false,\n                onSubmit: () => {\n                    const submited = this.submitSettingsDialog();\n                    if (submited) {\n                        resolve(true);\n                    }\n                    return submited;\n                },\n                onCancel: () => {\n                    resolve(false);\n                }\n            });\n            this.afterDialogOpened(dlg);\n        });\n    }\n    afterDialogOpened(dlg) {\n    }\n    renderDialogContent() {\n        let fieldsContainer;\n        let b = domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => fieldsContainer = b\n            .addClass(`${browserUtils.isIE()\n            ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n            : 'kfrm-fields col-a-1 label-align-right'}`)\n            .toDOM());\n        this.renderFormFields(b.toDOM(), fieldsContainer);\n        return b.toDOM();\n    }\n    renderFormFields(form, fieldsContainer) {\n        let cont = fieldsContainer;\n        if (browserUtils.isIE()) {\n            cont = domel('div', fieldsContainer)\n                .addClass('kfrm-field-ie')\n                .toDOM();\n        }\n        domel(cont)\n            .addChild('label', b => b\n            .attr('for', 'tab_name')\n            .addText(i18n.getText('Facets', 'TabNameLabel')))\n            .addChild('input', b => b\n            .id('facetTabName')\n            .name('tab_name')\n            .type('text')\n            .attr('value', this.title));\n    }\n    submitSettingsDialog() {\n        const tabNameInput = document.querySelector('#facetTabName');\n        if (tabNameInput.value.length == 0)\n            return false;\n        this.title = tabNameInput.value;\n        return true;\n    }\n    getDialogService() {\n        return this.getContext()\n            .getServices()\n            .getService('DialogService');\n    }\n    canDisplay() {\n        const context = this.getContext();\n        const resultTable = context.resultTable;\n        return (resultTable.getCachedCount() == resultTable.getTotal());\n    }\n    showErrorMessage(message) {\n        this.displayMessageDiv.innerHTML = message;\n        this.displayMessageDiv.classList.add(`${this.cssPrefix}-error-message`);\n        domel(this.displayMessageDiv).show();\n    }\n    showUnableDisplayMessage(message) {\n        const context = this.getContext();\n        const resultTable = context.resultTable;\n        this.displayMessageDiv.innerHTML = message || i18n.getText('Facets', 'ErrNotEnoughData')\n            .replace('{totalRecs}', `${resultTable.getTotal()}`)\n            .replace('{cachedRecs}', `${resultTable.getCachedCount()}`)\n            .replace(/\\[(.*)\\]/g, `<a href='javascript:void(0)' class=\"${this.cssPrefix}-download-all-link\">$1</a>`);\n        const link = this.displayMessageDiv.querySelector(`a.${this.cssPrefix}-download-all-link`);\n        if (link) {\n            link.addEventListener('click', this.downloadAllClickHandler);\n        }\n        domel(this.contentDiv).hide();\n        domel(this.displayMessageDiv).show();\n    }\n    hideUnableDisplayMessage() {\n        domel(this.displayMessageDiv).hide();\n        domel(this.contentDiv).show();\n    }\n    getContext() {\n        return this.container.getContext();\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n    saveToData() {\n        return { title: this.title, type: this.getType() };\n    }\n    loadFromData(data) {\n        if (data) {\n            this.title = data.title;\n        }\n    }\n    refresh() {\n        this.hideUnableDisplayMessage();\n        if (this.canDisplay()) {\n            this.refreshCore();\n        }\n        else {\n            this.showUnableDisplayMessage();\n        }\n    }\n    loadElasticChunk() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resultTable = this.getContext().resultTable;\n            const nextChunkStart = resultTable.getCachedRows().length;\n            //next chunk\n            return resultTable.getRows({ offset: nextChunkStart, limit: resultTable.chunkSize })\n                .then(_ => {\n                return resultTable.totalIsKnown()\n                    ? Promise.resolve()\n                    : this.loadElasticChunk();\n            });\n        });\n    }\n    onResize() {\n    }\n}\n\n/** Represents chart types. */\nvar ChartType;\n(function (ChartType) {\n    ChartType[ChartType[\"Column\"] = 3] = \"Column\";\n    ChartType[ChartType[\"Histogram\"] = 4] = \"Histogram\";\n    ChartType[ChartType[\"Bar\"] = 5] = \"Bar\";\n    ChartType[ChartType[\"Combo\"] = 6] = \"Combo\";\n    ChartType[ChartType[\"Area\"] = 7] = \"Area\";\n    ChartType[ChartType[\"Line\"] = 9] = \"Line\";\n    ChartType[ChartType[\"Pie\"] = 10] = \"Pie\";\n    ChartType[ChartType[\"Polar\"] = 11] = \"Polar\";\n    ChartType[ChartType[\"Doughnut\"] = 12] = \"Doughnut\";\n    ChartType[ChartType[\"Radar\"] = 13] = \"Radar\";\n    ChartType[ChartType[\"SteppedLine\"] = 14] = \"SteppedLine\";\n})(ChartType || (ChartType = {}));\n\nclass ChartWidget extends Widget {\n    get cssPrefix() {\n        return 'eqjs-chart';\n    }\n    /**\n     Initializes a new instance of the `ChartWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.chartType = ChartType.Pie;\n        this.supportedChartTypes = [];\n        this.dataTable = null;\n        this.potentialLabelColumns = [];\n        this.potentialDataColumns = [];\n        this.labelColumn = -1;\n        this.dataColumns = [];\n        this.options = {\n            chartType: ChartType.Pie,\n            showOnPaging: false,\n            hideSettings: false,\n            legend: {\n                show: false,\n                position: 'right'\n            }\n        };\n        this.element = slotElement;\n        this.group = WidgetGroup.Result;\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.dataTable = context.resultTable;\n        this.setOptions(options);\n    }\n    /**\n     * Checks, if widget has data.\n     * @returns `true` if has data, otherwise - `false`.\n     */\n    hasData() {\n        let result = this.dataTable != null;\n        if (result) {\n            result = this.dataTable.getCachedCount() > 0;\n        }\n        return result;\n    }\n    /**\n     * Checks, if there ara colums for chart\n     * @returns `true` if there are columns, otherwise - `false`.\n     */\n    hasColumnsForChart() {\n        return this.potentialLabelColumns.length > 0 && this.potentialDataColumns.length > 0;\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.prepareChartData();\n        this.render();\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n        this.supportedChartTypes = this.getSupportedChartTypes();\n        if (this.supportedChartTypes.length == 0) {\n            throw Error(\"Chart widget should support at least one chart type\");\n        }\n        if (options.chartType && this.supportedChartTypes.indexOf(options.chartType) >= 0) {\n            this.chartType = options.chartType;\n        }\n        else {\n            this.chartType = this.supportedChartTypes[0];\n        }\n    }\n    getOptions() {\n        return this.options;\n    }\n    getChartTypeName(ct) {\n        switch (ct) {\n            case ChartType.Area:\n                return i18n.getText('ChartType', 'Area');\n            case ChartType.Bar:\n                return i18n.getText('ChartType', 'Bar');\n            case ChartType.Column:\n                return i18n.getText('ChartType', 'Column');\n            case ChartType.Combo:\n                return i18n.getText('ChartType', 'Combo');\n            case ChartType.Doughnut:\n                return i18n.getText('ChartType', 'Doughnut');\n            case ChartType.Polar:\n                return i18n.getText('ChartType', 'Polar');\n            case ChartType.Radar:\n                return i18n.getText('ChartType', 'Radar');\n            case ChartType.Histogram:\n                return i18n.getText('ChartType', 'Histogram');\n            case ChartType.Line:\n                return i18n.getText('ChartType', 'Line');\n            case ChartType.SteppedLine:\n                return i18n.getText('ChartType', 'SteppedLine');\n            default:\n                return i18n.getText('ChartType', 'Pie');\n        }\n    }\n    updateSettings(settings, updateColumns = true) {\n        if (typeof settings.showLegend !== 'undefined') {\n            this.options.legend = this.options.legend || {};\n            this.options.legend.show = settings.showLegend;\n        }\n        this.chartType = settings.type;\n        this.labelColumn = settings.labelColumn;\n        this.dataColumns[0] = settings.dataColumn;\n        if (updateColumns)\n            this.updateChartColumns();\n    }\n    /**\n     * Prepares data for chart.\n     */\n    prepareChartData() {\n        if (this.dataTable) {\n            this.potentialLabelColumns = [];\n            this.potentialDataColumns = [];\n            let colNum = this.dataTable.columns.count;\n            for (let i = 0; i < colNum; i++) {\n                const column = this.dataTable.columns.get(i);\n                let colType = column.type;\n                let colLabel = column.label;\n                this.potentialLabelColumns.push({ idx: i, label: colLabel });\n                if (utils.isNumericType(colType)) {\n                    this.potentialDataColumns.push({ idx: i, label: colLabel });\n                }\n            }\n            if (this.labelColumn != -1) {\n                if (!this.potentialLabelColumns\n                    .filter(c => c.idx == this.labelColumn)\n                    .length) {\n                    this.labelColumn = -1;\n                }\n            }\n            else {\n                this.labelColumn = (this.potentialLabelColumns.length > 0)\n                    ? this.potentialLabelColumns[0].idx : -1;\n            }\n            if (this.dataColumns.length) {\n                const ids = this.potentialDataColumns.map(d => d.idx);\n                this.dataColumns = this.dataColumns.filter(v => ids.indexOf(v) >= 0);\n                if (!this.dataColumns.length) {\n                    this.dataColumns = (this.potentialDataColumns.length > 0)\n                        ? [].concat(this.potentialDataColumns[0].idx)\n                        : [];\n                }\n            }\n            else {\n                this.dataColumns = (this.potentialDataColumns.length > 0)\n                    ? [].concat(this.potentialDataColumns[0].idx)\n                    : [];\n            }\n            this.initChart();\n        }\n    }\n    getSupportedChartTypes() {\n        const chartTypes = this.options.supportedChartTypes\n            ? this.options.supportedChartTypes\n            : Object.keys(ChartType).map(key => ChartType[key]);\n        return chartTypes.filter(type => this.hasChartTypes.indexOf(type) >= 0);\n    }\n    getCurrentChartType() {\n        return this.chartType;\n    }\n    render() {\n        this.clear();\n        if (this.hasData() && this.hasColumnsForChart()\n            && (this.context.resultTable.getTotal()\n                == this.context.resultTable.getCachedCount())) {\n            let headerDiv = document.createElement('div');\n            addCssClass(headerDiv, `${this.cssPrefix}-header`);\n            let mainDiv = document.createElement('div');\n            addCssClass(mainDiv, `${this.cssPrefix}-main`);\n            if (this.canDraw()) {\n                let chartTypeSelector = document.createElement('select');\n                for (let ct of this.supportedChartTypes) {\n                    let sopt = document.createElement('option');\n                    sopt.value = ct.toString();\n                    sopt.text = this.getChartTypeName(ct);\n                    chartTypeSelector.appendChild(sopt);\n                }\n                chartTypeSelector.value = this.chartType.toString();\n                headerDiv.appendChild(chartTypeSelector);\n                chartTypeSelector.addEventListener('change', (ev) => {\n                    let ctkey = ev.target.value;\n                    this.chartType = parseInt(ctkey);\n                    this.refresh();\n                });\n                this.settingsDiv = document.createElement('div');\n                addCssClass(this.settingsDiv, `${this.cssPrefix}-settings`);\n                hideElement(this.settingsDiv);\n                mainDiv.appendChild(this.settingsDiv);\n                this.chartDiv = document.createElement('div');\n                addCssClass(this.chartDiv, `${this.cssPrefix}-content`);\n                hideElement(this.chartDiv);\n                mainDiv.appendChild(this.chartDiv);\n                this.initSettingsDiv();\n                let chartSettingsBtn = document.createElement('div');\n                addCssClass(chartSettingsBtn, `${this.cssPrefix}-settings-icon`);\n                chartSettingsBtn.title = \"Settings\";\n                headerDiv.appendChild(chartSettingsBtn);\n                chartSettingsBtn.addEventListener('click', (ev) => {\n                    this.toggleSettings();\n                });\n                this.drawChart(100);\n            }\n            else {\n                this.addContentDiv(mainDiv, 'Unable to render  the chart. None of the supported chart libraries (ChartJS, Google Charts, etc) is found.');\n            }\n            if (!this.options.hideSettings) {\n                this.element.appendChild(headerDiv);\n            }\n            this.element.appendChild(mainDiv);\n            this.element.style.display = \"\";\n        }\n        else {\n            this.element.style.display = \"none\";\n        }\n    }\n    addContentDiv(mainDiv, text) {\n        let contentDiv = document.createElement('div');\n        addCssClass(contentDiv, `${this.cssPrefix}-no-data`);\n        contentDiv.innerText = text;\n        mainDiv.appendChild(contentDiv);\n    }\n    /**\n     * Clears the chart.\n     */\n    clear() {\n        this.element.innerHTML = '';\n    }\n    /**\n     * Draws chart with a delay.\n     * @param delay The delay.\n     */\n    drawChart(delay) {\n        showElement(this.chartDiv);\n        if (delay > 0) {\n            setTimeout(() => this.drawCore(), delay);\n        }\n        else {\n            this.drawCore();\n        }\n    }\n    /**\n     * Inititializes the settings div.\n     */\n    initSettingsDiv() {\n        let settingsHeader = document.createElement('div');\n        settingsHeader.textContent = 'SETTINGS';\n        addCssClass(settingsHeader, `${this.cssPrefix}-settings-header`);\n        this.settingsDiv.appendChild(settingsHeader);\n        // Label column\n        let labelDiv = document.createElement('div');\n        addCssClass(labelDiv, `${this.cssPrefix}-settings-single`);\n        this.settingsDiv.appendChild(labelDiv);\n        let labelColumnSelectorCaption = document.createElement('span');\n        showElement(labelColumnSelectorCaption);\n        labelColumnSelectorCaption.textContent = 'Label column';\n        labelDiv.appendChild(labelColumnSelectorCaption);\n        let labelColumnSelector = document.createElement('select');\n        showElement(labelColumnSelector);\n        labelDiv.appendChild(labelColumnSelector);\n        for (let col of this.potentialLabelColumns) {\n            let sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            labelColumnSelector.appendChild(sopt);\n        }\n        if (this.labelColumn >= 0) {\n            labelColumnSelector.value = this.labelColumn.toString();\n        }\n        labelColumnSelector.addEventListener('change', (ev) => {\n            this.labelColumn = parseInt(ev.target.value);\n            this.updateChartColumns();\n            this.toggleSettings(() => {\n                this.drawChart(100);\n            });\n        });\n        // Data column\n        let dataDiv = document.createElement('div');\n        addCssClass(dataDiv, `${this.cssPrefix}-settings-single`);\n        this.settingsDiv.appendChild(dataDiv);\n        let dataColumnSelectorCaption = document.createElement('span');\n        showElement(dataColumnSelectorCaption);\n        dataColumnSelectorCaption.textContent = 'Data column';\n        dataDiv.appendChild(dataColumnSelectorCaption);\n        let dataColumnSelector = document.createElement('select');\n        showElement(dataColumnSelector);\n        dataDiv.appendChild(dataColumnSelector);\n        for (let col of this.potentialDataColumns) {\n            let sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            dataColumnSelector.appendChild(sopt);\n        }\n        if (this.dataColumns.length > 0 && this.dataColumns[0] >= 0) {\n            dataColumnSelector.value = this.dataColumns[0].toString();\n        }\n        dataColumnSelector.addEventListener('change', (ev) => {\n            this.dataColumns[0] = parseInt(ev.target.value);\n            this.updateChartColumns();\n            this.toggleSettings(() => {\n                this.drawChart(100);\n            });\n        });\n    }\n    getPotentialLabelColumns() {\n        return this.potentialLabelColumns;\n    }\n    getPotentialDataColumns() {\n        return this.potentialDataColumns;\n    }\n    getLabelColumnIndex() {\n        return this.labelColumn;\n    }\n    getDataColumnIndex() {\n        return this.dataColumns[0];\n    }\n    /**\n     * Toggles settings.\n     * @param callback The callback.\n     */\n    toggleSettings(callback) {\n        let first;\n        let second;\n        if (isVisible(this.chartDiv)) {\n            first = this.chartDiv;\n            second = this.settingsDiv;\n        }\n        else {\n            first = this.settingsDiv;\n            second = this.chartDiv;\n        }\n        toggleVisibility(first, second, {\n            complete: callback\n        });\n    }\n}\n\nclass ChartJsWidget extends ChartWidget {\n    /**\n     Initializes a new instance of the `ChartJsWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.colors = [\n            '#4dc9f6',\n            '#f67019',\n            '#f53794',\n            '#537bc4',\n            '#acc236',\n            '#166a8f',\n            '#00a950',\n            '#58595b',\n            '#8549ba'\n        ];\n        this.chartLabels = [];\n        this.chartColumns = [];\n        this.hasChartTypes = [\n            ChartType.Column,\n            ChartType.Bar,\n            ChartType.Area,\n            ChartType.Line,\n            ChartType.SteppedLine,\n            ChartType.Doughnut,\n            ChartType.Polar,\n            ChartType.Radar,\n            ChartType.Pie\n            // ChartType.Bubble,\n            // ChartType.Scatter\n        ];\n        this.options.legend = {\n            show: false,\n            position: 'bottom'\n        };\n    }\n    getWidgetType() {\n        return 'chartChartJs';\n    }\n    static hasChartJs() {\n        return typeof Chart !== 'undefined';\n    }\n    canDraw() {\n        return ChartJsWidget.hasChartJs();\n    }\n    initChart() {\n        if (ChartJsWidget.hasChartJs() && this.labelColumn >= 0\n            && this.dataColumns && this.dataColumns.length > 0) {\n            this.updateChartColumns();\n        }\n    }\n    drawCore() {\n        if (ChartJsWidget.hasChartJs() && this.dataTable\n            && this.dataTable.getCachedCount() > 0) {\n            let config = this.generateConfig();\n            let chartCanvas = this.getChartCanvas(this.chartDiv);\n            let chartContext = chartCanvas.getContext('2d');\n            new Chart(chartContext, config);\n        }\n    }\n    updateChartColumns() {\n        if (this.dataTable) {\n            this.chartLabels = [];\n            this.chartColumns = [];\n            const rows = this.dataTable.getCachedRows();\n            for (let i = 0; i < rows.length; i++) {\n                this.chartLabels.push(rows[i].getValue(this.labelColumn));\n                this.chartColumns.push(rows[i].getValue(this.dataColumns[0]));\n            }\n        }\n    }\n    getChartCanvas(slot) {\n        let result;\n        //find canvas element\n        let canvases = slot.getElementsByTagName('canvas');\n        if (canvases && canvases.length > 0) {\n            result = canvases[0];\n        }\n        else {\n            result = addElement(slot, 'canvas');\n        }\n        return result;\n    }\n    generateConfig() {\n        let dataColors = [];\n        let datasetName = this.dataTable.columns.get(this.dataColumns[0]).label;\n        let fillValue = true;\n        let borderColor;\n        if (this.chartType == ChartType.Pie\n            || this.chartType == ChartType.Doughnut\n            || this.chartType == ChartType.Polar\n            || this.chartType == ChartType.Bar\n            || this.chartType == ChartType.Column) {\n            for (let i = 0; i < this.chartLabels.length; i++) {\n                dataColors.push(this.colors[i % this.colors.length]);\n            }\n        }\n        else {\n            dataColors = [this.colors[3]];\n        }\n        if (this.chartType == ChartType.Line\n            || this.chartType == ChartType.SteppedLine) {\n            fillValue = false;\n            borderColor = this.colors[3];\n        }\n        this.options.legend = this.options.legend || {};\n        const dataset1 = {\n            data: this.chartColumns,\n            backgroundColor: dataColors,\n            borderColor: borderColor,\n            label: datasetName,\n            fill: fillValue\n        };\n        if (this.chartType == ChartType.SteppedLine) {\n            dataset1.stepped = this.chartType === ChartType.SteppedLine, // >= 3.0.0\n                dataset1.steppedLine = this.chartType === ChartType.SteppedLine; // <= 3.0.0\n        }\n        const displayLegend = this.options.legend.show && (this.chartType == ChartType.Pie\n            || this.chartType == ChartType.Radar || this.chartType == ChartType.Polar\n            || this.chartType == ChartType.Doughnut);\n        return {\n            type: this.getChartType(),\n            data: {\n                datasets: [dataset1],\n                labels: this.chartLabels\n            },\n            options: {\n                legend: {\n                    display: displayLegend,\n                    position: this.options.legend.position || 'bottom'\n                },\n                title: {\n                    display: true,\n                    text: datasetName\n                }\n            }\n        };\n    }\n    getChartType() {\n        switch (this.chartType) {\n            case ChartType.Column:\n                return \"bar\";\n            case ChartType.Bar:\n                return \"horizontalBar\";\n            case ChartType.Area:\n            case ChartType.SteppedLine:\n            case ChartType.Line:\n                return \"line\";\n            case ChartType.Doughnut:\n                return \"doughnut\";\n            case ChartType.Polar:\n                return \"polarArea\";\n            case ChartType.Radar:\n                return \"radar\";\n            case ChartType.Pie:\n                return \"pie\";\n            default:\n                return \"pie\";\n        }\n    }\n}\n\nclass GoogleChartWidget extends ChartWidget {\n    /**\n     Initializes a new instance of the `GoogleChartWidget` class\n     * @param slotElement - an HTML element we should place our widget in.\n     */\n    constructor(slotElement) {\n        super(slotElement);\n        this.hasChartTypes = [\n            ChartType.Column,\n            ChartType.Bar,\n            ChartType.Histogram,\n            ChartType.Combo,\n            ChartType.Area,\n            ChartType.Line,\n            ChartType.SteppedLine,\n            ChartType.Pie,\n            ChartType.Doughnut\n        ];\n        this.options.legend = {\n            show: true,\n            position: 'right'\n        };\n    }\n    getWidgetType() {\n        return 'chartGoogle';\n    }\n    canDraw() {\n        return GoogleChartWidget.hasGoogleCharts();\n    }\n    static hasGoogleCharts() {\n        return typeof google !== 'undefined' && typeof google.charts !== 'undefined';\n    }\n    initChart() {\n        if (GoogleChartWidget.hasGoogleCharts() && this.labelColumn >= 0\n            && this.dataColumns && this.dataColumns.length > 0) {\n            this.googleDataView =\n                new google.visualization.DataView(this.convertToGoogleFormat());\n            this.updateChartColumns();\n        }\n    }\n    convertToGoogleType(type) {\n        switch (type) {\n            case DataType.Date:\n                return \"date\";\n            case DataType.DateTime:\n                return \"datetime\";\n            case DataType.Time:\n                return \"timeofday\";\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Int32:\n            case DataType.Int64:\n            case DataType.Currency:\n            case DataType.Float:\n                return \"number\";\n            default:\n                return \"string\";\n        }\n    }\n    convertToGoogleValue(value, type) {\n        switch (type) {\n            case DataType.Bool:\n                return value ? value.toString() : null;\n            default:\n                return value;\n        }\n    }\n    convertToGoogleFormat() {\n        const googleTable = new google.visualization.DataTable();\n        const columns = this.dataTable.columns;\n        for (let i = 0; i < columns.count; i++) {\n            const column = columns.get(i);\n            googleTable.addColumn(this.convertToGoogleType(column.type), column.label, column.id);\n        }\n        const rows = this.dataTable.getCachedRows();\n        googleTable.addRows(rows.length);\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            for (let j = 0; j < columns.count; j++) {\n                googleTable.setCell(i, j, this.convertToGoogleValue(row.getValue(j), columns.get(j).type));\n            }\n        }\n        return googleTable;\n    }\n    drawCore() {\n        if (this.googleDataView != null) {\n            this.options.legend = this.options.legend || {};\n            let chartOptions = {\n                width: \"100%\",\n                height: \"100%\",\n                chartArea: { width: this.getChartAreaWidth }\n            };\n            if (this.chartType == ChartType.Doughnut) {\n                chartOptions.pieHole = 0.4;\n            }\n            if (!this.options.legend.show) {\n                chartOptions.legend = 'none';\n            }\n            else {\n                chartOptions.legend = { position: this.options.legend.position };\n            }\n            let chart = this.createChart(this.chartDiv);\n            chart.draw(this.googleDataView, chartOptions);\n        }\n    }\n    getChartAreaWidth(chartType) {\n        if (chartType == ChartType.Pie) {\n            return \"100%\";\n        }\n        else {\n            return \"50%\";\n        }\n    }\n    updateChartColumns() {\n        if (this.googleDataView) {\n            this.googleDataView.setColumns([].concat(this.labelColumn).concat(this.dataColumns));\n        }\n    }\n    createChart(slot) {\n        switch (this.chartType) {\n            case ChartType.Column:\n                return new google.visualization.ColumnChart(slot);\n            case ChartType.Histogram:\n                return new google.visualization.Histogram(slot);\n            case ChartType.Bar:\n                return new google.visualization.BarChart(slot);\n            case ChartType.Combo:\n                return new google.visualization.ComboChart(slot);\n            case ChartType.Area:\n                return new google.visualization.AreaChart(slot);\n            case ChartType.Line:\n                return new google.visualization.LineChart(slot);\n            case ChartType.SteppedLine:\n                return new google.visualization.SteppedAreaChart(slot);\n            case ChartType.Pie:\n            case ChartType.Doughnut:\n                return new google.visualization.PieChart(slot);\n            default:\n                return new google.visualization.PieChart(slot);\n        }\n    }\n}\n\nclass ChartFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.title = i18n.getText('Facets', 'Chart', 'FacetTitle');\n        this.dialogTitle = i18n.getText('Facets', 'Chart', 'DlgTitle');\n    }\n    init(slot) {\n        super.init(slot);\n        if (GoogleChartWidget.hasGoogleCharts()) {\n            this.chart = new GoogleChartWidget(this.contentDiv);\n        }\n        else {\n            this.chart = new ChartJsWidget(this.contentDiv);\n        }\n        const supportedChartTypes = this.container.options\n            ? this.container.options.supportedChartTypes\n            : null;\n        this.chart.init(this.getContext(), {\n            legend: {\n                show: false\n            },\n            showOnPaging: true,\n            hideSettings: true,\n            supportedChartTypes: supportedChartTypes\n        });\n        //prevent showing chart tab\n        domel(this.slot).hide();\n    }\n    destroy() {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n    }\n    getType() {\n        return FacetType.Chart;\n    }\n    renderFormFields(form, fieldsContainer) {\n        super.renderFormFields(form, fieldsContainer);\n        const isIE = browserUtils.isIE();\n        const horizClass = isIE ? 'kfrm-fields-ie is-horizontal' : 'kfrm-fields is-horizontal';\n        // Chart type\n        let chartTypeSelector = document.createElement('select');\n        chartTypeSelector.id = 'chart_type_selector';\n        chartTypeSelector.name = 'chart_type_selector';\n        for (let ct of this.chart.getSupportedChartTypes()) {\n            let sopt = document.createElement('option');\n            sopt.value = ct.toString();\n            sopt.text = this.chart.getChartTypeName(ct);\n            chartTypeSelector.appendChild(sopt);\n        }\n        chartTypeSelector.value = this.chart.getCurrentChartType().toString();\n        if (!this.settings) {\n            this.chart.prepareChartData();\n            this.settings = {\n                type: this.chart.getCurrentChartType().toString(),\n                labelColumn: `${this.chart.getLabelColumnIndex() >= 0 ? this.chart.getLabelColumnIndex() : ''}`,\n                dataColumn: `${this.chart.getDataColumnIndex() >= 0 ? this.chart.getDataColumnIndex() : ''}`,\n                showLegend: false\n            };\n        }\n        // Label column\n        const labelColumnSelector = document.createElement('select');\n        labelColumnSelector.name = 'label_column_selector';\n        labelColumnSelector.id = 'label_column_selector';\n        for (const col of this.chart.getPotentialLabelColumns()) {\n            const sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            labelColumnSelector.appendChild(sopt);\n        }\n        labelColumnSelector.value = this.settings.labelColumn;\n        // Data column\n        const dataColumnSelector = document.createElement('select');\n        dataColumnSelector.id = 'data_column_selector';\n        dataColumnSelector.name = 'data_column_selector';\n        for (const col of this.chart.getPotentialDataColumns()) {\n            const sopt = document.createElement('option');\n            sopt.value = col.idx.toString();\n            sopt.text = col.label;\n            dataColumnSelector.appendChild(sopt);\n        }\n        dataColumnSelector.value = this.settings.dataColumn.toString();\n        let current = fieldsContainer;\n        const getCurrent = () => {\n            if (isIE) {\n                return domel('div', fieldsContainer)\n                    .addClass('kfrm-field-ie')\n                    .toDOM();\n            }\n            else {\n                return fieldsContainer;\n            }\n        };\n        if (isIE) {\n            domel(form)\n                .addChildElement(getCurrent());\n        }\n        else {\n            domel(fieldsContainer)\n                .addChild('div')\n                .addChild('div');\n        }\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'chart_type_selector')\n            .text(i18n.getText('Facets', 'Chart', 'ChartTypeSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(chartTypeSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'label_column_selector')\n            .text(i18n.getText('Facets', 'Chart', 'LabelColumnSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(labelColumnSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'data_column_selector')\n            .text(i18n.getText('Facets', 'Chart', 'DataColumnSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .addChildElement(dataColumnSelector));\n        current = getCurrent();\n        domel(current)\n            .addChild('div')\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('show_legend')\n                .type('checkbox');\n            if (this.settings.showLegend)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Chart', 'ShowLegendLabel'))));\n    }\n    afterDialogOpened(dlg) {\n        if (this.getContext().resultTable.columns.getItems().filter(col => utils.isNumericType(col.type)).length <= 0) {\n            dlg.showAlert('The dataset should contain at least one numeric column to build a chart', 'error');\n            dlg.getSubmitButtonElement().disabled = true;\n        }\n    }\n    submitSettingsDialog() {\n        const result = super.submitSettingsDialog();\n        const chartTypeSelector = document.getElementById('chart_type_selector');\n        const ct = parseInt(chartTypeSelector.value);\n        const labelColumnSelector = document.getElementById('label_column_selector');\n        const labelColumn = parseInt(labelColumnSelector.value);\n        const dataColumnSelector = document.getElementById('data_column_selector');\n        const dataColumn = parseInt(dataColumnSelector.value);\n        const showLegendInput = document.getElementById('show_legend');\n        const showLegend = showLegendInput.checked;\n        if (result) {\n            this.settings = {\n                type: ct,\n                labelColumn: labelColumn,\n                dataColumn: dataColumn,\n                showLegend: showLegend\n            };\n            if (this.canDisplay()) {\n                this.refresh();\n            }\n        }\n        return result;\n    }\n    getSettings() {\n        return this.settings;\n    }\n    saveToData() {\n        const data = super.saveToData();\n        if (this.settings) {\n            data.chartType = this.settings.type;\n            data.labelCol = this.settings.labelColumn;\n            data.dataCol = this.settings.dataColumn;\n            data.showLeg = this.settings.showLegend;\n        }\n        return data;\n    }\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            this.settings = {\n                type: data.chartType,\n                dataColumn: data.dataCol,\n                labelColumn: data.labelCol,\n                showLegend: data.showLeg\n            };\n        }\n    }\n    refreshCore() {\n        if (this.chart) {\n            if (this.settings) {\n                this.chart.updateSettings(this.settings);\n            }\n            this.chart.prepareChartData();\n            this.chart.refresh();\n        }\n    }\n    onResize() {\n        this.refresh();\n    }\n}\n\nvar AggrFunc;\n(function (AggrFunc) {\n    AggrFunc[\"Sum\"] = \"SUM\";\n    AggrFunc[\"Average\"] = \"AVG\";\n    AggrFunc[\"Min\"] = \"MIN\";\n    AggrFunc[\"Max\"] = \"MAX\";\n    AggrFunc[\"Count\"] = \"COUNT\";\n})(AggrFunc || (AggrFunc = {}));\nvar FormFieldType;\n(function (FormFieldType) {\n    FormFieldType[FormFieldType[\"ColumnField\"] = 0] = \"ColumnField\";\n    FormFieldType[FormFieldType[\"RowField\"] = 1] = \"RowField\";\n    FormFieldType[FormFieldType[\"CellData\"] = 2] = \"CellData\";\n})(FormFieldType || (FormFieldType = {}));\nconst DFMT_REGEX = /{0:(.*?)}/g;\nclass PivotTableFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.title = i18n.getText('Facets', 'Pivot', 'FacetTitle');\n        this.dialogTitle = i18n.getText('Facets', 'Pivot', 'DlgTitle');\n        this.pivotTable = new EasyDataTable();\n        this.settings = {};\n    }\n    init(slot) {\n        super.init(slot);\n        this.options.maxRowCount = this.options.maxRowCount || 500;\n        this.options.viewportRowsCount = this.options.viewportRowsCount || 50;\n        this.grid = new EasyGrid({\n            slot: this.contentDiv,\n            dataTable: this.pivotTable,\n            paging: {\n                enabled: false,\n                pageSize: this.options.maxRowCount\n            },\n            viewportRowsCount: this.options.viewportRowsCount,\n            useRowNumeration: false,\n            showPlusButton: false,\n            allowDragDrop: false,\n            onGetCellRenderer: (column, defaultRenderer) => {\n                if (column.dataColumn) {\n                    if (column.dataColumn.id == \"total\") {\n                        return (value, column, cell, rowEl) => {\n                            defaultRenderer(value, column, cell, rowEl);\n                            cell.classList.add('pivot-cell-total');\n                        };\n                    }\n                    if (this.settings.totalsRow) {\n                        const colIndex = this.pivotTable.columns.getIndex(column.dataColumn.id);\n                        const isFirst = colIndex === 0;\n                        if (isFirst) {\n                            return (value, column, cell, rowEl) => {\n                                const idx = Number.parseInt(rowEl.getAttribute('data-row-idx'));\n                                const isLast = idx === this.pivotTable.getCachedCount() - 1;\n                                if (isLast) {\n                                    value = i18n.getText('Facets', 'Pivot', 'TotalGridLabel');\n                                }\n                                defaultRenderer(value, column, cell, rowEl);\n                            };\n                        }\n                    }\n                }\n            }\n        });\n    }\n    getType() {\n        return FacetType.PivotTable;\n    }\n    destroy() {\n        if (this.grid) {\n            this.grid.destroy();\n        }\n    }\n    createAggrFuncSelectBuilder(aggrFunc) {\n        const model = this.getContext().getModel();\n        const csb = domel('select');\n        const aggrfuncs = Object.keys(AggrFunc).map(k => AggrFunc[k]);\n        for (const aggrfunc of aggrfuncs) {\n            csb.addChild('option', b => {\n                b\n                    .attr('value', aggrfunc)\n                    .text(model.getAggrFunctionCaption(aggrfunc));\n            });\n        }\n        const options = csb.toDOM().querySelectorAll('option');\n        if (aggrFunc != undefined) {\n            options.forEach(option => {\n                if (option.value == aggrFunc) {\n                    option.selected = true;\n                }\n            });\n        }\n        else {\n            options[0].selected = true;\n        }\n        return csb;\n    }\n    createColumnsSelectBuilder(allowedTypes, colName, formFieldType) {\n        const dataTable = this.getContextDataTable();\n        const csb = domel('select');\n        let firstNumericColIndex = null;\n        let optionIndex = 0;\n        for (let i = 0; i < dataTable.columns.count; i++) {\n            const column = dataTable.columns.get(i);\n            const colLabel = column.label;\n            const colType = column.type;\n            const colId = column.id;\n            if (allowedTypes && allowedTypes.indexOf(colType) < 0)\n                continue;\n            if (firstNumericColIndex === null && utils.isNumericType(colType)) {\n                firstNumericColIndex = optionIndex;\n            }\n            csb.addChild('option', b => {\n                b\n                    .attr('value', colId)\n                    .text(colLabel);\n            });\n            optionIndex++;\n        }\n        const options = Array.from(csb.toDOM().querySelectorAll('option'));\n        if (options.length > 0) {\n            if (colName != undefined) {\n                for (const option of options) {\n                    if (option.value == colName) {\n                        csb.toDOM().value = option.value;\n                        break;\n                    }\n                }\n            }\n            else {\n                switch (formFieldType) {\n                    case FormFieldType.ColumnField: {\n                        csb.toDOM().value = options[0].value;\n                        break;\n                    }\n                    case FormFieldType.RowField: {\n                        csb.toDOM().value = options.length > 1 ? options[1].value : options[0].value;\n                        break;\n                    }\n                    case FormFieldType.CellData: {\n                        csb.toDOM().value = firstNumericColIndex === null ? options[0].value : options[firstNumericColIndex].value;\n                        break;\n                    }\n                }\n            }\n        }\n        return csb;\n    }\n    renderFormFields(form, fieldsContainer) {\n        super.renderFormFields(form, fieldsContainer);\n        const settings = this.settings || { totalsRow: true, totalsCol: true };\n        const colTypes = [DataType.String, DataType.Date, DataType.DateTime, DataType.Int32,\n            DataType.Int64, DataType.Word, DataType.Byte];\n        const fieldTypes = [DataType.String, DataType.Float, DataType.Int32,\n            DataType.Int64, DataType.Word, DataType.Byte, DataType.Currency];\n        const isIE = browserUtils.isIE();\n        let current = fieldsContainer;\n        const horizClass = isIE ? 'kfrm-fields-ie is-horizontal' : 'kfrm-fields is-horizontal';\n        const getCurrent = () => {\n            if (isIE) {\n                return domel('div', fieldsContainer)\n                    .addClass('kfrm-field-ie')\n                    .toDOM();\n            }\n            else {\n                return fieldsContainer;\n            }\n        };\n        if (isIE) {\n            domel(fieldsContainer)\n                .addChildElement(getCurrent());\n        }\n        else {\n            domel(fieldsContainer)\n                .addChild('div')\n                .addChild('div');\n        }\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'column_field')\n            .text(i18n.getText('Facets', 'Pivot', 'ColumnFieldSelectorLabel')))\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'column_field')\n            .addChildElement(this.createColumnsSelectBuilder(colTypes, settings.colName, FormFieldType.ColumnField)\n            .id('pivotTableColFieldSelector')\n            .toDOM()))\n            .addChild('button', b => b\n            .addClass('kfrm-button')\n            .addClass('eqjs-facets-button-swap')\n            .attr('title', i18n.getText('Facets', 'Pivot', 'SwapBtnTitle'))\n            .on('click', () => {\n            const colSelect = document.getElementById('pivotTableColFieldSelector');\n            const rowSelect = document.getElementById('pivotTableRowFieldSelector');\n            const tmp = colSelect.value;\n            colSelect.value = rowSelect.value;\n            rowSelect.value = tmp;\n        })));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'row_field')\n            .text(i18n.getText('Facets', 'Pivot', 'RowFieldSelectorLabel')))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'row_field')\n            .addChildElement(this.createColumnsSelectBuilder(colTypes, settings.rowName, FormFieldType.RowField)\n            .id('pivotTableRowFieldSelector')\n            .toDOM()));\n        current = getCurrent();\n        domel(current)\n            .addChild('label', b => b\n            .attr('for', 'data_function')\n            .text(i18n.getText('Facets', 'Pivot', 'CellDataSelectorLabel')))\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'data_function')\n            .addChildElement(this.createAggrFuncSelectBuilder(settings.aggrFunc)\n            .id('pivotTableAggrFuncSelector')\n            .toDOM()))\n            .addChild('label', b => b.addText('of  '))\n            .addChild('div', b => b\n            .addClass('kfrm-select')\n            .attr('name', 'data_column')\n            .addChildElement(this.createColumnsSelectBuilder(fieldTypes, settings.fieldName, FormFieldType.CellData)\n            .on('change', (ev) => {\n            const colId = ev.target.value;\n            this.validateSelectedField(colId);\n        })\n            .id('pivotTableCellFieldSelector')\n            .toDOM())));\n        current = getCurrent();\n        domel(current)\n            .addChild('div')\n            .addChild('div', b => b\n            .addClass(horizClass)\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('pivotTableHasTotalsRow')\n                .type('checkbox');\n            if (settings.totalsRow)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Pivot', 'TotalsRowLabel')))\n            .addChild('label', b => b\n            .addClass('checkbox')\n            .addChild('input', b => {\n            b\n                .id('pivotTableHasTotalsCol')\n                .type('checkbox');\n            if (settings.totalsCol)\n                b.attr('checked', '');\n        })\n            .addText(' ' + i18n.getText('Facets', 'Pivot', 'TotalsColLabel'))));\n    }\n    afterDialogOpened(dlg) {\n        const colId = document.getElementById('pivotTableCellFieldSelector').value;\n        if (colId) {\n            this.validateSelectedField(colId);\n        }\n        if (this.getQuery().getColumns().length <= 2) {\n            dlg.showAlert('The dataset should contain at least three columns to build a pivot table', 'error');\n            dlg.getSubmitButtonElement().disabled = true;\n        }\n    }\n    validateSelectedField(colId) {\n        const dataTable = this.getContextDataTable();\n        const colIndex = dataTable.columns.getIndex(colId);\n        const col = dataTable.columns.get(colIndex);\n        const aggrSelector = document.getElementById('pivotTableAggrFuncSelector');\n        if (col.type == DataType.String) {\n            aggrSelector.disabled = true;\n            aggrSelector.value = AggrFunc.Count;\n        }\n        else {\n            aggrSelector.disabled = false;\n        }\n    }\n    submitSettingsDialog() {\n        const result = super.submitSettingsDialog();\n        if (result) {\n            this.settings = {\n                colName: document.getElementById('pivotTableColFieldSelector').value,\n                rowName: document.getElementById('pivotTableRowFieldSelector').value,\n                aggrFunc: document.getElementById('pivotTableAggrFuncSelector').value,\n                fieldName: document.getElementById('pivotTableCellFieldSelector').value,\n                totalsRow: document.getElementById('pivotTableHasTotalsRow').checked,\n                totalsCol: document.getElementById('pivotTableHasTotalsCol').checked\n            };\n        }\n        return result;\n    }\n    saveToData() {\n        const data = super.saveToData();\n        if (this.settings) {\n            utils.assign(data, this.settings);\n        }\n        return data;\n    }\n    loadFromData(data) {\n        super.loadFromData(data);\n        if (data) {\n            this.settings = utils.assign(this.settings, data);\n            if (this.settings.aggrFunc == 'AVERAGE') {\n                this.settings.aggrFunc = AggrFunc.Average;\n            }\n        }\n    }\n    refreshCore() {\n        this.updatePivotData();\n        if (this.grid) {\n            const dataSize = this.pivotTable.getTotal();\n            const maxRow = this.grid.options.paging.pageSize;\n            if (dataSize > maxRow) {\n                this.contentDiv.classList.remove('pivot-grid-with-totals');\n                this.showErrorMessage(i18n.getText('Facets', 'ErrTooMuchData'));\n            }\n            if (this.options.viewportRowsCount > dataSize) {\n                this.grid.options.viewportRowsCount = dataSize;\n            }\n            else {\n                this.grid.options.viewportRowsCount = this.options.viewportRowsCount;\n            }\n            this.grid.refresh();\n        }\n    }\n    getContextDataTable() {\n        const context = this.getContext();\n        return context.resultTable;\n    }\n    updatePivotData() {\n        this.pivotTable.clear();\n        const dataTable = this.getContextDataTable();\n        if (!dataTable || dataTable.getTotal() == 0) {\n            return;\n        }\n        if (!this.settings) {\n            return;\n        }\n        const colName = this.settings.colName;\n        const rowName = this.settings.rowName;\n        const fieldName = this.settings.fieldName;\n        const colIdx = dataTable.columns.getIndex(colName);\n        const rowIdx = dataTable.columns.getIndex(rowName);\n        const fieldIdx = dataTable.columns.getIndex(fieldName);\n        if (colIdx == undefined || rowIdx == undefined || fieldIdx == undefined) {\n            this.showUnableDisplayMessage(i18n.getText('Facets', 'ErrQueryChanged'));\n            return;\n        }\n        const columnField = dataTable.columns.get(fieldIdx);\n        const columnCol = dataTable.columns.get(colIdx);\n        const columnRow = dataTable.columns.get(rowIdx);\n        const rowLabel = columnRow.label;\n        const rowType = columnRow.type;\n        const colLabel = columnCol.label;\n        const colValues = [];\n        const rowValues = [];\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const colValue = rows[i].getValue(colIdx);\n            if (colValues.indexOf(colValue) < 0) {\n                colValues.push(colValue);\n            }\n            const rowValue = rows[i].getValue(rowIdx);\n            if (rowValues.indexOf(rowValue) < 0) {\n                rowValues.push(rowValue);\n            }\n        }\n        this.pivotTable.columns.add({\n            id: rowLabel + '\\\\' + colLabel,\n            label: rowLabel + '\\\\' + colLabel,\n            description: '',\n            type: rowType,\n            dfmt: columnRow.displayFormat,\n            style: columnRow.style\n        });\n        const null_columns = [];\n        let colFieldFormatter = null;\n        if (utils.isNumericType(columnCol.type)) {\n            colFieldFormatter = this.formatNumber;\n        }\n        else if (utils.getDateDataTypes().indexOf(columnCol.type) >= 0) {\n            colFieldFormatter = this.formatDate;\n        }\n        for (let i = 0; i < colValues.length; i++) {\n            const colValue = colValues[i];\n            if (!colValue) {\n                null_columns.push(i);\n            }\n            else {\n                const label = colFieldFormatter\n                    ? colFieldFormatter(columnCol, colValue)\n                    : colValue;\n                this.pivotTable.columns.add({\n                    id: colValue,\n                    label: label,\n                    description: '',\n                    dfmt: columnField.displayFormat,\n                    type: this.settings.aggrFunc !== AggrFunc.Count\n                        ? columnField.type : DataType.Int64,\n                    style: columnField.style\n                });\n            }\n        }\n        let new_rows = [];\n        for (let i = 0; i < rowValues.length; i++) {\n            new_rows.push([]);\n            new_rows[i].push(rowValues[i]);\n        }\n        for (let i = 0; i < rowValues.length; i++) {\n            for (let j = 0; j < colValues.length; j++) {\n                if (null_columns.indexOf(j) >= 0)\n                    continue;\n                new_rows[i].push(this.calcAggrFunc(this.settings.aggrFunc, {\n                    colName: this.settings.colName,\n                    rowName: this.settings.rowName,\n                    fieldName: this.settings.fieldName,\n                    rowValue: rowValues[i],\n                    colValue: colValues[j]\n                }));\n            }\n        }\n        if (this.settings.totalsCol) {\n            this.pivotTable.columns.add({\n                id: \"total\",\n                label: i18n.getText('Facets', 'Pivot', 'TotalGridLabel'),\n                description: '',\n                dfmt: columnField.displayFormat,\n                type: this.settings.aggrFunc !== AggrFunc.Count\n                    ? columnField.type : DataType.Int64\n            });\n            for (let i = 0; i < new_rows.length; i++) {\n                const row = new_rows[i];\n                let totalByRow = 0;\n                if (this.settings.aggrFunc == AggrFunc.Min\n                    || this.settings.aggrFunc == AggrFunc.Max) {\n                    totalByRow = row[1];\n                }\n                for (let j = 1; j < row.length; j++) {\n                    const value = row[j];\n                    if (value !== null) {\n                        if (this.settings.aggrFunc === AggrFunc.Min) {\n                            if (value < totalByRow)\n                                totalByRow = value;\n                        }\n                        else if (this.settings.aggrFunc === AggrFunc.Max) {\n                            if (value > totalByRow)\n                                totalByRow = value;\n                        }\n                        else {\n                            totalByRow += value;\n                        }\n                    }\n                }\n                if (this.settings.aggrFunc === AggrFunc.Average) {\n                    totalByRow /= row.length - 1;\n                }\n                row.push(totalByRow);\n            }\n        }\n        for (const row of new_rows) {\n            this.pivotTable.addRow(row);\n        }\n        if (this.settings.totalsRow) {\n            let total_row = [];\n            // to be able to create date value\n            total_row.push(null);\n            for (let i = 1; i < this.pivotTable.columns.count; i++) {\n                const rows = this.pivotTable.getCachedRows();\n                let totalByCol = 0;\n                if (this.settings.aggrFunc == AggrFunc.Min\n                    || this.settings.aggrFunc == AggrFunc.Max) {\n                    totalByCol = rows[0].getValue(i);\n                }\n                for (let j = 0; j < rows.length; j++) {\n                    const value = rows[j].getValue(i);\n                    if (value !== null) {\n                        if (this.settings.aggrFunc === AggrFunc.Min) {\n                            if (value < totalByCol)\n                                totalByCol = value;\n                        }\n                        else if (this.settings.aggrFunc === AggrFunc.Max) {\n                            if (value > totalByCol)\n                                totalByCol = value;\n                        }\n                        else {\n                            totalByCol += value;\n                        }\n                    }\n                }\n                if (this.settings.aggrFunc === AggrFunc.Average) {\n                    totalByCol /= rows.length;\n                }\n                total_row.push(totalByCol);\n            }\n            this.pivotTable.addRow(total_row);\n            this.contentDiv.classList.add('pivot-grid-with-totals');\n        }\n        else {\n            this.contentDiv.classList.remove('pivot-grid-with-totals');\n        }\n    }\n    calcAggrFunc(func, options) {\n        switch (func) {\n            case AggrFunc.Sum:\n                return this.sum(options);\n            case AggrFunc.Average:\n                return this.average(options);\n            case AggrFunc.Min:\n                return this.min(options);\n            case AggrFunc.Max:\n                return this.max(options);\n            case AggrFunc.Count:\n                return this.count(options);\n            default:\n                return 0;\n        }\n    }\n    getSettings() {\n        return this.settings;\n    }\n    formatDate(column, value) {\n        const isDate = Object.prototype.toString.call(value) === '[object Date]';\n        let strValue = (value || '').toString();\n        if (isDate) {\n            if (column && column.displayFormat\n                && DFMT_REGEX.test(column.displayFormat)) {\n                strValue = column.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                    return i18n.dateTimeToStrEx(value, column.type, $1);\n                });\n            }\n            else {\n                const locale = i18n.getCurrentLocale();\n                const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n                switch (column.type) {\n                    case DataType.Date:\n                        strValue = value.toLocaleDateString(locale);\n                        break;\n                    case DataType.Time:\n                        strValue = value.toLocaleTimeString(locale, timeOptions);\n                        break;\n                    case DataType.DateTime:\n                        strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                        break;\n                }\n            }\n        }\n        return strValue;\n    }\n    formatNumber(column, value) {\n        let strValue = (value || '').toString();\n        if (typeof value == 'number') {\n            if (column && column.displayFormat\n                && DFMT_REGEX.test(column.displayFormat)) {\n                strValue = column.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                    return i18n.numberToStr(value, $1);\n                });\n            }\n            else {\n                strValue = value.toLocaleString();\n            }\n        }\n        return strValue;\n    }\n    sum(options) {\n        let result = 0;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            result += fieldValue;\n        }\n        return result;\n    }\n    average(options) {\n        let result = 0;\n        let count = 0;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            result += fieldValue;\n            count++;\n        }\n        if (count != 0)\n            result = result / count;\n        return result;\n    }\n    min(options) {\n        let min = Number.MAX_SAFE_INTEGER;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            if (fieldValue < min) {\n                min = fieldValue;\n            }\n        }\n        if (min == Number.MAX_SAFE_INTEGER)\n            return null;\n        return min;\n    }\n    max(options) {\n        let max = Number.MIN_SAFE_INTEGER;\n        const dataTable = this.getContextDataTable();\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            const fieldValue = rows[i].getValue(options.fieldName);\n            if (fieldValue > max) {\n                max = fieldValue;\n            }\n        }\n        if (max == Number.MIN_SAFE_INTEGER)\n            return null;\n        return max;\n    }\n    count(options) {\n        const dataTable = this.getContextDataTable();\n        let count = 0;\n        const rows = dataTable.getCachedRows();\n        for (let i = 0; i < rows.length; i++) {\n            const rowValue = rows[i].getValue(options.rowName);\n            const colValue = rows[i].getValue(options.colName);\n            if (rowValue !== options.rowValue\n                || colValue !== options.colValue) {\n                continue;\n            }\n            count++;\n        }\n        return count;\n    }\n}\n\nclass DataTableFacet extends ResultFacet {\n    constructor() {\n        super(...arguments);\n        this.grid = null;\n        this.title = i18n$1.getText('Facets', 'DataTable', 'FacetTitle');\n        this.dialogTitle = i18n$1.getText('Facets', 'DataTable', 'DlgTitle');\n    }\n    init(slot) {\n        super.init(slot);\n        this.reinitGrid();\n    }\n    getSettings() {\n        return this.settings;\n    }\n    reinitGrid() {\n        if (this.grid)\n            this.grid.destroy();\n        const options = this.container.options || {};\n        if (options.gridResolver) {\n            this.grid = options.gridResolver(this.contentDiv, this.getType());\n        }\n        if (this.grid == null) {\n            this.grid = new EasyGridWidget(this.contentDiv);\n        }\n        options.grid = options.grid || {};\n        options.grid.autoRefresh = false;\n        options.grid.addColumns = false;\n        const context = this.getContext();\n        options.grid.totals = this.settings;\n        this.grid.init(context, options.grid);\n    }\n    getType() {\n        return FacetType.DataGrid;\n    }\n    canDisplay() {\n        return true;\n    }\n    refreshCore() {\n        if (!this.grid)\n            return;\n        this.grid.refresh();\n    }\n    destroy() {\n        if (this.grid) {\n            this.grid.destroy();\n        }\n    }\n}\n\nclass FacetContainer extends Widget {\n    constructor(slot) {\n        super(slot);\n        this.facets = [];\n        this.options = {};\n        this.group = WidgetGroup.Result;\n    }\n    destroyCore() {\n        for (const facet of this.facets) {\n            facet.destroy();\n        }\n        this.clear();\n    }\n    createFacetTab(type) {\n        const options = this.options[type];\n        switch (type) {\n            case FacetType.Chart:\n                return new ChartFacet(this, options);\n            case FacetType.PivotTable:\n                return new PivotTableFacet(this, options);\n            default:\n                return new DataTableFacet(this, options);\n        }\n    }\n    getQuery() {\n        return this.getContext().getQuery();\n    }\n}\n\nclass ExportDialog {\n    constructor(context) {\n        this.context = context;\n        this.promise = null;\n    }\n    show(defFormat = null) {\n        if (!this.promise) {\n            const formats = this.context.getExportFormats();\n            if (formats.length == 0)\n                throw Error(\"No exporter has been registered.\");\n            defFormat = defFormat || formats[0];\n            this.promise = new Promise((resolve, reject) => {\n                const ds = this.context.getServices().getService('DialogService');\n                const body = domel('div')\n                    .addClass('kdlg-form-section')\n                    .addChild('div', b => b\n                    .addClass('kfrm-form')\n                    .addChild('div', b => b\n                    .addClass('kfrm-fields col-a-1 label-align-right')\n                    .addChild('label', b => b\n                    .addClass('kdlg-form-label', 'kflex-20')\n                    .attr('for', 'export_format')\n                    .addText(i18n$1.getText('ExportDlgFmtLabel')))\n                    .addChild('div', b => b\n                    .addClass('kfrm-select')\n                    .addChild('select', b => {\n                    b\n                        .attr('name', 'export_format')\n                        .id('exportFormat');\n                    for (const format of this.context.getExportFormats()) {\n                        b.addOption({\n                            value: format,\n                            title: i18n$1.getText(format) || format,\n                            selected: defFormat == format\n                        });\n                    }\n                }))))\n                    .toDOM();\n                ds.open({\n                    title: i18n$1.getText('ExportDlgTitle'),\n                    body: body,\n                    onSubmit: () => {\n                        const format = body.querySelector('#exportFormat').value;\n                        this.context.exportResult({\n                            format: format,\n                            success: resolve,\n                            error: reject\n                        });\n                        return true;\n                    }\n                });\n            });\n        }\n        return this.promise.finally(() => this.promise = null);\n    }\n}\n\nclass ResultFacetsPanel extends FacetContainer {\n    constructor(slot) {\n        super(slot);\n        this.activeFacetIndex = -1;\n        this.firstRender = true;\n        this.options = {\n            showExportButton: true,\n            showRefreshButton: true,\n            showMaximizeButton: true,\n            maximize2Window: false,\n            showProcessIndicator: true,\n            facetTypes: [FacetType.DataGrid, FacetType.Chart, FacetType.PivotTable]\n        };\n        this.menuItems = [\n            { id: FacetType.DataGrid, text: i18n.getText('Facets', 'AddMenuItems', 'DataTable') },\n            { id: FacetType.Chart, text: i18n.getText('Facets', 'AddMenuItems', 'Chart') },\n            { id: FacetType.PivotTable, text: i18n.getText('Facets', 'AddMenuItems', 'Pivot') }\n        ];\n        this.menuItemsFilter = (item) => {\n            if (this.options.facetTypes.indexOf(item.id) < 0)\n                return false;\n            if (item.id === FacetType.DataGrid) {\n                return this.facets.filter(facet => facet.getType() == FacetType.DataGrid).length === 0;\n            }\n            return true;\n        };\n        if (!this.slot.classList.contains(`${this.cssPrefix}-panel`)) {\n            this.slot.classList.add(`${this.cssPrefix}-panel`);\n        }\n        this.renderProcessBlock();\n    }\n    get cssPrefix() {\n        return 'eqjs-facets';\n    }\n    getWidgetType() {\n        return 'facetsPanel';\n    }\n    /**\n     * Initialize widget.\n     * @param context The context.\n     * @param options The options.\n     */\n    init(context, options) {\n        super.init(context, options);\n        this.setOptions(options);\n        this.destroyCore();\n        this.attachQueryObserver();\n        this.loadFacets();\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        if (this.queryEventCallbackId) {\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            //if something has changed, and that change is related to columns\n            const edata = event.data;\n            if (edata.part != QueryChangePart.All) {\n                return;\n            }\n            if (edata.source == this) {\n                return;\n            }\n            this.reloadFacets();\n            this.refreshCore(true);\n        });\n    }\n    refreshCore(force = false) {\n        if (this.firstRender || force) {\n            this.clear();\n            this.createAddMenu();\n            this.render();\n        }\n        this.validateAddFacetButton();\n        this.renderActiveFacet();\n        this.updateTotalRecords();\n    }\n    createAddMenu() {\n        this.addMenu = new PopupMenu({\n            items: this.menuItems,\n            id: \"FacetType-List\"\n        });\n    }\n    updateTotalRecords() {\n        const context = this.getContext();\n        const total = context.resultTable.getTotal();\n        this.recordsDiv.innerHTML = i18n.getText('Facets', 'TotalRecordsLabel') + ' ' + total;\n        if (total == 0) {\n            domel(this.exportDiv).hide();\n        }\n        else {\n            domel(this.exportDiv).show();\n        }\n    }\n    renderProcessBlock() {\n        const html = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n        this._processBlock = domel('div')\n            .addClass(`${this.cssPrefix}-spinner`)\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-progress-win8`, getMobileCssClass())\n            .addHtml(html))\n            .toDOM();\n    }\n    onProcessStartCore() {\n        if (this.options.showProcessIndicator) {\n            // FacetsPanel might be not rendered yet, so \n            // it has no body\n            if (!this._processBlock.parentNode && this.bodyDiv) {\n                this.bodyDiv.childNodes.forEach(el => {\n                    domel(el).hide();\n                });\n                this.bodyDiv.appendChild(this._processBlock);\n            }\n        }\n    }\n    onProcessEndCore() {\n        if (this.options.showProcessIndicator) {\n            if (this._processBlock.parentNode) {\n                try {\n                    this._processBlock.parentNode\n                        .removeChild(this._processBlock);\n                }\n                catch (e) {\n                }\n                finally {\n                    this.renderActiveFacet(false);\n                }\n            }\n        }\n    }\n    render() {\n        this.firstRender = false;\n        this.headerDiv = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.tabsDiv =\n            domel('div', this.headerDiv)\n                .addClass(`${this.cssPrefix}-tabs`)\n                .toDOM();\n        this.tabsUl = domel('ul', this.tabsDiv)\n            .addClass(`${this.cssPrefix}-nav-tabs`)\n            .toDOM();\n        this.bodyDiv =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-body`)\n                .toDOM();\n        for (const facet of this.facets) {\n            this.renderFacet(facet);\n        }\n        domel(this.tabsDiv)\n            .addChild('div', b => this.addFacetButton = b\n            .addClass(`${this.cssPrefix}-add-button`)\n            .title(i18n.getText('Facets', 'NewFacetTitle'))\n            .addChild('a', b => b\n            .attr('href', 'javascript:void(0)'))\n            .on('click', (e) => this.addClickHandler(e))\n            .toDOM());\n        const manageDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-manage`)\n            .toDOM();\n        this.recordsDiv = domel('div', manageDiv)\n            .addClass(`${this.cssPrefix}-total-recs`)\n            .toDOM();\n        if (this.options.showRefreshButton || this.options.showExportButton || this.options.showMaximizeButton) {\n            const bdb = domel('div', manageDiv)\n                .addClass(`${this.cssPrefix}-total-buttons`)\n                .toDOM();\n            if (this.options.showExportButton) {\n                this.exportDiv = domel('button', bdb)\n                    .on('click', () => this.exportHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-export`)\n                    .title(i18n.getText('Facets', 'ExportBtnTitle'))\n                    .toDOM();\n            }\n            if (this.options.showRefreshButton) {\n                domel('button', bdb)\n                    .on('click', () => this.refreshHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-refresh`)\n                    .title(i18n.getText('Facets', 'RefreshBtnTitle'));\n            }\n            if (this.options.showMaximizeButton) {\n                this.maximizeButton = domel('button', bdb)\n                    .on('click', () => this.options.maximize2Window ? this.maximizeHandler(true) : this.maximizeHandler())\n                    .addClass(`${this.cssPrefix}-button`)\n                    .addClass(`${this.cssPrefix}-button-maximize`)\n                    .title(i18n.getText('Facets', 'MaximizeBtnTitle'))\n                    .toDOM();\n            }\n        }\n    }\n    refreshHandler() {\n        const context = this.getContext();\n        context.fetchData({\n            success: () => {\n                // possibly we should move this logic to context\n                context.refreshWidgets(WidgetGroup.Result);\n            }\n        });\n    }\n    exportHandler() {\n        const context = this.getContext();\n        new ExportDialog(context)\n            .show();\n    }\n    maximizeHandler(toWindow) {\n        let b = domel(this.slot);\n        if (toWindow) {\n            b.toggleClass(`${eqCssPrefix}-maximized-2window`);\n            if (this.slot.classList.contains(`${eqCssPrefix}-maximized-2window`)) {\n                this.maximizeButton.title = i18n.getText('Facets', 'RestoreBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, true);\n            }\n            else {\n                this.maximizeButton.title = i18n.getText('Facets', 'MaximizeBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, true);\n            }\n        }\n        else {\n            const isMaximized = !this.slot.hasAttribute('data-is-maximized');\n            if (isMaximized) {\n                this.slot.setAttribute('data-is-maximized', '');\n                this.maximizeButton.title = i18n.getText('Facets', 'RestoreBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, true);\n            }\n            else {\n                this.slot.removeAttribute('data-is-maximized');\n                this.maximizeButton.title = i18n.getText('Facets', 'MaximizeBtnTitle');\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-restore`, false);\n                this.maximizeButton.classList.toggle(`${this.cssPrefix}-button-maximize`, true);\n            }\n            const arrToHide = document.querySelectorAll('[data-hide-on-max]');\n            arrToHide.forEach(el => {\n                if (isMaximized) {\n                    el.setAttribute('style', 'display: none;');\n                }\n                else {\n                    el.removeAttribute('style');\n                }\n            });\n        }\n        this.facets.forEach(facetTab => facetTab.onResize());\n    }\n    renderActiveFacet(refresh = true) {\n        this.tabsUl.querySelectorAll('li') //`.${this.cssPrefix}-header-item.${this.cssPrefix}-facet`)\n            .forEach((el, index) => {\n            if (el.classList.contains('active')) {\n                el.classList.remove('active');\n            }\n            if (this.activeFacetIndex === index) {\n                el.classList.add('active');\n            }\n        });\n        this.bodyDiv.querySelectorAll(`.${eqCssPrefix}-facet`)\n            .forEach((el, index) => {\n            domel(el).hide();\n            if (this.activeFacetIndex === index) {\n                domel(el).show();\n                if (refresh) {\n                    this.facets[index].refresh();\n                }\n            }\n        });\n    }\n    renderFacet(facet) {\n        this.renderFacetTab(facet);\n        const body = this.renderFacetSlot(facet);\n        facet.init(body);\n    }\n    renderFacetTab(facet) {\n        return domel('li', this.tabsUl)\n            //.addClass(`${this.cssPrefix}-header-item`, `${this.cssPrefix}-facet`)\n            //facet settings button\n            .addChild('span', b => b\n            .addClass(`${eqCssPrefix}-facet-settings`)\n            .on('click', (e) => {\n            e.stopPropagation();\n            this.settingsClickHandler(facet);\n        }))\n            .addChild('a', b => b\n            .addText(facet.title)\n            .attr('href', 'javascript:void(0)'))\n            //facet close button\n            .addChild('span', b => b\n            .addClass(`${eqCssPrefix}-facet-close`)\n            .on('click', (e) => {\n            e.stopPropagation();\n            this.closeClickHandler(facet);\n        }))\n            .on('click', (e) => this.selectClickHandler(facet))\n            .toDOM();\n    }\n    renderFacetSlot(facet) {\n        let element = domel('div', this.bodyDiv)\n            .addClass(`${eqCssPrefix}-facet`)\n            .hide()\n            .toDOM();\n        return element;\n    }\n    refreshFacetTabs() {\n        this.tabsUl.querySelectorAll('li') //`.${this.cssPrefix}-header-item.${this.cssPrefix}-facet`)\n            .forEach((item) => {\n            this.tabsUl.removeChild(item);\n        });\n        for (const facet of this.facets) {\n            this.renderFacetTab(facet);\n        }\n    }\n    removeFacet(facet) {\n        const index = this.facets.indexOf(facet);\n        if (index >= 0) {\n            this.facets.splice(index, 1);\n            const header = this.tabsUl.childNodes[index];\n            this.tabsUl.removeChild(header);\n            const body = this.bodyDiv.childNodes[index];\n            this.bodyDiv.removeChild(body);\n            if (this.facets.length > 0) {\n                this.activeFacetIndex =\n                    index < this.facets.length\n                        ? index\n                        : this.facets.length - 1;\n            }\n            else {\n                this.activeFacetIndex = -1;\n            }\n            this.renderActiveFacet();\n            this.validateAddFacetButton();\n        }\n    }\n    addClickHandler(ev) {\n        this.addMenu.showMenu({\n            anchor: ev.target,\n            itemFilterCallback: this.menuItemsFilter,\n            itemSelectedCallback: (data) => {\n                const facet = this.createFacetTab(data.id);\n                const facetSlot = this.renderFacetSlot(facet);\n                facet.init(facetSlot);\n                facet.showSettingsDialog()\n                    .then(submited => {\n                    if (submited) {\n                        this.facets.push(facet);\n                        this.activeFacetIndex = this.facets.length - 1;\n                        this.renderFacetTab(facet);\n                        this.renderActiveFacet();\n                        this.saveFacets();\n                    }\n                    else {\n                        this.bodyDiv.removeChild(facetSlot);\n                    }\n                    //this.validateAddFacetButton();\n                })\n                    .catch(error => console.error(error));\n            }\n        });\n    }\n    selectClickHandler(facet) {\n        const index = this.facets.indexOf(facet);\n        this.setActiveFacet(index);\n    }\n    settingsClickHandler(facet) {\n        facet.showSettingsDialog()\n            .then(submited => {\n            if (submited) {\n                this.refreshFacetTabs();\n                this.renderActiveFacet();\n                this.saveFacets();\n            }\n        })\n            .catch(error => console.error(error));\n    }\n    closeClickHandler(facet) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('Facets', 'RemoveFacetDlgTitle'), i18n.getText('Facets', 'RemoveFacetDlgContent')\n            .replace('{facetTitle}', facet.title))\n            .then(confirmed => {\n            if (confirmed) {\n                this.removeFacet(facet);\n                this.saveFacets();\n            }\n        })\n            .catch(error => console.error(error));\n    }\n    clear() {\n        this.firstRender = true;\n        this.slot.innerHTML = \"\";\n    }\n    createDefaultFacetIfNotExist() {\n        if (this.facets.length === 0) {\n            const facet = this.createFacetTab(FacetType.DataGrid);\n            this.facets.push(facet);\n            this.activeFacetIndex = 0;\n        }\n    }\n    validateAddFacetButton() {\n        this.addFacetButton.hidden = this.addMenu.getItems()\n            .filter(this.menuItemsFilter).length == 0;\n    }\n    setActiveFacet(index) {\n        if (this.activeFacetIndex != index) {\n            this.activeFacetIndex = index;\n            this.renderActiveFacet();\n            this.saveFacets(true);\n        }\n    }\n    setOptions(options) {\n        utils.assignDeep(this.options, options);\n    }\n    getDialogService() {\n        return this.getContext()\n            .getServices()\n            .getService('DialogService');\n    }\n    saveFacets(isActivate = false) {\n        const query = this.getQuery();\n        query.innerData = query.innerData || {};\n        query.innerData.facets = {\n            active: this.activeFacetIndex,\n            items: this.facets.map(f => f.saveToData())\n        };\n        query.fireChangedEvent({\n            part: QueryChangePart.Facets,\n            action: isActivate ? QueryChangeAction.Activate : QueryChangeAction.All,\n            source: this\n        });\n    }\n    reloadFacets() {\n        for (const facet of this.facets) {\n            facet.destroy();\n        }\n        this.loadFacets();\n    }\n    loadFacets() {\n        const query = this.getQuery();\n        this.facets = [];\n        if (query.innerData && query.innerData.facets) {\n            const items = query.innerData.facets.items;\n            for (const fd of items) {\n                const facet = this.createFacetTab(fd.type);\n                facet.loadFromData(fd);\n                this.facets.push(facet);\n            }\n            const active = query.innerData.facets.active;\n            this.activeFacetIndex = (active >= 0)\n                ? active\n                : this.facets.length - 1;\n        }\n        else {\n            this.createDefaultFacetIfNotExist();\n        }\n    }\n}\n\nclass ExportWidget extends Widget {\n    getWidgetType() {\n        return 'exportWidget';\n    }\n    constructor(slot) {\n        super(slot);\n        this.options = {\n            defFormat: 'csv',\n            enableExport: true\n        };\n        this.clickHandler = (ev) => {\n            if (!this.slot.hasAttribute('disabled'))\n                new ExportDialog(this.context).show(this.options.defFormat);\n        };\n        this.group = WidgetGroup.All;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.options = utils.assignDeep(this.options, options);\n        this.slot.addEventListener('click', this.clickHandler);\n    }\n    refreshCore() {\n        if (this.options.enableExport && this.context.resultTable\n            && this.context.resultTable.getCachedCount() > 0) {\n            this.slot.removeAttribute('disabled');\n        }\n        else {\n            this.slot.setAttribute('disabled', '');\n        }\n    }\n    destroyCore() {\n        this.slot.removeAttribute('disabled');\n        this.slot.removeEventListener('click', this.clickHandler);\n    }\n}\n\nclass AggrSettingsRenderer {\n    get cssPrefix() {\n        return 'eqjs-as';\n    }\n    constructor(options) {\n        this.selectState = {\n            columns: []\n        };\n        this.funcMap = {};\n        if (!options || !options.slot)\n            throw new Error('slot is required');\n        if (!options || !options.query)\n            throw new Error('query is required');\n        this.slot = options.slot;\n        this.query = options.query;\n        this.onChanged = options.onChanged;\n        this.dropSelectState();\n        this.dropState();\n    }\n    render() {\n        this.createFunctionMenu();\n        this.setInitialState();\n        this.changed();\n    }\n    setInitialState() {\n        const aggrSettings = this.query.getAggregationSettings();\n        const groups = aggrSettings.getInternalGroups();\n        const aggrs = aggrSettings.getAggregates();\n        for (const group of groups) {\n            this.state.groups.push({\n                columns: group.columns\n            });\n        }\n        for (const aggr of aggrs) {\n            this.state.aggregates.push({\n                colId: aggr.colId,\n                funcId: aggr.funcId\n            });\n        }\n        this.state.grandTotals = aggrSettings.hasGrandTotals();\n        this.state.recordCount = aggrSettings.hasRecordCount();\n    }\n    getAvailableColumns() {\n        return this.query.getColumns().filter(c => c.enabled);\n    }\n    renderCore() {\n        this.slot.innerHTML = '';\n        const cols = this.getAvailableColumns();\n        const slotb = domel(this.slot);\n        let currentGroup = null;\n        let groupBlockColumns = null;\n        let selectedBlockColumns = null;\n        const aggregates = this.state.aggregates;\n        let groupCounter = -1;\n        for (const col of cols) {\n            if (currentGroup) {\n                if (currentGroup.columns.indexOf(col.id) >= 0) {\n                    // render to current group div\n                    this.renderColumn(groupBlockColumns, col, true);\n                    continue;\n                }\n            }\n            currentGroup = this.getGroupForColumn(col.id);\n            if (currentGroup != null) {\n                groupCounter++;\n                // create groupDiv\n                const groupBlock = domel('div', this.slot)\n                    .addClass(`${this.cssPrefix}-group`)\n                    .data('gindex', `${groupCounter}`);\n                groupBlockColumns = domel('div', groupBlock.toDOM())\n                    .addClass(`${this.cssPrefix}-columns`);\n                this.renderColumn(groupBlockColumns, col, true);\n                continue;\n            }\n            const aggr = aggregates.filter(a => a.colId == col.id)[0];\n            if (aggr) {\n                const aggrBlock = domel('div', this.slot)\n                    .addClass(`${this.cssPrefix}-aggr`);\n                this.renderColumn(aggrBlock, col, true, aggr.funcId);\n                aggrBlock\n                    .addChild('div', b => b\n                    .addClass(`${this.cssPrefix}-buttons`)\n                    .addChild('button', b => b\n                    .addClass(`${this.cssPrefix}-unaggr-btn`)\n                    .title(i18n$1.getText('AggrSettings', 'UnaggrBtn'))\n                    .on('click', this.removeAggrBtnClickHandler.bind(this))));\n                continue;\n            }\n            if (this.selectState.columns.indexOf(col.id) >= 0) {\n                // create selectedDiv\n                if (selectedBlockColumns == null) {\n                    const selectedBlock = domel('div', this.slot)\n                        .addClass(`${this.cssPrefix}-selected`);\n                    selectedBlockColumns = domel('div', selectedBlock.toDOM())\n                        .addClass(`${this.cssPrefix}-columns`);\n                }\n                this.renderColumn(selectedBlockColumns, col, false);\n                continue;\n            }\n            // render column as is\n            this.renderColumn(slotb, col, false);\n        }\n        if (selectedBlockColumns) {\n            const buttonsContainer = domel('div', selectedBlockColumns.toDOM().parentElement)\n                .addClass(`${this.cssPrefix}-buttons`);\n            buttonsContainer.addChild('button', b => b\n                .addClass(`${this.cssPrefix}-group-btn`)\n                .title(i18n$1.getText('AggrSettings', 'GroupBtn'))\n                .on('click', this.groupBtnClickHandler.bind(this)));\n            if (this.selectState.columns.length == 1) {\n                buttonsContainer.addChild('button', b => b\n                    .addClass(`${this.cssPrefix}-aggr-btn`)\n                    .title(i18n$1.getText('AggrSettings', 'AggrBtn'))\n                    .on('click', this.aggrBtnClickHandler.bind(this)));\n            }\n        }\n        domel(this.slot)\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-counts`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.state.recordCount) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.countsCheckboxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'GroupCountsLabel')))))\n            .addChild('div', b => b\n            .addClass(`${this.cssPrefix}-grandtotals`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.state.grandTotals) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.grandCheckboxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'GrandTotalsLabel')))));\n        const groups = this.slot.querySelectorAll(`.${this.cssPrefix}-group`);\n        groups.forEach(el => {\n            domel(el)\n                .addChild('div', b => b\n                .addClass(`${this.cssPrefix}-buttons`)\n                .addChild('button', b => b\n                .addClass(`${this.cssPrefix}-ungroup-btn`)\n                .title(i18n$1.getText('AggrSettings', 'UngroupBtn'))\n                .on('click', this.removeGroupBtnClickHandler.bind(this))));\n        });\n        this.validateCheckboxes();\n    }\n    validateCheckboxes() {\n        if (this.selectState.columns.length === 0)\n            return;\n        let prevElement, prevInputEl, nextInputEl = null;\n        for (let i = 0; i < this.slot.childNodes.length; i++) {\n            const el = this.slot.childNodes[i];\n            if (el.classList.contains(`${this.cssPrefix}-selected`)) {\n                if (prevElement && prevElement.classList.contains(`${this.cssPrefix}-column`)) {\n                    prevInputEl = prevElement;\n                }\n            }\n            else if (el.classList.contains(`${this.cssPrefix}-column`)) {\n                if (prevElement && prevElement.classList.contains(`${this.cssPrefix}-selected`)) {\n                    nextInputEl = el;\n                }\n            }\n            prevElement = el;\n        }\n        for (let i = 0; i < this.slot.childNodes.length; i++) {\n            const el = this.slot.childNodes[i];\n            if (el.classList.contains(`${this.cssPrefix}-column`) && el != prevInputEl && el != nextInputEl) {\n                el.firstElementChild.firstElementChild.setAttribute('disabled', '');\n            }\n        }\n        const selector = `.${this.cssPrefix}-selected>.${this.cssPrefix}-columns>.${this.cssPrefix}-column`;\n        const selectedCols = this.slot.querySelectorAll(selector);\n        for (let i = 1; i < selectedCols.length - 1; i++) {\n            const el = selectedCols[i];\n            el.firstElementChild.firstElementChild.setAttribute('disabled', '');\n        }\n    }\n    isValid() {\n        const hasSelected = this.selectState.columns.length;\n        const hasAggrs = this.state.aggregates.length > 0;\n        const hasGroups = this.state.groups.length > 0;\n        const hasTotals = this.state.grandTotals;\n        const hasCounts = this.state.recordCount;\n        if (hasSelected)\n            return false;\n        if (hasGroups) {\n            return hasAggrs || hasCounts;\n        }\n        if (hasAggrs) {\n            return hasGroups || hasTotals;\n        }\n        return false;\n    }\n    getValidationMessage() {\n        const hasSelected = this.selectState.columns.length;\n        const hasAggrs = this.state.aggregates.length > 0;\n        const hasGroups = this.state.groups.length > 0;\n        const hasTotals = this.state.grandTotals;\n        const hasRecCount = this.state.recordCount;\n        if (hasSelected)\n            return `${i18n$1.getText('AggrSettings', 'SelectedError')} `;\n        if (hasGroups && !hasAggrs && !hasRecCount)\n            return `${i18n$1.getText('AggrSettings', 'NoAggrOrCountError')} `;\n        if (hasAggrs && !hasGroups && !hasTotals)\n            return `${i18n$1.getText('AggrSettings', 'NoGroupsOrGrandError')} `;\n        return `${i18n$1.getText('AggrSettings', 'NoGroupsOrAggrError')} `;\n    }\n    getSettings() {\n        const settings = new AggregationSettings(this.query);\n        for (const group of this.state.groups) {\n            settings.addGroup({ columns: group.columns });\n        }\n        for (const aggr of this.state.aggregates) {\n            settings.addAggregateColumn(aggr.colId, aggr.funcId);\n        }\n        if (this.state.grandTotals) {\n            settings.addGrandTotals();\n        }\n        if (this.state.recordCount) {\n            settings.addCounts();\n        }\n        return settings;\n    }\n    renderColumn(b, col, isTaken, funcId = null) {\n        b.addChild('div', b => {\n            b.data('colid', col.id);\n            const caption = funcId\n                ? `${col.caption} (${this.funcMap[funcId].caption})`\n                : col.caption;\n            if (!isTaken) {\n                b\n                    .addClass(`${this.cssPrefix}-column`)\n                    .addChild('label', b => b\n                    .addClass('checkbox')\n                    .addChild('input', b => {\n                    b.attr('type', 'checkbox');\n                    if (this.selectState.columns.indexOf(col.id) >= 0) {\n                        b.attr('checked', '');\n                    }\n                    b.on('change', this.colCheckboxChangeHandler.bind(this));\n                })\n                    .addText(caption));\n            }\n            else {\n                b\n                    .addClass(`${this.cssPrefix}-column-used`)\n                    .addText(caption);\n            }\n        });\n    }\n    getGroupForColumn(colId) {\n        const index = this.getGroupIndexForColumn(colId);\n        if (index >= 0)\n            return this.state.groups[index];\n        return null;\n    }\n    getGroupIndexForColumn(colId) {\n        for (var i = 0; i < this.state.groups.length; i++) {\n            const group = this.state.groups[i];\n            if (group.columns.indexOf(colId) >= 0)\n                return i;\n        }\n        return -1;\n    }\n    grandCheckboxChangeHandler(ev) {\n        this.state.grandTotals = !this.state.grandTotals;\n        this.onChanged && this.onChanged();\n    }\n    countsCheckboxChangeHandler(ev) {\n        this.state.recordCount = !this.state.recordCount;\n        this.onChanged && this.onChanged();\n    }\n    colCheckboxChangeHandler(ev) {\n        const input = ev.target;\n        const colId = input.parentElement.parentElement.getAttribute('data-colid');\n        // toggle column to track state\n        const index = this.selectState.columns.indexOf(colId);\n        if (index >= 0) {\n            this.selectState.columns.splice(index, 1);\n        }\n        else {\n            this.selectState.columns.push(colId);\n            const cols = this.getAvailableColumns();\n            this.selectState.columns = this.selectState.columns.sort((col1, col2) => {\n                const index1 = cols.findIndex(c => c.id == col1);\n                const index2 = cols.findIndex(c => c.id == col2);\n                return index1 - index2;\n            });\n        }\n        this.changed();\n    }\n    groupBtnClickHandler() {\n        this.state.groups.push({ columns: this.selectState.columns });\n        const cols = this.getAvailableColumns();\n        this.state.groups = this.state.groups.sort((g1, g2) => {\n            const g1Index = cols.findIndex(c => c.id == g1.columns[0]);\n            const g2Index = cols.findIndex(c => c.id == g2.columns[0]);\n            return g1Index - g2Index;\n        });\n        this.dropSelectState();\n        this.changed();\n    }\n    removeGroupBtnClickHandler(ev) {\n        const btn = ev.target;\n        const index = Number.parseInt(btn.parentElement.parentElement.getAttribute('data-gindex'));\n        this.state.groups.splice(index, 1);\n        this.changed();\n    }\n    removeAggrBtnClickHandler(ev) {\n        const btn = ev.target;\n        const colId = btn.parentElement.parentElement.querySelector(`.${this.cssPrefix}-column-used`)\n            .getAttribute('data-colid');\n        const index = this.state.aggregates.findIndex(a => a.colId == colId);\n        if (index >= 0) {\n            this.state.aggregates.splice(index, 1);\n            this.changed();\n        }\n    }\n    aggrBtnClickHandler(ev) {\n        this.query.getModel();\n        const colId = this.selectState.columns[0];\n        const col = this.getAvailableColumns().filter(c => c.id == colId)[0];\n        this.functionMenu.showMenu({\n            anchor: ev.target,\n            itemFilterCallback: (item) => {\n                return this.funcMap[item.id].appliedTypes.indexOf(col.expr.dataType) >= 0;\n            },\n            itemSelectedCallback: (data) => {\n                this.state.aggregates.push({\n                    colId: colId,\n                    funcId: data.id\n                });\n                this.dropSelectState();\n                this.changed();\n            }\n        });\n    }\n    clear() {\n        this.dropSelectState();\n        this.dropState();\n        this.changed();\n    }\n    dropSelectState() {\n        this.selectState = {\n            columns: []\n        };\n    }\n    dropState() {\n        this.state = {\n            groups: [],\n            aggregates: [],\n            recordCount: true,\n            grandTotals: false\n        };\n    }\n    changed() {\n        this.onChanged && this.onChanged();\n        this.renderCore();\n    }\n    createFunctionMenu() {\n        const model = this.query.getModel();\n        const funcs = this.query.getModel().getAggrFunctions();\n        const items = [];\n        for (const func of funcs) {\n            //add all functions except those we don't process\n            if (!func || func.id == 'MIN' || func.id == 'MAX' || func.id == 'CNTDST')\n                continue;\n            this.funcMap[func.id] = func;\n            const funcCaption = model\n                .getAggrFunctionCaption(func.id);\n            const item = {\n                id: func.id,\n                text: funcCaption\n            };\n            items.push(item);\n        }\n        let menuId = this.slot.id;\n        if (menuId) {\n            menuId += '-FunctionsMenu';\n        }\n        const menuOptions = {\n            items: items,\n            id: menuId,\n            searchBoxAlwaysShown: false,\n            domWriteItemsId: true\n        };\n        this.functionMenu = new PopupMenu(menuOptions);\n    }\n}\n\nclass AggrSettingsDialog {\n    constructor(context) {\n        this.context = context;\n        this.promise = null;\n    }\n    show(query) {\n        const initQuery = query || this.context.getQuery();\n        // copy query to prevent changes\n        this.query = this.context.createQuery();\n        this.query.loadFromData(initQuery.toJSONData());\n        // to rewrite with returning new aggrsettigns\n        // structure instead of apply on submit\n        if (!this.promise) {\n            this.promise = new Promise((resolve, reject) => {\n                const ds = this.context.getServices().getService('DialogService');\n                this.body = this.renderBody();\n                var dlg = ds.open({\n                    title: i18n$1.getText('AggrSettings', 'AggrDialogTitle'),\n                    body: this.body,\n                    onSubmit: () => {\n                        if (this.query.enableAggregation && !this.renderer.isValid())\n                            return false;\n                        initQuery.enableAggregation = this.query.enableAggregation;\n                        if (initQuery.enableAggregation) {\n                            initQuery.useAggregation(settings => {\n                                const s = this.renderer.getSettings();\n                                settings.loadFromData(s.saveToData());\n                            });\n                        }\n                        initQuery.fireChangedEvent({\n                            part: QueryChangePart.Aggregation,\n                            wasModified: false\n                        });\n                        resolve();\n                        return true;\n                    },\n                    onCancel: () => {\n                        resolve();\n                    }\n                });\n                this.renderer = new AggrSettingsRenderer({\n                    slot: this.body.querySelector('#AggrSettingsComponent'),\n                    query: this.query,\n                    onChanged: () => {\n                        dlg.clearAlert();\n                        const isValid = this.renderer.isValid();\n                        if (!isValid) {\n                            const error = this.renderer.getValidationMessage();\n                            dlg.showAlert(error, 'warning');\n                        }\n                        const btn = dlg.getRootElement()\n                            .querySelector('.kfrm-button.is-info');\n                        btn.disabled = !isValid && this.query.enableAggregation;\n                    }\n                });\n                if (this.query.enableAggregation) {\n                    this.renderer.render();\n                }\n            });\n        }\n        return this.promise.catch(e => console.error(e))\n            .finally(() => this.promise = null);\n    }\n    renderBody() {\n        const b = domel('div')\n            .addChild('div', b => b\n            .addClass(`eqjs-as-enableaggr`)\n            .addChild('label', b => b\n            .addClass('eqjs-ctrl-switch')\n            .addChild('input', b => {\n            b.attr('type', 'checkbox');\n            if (this.query.enableAggregation) {\n                b.attr('checked', '');\n            }\n            b.on('change', this.enableAggrCheckBoxChangeHandler.bind(this));\n        })\n            .addChild('span', b => b\n            .addClass('slider round'))\n            .addChild('span', b => b\n            .addClass('switch-text')\n            .addText(i18n$1.getText('AggrSettings', 'EnableAggrLabel')))))\n            .addChild('div', b => b\n            .id('AggrSettingsComponent'));\n        return b.toDOM();\n    }\n    enableAggrCheckBoxChangeHandler(e) {\n        this.query.enableAggregation = !this.query.enableAggregation;\n        this.body.querySelector('#AggrSettingsComponent').innerHTML = '';\n        if (this.query.enableAggregation) {\n            this.renderer.render();\n        }\n        else {\n            const btn = this.body ? this.body.closest('.kdlg-modal').querySelector('footer .kfrm-button.is-info') : null;\n            if (btn) {\n                btn.disabled = false;\n            }\n        }\n    }\n}\n\n/**\n * The widget responsed for rendering the name of the current query.\n */\nclass AggregationBar extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The HTML element where our widget should be placed.\n     * @param customQuery The custom query\n     */\n    constructor(slot, customQuery) {\n        super(slot);\n        this.linkClickCallback = () => {\n            new AggrSettingsDialog(this.context).show(this.getQuery());\n        };\n        this.queryEventCallbackId = null;\n        this.customQuery = customQuery;\n        this.group = WidgetGroup.Query | WidgetGroup.QueryStatus;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.destroyCore();\n        this.attachQueryObserver();\n    }\n    get cssPrefix() {\n        return 'eqjs-aggrb';\n    }\n    getWidgetType() {\n        return 'aggregationBar';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.render();\n    }\n    getLinkText() {\n        const query = this.getQuery();\n        if (query.enableAggregation) {\n            const aggrSettings = query.getAggregationSettings();\n            const groups = aggrSettings.getInternalGroups();\n            const aggrs = aggrSettings.getAggregates();\n            let groupArr = [];\n            const cols = query.getColumns();\n            for (const group of groups) {\n                const colNames = group.columns.map(value => {\n                    const col = cols.find(c => c.id == value);\n                    if (col) {\n                        return col.caption;\n                    }\n                    else {\n                        return '';\n                    }\n                });\n                groupArr.push(`[${colNames.join(', ')}]`);\n            }\n            const groupString = groupArr.join(', ');\n            let aggrArr = [];\n            const funcs = query.getModel().getAggrFunctions();\n            for (const aggr of aggrs) {\n                const col = cols.find(c => c.id == aggr.colId);\n                const func = funcs.find(f => f.id == aggr.funcId);\n                if (col && func) {\n                    aggrArr.push(`${col.caption} (${func.caption})`);\n                }\n            }\n            const aggrString = aggrArr.join(', ');\n            return `${groupString || i18n$1.getText('AggrSettings', 'NoGroupsLabel')} ::: ${aggrString ? `<${aggrString}>` : i18n$1.getText('AggrSettings', 'NoAggrsLabel')}`;\n        }\n        else {\n            return i18n$1.getText('AggrSettings', 'EmptySettingsLabel');\n        }\n    }\n    render() {\n        this.slot.classList.add(`${this.cssPrefix}-panel`);\n        const mobClass = getMobileCssClass();\n        if (mobClass) {\n            this.slot.classList.add(mobClass);\n        }\n        if (!this.dialogLink) {\n            this.dialogLink = document.createElement('a');\n            this.dialogLink.setAttribute('href', 'javascript:void(0)');\n            this.slot.appendChild(this.dialogLink);\n        }\n        // Update\n        this.dialogLink.textContent = this.getLinkText();\n        this.dialogLink.removeEventListener('click', this.linkClickCallback);\n        this.dialogLink.addEventListener('click', this.linkClickCallback);\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n        this.dialogLink = null;\n    }\n    attachQueryObserver() {\n        const query = this.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.refreshCore();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    destroyCore() {\n        this.clear();\n        this.detachQueryObserver();\n    }\n    getQuery() {\n        return this.customQuery || this.context.getQuery();\n    }\n}\n\nclass LocaleWidget extends Widget {\n    /**\n    * The default constructor.\n    * @param slot The html element.\n    */\n    constructor(slot) {\n        super(slot);\n        this.changeLocale = () => {\n            const newLocale = this.selectEl.value;\n            i18n.setCurrentLocale(newLocale);\n            this.context.refreshWidgets(WidgetGroup.All);\n        };\n        this.group = WidgetGroup.None;\n    }\n    init(context, options) {\n        super.init(context, options);\n        this.clear();\n        this.render();\n    }\n    getWidgetType() {\n        return 'changeLocale';\n    }\n    render() {\n        const locales = i18n.getLocales();\n        if (locales.length > 1) {\n            this.selectEl = document.createElement('select');\n            for (let locale of locales) {\n                let optionEl = document.createElement('option');\n                optionEl.value = locale.locale;\n                optionEl.innerHTML = this.displayLocaleName(locale);\n                this.selectEl.appendChild(optionEl);\n            }\n            this.selectEl.value = i18n.getCurrentLocale();\n            this.selectEl.classList.add('eqv-select');\n            this.selectEl.addEventListener('change', this.changeLocale);\n            this.slot.appendChild(this.selectEl);\n        }\n    }\n    displayLocaleName(locale) {\n        if (locale.englishName && locale.displayName) {\n            return `${locale.englishName} - ${locale.displayName}`;\n        }\n        else if (locale.englishName) {\n            return locale.englishName;\n        }\n        else if (locale.displayName) {\n            return locale.displayName;\n        }\n        return locale.locale;\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n    }\n    destroyCore() {\n        this.clear();\n    }\n}\n\n/**\n * The widget responsed for rendering the name of the current query.\n */\nclass QueryNameWidget extends Widget {\n    /**\n     * The default constructor.\n     * @param slot The HTML element where our widget should be placed.\n     */\n    constructor(slot) {\n        super(slot);\n        this.queryEventCallbackId = null;\n        this.group = WidgetGroup.Query | WidgetGroup.QueryStatus;\n        this.nameTemplate = '{name}';\n    }\n    init(context, options) {\n        super.init(context, options);\n        if (options && options.nameTemplate) {\n            this.nameTemplate = options.nameTemplate;\n        }\n        this.destroyCore();\n        this.attachQueryObserver();\n    }\n    get cssPrefix() {\n        return 'eqjs-query-name';\n    }\n    getWidgetType() {\n        return 'queryName';\n    }\n    /**\n     * Refresh widget implementation\n     */\n    refreshCore() {\n        this.render();\n    }\n    render() {\n        this.slot.classList.add(`${this.cssPrefix}`);\n        const mobClass = getMobileCssClass();\n        if (mobClass) {\n            this.slot.classList.add(mobClass);\n        }\n        if (!this.nameSlot) {\n            this.nameSlot = document.createElement('div');\n            this.nameSlot.classList.add(`${this.cssPrefix}-text`);\n            this.nameSlot.classList.add(`${this.cssPrefix}-theme`);\n            this.slot.appendChild(this.nameSlot);\n        }\n        if (!this.asteriskSlot) {\n            this.asteriskSlot = document.createElement('span');\n            this.asteriskSlot.innerHTML = \"*\";\n            this.asteriskSlot.classList.add(`${this.cssPrefix}-asterisk`);\n            this.slot.appendChild(this.asteriskSlot);\n        }\n        if (!this.tooltipSlot) {\n            this.tooltipSlot = document.createElement('span');\n            this.tooltipSlot.classList.add(`${this.cssPrefix}-tooltip`);\n            this.tooltipSlot.classList.add(`${this.cssPrefix}-theme`);\n            this.slot.appendChild(this.tooltipSlot);\n        }\n        // Update\n        const query = this.context.getQuery();\n        const queryName = query.getName();\n        const queryDescription = query.getDescription() || '';\n        const text = this.nameTemplate\n            .replace('{name}', queryName)\n            .replace('{description}', queryDescription);\n        this.nameSlot.textContent = text;\n        this.tooltipSlot.textContent = text;\n        this.asteriskSlot.style.visibility = query.isModified() ? \"visible\" : \"hidden\";\n    }\n    clear() {\n        this.slot.innerHTML = \"\";\n        this.nameSlot = null;\n        this.tooltipSlot = null;\n        this.asteriskSlot = null;\n    }\n    attachQueryObserver() {\n        const query = this.context.getQuery();\n        this.queryEventCallbackId = query.addChangedCallback(event => {\n            this.refreshCore();\n        });\n    }\n    detachQueryObserver() {\n        if (this.queryEventCallbackId) {\n            const query = this.context.getQuery();\n            query.removeChangedCallback(this.queryEventCallbackId);\n        }\n    }\n    destroyCore() {\n        this.clear();\n        this.detachQueryObserver();\n    }\n}\n\nclass View {\n    // Widgets END\n    constructor() {\n        this.domRoots = [document];\n        this.defaultViewOptions = {\n            enableExport: true,\n            disableConfirmationOnQueryChange: false,\n            queryFileExtensions: 'text/xml,application/json',\n            result: {\n                clearResultOnQueryChange: true,\n                showChart: true,\n                showProcessIndicator: true\n            },\n            widgets: {\n                resultGrid: {\n                    addColumns: false\n                }\n            },\n            handlers: {}\n        };\n        this.viewOptions = {};\n        this.resultOptions = {};\n        this.enableExport = false;\n        this.services = EqServiceProvider.getInstance();\n        this.resetContext();\n        this.renderSpinner();\n    }\n    resetContext() {\n        this.context = createEqContext();\n    }\n    getDialogService() {\n        return this.services.getService('DialogService');\n    }\n    init(options) {\n        try {\n            this.context.initStart();\n            // to support shadow DOM rendering\n            if (options && options.shadowRoots)\n                this.domRoots = this.domRoots.concat(options.shadowRoots);\n            this.viewOptions = this.initOptions(options);\n            this.resultOptions = utils.assignDeep(this.defaultViewOptions.result, this.viewOptions.result);\n            this.initWidgets(this.viewOptions);\n            this.context.init(this.viewOptions);\n            this.initDone();\n        }\n        catch (err) {\n            this.context.throwError({ action: 'Init', sourceError: err });\n        }\n    }\n    initOptions(options) {\n        options = utils.assignDeep(this.defaultViewOptions, options);\n        // support old format\n        if (!options.widgets.easyGrid) {\n            options.widgets.easyGrid = options.widgets.resultGrid || {};\n        }\n        // map columnTitleFormat option to widgets that have similar option\n        if (options.columnTitleFormat) {\n            this.context.options.columnTitleFormat = options.columnTitleFormat;\n        }\n        //to support old paging options (should be removed in the next versions)\n        options.widgets.easyGrid.paging =\n            utils.assignDeep({}, options.result.paging, options.widgets.easyGrid.paging);\n        this.enableExport = options.enableExport || false;\n        if (!options.widgets.exportWidget) {\n            options.widgets.exportWidget = {};\n        }\n        options.widgets.exportWidget.enableExport = this.enableExport;\n        return options;\n    }\n    initWidgets(options) {\n        let queryPanel = \"QueryPanel\";\n        let columnsPanel = \"ColumnsPanel\";\n        let entitiesPanel = \"EntitiesPanel\";\n        let resultPanel = \"ResultPanel\";\n        let columnsBar = \"ColumnsBar\";\n        let sortingBar = \"SortingBar\";\n        let filterBar = \"FilterBar\";\n        let processBar = \"ProcessBar\";\n        let statementPanel = \"StatementPanel\";\n        let changeLocale = \"ChangeLocale\";\n        let queryNameLabel = \"QueryNameLabel\";\n        let facetsPanel = \"ResultFacetsPanel\";\n        let resultCount = \"ResultCount\";\n        let exportButton = \"ExportButton\";\n        let aggregationBar = \"AggregationBar\";\n        if (options.slots) {\n            queryNameLabel = options.slots.queryNameLabel || queryNameLabel;\n            queryPanel = options.slots.queryPanel || queryPanel;\n            columnsPanel = options.slots.columnsPanel || columnsPanel;\n            columnsBar = options.slots.columnsBar || columnsBar;\n            entitiesPanel = options.slots.entitiesPanel || entitiesPanel;\n            resultPanel = options.slots.resultPanel || resultPanel;\n            statementPanel = options.slots.statementPanel || statementPanel;\n            processBar = options.slots.processBar || processBar;\n            changeLocale = options.slots.changeLocale || changeLocale;\n            facetsPanel = options.slots.facetsPanel || facetsPanel;\n            resultCount = options.slots.resultCountSpan || resultCount;\n            filterBar = options.slots.filterBar || filterBar;\n            exportButton = options.slots.exportButtons || exportButton;\n            aggregationBar = options.slots.aggregationBar || aggregationBar;\n        }\n        const epElement = this.resolveElement(entitiesPanel);\n        if (epElement && !this.entitiesPanelWidget) {\n            this.entitiesPanelWidget = this.createEntitiesPanelWidget(epElement);\n            this.context.addWidget(this.entitiesPanelWidget);\n        }\n        const cpElement = this.resolveElement(columnsPanel);\n        if (cpElement && !this.columnsPanelWidget) {\n            this.columnsPanelWidget = this.createColumnsPanelWidget(cpElement);\n            this.context.addWidget(this.columnsPanelWidget);\n        }\n        const cbElement = this.resolveElement(columnsBar);\n        if (cbElement && !this.columnsBarWidget) {\n            this.columnsBarWidget = this.createColumnsBarWidget(cbElement);\n            this.context.addWidget(this.columnsBarWidget);\n        }\n        const qpElement = this.resolveElement(queryPanel);\n        if (qpElement && !this.queryPanelWidget) {\n            this.queryPanelWidget = this.createQueryPanelWidget(qpElement);\n            this.context.addWidget(this.queryPanelWidget);\n        }\n        this.resultPanelSlot = this.resolveElement(resultPanel);\n        if (this.resultPanelSlot) {\n            if (!this.resultGridWidget) {\n                let gridPanel = addElement(this.resultPanelSlot, 'div', { cssClass: 'eqv-result-grid' });\n                this.resultGridWidget = this.createResultGridWidget(gridPanel);\n                this.context.addWidget(this.resultGridWidget);\n            }\n            if (this.resultOptions.showChart && !this.chartWidget) {\n                let chartPanel = addElement(this.resultPanelSlot, 'div', { cssClass: 'eqv-chart-panel' });\n                chartPanel.style.display = 'none';\n                this.chartWidget = this.createChartWidget(chartPanel);\n                this.context.addWidget(this.chartWidget);\n            }\n        }\n        const qnElement = this.resolveElement(queryNameLabel);\n        if (qnElement && !this.queryNameWidget) {\n            this.queryNameWidget = this.createQueryNameWidget(qnElement);\n            this.context.addWidget(this.queryNameWidget);\n        }\n        const fbElement = this.resolveElement(filterBar);\n        if (fbElement && !this.filterBarWidget) {\n            this.filterBarWidget = this.createFilterBarWidget(fbElement);\n            this.context.addWidget(this.filterBarWidget);\n        }\n        const sbElement = this.resolveElement(sortingBar);\n        if (sbElement && !this.sortingBarWidget) {\n            this.sortingBarWidget = this.createSortingBarWidget(sbElement);\n            this.context.addWidget(this.sortingBarWidget);\n        }\n        const pbElement = this.resolveElement(processBar);\n        if (pbElement && !this.processWidget) {\n            this.processWidget = this.createProcessWidget(pbElement);\n            this.context.addWidget(this.processWidget);\n        }\n        const stElement = this.resolveElement(statementPanel);\n        if (stElement && !this.statementPanelWidget) {\n            this.statementPanelWidget = this.createStatementPanelWidget(stElement);\n            this.context.addWidget(this.statementPanelWidget);\n        }\n        const clElement = this.resolveElement(changeLocale);\n        if (clElement) {\n            const widget = this.createLocaleWidget(clElement);\n            this.context.addWidget(widget);\n        }\n        const fpElement = this.resolveElement(facetsPanel);\n        if (fpElement && !this.resultFacetPanelWidget) {\n            this.resultFacetPanelWidget = this.createResultFacetsPanel(fpElement);\n            this.context.addWidget(this.resultFacetPanelWidget);\n        }\n        const ewElement = this.resolveElement(exportButton);\n        if (ewElement && !this.exportWidget) {\n            this.exportWidget = this.createExportWidget(ewElement);\n            this.context.addWidget(this.exportWidget);\n        }\n        this.resultCountSlot = this.resolveElement(resultCount);\n        const aggrbElement = this.resolveElement(aggregationBar);\n        if (aggrbElement && !this.aggregationBarWidget) {\n            this.aggregationBarWidget = this.createAggregationBarWidget(aggrbElement);\n            this.context.addWidget(this.aggregationBarWidget);\n        }\n    }\n    initDone() { }\n    resolveElement(elementOrId) {\n        if (typeof elementOrId === 'string') {\n            for (const domRoot of this.domRoots) {\n                const el = domRoot.getElementById(elementOrId);\n                if (el)\n                    return el;\n            }\n            return null;\n        }\n        return elementOrId;\n    }\n    resolveElementsByClassName(className) {\n        let result = [];\n        for (const domRoot of this.domRoots) {\n            const elemList = domRoot.querySelectorAll('.' + className);\n            for (let i = 0; i < elemList.length; i++) {\n                result.push(elemList[i]);\n            }\n        }\n        return result;\n    }\n    /**\n    * Shows records count.\n    * @param count The value to show.\n    */\n    displayRecordsCount(count) {\n        if (this.resultCountSlot && (typeof count !== 'undefined')) {\n            this.resultCountSlot.style.display = \"inline\";\n            this.resultCountSlot.innerHTML = i18n.getText(\"MsgResultCount\").replace(\"{0}\", count.toString());\n        }\n    }\n    getContext() {\n        return this.context;\n    }\n    /**\n     * Sets dialog service for the view\n     * @param dialogService The dialog service.\n     */\n    setDialogService(dialogService) {\n        this.context.getServices().registerService('DialogService', () => dialogService);\n    }\n    /** @deprecated `executeQuery` is deprecated. Use `fetchData` instead*/\n    executeQuery(options) {\n        console.warn('`executeQuery` is deprecated. Use `fetchData` instead');\n        this.fetchData(options);\n    }\n    /**\n    * Fetches the data according to the query and other options defined in the context.\n    * @param options The options.\n    */\n    fetchData(options) {\n        options = options || { refresh: true };\n        this.context.clearResult();\n        //don't run fetch if the query is empty\n        if (this.context.getQuery().isEmpty() && !this.resultOptions.fetchEmptyQueries)\n            return;\n        this.showResultSpinner();\n        this.context.fetchData(Object.assign(Object.assign({}, options), { elasticPaging: options.elasticPaging, success: (result) => {\n                this.hideResultSpinner();\n                this.toggleExportButtons();\n                this.displayRecordsCount(this.context.resultTable.getTotal());\n                if (options.refresh === true) {\n                    this.context.refreshWidgets(WidgetGroup.Result);\n                }\n                if (options.callback) {\n                    options.callback();\n                }\n                if (options.success) {\n                    options.success(result);\n                }\n            }, error: () => {\n                this.hideResultSpinner();\n            } }));\n    }\n    toggleExportButtons() {\n        if (this.enableExport && this.context.resultTable\n            && this.context.resultTable.getCachedCount() > 0) {\n            this.enableExportButtons();\n        }\n        else {\n            this.disableExportButtons();\n        }\n    }\n    enableExportButtons() {\n        // Nothing to do\n    }\n    disableExportButtons() {\n        // Nothing to do\n    }\n    renderSpinner() {\n        const html = '<div class=\"wBall\" id=\"wBall_1\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_2\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_3\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_4\"><div class=\"wInnerBall\"></div></div><div class=\"wBall\" id=\"wBall_5\"><div class=\"wInnerBall\"></div></div>';\n        this._spinnerDiv = domel('div')\n            .addClass(`eqjs-result-spinner`)\n            .addChild('div', b => b\n            .addClass(`${eqCssPrefix}-progress-win8`, getMobileCssClass())\n            .addHtml(html))\n            .toDOM();\n    }\n    showResultSpinner() {\n        if (this.resultOptions.showProcessIndicator && this.resultPanelSlot) {\n            if (!this._spinnerDiv.parentNode) {\n                for (let i = 0; i < this.resultPanelSlot.children.length; i++) {\n                    const el = this.resultPanelSlot.children[i];\n                    domel(el).hide();\n                }\n                this.resultPanelSlot.appendChild(this._spinnerDiv);\n            }\n        }\n    }\n    hideResultSpinner() {\n        if (this.resultOptions.showProcessIndicator && this.resultPanelSlot) {\n            if (this._spinnerDiv.parentNode) {\n                this._spinnerDiv.parentNode.removeChild(this._spinnerDiv);\n                for (let i = 0; i < this.resultPanelSlot.children.length; i++) {\n                    const el = this.resultPanelSlot.children[i];\n                    domel(el).show();\n                }\n            }\n        }\n    }\n    /**\n    * Creates the widget that represents Chart Widget.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createChartWidget(slotElement) {\n        if (this.resultOptions.chartWidgetResolver) {\n            return this.resultOptions.chartWidgetResolver(slotElement);\n        }\n        else {\n            return new ChartJsWidget(slotElement);\n        }\n    }\n    /**\n    * Creates the widget that represents Result Grid.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createResultGridWidget(slotElement) {\n        if (this.resultOptions.resultGridResolver) {\n            return this.resultOptions.resultGridResolver(slotElement);\n        }\n        else {\n            return new EasyGridWidget(slotElement);\n        }\n    }\n    /**\n    * Creates the widget that represents Entity Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createEntitiesPanelWidget(slot) {\n        return new EntitiesPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Columns Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createColumnsPanelWidget(slot) {\n        return new ColumnsPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Query Panel.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createQueryPanelWidget(slot) {\n        return new QueryPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Locale Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createLocaleWidget(slot) {\n        return new LocaleWidget(slot);\n    }\n    /**\n    * Creates the widget that represents Process Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createProcessWidget(slot) {\n        return new ProcessWidget(slot);\n    }\n    /**\n    * Creates the widget that represents Columns Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createColumnsBarWidget(slot) {\n        return new ColumnsBar(slot);\n    }\n    /**\n    * Creates the widget that represents Filter Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createFilterBarWidget(slot) {\n        return new FilterBar(slot);\n    }\n    /**\n    * Creates the widget that represents Sorting Bar.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createSortingBarWidget(slot) {\n        return new SortingBar(slot);\n    }\n    /**\n    * Creates the widget that represents Query Name Widget.\n    * @param slot The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createQueryNameWidget(slot) {\n        return new QueryNameWidget(slot);\n    }\n    /**\n     * Creates the widget that represents Statement Panel Widget.\n     * @param slot\n     */\n    createStatementPanelWidget(slot) {\n        return new StatementPanel(slot);\n    }\n    /**\n    * Creates the widget that represents Result Facets Panel Widget.\n    * @param slot\n    */\n    createResultFacetsPanel(slot) {\n        return new ResultFacetsPanel(slot);\n    }\n    /**\n     * Creates the widget that represents Export funcionality.\n     * @param slot\n     */\n    createExportWidget(slot) {\n        return new ExportWidget(slot);\n    }\n    /**\n     * Creates the widget that represents Aggregation Bar Widget.\n     * @param slot\n     */\n    createAggregationBarWidget(slot) {\n        return new AggregationBar(slot);\n    }\n    detach() {\n        if (this.entitiesPanelWidget) {\n            this.entitiesPanelWidget.destroy();\n            this.entitiesPanelWidget = null;\n        }\n        if (this.columnsPanelWidget) {\n            this.columnsPanelWidget.destroy();\n            this.columnsPanelWidget = null;\n        }\n        if (this.queryPanelWidget) {\n            this.queryPanelWidget.destroy();\n            this.queryPanelWidget = null;\n        }\n        if (this.columnsBarWidget) {\n            this.columnsBarWidget.destroy();\n            this.columnsBarWidget = null;\n        }\n        if (this.resultGridWidget) {\n            this.resultGridWidget.destroy();\n            this.resultGridWidget = null;\n        }\n        if (this.chartWidget) {\n            this.chartWidget.destroy();\n            this.chartWidget = null;\n        }\n        if (this.queryNameWidget) {\n            this.queryNameWidget.destroy();\n            this.queryNameWidget = null;\n        }\n        if (this.processWidget) {\n            this.processWidget.destroy();\n            this.processWidget = null;\n        }\n        if (this.localeWidget) {\n            this.localeWidget.destroy();\n            this.localeWidget = null;\n        }\n        if (this.statementPanelWidget) {\n            this.statementPanelWidget.destroy();\n            this.statementPanelWidget = null;\n        }\n        if (this.filterBarWidget) {\n            this.filterBarWidget.destroy();\n            this.filterBarWidget = null;\n        }\n        if (this.sortingBarWidget) {\n            this.sortingBarWidget.destroy();\n            this.sortingBarWidget = null;\n        }\n        if (this.statementWidget) {\n            this.statementWidget.destroy();\n            this.statementWidget = null;\n        }\n        if (this.exportWidget) {\n            this.exportWidget.destroy();\n            this.exportWidget = null;\n        }\n        if (this.resultFacetPanelWidget) {\n            this.resultFacetPanelWidget.destroy();\n            this.resultFacetPanelWidget = null;\n        }\n        if (this.resultCountSlot) {\n            this.resultCountSlot.innerHTML = '';\n            this.resultCountSlot = null;\n        }\n        if (this.resultPanelSlot) {\n            this.resultPanelSlot.innerHTML = '';\n            this.resultPanelSlot = null;\n        }\n        this.domRoots = [document];\n        this.resetContext();\n    }\n    refreshWidgets(groups) {\n        this.context.refreshWidgets(groups);\n    }\n}\n\n/**\n * The EasyQuery client-side view that represents the UI for advanced search page\n */\nclass AdvancedSearchView extends View {\n    constructor() {\n        super();\n        this.exportButtons = [];\n        // Name of the class to add to disabled elements.\n        this.disabledClass = \"eqjs-disabled\";\n        this.dropdownContainerClass = \"eqv-dropdown-container\";\n        this.dropdownButtonClass = \"eqv-drop-button\";\n        this.dropdownContentClass = \"eqv-dropdown-content\";\n        this.dropdownShowClass = \"eqv-dropdown-show\";\n        this._querySaveTemplate = `<div id=\"kdlg-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-content\"></label>\r\n                <input type=\"text\" name=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        this.queryListMenu = null;\n        this.fetchDataButtonClickHandler = this.fetchDataButtonClick.bind(this);\n        this.clearQueryButtonClickHandler = this.clearQueryButtonClick.bind(this);\n        this.newQueryButtonClickHandler = this.newQueryButtonClick.bind(this);\n        this.loadQueryButtonClickHandler = this.loadQueryButtonClick.bind(this);\n        this.saveQueryButtonClickHandler = this.saveQueryButtonClick.bind(this);\n        this.copyQueryButtonClickHandler = this.copyQueryButtonClick.bind(this);\n        this.removeQueryButtonClickHandler = this.removeQueryButtonClick.bind(this);\n        this.storageButtonClickHandler = this.storageDropButtonClick.bind(this);\n        this.saveQueryToFileButtonClickHandler = this.saveQueryToFileButtonClick.bind(this);\n        this.loadQueryFromFileButtonClickHandler = this.loadQueryFromFileButtonClick.bind(this);\n        const self = this;\n        this.exportButtonClickHandler = function (e) {\n            if (!this.classList.contains(self.disabledClass)) {\n                const format = this.getAttribute(\"data-format\");\n                self.getContext().exportResult({ format: format });\n            }\n        };\n        this.queryChangedHandler = (ev) => {\n            const eventData = ev.data;\n            if (this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n                this.context.refreshWidgets(WidgetGroup.Result);\n            }\n            this.disableExportButtons();\n            if (this.resultCountSlot) {\n                this.resultCountSlot.style.display = \"none\";\n            }\n            if (this.viewOptions.syncQueryOnChange) {\n                this.syncQuery();\n            }\n            if (this.viewOptions.fetchDataOnChange) {\n                if (!eventData || (eventData.part != QueryChangePart.ExtraData\n                    && eventData.part != QueryChangePart.Facets)) {\n                    this.fetchData();\n                }\n            }\n        };\n        this.outsideClickHandler = (event) => {\n            let currentContent = null;\n            if (event.target.matches(`.${this.dropdownButtonClass}`)) {\n                currentContent = event.target.parentElement.querySelector(`.${this.dropdownContentClass}`);\n            }\n            else if (event.target.matches(`.${this.dropdownButtonClass} > span`)) {\n                currentContent = event.target.parentElement.parentElement.querySelector(`.${this.dropdownContentClass}`);\n            }\n            var dropdowns = this.resolveElementsByClassName(this.dropdownContentClass);\n            for (let i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (currentContent != openDropdown) {\n                    if (openDropdown.classList.contains(this.dropdownShowClass)) {\n                        openDropdown.classList.remove(this.dropdownShowClass);\n                    }\n                }\n            }\n        };\n    }\n    refreshQueryList() {\n        if (this.queryListPanel) {\n            this.queryListPanel.innerHTML = '';\n            this.context.loadQueryList({\n                success: (data) => {\n                    const b = domel('ul', this.queryListPanel)\n                        .addClass('list-group list-group-flush');\n                    data.map(item => {\n                        b.addChild('li', b => {\n                            b.addClass('list-group-item')\n                                .setStyle('cursor', 'pointer')\n                                .data('id', item.id)\n                                .text(item.name)\n                                .on('click', () => {\n                                this.checkIfQueryModified(() => this.loadQuery(item.id));\n                            });\n                        });\n                    });\n                }\n            });\n        }\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        if (typeof (options.syncQueryOnChange) == 'undefined') {\n            options.syncQueryOnChange = true;\n        }\n        return options;\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        let exportClass = \"eqjs-export\";\n        let queryContentInputId = \"QueryContentJson\";\n        let clearQueryButtonId = \"ClearQueryButton\";\n        let newQueryButtonId = \"NewQueryButton\";\n        let loadQueryButtonId = \"LoadQueryButton\";\n        let saveQueryButtonId = \"SaveQueryButton\";\n        let copyQueryButtonId = \"CopyQueryButton\";\n        let removeQueryButtonId = \"RemoveQueryButton\";\n        let storageButtonId = \"StorageDropButton\";\n        let fetchDataButtonId = \"FetchDataButton\";\n        let loadQueryFromFileButtonId = \"LoadQueryFromFileButton\";\n        let saveQueryToFileButtonId = \"SaveQueryToFileButton\";\n        let queryListPanelId = \"QueryListPanel\";\n        if (options.slots) {\n            queryContentInputId = options.slots.queryContentInput || queryContentInputId;\n            fetchDataButtonId = options.slots.fetchDataButton || fetchDataButtonId;\n            clearQueryButtonId = options.slots.clearQueryButton || clearQueryButtonId;\n            newQueryButtonId = options.slots.newQueryButton || newQueryButtonId;\n            loadQueryButtonId = options.slots.loadQueryButton || loadQueryButtonId;\n            saveQueryButtonId = options.slots.saveQueryButton || saveQueryButtonId;\n            copyQueryButtonId = options.slots.copyQueryButton || copyQueryButtonId;\n            removeQueryButtonId = options.slots.removeQueryButton || removeQueryButtonId;\n            storageButtonId = options.slots.storageButton || storageButtonId;\n            exportClass = options.slots.exportClass || exportClass;\n            loadQueryFromFileButtonId = options.slots.loadQueryFromFileButton || loadQueryFromFileButtonId;\n            saveQueryToFileButtonId = options.slots.saveQueryToFileButton || saveQueryToFileButtonId;\n            queryListPanelId = options.slots.queryListPanel || queryListPanelId;\n        }\n        this.exportButtons = this.domRoots.reduce((elems, root) => elems.concat(Array.from(root.querySelectorAll(`.${exportClass}`))), []);\n        if (!options.enableExport) {\n            this.hideExportButtons();\n        }\n        this.disableExportButtons();\n        this.exportButtons.forEach((button) => {\n            button.addEventListener('click', this.exportButtonClickHandler);\n        });\n        if (!this.fetchDataButton) {\n            this.fetchDataButton = this.resolveElement(fetchDataButtonId);\n            if (!this.fetchDataButton) {\n                this.fetchDataButton = this.resolveElement('ExecuteQueryButton'); //deprecated, should be removed on the next major update\n            }\n            if (this.fetchDataButton) {\n                this.fetchDataButton.addEventListener('click', this.fetchDataButtonClickHandler);\n            }\n        }\n        if (!this.clearQueryButton) {\n            this.clearQueryButton = this.resolveElement(clearQueryButtonId);\n            if (this.clearQueryButton) {\n                this.clearQueryButton.addEventListener('click', this.clearQueryButtonClickHandler);\n            }\n        }\n        if (!this.newQueryButton) {\n            this.newQueryButton = this.resolveElement(newQueryButtonId);\n            if (this.newQueryButton) {\n                this.newQueryButton.addEventListener('click', this.newQueryButtonClickHandler);\n            }\n        }\n        if (!this.loadQueryButton) {\n            this.loadQueryButton = this.resolveElement(loadQueryButtonId);\n            if (this.loadQueryButton) {\n                this.loadQueryButton.addEventListener('click', this.loadQueryButtonClickHandler);\n            }\n        }\n        if (!this.saveQueryButton) {\n            this.saveQueryButton = this.resolveElement(saveQueryButtonId);\n            if (this.saveQueryButton) {\n                this.saveQueryButton.addEventListener('click', this.saveQueryButtonClickHandler);\n            }\n        }\n        if (!this.copyQueryButton) {\n            this.copyQueryButton = this.resolveElement(copyQueryButtonId);\n            if (this.copyQueryButton) {\n                this.copyQueryButton.addEventListener('click', this.copyQueryButtonClickHandler);\n            }\n        }\n        if (!this.removeQueryButton) {\n            this.removeQueryButton = this.resolveElement(removeQueryButtonId);\n            if (this.removeQueryButton) {\n                this.removeQueryButton.addEventListener('click', this.removeQueryButtonClickHandler);\n            }\n        }\n        if (!this.storageDropButton) {\n            this.storageDropButton = this.resolveElement(storageButtonId);\n            if (this.storageDropButton) {\n                this.storageDropButton.addEventListener('click', this.storageButtonClickHandler);\n            }\n        }\n        if (!this.saveQueryToFileButton) {\n            this.saveQueryToFileButton = this.resolveElement(saveQueryToFileButtonId);\n            if (this.saveQueryToFileButton) {\n                this.saveQueryToFileButton.addEventListener('click', this.saveQueryToFileButtonClickHandler);\n            }\n        }\n        if (!this.queryListPanel) {\n            this.queryListPanel = this.resolveElement(queryListPanelId);\n            //For backward compatibility. Remove on the next update\n            if (!this.queryListPanel) {\n                this.queryListPanel = this.resolveElement('QueryListSlot');\n            }\n            if (this.queryListPanel) {\n                this.context.addEventListener('ready', () => {\n                    this.refreshQueryList();\n                });\n            }\n        }\n        if (!this.loadQueryFromFileButton) {\n            this.loadQueryFromFileButton = this.resolveElement(loadQueryFromFileButtonId);\n            if (this.loadQueryFromFileButton) {\n                this.loadQueryFromFileInput = document.createElement('input');\n                this.loadQueryFromFileInput.type = 'file';\n                this.loadQueryFromFileInput.accept = options.queryFileExtensions;\n                this.loadQueryFromFileInput.style.display = 'none';\n                document.body.appendChild(this.loadQueryFromFileInput);\n                this.loadQueryFromFileInput.addEventListener('change', this.loadQueryFromFileInputSelect.bind(this));\n                this.loadQueryFromFileButton.addEventListener('click', this.loadQueryFromFileButtonClickHandler);\n            }\n        }\n        // hide any dropdown menu when user clicks somewhere\n        window.addEventListener('click', this.outsideClickHandler);\n    }\n    initDone() {\n        super.initDone();\n        const query = this.context.getQuery();\n        query.addChangedCallback(this.queryChangedHandler);\n    }\n    /**\n    * Sends current query to the backend.\n    */\n    syncQuery() {\n        this.context.syncQuery({\n            success: (responseData) => {\n                if (responseData.statement) {\n                    this.context.refreshWidgets(WidgetGroup.Statement);\n                }\n            }\n        });\n    }\n    /**\n    * Disables export buttons.\n    */\n    disableExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.disabled = true;\n            if (!button.classList.contains(this.disabledClass)) {\n                button.classList.add(this.disabledClass);\n            }\n        });\n    }\n    /**\n    * Enables export buttons.\n    */\n    enableExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.disabled = false;\n            if (button.classList.contains(this.disabledClass)) {\n                button.classList.remove(this.disabledClass);\n            }\n        });\n    }\n    /**\n    * Hides export buttons.\n    */\n    hideExportButtons() {\n        this.exportButtons.forEach((button) => {\n            button.style.display = \"none\";\n        });\n    }\n    clearQueryButtonClick() {\n        this.showQueryClearDialog((result) => {\n            if (result) {\n                this.context.clearQuery();\n                this.context.refreshWidgets(WidgetGroup.Statement);\n            }\n        });\n    }\n    createNewQuery(options) {\n        return this.context.newQuery(options);\n    }\n    loadQuery(queryId) {\n        if (!queryId)\n            return;\n        this.context.loadQuery({\n            queryId: queryId,\n            silent: false\n        });\n    }\n    saveQuery(success, error) {\n        this.context.saveQuery({\n            success: () => {\n                if (success)\n                    success();\n                this.context.getQuery().fireChangedEvent({\n                    part: QueryChangePart.Properties,\n                    wasModified: false\n                });\n                this.refreshQueryList();\n            },\n            error: error\n        });\n    }\n    saveCurrentQuery(copyQuery = false, callback) {\n        const query = this.context.getQuery();\n        if (query.isNewbie || copyQuery) {\n            this.showSaveQueryDialog((newQueryName) => new Promise(resolve => {\n                if (!newQueryName)\n                    return;\n                this.checkSaveQueryName(newQueryName)\n                    .then(() => {\n                    query.regenerateId();\n                    query.setName(newQueryName);\n                    query.fireChangedEvent({\n                        part: QueryChangePart.Properties,\n                        wasModified: true\n                    });\n                    this.saveQuery(() => { resolve({ success: true }); }, (error) => resolve({ success: false, message: error }));\n                }, (message) => resolve({ success: false, message }));\n            }));\n        }\n        else {\n            this.saveQuery(callback);\n        }\n    }\n    checkSaveQueryName(name) {\n        return new Promise((resolve, reject) => {\n            this.context.loadQueryList({\n                success: (queryList) => {\n                    const found = queryList.filter(item => item.name.toLowerCase() == name.toLowerCase());\n                    if (found.length == 0) {\n                        resolve();\n                    }\n                    else {\n                        reject(\"Can't save the query. A query with this name already exists.\");\n                    }\n                },\n                error: (message) => {\n                    reject(message);\n                }\n            });\n        });\n    }\n    checkIfQueryModified(callback) {\n        if (this.context.getQuery().isModified()\n            && !this.viewOptions.disableConfirmationOnQueryChange) {\n            this.showQueryChangedDialog((result) => {\n                if (result) {\n                    this.saveCurrentQuery(false, callback);\n                }\n                else {\n                    callback();\n                }\n            });\n        }\n        else {\n            callback();\n        }\n    }\n    removeCurrentQuery() {\n        this.context.removeQuery({\n            success: () => {\n                this.createNewQuery({\n                    useStorage: false\n                });\n                if (this.resultCountSlot) {\n                    this.resultCountSlot.style.display = \"none\";\n                }\n                this.context.clearResult();\n                this.refreshQueryList();\n            }\n        });\n    }\n    // ------------------ Dialog wrappers ---------------------\n    showNewQueryDialog(callback) {\n        const ds = this.context.getServices().getService('DialogService');\n        const defVal = i18n.getText('NewQueryDefName');\n        const dlg = ds.open({\n            title: i18n.getText('NewQueryTitle'),\n            body: this._querySaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('NewQueryContent');\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    if (!callback)\n                        return true;\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(value)\n                        .then(result => {\n                        header.removeChild(processEl);\n                        dlg.enableButtons();\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    showQueryClearDialog(callback) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('QueryChangedTitle'), i18n.getText('QueryClearContent'), callback);\n    }\n    showQueryChangedDialog(callback) {\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('QueryChangedTitle'), i18n.getText('QueryChangedContent'), callback);\n    }\n    showSaveQueryDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        const newQueryName = query.isNewbie\n            ? query.getName()\n            : i18n.getText('SaveQueryDefName').replace('{queryName}', query.getName());\n        const dlg = ds.open({\n            title: i18n.getText('SaveQueryTitle'),\n            body: this._querySaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = newQueryName;\n                const content = document.getElementById('kdlg-dialog-form-content');\n                content.innerHTML = i18n.getText('SaveQueryContent');\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    if (!callback)\n                        return true;\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(value)\n                        .then(result => {\n                        dlg.enableButtons();\n                        header.removeChild(processEl);\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    showRemoveQueryDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        ds.openConfirm(i18n.getText('RemoveQueryTitle'), i18n.getText('RemoveQueryContent').replace('{queryName}', query.getName()), callback);\n    }\n    showSaveQueryToFileDialog(callback) {\n        const ds = this.getDialogService();\n        const query = this.context.getQuery();\n        const body = this.renderSaveToFileDialogBody(query.getName());\n        const dlg = ds.open({\n            title: i18n.getText('SaveQueryToFileDlgTitle'),\n            body: body,\n            onSubmit: () => {\n                const fileNameInput = body.querySelector('#kdlgFileNameInput');\n                const fileName = fileNameInput ? fileNameInput.value : \"Query\";\n                const formatSelector = body.querySelector('#kdlgFileFormatSelector');\n                const format = formatSelector ? formatSelector.value : 'json';\n                if (callback) {\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    callback(fileName, format)\n                        .then(result => {\n                        dlg.enableButtons();\n                        header.removeChild(processEl);\n                        if (result.success) {\n                            dlg.close();\n                        }\n                        else {\n                            dlg.showAlert(result.message, 'error');\n                        }\n                    });\n                    return false;\n                }\n                return true;\n            }\n        });\n    }\n    renderSaveToFileDialogBody(name, format = \"json\") {\n        const isIE = browserUtils.isIE();\n        const fieldsClass = isIE\n            ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n            : 'kfrm-fields col-a-1 label-align-right';\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        return domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            b.addClass(fieldsClass)\n                .addChild('label', b => b\n                .attr('for', 'file_name')\n                .addText(i18n.getText('FileNameLabel')))\n                .addChild('div', b => b\n                .addClass(horizClass)\n                .addChild('input', b => b\n                .id('kdlgFileNameInput')\n                .name('file_name')\n                .type('text')\n                .attr('value', name))\n                .addChild('label', b => b\n                .addText('.'))\n                .addChild('div', b => b\n                .addClass('kfrm-select')\n                .addChild('select', b => b\n                .id('kdlgFileFormatSelector')\n                .addClass('kdlg-form-control')\n                .addOption({\n                value: 'xml',\n                selected: 'xml' === format\n            })\n                .addOption({\n                value: 'json',\n                selected: 'json' === format\n            }))));\n        })\n            .toDOM();\n    }\n    // ------------------ Query management buttons handler ---------------------\n    newQueryButtonClick() {\n        this.checkIfQueryModified(() => {\n            this.createNewQuery();\n        });\n    }\n    saveQueryToFileButtonClick() {\n        this.showSaveQueryToFileDialog((fileName, format) => new Promise((resolve) => {\n            this.context.getQueryFile({\n                fileName: fileName,\n                format: format,\n                success: () => resolve({ success: true }),\n                error: (error) => resolve({ success: false, message: error })\n            });\n        }));\n    }\n    loadQueryFromFileButtonClick() {\n        this.checkIfQueryModified(() => {\n            this.showLoadQueryFromFileDialog();\n        });\n    }\n    showLoadQueryFromFileDialog() {\n        this.loadQueryFromFileInput.click();\n    }\n    loadQueryFromFileInputSelect() {\n        const files = this.loadQueryFromFileInput.files;\n        const file = files.item(0);\n        const data = new FormData();\n        data.append(file.name, file);\n        this.loadQueryFromFileInput.value = \"\";\n        this.context.uploadQueryFile({\n            data: data,\n            success: () => {\n                this.syncQuery();\n                this.refreshQueryList();\n            }\n        });\n    }\n    loadQueryButtonClick() {\n        this.context.loadQueryList({\n            success: (data) => {\n                this.fillLoadQueryButtonMenu(data);\n                this.queryListMenu.showMenu({\n                    anchor: this.loadQueryButton,\n                    adjustHeight: false,\n                    itemSelectedCallback: (data) => {\n                        this.checkIfQueryModified(() => this.loadQuery(data.id));\n                    }\n                });\n            }\n        });\n    }\n    fillLoadQueryButtonMenu(queryList) {\n        const query = this.getContext().getQuery();\n        this.queryListMenu = new PopupMenu({\n            items: queryList.map(item => ({ id: item.id, text: item.name })),\n            selectedIds: query.getId()\n        });\n    }\n    saveQueryButtonClick() {\n        this.saveCurrentQuery();\n    }\n    copyQueryButtonClick() {\n        this.saveCurrentQuery(true);\n    }\n    removeQueryButtonClick() {\n        this.showRemoveQueryDialog((result) => {\n            if (result) {\n                this.removeCurrentQuery();\n            }\n        });\n    }\n    storageDropButtonClick() {\n        let container = this.storageDropButton.parentElement;\n        let content = container.querySelector(`.${this.dropdownContentClass}`);\n        if (content) {\n            window.setTimeout(() => content.classList.toggle(this.dropdownShowClass), 100);\n        }\n    }\n    fetchDataButtonClick() {\n        this.fetchData();\n    }\n    detach() {\n        this.enableExportButtons();\n        this.exportButtons.forEach((button) => {\n            button.removeEventListener('click', this.exportButtonClickHandler);\n        });\n        this.exportButtons = [];\n        if (this.fetchDataButton) {\n            this.fetchDataButton.removeEventListener('click', this.fetchDataButtonClickHandler);\n            this.fetchDataButton = null;\n        }\n        if (this.clearQueryButton) {\n            this.clearQueryButton.removeEventListener('click', this.clearQueryButtonClickHandler);\n            this.clearQueryButton = null;\n        }\n        if (this.newQueryButton) {\n            this.newQueryButton.removeEventListener('click', this.newQueryButtonClickHandler);\n            this.newQueryButton = null;\n        }\n        if (this.loadQueryButton) {\n            this.loadQueryButton.removeEventListener('click', this.loadQueryButtonClickHandler);\n            this.loadQueryButton = null;\n        }\n        if (this.saveQueryButton) {\n            this.saveQueryButton.removeEventListener('click', this.saveQueryButtonClickHandler);\n            this.saveQueryButton = null;\n        }\n        if (this.copyQueryButton) {\n            this.copyQueryButton.removeEventListener('click', this.copyQueryButtonClickHandler);\n            this.copyQueryButton = null;\n        }\n        if (this.removeQueryButton) {\n            this.removeQueryButton.removeEventListener('click', this.removeQueryButtonClickHandler);\n            this.removeQueryButton = null;\n        }\n        if (this.storageDropButton) {\n            this.storageDropButton.removeEventListener('click', this.storageButtonClickHandler);\n            this.storageDropButton = null;\n        }\n        if (this.saveQueryToFileButton) {\n            this.saveQueryToFileButton.removeEventListener('click', this.saveQueryToFileButtonClickHandler);\n            this.saveQueryToFileButton = null;\n        }\n        if (this.queryListPanel) {\n            this.queryListPanel = null;\n        }\n        if (this.loadQueryFromFileButton) {\n            if (this.loadQueryFromFileInput) {\n                document.body.removeChild(this.loadQueryFromFileInput);\n            }\n            this.loadQueryFromFileButton.removeEventListener('click', this.loadQueryFromFileButtonClickHandler);\n            this.loadQueryFromFileButton = null;\n        }\n        super.detach();\n    }\n}\n\n/**\n * The view that represents a data-filtering scenario (a text search for one entity/table)\n */\nclass DataFilterView extends View {\n    constructor() {\n        super();\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        options.result.fetchEmptyQueries = true;\n        const query = this.context.getQuery();\n        query.addChangedCallback(() => {\n            if (this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n            }\n            if (options.syncQueryOnChange) {\n                this.context.syncQuery();\n            }\n        });\n        this.context.addEventListener('ready', this.fetchData.bind(this));\n        return options;\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        if (this.sortingBarWidget) {\n            this.context.getQuery().addChangedCallback((ev) => {\n                const edata = ev.data;\n                if (!edata || (edata.part != QueryChangePart.SortingColumns\n                    && edata.part != QueryChangePart.Columns && edata.part != QueryChangePart.All)) {\n                    return;\n                }\n                this.fetchData();\n            });\n        }\n        if (this.filterBarWidget) {\n            const widgetType = this.filterBarWidget.getWidgetType();\n            options.widgets[widgetType] = options.widgets[widgetType] || {};\n            if (!options.widgets[widgetType].applyFilterCallback) {\n                options.widgets[widgetType].applyFilterCallback = () => {\n                    this.fetchData();\n                };\n            }\n        }\n    }\n    /**\n     * Obsolete. Left for backward compatibility.\n     * Use fetchData() instead\n     * @deprecated Use `fetchData()`\n     */\n    applyQueryFilter() {\n        console.warn('applyQueryFilter is obsolete. Use fetchData instead');\n        this.fetchData();\n    }\n    fetchData() {\n        super.fetchData({ refresh: true });\n    }\n}\n\n/**\n * The EasyQuery client-side view that represents the UI for data filtering page\n */\nclass HtmlDataFilterView extends DataFilterView {\n    constructor() {\n        super();\n    }\n    /**\n    * Creates the widget that represents Result Grid.\n    * @param slotElement The HTMLElement to place the created widget in.\n    * @returns the created Widget object.\n    */\n    createResultGridWidget(slotElement) {\n        return new EqHtmlGrid(slotElement);\n    }\n    /**\n     * Obsolete. Left for backward compatibility.\n     * Use fetchData() instead\n     */\n    applyQueryFilter() {\n        console.warn('applyQueryFilter is obsolete. Use fetchData instead');\n        this.fetchData();\n    }\n}\n\n/**\n * The view that represents the \"ad-hoc reporting\" scenario\n */\nclass ReportView extends View {\n    constructor() {\n        super();\n        this.reports = [];\n        this.reportCache = [];\n        this.exportButtons = [];\n        this.exportClass = \"eqjs-export\";\n        this.disabledClass = \"eqjs-disabled\";\n        this.enableExport = false;\n        this.useReportCache = true;\n        this.syncReportOnChange = true;\n        this._reportSaveTemplate = `<div id=\"kdlg-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-name-label\"></label>\r\n                <input type=\"text\" name=\"kdlg-dialog-form-input\" id=\"kdlg-dialog-form-input\" />\r\n                <label for=\"kdlg-dialog-form-textarea\" id=\"kdlg-dialog-form-desc-label\"></label>\r\n                <textarea type=\"text\" name=\"kdlg-dialog-form-textarea\" id=\"kdlg-dialog-form-textarea\"></textarea>\r\n            </div>\r\n        </div>`;\n        this.context.useStoredQueryOnFetch = true;\n        this.exportButtonClickHandler = (srcElement, e) => {\n            if (!srcElement.classList.contains(this.disabledClass)) {\n                const format = srcElement.getAttribute(\"data-format\");\n                this.context.exportResult({ format: format });\n            }\n        };\n        this.clearReportButtonClickHandler = this.clearReportButtonClick.bind(this);\n        this.newReportButtonClickHandler = this.newReportButtonClick.bind(this);\n        this.loadReportButtonClickHandler = this.loadReportButtonClick.bind(this);\n        this.saveReportButtonClickHandler = this.saveReportButtonClick.bind(this);\n        this.removeReportButtonClickHandler = this.removeReportButtonClick.bind(this);\n        this.reloadReportDataButtonClickHandler = this.reloadReportDataButtonClick.bind(this);\n        browserUtils.onMobileModeChanged(_ => {\n            document.location.reload();\n        });\n    }\n    initOptions(options) {\n        options = super.initOptions(options);\n        if (typeof (options.syncQueryOnChange) !== \"undefined\") {\n            this.syncReportOnChange = options.syncQueryOnChange;\n        }\n        if (typeof (options.syncReportOnChange) !== \"undefined\") {\n            this.syncReportOnChange = options.syncReportOnChange;\n        }\n        options.syncQueryOnChange = this.syncReportOnChange;\n        if (typeof (options.useReportCache) !== \"undefined\") {\n            this.useReportCache = options.useReportCache;\n        }\n        this.defaultReportId = options.defaultReportId;\n        return options;\n    }\n    initDone() {\n        super.initDone();\n        const query = this.context.getQuery();\n        query.addChangedCallback((event) => {\n            const eventData = event.data;\n            if (eventData) {\n                if (eventData.changeType == \"query.switched\") {\n                    this.context.clearResult();\n                    this.context.refreshWidgets(WidgetGroup.Result);\n                    this.context.refreshWidgets(WidgetGroup.Query);\n                }\n                else {\n                    this.disableExportButtons();\n                    if (this.resultCountSlot) {\n                        this.resultCountSlot.style.display = \"none\";\n                    }\n                }\n            }\n            //true if we just switched the report or changed facets (query was not changed)\n            let isLiteUpdate = !eventData\n                || eventData.changeType == \"query.switched\"\n                || eventData.part == QueryChangePart.ExtraData\n                || eventData.part == QueryChangePart.Facets;\n            let syncStarted = false;\n            if (this.syncReportOnChange) {\n                const needSync = eventData && eventData.changeType != \"query.switched\" && !eventData.noSync;\n                if (needSync) {\n                    syncStarted = true;\n                    this.syncReport({\n                        success: () => {\n                            // fetch data on query change\n                            if (!isLiteUpdate && this.viewOptions.fetchDataOnChange) {\n                                this.fetchData();\n                            }\n                        }\n                    });\n                }\n            }\n            // clear dataset result on query change\n            if (!isLiteUpdate && this.resultOptions.clearResultOnQueryChange) {\n                this.context.clearResult();\n                this.context.refreshWidgets(WidgetGroup.Result);\n            }\n            if (!isLiteUpdate && !syncStarted && this.viewOptions.fetchDataOnChange) {\n                this.fetchData();\n            }\n        });\n        window.setTimeout(() => {\n            this.context.loadQueryList({\n                success: (data) => {\n                    if (Array.isArray(data)) {\n                        this.reports = data;\n                        const exists = this.reports.filter(r => r.id == this.defaultReportId).length > 0;\n                        if (exists) {\n                            this.renderReportList({ reportId: this.defaultReportId });\n                        }\n                        else {\n                            this.renderReportList();\n                        }\n                    }\n                }\n            });\n        }, 100);\n    }\n    initWidgets(options) {\n        super.initWidgets(options);\n        let clearReportButton = \"ClearReportButton\";\n        let newReportButton = \"NewReportButton\";\n        let loadReportButton = \"LoadReportButton\";\n        let saveReportButton = \"SaveReportButton\";\n        let removeReportButton = \"RemoveReportButton\";\n        let reloadReportDataButton = \"ReloadReportDataButton\";\n        let resultCountSpan = \"ResultCount\";\n        let exportButtons = \"ResultExportButtons\";\n        let exportClass = this.exportClass;\n        if (options.slots) {\n            resultCountSpan = options.slots.resultCountSpan || resultCountSpan;\n            exportButtons = options.slots.exportButtons || exportButtons;\n            clearReportButton = options.slots.clearReportButton || clearReportButton;\n            newReportButton = options.slots.newReportButton || newReportButton;\n            loadReportButton = options.slots.loadReportButton || loadReportButton;\n            saveReportButton = options.slots.saveReportButton || saveReportButton;\n            removeReportButton = options.slots.removeReportButton || removeReportButton;\n            reloadReportDataButton = options.slots.reloadReportDataButton || reloadReportDataButton;\n            exportClass = options.slots.exportClass || exportClass;\n        }\n        this.exportButtons = this.domRoots.reduce((elems, root) => elems.concat(Array.from(root.querySelectorAll(`.${exportClass}`))), []);\n        this.enableExport = options.enableExport;\n        if (this.enableExport) {\n            //Add event listener for export buttons\n            this.exportButtons.forEach((button) => {\n                button.addEventListener('click', this.exportButtonClickHandler);\n            });\n        }\n        else {\n            this.hideExportButtons();\n        }\n        this.exportButtonsContainer = this.resolveElement(exportButtons);\n        if (!this.clearReportButton) {\n            this.clearReportButton = this.resolveElement(clearReportButton);\n            if (this.clearReportButton) {\n                this.clearReportButton.addEventListener('click', this.clearReportButtonClickHandler);\n            }\n        }\n        if (!this.newReportButton) {\n            this.newReportButton = this.resolveElement(newReportButton);\n            if (this.newReportButton) {\n                this.newReportButton.addEventListener('click', this.newReportButtonClickHandler);\n            }\n        }\n        if (!this.loadReportButton) {\n            this.loadReportButton = this.resolveElement(loadReportButton);\n            if (this.loadReportButton) {\n                this.loadReportButton.addEventListener('click', this.loadReportButtonClickHandler);\n            }\n        }\n        if (!this.saveReportButton) {\n            this.saveReportButton = this.resolveElement(saveReportButton);\n            if (this.saveReportButton) {\n                this.saveReportButton.addEventListener('click', this.saveReportButtonClickHandler);\n            }\n        }\n        if (!this.removeReportButton) {\n            this.removeReportButton = this.resolveElement(removeReportButton);\n            if (this.removeReportButton) {\n                this.removeReportButton.addEventListener('click', this.removeReportButtonClickHandler);\n            }\n        }\n        if (!this.reloadReportDataButton) {\n            this.reloadReportDataButton = this.resolveElement(reloadReportDataButton);\n            //OBSOLETE: remove the next 3 lines. We just support the old default button ID here\n            if (!this.reloadReportDataButton) {\n                this.reloadReportDataButton = this.resolveElement('UpdateReportButton');\n            }\n            if (this.reloadReportDataButton) {\n                this.reloadReportDataButton.addEventListener('click', this.reloadReportDataButtonClickHandler);\n            }\n        }\n        this.reportListSlot = document.getElementById('ReportList');\n        this.resultCountSlot = this.resolveElement(resultCountSpan);\n    }\n    /**\n    * Creates a new report.\n    */\n    newReport() {\n        const ds = this.getDialogService();\n        const dlg = ds.open({\n            title: i18n.getText('NewReportDlgTitle'),\n            body: this._reportSaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const nameInput = document.getElementById(`kdlg-dialog-form-input`);\n                nameInput.value = i18n.getText('NewReportDefName');\n                const nameLabel = document.getElementById('kdlg-dialog-form-name-label');\n                nameLabel.innerHTML = i18n.getText('SaveReportDlgLabel');\n                const descLabel = document.getElementById('kdlg-dialog-form-desc-label');\n                descLabel.innerHTML = i18n.getText('ReportDescLabel');\n                nameInput.focus();\n            },\n            onSubmit: () => {\n                const nameInput = document.getElementById(`kdlg-dialog-form-input`);\n                const queryName = nameInput.value;\n                if (queryName && queryName.replace(/\\s/g, '').length > 0) {\n                    dlg.clearAlert();\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    const descInput = document.getElementById(`kdlg-dialog-form-textarea`);\n                    const queryDesc = descInput.value;\n                    this.context.newQuery({\n                        name: queryName,\n                        description: queryDesc,\n                        success: () => {\n                            dlg.close();\n                            const query = this.context.getQuery();\n                            const reportId = query.getId();\n                            this.insertIntoReportList({ id: reportId, name: query.getName(), description: query.getDescription() });\n                            this.renderReportList({ reportId: reportId });\n                        },\n                        error: (error) => {\n                            header.removeChild(processEl);\n                            dlg.enableButtons();\n                            dlg.showAlert(error, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    /**\n    * Loads report by ID.\n    * @param reportId The ID of the report to load.\n    */\n    loadReport(reportId) {\n        if (!reportId) {\n            throw 'Empty report ID!';\n        }\n        let reportToLoad = this.findReportById(reportId);\n        if (!reportToLoad)\n            return;\n        const self = this;\n        const query = self.context.getQuery();\n        const reportLoaded = () => {\n            this.renderReportProps();\n            this.context.resultTable.clear();\n            query.fireChangedEvent({\n                part: QueryChangePart.All,\n                noSync: true,\n                changeType: 'query.switched'\n            });\n            this.fetchData();\n        };\n        let reportContent = this.useReportCache ? this.getReportContentFromCache(reportToLoad) : null;\n        if (reportContent) {\n            query.clear();\n            query.loadFromJson(reportContent, { validate: false });\n            reportLoaded();\n        }\n        else {\n            this.context.loadQuery({\n                queryId: reportId,\n                silent: true,\n                success: () => {\n                    this.saveReportContentInCache(reportToLoad, query.toJSON());\n                    reportLoaded();\n                }\n            });\n        }\n        this.setActiveReport(reportId);\n    }\n    /**\n    * Shows the dialog to save the report with new name.\n    */\n    saveCurrentReportAs() {\n        const query = this.context.getQuery();\n        const ds = this.getDialogService();\n        const dlg = ds.open({\n            title: i18n.getText('SaveReportDlgTitle'),\n            body: this._reportSaveTemplate,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                input.value = query.getName();\n                const content = document.getElementById('kdlg-dialog-form-name-label');\n                content.innerHTML = i18n.getText('SaveReportDlgLabel');\n                const label = document.getElementById('kdlg-dialog-form-desc-label');\n                label.innerHTML = i18n.getText('ReportDescLabel');\n                const text = document.getElementById(`kdlg-dialog-form-textarea`);\n                text.innerText = query.getDescription();\n                input.focus();\n            },\n            onSubmit: () => {\n                const input = document.getElementById(`kdlg-dialog-form-input`);\n                const value = input.value;\n                if (value && value.replace(/\\s/g, '').length > 0) {\n                    query.setId(utils.generateId(value.replace(/\\s/g, '')));\n                    dlg.clearAlert();\n                    dlg.disableButtons();\n                    const header = dlg.getRootElement().querySelector('header');\n                    const processEl = domel('div', header)\n                        .addClass('eqjs-process-bar local')\n                        .toDOM();\n                    const text = document.getElementById(`kdlg-dialog-form-textarea`);\n                    const desc = text.value;\n                    query.setDescription(desc);\n                    this.context.newQuery({\n                        clearQuery: false,\n                        name: value,\n                        success: () => {\n                            dlg.close();\n                            this.context.refreshWidgets(WidgetGroup.Query);\n                            const savedQuery = this.context.getQuery();\n                            const reportId = savedQuery.getId();\n                            this.fetchData();\n                            this.insertIntoReportList({ id: reportId, name: query.getName(), description: query.getDescription() });\n                            this.renderReportList({ reportId: reportId });\n                            this.setActiveReport(reportId);\n                            this.renderReportProps();\n                        },\n                        error: (error) => {\n                            header.removeChild(processEl);\n                            dlg.enableButtons();\n                            dlg.showAlert(error, 'error');\n                        }\n                    });\n                }\n                return false;\n            }\n        });\n    }\n    /**\n    * Removes current report.\n    */\n    removeCurrentReport() {\n        const report = this.context.getQuery();\n        const ds = this.getDialogService();\n        ds.openConfirm(i18n.getText('RemoveReportDlgTitle'), i18n.getText('RemoveReportContent').replace('{reportName}', report.getName()))\n            .then(result => {\n            if (result) {\n                const reportId = report.getId();\n                this.context.removeQuery({\n                    queryId: reportId,\n                    success: () => {\n                        const index = this.removeFromReportList(reportId);\n                        this.renderReportList({ reportIndex: index });\n                    }\n                });\n            }\n        });\n    }\n    /**\n    * Sends current report's query to back-end.\n    */\n    syncReport(options) {\n        if (this.useReportCache) {\n            const query = this.context.getQuery();\n            const currentReport = this.findReportById(query.getId());\n            if (currentReport) {\n                currentReport.lastUpdated = Date.now();\n                this.saveReportContentInCache(currentReport, query.toJSON());\n            }\n        }\n        this.context.syncQuery({\n            success: (responseData) => {\n                if (responseData.query) {\n                    this.context.refreshWidgets(WidgetGroup.Query);\n                }\n                if (responseData.statement) {\n                    this.context.refreshWidgets(WidgetGroup.Statement);\n                }\n                if (options && options.success) {\n                    options.success(responseData);\n                }\n            }\n        });\n    }\n    /**\n    * Sets active report.\n    * @param reportId The ID of the report to make active.\n    */\n    setActiveReport(reportId) {\n        let rlItems = this.reportListSlot.querySelectorAll('li');\n        for (let i = 0; i < rlItems.length; i++) {\n            const item = rlItems[i];\n            item.classList.remove('active');\n            const rid = item.getAttribute('data-rid');\n            if (rid === reportId) {\n                item.classList.add('active');\n            }\n        }\n    }\n    /**\n    * Renders current report.\n    */\n    renderReportProps() {\n        let query = this.context.getQuery();\n        let titleElem = document.getElementById('ReportTitle');\n        titleElem.innerHTML = query.getName();\n        const columnsPanel = document.querySelector('.columns-bar');\n        if (columnsPanel) {\n            columnsPanel.innerHTML = '<strong>Columns:</strong>';\n            let columns = query.getColumns();\n            for (let column of columns) {\n                columnsPanel.innerHTML += '<span class=\"label label-default\">' + column.caption + '</span> ';\n            }\n        }\n    }\n    /**\n    * Renders the list of reports.\n    * @param options The options. In particular, `options.reportIndex` defines which report should be active.\n    */\n    renderReportList(options) {\n        this.renderReportPanels();\n        if (!this.reportListSlot.matches('li')) {\n            this.reportListSlot.innerHTML = \"\";\n            options = options || { reportId: (this.reports.length > 0 ? this.reports[0].id : null) };\n            var ul = document.createElement('ul');\n            ul.className = 'list-group list-group-flush';\n            this.reportListSlot.appendChild(ul);\n            for (let report of this.reports) {\n                this.renderReportItemInList(report, ul);\n            }\n            if (options.reportId) {\n                this.loadReport(options.reportId);\n            }\n            if (typeof (options.reportIndex) !== \"undefined\") {\n                let idx = options.reportIndex;\n                if (idx >= this.reports.length)\n                    idx = this.reports.length - 1;\n                if (idx < 0 && this.reports.length > 0)\n                    idx = 0;\n                if (idx >= 0)\n                    this.loadReport(this.reports[idx].id);\n            }\n        }\n    }\n    detach() {\n        if (this.exportButtonsContainer) {\n            this.showExportButtons();\n            this.exportButtons.forEach((button) => {\n                button.removeEventListener('click', this.exportButtonClickHandler);\n            });\n            this.exportButtons = [];\n            this.exportButtonsContainer = null;\n        }\n        if (this.clearReportButton) {\n            this.clearReportButton.removeEventListener('click', this.clearReportButtonClickHandler);\n            this.clearReportButton = null;\n        }\n        if (this.newReportButton) {\n            this.newReportButton.removeEventListener('click', this.newReportButtonClickHandler);\n            this.newReportButton = null;\n        }\n        if (this.loadReportButton) {\n            this.loadReportButton.removeEventListener('click', this.loadReportButtonClickHandler);\n            this.loadReportButton = null;\n        }\n        if (this.saveReportButton) {\n            this.saveReportButton.removeEventListener('click', this.saveReportButtonClickHandler);\n            this.saveReportButton = null;\n        }\n        if (this.removeReportButton) {\n            this.removeReportButton.removeEventListener('click', this.removeReportButtonClickHandler);\n            this.removeReportButton = null;\n        }\n        if (this.reloadReportDataButton) {\n            this.reloadReportDataButton.removeEventListener('click', this.reloadReportDataButtonClickHandler);\n            this.removeReportButton = null;\n        }\n        if (this.reportListSlot) {\n            this.reportListSlot.innerHTML = '';\n            this.reportListSlot = null;\n        }\n        if (this.resultCountSlot) {\n            this.resultCountSlot.innerHTML = '';\n            this.resultCountSlot = null;\n        }\n        super.detach();\n    }\n    /**\n    * Renders a single item in the list of reports.\n    * @param report The [[Report]] object to render.\n    * @param ul The [[HTMLUListElement]] to add the item to.\n    */\n    renderReportItemInList(report, ul) {\n        if (!ul) {\n            ul = this.reportListSlot.querySelector(\"ul\");\n        }\n        let reportName = report.name || report.description || \"\";\n        let li = document.createElement('li');\n        li.className = \"list-group-item\";\n        li.style.cursor = 'pointer';\n        li.setAttribute('data-rid', report.id);\n        li.innerText = reportName;\n        if (report.description) {\n            li.title = report.description;\n        }\n        li.addEventListener('click', (e) => {\n            const target = e.target;\n            const rid = target.getAttribute('data-rid');\n            this.loadReport(rid);\n        });\n        ul.appendChild(li);\n    }\n    /**\n    * Renders report panels.\n    */\n    renderReportPanels() {\n        const reportsContainer = document.getElementById(\"ReportsContainer\");\n        const noReportPanel = document.getElementById(\"NoReportPanel\");\n        if (this.reports.length > 0) {\n            this.hideElement(noReportPanel);\n            this.showElement(reportsContainer);\n        }\n        else {\n            this.hideElement(reportsContainer);\n            this.showElement(noReportPanel);\n        }\n    }\n    //TODO: Move these two functions to @easydata/ui\n    hideElement(element) {\n        if (element) {\n            element.style.visibility = 'hidden';\n        }\n    }\n    showElement(element) {\n        if (element) {\n            element.style.removeProperty('visibility');\n        }\n    }\n    /**\n    * Inserts the report to the list of reports.\n    * @param report The [[Report]] object to be inserted.\n    */\n    insertIntoReportList(report) {\n        this.reports.push(report);\n    }\n    /**\n    * Removes the report from the list of reports.\n    * @param reportId The ID of the report to be removed.\n    * @returns the index of removed report.\n    */\n    removeFromReportList(reportId) {\n        let index = this.indexOfReportById(reportId);\n        if (index >= 0)\n            this.reports.splice(index, 1);\n        return index;\n    }\n    indexOfReportById(reportId) {\n        for (let i = 0; i < this.reports.length; i++) {\n            if (this.reports[i].id === reportId)\n                return i;\n        }\n        return -1;\n    }\n    /**\n    * The handler of the \"Clear\" button click.\n    */\n    clearReportButtonClick() {\n        this.clearErrors();\n        this.context.clearQuery();\n    }\n    /**\n    * The handler of the \"Update\" button click.\n    */\n    reloadReportDataButtonClick() {\n        this.fetchData();\n    }\n    /**\n    * The handler of the \"Save\" button click.\n    */\n    saveReportButtonClick() {\n        this.saveCurrentReportAs();\n    }\n    /**\n    * The handler of the \"Load\" button click.\n    */\n    loadReportButtonClick() {\n        this.loadReport(\"LastQuery\");\n    }\n    /**\n    * The handler of the \"Remove\" button click.\n    */\n    removeReportButtonClick() {\n        this.removeCurrentReport();\n    }\n    /**\n    * The handler of the \"New\" button click.\n    */\n    newReportButtonClick() {\n        this.newReport();\n    }\n    /**\n    * The handler of errors.\n    * @param error The error object.\n    */\n    errorHandler(error) {\n    }\n    /**\n    * Clears the errors.\n    */\n    clearErrors() {\n    }\n    /**\n    * Disables export buttons.\n    */\n    disableExportButtons() {\n        this.hideExportButtons();\n    }\n    /**\n    * Enables export buttons.\n    */\n    enableExportButtons() {\n        this.showExportButtons();\n    }\n    /**\n    * Hides export buttons.\n    */\n    hideExportButtons() {\n        if (this.exportButtonsContainer) {\n            this.exportButtonsContainer.style.display = \"none\";\n        }\n    }\n    /**\n    * Shows export buttons.\n    */\n    showExportButtons() {\n        if (this.exportButtonsContainer) {\n            this.exportButtonsContainer.style.display = \"initial\";\n        }\n    }\n    /**\n     * Saves reports content to the cache.\n     * @param report  The report.\n     * @param content The content (Query serialized into JSON).\n     */\n    saveReportContentInCache(report, content) {\n        let item = this.findReportCacheItem(report.id);\n        if (!item) {\n            item = { id: report.id };\n            this.reportCache.push(item);\n        }\n        item.lastUpdated = report.lastUpdated;\n        item.content = content;\n    }\n    /**\n     * Gets the report content from cache.\n     * @param report The report.\n     * @returns Content of the report (Query in JSOn string)\n     */\n    getReportContentFromCache(report) {\n        let item = this.findReportCacheItem(report.id);\n        if (item && item.lastUpdated === report.lastUpdated) {\n            return item.content;\n        }\n        return null;\n    }\n    findReportById(id) {\n        for (let item of this.reports) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n    findReportCacheItem(id) {\n        for (let item of this.reportCache) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\nfunction addOldEasyQueryUIMapper() {\n    i18n.addMapper((info) => {\n        if (!info && !info.texts)\n            return;\n        for (let prop in info.texts) {\n            switch (prop) {\n                case 'PredicateTitle':\n                    info.texts['ConditionGroupTitle'] = info.texts[prop];\n                    break;\n                case 'RootPredicateTitle':\n                    info.texts['RootConditionGroupTitle'] = info.texts[prop];\n                    break;\n                case 'ErrIncorrectPredicateTitleFormat':\n                    info.texts['ErrIncorrectGroupTitleFormat'] = info.texts[prop];\n                    break;\n                case 'ButtonAddPredicate':\n                    info.texts['ButtonAddGroup'] = info.texts[prop];\n                    break;\n                case 'ButtonDelete':\n                    info.texts['CmdDelete'] = info.texts[prop];\n                    break;\n                case 'ButtonClear':\n                    info.texts['CmdClear'] = info.texts[prop];\n                    break;\n                case 'ButtonEnable':\n                    info.texts['CmdToggleEnable'] = info.texts[prop];\n                    break;\n                case 'ButtonAddCondition':\n                    info.texts['CmdAddCondition'] = info.texts[prop];\n                    break;\n                case 'ButtonAddGroup':\n                    info.texts['CmdAddCondGroup'] = info.texts[prop];\n                    break;\n            }\n        }\n    });\n}\nfunction addEasyQueryUITexts() {\n    i18n.updateDefaultTexts({\n        AltMenuAttribute: 'Attribute',\n        AltMenuConstantExpression: 'Constant expression',\n        ButtonApply: 'Apply',\n        ButtonCancel: 'Cancel',\n        ButtonClose: 'Close',\n        ButtonNext: 'Next',\n        ButtonPrev: 'Prev',\n        ButtonNow: 'Now',\n        ButtonOK: 'OK',\n        MenuEnable: 'Enabled',\n        MenuParameterization: 'Parameterized',\n        MenuJoinCond: 'Use in JOIN',\n        CmdClear: 'Clear',\n        CmdDelete: 'Delete',\n        CmdToggleEnable: 'Toggle enable',\n        CmdToggleEnableCustom: 'Custom Expression columns are not supported',\n        CmdAddCondition: 'Add condition',\n        CmdAddCondGroup: 'Add group of conditions',\n        ButtonSelectAll: 'Select all',\n        ButtonDeselectAll: 'Clear selection',\n        ButtonAddColumns: 'Add column(s)',\n        ButtonAddConditions: 'Add condition(s)',\n        CmdClickToAddCondition: '[Add new condition]',\n        CmdDeleteRow: 'Delete this row',\n        ErrIncorrectGroupTitleFormat: 'Incorrect condition group title format',\n        ErrNotNumber: ' is not a number',\n        ErrIncorrectInteger: 'Incorrect integer value',\n        ErrIncorrectNumberList: 'Incorrect list format',\n        False: 'False',\n        LinkTypeAll: 'all',\n        LinkTypeAny: 'any',\n        LinkTypeNone: 'none',\n        LinkTypeNotAll: 'not all',\n        ConjAll: 'and',\n        ConjAny: 'or',\n        ConjNotAll: 'and',\n        ConjNone: 'or',\n        MsgApplySelection: '[Apply selection]',\n        MsgAs: 'as',\n        MsgEmptyList: '(empty list)',\n        MsgEmptyListValue: '[select value]',\n        MsgEmptyScalarValue: '[enter value]',\n        MsgSubQueryValue: '[edit sub-query]',\n        MsgEmptyAttrValue: '[select attribute]',\n        MsgEmptyOperator: '[Unrecognized operator]',\n        MsgEmptyCustomSql: '[enter SQL expression]',\n        MsgCustomSql: '[Custom SQL]',\n        MsgNoResult: 'No result',\n        MsgResultCount: '{0} records found',\n        MsgOf: 'of',\n        ConditionGroupTitle: '{lt} of the following apply',\n        RootConditionGroupTitle: 'Select records where {lt} of the following apply',\n        StrAddConditions: 'Add conditions',\n        SubQueryDialogTitle: 'Edit sub-query',\n        SubQueryColumnTitle: 'Column:',\n        SubQueryEmptyColumn: '[select column]',\n        SubQueryQueryPanelCaption: 'Conditions',\n        True: 'True',\n        ButtonSorting: 'Sorting',\n        ButtonToAggr: 'Change to aggregate column',\n        ButtonToSimple: 'Change to simple column',\n        ButtonFormat: 'Display format',\n        CmdAscending: 'Ascending',\n        CmdClickToAddColumn: '[Add new column]',\n        CmdDeleteColumn: 'Delete column',\n        CmdDeleteSorting: 'Delete sorting',\n        CmdDescending: 'Descending',\n        CmdGroupAppearance: 'Appearance',\n        CmdGroupSort: 'Sorting',\n        CmdGroupFormat: 'Display format',\n        CmdNotSorted: 'Not sorted',\n        ColTypeAggrFunc: 'Aggregate function',\n        ColTypeCompound: 'Calculated',\n        ColTypeGroup: 'Column type',\n        ColTypeSimple: 'Simple column',\n        HeaderExpression: 'Expression',\n        HeaderSorting: 'Sorting',\n        HeaderTitle: 'Title',\n        SortHeaderColumn: 'Column',\n        SortHeaderSorting: 'Sorting',\n        StrAddColumns: 'Add columns',\n        CustomExpression: 'Custom Expression',\n        AddAllForEntityText: '[Add all attributes]',\n        CmdMoveToStart: 'Move to start',\n        CmdMoveRight: 'Move right',\n        CmdMoveLeft: 'Move left',\n        CmdMoveToEnd: 'Move to the end',\n        CmdMoveUp: 'Move up',\n        CmdMoveDown: 'Move down',\n        ButtonMenu: 'Show menu',\n        CmdToSimple: 'Not aggregated',\n        CmdMoveToFirst: 'Move to the first',\n        CmdMoveToPrev: 'Move to the previous',\n        CmdMoveToNext: 'Move to the next',\n        CmdMoveToLast: 'Move to the last',\n        CmdHiddenColumn: 'Hidden',\n        RowButtonTitle: 'Click to see the available options',\n        EntityToggle: 'Toggle entity',\n        //FilterBar\n        StrNoFilterDefined: 'No filter defined',\n        StrNoFilterClickToAdd: 'No filter defined. Click to add a new condition',\n        //Time picker\n        HintHours: 'Hours',\n        HintMinutes: 'Minutes',\n        //advanced search view texts\n        RemoveQueryTitle: 'Confirmation',\n        RemoveQueryContent: 'Remove query [{queryName}]?',\n        NewQueryTitle: 'New query',\n        NewQueryContent: 'New query name: ',\n        NewQueryDefName: 'New query',\n        SaveQueryTitle: 'Save query',\n        SaveQueryContent: 'Query name: ',\n        SaveQueryDefName: '{queryName} copy',\n        QueryChangedTitle: 'Confirmation',\n        QueryChangedContent: 'The query was changed. Do you want to save it first?',\n        QueryClearContent: 'The query will cleared. Do you want to continue?',\n        UpdateQuerySelector: '[click here to load the query]',\n        FileNameLabel: 'File name: ',\n        SaveQueryToFileDlgTitle: 'Save query to file',\n        //report view texts\n        NewReportDefName: 'New report',\n        NewReportDlgTitle: 'New report',\n        SaveReportDlgTitle: 'Save report',\n        SaveReportDlgLabel: 'Report name:',\n        ReportDescLabel: 'Description: ',\n        RemoveReportDlgTitle: 'Remove report',\n        RemoveReportContent: 'Are you sure you want to remove \\'{reportName}\\'?',\n        //facets\n        Facets: {\n            TotalRecordsLabel: 'Total records:',\n            AddMenuItems: {\n                Chart: 'Chart',\n                Pivot: 'Pivot table',\n                DataTable: 'Data table'\n            },\n            LoadDataDlgTitle: 'Downloading data',\n            LoadDataDlgContent: 'Records loaded: {loadedRecs}/{totalRecs}',\n            RefreshBtnTitle: 'Refresh',\n            ExportBtnTitle: 'Export',\n            MaximizeBtnTitle: 'Maximize',\n            RestoreBtnTitle: 'Restore Down',\n            RemoveFacetDlgTitle: 'Remove facet',\n            RemoveFacetDlgContent: `Are you sure, that you want to delete {facetTitle} tab?`,\n            DefaultDlgTitle: 'Setup facet',\n            DefaultFacetTitle: '',\n            NewFacetTitle: 'New Facet',\n            TabNameLabel: 'Tab name',\n            ErrQueryChanged: 'FAILED TO DISPLAY. QUERY WAS CHANGED',\n            ErrNotEnoughData: `We can't display the graph because not all data for this query is loaded. \r\n        The total number of records: {totalRecs}, currently loaded: {cachedRecs}. \r\n        You can [download the result]. Please note: this may take some time and consume a lot of memory.`,\n            ErrTooMuchData: 'Too much data. The grid is not able to display it',\n            Chart: {\n                FacetTitle: 'Chart',\n                DlgTitle: 'Chart settings',\n                DataColumnSelectorLabel: 'Data column',\n                LabelColumnSelectorLabel: 'Label column',\n                ChartTypeSelectorLabel: 'Chart type',\n                ShowLegendLabel: 'Show legend (if available)'\n            },\n            Pivot: {\n                FacetTitle: 'Pivot table',\n                DlgTitle: 'Pivot settings',\n                SwapBtnTitle: 'Swap column and row fields',\n                ColumnFieldSelectorLabel: 'Column field',\n                RowFieldSelectorLabel: 'Row field',\n                CellDataSelectorLabel: 'Cell data',\n                TotalsRowLabel: 'Totals row',\n                TotalsColLabel: 'Totals column',\n                TotalGridLabel: 'Total'\n            },\n            DataTable: {\n                FacetTitle: 'Result table',\n                DlgTitle: 'Table facet settings'\n            }\n        },\n        TotalsDlgLabel: 'Totals',\n        GrandTotalsLabel: 'Grand totals',\n        TotalsDlgTitle: 'Select totals',\n        //formats\n        ExportDlgTitle: 'Export result',\n        ExportDlgFmtLabel: 'Format',\n        'csv': 'CSV',\n        'excel': 'Excel',\n        'pdf': 'PDF',\n        'excel-html': 'HTML (Excel-compatible)',\n        // Aggregation settings\n        AggrSettings: {\n            GroupBtn: 'Group selected column(s)',\n            UngroupBtn: 'Ungroup columns',\n            AggrBtn: 'Aggregate selected column',\n            UnaggrBtn: 'Remove column aggregation',\n            GrandTotalsLabel: 'Show grand totals',\n            GroupCountsLabel: 'Show record count for groups',\n            AggrDialogTitle: 'Aggregation/grouping',\n            EnableAggrLabel: 'Enable aggregation',\n            SelectedError: 'Complete the action with selected column(s)',\n            NoGroupsOrAggrError: 'Add at least one group or aggregation',\n            NoGroupsOrGrandError: 'Add at least one group, or enable grand totals',\n            NoAggrOrCountError: 'Add at least one aggregation, or enable records count',\n            NoGroupsLabel: 'No groups',\n            NoAggrsLabel: 'No aggregations',\n            EmptySettingsLabel: '[ Click to setup ]'\n        },\n        ChartType: {\n            Area: 'Area chart',\n            Bar: 'Bar chart',\n            Column: 'Column chart',\n            Combo: 'Combo chart',\n            Doughnut: 'Doughnut chart',\n            Polar: 'Polar chart',\n            Radar: 'Radar chart',\n            Histogram: 'Histogram chart',\n            Line: 'Line chart',\n            SteppedLine: 'Stepped line chart',\n            Pie: 'Pie chart'\n        }\n    });\n}\naddOldEasyQueryUIMapper();\naddEasyQueryUITexts();\n\nconst services = EqServiceProvider.getInstance();\nservices.registerService('DialogService', () => new DefaultDialogService());\n\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector\n            || Element.prototype.webkitMatchesSelector;\n}\n// support NodeList forEach in IE11\nif (window['NodeList'] && !window['NodeList'].prototype.forEach) {\n    window['NodeList'].prototype.forEach = Array.prototype.forEach;\n}\n//find index in IE11\nif (!Array.prototype.findIndex) {\n    Array.prototype.findIndex = function (predicate) {\n        if (this == null) {\n            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n        for (var i = 0; i < length; i++) {\n            value = list[i];\n            if (predicate.call(thisArg, value, i, list)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nexport { AddRowRenderer, AdvancedSearchView, AggrFuncColumnRendererCB, AggrFuncColumnRendererCP, AggrSettingsDialog, AggrSettingsRenderer, AggregationBar, AttrColumnRendererCB, AttrColumnRendererCP, AttributeExpressionRenderer, BaseElementRenderer, ChartFacet, ChartJsWidget, ChartType, ChartWidget, ColumnAction, ColumnRendererCB, ColumnRendererCP, ColumnsBar, ColumnsEditMode, ColumnsPanel, ConditionAction, ConditionGroupRenderer, ConditionGroupRowRenderer, ConditionRenderer, ConditionsEditMode, ConstColumnRendererCP, CustomListExpressionRenderer, CustomSqlColumnRendererCP, DataFilterView, DataTableFacet, DateTimeExpressionRenderer, DomDropDownElementBuilder, DropDownRenderer, EasyGridWidget, EntitiesPanel, EqHtmlGrid, ExportDialog, ExportWidget, ExpressionRenderer, FacetContainer, FacetType, FilterBar, GoogleChartWidget, Grid, HtmlContentWidget, HtmlDataFilterView, InputExpressionRenderer, ListExpressionRenderer, ManageDrillDownWidget, OperatorRenderer, PivotTableFacet, PopupMenu, ProcessWidget, QPEditablePart, QueryPanel, ReportView, ResultFacet, ResultFacetsPanel, SimpleConditionRenderer, SortingBar, SqlListExpressionRenderer, StatementPanel, SubQueryExpressionRenderer, TextRenderer, View, dropdown };\n","import { Condition, CondTag, QueryColumn, Query, LinkType, Tree, DataModel, EqAggregatesContainer, equtils, registerEqContextResolver, EqContext, ExprTag, Expression } from '@easyquery/core';\nimport { HttpClient, EasyDataTable } from '@easydata/core';\nimport { DefaultDialogService, domel } from '@easydata/ui';\n\nconst majVer = 7;\nconst minVer = 4;\nconst magics = [45, 128, 231];\nMath.trunc = Math.trunc || function (x) {\n    if (isNaN(x)) {\n        return NaN;\n    }\n    if (x > 0) {\n        return Math.floor(x);\n    }\n    return Math.ceil(x);\n};\nconst lcv = {\n    __kt: 0,\n    versionNum: '' + majVer + '.' + minVer,\n    ck: function (key) {\n        if (!key || !key.length) {\n            this.__kt = -3;\n            return;\n        }\n        try {\n            var part1 = key.slice(0, key.length - 12);\n            var infoBytes = _bs(part1);\n            var part2 = key.slice(key.length - 12);\n            let ism = false;\n            for (const magic of magics) {\n                var edc = t36(magic);\n                if (part2[0] === edc[0] && part2[2] === edc[1]) {\n                    ism = true;\n                    break;\n                }\n            }\n            if (!ism) {\n                lcv.__kt = -1;\n            }\n            var idx = minVer % 4;\n            var shift = majVer + minVer;\n            if (part2[6 + idx] != encChar(shift, 19)) {\n                lcv.__kt = -2;\n                return;\n            }\n            if (part2[1] != encChar(infoBytes[3])) {\n                return;\n            }\n            lcv.__kt = part2[3] != encChar(infoBytes[5]) ? 2 : 3;\n            if (lcv.__kt === 2) {\n                var eds = `${f36(part2.substring(4, 6) + part2.substring(10))}`;\n                var ed = new Date(2000 + Number.parseInt(eds.substring(0, 2)), Number.parseInt(eds.substring(2, 4)) - 1, Number.parseInt(eds.substring(4)), 0, 0, 0, 0);\n                if (Date.now() > ed.getTime()) {\n                    lcv.__kt = 1;\n                }\n            }\n        }\n        catch (error) {\n        }\n    }\n};\nfunction encChar(x, b = 20) {\n    return String.fromCharCode(65 + x % b);\n}\nfunction _bs(str) {\n    var binary_string = urlatob(str);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction urlatob(str) {\n    var s = str;\n    s = s.replace(/-/g, '+');\n    s = s.replace(/_/g, '/');\n    switch (s.length % 4) {\n        case 0:\n            break;\n        case 2:\n            s += \"==\";\n            break;\n        case 3:\n            s += \"=\";\n            break;\n    }\n    return window.atob(s);\n}\nconst tokens = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\nfunction t36(val) {\n    var result = \"\";\n    while (val > 0) {\n        result = tokens[val % tokens.length] + result;\n        val /= tokens.length;\n    }\n    return result;\n}\nfunction f36(val) {\n    var d = 0;\n    for (var i = 0; i < val.length; ++i)\n        d += tokens.indexOf(val[i]) * Math.pow(tokens.length, val.length - i - 1);\n    return d;\n}\n\nclass ConditionEx extends Condition {\n    constructor() {\n        super(...arguments);\n        this.readOnly = false;\n        this.parameterized = false;\n        this.inJoin = false;\n    }\n    isReadOnly() {\n        return this.readOnly || (this.getParent() && this.getParent().isReadOnly());\n    }\n    setReadOnly(value) {\n        this.readOnly = value || (this.getParent() && this.getParent().isReadOnly());\n        this.conditions && this.conditions.forEach((cond) => {\n            cond.setReadOnly(value);\n        });\n    }\n    isParameterized() {\n        return this.parameterized;\n    }\n    setParameterized(value) {\n        this.parameterized = value;\n    }\n    isInJoin() {\n        return this.inJoin;\n    }\n    setInJoin(value) {\n        this.inJoin = value;\n    }\n    loadFromData(model, data) {\n        super.loadFromData(model, data);\n        if (lcv.__kt <= 1)\n            return;\n        if (typeof data.readOnly !== 'undefined') {\n            this.setReadOnly(data.readOnly);\n        }\n        if (typeof data.inJoin !== 'undefined') {\n            this.setInJoin(data.inJoin);\n        }\n        if (typeof data.parameterized !== 'undefined') {\n            this.setParameterized(data.parameterized);\n        }\n        //if condition group\n        //this.linkType = data.linking;\n        if (data.conds) {\n            for (let i = 0; i < data.conds.length; i++) {\n                let newCond = this.query.createCondition();\n                newCond.loadFromData(model, data.conds[i]);\n                this.conditions.push(newCond);\n                newCond.setParent(this);\n            }\n        }\n    }\n    saveToData() {\n        let obj = super.saveToData();\n        if (lcv.__kt <= 1)\n            return obj;\n        if (this.isReadOnly()) {\n            obj.readOnly = this.isReadOnly();\n        }\n        if (this.isParameterized()) {\n            obj.parameterized = this.isParameterized();\n        }\n        if (this.isInJoin()) {\n            obj.inJoin = this.isInJoin();\n        }\n        if (this.tag == CondTag.Group) {\n            //if condition group\n            //obj.linking = this.linkType;\n            obj.conds = [];\n            for (let i = 0; i < this.conditions.length; i++) {\n                obj.conds.push(this.conditions[i].saveToData());\n            }\n        }\n        return obj;\n    }\n}\n\nclass QueryColumnEx extends QueryColumn {\n    constructor() {\n        super(...arguments);\n        this.readOnly = false;\n    }\n    isReadOnly() {\n        return this.readOnly;\n    }\n    setReadOnly(value) {\n        this.readOnly = value;\n    }\n    /**\n     * Loads column from its JSON representation object.\n     * @param model The Data Model.\n     * @param colData The JSON representation object.\n     */\n    loadFromData(model, colData) {\n        super.loadFromData(model, colData);\n        if (lcv.__kt <= 2)\n            return;\n        if (colData) {\n            if (typeof colData.readOnly != 'undefined') {\n                this.readOnly = colData.readOnly;\n            }\n        }\n    }\n    saveToData() {\n        let colData = super.saveToData();\n        if (lcv.__kt <= 2)\n            return colData;\n        if (this.isReadOnly()) {\n            colData.readOnly = this.isReadOnly();\n        }\n        return colData;\n    }\n}\n\nclass QueryEx extends Query {\n    constructor(model, options) {\n        super(model, null, options);\n    }\n    isEx() {\n        return lcv.__kt > 1;\n    }\n    createSubQuery() {\n        return new QueryEx(this.model, { context: this.context });\n    }\n    createCondition(tag = CondTag.Simple) {\n        if (lcv.__kt <= 1)\n            return super.createCondition(tag);\n        return new ConditionEx(this, tag);\n    }\n    createColumn(justsorted = false) {\n        if (lcv.__kt <= 1)\n            return super.createColumn(justsorted);\n        return new QueryColumnEx(this, justsorted);\n    }\n    /**\n     * Adds a condition group - a group of simple conditions (predicates) linked by AND or OR\n     * @param descriptor The descriptor of the new condition group.\n     * @returns The new search condition.\n     */\n    addConditionGroup(descriptor, addChildCondition = true) {\n        if (lcv.__kt <= 1)\n            return super.addConditionGroup(descriptor, addChildCondition);\n        let parent = descriptor.parent || this.getRootCondition();\n        let lType = descriptor.linking || (parent.linkType === LinkType.All ? LinkType.Any : LinkType.All);\n        let group = this.createCondition(CondTag.Group);\n        group.linkType = lType;\n        if (addChildCondition) {\n            let model = this.getModel();\n            let attr = model.getFirstUICAttr();\n            if (attr) {\n                let op = model.getDefaultOperatorForAttr(attr);\n                let cond = this.createSimpleConditionObject(attr, op, \"\");\n                group.addCondition(cond);\n            }\n        }\n        parent.addCondition(group);\n        return group;\n    }\n    addExtraConditionGroup(descriptor, addChildCondition = true) {\n        descriptor.parent = descriptor.parent || this.extraConditions;\n        if (lcv.__kt <= 1)\n            return super.addExtraConditionGroup(descriptor, addChildCondition);\n        return this.addConditionGroup(descriptor);\n    }\n    buildQueryPath() {\n        const model = this.getModel();\n        if (lcv.__kt <= 1)\n            return this.buildQueryPath();\n        if (model.getMainEntity())\n            return this.buildQueryPath();\n        const entities = this.getEntitiesInQuery();\n        if (entities.length == 0) {\n            throw Error(\"Cannon build path. Path is empty\");\n        }\n        let tree = new Tree(entities[0]);\n        for (let i = 1; i < entities.length; i++) {\n            const entity = entities[i];\n            if (tree.contains(entity)) {\n                continue;\n            }\n            let path = this.findPath(tree.value, entity);\n            if (path != null) {\n                //Add path to tree\n                tree = this.addPathToTree(tree, (path[0] === tree.value) ? path.slice(1) : path);\n            }\n            else {\n                throw Error(\"Unable to build query. Cannot build path.\");\n            }\n        }\n        tree.setParents();\n        return tree;\n    }\n    addPathToTree(tree, path) {\n        if (path.length == 0) {\n            return;\n        }\n        let pathAdded = false;\n        for (let child of tree.childs) {\n            if (child.value === path[0]) {\n                pathAdded = true;\n                if (path.length > 1)\n                    child = this.addPathToTree(child, path.slice(1));\n                break;\n            }\n        }\n        if (!pathAdded) {\n            let link = this.getModel().findLink(tree.value, path[0]);\n            if (link) {\n                let newNode = new Tree(path[0]);\n                tree.addChild(newNode);\n                if (path.length > 1)\n                    newNode = this.addPathToTree(newNode, path.slice(1));\n            }\n            else if (!tree.parent) {\n                let node = new Tree(tree);\n                tree = new Tree(path[0]);\n                tree.addChild(node);\n                if (path.length > 1)\n                    tree = this.addPathToTree(tree, path.slice(1));\n            }\n            else {\n                throw Error(\"Unable to build query. Cannot build path.\");\n            }\n        }\n        return tree;\n    }\n    findPath(entityFrom, entityTo) {\n        let curPath = [];\n        let curStep = [];\n        let nextStep = [];\n        let passedEntities = [];\n        let pathFound = false;\n        curPath.push(entityFrom);\n        curStep.push(curPath);\n        passedEntities.push(entityFrom);\n        while (!pathFound) {\n            nextStep = [];\n            for (let path of curStep) {\n                pathFound = this.checkPath(path, entityTo, nextStep, passedEntities);\n                if (pathFound) {\n                    path.push(entityTo);\n                    curPath = path;\n                    break;\n                }\n            }\n            curStep = [];\n            if (!pathFound) {\n                if (nextStep.length == 0)\n                    return null;\n                //copy nextStep to curStep\n                for (let path of nextStep)\n                    curStep.push(path);\n            }\n        }\n        return curPath;\n    }\n    checkPath(path, entityTo, nextStep, passedEntities) {\n        const endPoint = path[path.length - 1];\n        const entityLinks = this.getModel().getLinksByEntity(endPoint);\n        for (let link of entityLinks) {\n            let entity2 = null;\n            if (link.entityFrom == endPoint) {\n                entity2 = link.entityTo;\n            }\n            else {\n                entity2 = link.entityFrom;\n            }\n            if (entity2 == entityTo) { //if reach the destination\n                nextStep = [];\n                return true;\n            }\n            //if destination is not reached yet we add current node (entity2) to the path and proceed\n            if (path.indexOf(entity2) < 0 && passedEntities.indexOf(entity2) < 0) { //to prevent cycling\n                passedEntities.push(entity2);\n                let newPath = new Array();\n                newPath = newPath.concat(path);\n                newPath.push(entity2);\n                nextStep.push(newPath);\n            }\n        }\n        return false;\n    }\n}\n\nclass EqServerQueryStorage {\n    constructor(context) {\n        this.context = context;\n    }\n    init() {\n    }\n    newQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const model = this.context.getModel();\n        const modelId = options.modelId || (model ? model.getId() : \"\");\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        if (options.name) {\n            query.setName(options.name);\n        }\n        if (options.description) {\n            query.setDescription(options.description);\n        }\n        let requestData = {\n            'query': query.toJSONData()\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('NewQuery', { modelId: modelId });\n        const http = this.context.getServices().getHttpClient();\n        return http.post(url, requestData)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    getQueryList(options) {\n        options = options || {};\n        const modelId = options.modelId || this.context.getModel().getId();\n        const url = this.context.resolveEndpoint('GetQueryList', { modelId: modelId });\n        const http = this.context.getServices().getHttpClient();\n        return http.get(url)\n            .then((responseData) => {\n            if (!responseData.queries) {\n                return Promise.reject({\n                    message: 'Wrong response format'\n                });\n            }\n            return responseData.queries;\n        });\n    }\n    loadQuery(options) {\n        options = options || {};\n        const model = this.context.getModel();\n        const query = this.context.getQuery();\n        const modelId = options.modelId || model.getId();\n        const queryId = options.queryId || query.getId();\n        const url = this.context.resolveEndpoint('GetQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.get(url)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    saveQuery(options) {\n        options = options || {};\n        const query = options.query || this.context.getQuery();\n        const queryId = options.queryId || query.getId();\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        const modelId = options.modelId || query.getModel().getId();\n        if (options.queryId) {\n            query.setId(options.queryId);\n        }\n        let requestData = {\n            'query': query.toJSONData()\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('SaveQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.put(url, requestData)\n            .then((responseData) => {\n            return responseData.query;\n        });\n    }\n    removeQuery(options) {\n        options = options || {};\n        const context = this.context;\n        const query = context.getQuery();\n        const modelId = options.modelId || query.getModel().getId();\n        const queryId = options.queryId || query.getId();\n        let requestData = {\n            'modelId': modelId,\n            'queryId': queryId\n        };\n        if (options.data) {\n            requestData['data'] = options.data;\n        }\n        const url = this.context.resolveEndpoint('RemoveQuery', { modelId: modelId, queryId: queryId });\n        const http = this.context.getServices().getHttpClient();\n        return http.delete(url, requestData).getPromise();\n    }\n}\n\nclass DataModelEx extends DataModel {\n}\n\nclass DataTableAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        //stores current totals by level (group) number\n        this.levelsTotals = [];\n        this.prevRow = null;\n        this.aggrContainer = new EqAggregatesContainer(context);\n    }\n    getAggrContainer() {\n        return this.aggrContainer;\n    }\n    initObjects() {\n        this.aggrSettings = this.context.getQuery().getAggregationSettings();\n        this.groups = this.aggrSettings.getGroups();\n        this.aggregates = this.aggrSettings.getAggregates();\n        this.aggrColIds = this.aggrSettings.getAggregates().map(a => a.colId);\n        this.aggrCols = this.context.resultTable.columns.getItems()\n            .filter(col => this.aggrColIds.indexOf(col.id) >= 0);\n        this.levelsTotals = [];\n        this.prevRow = null;\n    }\n    createColumnAggregatesObject() {\n        return {\n            sum: 0,\n            min: Number.MAX_VALUE,\n            max: Number.MIN_VALUE\n        };\n    }\n    calculate(options) {\n        this.initObjects();\n        this.aggrContainer.clear();\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        var levelNumber = this.groups.length + 1; //number of groups plus grand totals\n        for (let levelIndex = 0; levelIndex < levelNumber; levelIndex++) {\n            let levelTotals = { count: 0, columns: {} };\n            this.resetLevelTotals(levelTotals);\n            this.levelsTotals.push(levelTotals);\n        }\n        const allRows = this.context.resultTable.getCachedRows();\n        if (allRows.length > 0) {\n            for (const row of allRows) {\n                this.processDataRow(row);\n            }\n            //flusing the totals for all group levels\n            for (let levelIndex = 1; levelIndex < levelNumber; levelIndex++) {\n                this.flushLevelTotals(levelIndex);\n            }\n            //flusing the grand totals (if they are turned on)\n            if (this.aggrSettings.hasGrandTotals()) {\n                this.flushLevelTotals(0);\n            }\n        }\n        return Promise.resolve();\n    }\n    resetLevelTotals(rowTotals) {\n        for (const aggrCol of this.aggrCols) {\n            rowTotals.columns[aggrCol.id] = this.createColumnAggregatesObject();\n        }\n        rowTotals.count = 0;\n    }\n    processDataRow(row) {\n        const levelIndexChanged = this.checkLevelChange(row);\n        if (levelIndexChanged >= 0) {\n            for (let levelIndex = levelIndexChanged; levelIndex < this.levelsTotals.length; levelIndex++) {\n                this.flushLevelTotals(levelIndex);\n            }\n        }\n        if (this.aggrSettings.hasGrandTotals()) {\n            this.updateLevelTotals(0, row);\n        }\n        let levelIndex = 1;\n        for (const group of this.groups) {\n            this.updateLevelTotals(levelIndex, row);\n            levelIndex++;\n        }\n        this.prevRow = row;\n    }\n    /** Checks if the values in group columns were changed\n        and return the level number they were */\n    checkLevelChange(row) {\n        if (this.prevRow == null)\n            return -1;\n        for (let groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n            var group = this.groups[groupIndex];\n            for (const colId of group.columns) {\n                const value = row.getValue(colId);\n                const prevValue = this.prevRow.getValue(colId);\n                if (!this.aggrSettings.compareValues(prevValue, value)) {\n                    return groupIndex + 1;\n                }\n            }\n        }\n        return -1;\n    }\n    /** Saves the current values in levelData for the specified level to AggregateContainer\n        and then reset the data row for that level\n    */\n    flushLevelTotals(levelIndex) {\n        let levelTotals = this.levelsTotals[levelIndex];\n        const group = levelIndex > 0 ? this.groups[levelIndex - 1] : null;\n        let groupKey = this.aggrSettings.buildGroupKey(group, this.prevRow);\n        var groupTotals = {};\n        for (const aggr of this.aggregates) {\n            const columnTotals = levelTotals.columns[aggr.colId];\n            groupTotals[aggr.colId] = this.applyAggrFunc(aggr.funcId, columnTotals, levelTotals);\n        }\n        if (this.aggrSettings.hasRecordCount()) {\n            groupTotals[this.aggrSettings.COUNT_FIELD_NAME] = levelTotals.count;\n        }\n        this.aggrContainer.updateAggregateData(levelIndex, groupKey, groupTotals);\n        this.resetLevelTotals(levelTotals);\n    }\n    applyAggrFunc(funcId, columnTotals, levelTotals) {\n        switch (funcId) {\n            case \"SUM\":\n                return columnTotals.sum;\n            case \"AVG\":\n                return columnTotals.sum / levelTotals.count;\n            case \"COUNT\":\n            case \"CNTDST\":\n                return levelTotals.count;\n            case \"MIN\":\n                return columnTotals.min;\n            case \"MAX\":\n                return columnTotals.max;\n        }\n    }\n    /** Updates the totals by values in the current DataRow\n     * and according to the specified aggregate\n    */\n    updateLevelTotals(levelIndex, row) {\n        const levelTotals = this.levelsTotals[levelIndex];\n        levelTotals.count += 1;\n        for (const aggr of this.aggregates) {\n            const value = row.getValue(aggr.colId);\n            const columnTotals = levelTotals.columns[aggr.colId];\n            columnTotals.sum += value;\n            if (value < columnTotals.min) {\n                columnTotals.min = value;\n            }\n            if (value > columnTotals.max) {\n                columnTotals.max = value;\n            }\n        }\n    }\n    needRecalculation() {\n        return true;\n    }\n    reset() {\n    }\n}\n\nfunction strIsEmpty(str) {\n    if (str) {\n        return str.trim() === '';\n    }\n    else\n        return true;\n}\nconst baseLicApiUrl = 'https://account.korzh.com/api/license';\nconst eqVersion = lcv.versionNum;\nclass LCDialog {\n    constructor(context) {\n        this.http = new HttpClient();\n        this.context = context;\n    }\n    show() {\n        const dialogService = new DefaultDialogService();\n        this.dialogSet = dialogService.createSet([\n            {\n                closable: false,\n                cancelable: false,\n                submitOnEnter: true,\n                title: 'No license key for EasyQuery',\n                body: this.buildStartPage(),\n                submitButtonText: 'Submit',\n                onInput: this.validateForm.bind(this),\n                onSubmit: this.startPageOnSubmit.bind(this)\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitOnEnter: true,\n                title: 'Please check your inbox',\n                body: this.buildCodePage(),\n                submitButtonText: 'Get License Key',\n                onInput: this.validateForm.bind(this),\n                onSubmit: this.codePageOnSubmit.bind(this)\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitable: false,\n                title: 'Success',\n                body: this.buildSuccessPage()\n            },\n            {\n                closable: false,\n                cancelable: false,\n                submitable: false,\n                title: 'Failure',\n                body: this.buildFailurePage()\n            },\n        ]);\n        const dialog1 = this.dialogSet.open(0);\n        setTimeout(() => {\n            this.validateForm(dialog1);\n            const emailInput = document.getElementById('eqAuthEmail');\n            if (emailInput) {\n                emailInput.focus();\n            }\n        }, 200);\n    }\n    isValidForm(form) {\n        const emailInput = form.querySelector('#eqAuthEmail'); //form.querySelector('[name=\"email\"]') as HTMLInputElement;       \n        if (emailInput) {\n            return !strIsEmpty(emailInput.value) &&\n                emailInput.value\n                    .toLowerCase()\n                    .match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        }\n        const codeInput = form.querySelector('#eqAuthCode'); //form.querySelector('[name=\"code\"]') as HTMLInputElement;\n        if (codeInput) {\n            return !strIsEmpty(codeInput.value) &&\n                !isNaN(+codeInput.value) &&\n                codeInput.value == codeInput.value.trim() &&\n                codeInput.value.length === 6;\n        }\n        return true;\n    }\n    validateForm(dialog) {\n        const submitButton = dialog.getSubmitButtonElement();\n        submitButton.disabled = !this.isValidForm(dialog.getRootElement());\n    }\n    addInputField(parentBuilder, inputOptions) {\n        parentBuilder\n            .addChild('label', b => b\n            .attr('for', inputOptions.id)\n            .addHtml(`${inputOptions.label} ${inputOptions.required ? '<sup style=\"color: red\">*</sup>' : ''}: `))\n            .addChild('input', b => {\n            b.id(inputOptions.id);\n            b.name(inputOptions.name || inputOptions.id);\n            b.type(inputOptions.type || 'text');\n            if (typeof (inputOptions.value) !== 'undefined') {\n                b.value(inputOptions.value);\n            }\n            if (inputOptions.onInput) {\n                b.on('input', inputOptions.onInput);\n            }\n        });\n    }\n    buildStartPage() {\n        let form;\n        let controlsPanelBuilder;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">The EasyQuery license key is either absent, invalid or was issued for a different version of the library.</div>' +\n            '<div style=\"font-size:1.2em\">Please fill out the form to obtain a valid trial license key.</div>'));\n        formBuilder\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            controlsPanelBuilder = b;\n            b.addClass('kfrm-fields label-above');\n            b.addClass('kfrm-break-20');\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthEmail',\n            name: 'email',\n            label: 'Email',\n            required: true\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthName',\n            name: 'contactName',\n            label: 'Name (optional)',\n            required: false\n        });\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"margin-top:20px;font-size:0.9em\">* By clicking Submit, you agree with Korzh.com <a href=\"https://korzh.com/terms-of-use\">Terms of use</a>' +\n            ' and <a href=\"https://korzh.com/privacy\">Privacy policy</a>.</div>' +\n            '<div style=\"font-size:0.9em\">You also agree to receive email messages from Korzh.com. This consent may be revoked at any time.</div>'));\n        form = formBuilder.toDOM();\n        return form;\n    }\n    buildCodePage() {\n        let form;\n        let controlsPanelBuilder;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">We sent a confirmation code to <strong>{{email}}</strong>.</div>' +\n            '<div style=\"font-size:1.2em\">Please find it in the email and enter to the text box below</div>'));\n        formBuilder\n            .addClass('kfrm-form')\n            .addChild('div', b => {\n            controlsPanelBuilder = b;\n            b.addClass('kfrm-fields label-above');\n            b.addClass('kfrm-break-20');\n        });\n        this.addInputField(controlsPanelBuilder, {\n            id: 'eqAuthCode',\n            name: 'code',\n            label: 'Confirmation code',\n            required: true\n        });\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"margin-top:20px;font-size:0.9em\">NB: Don\\'t forget to check your SPAM folder ' +\n            'if the message does not arrive within the next 5 minutes, and mark it as \"Not Spam\" if it\\'s found there.</div>'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    buildSuccessPage() {\n        let form;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('<div style=\"font-size:1.2em\">You have successfully completed the registration.</div>' + '{{message}}'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    buildFailurePage() {\n        let form;\n        const formBuilder = domel('div');\n        formBuilder.addChild('div', b => b\n            .html('{{message}}'));\n        form = formBuilder.toDOM();\n        return form.outerHTML;\n    }\n    startPageOnSubmit(dlg) {\n        const emailInput = document.getElementById('eqAuthEmail');\n        const nameInput = document.getElementById('eqAuthName');\n        this.authEmail = emailInput.value;\n        this.authName = nameInput.value;\n        dlg.disableButtons();\n        this.http.post(equtils.combinePath(baseLicApiUrl, 'get-code'), {\n            email: this.authEmail,\n            name: this.authName,\n            data: {\n                ptag: this.context.backendInfo.type,\n                apptype: this.context.backendInfo.subType,\n            }\n        }, { dataType: 'json' })\n            .then(result => {\n            if (result.status !== 0) {\n                throw new Error(result.message);\n            }\n            const dlg = this.dialogSet.openNext({ email: this.authEmail });\n            setTimeout(() => {\n                this.validateForm(dlg);\n                const codeInput = document.getElementById('eqAuthCode');\n                if (codeInput) {\n                    codeInput.focus();\n                }\n            }, 200);\n        })\n            .catch(error => {\n            dlg.showAlert('Error: ' + error.message, \"error\", true);\n            dlg.enableButtons();\n        });\n        return false;\n    }\n    codePageOnSubmit(dlg) {\n        const codeInput = document.getElementById('eqAuthCode');\n        const authCode = codeInput.value;\n        dlg.disableButtons();\n        this.http.post(equtils.combinePath(baseLicApiUrl, 'get-key'), {\n            token: authCode,\n            email: this.authEmail,\n            ptag: this.context.backendInfo.type,\n            version: eqVersion\n        }, { dataType: 'json' })\n            .then(result => {\n            switch (result.status) {\n                case 0:\n                    const url = equtils.combinePath(this.context.getBaseEndpoint(), 'lck');\n                    this.http.post(url, {\n                        version: eqVersion,\n                        key: result.key\n                    }, { dataType: 'json' })\n                        .then(_ => this.dialogSet.open(2, {\n                        message: '<div style=\"font-size:1.2em\">Please restart your web application to get the key applied.</div>'\n                    }), _ => this.dialogSet.open(2, {\n                        message: '<div style=\"font-size:1.2em\">' +\n                            'Please visit <a href=\"https://account.korzh.com\">your account page on Korzh.com</a> to get the key ' +\n                            'and then add it to the <i>appsettings.json</i> file (in the <i>EasyQuery/LicenseKey</i> option).</div>'\n                    }));\n                    break;\n                case 2:\n                    this.dialogSet.open(3, {\n                        message: '<div style=\"font-size:1.2em\">Your trial license for EasyQuery has expired.</div>' +\n                            '<div style=\"font-size:1.2em\">Please <a href=\"https://korzh.com/support\">contact us</a> if you want to extend the trial period.</div>'\n                    });\n                    break;\n                case 3:\n                    this.dialogSet.open(3, {\n                        message: '<div style=\"font-size:1.2em\">The maintenance subscription for your EasyQuery license has expired.</div>' +\n                            '<div style=\"font-size:1.2em\">You need to <a href=\"https://account.korzh.com\">renew the subscription</a> to get a valid license.</div>'\n                    });\n                    break;\n                default:\n                    throw new Error(result.message);\n            }\n        })\n            .catch(error => {\n            //quick fix for 7.2.5 (must be removed after fixing of HttpResponseError in EasyData)\n            if (!error.message) {\n                error.message = 'Invalid or expired code. Please re-submit your request.';\n            }\n            dlg.showAlert('Error: ' + error.message, \"error\", true);\n            dlg.enableButtons();\n        });\n        return false;\n    }\n}\nfunction showNoLicenseAlert(context) {\n    if (lcv.__kt == -3) {\n        const lcd = new LCDialog(context);\n        lcd.show();\n    }\n    else {\n        let title, body, buttonTitle, buttonUrl;\n        switch (lcv.__kt) {\n            case 1:\n                title = 'EasyQuery trial has expired';\n                body = `Your trial period for EasyQuery has expired. \r\n        You can <a href=\"https://korzh.com/support\">submit a request to extend your trial</a> or <a href=\"https://korzh.com/easyquery#licensing\">buy a license</a> to get rid of all limitations.`;\n                buttonTitle = 'Buy a license';\n                buttonUrl = '#licensing';\n                break;\n            default:\n                title = `Invalid key for EasyQuery!`;\n                body = `The EasyQuery product key is either invalid or was issued for a different version of the library.\r\n        The version you are using now is ${eqVersion},\r\n        so please <a href=\"https://account.korzh.com\">login to your account</a> to get a proper key for version ${eqVersion}`;\n                buttonTitle = 'Get key';\n                buttonUrl = 'https://account.korzh.com';\n                break;\n        }\n        const ds = new DefaultDialogService();\n        const dlg = ds.open({\n            closable: false,\n            cancelable: false,\n            submitable: false,\n            title: title,\n            body: body\n        });\n        const footer = dlg.getRootElement().querySelector('footer');\n        domel(footer)\n            .removeClass('align-right')\n            .setStyle('justify-content', 'center')\n            .addChild('button', b => b\n            .addClass('kfrm-button', 'is-info')\n            .addText(buttonTitle)\n            .on('click', (e) => {\n            window.location.href = buttonUrl;\n        }));\n        if (lcv.__kt == 1) {\n            domel(footer)\n                .addChild('button', b => b\n                .addClass('kfrm-button')\n                .addText('Extend trial')\n                .on('click', (e) => {\n                window.location.href = 'https://account.korzh.com';\n            }));\n        }\n    }\n}\n\nclass EnterpriseEqContext extends EqContext {\n    useEnterprise(keyOrInitCallback) {\n        const func = (key) => {\n            lcv.ck(key);\n            if (lcv.__kt > 1) {\n                const services = this.getServices();\n                services.registerDataModelResolver(context => new DataModelEx());\n                services.registerQueryResolver(context => new QueryEx(context.getModel(), { context: context }));\n                services.registerQueryStorageResolver(context => new EqServerQueryStorage(context));\n                services.registerAggregatesCalculator(context => new DataTableAggregatesCalculator(context));\n                if (lcv.__kt === 2) {\n                    console.warn('EasyQuery.JS is working in the TRIAL MODE!\\n'\n                        + 'Please order a license (https://korzh.com/easyquery) to get a proper product key.');\n                    this.createTrialWM();\n                    setTimeout(() => {\n                        this.showTrialWM();\n                        setTimeout(() => { this.hideTrialWM(); }, 6000);\n                    }, 3000);\n                }\n            }\n            else {\n                showNoLicenseAlert(this);\n            }\n        };\n        if (typeof (keyOrInitCallback) === \"string\") {\n            func(keyOrInitCallback);\n        }\n        else if (typeof (keyOrInitCallback) === \"function\") {\n            const http = this.getServices().getHttpClient();\n            let url = equtils.combinePath(this.getBaseEndpoint(), 'lck2');\n            http.get(url)\n                .then(result => {\n                func(result.key.split(\"\").reverse().join(\"\"));\n                this.useBackend({\n                    type: result.backendType,\n                    subType: result.appType\n                });\n                keyOrInitCallback();\n            })\n                .catch(error => {\n                if (error.status == 401) {\n                    //if the stutus is Not Autorized\n                    func('');\n                }\n                else {\n                    //otherwise try the old way\n                    url = equtils.combinePath(this.getBaseEndpoint(), 'lck');\n                    http.get(url)\n                        .then(result => {\n                        func(result.split(\"\").reverse().join(\"\"));\n                        keyOrInitCallback();\n                    })\n                        .catch(error => this.throwError({\n                        action: \"LCK\",\n                        sourceError: error\n                    }));\n                }\n            });\n        }\n        else {\n            throw new Error(\"Wrong type of 'keyOrInitCallback' parameter. It must be a string with a license key or a callback function.\");\n        }\n    }\n    createTrialWM() {\n        // we can rewrite it using shadow dom\n        // to make it impossible to hide using JS :)\n        let trialDiv = document.createElement(\"div\");\n        trialDiv.style.position = \"fixed\";\n        trialDiv.style.bottom = \"0\";\n        trialDiv.style.right = \"-400px\";\n        trialDiv.style.width = \"400px\";\n        trialDiv.style.height = \"100px\";\n        trialDiv.style.color = \"grey\";\n        trialDiv.style.textAlign = \"center\";\n        trialDiv.style.opacity = \"0.7\";\n        trialDiv.style.font = \"bold 1em Trebuchet MS, Tahoma, Verdana, Geneva, Arial, Helvetica, sans-serif\";\n        trialDiv.style.transition = \"right 3s ease-out\";\n        const header = document.createElement(\"div\");\n        const eq = document.createElement(\"span\");\n        eq.innerText = \"EasyQuery\";\n        eq.style.color = \"#3A94D4\";\n        eq.style.lineHeight = \"50px\";\n        header.appendChild(eq);\n        const korzh = document.createElement(\"span\");\n        korzh.innerText = \"by Korzh.com\";\n        korzh.style.marginLeft = \"10px\";\n        header.appendChild(korzh);\n        trialDiv.appendChild(header);\n        const trialOnly = document.createElement(\"div\");\n        trialOnly.innerText = \"FOR TRIAL USE ONLY\";\n        trialOnly.style.fontSize = \"1.2em\";\n        trialOnly.style.fontWeight = \"1000\";\n        trialDiv.appendChild(trialOnly);\n        document.body.appendChild(trialDiv);\n        this.trialDivElement = trialDiv;\n    }\n    showTrialWM() {\n        if (this.trialDivElement) {\n            this.trialDivElement.style.right = \"0\";\n        }\n    }\n    hideTrialWM() {\n        if (this.trialDivElement) {\n            this.trialDivElement.style.right = \"-400px\";\n            setTimeout(() => {\n                this.trialDivElement.parentNode.removeChild(this.trialDivElement);\n            }, 5000);\n        }\n    }\n}\nregisterEqContextResolver(() => new EnterpriseEqContext());\n\nclass EqServerAggregatesCalculator {\n    constructor(context) {\n        this.context = context;\n        this._needRecalculation = true;\n        this.aggrContainer = new EqAggregatesContainer(context);\n    }\n    getAggrContainer() {\n        return this.aggrContainer;\n    }\n    calculate(options) {\n        this._needRecalculation = false;\n        this.aggrContainer.clear();\n        options = options || {};\n        options.maxLevel = options.maxLevel >= 0\n            ? options.maxLevel : 0;\n        const levelPromises = [];\n        const query = this.context.createQuery();\n        query.loadFromData(this.context.getQuery().toJSONData());\n        const settings = this.context.getQuery().getAggregationSettings();\n        const aggregates = settings.getAggregates();\n        const aggrColIds = settings.getAggregates().map(a => a.colId);\n        const aggrCols = query.getColumns()\n            .filter(col => aggrColIds.indexOf(col.id) >= 0);\n        for (const col of aggrCols) {\n            query.changeColumnType(col, ExprTag.AggregateFunction, { funcId: aggregates.filter(a => a.colId == col.id)[0].funcId });\n        }\n        //get all non-aggregate columns\n        const queryCols = query.getColumns()\n            .filter(c => c.expr.tag !== ExprTag.AggregateFunction);\n        for (const col of queryCols) {\n            col.setHidden(true);\n        }\n        if (settings.hasRecordCount()) {\n            const col = query.createColumn();\n            col.caption = settings.COUNT_FIELD_NAME;\n            col['_id'] = settings.COUNT_FIELD_NAME;\n            const sqlText = 'COUNT(*)';\n            const customSqlExpr = new Expression(col);\n            customSqlExpr.tag = ExprTag.CustomSql;\n            customSqlExpr.sql = sqlText;\n            customSqlExpr.baseAttrId = null;\n            col.expr = customSqlExpr;\n            query.getColumns().push(col);\n        }\n        if (settings.hasGrandTotals()) {\n            levelPromises.push(this.processLevel({\n                query: query,\n                level: 0,\n                groupName: 'Grand Totals',\n                resultObtainedCallback: options.resultObtained,\n                errorOccurredCallback: options.errorOccurred\n            }));\n        }\n        const groups = settings.getGroups();\n        for (let level = 1; level <= groups.length; level++) {\n            const group = groups[level - 1];\n            for (const col of queryCols) {\n                col.setHidden(group.columns.indexOf(col.id) < 0);\n            }\n            levelPromises.push(this.processLevel({\n                query: query,\n                level: level,\n                groupName: group.name,\n                resultObtainedCallback: options.resultObtained,\n                errorOccurredCallback: options.errorOccurred\n            }));\n        }\n        return Promise.all(levelPromises)\n            .then(() => {\n            return;\n        })\n            .catch((error) => console.error(error));\n    }\n    processLevel(options) {\n        const fetcher = this.context.getDataFetcher();\n        let fetchOptions = {\n            aux: true,\n            query: options.query\n        };\n        if (this.context.debugMode) {\n            fetchOptions.debug = `Fetching group data. Group: '${options.groupName}', level: ${options.level}`;\n        }\n        const resultPromise = fetcher.fetchData(fetchOptions)\n            .then((result) => {\n            const dataTable = new EasyDataTable({\n                elasticChunks: true\n            });\n            const resultSet = result.resultSet;\n            for (const col of resultSet.cols) {\n                dataTable.columns.add(col);\n            }\n            for (const row of resultSet.rows) {\n                dataTable.addRow(row);\n            }\n            const levelData = this.buildLevelData(options.level, dataTable);\n            this.aggrContainer.setAggregateData(options.level, levelData);\n            if (options.resultObtainedCallback) {\n                options.resultObtainedCallback(result, options.level);\n            }\n        })\n            .catch((error) => {\n            if (options.errorOccurredCallback) {\n                options.errorOccurredCallback(Object.assign(Object.assign({}, error), { level: options.level }));\n            }\n        });\n        return resultPromise;\n    }\n    buildLevelData(level, dataTable) {\n        const aggrSettings = this.context.getQuery().getAggregationSettings();\n        const keyColumns = level > 0\n            ? aggrSettings.getGroups()[level - 1].columns\n            : [];\n        const valueColumns = aggrSettings.getAggregates().map(a => a.colId);\n        if (aggrSettings.hasRecordCount()) {\n            valueColumns.push(aggrSettings.COUNT_FIELD_NAME);\n        }\n        const data = new Map();\n        for (const row of dataTable.getCachedRows()) {\n            const key = {};\n            const value = {};\n            for (const keyCol of keyColumns) {\n                const colIdx = dataTable.columns.getIndex(keyCol);\n                if (colIdx >= 0) {\n                    let keyVal = row.getValue(keyCol);\n                    if (!aggrSettings.caseSensitiveGroups && typeof (keyVal) === 'string') {\n                        keyVal = keyVal.toLowerCase();\n                    }\n                    key[keyCol] = keyVal;\n                }\n            }\n            for (const valueCol of valueColumns) {\n                value[valueCol] = row.getValue(valueCol);\n            }\n            data.set(JSON.stringify(key), value);\n        }\n        return data;\n    }\n    needRecalculation() {\n        return this._needRecalculation;\n    }\n    reset() {\n        this._needRecalculation = true;\n    }\n}\n\nexport { ConditionEx, DataModelEx, EqServerAggregatesCalculator, EqServerQueryStorage, QueryColumnEx, QueryEx };\n"],"mappings":"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","ignoreList":[]}