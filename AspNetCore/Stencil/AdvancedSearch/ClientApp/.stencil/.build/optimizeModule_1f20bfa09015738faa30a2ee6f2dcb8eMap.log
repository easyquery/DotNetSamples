{"version":3,"names":["ContextConsumer","constructor","hostRef","this","context","renderer","connectedCallback","subscribe","unsubscribe","el","disconnectedCallback","render","Object","assign"],"sources":["node_modules/@stencil/state-tunnel/dist/collection/components/state-tunnel.js"],"sourcesContent":["export class ContextConsumer {\r\n    constructor() {\r\n        this.context = {};\r\n        this.renderer = () => null;\r\n    }\r\n    connectedCallback() {\r\n        if (this.subscribe != null) {\r\n            this.unsubscribe = this.subscribe(this.el, 'context');\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        if (this.unsubscribe != null) {\r\n            this.unsubscribe();\r\n        }\r\n    }\r\n    render() {\r\n        return this.renderer(Object.assign({}, this.context));\r\n    }\r\n    static get is() { return \"context-consumer\"; }\r\n    static get properties() { return {\r\n        \"context\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"{ [key: string]: any }\",\r\n                \"resolved\": \"{ [key: string]: any; }\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"{}\"\r\n        },\r\n        \"renderer\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"Function\",\r\n                \"resolved\": \"Function\",\r\n                \"references\": {\r\n                    \"Function\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"() => null\"\r\n        },\r\n        \"subscribe\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"SubscribeCallback<any>\",\r\n                \"resolved\": \"(el: any, props: PropList<any>) => () => void\",\r\n                \"references\": {\r\n                    \"SubscribeCallback\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../declarations\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"unsubscribe\": {}\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n}\r\n"],"mappings":"iDAAaA,EAAe,MACxB,WAAAC,CAAAC,G,UACIC,KAAKC,QAAU,GACfD,KAAKE,SAAW,IAAM,IACzB,CACD,iBAAAC,GACI,GAAIH,KAAKI,WAAa,KAAM,CACxBJ,KAAKK,YAAcL,KAAKI,UAAUJ,KAAKM,GAAI,U,EAGnD,oBAAAC,GACI,GAAIP,KAAKK,aAAe,KAAM,CAC1BL,KAAKK,a,EAGb,MAAAG,GACI,OAAOR,KAAKE,SAASO,OAAOC,OAAO,GAAIV,KAAKC,S","ignoreList":[]}