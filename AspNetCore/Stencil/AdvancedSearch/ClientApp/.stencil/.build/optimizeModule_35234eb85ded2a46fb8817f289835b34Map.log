{"version":3,"names":["DEFAULT_DELIMITER","DEFAULT_DELIMITERS","PATH_REGEXP","RegExp","join","parse","str","options","tokens","key","index","path","defaultDelimiter","delimiter","delimiters","pathEscaped","res","exec","m","escaped","offset","slice","length","prev","next","name","capture","group","modifier","k","indexOf","push","partial","undefined","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","replace","flags","sensitive","regexpToRegexp","keys","groups","source","match","i","arrayToRegexp","parts","pathToRegexp","stringToRegexp","tokensToRegExp","strict","end","endsWith","concat","map","route","isEndDelimited","token","Array","isArray","hasBasename","test","stripBasename","stripTrailingSlash","charAt","addLeadingSlash","stripLeadingSlash","parsePath","pathname","search","hash","hashIndex","searchIndex","query","createPath","location","parseQueryString","split","reduce","params","param","value","decodeURIComponent","isAbsolute","createKey","keyLength","Math","random","toString","spliceOne","list","n","pop","resolvePathname","to","from","fromParts","hasTrailingSlash","up","toParts","isToAbs","isFromAbs","mustEndAbs","last","part","unshift","result","valueEqual","a","b","every","item","aType","bType","aValue","valueOf","bValue","aKeys","Object","bKeys","locationsAreEqual","state","createLocation","currentLocation","assign","decodeURI","e","URIError","cacheCount","patternCache","cacheLimit","compilePath","cacheKey","cache","cachePattern","JSON","stringify","re","compiledPattern","matchPath","exact","url","values","isExact","memo","matchesAreEqual","Layout","render","h","class","AppRoot","componentWillLoad","this","host","innerHTML","scrollTopOffset","component","navMenuCss","NavMenu","constructor","hostRef","isExpanded","toggle","collapseClass","anchorClass","type","onClick","activeClass","routeCss","Route","componentProps","scrollOnNextRender","previousMatch","computeMatch","newLocation","isGrouped","el","parentElement","tagName","toLowerCase","loadCompleted","routeViewOptions","history","scrollToId","componentUpdated","routeViewsUpdated","componentDidUpdate","componentDidLoad","childProps","routeRender","ChildComponent","ActiveRouter","injectProps","getConfirmation","win","message","callback","confirm","isModifiedEvent","ev","metaKey","altKey","ctrlKey","shiftKey","supportsHistory","ua","navigator","userAgent","supportsPopStateOnHashChange","nav","supportsGoWithoutReloadUsingHash","isExtraneousPopstateEvent","event","storageAvailable","storage","x","setItem","removeItem","DOMException","code","getUrl","root","RouteLink","unsubscribe","custom","urlMatch","handleClick","preventDefault","anchorAttributes","bind","href","title","anchorTitle","role","anchorRole","tabindex","anchorTabIndex","ariaHaspopup","id","anchorId","ariaPosinset","ariaSetsize","ariaLabel","getUniqueId","getMatch","isHTMLStencilRouteElement","elm","RouteSwitch","subscribers","regenerateSubscribers","newActiveIndex","prototype","call","children","filter","childElement","activeIndex","activeChild","routeViewUpdatedOptions","queue","write","forEach","child","style","display","contextProps","context","warning","args","console","warn","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","appendListener","fn","isActive","listener","notifyListeners","createScrollHistory","applicationScrollKey","scrollPositions","Map","set","arrayData","sessionStorage","get","has","scrollX","scrollY","scrollData","getItem","scrollRestoration","PopStateEvent","HashChangeEvent","createBrowserHistory","props","forceNextPop","globalHistory","globalLocation","globalNavigator","canUseHistory","needsHashChangeListener","scrollHistory","forceRefresh","basename","getHistoryState","getDOMLocation","historyState","transitionManager","setState","nextState","scrollPosition","handlePopState","handlePop","handleHashChange","ok","revertPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","initialLocation","listenerCount","isBlocked","createHref","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","checkDOMListeners","addEventListener","removeEventListener","block","unblock","listen","unlisten","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","createHashHistory","ignorePath","canGoWithoutReload","hashType","getHashPath","substring","pushHashPath","replaceHashPath","encodedPath","prevLocation","allPaths","lastIndexOf","hashChanged","nextPaths","getLocation","HISTORIES","browser","createHistory","Router","historyType","titleSuffix","document","getElementById","scrollIntoView","scrollTo","ownerDocument","defaultView","scrollToLocation","isServer","Provider"],"sources":["node_modules/@stencil/router/dist/collection/utils/path-to-regex.js","node_modules/@stencil/router/dist/collection/utils/path-utils.js","node_modules/@stencil/router/dist/collection/utils/location-utils.js","node_modules/@stencil/router/dist/collection/utils/match-path.js","src/components/app-layout.tsx","src/app-root.tsx","src/components/nav-menu/nav-menu.css?tag=nav-menu","src/components/nav-menu/nav-menu.tsx","node_modules/@stencil/router/dist/collection/components/route/route.css?tag=stencil-route","node_modules/@stencil/router/dist/collection/components/route/route.js","node_modules/@stencil/router/dist/collection/utils/dom-utils.js","node_modules/@stencil/router/dist/collection/components/route-link/route-link.js","node_modules/@stencil/router/dist/collection/components/switch/switch.js","node_modules/@stencil/router/dist/collection/utils/log.js","node_modules/@stencil/router/dist/collection/utils/createTransitionManager.js","node_modules/@stencil/router/dist/collection/utils/createScrollHistory.js","node_modules/@stencil/router/dist/collection/utils/createBrowserHistory.js","node_modules/@stencil/router/dist/collection/utils/createHashHistory.js","node_modules/@stencil/router/dist/collection/components/router/router.js"],"sourcesContent":["/**\r\n * TS adaption of https://github.com/pillarjs/path-to-regexp/blob/master/index.js\r\n */\r\n/**\r\n * Default configs.\r\n */\r\nconst DEFAULT_DELIMITER = '/';\r\nconst DEFAULT_DELIMITERS = './';\r\n/**\r\n * The main path matching regexp utility.\r\n */\r\nconst PATH_REGEXP = new RegExp([\r\n    // Match escaped characters that would otherwise appear in future matches.\r\n    // This allows the user to escape special characters that won't transform.\r\n    '(\\\\\\\\.)',\r\n    // Match Express-style parameters and un-named parameters with a prefix\r\n    // and optional suffixes. Matches appear as:\r\n    //\r\n    // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\r\n    // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\r\n    '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\r\n].join('|'), 'g');\r\n/**\r\n * Parse a string for the raw tokens.\r\n */\r\nexport const parse = (str, options) => {\r\n    var tokens = [];\r\n    var key = 0;\r\n    var index = 0;\r\n    var path = '';\r\n    var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;\r\n    var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS;\r\n    var pathEscaped = false;\r\n    var res;\r\n    while ((res = PATH_REGEXP.exec(str)) !== null) {\r\n        var m = res[0];\r\n        var escaped = res[1];\r\n        var offset = res.index;\r\n        path += str.slice(index, offset);\r\n        index = offset + m.length;\r\n        // Ignore already escaped sequences.\r\n        if (escaped) {\r\n            path += escaped[1];\r\n            pathEscaped = true;\r\n            continue;\r\n        }\r\n        var prev = '';\r\n        var next = str[index];\r\n        var name = res[2];\r\n        var capture = res[3];\r\n        var group = res[4];\r\n        var modifier = res[5];\r\n        if (!pathEscaped && path.length) {\r\n            var k = path.length - 1;\r\n            if (delimiters.indexOf(path[k]) > -1) {\r\n                prev = path[k];\r\n                path = path.slice(0, k);\r\n            }\r\n        }\r\n        // Push the current path onto the tokens.\r\n        if (path) {\r\n            tokens.push(path);\r\n            path = '';\r\n            pathEscaped = false;\r\n        }\r\n        var partial = prev !== '' && next !== undefined && next !== prev;\r\n        var repeat = modifier === '+' || modifier === '*';\r\n        var optional = modifier === '?' || modifier === '*';\r\n        var delimiter = prev || defaultDelimiter;\r\n        var pattern = capture || group;\r\n        tokens.push({\r\n            name: name || key++,\r\n            prefix: prev,\r\n            delimiter: delimiter,\r\n            optional: optional,\r\n            repeat: repeat,\r\n            partial: partial,\r\n            pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\r\n        });\r\n    }\r\n    // Push any remaining characters.\r\n    if (path || index < str.length) {\r\n        tokens.push(path + str.substr(index));\r\n    }\r\n    return tokens;\r\n};\r\n/**\r\n * Compile a string to a template function for the path.\r\n */\r\nexport const compile = (str, options) => {\r\n    return tokensToFunction(parse(str, options));\r\n};\r\n/**\r\n * Expose a method for transforming tokens into the path function.\r\n */\r\nexport const tokensToFunction = (tokens) => {\r\n    // Compile all the tokens into regexps.\r\n    var matches = new Array(tokens.length);\r\n    // Compile all the patterns before compilation.\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        var token = tokens[i];\r\n        if (typeof token === 'object') {\r\n            matches[i] = new RegExp('^(?:' + token.pattern + ')$');\r\n        }\r\n    }\r\n    return (data, options) => {\r\n        var path = '';\r\n        var encode = (options && options.encode) || encodeURIComponent;\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var token = tokens[i];\r\n            if (typeof token === 'string') {\r\n                path += token;\r\n                continue;\r\n            }\r\n            var value = data ? data[token.name] : undefined;\r\n            var segment;\r\n            if (Array.isArray(value)) {\r\n                if (!token.repeat) {\r\n                    throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array');\r\n                }\r\n                if (value.length === 0) {\r\n                    if (token.optional)\r\n                        continue;\r\n                    throw new TypeError('Expected \"' + token.name + '\" to not be empty');\r\n                }\r\n                for (var j = 0; j < value.length; j++) {\r\n                    segment = encode(value[j]);\r\n                    if (!matches[i].test(segment)) {\r\n                        throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"');\r\n                    }\r\n                    path += (j === 0 ? token.prefix : token.delimiter) + segment;\r\n                }\r\n                continue;\r\n            }\r\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n                segment = encode(String(value));\r\n                if (!matches[i].test(segment)) {\r\n                    throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"');\r\n                }\r\n                path += token.prefix + segment;\r\n                continue;\r\n            }\r\n            if (token.optional) {\r\n                // Prepend partial segment prefixes.\r\n                if (token.partial)\r\n                    path += token.prefix;\r\n                continue;\r\n            }\r\n            throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'));\r\n        }\r\n        return path;\r\n    };\r\n};\r\n/**\r\n * Escape a regular expression string.\r\n */\r\nconst escapeString = (str) => {\r\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\r\n};\r\n/**\r\n * Escape the capturing group by escaping special characters and meaning.\r\n */\r\nconst escapeGroup = (group) => {\r\n    return group.replace(/([=!:$/()])/g, '\\\\$1');\r\n};\r\n/**\r\n * Get the flags for a regexp from the options.\r\n */\r\nconst flags = (options) => {\r\n    return options && options.sensitive ? '' : 'i';\r\n};\r\n/**\r\n * Pull out keys from a regexp.\r\n */\r\nconst regexpToRegexp = (path, keys) => {\r\n    if (!keys)\r\n        return path;\r\n    // Use a negative lookahead to match only capturing groups.\r\n    var groups = path.source.match(/\\((?!\\?)/g);\r\n    if (groups) {\r\n        for (var i = 0; i < groups.length; i++) {\r\n            keys.push({\r\n                name: i,\r\n                prefix: null,\r\n                delimiter: null,\r\n                optional: false,\r\n                repeat: false,\r\n                partial: false,\r\n                pattern: null\r\n            });\r\n        }\r\n    }\r\n    return path;\r\n};\r\n/**\r\n * Transform an array into a regexp.\r\n */\r\nconst arrayToRegexp = (path, keys, options) => {\r\n    var parts = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        parts.push(pathToRegexp(path[i], keys, options).source);\r\n    }\r\n    return new RegExp('(?:' + parts.join('|') + ')', flags(options));\r\n};\r\n/**\r\n * Create a path regexp from string input.\r\n */\r\nconst stringToRegexp = (path, keys, options) => {\r\n    return tokensToRegExp(parse(path, options), keys, options);\r\n};\r\n/**\r\n * Expose a function for taking tokens and returning a RegExp.\r\n */\r\nexport const tokensToRegExp = (tokens, keys, options) => {\r\n    options = options || {};\r\n    var strict = options.strict;\r\n    var end = options.end !== false;\r\n    var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\r\n    var delimiters = options.delimiters || DEFAULT_DELIMITERS;\r\n    var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\r\n    var route = '';\r\n    var isEndDelimited = false;\r\n    // Iterate over the tokens and create our regexp string.\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        var token = tokens[i];\r\n        if (typeof token === 'string') {\r\n            route += escapeString(token);\r\n            isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\r\n        }\r\n        else {\r\n            var prefix = escapeString(token.prefix || '');\r\n            var capture = token.repeat\r\n                ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\r\n                : token.pattern;\r\n            if (keys)\r\n                keys.push(token);\r\n            if (token.optional) {\r\n                if (token.partial) {\r\n                    route += prefix + '(' + capture + ')?';\r\n                }\r\n                else {\r\n                    route += '(?:' + prefix + '(' + capture + '))?';\r\n                }\r\n            }\r\n            else {\r\n                route += prefix + '(' + capture + ')';\r\n            }\r\n        }\r\n    }\r\n    if (end) {\r\n        if (!strict)\r\n            route += '(?:' + delimiter + ')?';\r\n        route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\r\n    }\r\n    else {\r\n        if (!strict)\r\n            route += '(?:' + delimiter + '(?=' + endsWith + '))?';\r\n        if (!isEndDelimited)\r\n            route += '(?=' + delimiter + '|' + endsWith + ')';\r\n    }\r\n    return new RegExp('^' + route, flags(options));\r\n};\r\n/**\r\n * Normalize the given path string, returning a regular expression.\r\n *\r\n * An empty array can be passed in for the keys, which will hold the\r\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\r\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\r\n */\r\nexport const pathToRegexp = (path, keys, options) => {\r\n    if (path instanceof RegExp) {\r\n        return regexpToRegexp(path, keys);\r\n    }\r\n    if (Array.isArray(path)) {\r\n        return arrayToRegexp(path, keys, options);\r\n    }\r\n    return stringToRegexp(path, keys, options);\r\n};\r\n","export const hasBasename = (path, prefix) => {\r\n    return (new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i')).test(path);\r\n};\r\nexport const stripBasename = (path, prefix) => {\r\n    return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\r\n};\r\nexport const stripTrailingSlash = (path) => {\r\n    return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\r\n};\r\nexport const addLeadingSlash = (path) => {\r\n    return path.charAt(0) === '/' ? path : '/' + path;\r\n};\r\nexport const stripLeadingSlash = (path) => {\r\n    return path.charAt(0) === '/' ? path.substr(1) : path;\r\n};\r\nexport const stripPrefix = (path, prefix) => {\r\n    return path.indexOf(prefix) === 0 ? path.substr(prefix.length) : path;\r\n};\r\nexport const parsePath = (path) => {\r\n    let pathname = path || '/';\r\n    let search = '';\r\n    let hash = '';\r\n    const hashIndex = pathname.indexOf('#');\r\n    if (hashIndex !== -1) {\r\n        hash = pathname.substr(hashIndex);\r\n        pathname = pathname.substr(0, hashIndex);\r\n    }\r\n    const searchIndex = pathname.indexOf('?');\r\n    if (searchIndex !== -1) {\r\n        search = pathname.substr(searchIndex);\r\n        pathname = pathname.substr(0, searchIndex);\r\n    }\r\n    return {\r\n        pathname,\r\n        search: search === '?' ? '' : search,\r\n        hash: hash === '#' ? '' : hash,\r\n        query: {},\r\n        key: ''\r\n    };\r\n};\r\nexport const createPath = (location) => {\r\n    const { pathname, search, hash } = location;\r\n    let path = pathname || '/';\r\n    if (search && search !== '?') {\r\n        path += (search.charAt(0) === '?' ? search : `?${search}`);\r\n    }\r\n    if (hash && hash !== '#') {\r\n        path += (hash.charAt(0) === '#' ? hash : `#${hash}`);\r\n    }\r\n    return path;\r\n};\r\nexport const parseQueryString = (query) => {\r\n    if (!query) {\r\n        return {};\r\n    }\r\n    return (/^[?#]/.test(query) ? query.slice(1) : query)\r\n        .split('&')\r\n        .reduce((params, param) => {\r\n        let [key, value] = param.split('=');\r\n        params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\r\n        return params;\r\n    }, {});\r\n};\r\n","import { parsePath, parseQueryString } from './path-utils';\r\nconst isAbsolute = (pathname) => {\r\n    return pathname.charAt(0) === '/';\r\n};\r\nexport const createKey = (keyLength) => {\r\n    return Math.random().toString(36).substr(2, keyLength);\r\n};\r\n// About 1.5x faster than the two-arg version of Array#splice()\r\nconst spliceOne = (list, index) => {\r\n    for (let i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\r\n        list[i] = list[k];\r\n    }\r\n    list.pop();\r\n};\r\n// This implementation is based heavily on node's url.parse\r\nexport const resolvePathname = (to, from = '') => {\r\n    let fromParts = from && from.split('/') || [];\r\n    let hasTrailingSlash;\r\n    let up = 0;\r\n    const toParts = to && to.split('/') || [];\r\n    const isToAbs = to && isAbsolute(to);\r\n    const isFromAbs = from && isAbsolute(from);\r\n    const mustEndAbs = isToAbs || isFromAbs;\r\n    if (to && isAbsolute(to)) {\r\n        // to is absolute\r\n        fromParts = toParts;\r\n    }\r\n    else if (toParts.length) {\r\n        // to is relative, drop the filename\r\n        fromParts.pop();\r\n        fromParts = fromParts.concat(toParts);\r\n    }\r\n    if (!fromParts.length) {\r\n        return '/';\r\n    }\r\n    if (fromParts.length) {\r\n        const last = fromParts[fromParts.length - 1];\r\n        hasTrailingSlash = (last === '.' || last === '..' || last === '');\r\n    }\r\n    else {\r\n        hasTrailingSlash = false;\r\n    }\r\n    for (let i = fromParts.length; i >= 0; i--) {\r\n        const part = fromParts[i];\r\n        if (part === '.') {\r\n            spliceOne(fromParts, i);\r\n        }\r\n        else if (part === '..') {\r\n            spliceOne(fromParts, i);\r\n            up++;\r\n        }\r\n        else if (up) {\r\n            spliceOne(fromParts, i);\r\n            up--;\r\n        }\r\n    }\r\n    if (!mustEndAbs) {\r\n        for (; up--; up) {\r\n            fromParts.unshift('..');\r\n        }\r\n    }\r\n    if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) {\r\n        fromParts.unshift('');\r\n    }\r\n    let result = fromParts.join('/');\r\n    if (hasTrailingSlash && result.substr(-1) !== '/') {\r\n        result += '/';\r\n    }\r\n    return result;\r\n};\r\nexport const valueEqual = (a, b) => {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (Array.isArray(a)) {\r\n        return Array.isArray(b) && a.length === b.length && a.every((item, index) => {\r\n            return valueEqual(item, b[index]);\r\n        });\r\n    }\r\n    const aType = typeof a;\r\n    const bType = typeof b;\r\n    if (aType !== bType) {\r\n        return false;\r\n    }\r\n    if (aType === 'object') {\r\n        const aValue = a.valueOf();\r\n        const bValue = b.valueOf();\r\n        if (aValue !== a || bValue !== b) {\r\n            return valueEqual(aValue, bValue);\r\n        }\r\n        const aKeys = Object.keys(a);\r\n        const bKeys = Object.keys(b);\r\n        if (aKeys.length !== bKeys.length) {\r\n            return false;\r\n        }\r\n        return aKeys.every((key) => {\r\n            return valueEqual(a[key], b[key]);\r\n        });\r\n    }\r\n    return false;\r\n};\r\nexport const locationsAreEqual = (a, b) => {\r\n    return a.pathname === b.pathname &&\r\n        a.search === b.search &&\r\n        a.hash === b.hash &&\r\n        a.key === b.key &&\r\n        valueEqual(a.state, b.state);\r\n};\r\nexport const createLocation = (path, state, key, currentLocation) => {\r\n    let location;\r\n    if (typeof path === 'string') {\r\n        // Two-arg form: push(path, state)\r\n        location = parsePath(path);\r\n        if (state !== undefined) {\r\n            location.state = state;\r\n        }\r\n    }\r\n    else {\r\n        // One-arg form: push(location)\r\n        location = Object.assign({ pathname: '' }, path);\r\n        if (location.search && location.search.charAt(0) !== '?') {\r\n            location.search = '?' + location.search;\r\n        }\r\n        if (location.hash && location.hash.charAt(0) !== '#') {\r\n            location.hash = '#' + location.hash;\r\n        }\r\n        if (state !== undefined && location.state === undefined) {\r\n            location.state = state;\r\n        }\r\n    }\r\n    try {\r\n        location.pathname = decodeURI(location.pathname);\r\n    }\r\n    catch (e) {\r\n        if (e instanceof URIError) {\r\n            throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' +\r\n                'This is likely caused by an invalid percent-encoding.');\r\n        }\r\n        else {\r\n            throw e;\r\n        }\r\n    }\r\n    location.key = key;\r\n    if (currentLocation) {\r\n        // Resolve incomplete/relative pathname relative to current location.\r\n        if (!location.pathname) {\r\n            location.pathname = currentLocation.pathname;\r\n        }\r\n        else if (location.pathname.charAt(0) !== '/') {\r\n            location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\r\n        }\r\n    }\r\n    else {\r\n        // When there is no prior location and pathname is empty, set it to /\r\n        if (!location.pathname) {\r\n            location.pathname = '/';\r\n        }\r\n    }\r\n    location.query = parseQueryString(location.search || '');\r\n    return location;\r\n};\r\n","import { pathToRegexp } from './path-to-regex';\r\nimport { valueEqual } from './location-utils';\r\nlet cacheCount = 0;\r\nconst patternCache = {};\r\nconst cacheLimit = 10000;\r\n// Memoized function for creating the path match regex\r\nconst compilePath = (pattern, options) => {\r\n    const cacheKey = `${options.end}${options.strict}`;\r\n    const cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\r\n    const cachePattern = JSON.stringify(pattern);\r\n    if (cache[cachePattern]) {\r\n        return cache[cachePattern];\r\n    }\r\n    const keys = [];\r\n    const re = pathToRegexp(pattern, keys, options);\r\n    const compiledPattern = { re, keys };\r\n    if (cacheCount < cacheLimit) {\r\n        cache[cachePattern] = compiledPattern;\r\n        cacheCount += 1;\r\n    }\r\n    return compiledPattern;\r\n};\r\n/**\r\n * Public API for matching a URL pathname to a path pattern.\r\n */\r\nexport const matchPath = (pathname, options = {}) => {\r\n    if (typeof options === 'string') {\r\n        options = { path: options };\r\n    }\r\n    const { path = '/', exact = false, strict = false } = options;\r\n    const { re, keys } = compilePath(path, { end: exact, strict });\r\n    const match = re.exec(pathname);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    const [url, ...values] = match;\r\n    const isExact = pathname === url;\r\n    if (exact && !isExact) {\r\n        return null;\r\n    }\r\n    return {\r\n        path,\r\n        url: path === '/' && url === '' ? '/' : url,\r\n        isExact,\r\n        params: keys.reduce((memo, key, index) => {\r\n            memo[key.name] = values[index];\r\n            return memo;\r\n        }, {})\r\n    };\r\n};\r\nexport const matchesAreEqual = (a, b) => {\r\n    if (a == null && b == null) {\r\n        return true;\r\n    }\r\n    if (b == null) {\r\n        return false;\r\n    }\r\n    return a && b &&\r\n        a.path === b.path &&\r\n        a.url === b.url &&\r\n        valueEqual(a.params, b.params);\r\n};\r\n","import { Component, h } from '@stencil/core';\r\n\r\n@Component({\r\n    tag: 'app-layout',\r\n})\r\nexport class Layout {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav-menu />\r\n                <div class=\"container\">\r\n                    <slot />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Component, Element, h } from '@stencil/core';\r\nimport '@stencil/router';\r\n\r\n@Component({\r\n    tag: 'app-root'\r\n})\r\nexport class AppRoot {\r\n\r\n    @Element() host: HTMLDivElement;\r\n\r\n    componentWillLoad() {\r\n        this.host.innerHTML = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <app-layout>\r\n                <stencil-router>\r\n                    <stencil-route-switch scrollTopOffset={0}>\r\n                        <stencil-route url=\"/\" component=\"app-home\" exact={true} />\r\n                        <stencil-route url=\"/counter\" component=\"app-counter\" exact={true} />\r\n                        <stencil-route url=\"/fetch-data\" component=\"fetch-data\" exact={true}/>\r\n                        <stencil-route url=\"/easy-query\" component=\"easy-query\" exact={true}/>\r\n                        <stencil-route url=\"/filter-bar\" component=\"filter-bar\" exact={true}/>\r\n                    </stencil-route-switch>\r\n                </stencil-router>\r\n            </app-layout>\r\n        );\r\n    }\r\n}","a.navbar-brand {\r\n    white-space: normal;\r\n    text-align: center;\r\n    word-break: break-all;\r\n}\r\n  \r\nhtml {\r\n    font-size: 14px;\r\n}\r\n@media (min-width: 768px) {\r\n    html {\r\n        font-size: 16px;\r\n    }\r\n}\r\n  \r\n.box-shadow {\r\n    box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\r\n}\r\n","import { Component, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n    tag: 'nav-menu',\r\n    styleUrl: 'nav-menu.css'\r\n})\r\nexport class NavMenu {\r\n\r\n    @State() isExpanded = false;\r\n\r\n    toggle = () => {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n    render() {\r\n\r\n        let collapseClass = \"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\";\r\n        if (this.isExpanded) {\r\n            collapseClass += \" show\";\r\n        }\r\n\r\n        return (\r\n            <header>\r\n                <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\r\n                    <div class=\"container\">\r\n                        <stencil-route-link anchorClass=\"navbar-brand\" url=\"/\">\r\n                            EqStencilDemo\r\n                        </stencil-route-link>\r\n                        <button class=\"navbar-toggler\" type=\"button\" aria-expanded={this.isExpanded} data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-label=\"Toggle navigation\" onClick={this.toggle}>\r\n                            <span class=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div class={collapseClass}>\r\n                            <ul class=\"navbar-nav flex-grow\">\r\n                                <li class=\"nav-item\">\r\n                                    <stencil-route-link anchorClass=\"nav-link text-dark\" activeClass=\"link-active\" url=\"/\">\r\n                                        Home\r\n                                    </stencil-route-link>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <stencil-route-link anchorClass=\"nav-link text-dark\" activeClass=\"link-active\" url=\"/counter\">\r\n                                        Counter\r\n                                    </stencil-route-link>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <stencil-route-link anchorClass=\"nav-link text-dark\" activeClass=\"link-active\" url=\"/fetch-data\">\r\n                                        Fetch Data\r\n                                    </stencil-route-link>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <stencil-route-link anchorClass=\"nav-link text-dark\" activeClass=\"link-active\" url=\"/easy-query\">\r\n                                        EasyQuery\r\n                                    </stencil-route-link>\r\n                                </li>\r\n                                <li class=\"nav-item\">\r\n                                    <stencil-route-link anchorClass=\"nav-link text-dark\" activeClass=\"link-active\" url=\"/filter-bar\">\r\n                                        Data Filter\r\n                                    </stencil-route-link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}","stencil-route.inactive {\n  display: none;\n}\n","import { h } from '@stencil/core';\r\nimport { matchPath, matchesAreEqual } from '../../utils/match-path';\r\nimport ActiveRouter from '../../global/active-router';\r\n/**\r\n  * @name Route\r\n  * @module ionic\r\n  * @description\r\n */\r\nexport class Route {\r\n    constructor() {\r\n        this.group = null;\r\n        this.match = null;\r\n        this.componentProps = {};\r\n        this.exact = false;\r\n        this.scrollOnNextRender = false;\r\n        this.previousMatch = null;\r\n    }\r\n    // Identify if the current route is a match.\r\n    computeMatch(newLocation) {\r\n        const isGrouped = this.group != null || (this.el.parentElement != null && this.el.parentElement.tagName.toLowerCase() === 'stencil-route-switch');\r\n        if (!newLocation || isGrouped) {\r\n            return;\r\n        }\r\n        this.previousMatch = this.match;\r\n        return this.match = matchPath(newLocation.pathname, {\r\n            path: this.url,\r\n            exact: this.exact,\r\n            strict: true\r\n        });\r\n    }\r\n    async loadCompleted() {\r\n        let routeViewOptions = {};\r\n        if (this.history && this.history.location.hash) {\r\n            routeViewOptions = {\r\n                scrollToId: this.history.location.hash.substr(1)\r\n            };\r\n        }\r\n        else if (this.scrollTopOffset) {\r\n            routeViewOptions = {\r\n                scrollTopOffset: this.scrollTopOffset\r\n            };\r\n        }\r\n        // After all children have completed then tell switch\r\n        // the provided callback will get executed after this route is in view\r\n        if (typeof this.componentUpdated === 'function') {\r\n            this.componentUpdated(routeViewOptions);\r\n            // If this is an independent route and it matches then routes have updated.\r\n            // If the only change to location is a hash change then do not scroll.\r\n        }\r\n        else if (this.match && !matchesAreEqual(this.match, this.previousMatch) && this.routeViewsUpdated) {\r\n            this.routeViewsUpdated(routeViewOptions);\r\n        }\r\n    }\r\n    async componentDidUpdate() {\r\n        await this.loadCompleted();\r\n    }\r\n    async componentDidLoad() {\r\n        await this.loadCompleted();\r\n    }\r\n    render() {\r\n        // If there is no activeRouter then do not render\r\n        // Check if this route is in the matching URL (for example, a parent route)\r\n        if (!this.match || !this.history) {\r\n            return null;\r\n        }\r\n        // component props defined in route\r\n        // the history api\r\n        // current match data including params\r\n        const childProps = Object.assign({}, this.componentProps, { history: this.history, match: this.match });\r\n        // If there is a routerRender defined then use\r\n        // that and pass the component and component props with it.\r\n        if (this.routeRender) {\r\n            return this.routeRender(Object.assign({}, childProps, { component: this.component }));\r\n        }\r\n        if (this.component) {\r\n            const ChildComponent = this.component;\r\n            return (h(ChildComponent, Object.assign({}, childProps)));\r\n        }\r\n    }\r\n    static get is() { return \"stencil-route\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"route.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"route.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"group\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string | null\",\r\n                \"resolved\": \"null | string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"group\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"null\"\r\n        },\r\n        \"componentUpdated\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"(options: RouteViewOptions) => void\",\r\n                \"resolved\": \"((options: RouteViewOptions) => void) | undefined\",\r\n                \"references\": {\r\n                    \"RouteViewOptions\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"match\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"MatchResults | null\",\r\n                \"resolved\": \"MatchResults | null\",\r\n                \"references\": {\r\n                    \"MatchResults\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"null\"\r\n        },\r\n        \"url\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string | string[]\",\r\n                \"resolved\": \"string | string[] | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"url\",\r\n            \"reflect\": false\r\n        },\r\n        \"component\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"component\",\r\n            \"reflect\": false\r\n        },\r\n        \"componentProps\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"{ [key: string]: any }\",\r\n                \"resolved\": \"undefined | { [key: string]: any; }\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"{}\"\r\n        },\r\n        \"exact\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"exact\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"routeRender\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"(props: RouteRenderProps) => any\",\r\n                \"resolved\": \"((props: RouteRenderProps) => any) | undefined\",\r\n                \"references\": {\r\n                    \"RouteRenderProps\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"scrollTopOffset\": {\r\n            \"type\": \"number\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"number\",\r\n                \"resolved\": \"number | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"scroll-top-offset\",\r\n            \"reflect\": false\r\n        },\r\n        \"routeViewsUpdated\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"(options: RouteViewOptions) => void\",\r\n                \"resolved\": \"((options: RouteViewOptions) => void) | undefined\",\r\n                \"references\": {\r\n                    \"RouteViewOptions\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"location\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"LocationSegments\",\r\n                \"resolved\": \"LocationSegments | undefined\",\r\n                \"references\": {\r\n                    \"LocationSegments\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"history\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"RouterHistory\",\r\n                \"resolved\": \"RouterHistory | undefined\",\r\n                \"references\": {\r\n                    \"RouterHistory\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"historyType\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"HistoryType\",\r\n                \"resolved\": \"\\\"browser\\\" | \\\"hash\\\" | undefined\",\r\n                \"references\": {\r\n                    \"HistoryType\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"history-type\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"location\",\r\n            \"methodName\": \"computeMatch\"\r\n        }]; }\r\n}\r\nActiveRouter.injectProps(Route, [\r\n    'location',\r\n    'history',\r\n    'historyType',\r\n    'routeViewsUpdated'\r\n]);\r\n","export const getConfirmation = (win, message, callback) => (callback(win.confirm(message)));\r\nexport const isModifiedEvent = (ev) => (ev.metaKey || ev.altKey || ev.ctrlKey || ev.shiftKey);\r\n/**\r\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\r\n *\r\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\r\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\r\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\r\n */\r\nexport const supportsHistory = (win) => {\r\n    const ua = win.navigator.userAgent;\r\n    if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\r\n        ua.indexOf('Mobile Safari') !== -1 &&\r\n        ua.indexOf('Chrome') === -1 &&\r\n        ua.indexOf('Windows Phone') === -1) {\r\n        return false;\r\n    }\r\n    return win.history && 'pushState' in win.history;\r\n};\r\n/**\r\n * Returns true if browser fires popstate on hash change.\r\n * IE10 and IE11 do not.\r\n */\r\nexport const supportsPopStateOnHashChange = (nav) => (nav.userAgent.indexOf('Trident') === -1);\r\n/**\r\n * Returns false if using go(n) with hash history causes a full page reload.\r\n */\r\nexport const supportsGoWithoutReloadUsingHash = (nav) => (nav.userAgent.indexOf('Firefox') === -1);\r\nexport const isExtraneousPopstateEvent = (nav, event) => (event.state === undefined &&\r\n    nav.userAgent.indexOf('CriOS') === -1);\r\nexport const storageAvailable = (win, type) => {\r\n    const storage = win[type];\r\n    const x = '__storage_test__';\r\n    try {\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return e instanceof DOMException && (\r\n        // everything except Firefox\r\n        e.code === 22 ||\r\n            // Firefox\r\n            e.code === 1014 ||\r\n            // test name field too, because code might not be present\r\n            // everything except Firefox\r\n            e.name === 'QuotaExceededError' ||\r\n            // Firefox\r\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            storage.length !== 0;\r\n    }\r\n};\r\n","import { h } from '@stencil/core';\r\nimport { matchPath } from '../../utils/match-path';\r\nimport { isModifiedEvent } from '../../utils/dom-utils';\r\nimport ActiveRouter from '../../global/active-router';\r\nconst getUrl = (url, root) => {\r\n    // Don't allow double slashes\r\n    if (url.charAt(0) == '/' && root.charAt(root.length - 1) == '/') {\r\n        return root.slice(0, root.length - 1) + url;\r\n    }\r\n    return root + url;\r\n};\r\n/**\r\n  * @name Route\r\n  * @module ionic\r\n  * @description\r\n */\r\nexport class RouteLink {\r\n    constructor() {\r\n        this.unsubscribe = () => { return; };\r\n        this.activeClass = 'link-active';\r\n        this.exact = false;\r\n        this.strict = true;\r\n        /**\r\n          *  Custom tag to use instead of an anchor\r\n          */\r\n        this.custom = 'a';\r\n        this.match = null;\r\n    }\r\n    componentWillLoad() {\r\n        this.computeMatch();\r\n    }\r\n    // Identify if the current route is a match.\r\n    computeMatch() {\r\n        if (this.location) {\r\n            this.match = matchPath(this.location.pathname, {\r\n                path: this.urlMatch || this.url,\r\n                exact: this.exact,\r\n                strict: this.strict\r\n            });\r\n        }\r\n    }\r\n    handleClick(e) {\r\n        if (isModifiedEvent(e) || !this.history || !this.url || !this.root) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        return this.history.push(getUrl(this.url, this.root));\r\n    }\r\n    // Get the URL for this route link without the root from the router\r\n    render() {\r\n        let anchorAttributes = {\r\n            class: {\r\n                [this.activeClass]: this.match !== null,\r\n            },\r\n            onClick: this.handleClick.bind(this)\r\n        };\r\n        if (this.anchorClass) {\r\n            anchorAttributes.class[this.anchorClass] = true;\r\n        }\r\n        if (this.custom === 'a') {\r\n            anchorAttributes = Object.assign({}, anchorAttributes, { href: this.url, title: this.anchorTitle, role: this.anchorRole, tabindex: this.anchorTabIndex, 'aria-haspopup': this.ariaHaspopup, id: this.anchorId, 'aria-posinset': this.ariaPosinset, 'aria-setsize': this.ariaSetsize, 'aria-label': this.ariaLabel });\r\n        }\r\n        return (h(this.custom, Object.assign({}, anchorAttributes),\r\n            h(\"slot\", null)));\r\n    }\r\n    static get is() { return \"stencil-route-link\"; }\r\n    static get properties() { return {\r\n        \"url\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"url\",\r\n            \"reflect\": false\r\n        },\r\n        \"urlMatch\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"Path\",\r\n                \"resolved\": \"(string | RegExp)[] | RegExp | string | undefined\",\r\n                \"references\": {\r\n                    \"Path\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"url-match\",\r\n            \"reflect\": false\r\n        },\r\n        \"activeClass\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"active-class\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"'link-active'\"\r\n        },\r\n        \"exact\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"exact\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"strict\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"strict\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        \"custom\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Custom tag to use instead of an anchor\"\r\n            },\r\n            \"attribute\": \"custom\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"'a'\"\r\n        },\r\n        \"anchorClass\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"anchor-class\",\r\n            \"reflect\": false\r\n        },\r\n        \"anchorRole\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"anchor-role\",\r\n            \"reflect\": false\r\n        },\r\n        \"anchorTitle\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"anchor-title\",\r\n            \"reflect\": false\r\n        },\r\n        \"anchorTabIndex\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"anchor-tab-index\",\r\n            \"reflect\": false\r\n        },\r\n        \"anchorId\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"anchor-id\",\r\n            \"reflect\": false\r\n        },\r\n        \"history\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"RouterHistory\",\r\n                \"resolved\": \"RouterHistory | undefined\",\r\n                \"references\": {\r\n                    \"RouterHistory\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"location\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"LocationSegments\",\r\n                \"resolved\": \"LocationSegments | undefined\",\r\n                \"references\": {\r\n                    \"LocationSegments\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"root\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"root\",\r\n            \"reflect\": false\r\n        },\r\n        \"ariaHaspopup\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"aria-haspopup\",\r\n            \"reflect\": false\r\n        },\r\n        \"ariaPosinset\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"aria-posinset\",\r\n            \"reflect\": false\r\n        },\r\n        \"ariaSetsize\": {\r\n            \"type\": \"number\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"number\",\r\n                \"resolved\": \"number | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"aria-setsize\",\r\n            \"reflect\": false\r\n        },\r\n        \"ariaLabel\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"aria-label\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"match\": {}\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"location\",\r\n            \"methodName\": \"computeMatch\"\r\n        }]; }\r\n}\r\nActiveRouter.injectProps(RouteLink, [\r\n    'history',\r\n    'location',\r\n    'root'\r\n]);\r\n","import { h } from '@stencil/core';\r\nimport ActiveRouter from '../../global/active-router';\r\nimport { matchPath } from '../../utils/match-path';\r\nconst getUniqueId = () => {\r\n    return ((Math.random() * 10e16).toString().match(/.{4}/g) || []).join('-');\r\n};\r\nconst getMatch = (pathname, url, exact) => {\r\n    return matchPath(pathname, {\r\n        path: url,\r\n        exact: exact,\r\n        strict: true\r\n    });\r\n};\r\nconst isHTMLStencilRouteElement = (elm) => {\r\n    return elm.tagName === 'STENCIL-ROUTE';\r\n};\r\nexport class RouteSwitch {\r\n    constructor() {\r\n        this.group = getUniqueId();\r\n        this.subscribers = [];\r\n    }\r\n    componentWillLoad() {\r\n        if (this.location != null) {\r\n            this.regenerateSubscribers(this.location);\r\n        }\r\n    }\r\n    async regenerateSubscribers(newLocation) {\r\n        if (newLocation == null) {\r\n            return;\r\n        }\r\n        let newActiveIndex = -1;\r\n        this.subscribers = Array.prototype.slice.call(this.el.children)\r\n            .filter(isHTMLStencilRouteElement)\r\n            .map((childElement, index) => {\r\n            const match = getMatch(newLocation.pathname, childElement.url, childElement.exact);\r\n            if (match && newActiveIndex === -1) {\r\n                newActiveIndex = index;\r\n            }\r\n            return {\r\n                el: childElement,\r\n                match: match\r\n            };\r\n        });\r\n        if (newActiveIndex === -1) {\r\n            return;\r\n        }\r\n        // Check if this actually changes which child is active\r\n        // then just pass the new match down if the active route isn't changing.\r\n        if (this.activeIndex === newActiveIndex) {\r\n            this.subscribers[newActiveIndex].el.match = this.subscribers[newActiveIndex].match;\r\n            return;\r\n        }\r\n        this.activeIndex = newActiveIndex;\r\n        // Set all props on the new active route then wait until it says that it\r\n        // is completed\r\n        const activeChild = this.subscribers[this.activeIndex];\r\n        if (this.scrollTopOffset) {\r\n            activeChild.el.scrollTopOffset = this.scrollTopOffset;\r\n        }\r\n        activeChild.el.group = this.group;\r\n        activeChild.el.match = activeChild.match;\r\n        activeChild.el.componentUpdated = (routeViewUpdatedOptions) => {\r\n            // After the new active route has completed then update visibility of routes\r\n            this.queue.write(() => {\r\n                this.subscribers.forEach((child, index) => {\r\n                    child.el.componentUpdated = undefined;\r\n                    if (index === this.activeIndex) {\r\n                        return child.el.style.display = '';\r\n                    }\r\n                    if (this.scrollTopOffset) {\r\n                        child.el.scrollTopOffset = this.scrollTopOffset;\r\n                    }\r\n                    child.el.group = this.group;\r\n                    child.el.match = null;\r\n                    child.el.style.display = 'none';\r\n                });\r\n            });\r\n            if (this.routeViewsUpdated) {\r\n                this.routeViewsUpdated(Object.assign({ scrollTopOffset: this.scrollTopOffset }, routeViewUpdatedOptions));\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return (h(\"slot\", null));\r\n    }\r\n    static get is() { return \"stencil-route-switch\"; }\r\n    static get properties() { return {\r\n        \"group\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"group\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"getUniqueId()\"\r\n        },\r\n        \"scrollTopOffset\": {\r\n            \"type\": \"number\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"number\",\r\n                \"resolved\": \"number | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"scroll-top-offset\",\r\n            \"reflect\": false\r\n        },\r\n        \"location\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"LocationSegments\",\r\n                \"resolved\": \"LocationSegments | undefined\",\r\n                \"references\": {\r\n                    \"LocationSegments\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        },\r\n        \"routeViewsUpdated\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"(options: RouteViewOptions) => void\",\r\n                \"resolved\": \"((options: RouteViewOptions) => void) | undefined\",\r\n                \"references\": {\r\n                    \"RouteViewOptions\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        }\r\n    }; }\r\n    static get contextProps() { return [{\r\n            \"name\": \"queue\",\r\n            \"context\": \"queue\"\r\n        }]; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"location\",\r\n            \"methodName\": \"regenerateSubscribers\"\r\n        }]; }\r\n}\r\nActiveRouter.injectProps(RouteSwitch, [\r\n    'location',\r\n    'routeViewsUpdated'\r\n]);\r\n","export const warning = (value, ...args) => {\r\n    if (!value) {\r\n        console.warn(...args);\r\n    }\r\n};\r\n","// Adapted from the https://github.com/ReactTraining/history and converted to TypeScript\r\nimport { warning } from './log';\r\nconst createTransitionManager = () => {\r\n    let prompt;\r\n    let listeners = [];\r\n    const setPrompt = (nextPrompt) => {\r\n        warning(prompt == null, 'A history supports only one prompt at a time');\r\n        prompt = nextPrompt;\r\n        return () => {\r\n            if (prompt === nextPrompt) {\r\n                prompt = null;\r\n            }\r\n        };\r\n    };\r\n    const confirmTransitionTo = (location, action, getUserConfirmation, callback) => {\r\n        // TODO: If another transition starts while we're still confirming\r\n        // the previous one, we may end up in a weird state. Figure out the\r\n        // best way to handle this.\r\n        if (prompt != null) {\r\n            const result = typeof prompt === 'function' ? prompt(location, action) : prompt;\r\n            if (typeof result === 'string') {\r\n                if (typeof getUserConfirmation === 'function') {\r\n                    getUserConfirmation(result, callback);\r\n                }\r\n                else {\r\n                    warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\r\n                    callback(true);\r\n                }\r\n            }\r\n            else {\r\n                // Return false from a transition hook to cancel the transition.\r\n                callback(result !== false);\r\n            }\r\n        }\r\n        else {\r\n            callback(true);\r\n        }\r\n    };\r\n    const appendListener = (fn) => {\r\n        let isActive = true;\r\n        const listener = (...args) => {\r\n            if (isActive) {\r\n                fn(...args);\r\n            }\r\n        };\r\n        listeners.push(listener);\r\n        return () => {\r\n            isActive = false;\r\n            listeners = listeners.filter(item => item !== listener);\r\n        };\r\n    };\r\n    const notifyListeners = (...args) => {\r\n        listeners.forEach(listener => listener(...args));\r\n    };\r\n    return {\r\n        setPrompt,\r\n        confirmTransitionTo,\r\n        appendListener,\r\n        notifyListeners\r\n    };\r\n};\r\nexport default createTransitionManager;\r\n","import { storageAvailable } from './dom-utils';\r\nconst createScrollHistory = (win, applicationScrollKey = 'scrollPositions') => {\r\n    let scrollPositions = new Map();\r\n    const set = (key, value) => {\r\n        scrollPositions.set(key, value);\r\n        if (storageAvailable(win, 'sessionStorage')) {\r\n            const arrayData = [];\r\n            scrollPositions.forEach((value, key) => {\r\n                arrayData.push([key, value]);\r\n            });\r\n            win.sessionStorage.setItem('scrollPositions', JSON.stringify(arrayData));\r\n        }\r\n    };\r\n    const get = (key) => {\r\n        return scrollPositions.get(key);\r\n    };\r\n    const has = (key) => {\r\n        return scrollPositions.has(key);\r\n    };\r\n    const capture = (key) => {\r\n        set(key, [win.scrollX, win.scrollY]);\r\n    };\r\n    if (storageAvailable(win, 'sessionStorage')) {\r\n        const scrollData = win.sessionStorage.getItem(applicationScrollKey);\r\n        scrollPositions = scrollData ?\r\n            new Map(JSON.parse(scrollData)) :\r\n            scrollPositions;\r\n    }\r\n    if ('scrollRestoration' in win.history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    return {\r\n        set,\r\n        get,\r\n        has,\r\n        capture\r\n    };\r\n};\r\nexport default createScrollHistory;\r\n","// Adapted from the https://github.com/ReactTraining/history and converted to TypeScript\r\nimport { createLocation, createKey } from './location-utils';\r\nimport { warning } from './log';\r\nimport { addLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './path-utils';\r\nimport createTransitionManager from './createTransitionManager';\r\nimport createScrollHistory from './createScrollHistory';\r\nimport { getConfirmation, supportsHistory, supportsPopStateOnHashChange, isExtraneousPopstateEvent } from './dom-utils';\r\nconst PopStateEvent = 'popstate';\r\nconst HashChangeEvent = 'hashchange';\r\n/**\r\n * Creates a history object that uses the HTML5 history API including\r\n * pushState, replaceState, and the popstate event.\r\n */\r\nconst createBrowserHistory = (win, props = {}) => {\r\n    let forceNextPop = false;\r\n    const globalHistory = win.history;\r\n    const globalLocation = win.location;\r\n    const globalNavigator = win.navigator;\r\n    const canUseHistory = supportsHistory(win);\r\n    const needsHashChangeListener = !supportsPopStateOnHashChange(globalNavigator);\r\n    const scrollHistory = createScrollHistory(win);\r\n    const forceRefresh = (props.forceRefresh != null) ? props.forceRefresh : false;\r\n    const getUserConfirmation = (props.getUserConfirmation != null) ? props.getUserConfirmation : getConfirmation;\r\n    const keyLength = (props.keyLength != null) ? props.keyLength : 6;\r\n    const basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\r\n    const getHistoryState = () => {\r\n        try {\r\n            return win.history.state || {};\r\n        }\r\n        catch (e) {\r\n            // IE 11 sometimes throws when accessing window.history.state\r\n            // See https://github.com/ReactTraining/history/pull/289\r\n            return {};\r\n        }\r\n    };\r\n    const getDOMLocation = (historyState) => {\r\n        historyState = historyState || {};\r\n        const { key, state } = historyState;\r\n        const { pathname, search, hash } = globalLocation;\r\n        let path = pathname + search + hash;\r\n        warning((!basename || hasBasename(path, basename)), 'You are attempting to use a basename on a page whose URL path does not begin ' +\r\n            'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\r\n        if (basename) {\r\n            path = stripBasename(path, basename);\r\n        }\r\n        return createLocation(path, state, key || createKey(keyLength));\r\n    };\r\n    const transitionManager = createTransitionManager();\r\n    const setState = (nextState) => {\r\n        // Capture location for the view before changing history.\r\n        scrollHistory.capture(history.location.key);\r\n        Object.assign(history, nextState);\r\n        // Set scroll position based on its previous storage value\r\n        history.location.scrollPosition = scrollHistory.get(history.location.key);\r\n        history.length = globalHistory.length;\r\n        transitionManager.notifyListeners(history.location, history.action);\r\n    };\r\n    const handlePopState = (event) => {\r\n        // Ignore extraneous popstate events in WebKit.\r\n        if (!isExtraneousPopstateEvent(globalNavigator, event)) {\r\n            handlePop(getDOMLocation(event.state));\r\n        }\r\n    };\r\n    const handleHashChange = () => {\r\n        handlePop(getDOMLocation(getHistoryState()));\r\n    };\r\n    const handlePop = (location) => {\r\n        if (forceNextPop) {\r\n            forceNextPop = false;\r\n            setState();\r\n        }\r\n        else {\r\n            const action = 'POP';\r\n            transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {\r\n                if (ok) {\r\n                    setState({ action, location });\r\n                }\r\n                else {\r\n                    revertPop(location);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const revertPop = (fromLocation) => {\r\n        const toLocation = history.location;\r\n        // TODO: We could probably make this more reliable by\r\n        // keeping a list of keys we've seen in sessionStorage.\r\n        // Instead, we just default to 0 for keys we don't know.\r\n        let toIndex = allKeys.indexOf(toLocation.key);\r\n        let fromIndex = allKeys.indexOf(fromLocation.key);\r\n        if (toIndex === -1) {\r\n            toIndex = 0;\r\n        }\r\n        if (fromIndex === -1) {\r\n            fromIndex = 0;\r\n        }\r\n        const delta = toIndex - fromIndex;\r\n        if (delta) {\r\n            forceNextPop = true;\r\n            go(delta);\r\n        }\r\n    };\r\n    const initialLocation = getDOMLocation(getHistoryState());\r\n    let allKeys = [initialLocation.key];\r\n    let listenerCount = 0;\r\n    let isBlocked = false;\r\n    // Public interface\r\n    const createHref = (location) => {\r\n        return basename + createPath(location);\r\n    };\r\n    const push = (path, state) => {\r\n        warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' +\r\n            'argument is a location-like object that already has state; it is ignored');\r\n        const action = 'PUSH';\r\n        const location = createLocation(path, state, createKey(keyLength), history.location);\r\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {\r\n            if (!ok) {\r\n                return;\r\n            }\r\n            const href = createHref(location);\r\n            const { key, state } = location;\r\n            if (canUseHistory) {\r\n                globalHistory.pushState({ key, state }, '', href);\r\n                if (forceRefresh) {\r\n                    globalLocation.href = href;\r\n                }\r\n                else {\r\n                    const prevIndex = allKeys.indexOf(history.location.key);\r\n                    const nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\r\n                    nextKeys.push(location.key);\r\n                    allKeys = nextKeys;\r\n                    setState({ action, location });\r\n                }\r\n            }\r\n            else {\r\n                warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n                globalLocation.href = href;\r\n            }\r\n        });\r\n    };\r\n    const replace = (path, state) => {\r\n        warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' +\r\n            'argument is a location-like object that already has state; it is ignored');\r\n        const action = 'REPLACE';\r\n        const location = createLocation(path, state, createKey(keyLength), history.location);\r\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {\r\n            if (!ok) {\r\n                return;\r\n            }\r\n            const href = createHref(location);\r\n            const { key, state } = location;\r\n            if (canUseHistory) {\r\n                globalHistory.replaceState({ key, state }, '', href);\r\n                if (forceRefresh) {\r\n                    globalLocation.replace(href);\r\n                }\r\n                else {\r\n                    const prevIndex = allKeys.indexOf(history.location.key);\r\n                    if (prevIndex !== -1) {\r\n                        allKeys[prevIndex] = location.key;\r\n                    }\r\n                    setState({ action, location });\r\n                }\r\n            }\r\n            else {\r\n                warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\r\n                globalLocation.replace(href);\r\n            }\r\n        });\r\n    };\r\n    const go = (n) => {\r\n        globalHistory.go(n);\r\n    };\r\n    const goBack = () => go(-1);\r\n    const goForward = () => go(1);\r\n    const checkDOMListeners = (delta) => {\r\n        listenerCount += delta;\r\n        if (listenerCount === 1) {\r\n            win.addEventListener(PopStateEvent, handlePopState);\r\n            if (needsHashChangeListener) {\r\n                win.addEventListener(HashChangeEvent, handleHashChange);\r\n            }\r\n        }\r\n        else if (listenerCount === 0) {\r\n            win.removeEventListener(PopStateEvent, handlePopState);\r\n            if (needsHashChangeListener) {\r\n                win.removeEventListener(HashChangeEvent, handleHashChange);\r\n            }\r\n        }\r\n    };\r\n    const block = (prompt = '') => {\r\n        const unblock = transitionManager.setPrompt(prompt);\r\n        if (!isBlocked) {\r\n            checkDOMListeners(1);\r\n            isBlocked = true;\r\n        }\r\n        return () => {\r\n            if (isBlocked) {\r\n                isBlocked = false;\r\n                checkDOMListeners(-1);\r\n            }\r\n            return unblock();\r\n        };\r\n    };\r\n    const listen = (listener) => {\r\n        const unlisten = transitionManager.appendListener(listener);\r\n        checkDOMListeners(1);\r\n        return () => {\r\n            checkDOMListeners(-1);\r\n            unlisten();\r\n        };\r\n    };\r\n    const history = {\r\n        length: globalHistory.length,\r\n        action: 'POP',\r\n        location: initialLocation,\r\n        createHref,\r\n        push,\r\n        replace,\r\n        go,\r\n        goBack,\r\n        goForward,\r\n        block,\r\n        listen,\r\n        win: win\r\n    };\r\n    return history;\r\n};\r\nexport default createBrowserHistory;\r\n","// Adapted from the https://github.com/ReactTraining/history and converted to TypeScript\r\nimport { createLocation, locationsAreEqual, createKey } from './location-utils';\r\nimport { warning } from './log';\r\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './path-utils';\r\nimport createTransitionManager from './createTransitionManager';\r\nimport { getConfirmation, supportsGoWithoutReloadUsingHash } from './dom-utils';\r\nconst HashChangeEvent = 'hashchange';\r\nconst HashPathCoders = {\r\n    hashbang: {\r\n        encodePath: (path) => path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path),\r\n        decodePath: (path) => path.charAt(0) === '!' ? path.substr(1) : path\r\n    },\r\n    noslash: {\r\n        encodePath: stripLeadingSlash,\r\n        decodePath: addLeadingSlash\r\n    },\r\n    slash: {\r\n        encodePath: addLeadingSlash,\r\n        decodePath: addLeadingSlash\r\n    }\r\n};\r\nconst createHashHistory = (win, props = {}) => {\r\n    let forceNextPop = false;\r\n    let ignorePath = null;\r\n    let listenerCount = 0;\r\n    let isBlocked = false;\r\n    const globalLocation = win.location;\r\n    const globalHistory = win.history;\r\n    const canGoWithoutReload = supportsGoWithoutReloadUsingHash(win.navigator);\r\n    const keyLength = (props.keyLength != null) ? props.keyLength : 6;\r\n    const { getUserConfirmation = getConfirmation, hashType = 'slash' } = props;\r\n    const basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\r\n    const { encodePath, decodePath } = HashPathCoders[hashType];\r\n    const getHashPath = () => {\r\n        // We can't use window.location.hash here because it's not\r\n        // consistent across browsers - Firefox will pre-decode it!\r\n        const href = globalLocation.href;\r\n        const hashIndex = href.indexOf('#');\r\n        return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\r\n    };\r\n    const pushHashPath = (path) => (globalLocation.hash = path);\r\n    const replaceHashPath = (path) => {\r\n        const hashIndex = globalLocation.href.indexOf('#');\r\n        globalLocation.replace(globalLocation.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\r\n    };\r\n    const getDOMLocation = () => {\r\n        let path = decodePath(getHashPath());\r\n        warning((!basename || hasBasename(path, basename)), 'You are attempting to use a basename on a page whose URL path does not begin ' +\r\n            'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\r\n        if (basename) {\r\n            path = stripBasename(path, basename);\r\n        }\r\n        return createLocation(path, undefined, createKey(keyLength));\r\n    };\r\n    const transitionManager = createTransitionManager();\r\n    const setState = (nextState) => {\r\n        Object.assign(history, nextState);\r\n        history.length = globalHistory.length;\r\n        transitionManager.notifyListeners(history.location, history.action);\r\n    };\r\n    const handleHashChange = () => {\r\n        const path = getHashPath();\r\n        const encodedPath = encodePath(path);\r\n        if (path !== encodedPath) {\r\n            // Ensure we always have a properly-encoded hash.\r\n            replaceHashPath(encodedPath);\r\n        }\r\n        else {\r\n            const location = getDOMLocation();\r\n            const prevLocation = history.location;\r\n            if (!forceNextPop && locationsAreEqual(prevLocation, location)) {\r\n                return; // A hashchange doesn't always == location change.\r\n            }\r\n            if (ignorePath === createPath(location)) {\r\n                return; // Ignore this change; we already setState in push/replace.\r\n            }\r\n            ignorePath = null;\r\n            handlePop(location);\r\n        }\r\n    };\r\n    const handlePop = (location) => {\r\n        if (forceNextPop) {\r\n            forceNextPop = false;\r\n            setState();\r\n        }\r\n        else {\r\n            const action = 'POP';\r\n            transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {\r\n                if (ok) {\r\n                    setState({ action, location });\r\n                }\r\n                else {\r\n                    revertPop(location);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const revertPop = (fromLocation) => {\r\n        const toLocation = history.location;\r\n        // TODO: We could probably make this more reliable by\r\n        // keeping a list of paths we've seen in sessionStorage.\r\n        // Instead, we just default to 0 for paths we don't know.\r\n        let toIndex = allPaths.lastIndexOf(createPath(toLocation));\r\n        let fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\r\n        if (toIndex === -1) {\r\n            toIndex = 0;\r\n        }\r\n        if (fromIndex === -1) {\r\n            fromIndex = 0;\r\n        }\r\n        const delta = toIndex - fromIndex;\r\n        if (delta) {\r\n            forceNextPop = true;\r\n            go(delta);\r\n        }\r\n    };\r\n    // Ensure the hash is encoded properly before doing anything else.\r\n    const path = getHashPath();\r\n    const encodedPath = encodePath(path);\r\n    if (path !== encodedPath) {\r\n        replaceHashPath(encodedPath);\r\n    }\r\n    const initialLocation = getDOMLocation();\r\n    let allPaths = [createPath(initialLocation)];\r\n    // Public interface\r\n    const createHref = (location) => ('#' + encodePath(basename + createPath(location)));\r\n    const push = (path, state) => {\r\n        warning(state === undefined, 'Hash history cannot push state; it is ignored');\r\n        const action = 'PUSH';\r\n        const location = createLocation(path, undefined, createKey(keyLength), history.location);\r\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {\r\n            if (!ok) {\r\n                return;\r\n            }\r\n            const path = createPath(location);\r\n            const encodedPath = encodePath(basename + path);\r\n            const hashChanged = getHashPath() !== encodedPath;\r\n            if (hashChanged) {\r\n                // We cannot tell if a hashchange was caused by a PUSH, so we'd\r\n                // rather setState here and ignore the hashchange. The caveat here\r\n                // is that other hash histories in the page will consider it a POP.\r\n                ignorePath = path;\r\n                pushHashPath(encodedPath);\r\n                const prevIndex = allPaths.lastIndexOf(createPath(history.location));\r\n                const nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\r\n                nextPaths.push(path);\r\n                allPaths = nextPaths;\r\n                setState({ action, location });\r\n            }\r\n            else {\r\n                warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\r\n                setState();\r\n            }\r\n        });\r\n    };\r\n    const replace = (path, state) => {\r\n        warning(state === undefined, 'Hash history cannot replace state; it is ignored');\r\n        const action = 'REPLACE';\r\n        const location = createLocation(path, undefined, createKey(keyLength), history.location);\r\n        transitionManager.confirmTransitionTo(location, action, getUserConfirmation, (ok) => {\r\n            if (!ok) {\r\n                return;\r\n            }\r\n            const path = createPath(location);\r\n            const encodedPath = encodePath(basename + path);\r\n            const hashChanged = getHashPath() !== encodedPath;\r\n            if (hashChanged) {\r\n                // We cannot tell if a hashchange was caused by a REPLACE, so we'd\r\n                // rather setState here and ignore the hashchange. The caveat here\r\n                // is that other hash histories in the page will consider it a POP.\r\n                ignorePath = path;\r\n                replaceHashPath(encodedPath);\r\n            }\r\n            const prevIndex = allPaths.indexOf(createPath(history.location));\r\n            if (prevIndex !== -1) {\r\n                allPaths[prevIndex] = path;\r\n            }\r\n            setState({ action, location });\r\n        });\r\n    };\r\n    const go = (n) => {\r\n        warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\r\n        globalHistory.go(n);\r\n    };\r\n    const goBack = () => go(-1);\r\n    const goForward = () => go(1);\r\n    const checkDOMListeners = (win, delta) => {\r\n        listenerCount += delta;\r\n        if (listenerCount === 1) {\r\n            win.addEventListener(HashChangeEvent, handleHashChange);\r\n        }\r\n        else if (listenerCount === 0) {\r\n            win.removeEventListener(HashChangeEvent, handleHashChange);\r\n        }\r\n    };\r\n    const block = (prompt = '') => {\r\n        const unblock = transitionManager.setPrompt(prompt);\r\n        if (!isBlocked) {\r\n            checkDOMListeners(win, 1);\r\n            isBlocked = true;\r\n        }\r\n        return () => {\r\n            if (isBlocked) {\r\n                isBlocked = false;\r\n                checkDOMListeners(win, -1);\r\n            }\r\n            return unblock();\r\n        };\r\n    };\r\n    const listen = (listener) => {\r\n        const unlisten = transitionManager.appendListener(listener);\r\n        checkDOMListeners(win, 1);\r\n        return () => {\r\n            checkDOMListeners(win, -1);\r\n            unlisten();\r\n        };\r\n    };\r\n    const history = {\r\n        length: globalHistory.length,\r\n        action: 'POP',\r\n        location: initialLocation,\r\n        createHref,\r\n        push,\r\n        replace,\r\n        go,\r\n        goBack,\r\n        goForward,\r\n        block,\r\n        listen,\r\n        win: win\r\n    };\r\n    return history;\r\n};\r\nexport default createHashHistory;\r\n","import { h } from '@stencil/core';\r\nimport createHistory from '../../utils/createBrowserHistory';\r\nimport createHashHistory from '../../utils/createHashHistory';\r\nimport ActiveRouter from '../../global/active-router';\r\nconst getLocation = (location, root) => {\r\n    // Remove the root URL if found at beginning of string\r\n    const pathname = location.pathname.indexOf(root) == 0 ?\r\n        '/' + location.pathname.slice(root.length) :\r\n        location.pathname;\r\n    return Object.assign({}, location, { pathname });\r\n};\r\nconst HISTORIES = {\r\n    'browser': createHistory,\r\n    'hash': createHashHistory\r\n};\r\n/**\r\n  * @name Router\r\n  * @module ionic\r\n  * @description\r\n */\r\nexport class Router {\r\n    constructor() {\r\n        this.root = '/';\r\n        this.historyType = 'browser';\r\n        // A suffix to append to the page title whenever\r\n        // it's updated through RouteTitle\r\n        this.titleSuffix = '';\r\n        this.routeViewsUpdated = (options = {}) => {\r\n            if (this.history && options.scrollToId && this.historyType === 'browser') {\r\n                const elm = this.history.win.document.getElementById(options.scrollToId);\r\n                if (elm) {\r\n                    return elm.scrollIntoView();\r\n                }\r\n            }\r\n            this.scrollTo(options.scrollTopOffset || this.scrollTopOffset);\r\n        };\r\n    }\r\n    componentWillLoad() {\r\n        this.history = HISTORIES[this.historyType](this.el.ownerDocument.defaultView);\r\n        this.history.listen((location) => {\r\n            location = getLocation(location, this.root);\r\n            this.location = location;\r\n        });\r\n        this.location = getLocation(this.history.location, this.root);\r\n    }\r\n    scrollTo(scrollToLocation) {\r\n        const history = this.history;\r\n        if (scrollToLocation == null || this.isServer || !history) {\r\n            return;\r\n        }\r\n        if (history.action === 'POP' && Array.isArray(history.location.scrollPosition)) {\r\n            return this.queue.write(() => {\r\n                if (history && history.location && Array.isArray(history.location.scrollPosition)) {\r\n                    history.win.scrollTo(history.location.scrollPosition[0], history.location.scrollPosition[1]);\r\n                }\r\n            });\r\n        }\r\n        // okay, the frame has passed. Go ahead and render now\r\n        return this.queue.write(() => {\r\n            history.win.scrollTo(0, scrollToLocation);\r\n        });\r\n    }\r\n    render() {\r\n        if (!this.location || !this.history) {\r\n            return;\r\n        }\r\n        const state = {\r\n            historyType: this.historyType,\r\n            location: this.location,\r\n            titleSuffix: this.titleSuffix,\r\n            root: this.root,\r\n            history: this.history,\r\n            routeViewsUpdated: this.routeViewsUpdated\r\n        };\r\n        return (h(ActiveRouter.Provider, { state: state },\r\n            h(\"slot\", null)));\r\n    }\r\n    static get is() { return \"stencil-router\"; }\r\n    static get properties() { return {\r\n        \"root\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"root\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"'/'\"\r\n        },\r\n        \"historyType\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"HistoryType\",\r\n                \"resolved\": \"\\\"browser\\\" | \\\"hash\\\"\",\r\n                \"references\": {\r\n                    \"HistoryType\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../global/interfaces\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"history-type\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"'browser'\"\r\n        },\r\n        \"titleSuffix\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"title-suffix\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"''\"\r\n        },\r\n        \"scrollTopOffset\": {\r\n            \"type\": \"number\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"number\",\r\n                \"resolved\": \"number | undefined\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"scroll-top-offset\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get contextProps() { return [{\r\n            \"name\": \"isServer\",\r\n            \"context\": \"isServer\"\r\n        }, {\r\n            \"name\": \"queue\",\r\n            \"context\": \"queue\"\r\n        }]; }\r\n    static get states() { return {\r\n        \"location\": {},\r\n        \"history\": {}\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n}\r\n"],"mappings":"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","ignoreList":[]}